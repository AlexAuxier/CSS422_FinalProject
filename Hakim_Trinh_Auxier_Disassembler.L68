00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 2014-12-11 16:05:51

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9       
00000000  =00000000                 10  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 11  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 12  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 13  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 14  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 15  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 16  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 17  seven       EQU     $07
00000000  =00000008                 18  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 19  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 20  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 21  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 22  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 23  fourteen    EQU     $0E         ; defined hex value 14
00000000                            24  
00000000  =00000000                 25  mask0       EQU     %00000000
00000000  =00000001                 26  mask1       EQU     %00000001
00000000  =00000002                 27  mask2       EQU     %00000010
00000000  =00000004                 28  mask3       EQU     %00000100
00000000  =00000008                 29  mask4       EQU     %00001000
00000000  =00000010                 30  mask5       EQU     %00010000
00000000  =00000020                 31  mask6       EQU     %00100000
00000000  =00000040                 32  mask7       EQU     %01000000
00000000  =00000080                 33  mask8       EQU     %10000000
00000000                            34  
00000000  =00000005                 35  maskA       EQU     %00000101
00000000  =0000000A                 36  maskB       EQU     %00001010
00000000  =00000014                 37  maskC       EQU     %00010100
00000000  =00000028                 38  maskD       EQU     %00101000
00000000  =00000050                 39  maskE       EQU     %01010000
00000000  =000000A0                 40  maskF       EQU     %10100000
00000000                            41  
00000000  =000000F0                 42  firstNib    EQU     $F0
00000000  =0000000F                 43  secNib      EQU     $0F
00000000                            44               
00001000                            45              ORG    $1000
00001000                            46  START: 
00001000                            47  ***********************************************************************************************************
00001000                            48  *
00001000                            49  *                   Dissassembler Start
00001000                            50  *
00001000                            51  ***********************************************************************************************************
00001000                            52              ; Dissassemble Start, obtain addr range
00001000  43F9 00003C80             53              LEA         startingMessage, A1
00001006  103C 000E                 54              MOVE.B      #14, D0
0000100A  4E4F                      55              TRAP        #15    
0000100C                            56          
0000100C  103C 0002                 57              MOVE.B      #2, D0
00001010  4E4F                      58              TRAP        #15
00001012                            59      
00001012  4EB9 00003B16             60              JSR         Address
00001018  2042                      61              MOVEA.L     D2, A0
0000101A                            62          
0000101A  43F9 00003CA2             63              LEA         endingMessage, A1
00001020  103C 000E                 64              MOVE.B      #14, D0
00001024  4E4F                      65              TRAP        #15    
00001026                            66      
00001026  103C 0002                 67              MOVE.B      #2, D0
0000102A  4E4F                      68              TRAP        #15
0000102C                            69      
0000102C  4EB9 00003B16             70              JSR         Address
00001032  2442                      71              MOVEA.L     D2, A2
00001034                            72          
00001034  43F9 00003CE1             73              LEA         newline, A1
0000103A  103C 000E                 74              MOVE.B      #14, D0
0000103E  4E4F                      75              TRAP        #15 
00001040                            76            
00001040                            77  ***********************************************************************************************************
00001040                            78  *
00001040                            79  *                   Control Loop
00001040                            80  *
00001040                            81  *       This loop cycles and branches our code by the first nibble of OPCODE binary
00001040                            82  *
00001040                            83  ***********************************************************************************************************
00001040                            84            
00001040  4241                      85  LOOP        CLR         D1                  ; clear out D1
00001042  4242                      86              CLR         D2                  ; clear out D2
00001044  B1CA                      87              CMPA.L      A2, A0              ; compare starting and ending addresses
00001046  6E00 2C34                 88              BGT         endProg             ; if A0 > A1, we've finished, end program
0000104A  1218                      89              MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
0000104C  1401                      90              MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000104E  E882                      91              ASR.L       #four, D2           ; get first nibble in D2
00001050                            92          
00001050  B43C 0000                 93              CMP.B       #zero, D2           ; compare with 0
00001054  6700 0064                 94              BEQ         braZero             ; branch out to zero method
00001058  B43C 0001                 95              CMP.B       #one, D2            ; compare with 1
0000105C  6700 008C                 96              BEQ         braOne              ; branch out to one method
00001060  B43C 0002                 97              CMP.B       #two, D2            ; compare with 2    
00001064  6700 0088                 98              BEQ         braTwo              ; branch out to two method
00001068  B43C 0003                 99              CMP.B       #three, D2          ; compare with 3
0000106C  6700 0084                100              BEQ         braThree            ; branch out to three method
00001070  B43C 0004                101              CMP.B       #four, D2           ; compare with 4
00001074  6700 0080                102              BEQ         braFour             ; branch out to four method
00001078  B43C 0005                103              CMP.B       #five, D2           ; compare with 5
0000107C  6700 0094                104              BEQ         braFive             ; branch out to five method
00001080  B43C 0006                105              CMP.B       #six, D2            ; compare with 6
00001084  6700 0090                106              BEQ         braSix              ; branch out to six method
00001088  B43C 0008                107              CMP.B       #eight, D2          ; compare with 8
0000108C  6700 00B4                108              BEQ         braEight            ; branch out to eight method
00001090  B43C 0009                109              CMP.B       #nine, D2           ; compare with 9
00001094  6700 00C6                110              BEQ         braNine             ; branch out to nine method
00001098  B43C 000B                111              CMP.B       #eleven, D2         ; compare with 11
0000109C  6700 00C2                112              BEQ         braEleven           ; branch out to eleven method
000010A0  B43C 000C                113              CMP.B       #twelve, D2         ; compare with 12
000010A4  6700 00D4                114              BEQ         braTwelve           ; branch out to twelve method
000010A8  B43C 000D                115              CMP.B       #thirteen, D2       ; compare with 13
000010AC  6700 00D0                116              BEQ         braThirteen         ; branch out to thirteen method
000010B0  B43C 000E                117              CMP.B       #fourteen, D2       ; compare with 14
000010B4  6700 011A                118              BEQ         braFourteen         ; branch out to fourteen method
000010B8  6086                     119              BRA         loop
000010BA                           120  
000010BA                           121  ***********************************************************************************************************
000010BA                           122  *
000010BA                           123  *                   Nibble Branch Section
000010BA                           124  *
000010BA                           125  *       This section decides which nibble goes to the corresponding opcode
000010BA                           126  *
000010BA                           127  *********************************************************************************************************** 
000010BA                           128          
000010BA                           129  braZero     
000010BA  4242                     130              CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
000010BC  1401                     131              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010BE  C43C 000F                132              AND.B       #secNib, D2             ; set first nibble to 0
000010C2                           133  
000010C2  B43C 0000                134              CMP.B       #zero, D2           ; compare second nibble to 0
000010C6  6700 017C                135              BEQ         opORI               ; branch to ORI method
000010CA  B43C 000C                136              CMP.B       #twelve, D2         ; compare second nibble to 12
000010CE  6700 02DC                137              BEQ         opCMPI              ; branch to CMPI method
000010D2  B43C 0008                138              CMP.B       #eight,D2           ; Test for static BCLR
000010D6  6700 0462                139              BEQ         opBCLR
000010DA  C47C 0001                140              AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010DE  B43C 0001                141              CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010E2  6700 04BA                142              BEQ         opDynBCLR
000010E6  6000 2B8E                143              BRA         printInvalid
000010EA                           144          
000010EA                           145  braOne      
000010EA  6000 0520                146              BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010EE                           147  
000010EE                           148  braTwo      
000010EE  6000 05A0                149              BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010F2                           150  
000010F2                           151  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010F2  6000 0698                152              BRA         opMOVEW
000010F6                           153  
000010F6  4242                     154  braFour     CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010F8  1401                     155              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010FA  C43C 000F                156              AND.B       #secNib, D2             ; set first nibble to 0
000010FE                           157   
000010FE  B43C 0004                158              CMP.B       #four, D2           ; compare second nibble to 4
00001102  6700 077E                159              BEQ         opNEG               ; branch to NEG method
00001106  B43C 000E                160              CMP.B       #fourteen, D2       ; compare second nibble to E
0000110A  6700 0864                161              BEQ         opRTSJSR            ; branch to JSR or RTS method
0000110E  6000 08D6                162              BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
00001112                           163  
00001112                           164  braFive     
00001112  6000 10A6                165              BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
00001116                           166  
00001116                           167  braSix      
00001116  4242                     168              CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
00001118  1401                     169              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000111A  C43C 000F                170              AND.B       #$0F, D2             ; set first nibble to 0
0000111E                           171   
0000111E  B43C 0000                172              CMP.B       #zero, D2           ; compare second nibble to 0
00001122  6700 0F7E                173              BEQ         opBRA               ; branch to BRA method
00001126  B43C 0005                174              CMP.B       #five, D2           ; compare second nibble to 5
0000112A  6700 0FAE                175              BEQ         opBCS               ; branch to BCS method
0000112E  B43C 0008                176              CMP.B       #eight, D2          ; compare second nibble to 8
00001132  6700 0FDE                177              BEQ         opBVC               ; branch to BCS method
00001136  B43C 000C                178              CMP.B       #twelve, D2         ; compare second nibble to 12
0000113A  6700 100E                179              BEQ         opBGE               ; branch to BGE method
0000113E  6000 1042                180              BRA         opBLT               ; otherwise, branch to BLT method
00001142                           181  
00001142                           182  braEight                                ; there are two opCodes available DIVS, or OR
00001142  4242                     183              CLR         D2
00001144  E141                     184              ASL         #8,D1
00001146  1218                     185              MOVE.B      (A0)+,D1
00001148  3401                     186              MOVE.W      D1,D2
0000114A  EC42                     187              ASR         #six,D2
0000114C  C47C 0007                188              AND         #$07,D2
00001150  B43C 0007                189              CMP.B       #seven,D2
00001154  6700 0B08                190              BEQ         opDIVS              ; If bits 8 - 6 are equal to 7, we have DIVS
00001158  6000 09B2                191              BRA         opOR                ; else opcode is OR
0000115C                           192  
0000115C                           193  braNine     
0000115C  6000 0DEC                194              BRA         opSUB               ; we know that there is only one opcode that is SUB
00001160                           195  
00001160                           196  braEleven                               ; there are two opCodes available EOR, or CMP
00001160  4242                     197              CLR         D2
00001162  E141                     198              ASL         #8,D1
00001164  1218                     199              MOVE.B      (A0)+,D1
00001166  3401                     200              MOVE.W      D1,D2
00001168  EC42                     201              ASR         #six,D2
0000116A  C47C 0007                202              AND         #$07,D2
0000116E  B43C 0003                203              CMP.B       #three,D2
00001172  6D00 0C96                204              BLT         opCMP               ; If opmode bits are less than 3, we have CMP
00001176  6000 0B44                205              BRA         opEOR               ; Else its EOR
0000117A                           206  
0000117A                           207  braTwelve   
0000117A  6000 10BE                208              BRA         opMULS              ; we know that there is only one opcode that is MULS    
0000117E                           209    
0000117E                           210  braThirteen 
0000117E  E141                     211              ASL         #eight, D1          ; we need the whole word to compare between add and adda, so move over the current byte 
00001180  1218                     212              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
00001182                           213              
00001182  4242                     214              CLR         D2                  ; clear D2
00001184  3401                     215              MOVE.W      D1, D2              ; copy opcode to D2
00001186  EC42                     216              ASR         #six, D2            ; shift the bits right to get size and type
00001188  C47C 0007                217              AND         #seven,D2           ; clear out all but first 3 bits
0000118C                           218              
0000118C  B43C 0000                219              CMP.B       #zero,D2            ; compare 0 to D2
00001190  6700 110C                220              BEQ         opADDB              ; we know its ADDB
00001194  B43C 0001                221              CMP.B       #one, D2            ; compare 1 to D2
00001198  6700 1170                222              BEQ         opADDW              ; we know its ADDW
0000119C  B43C 0002                223              CMP.B       #two, D2            ; compare 2 to D2
000011A0  6700 11D4                224              BEQ         opADDL              ; we know its ADDL
000011A4  B43C 0003                225              CMP.B       #three, D2          ; compare 3 to D2
000011A8  6700 1240                226              BEQ         opADDAW             ; we know its ADDAW
000011AC  B43C 0004                227              CMP.B       #four, D2           ; compare 4 to D2
000011B0  6700 10EC                228              BEQ         opADDB              ; we know its ADDB
000011B4  B43C 0005                229              CMP.B       #five, D2           ; compare 5 to D2
000011B8  6700 1150                230              BEQ         opADDW              ; we know its ADDW
000011BC  B43C 0006                231              CMP.B       #six, D2            ; compare 6 to D2
000011C0  6700 11B4                232              BEQ         opADDL              ; we know its ADDL
000011C4  B43C 0007                233              CMP.B       #seven, D2          ; compare 7 to D2
000011C8  6700 1290                234              BEQ         opADDAL             ; we know its ADDAL
000011CC  6000 2AA8                235              BRA         printInvalid        ; invalid opcode
000011D0                           236               
000011D0                           237  braFourteen 
000011D0  E141                     238              ASL.W       #eight,D1           ; we need the whole word to compare between add and adda, so move over the current byte
000011D2  1218                     239              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
000011D4                           240              
000011D4  4242                     241              CLR         D2                  ; clear D2
000011D6  3401                     242              MOVE.W      D1, D2              ; copy opcode to D2
000011D8  EC42                     243              ASR         #six, D2            ; shift the bits right to get size
000011DA  C47C 0003                244              AND         #03,D2
000011DE                           245          
000011DE  B43C 0003                246              CMP.B       #three, D2          ; if the size is three, we are shifting memory
000011E2  6700 0006                247              BEQ         memShifts           ; go to memory shift
000011E6  6000 0040                248              BRA         regShifts           ; else go to register shift
000011EA                           249  
000011EA                           250  memShifts   
000011EA  4242                     251              CLR         D2             
000011EC  3401                     252              MOVE.W      D1, D2              ; clear out D2 and copy D1 back in
000011EE  E082                     253              ASR.L       #eight,D2           ; move to get first byte back
000011F0  C47C 000F                254              AND         #secNib, D2         ; set first nibble to 0
000011F4                           255   
000011F4  B43C 0000                256              CMP.B       #zero, D2           ; compare second nibble to 0
000011F8  6700 131C                257              BEQ         opASR               ; branch to ASR method
000011FC  B43C 0001                258              CMP.B       #one, D2            ; compare second nibble to 1
00001200  6700 12C8                259              BEQ         opASL               ; branch to ASL method
00001204  B43C 0002                260              CMP.B       #two, D2            ; compare second nibble to 2
00001208  6700 13A4                261              BEQ         opLSR               ; branch to LSR method
0000120C  B43C 0003                262              CMP.B       #three, D2          ; compare second nibble to 3
00001210  6700 1350                263              BEQ         opLSL               ; branch to LSL method
00001214  B43C 0006                264              CMP.B       #six, D2            ; compare second nibble to 6
00001218  6700 142C                265              BEQ         opROR               ; branch to ROR method
0000121C  B43C 0007                266              CMP.B       #seven, D2          ; compare second nibble to 7
00001220  6700 13D8                267              BEQ         opROL               ; branch to ROL method
00001224  6000 2A50                268              BRA         printInvalid        ; otherwise, invalid
00001228                           269              
00001228                           270  regShifts   
00001228  B43C 0000                271              CMP.B       #zero, D2           ; if size is 0, we are shifting a byte
0000122C  6700 1464                272              BEQ         memSB               ; branch to register shift byte
00001230  B43C 0001                273              CMP.B       #one, D2            ; if size is 1, we are shifting a word
00001234  6700 16E6                274              BEQ         memSW               ; branch to register shift word
00001238  B43C 0002                275              CMP.B       #two, D2            ; if size is 1, we are shifting a long
0000123C  6700 1968                276              BEQ         memSL               ; branch to register shift long
00001240  6000 2A34                277              BRA         printInvalid        ; otherwise, invalid
00001244                           278              
00001244                           279  ***********************************************************************************************************
00001244                           280  *
00001244                           281  *                   ORI OPCODE
00001244                           282  *
00001244                           283  ***********************************************************************************************************
00001244                           284  
00001244                           285  opORI       
00001244  43F9 00003CF6            286              LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
0000124A  103C 000E                287              MOVE.B      #14, D0             ; command for trap call to display message
0000124E  4E4F                     288              TRAP        #15                 ; trap call
00001250                           289          
00001250  1218                     290              MOVE.B      (A0)+, D1
00001252  1401                     291              MOVE.B      D1,D2               ; copy data over
00001254  EC42                     292              ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001256  B43C 0000                293              CMP.B       #zero,D2
0000125A  6700 0016                294              BEQ         opORIB
0000125E  B43C 0001                295              CMP.B       #one,D2
00001262  6700 0074                296              BEQ         opORIW
00001266  B43C 0002                297              CMP.B       #two,D2
0000126A  6700 00D2                298              BEQ         opORIL
0000126E                           299          
0000126E  6000 2A06                300              BRA         printInvalid
00001272                           301          
00001272                           302  opORIB      
00001272  43F9 00003D7F            303              LEA         dispByte, A1        ; Display byte
00001278  103C 000E                304              MOVE.B      #14, D0             ; command for trap call to display message
0000127C  4E4F                     305              TRAP        #15                 ; trap call
0000127E                           306          
0000127E  43F9 00003CE5            307              LEA         space, A1           ; Display space
00001284  103C 000E                308              MOVE.B      #14, D0             ; command for trap call to display message
00001288  4E4F                     309              TRAP        #15                 ; trap call
0000128A                           310          
0000128A  4244                     311              CLR         D4
0000128C  1801                     312              MOVE.B      D1,D4
0000128E  E644                     313              ASR         #three,D4
00001290  C87C 0007                314              AND         #seven,D4
00001294  4245                     315              CLR         D5        
00001296  1A01                     316              MOVE.B      D1,D5
00001298  CA7C 0007                317              AND         #seven,D5
0000129C                           318          
0000129C  4243                     319              CLR         D3
0000129E  4242                     320              CLR         D2
000012A0  163C 0004                321              MOVE.B      #four,D3
000012A4  143C 0007                322              MOVE.B      #seven,D2
000012A8                           323  
000012A8  4EB9 00002F08            324              JSR         printEA
000012AE                           325          
000012AE  43F9 00003CEC            326              LEA         comma, A1           ; Display space
000012B4  103C 000E                327              MOVE.B      #14, D0             ; command for trap call to display message
000012B8  4E4F                     328              TRAP        #15                 ; trap call
000012BA                           329          
000012BA  4242                     330              CLR         D2
000012BC  4243                     331              CLR         D3
000012BE  1404                     332              MOVE.B      D4,D2
000012C0  1605                     333              MOVE.B      D5,D3
000012C2                           334          
000012C2  4EB9 00002F08            335              JSR         printEA
000012C8                           336          
000012C8  43F9 00003CE1            337              LEA         newLine, A1           ; Display space
000012CE  103C 000E                338              MOVE.B      #14, D0             ; command for trap call to display message
000012D2  4E4F                     339              TRAP        #15                 ; trap call
000012D4                           340          
000012D4  6000 FD6A                341              BRA         LOOP
000012D8                           342          
000012D8                           343  opORIW      
000012D8  43F9 00003D82            344              LEA         dispWord, A1        ; Display byte
000012DE  103C 000E                345              MOVE.B      #14, D0             ; command for trap call to display message
000012E2  4E4F                     346              TRAP        #15                 ; trap call
000012E4                           347          
000012E4  43F9 00003CE5            348              LEA         space, A1           ; Display space
000012EA  103C 000E                349              MOVE.B      #14, D0             ; command for trap call to display message
000012EE  4E4F                     350              TRAP        #15                 ; trap call
000012F0                           351          
000012F0  4244                     352              CLR         D4
000012F2  1801                     353              MOVE.B      D1,D4
000012F4  E644                     354              ASR         #three,D4
000012F6  C87C 0007                355              AND         #seven,D4
000012FA  4245                     356              CLR         D5        
000012FC  1A01                     357              MOVE.B      D1,D5
000012FE  CA7C 0007                358              AND         #seven,D5
00001302                           359          
00001302  4243                     360              CLR         D3
00001304  4242                     361              CLR         D2
00001306  163C 0004                362              MOVE.B      #four,D3
0000130A  143C 0007                363              MOVE.B      #seven,D2
0000130E                           364          
0000130E  4EB9 00002F08            365              JSR         printEA
00001314                           366          
00001314  43F9 00003CEC            367              LEA         comma, A1           ; Display space
0000131A  103C 000E                368              MOVE.B      #14, D0             ; command for trap call to display message
0000131E  4E4F                     369              TRAP        #15                 ; trap call
00001320                           370          
00001320  4242                     371              CLR         D2
00001322  4243                     372              CLR         D3
00001324  1404                     373              MOVE.B      D4,D2
00001326  1605                     374              MOVE.B      D5,D3
00001328                           375                  
00001328  4EB9 00002F08            376              JSR         printEA
0000132E                           377          
0000132E  43F9 00003CE1            378              LEA         newLine, A1           ; Display space
00001334  103C 000E                379              MOVE.B      #14, D0             ; command for trap call to display message
00001338  4E4F                     380              TRAP        #15                 ; trap call
0000133A                           381          
0000133A  6000 FD04                382              BRA         LOOP
0000133E                           383       
0000133E                           384  opORIL      
0000133E  43F9 00003D85            385              LEA         dispLong, A1        ; Display byte
00001344  103C 000E                386              MOVE.B      #14, D0             ; command for trap call to display message
00001348  4E4F                     387              TRAP        #15                 ; trap call
0000134A                           388          
0000134A  43F9 00003CE5            389              LEA         space, A1           ; Display space
00001350  103C 000E                390              MOVE.B      #14, D0             ; command for trap call to display message
00001354  4E4F                     391              TRAP        #15                 ; trap call
00001356                           392          
00001356  4244                     393              CLR         D4
00001358  1801                     394              MOVE.B      D1,D4
0000135A  E644                     395              ASR         #three,D4
0000135C  C87C 0007                396              AND         #seven,D4
00001360  4245                     397              CLR         D5        
00001362  1A01                     398              MOVE.B      D1,D5
00001364  CA7C 0007                399              AND         #seven,D5
00001368  1C3C 0001                400              MOVE.B      #one,D6
0000136C                           401          
0000136C  4243                     402              CLR         D3
0000136E  4242                     403              CLR         D2
00001370  163C 0004                404              MOVE.B      #four,D3
00001374  143C 0007                405              MOVE.B      #seven,D2      
00001378                           406          
00001378  4EB9 00002F08            407              JSR         printEA        
0000137E                           408          
0000137E  4243                     409              CLR         D3
00001380  4242                     410              CLR         D2
00001382  163C 0004                411              MOVE.B      #four,D3
00001386  143C 0007                412              MOVE.B      #seven,D2
0000138A                           413          
0000138A  43F9 00003CEC            414              LEA         comma, A1           ; Display space
00001390  103C 000E                415              MOVE.B      #14, D0             ; command for trap call to display message
00001394  4E4F                     416              TRAP        #15                 ; trap call
00001396                           417          
00001396  4EB9 00002F08            418              JSR         printEA
0000139C                           419          
0000139C  43F9 00003CE1            420              LEA         newLine, A1           ; Display space
000013A2  103C 000E                421              MOVE.B      #14, D0             ; command for trap call to display message
000013A6  4E4F                     422              TRAP        #15                 ; trap call
000013A8                           423          
000013A8  6000 FC96                424              BRA         LOOP
000013AC                           425          
000013AC                           426  ***********************************************************************************************************
000013AC                           427  *
000013AC                           428  *                   CMPI OPCODE
000013AC                           429  *
000013AC                           430  ***********************************************************************************************************
000013AC                           431          
000013AC                           432  opCMPI           
000013AC  1218                     433              MOVE.B      (A0)+, D1
000013AE  1401                     434              MOVE.B      D1,D2               ; copy data over
000013B0  EC42                     435              ASR         #6,D2               ; shifts 6 bits over to read just the size        
000013B2  B43C 0000                436              CMP.B       #zero,D2
000013B6  6700 0016                437              BEQ         opCMPIB
000013BA  B43C 0001                438              CMP.B       #one,D2
000013BE  6700 0080                439              BEQ         opCMPIW
000013C2  B43C 0002                440              CMP.B       #two,D2
000013C6  6700 00FC                441              BEQ         opCMPIL
000013CA  6000 21B4                442              BRA         invalid
000013CE                           443  
000013CE                           444  opCMPIB 
000013CE  43F9 00003CFA            445              LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000013D4  103C 000E                446              MOVE.B      #14, D0             ; command for trap call to display message
000013D8  4E4F                     447              TRAP        #15                 ; trap call
000013DA                           448          
000013DA  43F9 00003D7F            449              LEA         dispByte, A1        ; Display byte
000013E0  103C 000E                450              MOVE.B      #14, D0             ; command for trap call to display message
000013E4  4E4F                     451              TRAP        #15                 ; trap call
000013E6                           452          
000013E6  43F9 00003CE5            453              LEA         space, A1           ; Display space
000013EC  103C 000E                454              MOVE.B      #14, D0             ; command for trap call to display message
000013F0  4E4F                     455              TRAP        #15                 ; trap call
000013F2                           456          
000013F2  4244                     457              CLR         D4
000013F4  1801                     458              MOVE.B      D1,D4
000013F6  E644                     459              ASR         #three,D4
000013F8  C87C 0007                460              AND         #seven,D4
000013FC  4245                     461              CLR         D5        
000013FE  1A01                     462              MOVE.B      D1,D5
00001400  CA7C 0007                463              AND         #seven,D5
00001404                           464          
00001404  4243                     465              CLR         D3
00001406  4242                     466              CLR         D2
00001408  163C 0004                467              MOVE.B      #four,D3
0000140C  143C 0007                468              MOVE.B      #seven,D2      
00001410                           469          
00001410  4EB9 00002F08            470              JSR         printEA  
00001416                           471              
00001416  43F9 00003CEC            472              LEA         comma, A1           ; Display space
0000141C  103C 000E                473              MOVE.B      #14, D0             ; command for trap call to display message
00001420  4E4F                     474              TRAP        #15                 ; trap call
00001422                           475          
00001422  4242                     476              CLR         D2
00001424  4243                     477              CLR         D3
00001426  1404                     478              MOVE.B      D4,D2
00001428  1605                     479              MOVE.B      D5,D3        
0000142A                           480          
0000142A  4EB9 00002F08            481              JSR         printEA
00001430                           482          
00001430  43F9 00003CE1            483              LEA         newLine, A1           ; Display space
00001436  103C 000E                484              MOVE.B      #14, D0             ; command for trap call to display message
0000143A  4E4F                     485              TRAP        #15                 ; trap call
0000143C                           486  
0000143C  6000 FC02                487              BRA         LOOP
00001440                           488  
00001440                           489  opCMPIW 
00001440  43F9 00003CFA            490              LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001446  103C 000E                491              MOVE.B      #14, D0             ; command for trap call to display message
0000144A  4E4F                     492              TRAP        #15                 ; trap call
0000144C                           493          
0000144C  43F9 00003D82            494              LEA         dispWord, A1        ; Display byte
00001452  103C 000E                495              MOVE.B      #14, D0             ; command for trap call to display message
00001456  4E4F                     496              TRAP        #15                 ; trap call
00001458                           497          
00001458  43F9 00003CE5            498              LEA         space, A1           ; Display space
0000145E  103C 000E                499              MOVE.B      #14, D0             ; command for trap call to display message
00001462  4E4F                     500              TRAP        #15                 ; trap call
00001464                           501          
00001464  4244                     502              CLR         D4
00001466  1801                     503              MOVE.B      D1,D4
00001468  E644                     504              ASR         #three,D4
0000146A  C87C 0007                505              AND         #seven,D4
0000146E  4245                     506              CLR         D5        
00001470  1A01                     507              MOVE.B      D1,D5
00001472  CA7C 0007                508              AND         #seven,D5
00001476                           509          
00001476  4243                     510              CLR         D3
00001478  4242                     511              CLR         D2
0000147A  163C 0004                512              MOVE.B      #four,D3
0000147E  143C 0007                513              MOVE.B      #seven,D2      
00001482                           514          
00001482  4EB9 00002F08            515              JSR         printEA  
00001488                           516          
00001488  43F9 00003CE8            517              LEA         hashTag, A1           ; Display space
0000148E  103C 000E                518              MOVE.B      #14, D0             ; command for trap call to display message
00001492  4E4F                     519              TRAP        #15                 ; trap call
00001494                           520          
00001494  103C 0003                521              MOVE.B      #3, D0
00001498  4E4F                     522              TRAP        #15
0000149A                           523          
0000149A  43F9 00003CEC            524              LEA         comma, A1           ; Display space
000014A0  103C 000E                525              MOVE.B      #14, D0             ; command for trap call to display message
000014A4  4E4F                     526              TRAP        #15                 ; trap call
000014A6                           527  
000014A6  4242                     528              CLR         D2
000014A8  4243                     529              CLR         D3
000014AA  1404                     530              MOVE.B      D4,D2
000014AC  1605                     531              MOVE.B      D5,D3       
000014AE                           532          
000014AE  4EB9 00002F08            533              JSR         printEA
000014B4                           534          
000014B4  43F9 00003CE1            535              LEA         newLine, A1           ; Display space
000014BA  103C 000E                536              MOVE.B      #14, D0             ; command for trap call to display message
000014BE  4E4F                     537              TRAP        #15                 ; trap call
000014C0  6000 FB7E                538              BRA         LOOP
000014C4                           539  
000014C4                           540  opCMPIL 
000014C4  43F9 00003CFA            541              LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000014CA  103C 000E                542              MOVE.B      #14, D0             ; command for trap call to display message
000014CE  4E4F                     543              TRAP        #15                 ; trap call
000014D0                           544          
000014D0  43F9 00003D85            545              LEA         dispLong, A1        ; Display byte
000014D6  103C 000E                546              MOVE.B      #14, D0             ; command for trap call to display message
000014DA  4E4F                     547              TRAP        #15                 ; trap call
000014DC                           548          
000014DC  43F9 00003CE5            549              LEA         space, A1           ; Display space
000014E2  103C 000E                550              MOVE.B      #14, D0             ; command for trap call to display message
000014E6  4E4F                     551              TRAP        #15                 ; trap call
000014E8                           552          
000014E8  4244                     553              CLR         D4
000014EA  1801                     554              MOVE.B      D1,D4
000014EC  E644                     555              ASR         #three,D4
000014EE  C87C 0007                556              AND         #seven,D4
000014F2  4245                     557              CLR         D5        
000014F4  1A01                     558              MOVE.B      D1,D5
000014F6  CA7C 0007                559              AND         #seven,D5
000014FA                           560          
000014FA  4243                     561              CLR         D3
000014FC  4242                     562              CLR         D2
000014FE  163C 0004                563              MOVE.B      #four,D3
00001502  143C 0007                564              MOVE.B      #seven,D2      
00001506  1C3C 0001                565              MOVE.B      #one,D6
0000150A                           566          
0000150A  4EB9 00002F08            567              JSR         printEA  
00001510                           568          
00001510  43F9 00003CEC            569              LEA         comma, A1           ; Display space
00001516  103C 000E                570              MOVE.B      #14, D0             ; command for trap call to display message
0000151A  4E4F                     571              TRAP        #15                 ; trap call
0000151C                           572          
0000151C  4242                     573              CLR         D2
0000151E  4243                     574              CLR         D3
00001520  1404                     575              MOVE.B      D4,D2
00001522  1605                     576              MOVE.B      D5,D3              
00001524                           577          
00001524  4EB9 00002F08            578              JSR         printEA
0000152A                           579          
0000152A  43F9 00003CE1            580              LEA         newLine, A1           ; Display space
00001530  103C 000E                581              MOVE.B      #14, D0             ; command for trap call to display message
00001534  4E4F                     582              TRAP        #15                 ; trap call
00001536                           583          
00001536  6000 FB08                584              BRA         LOOP
0000153A                           585          
0000153A                           586  ***********************************************************************************************************
0000153A                           587  *
0000153A                           588  *                   BCLR OPCODE
0000153A                           589  *
0000153A                           590  ***********************************************************************************************************
0000153A                           591  
0000153A                           592  opBCLR      
0000153A  43F9 00003CFF            593              LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001540  103C 000E                594              MOVE.B      #14, D0             ; command for trap call to display message
00001544  4E4F                     595              TRAP        #15                 ; trap call
00001546                           596  
00001546  43F9 00003CE5            597              LEA         space, A1           ; Display space
0000154C  103C 000E                598              MOVE.B      #14, D0             ; command for trap call to display message
00001550  4E4F                     599              TRAP        #15                 ; trap call
00001552                           600                  
00001552  4242                     601              CLR         D2
00001554  1218                     602              MOVE.B      (A0)+, D1
00001556  1401                     603              MOVE.B      D1,D2               ; copy data over
00001558  E642                     604              ASR         #three,D2           ; Shift to the right to remove register
0000155A  C47C 0007                605              AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
0000155E                           606                  
0000155E  4243                     607              CLR         D3                  ; Clear D3 so we can move D1 in
00001560  1601                     608              MOVE.B      D1,D3               ; Move othr byte in
00001562  C67C 0007                609              AND         #seven,D3           ; Set everything besides register to 0
00001566                           610                 
00001566  4241                     611              CLR         D1
00001568  3218                     612              MOVE.W      (A0)+, D1
0000156A                           613                 
0000156A                           614                  
0000156A  43F9 00003CE8            615              LEA         hashTag, A1           ; Display space
00001570  103C 000E                616              MOVE.B      #14, D0             ; command for trap call to display message
00001574  4E4F                     617              TRAP        #15                 ; trap call
00001576                           618          
00001576  103C 0003                619              MOVE.B      #3, D0
0000157A  4E4F                     620              TRAP        #15
0000157C                           621          
0000157C  43F9 00003CEC            622              LEA         comma, A1           ; Display space
00001582  103C 000E                623              MOVE.B      #14, D0             ; command for trap call to display message
00001586  4E4F                     624              TRAP        #15                 ; trap call
00001588                           625                  
00001588  4EB9 00002F08            626              JSR         printEA
0000158E                           627          
0000158E  43F9 00003CE1            628              LEA         newLine, A1           ; Display space
00001594  103C 000E                629              MOVE.B      #14, D0             ; command for trap call to display message
00001598  4E4F                     630              TRAP        #15                 ; trap call
0000159A                           631                  
0000159A  6000 FAA4                632              BRA         LOOP                
0000159E                           633          
0000159E                           634  opDynBCLR       
0000159E  4241                     635              CLR         D1
000015A0  1218                     636              MOVE.B      (A0)+,D1            ; Copy second byte in
000015A2  1601                     637              MOVE.B      D1,D3               ; Will use D4 to store in the source register
000015A4  E243                     638              ASR         #one,D3             ; Shift register over to the end
000015A6  C67C 0007                639              AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
000015AA                           640                  
000015AA  1401                     641              MOVE.B      D1,D2
000015AC  EC42                     642              ASR         #six,D2             ; Removing mode and register to check BCLR bits
000015AE  B47C 0002                643              CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
000015B2  6600 26C2                644              BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
000015B6                           645  
000015B6                           646                  
000015B6  43F9 00003CFF            647              LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
000015BC  103C 000E                648              MOVE.B      #14, D0             ; command for trap call to display message
000015C0  4E4F                     649              TRAP        #15                 ; trap call  
000015C2                           650                  
000015C2  43F9 00003CE5            651              LEA         space, A1           ; Display space
000015C8  103C 000E                652              MOVE.B      #14, D0             ; command for trap call to display message
000015CC  4E4F                     653              TRAP        #15                 ; trap call
000015CE                           654                  
000015CE  143C 0000                655              MOVE.B      #zero,D2                
000015D2  4EB9 00002F08            656              JSR         printEA
000015D8                           657                  
000015D8  43F9 00003CEC            658              LEA         comma, A1           ; Display space
000015DE  103C 000E                659              MOVE.B      #14, D0             ; command for trap call to display message
000015E2  4E4F                     660              TRAP        #15                 ; trap call
000015E4                           661                
000015E4  4242                     662              CLR         D2
000015E6  1401                     663              MOVE.B      D1,D2               ; Using D2 to store EA mode
000015E8  E642                     664              ASR         #three,D2           ; Remove/shift the register out
000015EA  C47C 0007                665              AND         #seven,D2           ; Change all bits except for the mode bits to 0
000015EE                           666                  
000015EE  4243                     667              CLR         D3                  ; Clearing D3 to avoid mashing data
000015F0  1601                     668              MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000015F2  C67C 0007                669              AND         #seven,D3           ; Change all bits except for register bits to 0
000015F6                           670              
000015F6  4EB9 00002F08            671              JSR         printEA
000015FC                           672          
000015FC  43F9 00003CE1            673              LEA         newLine, A1           ; Display space
00001602  103C 000E                674              MOVE.B      #14, D0             ; command for trap call to display message
00001606  4E4F                     675              TRAP        #15                 ; trap call            
00001608                           676  
00001608                           677  
00001608  6000 FA36                678              BRA         LOOP                ; go back to the loop   
0000160C                           679                  
0000160C                           680  ***********************************************************************************************************
0000160C                           681  *
0000160C                           682  *                   MOVE OPCODE
0000160C                           683  *                   MOVEA OPCODE
0000160C                           684  *
0000160C                           685  ***********************************************************************************************************
0000160C                           686   
0000160C                           687  opMOVEB 
0000160C  43F9 00003D04            688              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
00001612  103C 000E                689              MOVE.B      #14, D0             ; command for trap call to display message
00001616  4E4F                     690              TRAP        #15                 ; trap call
00001618  43F9 00003D7F            691              LEA         dispByte, A1        ; display byte
0000161E  103C 000E                692              MOVE.B      #14, D0             ; command for trap call to display message
00001622  4E4F                     693              TRAP        #15                 ; trap call
00001624  43F9 00003CE5            694              LEA         space, A1           ; create spaces
0000162A  103C 000E                695              MOVE.B      #14, D0             ; command for trap call to display message
0000162E  4E4F                     696              TRAP        #15                 ; trap call
00001630                           697          
00001630                           698          
00001630  4245                     699              CLR         D5                  ; Clear D5
00001632  1A01                     700              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001634  E245                     701              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001636  CA7C 0007                702              AND         #seven,D5
0000163A                           703          
0000163A  4244                     704              CLR         D4                  ; Clear out D4
0000163C  1801                     705              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000163E  C87C 0001                706              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001642                           707          
00001642  4241                     708              CLR          D1
00001644  4242                     709              CLR          D2
00001646  1218                     710              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001648  1401                     711              MOVE.B      D1,D2
0000164A  EC42                     712              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000164C  D842                     713              ADD         D2,D4               ; Adds the remaining bits to D4
0000164E                           714          
0000164E  4242                     715              CLR         D2
00001650  1401                     716              MOVE.B      D1,D2               ; Copy new byte over to D2
00001652  E642                     717              ASR         #three,D2           ; Shift source register out
00001654  C47C 0007                718              AND         #seven,D2           ; Set everything to 0 except for the mode
00001658                           719          
00001658  4243                     720              CLR         D3
0000165A  1601                     721              MOVE.B      D1,D3
0000165C  C67C 0007                722              AND         #seven,D3
00001660                           723          
00001660  4EB9 00002F08            724              JSR         printEA
00001666                           725          
00001666  43F9 00003CEC            726              LEA         comma, A1           ; Display space
0000166C  103C 000E                727              MOVE.B      #14, D0             ; command for trap call to display message
00001670  4E4F                     728              TRAP        #15                 ; trap call
00001672                           729          
00001672  4242                     730              CLR         D2
00001674  4243                     731              CLR         D3
00001676  1404                     732              MOVE.B      D4,D2
00001678  1605                     733              MOVE.B      D5,D3
0000167A                           734          
0000167A  4EB9 00002F08            735              JSR         printEA
00001680                           736          
00001680  43F9 00003CE1            737              LEA         newLine, A1           ; Display space
00001686  103C 000E                738              MOVE.B      #14, D0             ; command for trap call to display message
0000168A  4E4F                     739              TRAP        #15                 ; trap call            
0000168C                           740  
0000168C  6000 F9B2                741              BRA         LOOP                ; go back to the loop
00001690                           742          
00001690                           743  opMOVEL     
00001690  4245                     744              CLR         D5                  ; Clear D5
00001692  1A01                     745              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001694  E245                     746              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001696  CA7C 0007                747              AND         #seven,D5
0000169A                           748          
0000169A  4244                     749              CLR         D4                  ; Clear out D4
0000169C  1801                     750              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000169E  C87C 0001                751              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
000016A2                           752          
000016A2  4241                     753              CLR          D1
000016A4  4242                     754              CLR          D2
000016A6  1218                     755              MOVE.B      (A0)+,D1            ; Copy byte into D1
000016A8  1401                     756              MOVE.B      D1,D2
000016AA  EC42                     757              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000016AC  D842                     758              ADD         D2,D4               ; Adds the remaining bits to D4
000016AE                           759          
000016AE  B87C 0001                760              CMP         #one,D4             ; Check if it is MOVEA
000016B2  6700 0070                761              BEQ         opMOVEAL            ; If it is, branch off
000016B6                           762              
000016B6  43F9 00003D04            763              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000016BC  103C 000E                764              MOVE.B      #14, D0             ; command for trap call to display message
000016C0  4E4F                     765              TRAP        #15                 ; trap call  
000016C2                           766              
000016C2  43F9 00003D85            767              LEA         dispLong,A1
000016C8  103C 000E                768              MOVE.B      #14, D0             ; command for trap call to display message
000016CC  4E4F                     769              TRAP        #15                 ; trap call
000016CE                           770              
000016CE  43F9 00003CE5            771              LEA         space, A1           ; create spaces
000016D4  103C 000E                772              MOVE.B      #14, D0             ; command for trap call to display message
000016D8  4E4F                     773              TRAP        #15                 ; trap call
000016DA                           774          
000016DA  4242                     775              CLR         D2
000016DC  1401                     776              MOVE.B      D1,D2               ; Copy new byte over to D2
000016DE  E642                     777              ASR         #three,D2           ; Shift source register out
000016E0  C47C 0007                778              AND         #seven,D2           ; Set everything to 0 except for the mode
000016E4                           779          
000016E4  4243                     780              CLR         D3
000016E6  1601                     781              MOVE.B      D1,D3
000016E8  C67C 0007                782              AND         #seven,D3
000016EC                           783              
000016EC  4246                     784              CLR         D6
000016EE  1C3C 0001                785              MOVE.B      #1,D6
000016F2  4EB9 00002F08            786              JSR         printEA
000016F8  4246                     787              CLR         D6
000016FA                           788              
000016FA  43F9 00003CEC            789              LEA         comma, A1           ; Display comma
00001700  103C 000E                790              MOVE.B      #14, D0             ; command for trap call to display message
00001704  4E4F                     791              TRAP        #15                 ; trap call
00001706                           792          
00001706  4242                     793              CLR         D2
00001708  4243                     794              CLR         D3
0000170A  1404                     795              MOVE.B      D4,D2
0000170C  1605                     796              MOVE.B      D5,D3
0000170E                           797             
0000170E  4EB9 00002F08            798              JSR         printEA
00001714                           799  
00001714  43F9 00003CE1            800              LEA         newLine, A1           ; Display space
0000171A  103C 000E                801              MOVE.B      #14, D0             ; command for trap call to display message
0000171E  4E4F                     802              TRAP        #15                 ; trap call            
00001720                           803  
00001720  6000 F91E                804              BRA         LOOP                ; go back to the loop
00001724                           805              
00001724                           806  opMOVEAL
00001724  43F9 00003D09            807              LEA         MOVEAmatch,A1
0000172A  103C 000E                808              MOVE.B      #14, D0             ; command for trap call to display message
0000172E  4E4F                     809              TRAP        #15                 ; trap call
00001730                           810              
00001730  43F9 00003D85            811              LEA         dispLong,A1
00001736  103C 000E                812              MOVE.B      #14, D0             ; command for trap call to display message
0000173A  4E4F                     813              TRAP        #15                 ; trap call
0000173C                           814              
0000173C                           815  
0000173C  43F9 00003CE5            816              LEA         space, A1           ; create spaces
00001742  103C 000E                817              MOVE.B      #14, D0             ; command for trap call to display message
00001746  4E4F                     818              TRAP        #15                 ; trap call
00001748                           819              
00001748  4242                     820              CLR         D2
0000174A  1401                     821              MOVE.B      D1,D2               ; Copy new byte over to D2
0000174C  E642                     822              ASR         #three,D2           ; Shift source register out
0000174E  C47C 0007                823              AND         #seven,D2           ; Set everything to 0 except for the mode
00001752                           824          
00001752  4243                     825              CLR         D3
00001754  1601                     826              MOVE.B      D1,D3
00001756  C67C 0007                827              AND         #seven,D3
0000175A                           828              
0000175A  4241                     829              CLR         D1                  ; Clear D1
0000175C                           830              
0000175C  4EB9 00002F08            831              JSR         printEA
00001762                           832              
00001762  43F9 00003CEC            833              LEA         comma, A1           ; Display comma
00001768  103C 000E                834              MOVE.B      #14, D0             ; command for trap call to display message
0000176C  4E4F                     835              TRAP        #15                 ; trap call
0000176E                           836  
0000176E  4242                     837              CLR         D2
00001770  4243                     838              CLR         D3
00001772  1404                     839              MOVE.B      D4,D2
00001774  1605                     840              MOVE.B      D5,D3
00001776                           841          
00001776  4EB9 00002F08            842              JSR         printEA
0000177C                           843          
0000177C  43F9 00003CE1            844              LEA         newLine, A1           ; Display space
00001782  103C 000E                845              MOVE.B      #14, D0             ; command for trap call to display message
00001786  4E4F                     846              TRAP        #15                 ; trap call            
00001788                           847  
00001788  6000 F8B6                848              BRA         LOOP                ; go back to the loop
0000178C                           849  
0000178C                           850  opMOVEW
0000178C  4245                     851              CLR         D5                  ; Clear D5
0000178E  1A01                     852              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001790  E245                     853              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001792  CA7C 0007                854              AND         #seven,D5
00001796                           855          
00001796  4244                     856              CLR         D4                  ; Clear out D4
00001798  1801                     857              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000179A  C87C 0001                858              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000179E                           859          
0000179E  4241                     860              CLR          D1
000017A0  4242                     861              CLR          D2
000017A2  1218                     862              MOVE.B      (A0)+,D1            ; Copy byte into D1
000017A4  1401                     863              MOVE.B      D1,D2
000017A6  EC42                     864              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000017A8  D842                     865              ADD         D2,D4               ; Adds the remaining bits to D4
000017AA                           866          
000017AA  B87C 0001                867              CMP         #one,D4             ; Check if it is MOVEA
000017AE  6700 006A                868              BEQ         opMOVEAW            ; If it is, branch off
000017B2                           869              
000017B2  43F9 00003D04            870              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000017B8  103C 000E                871              MOVE.B      #14, D0             ; command for trap call to display message
000017BC  4E4F                     872              TRAP        #15                 ; trap call  
000017BE                           873              
000017BE  43F9 00003D82            874              LEA         dispWord,A1
000017C4  103C 000E                875              MOVE.B      #14, D0             ; command for trap call to display message
000017C8  4E4F                     876              TRAP        #15                 ; trap call
000017CA                           877              
000017CA  43F9 00003CE5            878              LEA         space, A1           ; create spaces
000017D0  103C 000E                879              MOVE.B      #14, D0             ; command for trap call to display message
000017D4  4E4F                     880              TRAP        #15                 ; trap call
000017D6                           881          
000017D6  4242                     882              CLR         D2
000017D8  1401                     883              MOVE.B      D1,D2               ; Copy new byte over to D2
000017DA  E642                     884              ASR         #three,D2           ; Shift source register out
000017DC  C47C 0007                885              AND         #seven,D2           ; Set everything to 0 except for the mode
000017E0                           886          
000017E0  4243                     887              CLR         D3
000017E2  1601                     888              MOVE.B      D1,D3
000017E4  C67C 0007                889              AND         #seven,D3
000017E8                           890              
000017E8  4241                     891              CLR         D1                  ; Clear D1
000017EA                           892              
000017EA  4EB9 00002F08            893              JSR         printEA
000017F0                           894              
000017F0  43F9 00003CEC            895              LEA         comma, A1           ; Display comma
000017F6  103C 000E                896              MOVE.B      #14, D0             ; command for trap call to display message
000017FA  4E4F                     897              TRAP        #15                 ; trap call
000017FC                           898          
000017FC  4242                     899              CLR         D2
000017FE  4243                     900              CLR         D3
00001800  1404                     901              MOVE.B      D4,D2
00001802  1605                     902              MOVE.B      D5,D3
00001804                           903              
00001804  4EB9 00002F08            904              JSR         printEA
0000180A                           905          
0000180A  43F9 00003CE1            906              LEA         newLine, A1           ; Display space
00001810  103C 000E                907              MOVE.B      #14, D0             ; command for trap call to display message
00001814  4E4F                     908              TRAP        #15                 ; trap call            
00001816                           909  
00001816  6000 F828                910              BRA         LOOP                ; go back to the loop
0000181A                           911              
0000181A                           912  opMOVEAW  
0000181A  43F9 00003D09            913              LEA         MOVEAmatch,A1
00001820  103C 000E                914              MOVE.B      #14, D0             ; command for trap call to display message
00001824  4E4F                     915              TRAP        #15                 ; trap call
00001826                           916              
00001826  43F9 00003D82            917              LEA         dispWord,A1
0000182C  103C 000E                918              MOVE.B      #14, D0             ; command for trap call to display message
00001830  4E4F                     919              TRAP        #15                 ; trap call
00001832                           920              
00001832  43F9 00003CE5            921              LEA         space, A1           ; create spaces
00001838  103C 000E                922              MOVE.B      #14, D0             ; command for trap call to display message
0000183C  4E4F                     923              TRAP        #15                 ; trap call
0000183E                           924              
0000183E  4242                     925              CLR         D2
00001840  1401                     926              MOVE.B      D1,D2               ; Copy new byte over to D2
00001842  E642                     927              ASR         #three,D2           ; Shift source register out
00001844  C47C 0007                928              AND         #seven,D2           ; Set everything to 0 except for the mode
00001848                           929          
00001848  4243                     930              CLR         D3
0000184A  1601                     931              MOVE.B      D1,D3
0000184C  C67C 0007                932              AND         #seven,D3
00001850                           933              
00001850  4241                     934              CLR         D1                  ; Clear D1      
00001852                           935              
00001852  4EB9 00002F08            936              JSR         printEA
00001858                           937              
00001858  43F9 00003CEC            938              LEA         comma, A1           ; Display comma
0000185E  103C 000E                939              MOVE.B      #14, D0             ; command for trap call to display message
00001862  4E4F                     940              TRAP        #15                 ; trap call
00001864                           941  
00001864  4242                     942              CLR         D2
00001866  4243                     943              CLR         D3
00001868  1404                     944              MOVE.B      D4,D2
0000186A  1605                     945              MOVE.B      D5,D3
0000186C                           946          
0000186C  4EB9 00002F08            947              JSR         printEA
00001872                           948          
00001872  43F9 00003CE1            949              LEA         newLine, A1           ; Display space
00001878  103C 000E                950              MOVE.B      #14, D0             ; command for trap call to display message
0000187C  4E4F                     951              TRAP        #15                 ; trap call            
0000187E                           952  
0000187E  6000 F7C0                953              BRA         LOOP                ; go back to the loop
00001882                           954  
00001882                           955  ***********************************************************************************************************
00001882                           956  *
00001882                           957  *                   NEG OPCODE
00001882                           958  *
00001882                           959  ***********************************************************************************************************
00001882                           960  
00001882                           961  opNEG   
00001882  43F9 00003D0F            962              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001888  103C 000E                963              MOVE.B      #14, D0             ; command for trap call to display message
0000188C  4E4F                     964              TRAP        #15                 ; trap call
0000188E                           965          
0000188E                           966          
0000188E  1218                     967              MOVE.B      (A0)+, D1
00001890  1401                     968              MOVE.B      D1,D2               ; copy data over
00001892  EC42                     969              ASR         #six,D2
00001894                           970              
00001894  B47C 0000                971              CMP         #zero,D2
00001898  6700 0016                972              BEQ         opNEGB
0000189C  B47C 0001                973              CMP         #one,D2
000018A0  6700 008E                974              BEQ         opNEGW
000018A4  B47C 0002                975              CMP         #two,D2
000018A8  6700 0046                976              BEQ         opNEGL
000018AC  6000 1CD2                977              BRA         invalid
000018B0                           978              
000018B0                           979  opNEGB
000018B0  43F9 00003D7F            980              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
000018B6  103C 000E                981              MOVE.B      #14, D0             ; command for trap call to display message
000018BA  4E4F                     982              TRAP        #15                 ; trap call
000018BC                           983          
000018BC  43F9 00003CE5            984              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000018C2  103C 000E                985              MOVE.B      #14, D0             ; command for trap call to display message
000018C6  4E4F                     986              TRAP        #15                 ; trap call
000018C8                           987          
000018C8  4242                     988              CLR         D2                  ; Clear Data register 2
000018CA  3401                     989              MOVE        D1,D2               ; Move byte into D2
000018CC  E642                     990              ASR         #three,D2           ; Shift mode into place and moves mode into place
000018CE  C47C 0007                991              AND         #seven,D2           ; Stores mode
000018D2                           992              
000018D2  4243                     993              CLR         D3
000018D4  3601                     994              MOVE        D1,D3
000018D6  C67C 0007                995              AND         #seven,D3
000018DA                           996          
000018DA  4EB9 00002F08            997              JSR         printEA
000018E0                           998                  
000018E0  43F9 00003CE1            999              LEA         newLine, A1           ; Display space
000018E6  103C 000E               1000              MOVE.B      #14, D0             ; command for trap call to display message
000018EA  4E4F                    1001              TRAP        #15                 ; trap call  
000018EC                          1002          
000018EC  6000 F752               1003              BRA         LOOP
000018F0                          1004  
000018F0                          1005  opNEGL
000018F0  43F9 00003D85           1006              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
000018F6  103C 000E               1007              MOVE.B      #14, D0             ; command for trap call to display message
000018FA  4E4F                    1008              TRAP        #15                 ; trap call
000018FC                          1009  
000018FC  43F9 00003CE5           1010              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001902  103C 000E               1011              MOVE.B      #14, D0             ; command for trap call to display message
00001906  4E4F                    1012              TRAP        #15                 ; trap call
00001908                          1013                  
00001908  4242                    1014              CLR         D2                  ; Clear Data register 2
0000190A  3401                    1015              MOVE        D1,D2               ; Move byte into D2
0000190C  E642                    1016              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000190E  C47C 0007               1017              AND         #seven,D2           ; Stores mode
00001912                          1018          
00001912  4243                    1019              CLR         D3
00001914  3601                    1020              MOVE        D1,D3
00001916  C67C 0007               1021              AND         #seven,D3
0000191A                          1022          
0000191A  4EB9 00002F08           1023              JSR         printEA
00001920                          1024                      
00001920  43F9 00003CE1           1025              LEA         newLine, A1         ; Display space
00001926  103C 000E               1026              MOVE.B      #14, D0             ; command for trap call to display message
0000192A  4E4F                    1027              TRAP        #15                 ; trap call  
0000192C                          1028          
0000192C  6000 F712               1029              BRA         LOOP
00001930                          1030  
00001930                          1031  opNEGW
00001930  43F9 00003D82           1032              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001936  103C 000E               1033              MOVE.B      #14, D0             ; command for trap call to display message
0000193A  4E4F                    1034              TRAP        #15                 ; trap call
0000193C                          1035          
0000193C  43F9 00003CE5           1036              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001942  103C 000E               1037              MOVE.B      #14, D0             ; command for trap call to display message
00001946  4E4F                    1038              TRAP        #15                 ; trap call        
00001948                          1039                  
00001948  4242                    1040              CLR         D2                  ; Clear Data register 2
0000194A  3401                    1041              MOVE        D1,D2               ; Move byte into D2
0000194C  E642                    1042              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000194E  C47C 0007               1043              AND         #seven,D2           ; Stores mode
00001952                          1044          
00001952  4243                    1045              CLR         D3
00001954  3601                    1046              MOVE        D1,D3
00001956  C67C 0007               1047              AND         #seven,D3
0000195A                          1048          
0000195A  4EB9 00002F08           1049              JSR         printEA
00001960                          1050              
00001960  43F9 00003CE1           1051              LEA         newLine, A1           ; Display space
00001966  103C 000E               1052              MOVE.B      #14, D0             ; command for trap call to display message
0000196A  4E4F                    1053              TRAP        #15                 ; trap call  
0000196C                          1054          
0000196C  6000 F6D2               1055              BRA         LOOP
00001970                          1056              
00001970                          1057  ***********************************************************************************************************
00001970                          1058  *
00001970                          1059  *                   RTS_JSR Helper Function
00001970                          1060  *
00001970                          1061  ***********************************************************************************************************
00001970                          1062  
00001970                          1063  opRTSJSR
00001970  1218                    1064              MOVE.B      (A0)+, D1
00001972                          1065              
00001972  1401                    1066              MOVE.B      D1,D2               ; copy data over
00001974  B47C 0075               1067              CMP         #117,D2
00001978  6700 0050               1068              BEQ         opRTS
0000197C                          1069              
0000197C  EC42                    1070              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
0000197E  B47C 0002               1071              CMP         #two,D2             ; Checking if it is JSR
00001982  6700 0006               1072              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001986                          1073  
00001986  6000 1BF8               1074              BRA         invalid
0000198A                          1075              
0000198A                          1076  ***********************************************************************************************************
0000198A                          1077  *
0000198A                          1078  *                   JSR OPCODE
0000198A                          1079  *
0000198A                          1080  ***********************************************************************************************************
0000198A                          1081  
0000198A                          1082  opJSR
0000198A  43F9 00003D17           1083              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001990  103C 000E               1084              MOVE.B      #14, D0             ; command for trap call to display message
00001994  4E4F                    1085              TRAP        #15                 ; trap call
00001996                          1086              
00001996  43F9 00003CE5           1087              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000199C  103C 000E               1088              MOVE.B      #14, D0             ; command for trap call to display message
000019A0  4E4F                    1089              TRAP        #15                 ; trap call
000019A2                          1090              
000019A2  4242                    1091              CLR         D2
000019A4  4243                    1092              CLR         D3
000019A6                          1093              
000019A6  1401                    1094              MOVE.B      D1,D2
000019A8  E642                    1095              ASR         #three,D2
000019AA  C47C 0007               1096              AND         #seven,D2
000019AE                          1097              
000019AE  1601                    1098              MOVE.B      D1,D3
000019B0  C67C 0007               1099              AND         #seven,D3
000019B4                          1100              
000019B4  4EB9 00002F08           1101              JSR         printEA
000019BA                          1102              
000019BA  43F9 00003CE1           1103              LEA         newLine, A1           ; Display space
000019C0  103C 000E               1104              MOVE.B      #14, D0             ; command for trap call to display message
000019C4  4E4F                    1105              TRAP        #15                 ; trap call  
000019C6                          1106              
000019C6  6000 F678               1107              BRA         loop   
000019CA                          1108  
000019CA                          1109  ***********************************************************************************************************
000019CA                          1110  *
000019CA                          1111  *                   RTS OPCODE
000019CA                          1112  *
000019CA                          1113  ***********************************************************************************************************
000019CA                          1114  
000019CA                          1115  opRTS
000019CA  43F9 00003D13           1116              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
000019D0  103C 000E               1117              MOVE.B      #14, D0             ; command for trap call to display message
000019D4  4E4F                    1118              TRAP        #15                 ; trap call
000019D6                          1119              
000019D6  43F9 00003CE1           1120              LEA         newLine, A1           ; Display space
000019DC  103C 000E               1121              MOVE.B      #14, D0             ; command for trap call to display message
000019E0  4E4F                    1122              TRAP        #15                 ; trap call 
000019E2                          1123              
000019E2  6000 F65C               1124              BRA         loop
000019E6                          1125              
000019E6                          1126  ***********************************************************************************************************
000019E6                          1127  *
000019E6                          1128  *                   MOVEM_LEA OPCODE
000019E6                          1129  *
000019E6                          1130  ***********************************************************************************************************
000019E6                          1131  
000019E6                          1132  opMOVEMLEA
000019E6  4242                    1133              CLR         D2                  ; Clear D2
000019E8  1401                    1134              MOVE.B      D1,D2               ; Copy byte over
000019EA  C47C 000F               1135              AND         #secNib,D2          ; Check only the second nibble
000019EE  B47C 000C               1136              CMP         #twelve,D2          ; Compare the second nibble to twelve
000019F2  6700 000E               1137              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
000019F6  B47C 0008               1138              CMP         #eight,D2           ; Compare the second nibble to eight
000019FA  6700 0006               1139              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
000019FE  6000 008C               1140              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
00001A02                          1141              
00001A02                          1142  ***********************************************************************************************************
00001A02                          1143  *
00001A02                          1144  *                   MOVEM OPCODE
00001A02                          1145  *
00001A02                          1146  ***********************************************************************************************************
00001A02                          1147  
00001A02                          1148  opMOVEM            
00001A02  4246                    1149              CLR         D6                  ; Clearing D4 to store dr field
00001A04  1C01                    1150              MOVE.B      D1,D6               ; Moving byte to find dr field
00001A06  E446                    1151              ASR         #two,D6             ; Moving dr field to readable spot
00001A08  CC7C 0001               1152              AND         #one,D6             ; seting everything except dr to 0
00001A0C                          1153  
00001A0C  4241                    1154              CLR         D1  
00001A0E  1218                    1155              MOVE.B      (A0)+, D1           ; Taking in next byte
00001A10                          1156              
00001A10  4245                    1157              CLR         D5
00001A12  1A01                    1158              MOVE.B      D1,D5               ; Using D6 to check if this is indeed MOVEM
00001A14  EE45                    1159              ASR         #seven,D5
00001A16  CA7C 0001               1160              AND         #one,D5
00001A1A  BA7C 0001               1161              CMP         #one,D5             ; This bit should be one if this is MOVEM
00001A1E  6600 1B60               1162              BNE         invalid             ; If this is not 1 then this is not moveM
00001A22  4245                    1163              CLR         D5
00001A24                          1164              
00001A24  43F9 00003D1B           1165              LEA         MOVEMMatch, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001A2A  103C 000E               1166              MOVE.B      #14, D0             ; command for trap call to display message
00001A2E  4E4F                    1167              TRAP        #15                 ; trap call
00001A30                          1168              
00001A30  4245                    1169              CLR         D5                  ; Clearing D5 to store size
00001A32  1A01                    1170              MOVE.B      D1,D5               ; Moving byte that contains bit for size
00001A34  EC45                    1171              ASR         #six,D5            ; Moving size bit to the very right to read
00001A36  CA7C 0001               1172              AND         #one,D5             ; Isolating the one bit for size
00001A3A                          1173              
00001A3A  4242                    1174              CLR         D2                  ; Storing EA mode in D2
00001A3C  1401                    1175              MOVE.B      D1,D2               
00001A3E  E642                    1176              ASR         #three,D2
00001A40  C47C 0007               1177              AND         #seven,D2
00001A44                          1178              
00001A44  4243                    1179              CLR         D3                  ; Storing EA register into D3
00001A46  1601                    1180              MOVE.B      D1,D3
00001A48  C67C 0007               1181              AND         #seven,D3
00001A4C                          1182              
00001A4C  4EB9 0000358A           1183              JSR         MOVEMBRA
00001A52                          1184              
00001A52  B47C 0003               1185              CMP         #three,D2           ; Checks if this is post increment
00001A56  6700 0024               1186              BEQ         skipPrintEA         ; If it is, skipping printing EA again, because it is printed already in JSR
00001A5A                          1187              
00001A5A  43F9 00003CEC           1188              LEA         comma, A1           ; Display comma
00001A60  103C 000E               1189              MOVE.B      #14, D0             ; command for trap call to display message
00001A64  4E4F                    1190              TRAP        #15                 ; trap call
00001A66                          1191              
00001A66  4EB9 00002F08           1192              JSR         printEA
00001A6C                          1193              
00001A6C  43F9 00003CE1           1194              LEA         newline, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001A72  103C 000E               1195              MOVE.B      #14, D0             ; command for trap call to display message
00001A76  4E4F                    1196              TRAP        #15                 ; trap call            
00001A78                          1197  
00001A78  6000 F5C6               1198              BRA         loop            
00001A7C                          1199  
00001A7C                          1200  skipPrintEA 
00001A7C  43F9 00003CE1           1201              LEA         newline, A1        
00001A82  103C 000E               1202              MOVE.B      #14, D0             ; command for trap call to display message
00001A86  4E4F                    1203              TRAP        #15                 ; trap call            
00001A88                          1204  
00001A88  6000 F5B6               1205              BRA         loop 
00001A8C                          1206              
00001A8C                          1207  ***********************************************************************************************************
00001A8C                          1208  *
00001A8C                          1209  *               LEA OPCODE
00001A8C                          1210  *
00001A8C                          1211  ***********************************************************************************************************
00001A8C                          1212  
00001A8C                          1213  opLEA
00001A8C  4244                    1214              CLR         D4                  ; Clearing space for source register
00001A8E  1801                    1215              MOVE.B      D1,D4               ; Moving byte to isolate register
00001A90  E244                    1216              ASR         #one,D4
00001A92  C87C 0007               1217              AND         #seven,D4           ; Isolated register
00001A96                          1218  
00001A96  4245                    1219              CLR         D5                  ; Clearing D5 to check if bits match LEA static bits
00001A98  1A01                    1220              MOVE.B      D1,D5
00001A9A  CA7C 0001               1221              AND         #one,D5
00001A9E  E545                    1222              ASL         #two,D5
00001AA0                          1223              
00001AA0  1218                    1224              MOVE.B      (A0)+, D1           ; Taking in next byte
00001AA2                          1225              
00001AA2  1C01                    1226              MOVE.B      D1,D6
00001AA4  EC46                    1227              ASR         #six,D6
00001AA6  DA46                    1228              ADD         D6,D5
00001AA8  4246                    1229              CLR         D6
00001AAA                          1230  
00001AAA  BA7C 0007               1231              CMP         #seven,D5
00001AAE  6600 1AD0               1232              BNE         invalid   
00001AB2                          1233              
00001AB2  43F9 00003D21           1234              LEA         LEAmatch, A1        ; we know that the opcode will be LEA, so load A1 to print message
00001AB8  103C 000E               1235              MOVE.B      #14, D0             ; command for trap call to display message
00001ABC  4E4F                    1236              TRAP        #15                 ; trap call            
00001ABE                          1237  
00001ABE  43F9 00003CE5           1238              LEA         space, A1         ; we know that the opcode will be MOVEM, so load A1 to print message
00001AC4  103C 000E               1239              MOVE.B      #14, D0             ; command for trap call to display message
00001AC8  4E4F                    1240              TRAP        #15                 ; trap call            
00001ACA                          1241              
00001ACA  4242                    1242              CLR         D2
00001ACC  1401                    1243              MOVE.B      D1,D2
00001ACE  E642                    1244              ASR         #three,D2
00001AD0  C47C 0007               1245              AND         #seven,D2
00001AD4                          1246              
00001AD4  4243                    1247              CLR         D3
00001AD6  1601                    1248              MOVE.B      D1,D3
00001AD8  C67C 0007               1249              AND         #seven,D3
00001ADC                          1250              
00001ADC  4EB9 00002F08           1251              JSR         printEA
00001AE2                          1252              
00001AE2  43F9 00003CEC           1253              LEA         comma, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001AE8  103C 000E               1254              MOVE.B      #14, D0             ; command for trap call to display message
00001AEC  4E4F                    1255              TRAP        #15                 ; trap call            
00001AEE                          1256              
00001AEE                          1257              
00001AEE  4243                    1258              CLR         D3
00001AF0  1604                    1259              MOVE.B      D4,D3
00001AF2  143C 0001               1260              MOVE.B      #one,D2
00001AF6                          1261              
00001AF6  4EB9 00002F08           1262              JSR         printEA             ; Prints out source address
00001AFC                          1263              
00001AFC  43F9 00003CE1           1264              LEA         newline, A1         ; Prints new line
00001B02  103C 000E               1265              MOVE.B      #14, D0             ; command for trap call to display message
00001B06  4E4F                    1266              TRAP        #15                 ; trap call
00001B08                          1267  
00001B08  6000 F536               1268              BRA         loop                        
00001B0C                          1269  
00001B0C                          1270  ***********************************************************************************************************
00001B0C                          1271  *
00001B0C                          1272  *                   OR OPCODE
00001B0C                          1273  *
00001B0C                          1274  ***********************************************************************************************************
00001B0C                          1275              
00001B0C                          1276  opOR       
00001B0C  43F9 00003D43           1277              LEA         ORmatch,A1
00001B12  103C 000E               1278              MOVE.B      #14,D0
00001B16  4E4F                    1279              TRAP        #15
00001B18                          1280              
00001B18  4242                    1281              CLR         D2
00001B1A                          1282              ; These are for EA to Dn direction
00001B1A  B43C 0000               1283              CMP.B       #zero,D2
00001B1E  6700 002A               1284              BEQ         opORB               ; Byte in opmode
00001B22  B43C 0001               1285              CMP.B       #one,D2
00001B26  6700 007C               1286              BEQ         opORW               ; Word in opmode
00001B2A  B43C 0002               1287              CMP.B       #two,D2
00001B2E  6700 00D0               1288              BEQ         opORL               ; Long in opmode
00001B32                          1289              
00001B32                          1290              ; These are for Dn to EA direction
00001B32  B43C 0004               1291              CMP.B       #four,D2
00001B36  6700 0012               1292              BEQ         opORB               ; Byte in opmode
00001B3A  B43C 0005               1293              CMP.B       #five,D2
00001B3E  6700 0064               1294              BEQ         opORW               ; Word in opmode
00001B42  B43C 0006               1295              CMP.B       #six,D2
00001B46  6700 00B8               1296              BEQ         opORL               ; Long in opmode
00001B4A                          1297              
00001B4A  43F9 00003D7F           1298  opORB       LEA         dispByte,A1
00001B50  103C 000E               1299              MOVE.B      #14,D0
00001B54  4E4F                    1300              TRAP        #15
00001B56                          1301              
00001B56  43F9 00003CE5           1302              LEA         space, A1           ; Display space
00001B5C  103C 000E               1303              MOVE.B      #14, D0             ; command for trap call to display message
00001B60  4E4F                    1304              TRAP        #15                 ; trap call
00001B62                          1305              
00001B62                          1306  
00001B62  1401                    1307              MOVE.B      D1,D2
00001B64  E642                    1308              ASR         #3,D2
00001B66  C47C 0007               1309              AND         #$07,D2
00001B6A  1601                    1310              MOVE.B      D1,D3
00001B6C  C67C 0007               1311              AND         #$07,D3
00001B70  4EB9 00002F08           1312              JSR         printEA         ; Determines the "left" operand register
00001B76                          1313              
00001B76  43F9 00003CEC           1314              LEA         comma, A1           ; Display space
00001B7C  103C 000E               1315              MOVE.B      #14, D0             ; command for trap call to display message
00001B80  4E4F                    1316              TRAP        #15                 ; trap call
00001B82                          1317              
00001B82  4242                    1318              CLR         D2
00001B84  3601                    1319              MOVE.W      D1,D3
00001B86  E043                    1320              ASR         #eight,D3
00001B88  E243                    1321              ASR         #one,D3
00001B8A  C67C 0007               1322              AND         #$07,D3
00001B8E  4EB9 00002F08           1323              JSR         printEA
00001B94                          1324              
00001B94  43F9 00003CE1           1325              LEA         newLine,A1
00001B9A  103C 000E               1326              MOVE.B      #14,D0
00001B9E  4E4F                    1327              TRAP        #15
00001BA0                          1328              
00001BA0  6000 F49E               1329              BRA         LOOP
00001BA4                          1330              
00001BA4                          1331              
00001BA4  43F9 00003D82           1332  opORW       LEA         dispWord,A1
00001BAA  103C 000E               1333              MOVE.B      #14,D0
00001BAE  4E4F                    1334              TRAP        #15
00001BB0                          1335              
00001BB0  43F9 00003CE5           1336              LEA         space, A1           ; Display space
00001BB6  103C 000E               1337              MOVE.B      #14, D0             ; command for trap call to display message
00001BBA  4E4F                    1338              TRAP        #15                 ; trap call
00001BBC                          1339              
00001BBC  4242                    1340              CLR         D2
00001BBE  1401                    1341              MOVE.B      D1,D2
00001BC0  E642                    1342              ASR         #3,D2
00001BC2  C47C 0007               1343              AND         #$07,D2
00001BC6  1601                    1344              MOVE.B      D1,D3
00001BC8  C67C 0007               1345              AND         #$07,D3
00001BCC  4EB9 00002F08           1346              JSR         printEA         ; Determines the "left" operand register
00001BD2                          1347              
00001BD2  43F9 00003CEC           1348              LEA         comma, A1           ; Display space
00001BD8  103C 000E               1349              MOVE.B      #14, D0             ; command for trap call to display message
00001BDC  4E4F                    1350              TRAP        #15                 ; trap call
00001BDE                          1351              
00001BDE  4242                    1352              CLR         D2
00001BE0  3601                    1353              MOVE.W      D1,D3
00001BE2  E043                    1354              ASR         #eight,D3
00001BE4  E243                    1355              ASR         #one,D3
00001BE6  C67C 0007               1356              AND         #$07,D3
00001BEA  4EB9 00002F08           1357              JSR         printEA
00001BF0                          1358              
00001BF0  43F9 00003CE1           1359              LEA         newLine,A1
00001BF6  103C 000E               1360              MOVE.B      #14,D0
00001BFA  4E4F                    1361              TRAP        #15
00001BFC                          1362              
00001BFC  6000 F442               1363              BRA         LOOP
00001C00                          1364              
00001C00  43F9 00003D85           1365  opORL       LEA         dispLong,A1
00001C06  103C 000E               1366              MOVE.B      #14,D0
00001C0A  4E4F                    1367              TRAP        #15
00001C0C                          1368              
00001C0C  43F9 00003CE5           1369              LEA         space, A1           ; Display space
00001C12  103C 000E               1370              MOVE.B      #14, D0             ; command for trap call to display message
00001C16  4E4F                    1371              TRAP        #15                 ; trap call
00001C18                          1372              
00001C18  1401                    1373              MOVE.B      D1,D2
00001C1A  E642                    1374              ASR         #3,D2
00001C1C  C47C 0007               1375              AND         #$07,D2
00001C20  1601                    1376              MOVE.B      D1,D3
00001C22  C67C 0007               1377              AND         #$07,D3
00001C26  4EB9 00002F08           1378              JSR         printEA         ; Determines the "left" operand register
00001C2C                          1379              
00001C2C  43F9 00003CEC           1380              LEA         comma, A1           ; Display space
00001C32  103C 000E               1381              MOVE.B      #14, D0             ; command for trap call to display message
00001C36  4E4F                    1382              TRAP        #15                 ; trap call
00001C38                          1383              
00001C38  4242                    1384              CLR         D2
00001C3A  3601                    1385              MOVE.W      D1,D3
00001C3C  E043                    1386              ASR         #eight,D3
00001C3E  E243                    1387              ASR         #one,D3
00001C40  C67C 0007               1388              AND         #$07,D3
00001C44  4EB9 00002F08           1389              JSR         printEA
00001C4A                          1390              
00001C4A  43F9 00003CE1           1391              LEA         newLine,A1
00001C50  103C 000E               1392              MOVE.B      #14,D0
00001C54  4E4F                    1393              TRAP        #15
00001C56                          1394              
00001C56  6000 F3E8               1395              BRA         LOOP            ; trap call
00001C5A                          1396              
00001C5A  6000 F3E4               1397              BRA         LOOP            ; DOUBLE CHECK THIS AGAIN AFTER MORE TESTING ALEX
00001C5E                          1398              
00001C5E                          1399  ***********************************************************************************************************
00001C5E                          1400  *
00001C5E                          1401  *                   DIVS OPCODE
00001C5E                          1402  *
00001C5E                          1403  ***********************************************************************************************************
00001C5E                          1404  
00001C5E                          1405  opDIVS      
00001C5E  43F9 00003D3E           1406              LEA         DIVSmatch,A1
00001C64  103C 000E               1407              MOVE.B      #14,D0
00001C68  4E4F                    1408              TRAP        #15
00001C6A                          1409              
00001C6A  43F9 00003CE5           1410              LEA         space, A1           ; Display space
00001C70  103C 000E               1411              MOVE.B      #14, D0             ; command for trap call to display message
00001C74  4E4F                    1412              TRAP        #15                 ; trap call
00001C76                          1413              
00001C76  1401                    1414              MOVE.B      D1,D2
00001C78  E642                    1415              ASR         #3,D2
00001C7A  C47C 0007               1416              AND         #$07,D2
00001C7E  1601                    1417              MOVE.B      D1,D3
00001C80  C67C 0007               1418              AND         #$07,D3
00001C84  4EB9 00002F08           1419              JSR         printEA
00001C8A                          1420              
00001C8A  43F9 00003CEC           1421              LEA         comma, A1           ; Display space
00001C90  103C 000E               1422              MOVE.B      #14, D0             ; command for trap call to display message
00001C94  4E4F                    1423              TRAP        #15                 ; trap call
00001C96                          1424              
00001C96  4242                    1425              CLR         D2
00001C98  3601                    1426              MOVE.W      D1,D3
00001C9A  E043                    1427              ASR         #eight,D3
00001C9C  E243                    1428              ASR         #one,D3
00001C9E  C67C 0007               1429              AND         #$07,D3
00001CA2  4EB9 00002F08           1430              JSR         printEA
00001CA8                          1431              
00001CA8  43F9 00003CE1           1432              LEA         newLine,A1
00001CAE  103C 000E               1433              MOVE.B      #14,D0
00001CB2  4E4F                    1434              TRAP        #15
00001CB4                          1435              
00001CB4  6000 F38A               1436              BRA         LOOP
00001CB8                          1437      
00001CB8  6000 F386               1438              BRA     LOOP
00001CBC                          1439              
00001CBC                          1440  **********************************************************************************************************
00001CBC                          1441  *
00001CBC                          1442  *                   EOR OPCODE
00001CBC                          1443  *
00001CBC                          1444  ***********************************************************************************************************
00001CBC                          1445  
00001CBC                          1446  opEOR       
00001CBC  43F9 00003D4A           1447              LEA         EORmatch,A1
00001CC2  103C 000E               1448              MOVE.B      #14,D0
00001CC6  4E4F                    1449              TRAP        #15
00001CC8                          1450              
00001CC8  4242                    1451              CLR         D2
00001CCA                          1452              
00001CCA  1401                    1453              MOVE.B      D1,D2
00001CCC  EE42                    1454              ASR         #seven,D2           ; Move bits 7 places over to find opmode
00001CCE  C47C 0007               1455              AND         #$07,D2
00001CD2  B43C 0005               1456              CMP.B       #five,D2
00001CD6  6D00 0012               1457              BLT         opEORB              ; Byte in opmode
00001CDA  B43C 0005               1458              CMP.B       #five,D2
00001CDE  6700 006A               1459              BEQ         opEORW              ; Word in opmode
00001CE2  B43C 0005               1460              CMP.B       #five,D2
00001CE6  6E00 00C2               1461              BGT         opEORL              ; Long in opmode
00001CEA                          1462              
00001CEA                          1463  opEORB      
00001CEA  43F9 00003D7F           1464              LEA         dispByte,A1
00001CF0  103C 000E               1465              MOVE.B      #14,D0
00001CF4  4E4F                    1466              TRAP        #15
00001CF6                          1467              
00001CF6  43F9 00003CE5           1468              LEA         space, A1           ; Display space
00001CFC  103C 000E               1469              MOVE.B      #14, D0             ; command for trap call to display message
00001D00  4E4F                    1470              TRAP        #15                 ; trap call
00001D02                          1471              
00001D02  4242                    1472              CLR         D2
00001D04  4243                    1473              CLR         D3
00001D06  3601                    1474              MOVE.W      D1,D3
00001D08  E043                    1475              ASR         #eight,D3
00001D0A  E243                    1476              ASR         #one,D3
00001D0C  C67C 0007               1477              AND         #$07,D3
00001D10  4EB9 00002F08           1478              JSR         printEA
00001D16                          1479              
00001D16  43F9 00003CEC           1480              LEA         comma, A1           ; Display space
00001D1C  103C 000E               1481              MOVE.B      #14, D0             ; command for trap call to display message
00001D20  4E4F                    1482              TRAP        #15                 ; trap call
00001D22                          1483              
00001D22  4242                    1484              CLR         D2
00001D24  4243                    1485              CLR         D3
00001D26  1401                    1486              MOVE.B      D1,D2
00001D28  E642                    1487              ASR         #three,D2
00001D2A  C47C 0007               1488              AND         #seven,D2
00001D2E  1601                    1489              MOVE.B      D1,D3
00001D30  C67C 0007               1490              AND         #$07,D3
00001D34  4EB9 00002F08           1491              JSR         printEA         ; Determines the "left" operand register
00001D3A                          1492              
00001D3A  43F9 00003CE1           1493              LEA         newLine,A1
00001D40  103C 000E               1494              MOVE.B      #14,D0
00001D44  4E4F                    1495              TRAP        #15
00001D46                          1496              
00001D46  6000 F2F8               1497              BRA         LOOP
00001D4A                          1498              
00001D4A                          1499              
00001D4A                          1500  opEORW      
00001D4A  43F9 00003D82           1501              LEA         dispWord,A1
00001D50  103C 000E               1502              MOVE.B      #14,D0
00001D54  4E4F                    1503              TRAP        #15
00001D56                          1504              
00001D56  43F9 00003CE5           1505              LEA         space, A1           ; Display space
00001D5C  103C 000E               1506              MOVE.B      #14, D0             ; command for trap call to display message
00001D60  4E4F                    1507              TRAP        #15                 ; trap call
00001D62                          1508              
00001D62  4242                    1509              CLR         D2
00001D64  4243                    1510              CLR         D3
00001D66  3601                    1511              MOVE.W      D1,D3
00001D68  E043                    1512              ASR         #eight,D3
00001D6A  E243                    1513              ASR         #one,D3
00001D6C  C67C 0007               1514              AND         #$07,D3
00001D70  4EB9 00002F08           1515              JSR         printEA
00001D76                          1516              
00001D76  43F9 00003CEC           1517              LEA         comma, A1           ; Display space
00001D7C  103C 000E               1518              MOVE.B      #14, D0             ; command for trap call to display message
00001D80  4E4F                    1519              TRAP        #15                 ; trap call
00001D82                          1520              
00001D82  4242                    1521              CLR         D2
00001D84  4243                    1522              CLR         D3
00001D86  1401                    1523              MOVE.B      D1,D2
00001D88  E642                    1524              ASR         #three,D2
00001D8A  C47C 0007               1525              AND         #seven,D2
00001D8E  1601                    1526              MOVE.B      D1,D3
00001D90  C67C 0007               1527              AND         #$07,D3
00001D94  4EB9 00002F08           1528              JSR         printEA         ; Determines the "left" operand register
00001D9A                          1529              
00001D9A  43F9 00003CE1           1530              LEA         newLine,A1
00001DA0  103C 000E               1531              MOVE.B      #14,D0
00001DA4  4E4F                    1532              TRAP        #15
00001DA6                          1533              
00001DA6  6000 F298               1534              BRA         LOOP
00001DAA                          1535              
00001DAA                          1536  opEORL     
00001DAA  43F9 00003D85           1537              LEA         dispLong,A1
00001DB0  103C 000E               1538              MOVE.B      #14,D0
00001DB4  4E4F                    1539              TRAP        #15
00001DB6                          1540              
00001DB6  43F9 00003CE5           1541              LEA         space, A1           ; Display space
00001DBC  103C 000E               1542              MOVE.B      #14, D0             ; command for trap call to display message
00001DC0  4E4F                    1543              TRAP        #15                 ; trap call
00001DC2                          1544              
00001DC2  4242                    1545              CLR         D2
00001DC4  4243                    1546              CLR         D3
00001DC6  3601                    1547              MOVE.W      D1,D3
00001DC8  E043                    1548              ASR         #eight,D3
00001DCA  E243                    1549              ASR         #one,D3
00001DCC  C67C 0007               1550              AND         #$07,D3
00001DD0  4EB9 00002F08           1551              JSR         printEA
00001DD6                          1552              
00001DD6  43F9 00003CEC           1553              LEA         comma, A1           ; Display space
00001DDC  103C 000E               1554              MOVE.B      #14, D0             ; command for trap call to display message
00001DE0  4E4F                    1555              TRAP        #15                 ; trap call
00001DE2                          1556              
00001DE2  4242                    1557              CLR         D2
00001DE4  4243                    1558              CLR         D3
00001DE6  1401                    1559              MOVE.B      D1,D2
00001DE8  E642                    1560              ASR         #three,D2
00001DEA  C47C 0007               1561              AND         #seven,D2
00001DEE  1601                    1562              MOVE.B      D1,D3
00001DF0  C67C 0007               1563              AND         #$07,D3
00001DF4  4EB9 00002F08           1564              JSR         printEA         ; Determines the "left" operand register
00001DFA                          1565              
00001DFA  43F9 00003CE1           1566              LEA         newLine,A1
00001E00  103C 000E               1567              MOVE.B      #14,D0
00001E04  4E4F                    1568              TRAP        #15
00001E06                          1569              
00001E06  6000 F238               1570              BRA         LOOP            ; trap call 
00001E0A                          1571  
00001E0A                          1572  ***********************************************************************************************************
00001E0A                          1573  *
00001E0A                          1574  *                   CMP OPCODE
00001E0A                          1575  *
00001E0A                          1576  ***********************************************************************************************************
00001E0A                          1577  
00001E0A                          1578  opCMP       
00001E0A  43F9 00003D4E           1579              LEA         CMPmatch,A1
00001E10  103C 000E               1580              MOVE.B      #14,D0
00001E14  4E4F                    1581              TRAP        #15
00001E16                          1582              
00001E16  4242                    1583              CLR         D2
00001E18                          1584              
00001E18  1401                    1585              MOVE.B      D1,D2
00001E1A  EC42                    1586              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001E1C  C47C 0007               1587              AND         #$07,D2
00001E20  B43C 0000               1588              CMP.B       #zero,D2
00001E24  6700 0016               1589              BEQ         opCMPB              ; Byte in opmode
00001E28  B43C 0001               1590              CMP.B       #one,D2
00001E2C  6700 0068               1591              BEQ         opCMPW              ; Word in opmode
00001E30  B43C 0002               1592              CMP.B       #two,D2
00001E34  6700 00BA               1593              BEQ         opCMPL              ; Long in opmode
00001E38                          1594              
00001E38  6000 1E3C               1595              BRA         printInvalid        ; Incorrect input
00001E3C                          1596  
00001E3C                          1597  opCMPB      
00001E3C  43F9 00003D7F           1598              LEA         dispByte,A1
00001E42  103C 000E               1599              MOVE.B      #14,D0
00001E46  4E4F                    1600              TRAP        #15
00001E48                          1601              
00001E48  43F9 00003CE5           1602              LEA         space, A1           ; Display space
00001E4E  103C 000E               1603              MOVE.B      #14, D0             ; command for trap call to display message
00001E52  4E4F                    1604              TRAP        #15                 ; trap call
00001E54                          1605              
00001E54  1401                    1606              MOVE.B      D1,D2
00001E56  E642                    1607              ASR         #3,D2
00001E58  C47C 0007               1608              AND         #$07,D2
00001E5C  1601                    1609              MOVE.B      D1,D3
00001E5E  C67C 0007               1610              AND         #$07,D3
00001E62  4EB9 00002F08           1611              JSR         printEA         ; Determines the "left" operand register
00001E68                          1612              
00001E68  43F9 00003CEC           1613              LEA         comma, A1           ; Display space
00001E6E  103C 000E               1614              MOVE.B      #14, D0             ; command for trap call to display message
00001E72  4E4F                    1615              TRAP        #15                 ; trap call
00001E74                          1616              
00001E74  4242                    1617              CLR         D2
00001E76  3601                    1618              MOVE.W      D1,D3
00001E78  E043                    1619              ASR         #eight,D3
00001E7A  E243                    1620              ASR         #one,D3
00001E7C  C67C 0007               1621              AND         #$07,D3
00001E80  4EB9 00002F08           1622              JSR         printEA
00001E86                          1623              
00001E86  43F9 00003CE1           1624              LEA         newLine,A1
00001E8C  103C 000E               1625              MOVE.B      #14,D0
00001E90  4E4F                    1626              TRAP        #15
00001E92                          1627              
00001E92  6000 F1AC               1628              BRA         LOOP
00001E96                          1629              
00001E96                          1630  opCMPW      
00001E96  43F9 00003D82           1631              LEA         dispWord,A1
00001E9C  103C 000E               1632              MOVE.B      #14,D0
00001EA0  4E4F                    1633              TRAP        #15
00001EA2                          1634              
00001EA2  43F9 00003CE5           1635              LEA         space, A1           ; Display space
00001EA8  103C 000E               1636              MOVE.B      #14, D0             ; command for trap call to display message
00001EAC  4E4F                    1637              TRAP        #15                 ; trap call
00001EAE                          1638              
00001EAE  1401                    1639              MOVE.B      D1,D2
00001EB0  E642                    1640              ASR         #3,D2
00001EB2  C47C 0007               1641              AND         #$07,D2
00001EB6  1601                    1642              MOVE.B      D1,D3
00001EB8  C67C 0007               1643              AND         #$07,D3
00001EBC  4EB9 00002F08           1644              JSR         printEA         ; Determines the "left" operand register
00001EC2                          1645              
00001EC2  43F9 00003CEC           1646              LEA         comma, A1           ; Display space
00001EC8  103C 000E               1647              MOVE.B      #14, D0             ; command for trap call to display message
00001ECC  4E4F                    1648              TRAP        #15                 ; trap call
00001ECE                          1649              
00001ECE  4242                    1650              CLR         D2
00001ED0  3601                    1651              MOVE.W      D1,D3
00001ED2  E043                    1652              ASR         #eight,D3
00001ED4  E243                    1653              ASR         #one,D3
00001ED6  C67C 0007               1654              AND         #$07,D3
00001EDA  4EB9 00002F08           1655              JSR         printEA
00001EE0                          1656              
00001EE0  43F9 00003CE1           1657              LEA         newLine,A1
00001EE6  103C 000E               1658              MOVE.B      #14,D0
00001EEA  4E4F                    1659              TRAP        #15
00001EEC                          1660              
00001EEC  6000 F152               1661              BRA         LOOP
00001EF0                          1662  
00001EF0                          1663  opCMPL      
00001EF0  43F9 00003D85           1664              LEA         dispLong,A1
00001EF6  103C 000E               1665              MOVE.B      #14,D0
00001EFA  4E4F                    1666              TRAP        #15
00001EFC                          1667              
00001EFC  43F9 00003CE5           1668              LEA         space, A1           ; Display space
00001F02  103C 000E               1669              MOVE.B      #14, D0             ; command for trap call to display message
00001F06  4E4F                    1670              TRAP        #15                 ; trap call
00001F08                          1671              
00001F08  1401                    1672              MOVE.B      D1,D2
00001F0A  E642                    1673              ASR         #3,D2
00001F0C  C47C 0007               1674              AND         #$07,D2
00001F10  1601                    1675              MOVE.B      D1,D3
00001F12  C67C 0007               1676              AND         #$07,D3
00001F16  4EB9 00002F08           1677              JSR         printEA         ; Determines the "left" operand register
00001F1C                          1678              
00001F1C  43F9 00003CEC           1679              LEA         comma, A1           ; Display space
00001F22  103C 000E               1680              MOVE.B      #14, D0             ; command for trap call to display message
00001F26  4E4F                    1681              TRAP        #15                 ; trap call
00001F28                          1682              
00001F28  4242                    1683              CLR         D2
00001F2A  3601                    1684              MOVE.W      D1,D3
00001F2C  E043                    1685              ASR         #eight,D3
00001F2E  E243                    1686              ASR         #one,D3
00001F30  C67C 0007               1687              AND         #$07,D3
00001F34  4EB9 00002F08           1688              JSR         printEA
00001F3A                          1689              
00001F3A  43F9 00003CE1           1690              LEA         newLine,A1
00001F40  103C 000E               1691              MOVE.B      #14,D0
00001F44  4E4F                    1692              TRAP        #15
00001F46                          1693              
00001F46  6000 F0F8               1694              BRA         LOOP
00001F4A                          1695  
00001F4A                          1696  ***********************************************************************************************************
00001F4A                          1697  *
00001F4A                          1698  *                   SUB OPCODE
00001F4A                          1699  *
00001F4A                          1700  ***********************************************************************************************************
00001F4A                          1701  
00001F4A                          1702  opSUB       
00001F4A  43F9 00003D46           1703              LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001F50  103C 000E               1704              MOVE.B      #14, D0             ; command for trap call to display message
00001F54  4E4F                    1705              TRAP        #15                 ; trap call
00001F56                          1706          
00001F56                          1707          
00001F56  E141                    1708              ASL         #eight,D1
00001F58  1218                    1709              MOVE.B      (A0)+,D1
00001F5A  4242                    1710              CLR         D2
00001F5C                          1711              
00001F5C  3401                    1712              MOVE.W      D1,D2
00001F5E  EC42                    1713              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001F60  C47C 0007               1714              AND         #seven,D2
00001F64                          1715              
00001F64                          1716              ; These are for DN - EA
00001F64  B43C 0000               1717              CMP.B       #zero,D2
00001F68  6700 002A               1718              BEQ         opSUBB              ; Byte in opmode
00001F6C  B43C 0001               1719              CMP.B       #one,D2
00001F70  6700 007C               1720              BEQ         opSUBW              ; Word in opmode
00001F74  B43C 0002               1721              CMP.B       #two,D2
00001F78  6700 00CE               1722              BEQ         opSUBL              ; Long in opmode
00001F7C                          1723              
00001F7C                          1724              ; These are for EA - DN
00001F7C  B43C 0004               1725              CMP.B       #four,D2
00001F80  6700 0012               1726              BEQ         opSUBB              ; Byte in opmode
00001F84  B43C 0005               1727              CMP.B       #five,D2
00001F88  6700 0064               1728              BEQ         opSUBW              ; Word in opmode
00001F8C  B43C 0006               1729              CMP.B       #six,D2
00001F90  6700 00B6               1730              BEQ         opSUBL              ; Long in opmode
00001F94                          1731              
00001F94                          1732  opSUBB      
00001F94  43F9 00003D7F           1733              LEA         dispByte,A1
00001F9A  103C 000E               1734              MOVE.B      #14,D0
00001F9E  4E4F                    1735              TRAP        #15
00001FA0                          1736              
00001FA0  43F9 00003CE5           1737              LEA         space, A1           ; Display space
00001FA6  103C 000E               1738              MOVE.B      #14, D0             ; command for trap call to display message
00001FAA  4E4F                    1739              TRAP        #15                 ; trap call         
00001FAC                          1740              
00001FAC  1401                    1741              MOVE.B      D1,D2
00001FAE  E642                    1742              ASR         #3,D2
00001FB0  C47C 0007               1743              AND         #$07,D2
00001FB4  3601                    1744              MOVE.W      D1,D3
00001FB6  C67C 0007               1745              AND         #$07,D3
00001FBA  4EB9 00002F08           1746              JSR         printEA         ; Determines the "left" operand register
00001FC0                          1747              
00001FC0  43F9 00003CEC           1748              LEA         comma, A1           ; Display space
00001FC6  103C 000E               1749              MOVE.B      #14, D0             ; command for trap call to display message
00001FCA  4E4F                    1750              TRAP        #15                 ; trap call
00001FCC                          1751              
00001FCC  4242                    1752              CLR         D2
00001FCE  3601                    1753              MOVE.W      D1,D3
00001FD0  E043                    1754              ASR         #eight,D3
00001FD2  E243                    1755              ASR         #one,D3
00001FD4  C67C 0007               1756              AND         #$07,D3
00001FD8  4EB9 00002F08           1757              JSR         printEA
00001FDE                          1758              
00001FDE  43F9 00003CE1           1759              LEA         newLine,A1
00001FE4  103C 000E               1760              MOVE.B      #14,D0
00001FE8  4E4F                    1761              TRAP        #15
00001FEA                          1762              
00001FEA  6000 F054               1763              BRA         LOOP
00001FEE                          1764              
00001FEE                          1765              
00001FEE                          1766  opSUBW      
00001FEE  43F9 00003D82           1767              LEA         dispWord,A1
00001FF4  103C 000E               1768              MOVE.B      #14,D0
00001FF8  4E4F                    1769              TRAP        #15
00001FFA                          1770              
00001FFA  43F9 00003CE5           1771              LEA         space, A1           ; Display space
00002000  103C 000E               1772              MOVE.B      #14, D0             ; command for trap call to display message
00002004  4E4F                    1773              TRAP        #15                 ; trap call         
00002006                          1774              
00002006  1401                    1775              MOVE.B      D1,D2
00002008  E642                    1776              ASR         #3,D2
0000200A  C47C 0007               1777              AND         #$07,D2
0000200E  3601                    1778              MOVE.W      D1,D3
00002010  C67C 0007               1779              AND         #$07,D3
00002014  4EB9 00002F08           1780              JSR         printEA         ; Determines the "left" operand register
0000201A                          1781              
0000201A  43F9 00003CEC           1782              LEA         comma, A1           ; Display space
00002020  103C 000E               1783              MOVE.B      #14, D0             ; command for trap call to display message
00002024  4E4F                    1784              TRAP        #15                 ; trap call
00002026                          1785              
00002026  4242                    1786              CLR         D2
00002028  3601                    1787              MOVE.W      D1,D3
0000202A  E043                    1788              ASR         #eight,D3
0000202C  E243                    1789              ASR         #one,D3
0000202E  C67C 0007               1790              AND         #$07,D3
00002032  4EB9 00002F08           1791              JSR         printEA
00002038                          1792              
00002038  43F9 00003CE1           1793              LEA         newLine,A1
0000203E  103C 000E               1794              MOVE.B      #14,D0
00002042  4E4F                    1795              TRAP        #15
00002044                          1796              
00002044  6000 EFFA               1797              BRA         LOOP
00002048                          1798              
00002048                          1799  opSUBL      
00002048  43F9 00003D85           1800              LEA         dispLong,A1
0000204E  103C 000E               1801              MOVE.B      #14,D0
00002052  4E4F                    1802              TRAP        #15
00002054                          1803              
00002054  43F9 00003CE5           1804              LEA         space, A1           ; Display space
0000205A  103C 000E               1805              MOVE.B      #14, D0             ; command for trap call to display message
0000205E  4E4F                    1806              TRAP        #15                 ; trap call         
00002060                          1807              
00002060  1401                    1808              MOVE.B      D1,D2
00002062  E642                    1809              ASR         #3,D2
00002064  C47C 0007               1810              AND         #$07,D2
00002068  3601                    1811              MOVE.W      D1,D3
0000206A  C67C 0007               1812              AND         #$07,D3
0000206E  4EB9 00002F08           1813              JSR         printEA         ; Determines the "left" operand register
00002074                          1814              
00002074  43F9 00003CEC           1815              LEA         comma, A1           ; Display space
0000207A  103C 000E               1816              MOVE.B      #14, D0             ; command for trap call to display message
0000207E  4E4F                    1817              TRAP        #15                 ; trap call
00002080                          1818              
00002080  4242                    1819              CLR         D2
00002082  3601                    1820              MOVE.W      D1,D3
00002084  E043                    1821              ASR         #eight,D3
00002086  E243                    1822              ASR         #one,D3
00002088  C67C 0007               1823              AND         #$07,D3
0000208C  4EB9 00002F08           1824              JSR         printEA
00002092                          1825              
00002092  43F9 00003CE1           1826              LEA         newLine,A1
00002098  103C 000E               1827              MOVE.B      #14,D0
0000209C  4E4F                    1828              TRAP        #15
0000209E                          1829              
0000209E  6000 EFA0               1830              BRA         LOOP 
000020A2                          1831              
000020A2                          1832  ***********************************************************************************************************
000020A2                          1833  *
000020A2                          1834  *                   BRA OPCODE
000020A2                          1835  *
000020A2                          1836  ***********************************************************************************************************
000020A2                          1837              
000020A2                          1838  opBRA       
000020A2  43F9 00003D2A           1839              LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
000020A8  103C 000E               1840              MOVE.B      #14, D0             ; command for trap call to display message
000020AC  4E4F                    1841              TRAP        #15                 ; trap call
000020AE                          1842          
000020AE  4242                    1843              CLR         D2
000020B0  4243                    1844              CLR         D3      
000020B2                          1845  
000020B2  43F9 00003CE5           1846              LEA         space,A1
000020B8  103C 000E               1847              MOVE.B      #14,D0
000020BC  4E4F                    1848              TRAP        #15
000020BE                          1849          
000020BE  143C 0007               1850              MOVE.B      #seven,D2
000020C2  1218                    1851              MOVE.B      (A0)+,D1
000020C4  4EB9 00002F08           1852              JSR         printEA
000020CA                          1853          
000020CA  43F9 00003CE1           1854              LEA         newLine, A1           ; create new line
000020D0  103C 000E               1855              MOVE.B      #14, D0             ; command for trap call to display message
000020D4  4E4F                    1856              TRAP        #15                 ; trap call
000020D6                          1857  
000020D6  6000 EF68               1858              BRA         LOOP
000020DA                          1859          
000020DA                          1860  ***********************************************************************************************************
000020DA                          1861  *
000020DA                          1862  *                   Bcc OPCODES
000020DA                          1863  *
000020DA                          1864  *   Supported cc condition codes:
000020DA                          1865  *           >CS
000020DA                          1866  *           >VC
000020DA                          1867  *           >GE
000020DA                          1868  *           >LT
000020DA                          1869  *
000020DA                          1870  ***********************************************************************************************************
000020DA                          1871  * CS Conition Code
000020DA                          1872  
000020DA                          1873  opBCS       
000020DA  43F9 00003D2E           1874              LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
000020E0  103C 000E               1875              MOVE.B      #14, D0             ; command for trap call to display message
000020E4  4E4F                    1876              TRAP        #15                 ; trap call
000020E6                          1877          
000020E6  4242                    1878              CLR         D2
000020E8  4243                    1879              CLR         D3      
000020EA                          1880  
000020EA  43F9 00003CE5           1881              LEA         space,A1
000020F0  103C 000E               1882              MOVE.B      #14,D0
000020F4  4E4F                    1883              TRAP        #15
000020F6                          1884          
000020F6  143C 0007               1885              MOVE.B      #seven,D2
000020FA  1218                    1886              MOVE.B      (A0)+,D1
000020FC  4EB9 00002F08           1887              JSR         printEA
00002102                          1888          
00002102  43F9 00003CE1           1889              LEA         newLine, A1           ; create new line
00002108  103C 000E               1890              MOVE.B      #14, D0             ; command for trap call to display message
0000210C  4E4F                    1891              TRAP        #15                 ; trap call
0000210E                          1892              
0000210E  6000 EF30               1893              BRA         LOOP
00002112                          1894  
00002112                          1895  ***********************************************************************************************************
00002112                          1896  * VC Condition Code
00002112                          1897  
00002112                          1898  opBVC       
00002112  43F9 00003D32           1899              LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00002118  103C 000E               1900              MOVE.B      #14, D0             ; command for trap call to display message
0000211C  4E4F                    1901              TRAP        #15                 ; trap call
0000211E                          1902          
0000211E  4242                    1903              CLR         D2
00002120  4243                    1904              CLR         D3      
00002122                          1905  
00002122  43F9 00003CE5           1906              LEA         space,A1
00002128  103C 000E               1907              MOVE.B      #14,D0
0000212C  4E4F                    1908              TRAP        #15
0000212E                          1909          
0000212E  143C 0007               1910              MOVE.B      #seven,D2
00002132  1218                    1911              MOVE.B      (A0)+,D1
00002134  4EB9 00002F08           1912              JSR         printEA
0000213A                          1913          
0000213A  43F9 00003CE1           1914              LEA         newLine, A1           ; create new line
00002140  103C 000E               1915              MOVE.B      #14, D0             ; command for trap call to display message
00002144  4E4F                    1916              TRAP        #15                 ; trap call
00002146                          1917              
00002146  6000 EEF8               1918              BRA         LOOP
0000214A                          1919  
0000214A                          1920  ***********************************************************************************************************
0000214A                          1921  * GE Conidtion Code     
0000214A                          1922          
0000214A                          1923  opBGE       
0000214A  43F9 00003D36           1924              LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00002150  103C 000E               1925              MOVE.B      #14, D0             ; command for trap call to display message
00002154  4E4F                    1926              TRAP        #15                 ; trap call
00002156                          1927          
00002156  4242                    1928              CLR         D2
00002158  4243                    1929              CLR         D3      
0000215A                          1930  
0000215A  43F9 00003CE5           1931              LEA         space,A1
00002160  103C 000E               1932              MOVE.B      #14,D0
00002164  4E4F                    1933              TRAP        #15
00002166                          1934          
00002166  143C 0007               1935              MOVE.B      #seven,D2
0000216A  1218                    1936              MOVE.B      (A0)+,D1
0000216C  4EB9 00002F08           1937              JSR         printEA
00002172                          1938          
00002172  43F9 00003CE1           1939              LEA         newLine, A1           ; create new line
00002178  103C 000E               1940              MOVE.B      #14, D0             ; command for trap call to display message
0000217C  4E4F                    1941              TRAP        #15                 ; trap call
0000217E                          1942              
0000217E  6000 EEC0               1943              BRA         LOOP
00002182                          1944  
00002182                          1945  ***********************************************************************************************************
00002182                          1946  * LT Conditions Code        
00002182                          1947          
00002182                          1948  opBLT   
00002182  43F9 00003D3A           1949              LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00002188  103C 000E               1950              MOVE.B      #14, D0             ; command for trap call to display message
0000218C  4E4F                    1951              TRAP        #15                 ; trap call
0000218E                          1952          
0000218E  4242                    1953              CLR         D2
00002190  4243                    1954              CLR         D3      
00002192                          1955  
00002192  43F9 00003CE5           1956              LEA         space,A1
00002198  103C 000E               1957              MOVE.B      #14,D0
0000219C  4E4F                    1958              TRAP        #15
0000219E                          1959          
0000219E  143C 0007               1960              MOVE.B      #seven,D2
000021A2  1218                    1961              MOVE.B      (A0)+,D1
000021A4  4EB9 00002F08           1962              JSR         printEA
000021AA                          1963          
000021AA  43F9 00003CE1           1964              LEA         newLine, A1           ; create new line
000021B0  103C 000E               1965              MOVE.B      #14, D0             ; command for trap call to display message
000021B4  4E4F                    1966              TRAP        #15                 ; trap call
000021B6                          1967              
000021B6  6000 EE88               1968              BRA         LOOP
000021BA                          1969          
000021BA                          1970  ***********************************************************************************************************
000021BA                          1971  *
000021BA                          1972  *               SUBQ OPCODE
000021BA                          1973  *
000021BA                          1974  ***********************************************************************************************************
000021BA                          1975  
000021BA                          1976  opSUBQ      
000021BA  43F9 00003D25           1977              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
000021C0  103C 000E               1978              MOVE.B      #14, D0             ; command for trap call to display message
000021C4  4E4F                    1979              TRAP        #15                 ; trap call
000021C6                          1980              
000021C6  1401                    1981              MOVE.B      D1,D2
000021C8  EE42                    1982              ASR         #seven,D2           ; Move bits 7 places over to find size
000021CA  C47C 0007               1983              AND         #$07,D2
000021CE                          1984              
000021CE                          1985              ; Find size bits
000021CE  B43C 0000               1986              CMP.B       #zero,D2
000021D2  6700 0012               1987              BEQ         opSUBQB             ; Byte in size
000021D6  B43C 0001               1988              CMP.B       #one,D2
000021DA  6700 0024               1989              BEQ         opSUBQW             ; Word in size
000021DE  B43C 0002               1990              CMP.B       #two,D2
000021E2  6700 0036               1991              BEQ         opSUBQL             ; Long in size
000021E6                          1992              
000021E6                          1993              
000021E6                          1994  opSUBQB     
000021E6  43F9 00003D7F           1995              LEA         dispByte,A1
000021EC  103C 000E               1996              MOVE.B      #14,D0
000021F0  4E4F                    1997              TRAP        #15 
000021F2                          1998              
000021F2  E141                    1999              ASL         #eight,D1
000021F4  1218                    2000              MOVE.B      (A0)+,D1
000021F6  4EB9 00002E30           2001              JSR         PrntImm
000021FC                          2002              
000021FC  6000 EE42               2003              BRA         LOOP
00002200                          2004              
00002200                          2005  opSUBQW     
00002200  43F9 00003D82           2006              LEA         dispWord,A1
00002206  103C 000E               2007              MOVE.B      #14,D0
0000220A  4E4F                    2008              TRAP        #15
0000220C                          2009              
0000220C  E141                    2010              ASL         #eight,D1
0000220E  1218                    2011              MOVE.B      (A0)+,D1
00002210  4EB9 00002E30           2012              JSR         PrntImm
00002216                          2013              
00002216  6000 EE28               2014              BRA         LOOP
0000221A                          2015              
0000221A                          2016  opSUBQL     
0000221A  43F9 00003D85           2017              LEA         dispLong,A1
00002220  103C 000E               2018              MOVE.B      #14,D0
00002224  4E4F                    2019              TRAP        #15
00002226                          2020              
00002226  E141                    2021              ASL         #eight,D1
00002228  1218                    2022              MOVE.B      (A0)+,D1
0000222A                          2023              
0000222A  4246                    2024              CLR         D6
0000222C  1C3C 0001               2025              MOVE.B      #1,D6
00002230                          2026              
00002230  4EB9 00002E30           2027              JSR         PrntImm         
00002236                          2028              
00002236  6000 EE08               2029              BRA         LOOP            ; trap call
0000223A                          2030              
0000223A                          2031  ***********************************************************************************************************
0000223A                          2032  *
0000223A                          2033  *                   MULS OPCODE
0000223A                          2034  *
0000223A                          2035  ***********************************************************************************************************
0000223A                          2036  
0000223A                          2037  opMULS  
0000223A  43F9 00003D52           2038              LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002240  103C 000E               2039              MOVE.B      #14, D0             ; command for trap call to display message
00002244  4E4F                    2040              TRAP        #15                 ; trap call
00002246  43F9 00003CE5           2041              LEA         space, A1           ; create spaces
0000224C  103C 000E               2042              MOVE.B      #14, D0             ; command for trap call to display message
00002250  4E4F                    2043              TRAP        #15                 ; trap call
00002252                          2044          
00002252  E141                    2045              ASL         #eight, D1
00002254  1218                    2046              MOVE.B      (A0)+, D1
00002256                          2047          
00002256  4242                    2048              CLR         D2
00002258  4243                    2049              CLR         D3
0000225A  1401                    2050              MOVE.B      D1, D2
0000225C  E642                    2051              ASR         #three, D2
0000225E  C47C 0007               2052              AND         #seven, D2
00002262  1601                    2053              MOVE.B      D1, D3
00002264  C67C 0007               2054              AND         #seven, D3
00002268                          2055          
00002268  4EB9 00002F08           2056              JSR         printEA
0000226E                          2057          
0000226E  43F9 00003CEC           2058              LEA         comma, A1           ; create comma
00002274  103C 000E               2059              MOVE.B      #14, D0             ; command for trap call to display message
00002278  4E4F                    2060              TRAP        #15                 ; trap call
0000227A                          2061  
0000227A  4242                    2062              CLR         D2
0000227C  4243                    2063              CLR         D3
0000227E  3601                    2064              MOVE.W      D1, D3
00002280  E043                    2065              ASR         #eight, D3
00002282  E243                    2066              ASR         #one, D3
00002284  C67C 0007               2067              AND         #seven, D3
00002288                          2068  
00002288  4EB9 00002F08           2069              JSR         printEA
0000228E                          2070          
0000228E  43F9 00003CE1           2071              LEA         newLine, A1           ; create new line
00002294  103C 000E               2072              MOVE.B      #14, D0             ; command for trap call to display message
00002298  4E4F                    2073              TRAP        #15                 ; trap call
0000229A                          2074          
0000229A  6000 EDA4               2075              BRA         LOOP
0000229E                          2076  
0000229E                          2077  ***********************************************************************************************************
0000229E                          2078  *
0000229E                          2079  *                   ADD OPCODE
0000229E                          2080  *
0000229E                          2081  ***********************************************************************************************************   
0000229E                          2082  
0000229E                          2083  opADDB  
0000229E  43F9 00003D57           2084              LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
000022A4  103C 000E               2085              MOVE.B      #14, D0             ; command for trap call to display message
000022A8  4E4F                    2086              TRAP        #15                 ; trap call
000022AA                          2087          
000022AA  43F9 00003D7F           2088              LEA         dispByte, A1        ; display byte
000022B0  103C 000E               2089              MOVE.B      #14, D0             ; command for trap call to display message
000022B4  4E4F                    2090              TRAP        #15                 ; trap call
000022B6  43F9 00003CE5           2091              LEA         space, A1           ; create spaces
000022BC  103C 000E               2092              MOVE.B      #14, D0             ; command for trap call to display message
000022C0  4E4F                    2093              TRAP        #15                 ; trap call
000022C2                          2094          
000022C2  4242                    2095              CLR         D2
000022C4  4243                    2096              CLR         D3
000022C6  1401                    2097              MOVE.B      D1, D2
000022C8  E642                    2098              ASR         #three, D2
000022CA  C47C 0007               2099              AND         #seven, D2
000022CE  1601                    2100              MOVE.B      D1, D3
000022D0  C67C 0007               2101              AND         #seven, D3
000022D4                          2102          
000022D4  4EB9 00002F08           2103              JSR         printEA
000022DA                          2104          
000022DA  43F9 00003CEC           2105              LEA         comma, A1           ; create comma
000022E0  103C 000E               2106              MOVE.B      #14, D0             ; command for trap call to display message
000022E4  4E4F                    2107              TRAP        #15                 ; trap call
000022E6                          2108  
000022E6  4242                    2109              CLR         D2
000022E8  4243                    2110              CLR         D3
000022EA  3601                    2111              MOVE.W      D1, D3
000022EC  E043                    2112              ASR         #eight, D3
000022EE  E243                    2113              ASR         #one, D3
000022F0  C67C 0007               2114              AND         #seven, D3
000022F4                          2115  
000022F4  4EB9 00002F08           2116              JSR         printEA
000022FA                          2117          
000022FA  43F9 00003CE1           2118              LEA         newLine, A1           ; create new line
00002300  103C 000E               2119              MOVE.B      #14, D0             ; command for trap call to display message
00002304  4E4F                    2120              TRAP        #15                 ; trap call
00002306                          2121          
00002306  6000 ED38               2122              BRA         LOOP
0000230A                          2123          
0000230A                          2124  opADDW  
0000230A  43F9 00003D57           2125              LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002310  103C 000E               2126              MOVE.B      #14, D0             ; command for trap call to display message
00002314  4E4F                    2127              TRAP        #15                 ; trap call
00002316                          2128  
00002316  43F9 00003D82           2129              LEA         dispWord, A1        ; display word
0000231C  103C 000E               2130              MOVE.B      #14, D0             ; command for trap call to display message
00002320  4E4F                    2131              TRAP        #15                 ; trap call
00002322  43F9 00003CE5           2132              LEA         space, A1           ; create spaces
00002328  103C 000E               2133              MOVE.B      #14, D0             ; command for trap call to display message
0000232C  4E4F                    2134              TRAP        #15                 ; trap call
0000232E                          2135          
0000232E  4242                    2136              CLR         D2
00002330  4243                    2137              CLR         D3
00002332  1401                    2138              MOVE.B      D1, D2
00002334  E642                    2139              ASR         #three, D2
00002336  C47C 0007               2140              AND         #seven, D2
0000233A  1601                    2141              MOVE.B      D1, D3
0000233C  C67C 0007               2142              AND         #seven, D3
00002340                          2143          
00002340  4EB9 00002F08           2144              JSR         printEA
00002346                          2145          
00002346  43F9 00003CEC           2146              LEA         comma, A1           ; create comma
0000234C  103C 000E               2147              MOVE.B      #14, D0             ; command for trap call to display message
00002350  4E4F                    2148              TRAP        #15                 ; trap call
00002352                          2149  
00002352  4242                    2150              CLR         D2
00002354  4243                    2151              CLR         D3
00002356  3601                    2152              MOVE.W      D1, D3
00002358  E043                    2153              ASR         #eight, D3
0000235A  E243                    2154              ASR         #one, D3
0000235C  C67C 0007               2155              AND         #seven, D3
00002360                          2156  
00002360  4EB9 00002F08           2157              JSR         printEA
00002366                          2158          
00002366  43F9 00003CE1           2159              LEA         newLine, A1           ; create new line
0000236C  103C 000E               2160              MOVE.B      #14, D0             ; command for trap call to display message
00002370  4E4F                    2161              TRAP        #15                 ; trap call
00002372                          2162          
00002372  6000 ECCC               2163              BRA         LOOP
00002376                          2164          
00002376                          2165  opADDL  
00002376  43F9 00003D57           2166              LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
0000237C  103C 000E               2167              MOVE.B      #14, D0             ; command for trap call to display message
00002380  4E4F                    2168              TRAP        #15                 ; trap call
00002382                          2169          
00002382  43F9 00003D85           2170              LEA         dispLong, A1        ; display long
00002388  103C 000E               2171              MOVE.B      #14, D0             ; command for trap call to display message
0000238C  4E4F                    2172              TRAP        #15                 ; trap call
0000238E  43F9 00003CE5           2173              LEA         space, A1           ; create spaces
00002394  103C 000E               2174              MOVE.B      #14, D0             ; command for trap call to display message
00002398  4E4F                    2175              TRAP        #15                 ; trap call
0000239A                          2176          
0000239A  4242                    2177              CLR         D2
0000239C  4243                    2178              CLR         D3
0000239E  1401                    2179              MOVE.B      D1, D2
000023A0  E642                    2180              ASR         #three, D2
000023A2  C47C 0007               2181              AND         #seven, D2
000023A6  1601                    2182              MOVE.B      D1, D3
000023A8  C67C 0007               2183              AND         #seven, D3
000023AC                          2184          
000023AC  4246                    2185              CLR         D6
000023AE  1C3C 0001               2186              MOVE.B      #1, D6
000023B2                          2187          
000023B2  4EB9 00002F08           2188              JSR         printEA
000023B8  4246                    2189              CLR         D6
000023BA                          2190          
000023BA  43F9 00003CEC           2191              LEA         comma, A1           ; create comma
000023C0  103C 000E               2192              MOVE.B      #14, D0             ; command for trap call to display message
000023C4  4E4F                    2193              TRAP        #15                 ; trap call
000023C6                          2194  
000023C6  4242                    2195              CLR         D2
000023C8  4243                    2196              CLR         D3
000023CA  3601                    2197              MOVE.W      D1, D3
000023CC  E043                    2198              ASR         #eight, D3
000023CE  E243                    2199              ASR         #one, D3
000023D0  C67C 0007               2200              AND         #seven, D3
000023D4                          2201  
000023D4  4EB9 00002F08           2202              JSR         printEA
000023DA                          2203          
000023DA  43F9 00003CE1           2204              LEA         newLine, A1           ; create new line
000023E0  103C 000E               2205              MOVE.B      #14, D0             ; command for trap call to display message
000023E4  4E4F                    2206              TRAP        #15                 ; trap call
000023E6                          2207          
000023E6  6000 EC58               2208              BRA         LOOP
000023EA                          2209  
000023EA                          2210  opADDAW 
000023EA  43F9 00003D5B           2211              LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
000023F0  103C 000E               2212              MOVE.B      #14, D0             ; command for trap call to display message
000023F4  4E4F                    2213              TRAP        #15                 ; trap call
000023F6                          2214          
000023F6  43F9 00003D82           2215              LEA         dispWord, A1        ; display word
000023FC  103C 000E               2216              MOVE.B      #14, D0             ; command for trap call to display message
00002400  4E4F                    2217              TRAP        #15                 ; trap call
00002402  43F9 00003CE5           2218              LEA         space, A1           ; create spaces
00002408  103C 000E               2219              MOVE.B      #14, D0             ; command for trap call to display message
0000240C  4E4F                    2220              TRAP        #15                 ; trap call
0000240E                          2221          
0000240E  4242                    2222              CLR         D2
00002410  4243                    2223              CLR         D3
00002412  1401                    2224              MOVE.B      D1, D2
00002414  E642                    2225              ASR         #three, D2
00002416  C47C 0007               2226              AND         #seven, D2
0000241A  1601                    2227              MOVE.B      D1, D3
0000241C  C67C 0007               2228              AND         #seven, D3
00002420                          2229          
00002420  4EB9 00002F08           2230              JSR         printEA
00002426                          2231          
00002426  43F9 00003CEC           2232              LEA         comma, A1           ; create comma
0000242C  103C 000E               2233              MOVE.B      #14, D0             ; command for trap call to display message
00002430  4E4F                    2234              TRAP        #15                 ; trap call
00002432                          2235  
00002432  4242                    2236              CLR         D2
00002434  4243                    2237              CLR         D3
00002436  143C 0001               2238              MOVE.B      #one, D2
0000243A  3601                    2239              MOVE.W      D1, D3
0000243C  E043                    2240              ASR         #eight, D3
0000243E  E243                    2241              ASR         #one, D3
00002440  C67C 0007               2242              AND         #seven, D3
00002444                          2243      
00002444  4EB9 00002F08           2244              JSR         printEA
0000244A                          2245          
0000244A  43F9 00003CE1           2246              LEA         newLine, A1           ; create new line
00002450  103C 000E               2247              MOVE.B      #14, D0             ; command for trap call to display message
00002454  4E4F                    2248              TRAP        #15                 ; trap call
00002456                          2249          
00002456  6000 EBE8               2250              BRA         LOOP
0000245A                          2251  
0000245A                          2252  opADDAL 
0000245A  43F9 00003D5B           2253              LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002460  103C 000E               2254              MOVE.B      #14, D0             ; command for trap call to display message
00002464  4E4F                    2255              TRAP        #15                 ; trap call
00002466                          2256  
00002466  43F9 00003D85           2257              LEA         dispLong, A1        ; display long
0000246C  103C 000E               2258              MOVE.B      #14, D0             ; command for trap call to display message
00002470  4E4F                    2259              TRAP        #15                 ; trap call
00002472  43F9 00003CE5           2260              LEA         space, A1           ; create spaces
00002478  103C 000E               2261              MOVE.B      #14, D0             ; command for trap call to display message
0000247C  4E4F                    2262              TRAP        #15                 ; trap call
0000247E                          2263          
0000247E  4242                    2264              CLR         D2
00002480  4243                    2265              CLR         D3
00002482  1401                    2266              MOVE.B      D1, D2
00002484  E642                    2267              ASR         #three, D2
00002486  C47C 0007               2268              AND         #seven, D2
0000248A  1601                    2269              MOVE.B      D1, D3
0000248C  C67C 0007               2270              AND         #seven, D3
00002490                          2271          
00002490  4EB9 00002F08           2272              JSR         printEA
00002496                          2273          
00002496  43F9 00003CEC           2274              LEA         comma, A1           ; create comma
0000249C  103C 000E               2275              MOVE.B      #14, D0             ; command for trap call to display message
000024A0  4E4F                    2276              TRAP        #15                 ; trap call
000024A2                          2277  
000024A2  4242                    2278              CLR         D2
000024A4  4243                    2279              CLR         D3
000024A6  143C 0001               2280              MOVE.B      #one, D2
000024AA  3601                    2281              MOVE.W      D1, D3
000024AC  E043                    2282              ASR         #eight, D3
000024AE  E243                    2283              ASR         #one, D3
000024B0  C67C 0007               2284              AND         #seven, D3
000024B4                          2285  
000024B4  4EB9 00002F08           2286              JSR         printEA
000024BA                          2287          
000024BA  43F9 00003CE1           2288              LEA         newLine, A1           ; create new line
000024C0  103C 000E               2289              MOVE.B      #14, D0             ; command for trap call to display message
000024C4  4E4F                    2290              TRAP        #15                 ; trap call
000024C6                          2291          
000024C6  6000 EB78               2292              BRA         LOOP
000024CA                          2293          
000024CA                          2294  ***********************************************************************************************************
000024CA                          2295  *
000024CA                          2296  *                       Shifting OPCODES
000024CA                          2297  *
000024CA                          2298  ***********************************************************************************************************
000024CA                          2299  
000024CA                          2300  opASL       
000024CA  43F9 00003D6C           2301              LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024D0  103C 000E               2302              MOVE.B      #14, D0             ; command for trap call to display message
000024D4  4E4F                    2303              TRAP        #15                 ; trap call
000024D6                          2304          
000024D6  43F9 00003D82           2305              LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024DC  103C 000E               2306              MOVE.B      #14, D0             ; command for trap call to display message
000024E0  4E4F                    2307              TRAP        #15                 ; trap call
000024E2                          2308          
000024E2  43F9 00003CE5           2309              LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024E8  103C 000E               2310              MOVE.B      #14, D0             ; command for trap call to display message
000024EC  4E4F                    2311              TRAP        #15                 ; trap call
000024EE                          2312          
000024EE  4242                    2313              CLR         D2
000024F0  4243                    2314              CLR         D3
000024F2  1401                    2315              MOVE.B      D1,D2
000024F4  1601                    2316              MOVE.B      D1,D3
000024F6                          2317          
000024F6  E602                    2318              ASR.B       #three, D2
000024F8  C47C 0007               2319              AND         #seven, D2
000024FC  C67C 0007               2320              AND         #seven, D3        
00002500                          2321          
00002500  4EB9 00002F08           2322              JSR         printEA
00002506                          2323          
00002506  43F9 00003CE1           2324              LEA         newLine, A1           ; Display space
0000250C  103C 000E               2325              MOVE.B      #14, D0             ; command for trap call to display message
00002510  4E4F                    2326              TRAP        #15                 ; trap call
00002512                          2327          
00002512  6000 EB2C               2328              BRA         LOOP
00002516                          2329  
00002516                          2330  opASR   
00002516  43F9 00003D68           2331              LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000251C  103C 000E               2332              MOVE.B      #14, D0             ; command for trap call to display message
00002520  4E4F                    2333              TRAP        #15                 ; trap call
00002522                          2334          
00002522  43F9 00003D82           2335              LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002528  103C 000E               2336              MOVE.B      #14, D0             ; command for trap call to display message
0000252C  4E4F                    2337              TRAP        #15                 ; trap call
0000252E                          2338          
0000252E  43F9 00003CE5           2339              LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002534  103C 000E               2340              MOVE.B      #14, D0             ; command for trap call to display message
00002538  4E4F                    2341              TRAP        #15                 ; trap call
0000253A                          2342              
0000253A  4242                    2343              CLR         D2
0000253C  4243                    2344              CLR         D3
0000253E  1401                    2345              MOVE.B      D1,D2
00002540  1601                    2346              MOVE.B      D1,D3
00002542                          2347          
00002542  E602                    2348              ASR.B       #three, D2
00002544  C47C 0007               2349              AND         #seven, D2
00002548  C67C 0007               2350              AND         #seven, D3        
0000254C                          2351          
0000254C  4EB9 00002F08           2352              JSR         printEA
00002552                          2353              
00002552  43F9 00003CE1           2354              LEA         newLine, A1           ; Display space
00002558  103C 000E               2355              MOVE.B      #14, D0             ; command for trap call to display message
0000255C  4E4F                    2356              TRAP        #15                 ; trap call
0000255E                          2357          
0000255E  6000 EAE0               2358              BRA         LOOP
00002562                          2359  
00002562                          2360  opLSL       
00002562  43F9 00003D64           2361              LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00002568  103C 000E               2362              MOVE.B      #14, D0             ; command for trap call to display message
0000256C  4E4F                    2363              TRAP        #15                 ; trap call
0000256E                          2364              
0000256E  43F9 00003D82           2365              LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002574  103C 000E               2366              MOVE.B      #14, D0             ; command for trap call to display message
00002578  4E4F                    2367              TRAP        #15                 ; trap call
0000257A                          2368              
0000257A  43F9 00003CE5           2369              LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002580  103C 000E               2370              MOVE.B      #14, D0             ; command for trap call to display message
00002584  4E4F                    2371              TRAP        #15                 ; trap call
00002586                          2372              
00002586  4242                    2373              CLR         D2
00002588  4243                    2374              CLR         D3
0000258A  1401                    2375              MOVE.B      D1,D2
0000258C  1601                    2376              MOVE.B      D1,D3
0000258E                          2377          
0000258E  E602                    2378              ASR.B       #three, D2
00002590  C47C 0007               2379              AND         #seven, D2
00002594  C67C 0007               2380              AND         #seven, D3        
00002598                          2381              
00002598  4EB9 00002F08           2382              JSR         printEA
0000259E                          2383          
0000259E  43F9 00003CE1           2384              LEA         newLine, A1           ; Display space
000025A4  103C 000E               2385              MOVE.B      #14, D0             ; command for trap call to display message
000025A8  4E4F                    2386              TRAP        #15                 ; trap call
000025AA                          2387          
000025AA  6000 EA94               2388              BRA         LOOP
000025AE                          2389  
000025AE                          2390  opLSR   
000025AE  43F9 00003D60           2391              LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
000025B4  103C 000E               2392              MOVE.B      #14, D0             ; command for trap call to display message
000025B8  4E4F                    2393              TRAP        #15                 ; trap call
000025BA                          2394          
000025BA  43F9 00003D82           2395              LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000025C0  103C 000E               2396              MOVE.B      #14, D0             ; command for trap call to display message
000025C4  4E4F                    2397              TRAP        #15                 ; trap call
000025C6                          2398          
000025C6  43F9 00003CE5           2399              LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
000025CC  103C 000E               2400              MOVE.B      #14, D0             ; command for trap call to display message
000025D0  4E4F                    2401              TRAP        #15                 ; trap call
000025D2                          2402          
000025D2  4242                    2403              CLR         D2
000025D4  4243                    2404              CLR         D3
000025D6  1401                    2405              MOVE.B      D1,D2
000025D8  1601                    2406              MOVE.B      D1,D3
000025DA                          2407          
000025DA  E602                    2408              ASR.B       #three, D2
000025DC  C47C 0007               2409              AND         #seven, D2
000025E0  C67C 0007               2410              AND         #seven, D3        
000025E4                          2411          
000025E4  4EB9 00002F08           2412              JSR         printEA
000025EA                          2413          
000025EA  43F9 00003CE1           2414              LEA         newLine, A1           ; Display space
000025F0  103C 000E               2415              MOVE.B      #14, D0             ; command for trap call to display message
000025F4  4E4F                    2416              TRAP        #15                 ; trap call
000025F6                          2417          
000025F6  6000 EA48               2418              BRA         LOOP
000025FA                          2419  
000025FA                          2420  opROL   
000025FA  43F9 00003D74           2421              LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00002600  103C 000E               2422              MOVE.B      #14, D0             ; command for trap call to display message
00002604  4E4F                    2423              TRAP        #15                 ; trap call
00002606                          2424          
00002606  43F9 00003D82           2425              LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000260C  103C 000E               2426              MOVE.B      #14, D0             ; command for trap call to display message
00002610  4E4F                    2427              TRAP        #15                 ; trap call
00002612                          2428          
00002612  43F9 00003CE5           2429              LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002618  103C 000E               2430              MOVE.B      #14, D0             ; command for trap call to display message
0000261C  4E4F                    2431              TRAP        #15                 ; trap call
0000261E                          2432          
0000261E  4242                    2433              CLR         D2
00002620  4243                    2434              CLR         D3
00002622  1401                    2435              MOVE.B      D1,D2
00002624  1601                    2436              MOVE.B      D1,D3
00002626                          2437          
00002626  E602                    2438              ASR.B       #three, D2
00002628  C47C 0007               2439              AND         #seven, D2
0000262C  C67C 0007               2440              AND         #seven, D3        
00002630                          2441          
00002630  4EB9 00002F08           2442              JSR         printEA
00002636                          2443          
00002636  43F9 00003CE1           2444              LEA         newLine, A1           ; Display space
0000263C  103C 000E               2445              MOVE.B      #14, D0             ; command for trap call to display message
00002640  4E4F                    2446              TRAP        #15                 ; trap call
00002642                          2447          
00002642  6000 E9FC               2448              BRA         LOOP
00002646                          2449  
00002646                          2450  opROR   
00002646  43F9 00003D70           2451              LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
0000264C  103C 000E               2452              MOVE.B      #14, D0             ; command for trap call to display message
00002650  4E4F                    2453              TRAP        #15                 ; trap call
00002652                          2454          
00002652  43F9 00003D82           2455              LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002658  103C 000E               2456              MOVE.B      #14, D0             ; command for trap call to display message
0000265C  4E4F                    2457              TRAP        #15                 ; trap call
0000265E                          2458          
0000265E  43F9 00003CE5           2459              LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002664  103C 000E               2460              MOVE.B      #14, D0             ; command for trap call to display message
00002668  4E4F                    2461              TRAP        #15                 ; trap call
0000266A                          2462          
0000266A  4242                    2463              CLR         D2
0000266C  4243                    2464              CLR         D3
0000266E  1401                    2465              MOVE.B      D1,D2
00002670  1601                    2466              MOVE.B      D1,D3
00002672                          2467          
00002672  E602                    2468              ASR.B       #three, D2
00002674  C47C 0007               2469              AND         #seven, D2
00002678  C67C 0007               2470              AND         #seven, D3        
0000267C                          2471          
0000267C  4EB9 00002F08           2472              JSR         printEA
00002682                          2473          
00002682  43F9 00003CE1           2474              LEA         newLine, A1           ; Display space
00002688  103C 000E               2475              MOVE.B      #14, D0             ; command for trap call to display message
0000268C  4E4F                    2476              TRAP        #15                 ; trap call
0000268E                          2477              
0000268E  6000 E9B0               2478              BRA         LOOP
00002692                          2479          
00002692                          2480  memSB       
00002692  4242                    2481              CLR         D2
00002694  1401                    2482              MOVE.B      D1,D2
00002696  E642                    2483              ASR         #three, D2
00002698                          2484              
00002698  C47C 0007               2485              AND         #$07, D2
0000269C                          2486          
0000269C  B43C 0000               2487              CMP.B       #zero, D2
000026A0  6700 002E               2488              BEQ         opASBI
000026A4  B43C 0004               2489              CMP.B       #four, D2
000026A8  6700 0088               2490              BEQ         opASBR
000026AC  B43C 0001               2491              CMP.B       #one, D2
000026B0  6700 00E2               2492              BEQ         opLSBI
000026B4  B43C 0005               2493              CMP.B       #five, D2
000026B8  6700 013C               2494              BEQ         opLSBR
000026BC  B43C 0003               2495              CMP.B       #three, D2
000026C0  6700 0196               2496              BEQ         opROBI
000026C4  B43C 0007               2497              CMP.B       #seven, D2
000026C8  6700 01F0               2498              BEQ         opROBR
000026CC  6000 15A8               2499              BRA         printInvalid
000026D0                          2500          
000026D0                          2501  opASBI  
000026D0  4242                    2502              CLR         D2
000026D2  3401                    2503              MOVE.W      D1, D2
000026D4  E042                    2504              ASR         #eight, D2
000026D6  C47C 0001               2505              AND         #$01, D2
000026DA                          2506      
000026DA  B43C 0000               2507              CMP.B       #zero, D2
000026DE  6700 000E               2508              BEQ         opASRBI
000026E2  B43C 0001               2509              CMP.B       #one, D2
000026E6  6700 0028               2510              BEQ         opASLBI
000026EA  6000 158A               2511              BRA         printInvalid
000026EE                          2512          
000026EE                          2513  opASRBI 
000026EE  43F9 00003D68           2514              LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000026F4  103C 000E               2515              MOVE.B      #14, D0             ; command for trap call to display message
000026F8  4E4F                    2516              TRAP        #15                 ; trap call
000026FA                          2517  
000026FA  43F9 00003D7F           2518              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002700  103C 000E               2519              MOVE.B      #14, D0             ; command for trap call to display message
00002704  4E4F                    2520              TRAP        #15                 ; trap call
00002706                          2521          
00002706  4EB9 00002E30           2522              JSR         PrntImm
0000270C                          2523          
0000270C  6000 E932               2524              BRA         LOOP
00002710                          2525  
00002710                          2526  opASLBI 
00002710  43F9 00003D6C           2527              LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002716  103C 000E               2528              MOVE.B      #14, D0             ; command for trap call to display message
0000271A  4E4F                    2529              TRAP        #15                 ; trap call
0000271C                          2530  
0000271C  43F9 00003D7F           2531              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002722  103C 000E               2532              MOVE.B      #14, D0             ; command for trap call to display message
00002726  4E4F                    2533              TRAP        #15                 ; trap call
00002728                          2534          
00002728  4EB9 00002E30           2535              JSR         PrntImm
0000272E                          2536          
0000272E  6000 E910               2537              BRA         LOOP
00002732                          2538  
00002732                          2539  opASBR  
00002732  4242                    2540              CLR         D2
00002734  3401                    2541              MOVE.W      D1, D2
00002736  E042                    2542              ASR         #eight, D2
00002738  C47C 0001               2543              AND         #$01, D2
0000273C                          2544      
0000273C  B43C 0000               2545              CMP.B       #zero, D2
00002740  6700 000E               2546              BEQ         opASRBR
00002744  B43C 0001               2547              CMP.B       #one, D2
00002748  6700 0028               2548              BEQ         opASLBR
0000274C  6000 1528               2549              BRA         printInvalid 
00002750                          2550          
00002750                          2551  opASRBR 
00002750  43F9 00003D68           2552              LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002756  103C 000E               2553              MOVE.B      #14, D0             ; command for trap call to display message
0000275A  4E4F                    2554              TRAP        #15                 ; trap call
0000275C                          2555  
0000275C  43F9 00003D7F           2556              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002762  103C 000E               2557              MOVE.B      #14, D0             ; command for trap call to display message
00002766  4E4F                    2558              TRAP        #15                 ; trap call
00002768                          2559          
00002768  4EB9 00002E8C           2560              JSR         PrntReg
0000276E                          2561          
0000276E  6000 E8D0               2562              BRA         LOOP
00002772                          2563  
00002772                          2564  opASLBR 
00002772  43F9 00003D6C           2565              LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002778  103C 000E               2566              MOVE.B      #14, D0             ; command for trap call to display message
0000277C  4E4F                    2567              TRAP        #15                 ; trap call
0000277E                          2568  
0000277E  43F9 00003D7F           2569              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002784  103C 000E               2570              MOVE.B      #14, D0             ; command for trap call to display message
00002788  4E4F                    2571              TRAP        #15                 ; trap call
0000278A                          2572          
0000278A  4EB9 00002E8C           2573              JSR         PrntReg
00002790                          2574          
00002790  6000 E8AE               2575              BRA         LOOP
00002794                          2576  
00002794                          2577  opLSBI      
00002794  4242                    2578              CLR         D2
00002796  3401                    2579              MOVE.W      D1, D2
00002798  E042                    2580              ASR         #eight, D2
0000279A  C47C 0001               2581              AND         #$01, D2
0000279E                          2582      
0000279E  B43C 0000               2583              CMP.B       #zero, D2
000027A2  6700 000E               2584              BEQ         opLSRBI
000027A6  B43C 0001               2585              CMP.B       #one, D2
000027AA  6700 0028               2586              BEQ         opLSLBI
000027AE  6000 14C6               2587              BRA         printInvalid 
000027B2                          2588          
000027B2                          2589  opLSRBI 
000027B2  43F9 00003D60           2590              LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027B8  103C 000E               2591              MOVE.B      #14, D0             ; command for trap call to display message
000027BC  4E4F                    2592              TRAP        #15                 ; trap call
000027BE                          2593  
000027BE  43F9 00003D7F           2594              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027C4  103C 000E               2595              MOVE.B      #14, D0             ; command for trap call to display message
000027C8  4E4F                    2596              TRAP        #15                 ; trap call
000027CA                          2597          
000027CA  4EB9 00002E30           2598              JSR         PrntImm
000027D0                          2599          
000027D0  6000 E86E               2600              BRA         LOOP
000027D4                          2601              
000027D4                          2602  opLSLBI     
000027D4  43F9 00003D64           2603              LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027DA  103C 000E               2604              MOVE.B      #14, D0             ; command for trap call to display message
000027DE  4E4F                    2605              TRAP        #15                 ; trap call
000027E0                          2606  
000027E0  43F9 00003D7F           2607              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027E6  103C 000E               2608              MOVE.B      #14, D0             ; command for trap call to display message
000027EA  4E4F                    2609              TRAP        #15                 ; trap call
000027EC                          2610          
000027EC  4EB9 00002E30           2611              JSR         PrntImm
000027F2                          2612          
000027F2  6000 E84C               2613              BRA         LOOP
000027F6                          2614  
000027F6                          2615  opLSBR  
000027F6  4242                    2616              CLR         D2
000027F8  3401                    2617              MOVE.W      D1, D2
000027FA  E042                    2618              ASR         #eight, D2
000027FC  C47C 0001               2619              AND         #$01, D2
00002800                          2620      
00002800  B43C 0000               2621              CMP.B       #zero, D2
00002804  6700 000E               2622              BEQ         opLSRBR
00002808  B43C 0001               2623              CMP.B       #one, D2
0000280C  6700 0028               2624              BEQ         opLSLBR
00002810  6000 1464               2625              BRA         printInvalid 
00002814                          2626          
00002814                          2627  opLSRBR 
00002814  43F9 00003D60           2628              LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000281A  103C 000E               2629              MOVE.B      #14, D0             ; command for trap call to display message
0000281E  4E4F                    2630              TRAP        #15                 ; trap call
00002820                          2631  
00002820  43F9 00003D7F           2632              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002826  103C 000E               2633              MOVE.B      #14, D0             ; command for trap call to display message
0000282A  4E4F                    2634              TRAP        #15                 ; trap call
0000282C                          2635          
0000282C  4EB9 00002E8C           2636              JSR         PrntReg
00002832                          2637          
00002832  6000 E80C               2638              BRA         LOOP
00002836                          2639          
00002836                          2640  opLSLBR     
00002836  43F9 00003D64           2641              LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000283C  103C 000E               2642              MOVE.B      #14, D0             ; command for trap call to display message
00002840  4E4F                    2643              TRAP        #15                 ; trap call
00002842                          2644  
00002842  43F9 00003D7F           2645              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002848  103C 000E               2646              MOVE.B      #14, D0             ; command for trap call to display message
0000284C  4E4F                    2647              TRAP        #15                 ; trap call
0000284E                          2648          
0000284E  4EB9 00002E8C           2649              JSR         PrntReg
00002854                          2650          
00002854  6000 E7EA               2651              BRA         LOOP
00002858                          2652              
00002858                          2653  opROBI  
00002858  4242                    2654              CLR         D2
0000285A  3401                    2655              MOVE.W      D1, D2
0000285C  E042                    2656              ASR         #eight, D2
0000285E  C47C 0001               2657              AND         #$01, D2
00002862                          2658      
00002862  B43C 0000               2659              CMP.B       #zero, D2
00002866  6700 000E               2660              BEQ         opRORBI
0000286A  B43C 0001               2661              CMP.B       #one, D2
0000286E  6700 0028               2662              BEQ         opROLBI
00002872  6000 1402               2663              BRA         printInvalid 
00002876                          2664          
00002876                          2665  opRORBI 
00002876  43F9 00003D70           2666              LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000287C  103C 000E               2667              MOVE.B      #14, D0             ; command for trap call to display message
00002880  4E4F                    2668              TRAP        #15                 ; trap call
00002882                          2669  
00002882  43F9 00003D7F           2670              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002888  103C 000E               2671              MOVE.B      #14, D0             ; command for trap call to display message
0000288C  4E4F                    2672              TRAP        #15                 ; trap call
0000288E                          2673          
0000288E  4EB9 00002E30           2674              JSR         PrntImm
00002894                          2675          
00002894  6000 E7AA               2676              BRA         LOOP
00002898                          2677  
00002898                          2678  opROLBI 
00002898  43F9 00003D74           2679              LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000289E  103C 000E               2680              MOVE.B      #14, D0             ; command for trap call to display message
000028A2  4E4F                    2681              TRAP        #15                 ; trap call
000028A4                          2682  
000028A4  43F9 00003D7F           2683              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028AA  103C 000E               2684              MOVE.B      #14, D0             ; command for trap call to display message
000028AE  4E4F                    2685              TRAP        #15                 ; trap call
000028B0                          2686          
000028B0  4EB9 00002E30           2687              JSR         PrntImm
000028B6                          2688          
000028B6  6000 E788               2689              BRA         LOOP
000028BA                          2690  
000028BA                          2691  opROBR  
000028BA  4242                    2692              CLR         D2
000028BC  3401                    2693              MOVE.W      D1, D2
000028BE  E042                    2694              ASR         #eight, D2
000028C0  C47C 0001               2695              AND         #$01, D2
000028C4                          2696      
000028C4  B43C 0000               2697              CMP.B       #zero, D2
000028C8  6700 000E               2698              BEQ         opRORBR
000028CC  B43C 0001               2699              CMP.B       #one, D2
000028D0  6700 0028               2700              BEQ         opROLBR
000028D4  6000 13A0               2701              BRA         printInvalid     
000028D8                          2702          
000028D8                          2703  opRORBR 
000028D8  43F9 00003D70           2704              LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028DE  103C 000E               2705              MOVE.B      #14, D0             ; command for trap call to display message
000028E2  4E4F                    2706              TRAP        #15                 ; trap call
000028E4                          2707  
000028E4  43F9 00003D7F           2708              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028EA  103C 000E               2709              MOVE.B      #14, D0             ; command for trap call to display message
000028EE  4E4F                    2710              TRAP        #15                 ; trap call
000028F0                          2711          
000028F0  4EB9 00002E8C           2712              JSR         PrntReg
000028F6                          2713          
000028F6  6000 E748               2714              BRA         LOOP
000028FA                          2715  
000028FA                          2716  opROLBR 
000028FA  43F9 00003D74           2717              LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002900  103C 000E               2718              MOVE.B      #14, D0             ; command for trap call to display message
00002904  4E4F                    2719              TRAP        #15                 ; trap call
00002906                          2720  
00002906  43F9 00003D7F           2721              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000290C  103C 000E               2722              MOVE.B      #14, D0             ; command for trap call to display message
00002910  4E4F                    2723              TRAP        #15                 ; trap call
00002912                          2724          
00002912  4EB9 00002E8C           2725              JSR         PrntReg
00002918                          2726          
00002918  6000 E726               2727              BRA         LOOP       
0000291C                          2728  
0000291C                          2729  memSW   
0000291C  4242                    2730              CLR         D2
0000291E  1401                    2731              MOVE.B      D1,D2
00002920  E642                    2732              ASR         #three, D2
00002922                          2733          
00002922  C47C 0007               2734              AND         #$07, D2
00002926                          2735          
00002926  B43C 0000               2736              CMP.B       #zero, D2
0000292A  6700 002E               2737              BEQ         opASWI
0000292E  B43C 0004               2738              CMP.B       #four, D2
00002932  6700 0088               2739              BEQ         opASWR
00002936  B43C 0001               2740              CMP.B       #one, D2
0000293A  6700 00E2               2741              BEQ         opLSWI
0000293E  B43C 0005               2742              CMP.B       #five, D2
00002942  6700 013C               2743              BEQ         opLSWR
00002946  B43C 0003               2744              CMP.B       #three, D2
0000294A  6700 0196               2745              BEQ         opROWI
0000294E  B43C 0007               2746              CMP.B       #seven, D2
00002952  6700 01F0               2747              BEQ         opROWR
00002956  6000 131E               2748              BRA         printInvalid
0000295A                          2749          
0000295A                          2750  opASWI  
0000295A  4242                    2751              CLR         D2
0000295C  3401                    2752              MOVE.W      D1, D2
0000295E  E042                    2753              ASR         #eight, D2
00002960  C47C 0001               2754              AND         #$01, D2
00002964                          2755      
00002964  B43C 0000               2756              CMP.B       #zero, D2
00002968  6700 000E               2757              BEQ         opASRWI
0000296C  B43C 0001               2758              CMP.B       #one, D2
00002970  6700 0028               2759              BEQ         opASLWI
00002974  6000 1300               2760              BRA         printInvalid
00002978                          2761          
00002978                          2762  opASRWI 
00002978  43F9 00003D68           2763              LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000297E  103C 000E               2764              MOVE.B      #14, D0             ; command for trap call to display message
00002982  4E4F                    2765              TRAP        #15                 ; trap call
00002984                          2766  
00002984  43F9 00003D82           2767              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000298A  103C 000E               2768              MOVE.B      #14, D0             ; command for trap call to display message
0000298E  4E4F                    2769              TRAP        #15                 ; trap call
00002990                          2770          
00002990  4EB9 00002E30           2771              JSR         PrntImm
00002996                          2772          
00002996  6000 E6A8               2773              BRA         LOOP
0000299A                          2774  
0000299A                          2775  opASLWI 
0000299A  43F9 00003D6C           2776              LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000029A0  103C 000E               2777              MOVE.B      #14, D0             ; command for trap call to display message
000029A4  4E4F                    2778              TRAP        #15                 ; trap call
000029A6                          2779  
000029A6  43F9 00003D82           2780              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000029AC  103C 000E               2781              MOVE.B      #14, D0             ; command for trap call to display message
000029B0  4E4F                    2782              TRAP        #15                 ; trap call
000029B2                          2783              
000029B2  4EB9 00002E30           2784              JSR         PrntImm
000029B8                          2785              
000029B8  6000 E686               2786              BRA         LOOP
000029BC                          2787  
000029BC                          2788  opASWR  
000029BC  4242                    2789              CLR         D2
000029BE  3401                    2790              MOVE.W      D1, D2
000029C0  E042                    2791              ASR         #eight, D2
000029C2  C47C 0001               2792              AND         #$01, D2
000029C6                          2793      
000029C6  B43C 0000               2794              CMP.B       #zero, D2
000029CA  6700 000E               2795              BEQ         opASRWR
000029CE  B43C 0001               2796              CMP.B       #one, D2
000029D2  6700 0028               2797              BEQ         opASLWR
000029D6  6000 129E               2798              BRA         printInvalid 
000029DA                          2799          
000029DA                          2800  opASRWR     
000029DA  43F9 00003D68           2801              LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000029E0  103C 000E               2802              MOVE.B      #14, D0             ; command for trap call to display message
000029E4  4E4F                    2803              TRAP        #15                 ; trap call
000029E6                          2804  
000029E6  43F9 00003D82           2805              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000029EC  103C 000E               2806              MOVE.B      #14, D0             ; command for trap call to display message
000029F0  4E4F                    2807              TRAP        #15                 ; trap call
000029F2                          2808          
000029F2  4EB9 00002E8C           2809              JSR         PrntReg
000029F8                          2810          
000029F8  6000 E646               2811              BRA         LOOP
000029FC                          2812  
000029FC                          2813  opASLWR     
000029FC  43F9 00003D6C           2814              LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002A02  103C 000E               2815              MOVE.B      #14, D0             ; command for trap call to display message
00002A06  4E4F                    2816              TRAP        #15                 ; trap call
00002A08                          2817  
00002A08  43F9 00003D82           2818              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A0E  103C 000E               2819              MOVE.B      #14, D0             ; command for trap call to display message
00002A12  4E4F                    2820              TRAP        #15                 ; trap call
00002A14                          2821          
00002A14  4EB9 00002E8C           2822              JSR         PrntReg
00002A1A                          2823          
00002A1A  6000 E624               2824              BRA         LOOP
00002A1E                          2825  
00002A1E                          2826  opLSWI      
00002A1E  4242                    2827              CLR         D2
00002A20  3401                    2828              MOVE.W      D1, D2
00002A22  E042                    2829              ASR         #eight, D2
00002A24  C47C 0001               2830              AND         #$01, D2
00002A28                          2831      
00002A28  B43C 0000               2832              CMP.B       #zero, D2
00002A2C  6700 000E               2833              BEQ         opLSRWI
00002A30  B43C 0001               2834              CMP.B       #one, D2
00002A34  6700 0028               2835              BEQ         opLSLWI
00002A38  6000 123C               2836              BRA         printInvalid 
00002A3C                          2837          
00002A3C                          2838  opLSRWI 
00002A3C  43F9 00003D60           2839              LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A42  103C 000E               2840              MOVE.B      #14, D0             ; command for trap call to display message
00002A46  4E4F                    2841              TRAP        #15                 ; trap call
00002A48                          2842      
00002A48  43F9 00003D82           2843              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A4E  103C 000E               2844              MOVE.B      #14, D0             ; command for trap call to display message
00002A52  4E4F                    2845              TRAP        #15                 ; trap call
00002A54                          2846          
00002A54  4EB9 00002E30           2847              JSR         PrntImm
00002A5A                          2848          
00002A5A  6000 E5E4               2849              BRA         LOOP
00002A5E                          2850              
00002A5E                          2851  opLSLWI 
00002A5E  43F9 00003D64           2852              LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A64  103C 000E               2853              MOVE.B      #14, D0             ; command for trap call to display message
00002A68  4E4F                    2854              TRAP        #15                 ; trap call
00002A6A                          2855  
00002A6A  43F9 00003D82           2856              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A70  103C 000E               2857              MOVE.B      #14, D0             ; command for trap call to display message
00002A74  4E4F                    2858              TRAP        #15                 ; trap call
00002A76                          2859          
00002A76  4EB9 00002E30           2860              JSR         PrntImm
00002A7C                          2861          
00002A7C  6000 E5C2               2862              BRA         LOOP
00002A80                          2863              
00002A80                          2864  opLSWR  
00002A80  4242                    2865              CLR         D2
00002A82  3401                    2866              MOVE.W      D1, D2
00002A84  E042                    2867              ASR         #eight, D2
00002A86  C47C 0001               2868              AND         #$01, D2
00002A8A                          2869      
00002A8A  B43C 0000               2870              CMP.B       #zero, D2
00002A8E  6700 000E               2871              BEQ         opLSRWR
00002A92  B43C 0001               2872              CMP.B       #one, D2
00002A96  6700 0028               2873              BEQ         opLSLWR
00002A9A  6000 11DA               2874              BRA         printInvalid 
00002A9E                          2875          
00002A9E                          2876  opLSRWR 
00002A9E  43F9 00003D60           2877              LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002AA4  103C 000E               2878              MOVE.B      #14, D0             ; command for trap call to display message
00002AA8  4E4F                    2879              TRAP        #15                 ; trap call
00002AAA                          2880  
00002AAA  43F9 00003D82           2881              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002AB0  103C 000E               2882              MOVE.B      #14, D0             ; command for trap call to display message
00002AB4  4E4F                    2883              TRAP        #15                 ; trap call
00002AB6                          2884          
00002AB6  4EB9 00002E8C           2885              JSR         PrntReg
00002ABC                          2886          
00002ABC  6000 E582               2887              BRA         LOOP
00002AC0                          2888          
00002AC0                          2889  opLSLWR 
00002AC0  43F9 00003D64           2890              LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002AC6  103C 000E               2891              MOVE.B      #14, D0             ; command for trap call to display message
00002ACA  4E4F                    2892              TRAP        #15                 ; trap call
00002ACC                          2893  
00002ACC  43F9 00003D82           2894              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002AD2  103C 000E               2895              MOVE.B      #14, D0             ; command for trap call to display message
00002AD6  4E4F                    2896              TRAP        #15                 ; trap call
00002AD8                          2897          
00002AD8  4EB9 00002E8C           2898              JSR         PrntReg
00002ADE                          2899          
00002ADE  6000 E560               2900              BRA         LOOP
00002AE2                          2901  
00002AE2                          2902  opROWI  
00002AE2  4242                    2903              CLR         D2
00002AE4  3401                    2904              MOVE.W      D1, D2
00002AE6  E042                    2905              ASR         #eight, D2
00002AE8  C47C 0001               2906              AND         #$01, D2
00002AEC                          2907      
00002AEC  B43C 0000               2908              CMP.B       #zero, D2
00002AF0  6700 000E               2909              BEQ         opRORWI
00002AF4  B43C 0001               2910              CMP.B       #one, D2
00002AF8  6700 0028               2911              BEQ         opROLWI
00002AFC  6000 1178               2912              BRA         printInvalid 
00002B00                          2913          
00002B00                          2914  opRORWI 
00002B00  43F9 00003D70           2915              LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B06  103C 000E               2916              MOVE.B      #14, D0             ; command for trap call to display message
00002B0A  4E4F                    2917              TRAP        #15                 ; trap call
00002B0C                          2918  
00002B0C  43F9 00003D82           2919              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B12  103C 000E               2920              MOVE.B      #14, D0             ; command for trap call to display message
00002B16  4E4F                    2921              TRAP        #15                 ; trap call
00002B18                          2922          
00002B18  4EB9 00002E30           2923              JSR         PrntImm
00002B1E                          2924          
00002B1E  6000 E520               2925              BRA         LOOP
00002B22                          2926  
00002B22                          2927  opROLWI     
00002B22  43F9 00003D74           2928              LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B28                          2929          
00002B28  103C 000E               2930              MOVE.B      #14, D0             ; command for trap call to display message
00002B2C  4E4F                    2931              TRAP        #15                 ; trap call
00002B2E                          2932  
00002B2E  43F9 00003D82           2933              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B34  103C 000E               2934              MOVE.B      #14, D0             ; command for trap call to display message
00002B38  4E4F                    2935              TRAP        #15                 ; trap call
00002B3A                          2936          
00002B3A  4EB9 00002E30           2937              JSR         PrntImm
00002B40                          2938          
00002B40  6000 E4FE               2939              BRA         LOOP
00002B44                          2940  
00002B44                          2941  opROWR      
00002B44  4242                    2942              CLR         D2
00002B46  3401                    2943              MOVE.W      D1, D2
00002B48  E042                    2944              ASR         #eight, D2
00002B4A  C47C 0001               2945              AND         #$01, D2
00002B4E                          2946      
00002B4E  B43C 0000               2947              CMP.B       #zero, D2
00002B52  6700 000E               2948              BEQ         opRORWR
00002B56  B43C 0001               2949              CMP.B       #one, D2
00002B5A  6700 0028               2950              BEQ         opROLWR
00002B5E  6000 1116               2951              BRA         printInvalid     
00002B62                          2952          
00002B62                          2953  opRORWR 
00002B62  43F9 00003D70           2954              LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B68  103C 000E               2955              MOVE.B      #14, D0             ; command for trap call to display message
00002B6C  4E4F                    2956              TRAP        #15                 ; trap call
00002B6E                          2957      
00002B6E  43F9 00003D82           2958              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B74  103C 000E               2959              MOVE.B      #14, D0             ; command for trap call to display message
00002B78  4E4F                    2960              TRAP        #15                 ; trap call
00002B7A                          2961          
00002B7A  4EB9 00002E8C           2962              JSR         PrntReg
00002B80                          2963          
00002B80  6000 E4BE               2964              BRA         LOOP
00002B84                          2965  
00002B84                          2966  opROLWR 
00002B84  43F9 00003D74           2967              LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B8A  103C 000E               2968              MOVE.B      #14, D0             ; command for trap call to display message
00002B8E  4E4F                    2969              TRAP        #15                 ; trap call
00002B90                          2970  
00002B90  43F9 00003D82           2971              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B96  103C 000E               2972              MOVE.B      #14, D0             ; command for trap call to display message
00002B9A  4E4F                    2973              TRAP        #15                 ; trap call
00002B9C                          2974          
00002B9C  4EB9 00002E8C           2975              JSR         PrntReg
00002BA2                          2976          
00002BA2  6000 E49C               2977              BRA         LOOP
00002BA6                          2978  
00002BA6                          2979  memSL   
00002BA6  4242                    2980              CLR         D2
00002BA8  1401                    2981              MOVE.B      D1,D2
00002BAA  E642                    2982              ASR         #three, D2
00002BAC                          2983          
00002BAC  C47C 0007               2984              AND         #$07, D2
00002BB0                          2985          
00002BB0  B43C 0000               2986              CMP.B       #zero, D2
00002BB4  6700 002E               2987              BEQ         opASLI
00002BB8  B43C 0004               2988              CMP.B       #four, D2
00002BBC  6700 0088               2989              BEQ         opASLR
00002BC0  B43C 0001               2990              CMP.B       #one, D2
00002BC4  6700 00E2               2991              BEQ         opLSLI
00002BC8  B43C 0005               2992              CMP.B       #five, D2
00002BCC  6700 013C               2993              BEQ         opLSLR
00002BD0  B43C 0003               2994              CMP.B       #three, D2
00002BD4  6700 0196               2995              BEQ         opROLI
00002BD8  B43C 0007               2996              CMP.B       #seven, D2
00002BDC  6700 01F0               2997              BEQ         opROLR
00002BE0  6000 1094               2998              BRA         printInvalid
00002BE4                          2999          
00002BE4                          3000  opASLI  
00002BE4  4242                    3001              CLR         D2
00002BE6  3401                    3002              MOVE.W      D1, D2
00002BE8  E042                    3003              ASR         #eight, D2
00002BEA  C47C 0001               3004              AND         #$01, D2
00002BEE                          3005      
00002BEE  B43C 0000               3006              CMP.B       #zero, D2
00002BF2  6700 000E               3007              BEQ         opASRLI
00002BF6  B43C 0001               3008              CMP.B       #one, D2
00002BFA  6700 0028               3009              BEQ         opASLLI
00002BFE  6000 1076               3010              BRA         printInvalid
00002C02                          3011          
00002C02                          3012  opASRLI 
00002C02  43F9 00003D68           3013              LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C08  103C 000E               3014              MOVE.B      #14, D0             ; command for trap call to display message
00002C0C  4E4F                    3015              TRAP        #15                 ; trap call
00002C0E                          3016  
00002C0E  43F9 00003D85           3017              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C14  103C 000E               3018              MOVE.B      #14, D0             ; command for trap call to display message
00002C18  4E4F                    3019              TRAP        #15                 ; trap call
00002C1A                          3020          
00002C1A  4EB9 00002E30           3021              JSR         PrntImm
00002C20                          3022          
00002C20  6000 E41E               3023              BRA         LOOP
00002C24                          3024  
00002C24                          3025  opASLLI 
00002C24  43F9 00003D6C           3026              LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002C2A  103C 000E               3027              MOVE.B      #14, D0             ; command for trap call to display message
00002C2E  4E4F                    3028              TRAP        #15                 ; trap call
00002C30                          3029  
00002C30  43F9 00003D85           3030              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C36  103C 000E               3031              MOVE.B      #14, D0             ; command for trap call to display message
00002C3A  4E4F                    3032              TRAP        #15                 ; trap call
00002C3C                          3033          
00002C3C  4EB9 00002E30           3034              JSR         PrntImm
00002C42                          3035          
00002C42  6000 E3FC               3036              BRA         LOOP
00002C46                          3037  
00002C46                          3038  opASLR  
00002C46  4242                    3039              CLR         D2
00002C48  3401                    3040              MOVE.W      D1, D2
00002C4A  E042                    3041              ASR         #eight, D2
00002C4C  C47C 0001               3042              AND         #$01, D2
00002C50                          3043          
00002C50  B43C 0000               3044              CMP.B       #zero, D2
00002C54  6700 000E               3045              BEQ         opASRLR
00002C58  B43C 0001               3046              CMP.B       #one, D2
00002C5C  6700 0028               3047              BEQ         opASLLR
00002C60  6000 1014               3048              BRA         printInvalid 
00002C64                          3049          
00002C64                          3050  opASRLR 
00002C64  43F9 00003D68           3051              LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002C6A  103C 000E               3052              MOVE.B      #14, D0             ; command for trap call to display message
00002C6E  4E4F                    3053              TRAP        #15                 ; trap call
00002C70                          3054  
00002C70  43F9 00003D85           3055              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C76  103C 000E               3056              MOVE.B      #14, D0             ; command for trap call to display message
00002C7A  4E4F                    3057              TRAP        #15                 ; trap call
00002C7C                          3058          
00002C7C  4EB9 00002E8C           3059              JSR         PrntReg
00002C82                          3060          
00002C82  6000 E3BC               3061              BRA         LOOP
00002C86                          3062  
00002C86                          3063  opASLLR 
00002C86  43F9 00003D6C           3064              LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002C8C  103C 000E               3065              MOVE.B      #14, D0             ; command for trap call to display message
00002C90  4E4F                    3066              TRAP        #15                 ; trap call
00002C92                          3067  
00002C92  43F9 00003D85           3068              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C98  103C 000E               3069              MOVE.B      #14, D0             ; command for trap call to display message
00002C9C  4E4F                    3070              TRAP        #15                 ; trap call
00002C9E                          3071          
00002C9E  4EB9 00002E8C           3072              JSR         PrntReg
00002CA4                          3073          
00002CA4  6000 E39A               3074              BRA         LOOP
00002CA8                          3075  
00002CA8                          3076  opLSLI  
00002CA8  4242                    3077              CLR         D2
00002CAA  3401                    3078              MOVE.W      D1, D2
00002CAC  E042                    3079              ASR         #eight, D2
00002CAE  C47C 0001               3080              AND         #$01, D2
00002CB2                          3081      
00002CB2  B43C 0000               3082              CMP.B       #zero, D2
00002CB6  6700 000E               3083              BEQ         opLSRLI
00002CBA  B43C 0001               3084              CMP.B       #one, D2
00002CBE  6700 0028               3085              BEQ         opLSLLI
00002CC2  6000 0FB2               3086              BRA         printInvalid 
00002CC6                          3087          
00002CC6                          3088  opLSRLI 
00002CC6  43F9 00003D60           3089              LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CCC  103C 000E               3090              MOVE.B      #14, D0             ; command for trap call to display message
00002CD0  4E4F                    3091              TRAP        #15                 ; trap call
00002CD2                          3092  
00002CD2  43F9 00003D85           3093              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CD8  103C 000E               3094              MOVE.B      #14, D0             ; command for trap call to display message
00002CDC  4E4F                    3095              TRAP        #15                 ; trap call
00002CDE                          3096          
00002CDE  4EB9 00002E30           3097              JSR         PrntImm
00002CE4                          3098          
00002CE4  6000 E35A               3099              BRA         LOOP
00002CE8                          3100  
00002CE8                          3101  
00002CE8                          3102  opLSLLI 
00002CE8  43F9 00003D64           3103              LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CEE  103C 000E               3104              MOVE.B      #14, D0             ; command for trap call to display message
00002CF2  4E4F                    3105              TRAP        #15                 ; trap call
00002CF4                          3106  
00002CF4  43F9 00003D85           3107              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CFA  103C 000E               3108              MOVE.B      #14, D0             ; command for trap call to display message
00002CFE  4E4F                    3109              TRAP        #15                 ; trap call
00002D00                          3110              
00002D00  4EB9 00002E30           3111              JSR         PrntImm
00002D06                          3112          
00002D06  6000 E338               3113              BRA         LOOP
00002D0A                          3114  
00002D0A                          3115  opLSLR  
00002D0A  4242                    3116              CLR         D2
00002D0C  3401                    3117              MOVE.W      D1, D2
00002D0E  E042                    3118              ASR         #eight, D2
00002D10  C47C 0001               3119              AND         #$01, D2
00002D14                          3120      
00002D14  B43C 0000               3121              CMP.B       #zero, D2
00002D18  6700 000E               3122              BEQ         opLSRLR
00002D1C  B43C 0001               3123              CMP.B       #one, D2
00002D20  6700 0028               3124              BEQ         opLSLLR
00002D24  6000 0F50               3125              BRA         printInvalid 
00002D28                          3126          
00002D28                          3127  opLSRLR 
00002D28  43F9 00003D60           3128              LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002D2E  103C 000E               3129              MOVE.B      #14, D0             ; command for trap call to display message
00002D32  4E4F                    3130              TRAP        #15                 ; trap call
00002D34                          3131  
00002D34  43F9 00003D85           3132              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D3A  103C 000E               3133              MOVE.B      #14, D0             ; command for trap call to display message
00002D3E  4E4F                    3134              TRAP        #15                 ; trap call
00002D40                          3135          
00002D40  4EB9 00002E8C           3136              JSR         PrntReg
00002D46                          3137          
00002D46  6000 E2F8               3138              BRA         LOOP
00002D4A                          3139          
00002D4A                          3140  opLSLLR 
00002D4A  43F9 00003D64           3141              LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002D50  103C 000E               3142              MOVE.B      #14, D0             ; command for trap call to display message
00002D54  4E4F                    3143              TRAP        #15                 ; trap call
00002D56                          3144  
00002D56  43F9 00003D85           3145              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D5C  103C 000E               3146              MOVE.B      #14, D0             ; command for trap call to display message
00002D60  4E4F                    3147              TRAP        #15                 ; trap call
00002D62                          3148          
00002D62  4EB9 00002E8C           3149              JSR         PrntReg
00002D68                          3150          
00002D68  6000 E2D6               3151              BRA         LOOP
00002D6C                          3152              
00002D6C                          3153  opROLI  
00002D6C  4242                    3154              CLR         D2
00002D6E  3401                    3155              MOVE.W      D1, D2
00002D70  E042                    3156              ASR         #eight, D2
00002D72  C47C 0001               3157              AND         #$01, D2
00002D76                          3158          
00002D76  B43C 0000               3159              CMP.B       #zero, D2
00002D7A  6700 000E               3160              BEQ         opRORLI
00002D7E  B43C 0001               3161              CMP.B       #one, D2
00002D82  6700 0028               3162              BEQ         opROLLI
00002D86  6000 0EEE               3163              BRA         printInvalid 
00002D8A                          3164          
00002D8A                          3165  opRORLI 
00002D8A  43F9 00003D70           3166              LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D90  103C 000E               3167              MOVE.B      #14, D0             ; command for trap call to display message
00002D94  4E4F                    3168              TRAP        #15                 ; trap call
00002D96                          3169  
00002D96  43F9 00003D85           3170              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D9C  103C 000E               3171              MOVE.B      #14, D0             ; command for trap call to display message
00002DA0  4E4F                    3172              TRAP        #15                 ; trap call
00002DA2                          3173          
00002DA2  4EB9 00002E30           3174              JSR         PrntImm
00002DA8                          3175          
00002DA8  6000 E296               3176              BRA         LOOP
00002DAC                          3177  
00002DAC                          3178  opROLLI 
00002DAC  43F9 00003D74           3179              LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DB2  103C 000E               3180              MOVE.B      #14, D0             ; command for trap call to display message
00002DB6  4E4F                    3181              TRAP        #15                 ; trap call
00002DB8                          3182  
00002DB8  43F9 00003D85           3183              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DBE  103C 000E               3184              MOVE.B      #14, D0             ; command for trap call to display message
00002DC2  4E4F                    3185              TRAP        #15                 ; trap call
00002DC4                          3186          
00002DC4  4EB9 00002E30           3187              JSR         PrntImm
00002DCA                          3188          
00002DCA  6000 E274               3189              BRA         LOOP
00002DCE                          3190  
00002DCE                          3191  opROLR  
00002DCE  4242                    3192              CLR         D2
00002DD0  3401                    3193              MOVE.W      D1, D2
00002DD2  E042                    3194              ASR         #eight, D2
00002DD4  C47C 0001               3195              AND         #$01, D2
00002DD8                          3196      
00002DD8  B43C 0000               3197              CMP.B       #zero, D2
00002DDC  6700 000E               3198              BEQ         opRORLR
00002DE0  B43C 0001               3199              CMP.B       #one, D2
00002DE4  6700 0028               3200              BEQ         opROLLR
00002DE8  6000 0E8C               3201              BRA         printInvalid     
00002DEC                          3202          
00002DEC                          3203  opRORLR 
00002DEC  43F9 00003D70           3204              LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DF2  103C 000E               3205              MOVE.B      #14, D0             ; command for trap call to display message
00002DF6  4E4F                    3206              TRAP        #15                 ; trap call
00002DF8                          3207  
00002DF8  43F9 00003D85           3208              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DFE  103C 000E               3209              MOVE.B      #14, D0             ; command for trap call to display message
00002E02  4E4F                    3210              TRAP        #15                 ; trap call
00002E04                          3211          
00002E04  4EB9 00002E8C           3212              JSR         PrntReg
00002E0A                          3213              
00002E0A  6000 E234               3214              BRA         LOOP
00002E0E                          3215  
00002E0E                          3216  opROLLR     
00002E0E  43F9 00003D74           3217              LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E14  103C 000E               3218              MOVE.B      #14, D0             ; command for trap call to display message
00002E18  4E4F                    3219              TRAP        #15                 ; trap call
00002E1A                          3220      
00002E1A  43F9 00003D85           3221              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E20  103C 000E               3222              MOVE.B      #14, D0             ; command for trap call to display message
00002E24  4E4F                    3223              TRAP        #15                 ; trap call
00002E26                          3224          
00002E26  4EB9 00002E8C           3225              JSR         PrntReg
00002E2C                          3226          
00002E2C  6000 E212               3227              BRA         LOOP
00002E30                          3228          
00002E30                          3229  ***********************************************************************************************************
00002E30                          3230  *                       Immediate Data Subroutine Part 1
00002E30                          3231  *
00002E30                          3232  * The following subroutine displays the immediate number to shift and the data register that is being shifted. 
00002E30                          3233  * This subroutine calls two printing immediate subroutine first, the the ea print subroutine.        
00002E30                          3234  *
00002E30                          3235  ***********************************************************************************************************
00002E30                          3236  
00002E30                          3237  PrntImm 
00002E30  48E7 FF7E               3238              MOVEM.L     D0-D7/A1-A6, -(SP)
00002E34                          3239              
00002E34  43F9 00003CE5           3240              LEA         space, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E3A  103C 000E               3241              MOVE.B      #14, D0             ; command for trap call to display message
00002E3E  4E4F                    3242              TRAP        #15                 ; trap call
00002E40                          3243              
00002E40  43F9 00003CE8           3244              LEA         hashTag, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E46  103C 000E               3245              MOVE.B      #14, D0             ; command for trap call to display message
00002E4A  4E4F                    3246              TRAP        #15                 ; trap call
00002E4C                          3247              
00002E4C  4242                    3248              CLR         D2
00002E4E  3401                    3249              MOVE.W      D1, D2
00002E50  E042                    3250              ASR         #eight, D2
00002E52  E242                    3251              ASR         #one, D2
00002E54  C47C 0007               3252              AND         #$07, D2
00002E58                          3253          
00002E58  4EB9 00002EDE           3254              JSR         MemShiftImm
00002E5E                          3255          
00002E5E  43F9 00003CEC           3256              LEA         comma, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E64  103C 000E               3257              MOVE.B      #14, D0             ; command for trap call to display message
00002E68  4E4F                    3258              TRAP        #15                 ; trap call
00002E6A                          3259          
00002E6A  4242                    3260              CLR         D2
00002E6C  4243                    3261              CLR         D3
00002E6E  1601                    3262              MOVE.B      D1,D3
00002E70  C67C 0007               3263              AND         #$07, D3
00002E74                          3264          
00002E74  4EB9 00002F08           3265              JSR         printEA
00002E7A                          3266          
00002E7A  43F9 00003CE1           3267              LEA         newLine, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E80  103C 000E               3268              MOVE.B      #14, D0             ; command for trap call to display message
00002E84  4E4F                    3269              TRAP        #15                 ; trap call
00002E86                          3270          
00002E86  4CDF 7EFF               3271              MOVEM.L     (SP)+, D0-D7/A1-A6
00002E8A  4E75                    3272              RTS
00002E8C                          3273              
00002E8C                          3274  ***********************************************************************************************************
00002E8C                          3275  *
00002E8C                          3276  *                       Shifting Helping Function
00002E8C                          3277  *
00002E8C                          3278  * The following subroutine determines the correct data register to display, and sets the values of D2 and 
00002E8C                          3279  *       D3 accordingly to display the data register.
00002E8C                          3280  * after setting the values, it calls another subroutine to actually display the data register.        
00002E8C                          3281  *
00002E8C                          3282  ***********************************************************************************************************
00002E8C                          3283  
00002E8C                          3284  PrntReg     
00002E8C  48E7 FF7E               3285              MOVEM.L     D0-D7/A1-A6, -(SP)
00002E90                          3286          
00002E90  43F9 00003CE5           3287              LEA         space, A1           ; display space
00002E96  103C 000E               3288              MOVE.B      #14, D0             ; command for trap call to display message
00002E9A  4E4F                    3289              TRAP        #15                 ; trap call
00002E9C                          3290          
00002E9C  4242                    3291              CLR         D2
00002E9E  4243                    3292              CLR         D3
00002EA0  3601                    3293              MOVE.W      D1, D3
00002EA2  E043                    3294              ASR         #eight, D3
00002EA4  E243                    3295              ASR         #one, D3
00002EA6  C67C 0007               3296              AND         #$07, D3
00002EAA                          3297          
00002EAA  4EB9 00002F08           3298              JSR         printEA
00002EB0                          3299          
00002EB0  43F9 00003CEC           3300              LEA         comma, A1           ; display comma
00002EB6  103C 000E               3301              MOVE.B      #14, D0             ; command for trap call to display message
00002EBA  4E4F                    3302              TRAP        #15                 ; trap call
00002EBC                          3303          
00002EBC  4242                    3304              CLR        D2
00002EBE  4243                    3305              CLR         D3
00002EC0  1601                    3306              MOVE.B      D1,D3
00002EC2  C67C 0007               3307              AND         #$07, D3
00002EC6                          3308          
00002EC6  4EB9 00002F08           3309              JSR         printEA
00002ECC                          3310          
00002ECC  43F9 00003CE1           3311              LEA         newLine, A1         ; newline
00002ED2  103C 000E               3312              MOVE.B      #14, D0             ; command for trap call to display message
00002ED6  4E4F                    3313              TRAP        #15                 ; trap call
00002ED8                          3314          
00002ED8  4CDF 7EFF               3315              MOVEM.L     (SP)+, D0-D7/A1-A6
00002EDC  4E75                    3316              RTS
00002EDE                          3317  
00002EDE                          3318  ***********************************************************************************************************
00002EDE                          3319  *
00002EDE                          3320  *                       Immediate Data Subroutine Part 2
00002EDE                          3321  *
00002EDE                          3322  * The following subroutine is used to display the number between 1-8 for the bit vount for the shift/rotate opcode
00002EDE                          3323  * It displays it by storing the appropriate number in D1 and running trap task 3.
00002EDE                          3324  *
00002EDE                          3325  ***********************************************************************************************************
00002EDE                          3326  
00002EDE                          3327  MemShiftImm     
00002EDE  48E7 FF7E               3328              MOVEM.L     D0-D7/A1-A6, -(SP)      ;caller saved data
00002EE2  4241                    3329              CLR         D1
00002EE4                          3330                 
00002EE4  1202                    3331              MOVE.B      D2, D1
00002EE6  B23C 0000               3332              CMP.B       #zero, D1
00002EEA  6700 000C               3333              BEQ         displayEight
00002EEE                          3334                  
00002EEE  103C 0003               3335              MOVE.B      #3, D0
00002EF2  4E4F                    3336              TRAP        #15
00002EF4  6000 000C               3337              BRA         endSubroutine
00002EF8                          3338                  
00002EF8                          3339  displayEight    
00002EF8  123C 0008               3340              MOVE.B      #$08, D1
00002EFC  103C 0003               3341              MOVE.B      #3, D0
00002F00  4E4F                    3342              TRAP        #15                
00002F02                          3343              
00002F02                          3344  endSubroutine
00002F02  4CDF 7EFF               3345              MOVEM.L     (SP)+, D0-D7/A1-A6     ; recall data
00002F06  4E75                    3346              RTS                             ; Return to main routine
00002F08                          3347          
00002F08                          3348  ***********************************************************************************************************
00002F08                          3349  *
00002F08                          3350  *                       EA Print Subroutine
00002F08                          3351  *
00002F08                          3352  ***********************************************************************************************************
00002F08                          3353  
00002F08                          3354  printEA     
00002F08  48E7 FF7E               3355              MOVEM.L  D0-D7/A1-A6, -(SP)
00002F0C                          3356  
00002F0C  B43C 0000               3357              CMP.B       #zero, D2
00002F10  6700 002E               3358              BEQ         pDataReg
00002F14  B43C 0001               3359              CMP.B       #one, D2
00002F18  6700 00E6               3360              BEQ         pAddrReg
00002F1C  B43C 0002               3361              CMP.B       #two, D2
00002F20  6700 019E               3362              BEQ         pAddrDir
00002F24  B43C 0003               3363              CMP.B       #three, D2
00002F28  6700 02C2               3364              BEQ         pAddrPost
00002F2C  B43C 0004               3365              CMP.B       #four, D2
00002F30  6700 0446               3366              BEQ         pAddrDec
00002F34  B43C 0007               3367              CMP.B       #seven, D2
00002F38  6700 0576               3368              BEQ         pHex
00002F3C  6000 0642               3369              BRA         invalid
00002F40                          3370  
00002F40                          3371  ***********************************************************************************************************
00002F40                          3372  * Data Register        
00002F40                          3373  pDataReg    
00002F40  B63C 0000               3374              CMP.B       #zero,D3
00002F44  6700 003A               3375              BEQ         displayD0
00002F48  B63C 0001               3376              CMP.B       #one,D3
00002F4C  6700 0042               3377              BEQ         displayD1
00002F50  B63C 0002               3378              CMP.B       #two,D3
00002F54  6700 004A               3379              BEQ         displayD2
00002F58  B63C 0003               3380              CMP.B       #three,D3
00002F5C  6700 0052               3381              BEQ         displayD3
00002F60  B63C 0004               3382              CMP.B       #four,D3
00002F64  6700 005A               3383              BEQ         displayD4
00002F68  B63C 0005               3384              CMP.B       #five,D3
00002F6C  6700 0062               3385              BEQ         displayD5
00002F70  B63C 0006               3386              CMP.B       #six,D3
00002F74  6700 006A               3387              BEQ         displayD6
00002F78  B63C 0007               3388              CMP.B       #seven,D3
00002F7C  6700 0072               3389              BEQ         displayD7
00002F80                          3390              
00002F80  43F9 00003DA2           3391  displayD0   LEA         dispD0, A1          ; Display space
00002F86  103C 000E               3392              MOVE.B      #14, D0             ; command for trap call to display message
00002F8A  4E4F                    3393              TRAP        #15                 ; trap call
00002F8C  6000 05F6               3394              BRA         endSUB              ; go to the end of the subroutine
00002F90                          3395              
00002F90  43F9 00003DA5           3396  displayD1   LEA         dispD1, A1          ; Display space
00002F96  103C 000E               3397              MOVE.B      #14, D0             ; command for trap call to display message
00002F9A  4E4F                    3398              TRAP        #15                 ; trap call
00002F9C  6000 05E6               3399              BRA         endSUB              ; go to the end of the subroutine
00002FA0                          3400  
00002FA0  43F9 00003DA8           3401  displayD2   LEA         dispD2, A1          ; Display space
00002FA6  103C 000E               3402              MOVE.B      #14, D0             ; command for trap call to display message
00002FAA  4E4F                    3403              TRAP        #15                 ; trap call
00002FAC  6000 05D6               3404              BRA         endSUB              ; go to the end of the subroutine
00002FB0                          3405  
00002FB0  43F9 00003DAB           3406  displayD3   LEA         dispD3, A1          ; Display space
00002FB6  103C 000E               3407              MOVE.B      #14, D0             ; command for trap call to display message
00002FBA  4E4F                    3408              TRAP        #15                 ; trap call
00002FBC  6000 05C6               3409              BRA         endSUB              ; go to the end of the subroutine
00002FC0                          3410  
00002FC0  43F9 00003DAE           3411  displayD4   LEA         dispD4, A1          ; Display space
00002FC6  103C 000E               3412              MOVE.B      #14, D0             ; command for trap call to display message
00002FCA  4E4F                    3413              TRAP        #15                 ; trap call
00002FCC  6000 05B6               3414              BRA         endSUB              ; go to the end of the subroutine
00002FD0                          3415  
00002FD0  43F9 00003DB1           3416  displayD5   LEA         dispD5, A1          ; Display space
00002FD6  103C 000E               3417              MOVE.B      #14, D0             ; command for trap call to display message
00002FDA  4E4F                    3418              TRAP        #15                 ; trap call
00002FDC  6000 05A6               3419              BRA         endSUB              ; go to the end of the subroutine
00002FE0                          3420  
00002FE0  43F9 00003DB4           3421  displayD6   LEA         dispD6, A1          ; Display space
00002FE6  103C 000E               3422              MOVE.B      #14, D0             ; command for trap call to display message
00002FEA  4E4F                    3423              TRAP        #15                 ; trap call
00002FEC  6000 0596               3424              BRA         endSUB              ; go to the end of the subroutine
00002FF0                          3425  
00002FF0  43F9 00003DB7           3426  displayD7   LEA         dispD7, A1          ; Display space
00002FF6  103C 000E               3427              MOVE.B      #14, D0             ; command for trap call to display message
00002FFA  4E4F                    3428              TRAP        #15                 ; trap call
00002FFC  6000 0586               3429              BRA         endSUB              ; go to the end of the subroutine
00003000                          3430              
00003000                          3431  ***********************************************************************************************************
00003000                          3432  * Address Register
00003000                          3433  
00003000  B63C 0000               3434  pAddrReg    CMP.B       #zero,D3
00003004  6700 003A               3435              BEQ         displayA0
00003008  B63C 0001               3436              CMP.B       #one,D3
0000300C  6700 0042               3437              BEQ         displayA1
00003010  B63C 0002               3438              CMP.B       #two,D3
00003014  6700 004A               3439              BEQ         displayA2
00003018  B63C 0003               3440              CMP.B       #three,D3
0000301C  6700 0052               3441              BEQ         displayA3
00003020  B63C 0004               3442              CMP.B       #four,D3
00003024  6700 005A               3443              BEQ         displayA4
00003028  B63C 0005               3444              CMP.B       #five,D3
0000302C  6700 0062               3445              BEQ         displayA5
00003030  B63C 0006               3446              CMP.B       #six,D3
00003034  6700 006A               3447              BEQ         displayA6
00003038  B63C 0007               3448              CMP.B       #seven,D3
0000303C  6700 0072               3449              BEQ         displayA7
00003040                          3450              
00003040  43F9 00003D88           3451  displayA0   LEA         dispA0, A1          ; Display space
00003046  103C 000E               3452              MOVE.B      #14, D0             ; command for trap call to display message
0000304A  4E4F                    3453              TRAP        #15                 ; trap call
0000304C  6000 0536               3454              BRA         endSUB              ; go to the end of the subroutine
00003050                          3455              
00003050  43F9 00003D8B           3456  displayA1   LEA         dispA1, A1          ; Display space
00003056  103C 000E               3457              MOVE.B      #14, D0             ; command for trap call to display message
0000305A  4E4F                    3458              TRAP        #15                 ; trap call
0000305C  6000 0526               3459              BRA         endSUB              ; go to the end of the subroutine
00003060                          3460  
00003060  43F9 00003D8E           3461  displayA2   LEA         dispA2, A1          ; Display space
00003066  103C 000E               3462              MOVE.B      #14, D0             ; command for trap call to display message
0000306A  4E4F                    3463              TRAP        #15                 ; trap call
0000306C  6000 0516               3464              BRA         endSUB              ; go to the end of the subroutine
00003070                          3465  
00003070  43F9 00003D91           3466  displayA3   LEA         dispA3, A1          ; Display space
00003076  103C 000E               3467              MOVE.B      #14, D0             ; command for trap call to display message
0000307A  4E4F                    3468              TRAP        #15                 ; trap call
0000307C  6000 0506               3469              BRA         endSUB              ; go to the end of the subroutine
00003080                          3470  
00003080  43F9 00003D94           3471  displayA4   LEA         dispA4, A1          ; Display space
00003086  103C 000E               3472              MOVE.B      #14, D0             ; command for trap call to display message
0000308A  4E4F                    3473              TRAP        #15                 ; trap call
0000308C  6000 04F6               3474              BRA         endSUB              ; go to the end of the subroutine
00003090                          3475  
00003090  43F9 00003D97           3476  displayA5   LEA         dispA5, A1          ; Display space
00003096  103C 000E               3477              MOVE.B      #14, D0             ; command for trap call to display message
0000309A  4E4F                    3478              TRAP        #15                 ; trap call
0000309C  6000 04E6               3479              BRA         endSUB              ; go to the end of the subroutine
000030A0                          3480  
000030A0  43F9 00003D9A           3481  displayA6   LEA         dispA6, A1          ; Display space
000030A6  103C 000E               3482              MOVE.B      #14, D0             ; command for trap call to display message
000030AA  4E4F                    3483              TRAP        #15                 ; trap call
000030AC  6000 04D6               3484              BRA         endSUB              ; go to the end of the subroutine
000030B0                          3485  
000030B0  43F9 00003D9D           3486  displayA7   LEA         dispA7, A1          ; Display space
000030B6  103C 000E               3487              MOVE.B      #14, D0             ; command for trap call to display message
000030BA  4E4F                    3488              TRAP        #15                 ; trap call
000030BC  6000 04C6               3489              BRA         endSUB              ; go to the end of the subroutine
000030C0                          3490  
000030C0                          3491  ***********************************************************************************************************
000030C0                          3492  * Address Register Direct
000030C0                          3493  
000030C0  43F9 00003CEE           3494  pAddrDir    LEA         opPer, A1           ; Display space
000030C6  103C 000E               3495              MOVE.B      #14, D0             ; command for trap call to display message
000030CA  4E4F                    3496              TRAP        #15                 ; trap call
000030CC                          3497              
000030CC  B63C 0000               3498              CMP.B       #zero,D3
000030D0  6700 003A               3499              BEQ         displayA0A
000030D4  B63C 0001               3500              CMP.B       #one,D3
000030D8  6700 004E               3501              BEQ         displayA1A
000030DC  B63C 0002               3502              CMP.B       #two,D3
000030E0  6700 0062               3503              BEQ         displayA2A
000030E4  B63C 0003               3504              CMP.B       #three,D3
000030E8  6700 0076               3505              BEQ         displayA3A
000030EC  B63C 0004               3506              CMP.B       #four,D3
000030F0  6700 008A               3507              BEQ         displayA4A
000030F4  B63C 0005               3508              CMP.B       #five,D3
000030F8  6700 009E               3509              BEQ         displayA5A
000030FC  B63C 0006               3510              CMP.B       #six,D3
00003100  6700 00B2               3511              BEQ         displayA6A
00003104  B63C 0007               3512              CMP.B       #seven,D3
00003108  6700 00C6               3513              BEQ         displayA7A
0000310C                          3514              
0000310C  43F9 00003D88           3515  displayA0A  LEA         dispA0, A1          ; Display space
00003112  103C 000E               3516              MOVE.B      #14, D0             ; command for trap call to display message
00003116  4E4F                    3517              TRAP        #15                 ; trap call
00003118  43F9 00003CF0           3518              LEA         clPer, A1           ; Display space
0000311E  103C 000E               3519              MOVE.B      #14, D0             ; command for trap call to display message
00003122  4E4F                    3520              TRAP        #15                 ; trap call
00003124  6000 045E               3521              BRA         endSUB              ; go to the end of the subroutine
00003128                          3522              
00003128  43F9 00003D8B           3523  displayA1A  LEA         dispA1, A1          ; Display space
0000312E  103C 000E               3524              MOVE.B      #14, D0             ; command for trap call to display message
00003132  4E4F                    3525              TRAP        #15                 ; trap call
00003134  43F9 00003CF0           3526              LEA         clPer, A1           ; Display space
0000313A  103C 000E               3527              MOVE.B      #14, D0             ; command for trap call to display message
0000313E  4E4F                    3528              TRAP        #15                 ; trap call
00003140  6000 0442               3529              BRA         endSUB              ; go to the end of the subroutine
00003144                          3530  
00003144  43F9 00003D8E           3531  displayA2A  LEA         dispA2, A1          ; Display space
0000314A  103C 000E               3532              MOVE.B      #14, D0             ; command for trap call to display message
0000314E  4E4F                    3533              TRAP        #15                 ; trap call
00003150  43F9 00003CF0           3534              LEA         clPer, A1           ; Display space
00003156  103C 000E               3535              MOVE.B      #14, D0             ; command for trap call to display message
0000315A  4E4F                    3536              TRAP        #15                 ; trap call
0000315C  6000 0426               3537              BRA         endSUB              ; go to the end of the subroutine
00003160                          3538  
00003160  43F9 00003D91           3539  displayA3A  LEA         dispA3, A1          ; Display space
00003166  103C 000E               3540              MOVE.B      #14, D0             ; command for trap call to display message
0000316A  4E4F                    3541              TRAP        #15                 ; trap call
0000316C  43F9 00003CF0           3542              LEA         clPer, A1           ; Display space
00003172  103C 000E               3543              MOVE.B      #14, D0             ; command for trap call to display message
00003176  4E4F                    3544              TRAP        #15                 ; trap call
00003178  6000 040A               3545              BRA         endSUB              ; go to the end of the subroutine
0000317C                          3546  
0000317C  43F9 00003D94           3547  displayA4A  LEA         dispA4, A1          ; Display space
00003182  103C 000E               3548              MOVE.B      #14, D0             ; command for trap call to display message
00003186  4E4F                    3549              TRAP        #15                 ; trap call
00003188  43F9 00003CF0           3550              LEA         clPer, A1           ; Display space
0000318E  103C 000E               3551              MOVE.B      #14, D0             ; command for trap call to display message
00003192  4E4F                    3552              TRAP        #15                 ; trap call
00003194  6000 03EE               3553              BRA         endSUB              ; go to the end of the subroutine
00003198                          3554  
00003198  43F9 00003D97           3555  displayA5A  LEA         dispA5, A1          ; Display space
0000319E  103C 000E               3556              MOVE.B      #14, D0             ; command for trap call to display message
000031A2  4E4F                    3557              TRAP        #15                 ; trap call
000031A4  43F9 00003CF0           3558              LEA         clPer, A1           ; Display space
000031AA  103C 000E               3559              MOVE.B      #14, D0             ; command for trap call to display message
000031AE  4E4F                    3560              TRAP        #15                 ; trap call
000031B0  6000 03D2               3561              BRA         endSUB              ; go to the end of the subroutine
000031B4                          3562  
000031B4  43F9 00003D9A           3563  displayA6A  LEA         dispA6, A1          ; Display space
000031BA  103C 000E               3564              MOVE.B      #14, D0             ; command for trap call to display message
000031BE  4E4F                    3565              TRAP        #15                 ; trap call
000031C0  43F9 00003CF0           3566              LEA         clPer, A1           ; Display space
000031C6  103C 000E               3567              MOVE.B      #14, D0             ; command for trap call to display message
000031CA  4E4F                    3568              TRAP        #15                 ; trap call
000031CC  6000 03B6               3569              BRA         endSUB              ; go to the end of the subroutine
000031D0                          3570  
000031D0  43F9 00003D9D           3571  displayA7A  LEA         dispA7, A1          ; Display space
000031D6  103C 000E               3572              MOVE.B      #14, D0             ; command for trap call to display message
000031DA  4E4F                    3573              TRAP        #15                 ; trap call
000031DC  43F9 00003CF0           3574              LEA         clPer, A1           ; Display space
000031E2  103C 000E               3575              MOVE.B      #14, D0             ; command for trap call to display message
000031E6  4E4F                    3576              TRAP        #15                 ; trap call
000031E8  6000 039A               3577              BRA         endSUB              ; go to the end of the subroutine
000031EC                          3578              
000031EC                          3579  ***********************************************************************************************************
000031EC                          3580  * Addr Postincrement
000031EC                          3581              
000031EC  43F9 00003CEE           3582  pAddrPost   LEA         opPer, A1           ; Display space
000031F2  103C 000E               3583              MOVE.B      #14, D0             ; command for trap call to display message
000031F6  4E4F                    3584              TRAP        #15                 ; trap call
000031F8                          3585              
000031F8  B63C 0000               3586              CMP.B       #zero,D3
000031FC  6700 003A               3587              BEQ         displayA0P
00003200  B63C 0001               3588              CMP.B       #one,D3
00003204  6700 005A               3589              BEQ         displayA1P
00003208  B63C 0002               3590              CMP.B       #two,D3
0000320C  6700 007A               3591              BEQ         displayA2P
00003210  B63C 0003               3592              CMP.B       #three,D3
00003214  6700 009A               3593              BEQ         displayA3P
00003218  B63C 0004               3594              CMP.B       #four,D3
0000321C  6700 00BA               3595              BEQ         displayA4P
00003220  B63C 0005               3596              CMP.B       #five,D3
00003224  6700 00DA               3597              BEQ         displayA5P
00003228  B63C 0006               3598              CMP.B       #six,D3
0000322C  6700 00FA               3599              BEQ         displayA6P
00003230  B63C 0007               3600              CMP.B       #seven,D3
00003234  6700 011A               3601              BEQ         displayA7P
00003238                          3602              
00003238  43F9 00003D88           3603  displayA0P  LEA         dispA0, A1          ; Display space
0000323E  103C 000E               3604              MOVE.B      #14, D0             ; command for trap call to display message
00003242  4E4F                    3605              TRAP        #15                 ; trap call
00003244  43F9 00003CF0           3606              LEA         clPer, A1           ; Display space
0000324A  103C 000E               3607              MOVE.B      #14, D0             ; command for trap call to display message
0000324E  4E4F                    3608              TRAP        #15                 ; trap call
00003250  43F9 00003CF4           3609              LEA         inc, A1             ; Display space
00003256  103C 000E               3610              MOVE.B      #14, D0             ; command for trap call to display message
0000325A  4E4F                    3611              TRAP        #15                 ; trap call
0000325C  6000 0326               3612              BRA         endSUB              ; go to the end of the subroutine
00003260                          3613              
00003260  43F9 00003D8B           3614  displayA1P  LEA         dispA1, A1          ; Display space
00003266  103C 000E               3615              MOVE.B      #14, D0             ; command for trap call to display message
0000326A  4E4F                    3616              TRAP        #15                 ; trap call
0000326C  43F9 00003CF0           3617              LEA         clPer, A1           ; Display space
00003272  103C 000E               3618              MOVE.B      #14, D0             ; command for trap call to display message
00003276  4E4F                    3619              TRAP        #15                 ; trap call
00003278  43F9 00003CF4           3620              LEA         inc, A1             ; Display space
0000327E  103C 000E               3621              MOVE.B      #14, D0             ; command for trap call to display message
00003282  4E4F                    3622              TRAP        #15                 ; trap call
00003284  6000 02FE               3623              BRA         endSUB              ; go to the end of the subroutine
00003288                          3624  
00003288  43F9 00003D8E           3625  displayA2P  LEA         dispA2, A1          ; Display space
0000328E  103C 000E               3626              MOVE.B      #14, D0             ; command for trap call to display message
00003292  4E4F                    3627              TRAP        #15                 ; trap call
00003294  43F9 00003CF0           3628              LEA         clPer, A1           ; Display space
0000329A  103C 000E               3629              MOVE.B      #14, D0             ; command for trap call to display message
0000329E  4E4F                    3630              TRAP        #15                 ; trap call
000032A0  43F9 00003CF4           3631              LEA         inc, A1             ; Display space
000032A6  103C 000E               3632              MOVE.B      #14, D0             ; command for trap call to display message
000032AA  4E4F                    3633              TRAP        #15                 ; trap call
000032AC  6000 02D6               3634              BRA         endSUB              ; go to the end of the subroutine
000032B0                          3635  
000032B0  43F9 00003D91           3636  displayA3P  LEA         dispA3, A1          ; Display space
000032B6  103C 000E               3637              MOVE.B      #14, D0             ; command for trap call to display message
000032BA  4E4F                    3638              TRAP        #15                 ; trap call
000032BC  43F9 00003CF0           3639              LEA         clPer, A1           ; Display space
000032C2  103C 000E               3640              MOVE.B      #14, D0             ; command for trap call to display message
000032C6  4E4F                    3641              TRAP        #15                 ; trap call
000032C8  43F9 00003CF4           3642              LEA         inc, A1             ; Display space
000032CE  103C 000E               3643              MOVE.B      #14, D0             ; command for trap call to display message
000032D2  4E4F                    3644              TRAP        #15                 ; trap call
000032D4  6000 02AE               3645              BRA         endSUB              ; go to the end of the subroutine
000032D8                          3646  
000032D8  43F9 00003D94           3647  displayA4P  LEA         dispA4, A1          ; Display space
000032DE  103C 000E               3648              MOVE.B      #14, D0             ; command for trap call to display message
000032E2  4E4F                    3649              TRAP        #15                 ; trap call
000032E4  43F9 00003CF0           3650              LEA         clPer, A1           ; Display space
000032EA  103C 000E               3651              MOVE.B      #14, D0             ; command for trap call to display message
000032EE  4E4F                    3652              TRAP        #15                 ; trap call
000032F0  43F9 00003CF4           3653              LEA         inc, A1             ; Display space
000032F6  103C 000E               3654              MOVE.B      #14, D0             ; command for trap call to display message
000032FA  4E4F                    3655              TRAP        #15                 ; trap call
000032FC  6000 0286               3656              BRA         endSUB              ; go to the end of the subroutine
00003300                          3657  
00003300  43F9 00003D97           3658  displayA5P  LEA         dispA5, A1          ; Display space
00003306  103C 000E               3659              MOVE.B      #14, D0             ; command for trap call to display message
0000330A  4E4F                    3660              TRAP        #15                 ; trap call
0000330C  43F9 00003CF0           3661              LEA         clPer, A1           ; Display space
00003312  103C 000E               3662              MOVE.B      #14, D0             ; command for trap call to display message
00003316  4E4F                    3663              TRAP        #15                 ; trap call
00003318  43F9 00003CF4           3664              LEA         inc, A1             ; Display space
0000331E  103C 000E               3665              MOVE.B      #14, D0             ; command for trap call to display message
00003322  4E4F                    3666              TRAP        #15                 ; trap call
00003324  6000 025E               3667              BRA         endSUB              ; go to the end of the subroutine
00003328                          3668  
00003328  43F9 00003D9A           3669  displayA6P  LEA         dispA6, A1          ; Display space
0000332E  103C 000E               3670              MOVE.B      #14, D0             ; command for trap call to display message
00003332  4E4F                    3671              TRAP        #15                 ; trap call
00003334  43F9 00003CF0           3672              LEA         clPer, A1           ; Display space
0000333A  103C 000E               3673              MOVE.B      #14, D0             ; command for trap call to display message
0000333E  4E4F                    3674              TRAP        #15                 ; trap call
00003340  43F9 00003CF4           3675              LEA         inc, A1             ; Display space
00003346  103C 000E               3676              MOVE.B      #14, D0             ; command for trap call to display message
0000334A  4E4F                    3677              TRAP        #15                 ; trap call
0000334C  6000 0236               3678              BRA         endSUB              ; go to the end of the subroutine
00003350                          3679  
00003350  43F9 00003D9D           3680  displayA7P  LEA         dispA7, A1          ; Display space
00003356  103C 000E               3681              MOVE.B      #14, D0             ; command for trap call to display message
0000335A  4E4F                    3682              TRAP        #15                 ; trap call
0000335C  43F9 00003CF0           3683              LEA         clPer, A1           ; Display space
00003362  103C 000E               3684              MOVE.B      #14, D0             ; command for trap call to display message
00003366  4E4F                    3685              TRAP        #15                 ; trap call
00003368  43F9 00003CF4           3686              LEA         inc, A1             ; Display space
0000336E  103C 000E               3687              MOVE.B      #14, D0             ; command for trap call to display message
00003372  4E4F                    3688              TRAP        #15                 ; trap call
00003374  6000 020E               3689              BRA         endSUB              ; go to the end of the subroutine
00003378                          3690  
00003378                          3691  ***********************************************************************************************************
00003378                          3692  * Addr Postdecrement
00003378                          3693  
00003378                          3694  pAddrDec    
00003378  43F9 00003CF2           3695              LEA         dec, A1             ; Display space
0000337E  103C 000E               3696              MOVE.B      #14, D0             ; command for trap call to display message
00003382  4E4F                    3697              TRAP        #15                 ; trap call
00003384                          3698              
00003384  43F9 00003CEE           3699              LEA         opPer, A1           ; Display space
0000338A  103C 000E               3700              MOVE.B      #14, D0             ; command for trap call to display message
0000338E  4E4F                    3701              TRAP        #15                 ; trap call
00003390                          3702              
00003390  B63C 0000               3703              CMP.B       #zero,D3
00003394  6700 003A               3704              BEQ         displayA0D
00003398  B63C 0001               3705              CMP.B       #one,D3
0000339C  6700 004E               3706              BEQ         displayA1D
000033A0  B63C 0002               3707              CMP.B       #two,D3
000033A4  6700 0062               3708              BEQ         displayA2D
000033A8  B63C 0003               3709              CMP.B       #three,D3
000033AC  6700 0076               3710              BEQ         displayA3D
000033B0  B63C 0004               3711              CMP.B       #four,D3
000033B4  6700 008A               3712              BEQ         displayA4D
000033B8  B63C 0005               3713              CMP.B       #five,D3
000033BC  6700 009E               3714              BEQ         displayA5D
000033C0  B63C 0006               3715              CMP.B       #six,D3
000033C4  6700 00B2               3716              BEQ         displayA6D
000033C8  B63C 0007               3717              CMP.B       #seven,D3
000033CC  6700 00C6               3718              BEQ         displayA7D
000033D0                          3719              
000033D0                          3720  displayA0D  
000033D0  43F9 00003D88           3721              LEA         dispA0, A1          ; Display space
000033D6  103C 000E               3722              MOVE.B      #14, D0             ; command for trap call to display message
000033DA  4E4F                    3723              TRAP        #15                 ; trap call
000033DC  43F9 00003CF0           3724              LEA         clPer, A1           ; Display space
000033E2  103C 000E               3725              MOVE.B      #14, D0             ; command for trap call to display message
000033E6  4E4F                    3726              TRAP        #15                 ; trap call
000033E8  6000 019A               3727              BRA         endSUB              ; go to the end of the subroutine
000033EC                          3728              
000033EC                          3729  displayA1D  
000033EC  43F9 00003D8B           3730              LEA         dispA1, A1          ; Display space
000033F2  103C 000E               3731              MOVE.B      #14, D0             ; command for trap call to display message
000033F6  4E4F                    3732              TRAP        #15                 ; trap call
000033F8  43F9 00003CF0           3733              LEA         clPer, A1           ; Display space
000033FE  103C 000E               3734              MOVE.B      #14, D0             ; command for trap call to display message
00003402  4E4F                    3735              TRAP        #15                 ; trap call
00003404  6000 017E               3736              BRA         endSUB              ; go to the end of the subroutine
00003408                          3737  
00003408                          3738  displayA2D  
00003408  43F9 00003D8E           3739              LEA         dispA2, A1          ; Display space
0000340E  103C 000E               3740              MOVE.B      #14, D0             ; command for trap call to display message
00003412  4E4F                    3741              TRAP        #15                 ; trap call
00003414  43F9 00003CF0           3742              LEA         clPer, A1           ; Display space
0000341A  103C 000E               3743              MOVE.B      #14, D0             ; command for trap call to display message
0000341E  4E4F                    3744              TRAP        #15                 ; trap call
00003420  6000 0162               3745              BRA         endSUB              ; go to the end of the subroutine
00003424                          3746  
00003424                          3747  displayA3D  
00003424  43F9 00003D91           3748              LEA         dispA3, A1          ; Display space
0000342A  103C 000E               3749              MOVE.B      #14, D0             ; command for trap call to display message
0000342E  4E4F                    3750              TRAP        #15                 ; trap call
00003430  43F9 00003CF0           3751              LEA         clPer, A1           ; Display space
00003436  103C 000E               3752              MOVE.B      #14, D0             ; command for trap call to display message
0000343A  4E4F                    3753              TRAP        #15                 ; trap call
0000343C  6000 0146               3754              BRA         endSUB              ; go to the end of the subroutine
00003440                          3755  
00003440                          3756  displayA4D  
00003440  43F9 00003D94           3757              LEA         dispA4, A1          ; Display space
00003446  103C 000E               3758              MOVE.B      #14, D0             ; command for trap call to display message
0000344A  4E4F                    3759              TRAP        #15                 ; trap call
0000344C  43F9 00003CF0           3760              LEA         clPer, A1           ; Display space
00003452  103C 000E               3761              MOVE.B      #14, D0             ; command for trap call to display message
00003456  4E4F                    3762              TRAP        #15                 ; trap call
00003458  6000 012A               3763              BRA         endSUB              ; go to the end of the subroutine
0000345C                          3764  
0000345C                          3765  displayA5D  
0000345C  43F9 00003D97           3766              LEA         dispA5, A1          ; Display space
00003462  103C 000E               3767              MOVE.B      #14, D0             ; command for trap call to display message
00003466  4E4F                    3768              TRAP        #15                 ; trap call
00003468  43F9 00003CF0           3769              LEA         clPer, A1           ; Display space
0000346E  103C 000E               3770              MOVE.B      #14, D0             ; command for trap call to display message
00003472  4E4F                    3771              TRAP        #15                 ; trap call
00003474  6000 010E               3772              BRA         endSUB              ; go to the end of the subroutine
00003478                          3773  
00003478                          3774  displayA6D  
00003478  43F9 00003D9A           3775              LEA         dispA6, A1          ; Display space
0000347E  103C 000E               3776              MOVE.B      #14, D0             ; command for trap call to display message
00003482  4E4F                    3777              TRAP        #15                 ; trap call
00003484  43F9 00003CF0           3778              LEA         clPer, A1           ; Display space
0000348A  103C 000E               3779              MOVE.B      #14, D0             ; command for trap call to display message
0000348E  4E4F                    3780              TRAP        #15                 ; trap call
00003490  6000 00F2               3781              BRA         endSUB              ; go to the end of the subroutine
00003494                          3782  
00003494                          3783  displayA7D  
00003494  43F9 00003D9D           3784              LEA         dispA7, A1          ; Display space
0000349A  103C 000E               3785              MOVE.B      #14, D0             ; command for trap call to display message
0000349E  4E4F                    3786              TRAP        #15                 ; trap call
000034A0  43F9 00003CF0           3787              LEA         clPer, A1           ; Display space
000034A6  103C 000E               3788              MOVE.B      #14, D0             ; command for trap call to display message
000034AA  4E4F                    3789              TRAP        #15                 ; trap call
000034AC  6000 00D6               3790              BRA         endSUB              ; go to the end of the subroutine
000034B0                          3791  
000034B0                          3792  ***********************************************************************************************************
000034B0                          3793  * Display Hex
000034B0                          3794  
000034B0                          3795  pHex        
000034B0  B63C 0000               3796              CMP.B       #zero, D3
000034B4  6700 0012               3797              BEQ         AbsShort
000034B8  B63C 0001               3798              CMP.B       #one, D3
000034BC  6700 0042               3799              BEQ         AbsLong
000034C0  B63C 0004               3800              CMP.B       #four, D3
000034C4  6700 0072               3801              BEQ         DispImm
000034C8                          3802              
000034C8                          3803  AbsShort    
000034C8  43F9 00003CEE           3804              LEA         opPer, A1           ; Display space
000034CE  103C 000E               3805              MOVE.B      #14, D0             ; command for trap call to display message
000034D2  4E4F                    3806              TRAP        #15                 ; trap call
000034D4                          3807              
000034D4  43F9 00003CEA           3808              LEA         dispHex, A1         ; Display space
000034DA  103C 000E               3809              MOVE.B      #14, D0             ; command for trap call to display message
000034DE  4E4F                    3810              TRAP        #15                 ; trap call
000034E0                          3811              
000034E0  4241                    3812              CLR         D1
000034E2  3218                    3813              MOVE.W      (A0)+, D1
000034E4  4240                    3814              CLR         D0
000034E6  103C 0004               3815              MOVE.B      #4, D0
000034EA                          3816              
000034EA  4EB9 00003AAC           3817              JSR         outHex
000034F0                          3818              
000034F0  43F9 00003CF0           3819              LEA         clPer, A1           ; Display space
000034F6  103C 000E               3820              MOVE.B      #14, D0             ; command for trap call to display message
000034FA  4E4F                    3821              TRAP        #15                 ; trap call
000034FC                          3822              
000034FC  6000 0086               3823              BRA         endSub
00003500                          3824              
00003500                          3825  AbsLong     
00003500  43F9 00003CEE           3826              LEA         opPer, A1           ; Display space
00003506  103C 000E               3827              MOVE.B      #14, D0             ; command for trap call to display message
0000350A  4E4F                    3828              TRAP        #15                 ; trap call
0000350C                          3829              
0000350C  43F9 00003CEA           3830              LEA         dispHex, A1         ; Display space
00003512  103C 000E               3831              MOVE.B      #14, D0             ; command for trap call to display message
00003516  4E4F                    3832              TRAP        #15                 ; trap call
00003518                          3833              
00003518  4241                    3834              CLR         D1
0000351A  2218                    3835              MOVE.L      (A0)+, D1
0000351C  4240                    3836              CLR         D0
0000351E  103C 0008               3837              MOVE.B      #8, D0
00003522                          3838              
00003522  4EB9 00003AAC           3839              JSR         outHex
00003528                          3840              
00003528  43F9 00003CF0           3841              LEA         clPer, A1           ; Display space
0000352E  103C 000E               3842              MOVE.B      #14, D0             ; command for trap call to display message
00003532  4E4F                    3843              TRAP        #15                 ; trap call
00003534                          3844              
00003534  6000 004E               3845              BRA         endSub
00003538                          3846  
00003538                          3847  DispImm     
00003538  43F9 00003CE8           3848              LEA         hashTag, A1         ; Display space
0000353E  103C 000E               3849              MOVE.B      #14, D0             ; command for trap call to display message
00003542  4E4F                    3850              TRAP        #15                 ; trap call
00003544                          3851  
00003544  43F9 00003CEA           3852              LEA         dispHex, A1         ; Display space
0000354A  103C 000E               3853              MOVE.B      #14, D0             ; command for trap call to display message
0000354E  4E4F                    3854              TRAP        #15                 ; trap call
00003550                          3855              
00003550  BC3C 0001               3856              CMP.B       #1,D6
00003554  6700 0016               3857              BEQ         ImmLong
00003558                          3858              
00003558  4241                    3859              CLR         D1
0000355A  3218                    3860              MOVE.W      (A0)+, D1
0000355C  4240                    3861              CLR         D0
0000355E  103C 0004               3862              MOVE.B      #4, D0
00003562  4EB9 00003AAC           3863              JSR         outHex
00003568  6000 0012               3864              BRA         LongSkip
0000356C                          3865              
0000356C                          3866  ImmLong     
0000356C  4241                    3867              CLR         D1
0000356E  2218                    3868              MOVE.L      (A0)+, D1
00003570  4240                    3869              CLR         D0
00003572  103C 0008               3870              MOVE.B      #8, D0
00003576  4EB9 00003AAC           3871              JSR         outHex             
0000357C                          3872  
0000357C                          3873  LongSkip
0000357C  6000 0006               3874              BRA         endSub
00003580                          3875  
00003580                          3876  invalid
00003580  6000 06F4               3877              BRA         printInvalid
00003584                          3878  
00003584                          3879  endSUB        
00003584  4CDF 7EFF               3880              MOVEM.L     (SP)+, D0-D7/A1-A6
00003588  4E75                    3881              RTS
0000358A                          3882  
0000358A                          3883  ***********************************************************************************************************
0000358A                          3884  *
0000358A                          3885  *                       MOVEM Helper Function
0000358A                          3886  *
0000358A                          3887  ***********************************************************************************************************
0000358A                          3888  
0000358A                          3889  MOVEMBRA    
0000358A  48E7 FF7E               3890              MOVEM.L     D0-D7/A1-A6, -(SP)     ; Branches off depending on size bit
0000358E  BA7C 0000               3891              CMP         #zero,D5
00003592  6700 000A               3892              BEQ         MOVEMW
00003596  BA7C 0001               3893              CMP         #one, D5
0000359A  6700 001E               3894              BEQ         MOVEML
0000359E                          3895              
0000359E                          3896  MOVEMW     
0000359E  43F9 00003D82           3897              LEA         dispWord, A1        ; we know that the opcode will be ROR, so load A1 to print message
000035A4  103C 000E               3898              MOVE.B      #14, D0             ; command for trap call to display message
000035A8  4E4F                    3899              TRAP        #15                 ; trap call
000035AA                          3900  
000035AA  43F9 00003CE5           3901              LEA         space, A1           ; we know that the opcode will be ROR, so load A1 to print message
000035B0  103C 000E               3902              MOVE.B      #14, D0             ; command for trap call to display message
000035B4  4E4F                    3903              TRAP        #15                 ; trap call
000035B6                          3904              
000035B6  6000 001E               3905              BRA         CheckDR
000035BA                          3906  
000035BA                          3907  MOVEML   
000035BA  43F9 00003D85           3908              LEA         dispLong, A1        ; we know that the opcode will be ROR, so load A1 to print message
000035C0  103C 000E               3909              MOVE.B      #14, D0             ; command for trap call to display message
000035C4  4E4F                    3910              TRAP        #15                 ; trap call
000035C6                          3911  
000035C6  43F9 00003CE5           3912              LEA         space, A1        ; we know that the opcode will be ROR, so load A1 to print message
000035CC  103C 000E               3913              MOVE.B      #14, D0             ; command for trap call to display message
000035D0  4E4F                    3914              TRAP        #15                 ; trap call
000035D2                          3915           
000035D2                          3916  
000035D2  6000 0002               3917              BRA         CheckDR
000035D6                          3918  
000035D6                          3919  CheckDR     
000035D6  3218                    3920              MOVE.W      (A0)+, D1           ; Taking in next word
000035D8  BC7C 0000               3921              CMP         #zero,D6
000035DC  6700 0020               3922              BEQ         printRegMem
000035E0  BC7C 0001               3923              CMP         #one,D6
000035E4  6700 0004               3924              BEQ         printStack
000035E8  6096                    3925              BRA         invalid
000035EA                          3926              
000035EA                          3927  printStack 
000035EA  4EB8 2F08               3928              JSR         printEA
000035EE                          3929              
000035EE  43F9 00003CEC           3930              LEA         comma,A1
000035F4  103C 000E               3931              MOVE.B      #14, D0             ; command for trap call to display message
000035F8  4E4F                    3932              TRAP        #15                 ; trap call
000035FA                          3933              
000035FA                          3934              
000035FA  6000 0002               3935              BRA         printRegMem
000035FE                          3936             
000035FE                          3937  printRegMem 
000035FE  4244                    3938              CLR         D4                  ; Using D4 to store predecrement mode addresses
00003600  1801                    3939              MOVE.B      D1,D4               ; Stores bits for D0-D7
00003602                          3940              
00003602  4245                    3941              CLR         D5
00003604  1A01                    3942              MOVE.B      D1,D5
00003606  CA7C 0001               3943              AND         #mask1,D5
0000360A  BA7C 0001               3944              CMP         #mask1,D5
0000360E  6700 007A               3945              BEQ         DataReg0
00003612                          3946              
00003612  4245                    3947              CLR         D5
00003614  1A01                    3948              MOVE.B      D1,D5
00003616  CA7C 0002               3949              AND         #mask2,D5
0000361A  BA7C 0002               3950              CMP         #mask2,D5
0000361E  6700 009A               3951              BEQ         DataReg1
00003622                          3952  
00003622  4245                    3953              CLR         D5
00003624  1A01                    3954              MOVE.B      D1,D5
00003626  CA7C 0004               3955              AND         #mask3,D5
0000362A  BA7C 0004               3956              CMP         #mask3,D5
0000362E  6700 00CA               3957              BEQ         DataReg2            
00003632                          3958              
00003632  4245                    3959              CLR         D5
00003634  1A01                    3960              MOVE.B      D1,D5
00003636  CA7C 0008               3961              AND         #mask4,D5
0000363A  BA7C 0008               3962              CMP         #mask4,D5
0000363E  6700 00FA               3963              BEQ         DataReg3            
00003642                          3964              
00003642  4245                    3965              CLR         D5
00003644  1A01                    3966              MOVE.B      D1,D5
00003646  CA7C 0010               3967              AND         #mask5,D5
0000364A  BA7C 0010               3968              CMP         #mask5,D5
0000364E  6700 012A               3969              BEQ         DataReg4
00003652                          3970  
00003652  4245                    3971              CLR         D5
00003654  1A01                    3972              MOVE.B      D1,D5
00003656  CA7C 0020               3973              AND         #mask6,D5
0000365A  BA7C 0020               3974              CMP         #mask6,D5
0000365E  6700 015A               3975              BEQ         DataReg5
00003662                          3976  
00003662  4245                    3977              CLR         D5
00003664  1A01                    3978              MOVE.B      D1,D5
00003666  CA7C 0040               3979              AND         #mask7,D5
0000366A  BA7C 0040               3980              CMP         #mask7,D5
0000366E  6700 018A               3981              BEQ         DataReg6
00003672                          3982  
00003672  4245                    3983              CLR         D5
00003674  1A01                    3984              MOVE.B      D1,D5
00003676  CA7C 0080               3985              AND         #mask8,D5
0000367A  BA7C 0080               3986              CMP         #mask8,D5
0000367E  6700 01BA               3987              BEQ         DataReg7
00003682                          3988              
00003682  6000 FEFC               3989              BRA         invalid
00003686  6000 FEF8               3990              BRA         invalid        
0000368A                          3991              
0000368A                          3992  DataReg0
0000368A  43F9 00003DA2           3993              LEA         dispD0, A1          ; Output string D0
00003690  103C 000E               3994              MOVE.B      #14, D0             ; command for trap call to display message
00003694  4E4F                    3995              TRAP        #15                 ; trap call
00003696                          3996              
00003696  4245                    3997              CLR         D5
00003698  1A01                    3998              MOVE.B      D1,D5
0000369A  CA7C 0002               3999              AND         #mask2,D5
0000369E  BA7C 0002               4000              CMP         #mask2,D5
000036A2  6700 0006               4001              BEQ         Reg0Cont
000036A6  6000 01A2               4002              BRA         printMem
000036AA                          4003              
000036AA                          4004  Reg0Cont        
000036AA  43F9 00003CF2           4005              LEA         dec, A1             ; Output -
000036B0  103C 000E               4006              MOVE.B      #14, D0             ; command for trap call to display message
000036B4  4E4F                    4007              TRAP        #15                 ; trap call        
000036B6  6000 0002               4008              BRA         DataReg1
000036BA                          4009  
000036BA                          4010  DataReg1
000036BA  4245                    4011              CLR         D5
000036BC  1A01                    4012              MOVE.B      D1,D5
000036BE  CA7C 0005               4013              AND         #maskA,D5
000036C2  BA7C 0005               4014              CMP         #maskA,D5
000036C6  6700 0032               4015              BEQ         DataReg2
000036CA                          4016              
000036CA  43F9 00003DA5           4017              LEA         dispD1, A1          ; Output string D0
000036D0  103C 000E               4018              MOVE.B      #14, D0             ; command for trap call to display message
000036D4  4E4F                    4019              TRAP        #15                 ; trap call
000036D6                          4020              
000036D6  4245                    4021              CLR         D5
000036D8  1A01                    4022              MOVE.B      D1,D5
000036DA  CA7C 0004               4023              AND         #mask3,D5
000036DE  BA7C 0004               4024              CMP         #mask3,D5
000036E2  6700 0006               4025              BEQ         Reg1Cont
000036E6  6000 0162               4026              BRA         printMem
000036EA                          4027              
000036EA                          4028  Reg1Cont        
000036EA  43F9 00003CF2           4029              LEA         dec, A1             ; Output -
000036F0  103C 000E               4030              MOVE.B      #14, D0             ; command for trap call to display message
000036F4  4E4F                    4031              TRAP        #15                 ; trap call        
000036F6  6000 0002               4032              BRA         DataReg2
000036FA                          4033  
000036FA                          4034  DataReg2
000036FA  4245                    4035              CLR         D5
000036FC  1A01                    4036              MOVE.B      D1,D5
000036FE  CA7C 000A               4037              AND         #maskB,D5
00003702  BA7C 000A               4038              CMP         #maskB,D5
00003706  6700 0032               4039              BEQ         DataReg3
0000370A                          4040              
0000370A                          4041              
0000370A  43F9 00003DA8           4042              LEA         dispD2, A1          ; Output string D0
00003710  103C 000E               4043              MOVE.B      #14, D0             ; command for trap call to display message
00003714  4E4F                    4044              TRAP        #15                 ; trap call
00003716                          4045              
00003716  4245                    4046              CLR         D5
00003718  1A01                    4047              MOVE.B      D1,D5
0000371A  CA7C 0008               4048              AND         #mask4,D5
0000371E  BA7C 0008               4049              CMP         #mask4,D5
00003722  6700 0006               4050              BEQ         Reg2Cont
00003726  6000 0122               4051              BRA         printMem
0000372A                          4052              
0000372A                          4053  Reg2Cont        
0000372A  43F9 00003CF2           4054              LEA         dec, A1             ; Output -
00003730  103C 000E               4055              MOVE.B      #14, D0             ; command for trap call to display message
00003734  4E4F                    4056              TRAP        #15                 ; trap call        
00003736  6000 0002               4057              BRA         DataReg3
0000373A                          4058  
0000373A                          4059  DataReg3
0000373A  4245                    4060              CLR         D5
0000373C  1A01                    4061              MOVE.B      D1,D5
0000373E  CA7C 0014               4062              AND         #maskC,D5
00003742  BA7C 0014               4063              CMP         #maskC,D5
00003746  6700 0032               4064              BEQ         DataReg4
0000374A                          4065              
0000374A  43F9 00003DAB           4066              LEA         dispD3, A1          ; Output string D0
00003750  103C 000E               4067              MOVE.B      #14, D0             ; command for trap call to display message
00003754  4E4F                    4068              TRAP        #15                 ; trap call
00003756                          4069              
00003756  4245                    4070              CLR         D5
00003758  1A01                    4071              MOVE.B      D1,D5
0000375A  CA7C 0010               4072              AND         #mask5,D5
0000375E  BA7C 0010               4073              CMP         #mask5,D5
00003762  6700 0006               4074              BEQ         Reg3Cont
00003766  6000 00E2               4075              BRA         printMem
0000376A                          4076              
0000376A                          4077  Reg3Cont        
0000376A  43F9 00003CF2           4078              LEA         dec, A1             ; Output -
00003770  103C 000E               4079              MOVE.B      #14, D0             ; command for trap call to display message
00003774  4E4F                    4080              TRAP        #15                 ; trap call        
00003776  6000 0002               4081              BRA         DataReg4
0000377A                          4082  
0000377A                          4083  DataReg4
0000377A  4245                    4084              CLR         D5
0000377C  1A01                    4085              MOVE.B      D1,D5
0000377E  CA7C 0028               4086              AND         #maskD,D5
00003782  BA7C 0028               4087              CMP         #maskD,D5
00003786  6700 0032               4088              BEQ         DataReg5
0000378A                          4089              
0000378A  43F9 00003DAE           4090              LEA         dispD4, A1          ; Output string D0
00003790  103C 000E               4091              MOVE.B      #14, D0             ; command for trap call to display message
00003794  4E4F                    4092              TRAP        #15                 ; trap call
00003796                          4093              
00003796  4245                    4094              CLR         D5
00003798  1A01                    4095              MOVE.B      D1,D5
0000379A  CA7C 0020               4096              AND         #mask6,D5
0000379E  BA7C 0020               4097              CMP         #mask6,D5
000037A2  6700 0006               4098              BEQ         Reg4Cont
000037A6  6000 00A2               4099              BRA         printMem
000037AA                          4100              
000037AA                          4101  Reg4Cont        
000037AA  43F9 00003CF2           4102              LEA         dec, A1             ; Output -
000037B0  103C 000E               4103              MOVE.B      #14, D0             ; command for trap call to display message
000037B4  4E4F                    4104              TRAP        #15                 ; trap call        
000037B6  6000 0002               4105              BRA         DataReg5
000037BA                          4106  
000037BA                          4107  DataReg5
000037BA  4245                    4108              CLR         D5
000037BC  1A01                    4109              MOVE.B      D1,D5
000037BE  CA7C 0050               4110              AND         #maskE,D5
000037C2  BA7C 0050               4111              CMP         #maskE,D5
000037C6  6700 0032               4112              BEQ         DataReg6
000037CA                          4113              
000037CA  43F9 00003DB1           4114              LEA         dispD5, A1          ; Output string D0
000037D0  103C 000E               4115              MOVE.B      #14, D0             ; command for trap call to display message
000037D4  4E4F                    4116              TRAP        #15                 ; trap call
000037D6                          4117              
000037D6  4245                    4118              CLR         D5
000037D8  1A01                    4119              MOVE.B      D1,D5
000037DA  CA7C 0040               4120              AND         #mask7,D5
000037DE  BA7C 0040               4121              CMP         #mask7,D5
000037E2  6700 0006               4122              BEQ         Reg5Cont
000037E6  6000 0062               4123              BRA         printMem
000037EA                          4124              
000037EA                          4125  Reg5Cont        
000037EA  43F9 00003CF2           4126              LEA         dec, A1             ; Output -
000037F0  103C 000E               4127              MOVE.B      #14, D0             ; command for trap call to display message
000037F4  4E4F                    4128              TRAP        #15                 ; trap call        
000037F6  6000 0042               4129              BRA         DataReg7
000037FA                          4130  
000037FA                          4131  DataReg6
000037FA  4245                    4132              CLR         D5
000037FC  1A01                    4133              MOVE.B      D1,D5
000037FE  CA7C 00A0               4134              AND         #maskF,D5
00003802  BA7C 00A0               4135              CMP         #maskF,D5
00003806  6700 0032               4136              BEQ         DataReg7
0000380A                          4137  
0000380A  43F9 00003DB4           4138              LEA         dispD6, A1          ; Output string D0
00003810  103C 000E               4139              MOVE.B      #14, D0             ; command for trap call to display message
00003814  4E4F                    4140              TRAP        #15                 ; trap call
00003816                          4141              
00003816  4245                    4142              CLR         D5
00003818  1A01                    4143              MOVE.B      D1,D5
0000381A  CA7C 0080               4144              AND         #mask8,D5
0000381E  BA7C 0080               4145              CMP         #mask8,D5
00003822  6700 0006               4146              BEQ         Reg6Cont
00003826  6000 0022               4147              BRA         printMem
0000382A                          4148              
0000382A                          4149  Reg6Cont        
0000382A  43F9 00003CF2           4150              LEA         dec, A1             ; Output -
00003830  103C 000E               4151              MOVE.B      #14, D0             ; command for trap call to display message
00003834  4E4F                    4152              TRAP        #15                 ; trap call        
00003836  6000 0002               4153              BRA         DataReg7
0000383A                          4154  
0000383A                          4155  DataReg7    
0000383A  43F9 00003DB7           4156              LEA         dispD7, A1             ; Output -
00003840  103C 000E               4157              MOVE.B      #14, D0             ; command for trap call to display message
00003844  4E4F                    4158              TRAP        #15                 ; trap call        
00003846  6000 0002               4159              BRA         printMem            
0000384A                          4160              
0000384A                          4161  printMem                                    ; Made this function in order to reuse if DR is 1
0000384A  6000 0002               4162              BRA         printMemNow
0000384E                          4163              
0000384E                          4164  printMemNow               
0000384E  43F9 00003D78           4165              LEA         slash, A1           ; Display slash
00003854  103C 000E               4166              MOVE.B      #14, D0             ; command for trap call to display message
00003858  4E4F                    4167              TRAP        #15                 ; trap call
0000385A                          4168           
0000385A  4244                    4169              CLR         D4                  ; Using D4 to store predecrement mode addresses
0000385C  3801                    4170              MOVE.W      D1,D4               ; Stores bits for D0-D7
0000385E  E044                    4171              ASR         #eight,D4
00003860                          4172              
00003860  4245                    4173              CLR         D5
00003862  1A04                    4174              MOVE.B      D4,D5
00003864  CA7C 0001               4175              AND         #mask1,D5
00003868  BA7C 0001               4176              CMP         #mask1,D5
0000386C  6700 0072               4177              BEQ         AddrReg0
00003870                          4178              
00003870  4245                    4179              CLR         D5
00003872  1A04                    4180              MOVE.B      D4,D5
00003874  CA7C 0002               4181              AND         #mask2,D5
00003878  BA7C 0002               4182              CMP         #mask2,D5
0000387C  6700 0092               4183              BEQ         AddrReg1
00003880                          4184  
00003880  4245                    4185              CLR         D5
00003882  1A04                    4186              MOVE.B      D4,D5
00003884  CA7C 0004               4187              AND         #mask3,D5
00003888  BA7C 0004               4188              CMP         #mask3,D5
0000388C  6700 00C2               4189              BEQ         AddrReg2            
00003890                          4190              
00003890  4245                    4191              CLR         D5
00003892  1A04                    4192              MOVE.B      D4,D5
00003894  CA7C 0008               4193              AND         #mask4,D5
00003898  BA7C 0008               4194              CMP         #mask4,D5
0000389C  6700 00F2               4195              BEQ         AddrReg3            
000038A0                          4196              
000038A0  4245                    4197              CLR         D5
000038A2  1A04                    4198              MOVE.B      D4,D5
000038A4  CA7C 0010               4199              AND         #mask5,D5
000038A8  BA7C 0010               4200              CMP         #mask5,D5
000038AC  6700 0122               4201              BEQ         AddrReg4
000038B0                          4202  
000038B0  4245                    4203              CLR         D5
000038B2  1A04                    4204              MOVE.B      D4,D5
000038B4  CA7C 0020               4205              AND         #mask6,D5
000038B8  BA7C 0020               4206              CMP         #mask6,D5
000038BC  6700 0152               4207              BEQ         AddrReg5
000038C0                          4208  
000038C0  4245                    4209              CLR         D5
000038C2  1A04                    4210              MOVE.B      D4,D5
000038C4  CA7C 0040               4211              AND         #mask7,D5
000038C8  BA7C 0040               4212              CMP         #mask7,D5
000038CC  6700 0182               4213              BEQ         AddrReg6
000038D0                          4214  
000038D0  4245                    4215              CLR         D5
000038D2  1A04                    4216              MOVE.B      D4,D5
000038D4  CA7C 0080               4217              AND         #mask8,D5
000038D8  BA7C 0080               4218              CMP         #mask8,D5
000038DC  6700 01B2               4219              BEQ         AddrReg7
000038E0                          4220              
000038E0                          4221  AddrReg0
000038E0  43F9 00003D88           4222              LEA         dispA0, A1          ; Output string D0
000038E6  103C 000E               4223              MOVE.B      #14, D0             ; command for trap call to display message
000038EA  4E4F                    4224              TRAP        #15                 ; trap call
000038EC                          4225              
000038EC  4245                    4226              CLR         D5
000038EE  1A01                    4227              MOVE.B      D1,D5
000038F0  CA7C 0002               4228              AND         #mask2,D5
000038F4  BA7C 0002               4229              CMP         #mask2,D5
000038F8  6700 0006               4230              BEQ         Addr0Cont
000038FC  6000 01A2               4231              BRA         endMOVE
00003900                          4232              
00003900                          4233  Addr0Cont        
00003900  43F9 00003CF2           4234              LEA         dec, A1             ; Output -
00003906  103C 000E               4235              MOVE.B      #14, D0             ; command for trap call to display message
0000390A  4E4F                    4236              TRAP        #15                 ; trap call        
0000390C  6000 0002               4237              BRA         AddrReg1
00003910                          4238  
00003910                          4239  AddrReg1
00003910  4245                    4240              CLR         D5
00003912  1A04                    4241              MOVE.B      D4,D5
00003914  CA7C 0005               4242              AND         #maskA,D5
00003918  BA7C 0005               4243              CMP         #maskA,D5
0000391C  6700 0032               4244              BEQ         AddrReg2
00003920                          4245              
00003920  43F9 00003D8B           4246              LEA         dispA1, A1          ; Output string D0
00003926  103C 000E               4247              MOVE.B      #14, D0             ; command for trap call to display message
0000392A  4E4F                    4248              TRAP        #15                 ; trap call
0000392C                          4249              
0000392C  4245                    4250              CLR         D5
0000392E  1A04                    4251              MOVE.B      D4,D5
00003930  CA7C 0004               4252              AND         #mask3,D5
00003934  BA7C 0004               4253              CMP         #mask3,D5
00003938  6700 0006               4254              BEQ         Addr1Cont
0000393C  6000 0162               4255              BRA         endMOVE
00003940                          4256              
00003940                          4257  Addr1Cont        
00003940  43F9 00003CF2           4258              LEA         dec, A1             ; Output -
00003946  103C 000E               4259              MOVE.B      #14, D0             ; command for trap call to display message
0000394A  4E4F                    4260              TRAP        #15                 ; trap call        
0000394C  6000 0002               4261              BRA         AddrReg2
00003950                          4262  
00003950                          4263  AddrReg2
00003950  4245                    4264              CLR         D5
00003952  1A04                    4265              MOVE.B      D4,D5
00003954  CA7C 000A               4266              AND         #maskB,D5
00003958  BA7C 000A               4267              CMP         #maskB,D5
0000395C  6700 0032               4268              BEQ         AddrReg3
00003960                          4269              
00003960  43F9 00003D8E           4270              LEA         dispA2, A1          ; Output string D0
00003966  103C 000E               4271              MOVE.B      #14, D0             ; command for trap call to display message
0000396A  4E4F                    4272              TRAP        #15                 ; trap call
0000396C                          4273              
0000396C  4245                    4274              CLR         D5
0000396E  1A04                    4275              MOVE.B      D4,D5
00003970  CA7C 0008               4276              AND         #mask4,D5
00003974  BA7C 0008               4277              CMP         #mask4,D5
00003978  6700 0006               4278              BEQ         Addr2Cont
0000397C  6000 0122               4279              BRA         endMOVE
00003980                          4280              
00003980                          4281  Addr2Cont        
00003980  43F9 00003CF2           4282              LEA         dec, A1             ; Output -
00003986  103C 000E               4283              MOVE.B      #14, D0             ; command for trap call to display message
0000398A  4E4F                    4284              TRAP        #15                 ; trap call        
0000398C  6000 0002               4285              BRA         AddrReg3
00003990                          4286  
00003990                          4287  AddrReg3
00003990  4245                    4288              CLR         D5
00003992  1A04                    4289              MOVE.B      D4,D5
00003994  CA7C 0014               4290              AND         #maskC,D5
00003998  BA7C 0014               4291              CMP         #maskC,D5
0000399C  6700 0032               4292              BEQ         AddrReg4
000039A0                          4293              
000039A0  43F9 00003D91           4294              LEA         dispA3, A1          ; Output string D0
000039A6  103C 000E               4295              MOVE.B      #14, D0             ; command for trap call to display message
000039AA  4E4F                    4296              TRAP        #15                 ; trap call
000039AC                          4297              
000039AC  4245                    4298              CLR         D5
000039AE  1A04                    4299              MOVE.B      D4,D5
000039B0  CA7C 0010               4300              AND         #mask5,D5
000039B4  BA7C 0010               4301              CMP         #mask5,D5
000039B8  6700 0006               4302              BEQ         Addr3Cont
000039BC  6000 00E2               4303              BRA         endMOVE
000039C0                          4304              
000039C0                          4305  Addr3Cont        
000039C0  43F9 00003CF2           4306              LEA         dec, A1             ; Output -
000039C6  103C 000E               4307              MOVE.B      #14, D0             ; command for trap call to display message
000039CA  4E4F                    4308              TRAP        #15                 ; trap call        
000039CC  6000 0002               4309              BRA         AddrReg4
000039D0                          4310  
000039D0                          4311  AddrReg4
000039D0  4245                    4312              CLR         D5
000039D2  1A04                    4313              MOVE.B      D4,D5
000039D4  CA7C 0028               4314              AND         #maskD,D5
000039D8  BA7C 0028               4315              CMP         #maskD,D5
000039DC  6700 0032               4316              BEQ         AddrReg5
000039E0                          4317              
000039E0  43F9 00003D94           4318              LEA         dispA4, A1          ; Output string D0
000039E6  103C 000E               4319              MOVE.B      #14, D0             ; command for trap call to display message
000039EA  4E4F                    4320              TRAP        #15                 ; trap call
000039EC                          4321              
000039EC  4245                    4322              CLR         D5
000039EE  1A04                    4323              MOVE.B      D4,D5
000039F0  CA7C 0020               4324              AND         #mask6,D5
000039F4  BA7C 0020               4325              CMP         #mask6,D5
000039F8  6700 0006               4326              BEQ         Addr4Cont
000039FC  6000 00A2               4327              BRA         endMOVE
00003A00                          4328              
00003A00                          4329  Addr4Cont        
00003A00  43F9 00003CF2           4330              LEA         dec, A1             ; Output -
00003A06  103C 000E               4331              MOVE.B      #14, D0             ; command for trap call to display message
00003A0A  4E4F                    4332              TRAP        #15                 ; trap call        
00003A0C  6000 0002               4333              BRA         AddrReg5
00003A10                          4334  AddrReg5
00003A10  4245                    4335              CLR         D5
00003A12  1A04                    4336              MOVE.B      D4,D5
00003A14  CA7C 0050               4337              AND         #maskE,D5
00003A18  BA7C 0050               4338              CMP         #maskE,D5
00003A1C  6700 0032               4339              BEQ         AddrReg6
00003A20                          4340              
00003A20  43F9 00003D97           4341              LEA         dispA5, A1          ; Output string D0
00003A26  103C 000E               4342              MOVE.B      #14, D0             ; command for trap call to display message
00003A2A  4E4F                    4343              TRAP        #15                 ; trap call
00003A2C                          4344              
00003A2C  4245                    4345              CLR         D5
00003A2E  1A04                    4346              MOVE.B      D4,D5
00003A30  CA7C 0040               4347              AND         #mask7,D5
00003A34  BA7C 0040               4348              CMP         #mask7,D5
00003A38  6700 0006               4349              BEQ         Addr5Cont
00003A3C  6000 0062               4350              BRA         endMOVE
00003A40                          4351              
00003A40                          4352  Addr5Cont        
00003A40  43F9 00003CF2           4353              LEA         dec, A1             ; Output -
00003A46  103C 000E               4354              MOVE.B      #14, D0             ; command for trap call to display message
00003A4A  4E4F                    4355              TRAP        #15                 ; trap call        
00003A4C  6000 0042               4356              BRA         AddrReg7
00003A50                          4357  
00003A50                          4358  AddrReg6
00003A50  4245                    4359              CLR         D5
00003A52  1A04                    4360              MOVE.B      D4,D5
00003A54  CA7C 00A0               4361              AND         #maskF,D5
00003A58  BA7C 00A0               4362              CMP         #maskF,D5
00003A5C  6700 0032               4363              BEQ         AddrReg7
00003A60                          4364  
00003A60  43F9 00003D9A           4365              LEA         dispA6, A1          ; Output string D0
00003A66  103C 000E               4366              MOVE.B      #14, D0             ; command for trap call to display message
00003A6A  4E4F                    4367              TRAP        #15                 ; trap call
00003A6C                          4368              
00003A6C  4245                    4369              CLR         D5
00003A6E  1A04                    4370              MOVE.B      D4,D5
00003A70  CA7C 0080               4371              AND         #mask8,D5
00003A74  BA7C 0080               4372              CMP         #mask8,D5
00003A78  6700 0006               4373              BEQ         Addr6Cont
00003A7C  6000 0022               4374              BRA         endMOVE
00003A80                          4375              
00003A80                          4376  Addr6Cont        
00003A80  43F9 00003CF2           4377              LEA         dec, A1             ; Output -
00003A86  103C 000E               4378              MOVE.B      #14, D0             ; command for trap call to display message
00003A8A  4E4F                    4379              TRAP        #15                 ; trap call        
00003A8C  6000 0002               4380              BRA         AddrReg7
00003A90                          4381  
00003A90                          4382  AddrReg7    
00003A90  43F9 00003D9D           4383              LEA         dispA7, A1          ; Output -
00003A96  103C 000E               4384              MOVE.B      #14, D0             ; command for trap call to display message
00003A9A  4E4F                    4385              TRAP        #15                 ; trap call        
00003A9C  6000 0002               4386              BRA         endMOVE
00003AA0                          4387  
00003AA0                          4388  endMOVE
00003AA0  4CDF 7EFF               4389              MOVEM.L  (SP)+, D0-D7/A1-A6
00003AA4  4E75                    4390              RTS
00003AA6                          4391  endMove1                                    ; Used if MOVEM has DR is 1
00003AA6  4CDF 7EFF               4392              MOVEM.L  (SP)+, D0-D7/A1-A6
00003AAA  4E75                    4393              RTS
00003AAC                          4394  ***********************************************************************************************************
00003AAC                          4395  *
00003AAC                          4396  *                       Hex Decode
00003AAC                          4397  *
00003AAC                          4398  *this subroutine displays hex code stored in D1. It displays based on the number of 
00003AAC                          4399  *It displays based on the number of hex to display which is stored in D0. If it is a
00003AAC                          4400  *long or word to display, it will figure out the ascii character and add $37 if it
00003AAC                          4401  *is a letter, and $30 if its a number. It will then load the character into D1 and 
00003AAC                          4402  *display it via trap task 6 and loop however many times is needed, 4 or 8. If a word
00003AAC                          4403  *needs to be displayed, it will roll the bits over so that, the hex are shifted by a word.
00003AAC                          4404  *
00003AAC                          4405  ***********************************************************************************************************
00003AAC                          4406  
00003AAC                          4407  outHex      
00003AAC  48E7 FF7E               4408              MOVEM.L     D0-D7/A1-A6, -(SP)
00003AB0  4243                    4409              CLR         D3
00003AB2  4244                    4410              CLR         D4
00003AB4  1800                    4411              MOVE.B      D0, D4
00003AB6  2601                    4412              MOVE.L      D1, D3
00003AB8  B03C 0004               4413              CMP.B       #4, D0
00003ABC  6700 0006               4414              BEQ         moveOver
00003AC0  6000 0006               4415              BRA         dispLOOP
00003AC4                          4416              
00003AC4                          4417  moveOver    
00003AC4  E19B                    4418              ROL.L       #8,D3
00003AC6  E19B                    4419              ROL.L       #8,D3
00003AC8                          4420              
00003AC8                          4421  dispLOOP    
00003AC8  B83C 0000               4422              CMP.B       #0, D4
00003ACC  6700 0042               4423              BEQ         endDispSub
00003AD0  E99B                    4424              ROL.L       #4, D3
00003AD2  4245                    4425              CLR         D5
00003AD4  1A03                    4426              MOVE.B      D3, D5 
00003AD6  CABC 0000000F           4427              AND.L       #$0F, D5
00003ADC  BA3C 000A               4428              CMP.B       #10, D5
00003AE0  6D00 0006               4429              BLT         DLnine
00003AE4  6000 0016               4430              BRA         DLetters
00003AE8                          4431              
00003AE8                          4432  DLnine      
00003AE8  0645 0030               4433              ADD         #$30, D5
00003AEC  4241                    4434              CLR         D1
00003AEE  1205                    4435              MOVE.B      D5, D1
00003AF0  4240                    4436              CLR         D0
00003AF2  103C 0006               4437              MOVE.B      #6, D0
00003AF6  4E4F                    4438              TRAP        #15
00003AF8  5344                    4439              SUB         #1, D4
00003AFA  60CC                    4440              BRA         dispLOOP  
00003AFC                          4441   
00003AFC                          4442  DLetters    
00003AFC  0645 0037               4443              ADD         #$37, D5
00003B00  4241                    4444              CLR         D1
00003B02  1205                    4445              MOVE.B      D5, D1
00003B04  4240                    4446              CLR         D0
00003B06  103C 0006               4447              MOVE.B      #6, D0
00003B0A  4E4F                    4448              TRAP        #15
00003B0C  5344                    4449              SUB         #1, D4
00003B0E  60B8                    4450              BRA         dispLOOP        
00003B10                          4451  
00003B10                          4452  endDispSub  
00003B10  4CDF 7EFF               4453              MOVEM.L     (SP)+, D0-D7/A1-A6
00003B14  4E75                    4454              RTS
00003B16                          4455  
00003B16                          4456              
00003B16                          4457  ***********************************************************************************************************
00003B16                          4458  *
00003B16                          4459  *                       IO Subroutine
00003B16                          4460  *
00003B16                          4461  *
00003B16                          4462  *   the following subroutine gets the string address from the user
00003B16                          4463  *   and converts it to Hex for a starting/ending address. it is done 
00003B16                          4464  *   by checking each byte at address A1, and converting it from ascii to 
00003B16                          4465  *   hex number. If the user enters an invalid character string, the
00003B16                          4466  *   program will have a simhalt.
00003B16                          4467  *
00003B16                          4468  ***********************************************************************************************************
00003B16                          4469  
00003B16                          4470  Address     
00003B16  48E7 1F3E               4471              MOVEM.L     D3-D7/A2-A6, -(SP)
00003B1A                          4472  
00003B1A                          4473  Retry       
00003B1A  4242                    4474              CLR         D2
00003B1C  4243                    4475              CLR         D3
00003B1E  B23C 0004               4476              CMP.B       #4, D1
00003B22  6700 000E               4477              BEQ         subLOOP
00003B26  B23C 0008               4478              CMP.B       #8, D1
00003B2A  6700 0006               4479              BEQ         subLOOP
00003B2E  6000 012A               4480              BRA         ADDinvalid        
00003B32                          4481          
00003B32                          4482  subLOOP     
00003B32  E85C                    4483              ROR         #4, D4
00003B34  1404                    4484              MOVE.B      D4, D2
00003B36  4244                    4485              CLR         D4
00003B38  4245                    4486              CLR         D5
00003B3A  B601                    4487              CMP.B       D1, D3
00003B3C  6700 0132               4488              BEQ         endLOOP
00003B40  5443                    4489              ADD.W       #2, D3
00003B42  E19A                    4490              ROL.L       #8, D2
00003B44                          4491          
00003B44                          4492  bytLOOP     
00003B44  E95C                    4493              ROL         #4, D4
00003B46                          4494          
00003B46  0C11 0030               4495              CMP.B       #$30, (A1)
00003B4A  6700 007E               4496              BEQ         hZero 
00003B4E  0C11 0031               4497              CMP.B       #$31, (A1)
00003B52  6700 007E               4498              BEQ         hOne
00003B56  0C11 0032               4499              CMP.B       #$32, (A1)
00003B5A  6700 007E               4500              BEQ         hTwo
00003B5E  0C11 0033               4501              CMP.B       #$33, (A1)
00003B62  6700 007E               4502              BEQ         hThree
00003B66  0C11 0034               4503              CMP.B       #$34, (A1)
00003B6A  6700 007E               4504              BEQ         hFour
00003B6E  0C11 0035               4505              CMP.B       #$35, (A1)
00003B72  6700 007E               4506              BEQ         hFive
00003B76  0C11 0036               4507              CMP.B       #$36, (A1)
00003B7A  6700 007E               4508              BEQ         hSix
00003B7E  0C11 0037               4509              CMP.B       #$37, (A1)
00003B82  6700 007E               4510              BEQ         hSeven
00003B86  0C11 0038               4511              CMP.B       #$38, (A1)
00003B8A  6700 007E               4512              BEQ         hEight
00003B8E  0C11 0039               4513              CMP.B       #$39, (A1)
00003B92  6700 007E               4514              BEQ         hNine
00003B96  0C11 0041               4515              CMP.B       #$41, (A1)
00003B9A  6700 007E               4516              BEQ         hA
00003B9E  0C11 0042               4517              CMP.B       #$42, (A1)
00003BA2  6700 007E               4518              BEQ         hB
00003BA6  0C11 0043               4519              CMP.B       #$43, (A1)
00003BAA  6700 007E               4520              BEQ         hC
00003BAE  0C11 0044               4521              CMP.B       #$44, (A1)
00003BB2  6700 007E               4522              BEQ         hD
00003BB6  0C11 0045               4523              CMP.B       #$45, (A1)
00003BBA  6700 007E               4524              BEQ         hE
00003BBE  0C11 0046               4525              CMP.B       #$46, (A1)
00003BC2  6700 007E               4526              BEQ         hF 
00003BC6                          4527              
00003BC6  6000 F9B8               4528              BRA         invalid 
00003BCA                          4529              
00003BCA                          4530  hZero       
00003BCA  183C 0000               4531              MOVE.B      #$00, D4
00003BCE  6000 007A               4532              BRA         nextH
00003BD2                          4533              
00003BD2                          4534  hOne        
00003BD2  183C 0010               4535              MOVE.B      #$10, D4
00003BD6  6000 0072               4536              BRA         nextH
00003BDA                          4537  hTwo        
00003BDA  183C 0020               4538              MOVE.B      #$20, D4
00003BDE  6000 006A               4539              BRA         nextH
00003BE2                          4540              
00003BE2                          4541  hThree      
00003BE2  183C 0030               4542              MOVE.B      #$30, D4
00003BE6  6000 0062               4543              BRA         nextH
00003BEA                          4544              
00003BEA  183C 0040               4545  hFour       MOVE.B      #$40, D4
00003BEE  6000 005A               4546              BRA         nextH
00003BF2                          4547              
00003BF2                          4548  hFive       
00003BF2  183C 0050               4549              MOVE.B      #$50, D4
00003BF6  6000 0052               4550              BRA         nextH
00003BFA                          4551              
00003BFA                          4552  hSix        
00003BFA  183C 0060               4553              MOVE.B      #$60, D4
00003BFE  6000 004A               4554              BRA         nextH
00003C02                          4555              
00003C02                          4556  hSeven      
00003C02  183C 0070               4557              MOVE.B      #$70, D4
00003C06  6000 0042               4558              BRA         nextH
00003C0A                          4559              
00003C0A                          4560  hEight      
00003C0A  183C 0080               4561              MOVE.B      #$80, D4
00003C0E  6000 003A               4562              BRA         nextH
00003C12                          4563              
00003C12                          4564  hNine       
00003C12  183C 0090               4565              MOVE.B      #$90, D4
00003C16  6000 0032               4566              BRA         nextH
00003C1A                          4567          
00003C1A                          4568  hA          
00003C1A  183C 00A0               4569              MOVE.B      #$A0, D4
00003C1E  6000 002A               4570              BRA         nextH
00003C22                          4571              
00003C22                          4572  hB          
00003C22  183C 00B0               4573              MOVE.B      #$B0, D4
00003C26  6000 0022               4574              BRA         nextH
00003C2A                          4575              
00003C2A                          4576  hC          
00003C2A  183C 00C0               4577              MOVE.B      #$C0, D4
00003C2E  6000 001A               4578              BRA         nextH
00003C32                          4579              
00003C32                          4580  hD          
00003C32  183C 00D0               4581              MOVE.B      #$D0, D4
00003C36  6000 0012               4582              BRA         nextH
00003C3A                          4583              
00003C3A                          4584  hE          
00003C3A  183C 00E0               4585              MOVE.B      #$E0, D4
00003C3E  6000 000A               4586              BRA         nextH
00003C42                          4587              
00003C42                          4588  hF          
00003C42  183C 00F0               4589              MOVE.B      #$F0, D4
00003C46  6000 0002               4590              BRA         nextH
00003C4A                          4591  
00003C4A                          4592  nextH       
00003C4A  1019                    4593              MOVE.B      (A1)+, D0
00003C4C  5245                    4594              ADD         #1, D5
00003C4E  BA3C 0002               4595              CMP.B       #2, D5
00003C52  6700 FEDE               4596              BEQ         subLOOP
00003C56  6000 FEEC               4597              BRA         bytLOOP
00003C5A                          4598          
00003C5A                          4599  ADDinvalid  
00003C5A  43F9 00003CC2           4600              LEA         errorMessage, A1
00003C60  103C 000E               4601              MOVE.B      #14, D0
00003C64  4E4F                    4602              TRAP        #15    
00003C66                          4603      
00003C66  103C 0002               4604              MOVE.B      #2, D0
00003C6A  4E4F                    4605              TRAP        #15
00003C6C                          4606  
00003C6C  6000 FEAC               4607              BRA         Retry
00003C70                          4608     
00003C70                          4609  endLOOP     
00003C70  4CDF 7CF8               4610              MOVEM.L     (SP)+, D3-D7/A2-A6
00003C74  4E75                    4611              RTS
00003C76                          4612  
00003C76                          4613  printInvalid
00003C76  1218                    4614              MOVE.B      (A0)+,D1
00003C78  6000 D3C6               4615              BRA         LOOP
00003C7C                          4616  
00003C7C                          4617  endPROG    
00003C7C                          4618  
00003C7C  FFFF FFFF               4619      SIMHALT                             ; halt simulator
00003C80                          4620  
00003C80                          4621  ***********************************************************************************************************
00003C80                          4622  *
00003C80                          4623  *                       IO Strings
00003C80                          4624  *           
00003C80                          4625  *       This section holds all of the various strings to output to the console.
00003C80                          4626  *
00003C80                          4627  ***********************************************************************************************************
00003C80                          4628  
00003C80= 45 6E 74 65 72 20 ...   4629  startingMessage DC.B    'Enter Starting Address (in hex): ', 0
00003CA2= 45 6E 74 65 72 20 ...   4630  endingMessage   DC.B    'Enter Ending Address (in hex): ', 0
00003CC2= 49 6E 63 6F 72 72 ...   4631  errorMessage    DC.B    'Incorrect Address, try again: ', 0
00003CE1                          4632  
00003CE1= 20 0D 0A 00             4633  newLine         DC.B    ' ', CR, LF, 0
00003CE5= 20 20 00                4634  space           DC.B    '  ', 0
00003CE8                          4635  
00003CE8= 23 00                   4636  hashTag         DC.B    '#', 0
00003CEA= 24 00                   4637  dispHex         DC.B    '$', 0
00003CEC= 2C 00                   4638  comma           DC.B    ',', 0
00003CEE                          4639  
00003CEE= 28 00                   4640  opPer           DC.B    '(', 0
00003CF0= 29 00                   4641  clPer           DC.B    ')', 0
00003CF2= 2D 00                   4642  dec             DC.B    '-', 0
00003CF4= 2B 00                   4643  inc             DC.B    '+', 0
00003CF6                          4644  
00003CF6= 4F 52 49 00             4645  ORImatch        DC.B    'ORI', 0
00003CFA= 43 4D 50 49 00          4646  CMPImatch       DC.B    'CMPI', 0
00003CFF= 42 43 4C 52 00          4647  BCLRmatch       DC.B    'BCLR', 0
00003D04= 4D 4F 56 45 00          4648  MOVEmatch       DC.B    'MOVE', 0
00003D09= 4D 4F 56 45 41 00       4649  MOVEAmatch      DC.B    'MOVEA', 0
00003D0F= 4E 45 47 00             4650  NEGmatch        DC.B    'NEG', 0
00003D13= 52 54 53 00             4651  RTSmatch        DC.B    'RTS', 0
00003D17= 4A 53 52 00             4652  JSRmatch        DC.B    'JSR', 0
00003D1B= 4D 4F 56 45 4D 00       4653  MOVEMmatch      DC.B    'MOVEM', 0
00003D21= 4C 45 41 00             4654  LEAmatch        DC.B    'LEA', 0
00003D25= 53 55 42 51 00          4655  SUBQmatch       DC.B    'SUBQ', 0
00003D2A= 42 52 41 00             4656  BRAmatch        DC.B    'BRA', 0
00003D2E= 42 43 53 00             4657  BCSmatch        DC.B    'BCS', 0
00003D32= 42 56 43 00             4658  BVCmatch        DC.B    'BVC', 0
00003D36= 42 47 45 00             4659  BGEmatch        DC.B    'BGE', 0
00003D3A= 42 4C 54 00             4660  BLTmatch        DC.B    'BLT', 0
00003D3E= 44 49 56 53 00          4661  DIVSmatch       DC.B    'DIVS', 0
00003D43= 4F 52 00                4662  ORmatch         DC.B    'OR', 0
00003D46= 53 55 42 00             4663  SUBmatch        DC.B    'SUB', 0
00003D4A= 45 4F 52 00             4664  EORmatch        DC.B    'EOR', 0
00003D4E= 43 4D 50 00             4665  CMPmatch        DC.B    'CMP', 0
00003D52= 4D 55 4C 53 00          4666  MULSmatch       DC.B    'MULS', 0
00003D57= 41 44 44 00             4667  ADDmatch        DC.B    'ADD', 0
00003D5B= 41 44 44 41 00          4668  ADDAmatch       DC.B    'ADDA', 0
00003D60= 4C 53 52 00             4669  LSRmatch        DC.B    'LSR', 0
00003D64= 4C 53 4C 00             4670  LSLmatch        DC.B    'LSL', 0
00003D68= 41 53 52 00             4671  ASRmatch        DC.B    'ASR', 0
00003D6C= 41 53 4C 00             4672  ASLmatch        DC.B    'ASL', 0
00003D70= 52 4F 52 00             4673  RORmatch        DC.B    'ROR', 0
00003D74= 52 4F 4C 00             4674  ROLmatch        DC.B    'ROL', 0
00003D78                          4675  
00003D78= 2F 00                   4676  slash           DC.B    '/', 0
00003D7A= 28 53 50 29 00          4677  stack           DC.B    '(SP)', 0
00003D7F                          4678   
00003D7F= 2E 42 00                4679  dispByte        DC.B    '.B', 0
00003D82= 2E 57 00                4680  dispWord        DC.B    '.W', 0
00003D85= 2E 4C 00                4681  dispLong        DC.B    '.L', 0
00003D88                          4682  
00003D88= 41 30 00                4683  dispA0          DC.B    'A0', 0
00003D8B= 41 31 00                4684  dispA1          DC.B    'A1', 0
00003D8E= 41 32 00                4685  dispA2          DC.B    'A2', 0
00003D91= 41 33 00                4686  dispA3          DC.B    'A3', 0
00003D94= 41 34 00                4687  dispA4          DC.B    'A4', 0
00003D97= 41 35 00                4688  dispA5          DC.B    'A5', 0
00003D9A= 41 36 00                4689  dispA6          DC.B    'A6', 0
00003D9D= 41 37 00                4690  dispA7          DC.B    'A7', 0
00003DA0                          4691  
00003DA0= 44 00                   4692  dispD           DC.B    'D',0
00003DA2= 44 30 00                4693  dispD0          DC.B    'D0', 0
00003DA5= 44 31 00                4694  dispD1          DC.B    'D1', 0
00003DA8= 44 32 00                4695  dispD2          DC.B    'D2', 0
00003DAB= 44 33 00                4696  dispD3          DC.B    'D3', 0
00003DAE= 44 34 00                4697  dispD4          DC.B    'D4', 0
00003DB1= 44 35 00                4698  dispD5          DC.B    'D5', 0
00003DB4= 44 36 00                4699  dispD6          DC.B    'D6', 0
00003DB7= 44 37 00                4700  dispD7          DC.B    'D7', 0 
00003DBA                          4701   
00003DBA                          4702             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             3500
ABSSHORT            34C8
ADDAMATCH           3D5B
ADDINVALID          3C5A
ADDMATCH            3D57
ADDR0CONT           3900
ADDR1CONT           3940
ADDR2CONT           3980
ADDR3CONT           39C0
ADDR4CONT           3A00
ADDR5CONT           3A40
ADDR6CONT           3A80
ADDRESS             3B16
ADDRREG0            38E0
ADDRREG1            3910
ADDRREG2            3950
ADDRREG3            3990
ADDRREG4            39D0
ADDRREG5            3A10
ADDRREG6            3A50
ADDRREG7            3A90
ASLMATCH            3D6C
ASRMATCH            3D68
BCLRMATCH           3CFF
BCSMATCH            3D2E
BGEMATCH            3D36
BLTMATCH            3D3A
BRAEIGHT            1142
BRAELEVEN           1160
BRAFIVE             1112
BRAFOUR             10F6
BRAFOURTEEN         11D0
BRAMATCH            3D2A
BRANINE             115C
BRAONE              10EA
BRASIX              1116
BRATHIRTEEN         117E
BRATHREE            10F2
BRATWELVE           117A
BRATWO              10EE
BRAZERO             10BA
BVCMATCH            3D32
BYTLOOP             3B44
CHECKDR             35D6
CLPER               3CF0
CMPIMATCH           3CFA
CMPMATCH            3D4E
COMMA               3CEC
CR                  D
DATAREG0            368A
DATAREG1            36BA
DATAREG2            36FA
DATAREG3            373A
DATAREG4            377A
DATAREG5            37BA
DATAREG6            37FA
DATAREG7            383A
DEC                 3CF2
DISPA0              3D88
DISPA1              3D8B
DISPA2              3D8E
DISPA3              3D91
DISPA4              3D94
DISPA5              3D97
DISPA6              3D9A
DISPA7              3D9D
DISPBYTE            3D7F
DISPD               3DA0
DISPD0              3DA2
DISPD1              3DA5
DISPD2              3DA8
DISPD3              3DAB
DISPD4              3DAE
DISPD5              3DB1
DISPD6              3DB4
DISPD7              3DB7
DISPHEX             3CEA
DISPIMM             3538
DISPLAYA0           3040
DISPLAYA0A          310C
DISPLAYA0D          33D0
DISPLAYA0P          3238
DISPLAYA1           3050
DISPLAYA1A          3128
DISPLAYA1D          33EC
DISPLAYA1P          3260
DISPLAYA2           3060
DISPLAYA2A          3144
DISPLAYA2D          3408
DISPLAYA2P          3288
DISPLAYA3           3070
DISPLAYA3A          3160
DISPLAYA3D          3424
DISPLAYA3P          32B0
DISPLAYA4           3080
DISPLAYA4A          317C
DISPLAYA4D          3440
DISPLAYA4P          32D8
DISPLAYA5           3090
DISPLAYA5A          3198
DISPLAYA5D          345C
DISPLAYA5P          3300
DISPLAYA6           30A0
DISPLAYA6A          31B4
DISPLAYA6D          3478
DISPLAYA6P          3328
DISPLAYA7           30B0
DISPLAYA7A          31D0
DISPLAYA7D          3494
DISPLAYA7P          3350
DISPLAYD0           2F80
DISPLAYD1           2F90
DISPLAYD2           2FA0
DISPLAYD3           2FB0
DISPLAYD4           2FC0
DISPLAYD5           2FD0
DISPLAYD6           2FE0
DISPLAYD7           2FF0
DISPLAYEIGHT        2EF8
DISPLONG            3D85
DISPLOOP            3AC8
DISPWORD            3D82
DIVSMATCH           3D3E
DLETTERS            3AFC
DLNINE              3AE8
EIGHT               8
ELEVEN              B
ENDDISPSUB          3B10
ENDINGMESSAGE       3CA2
ENDLOOP             3C70
ENDMOVE             3AA0
ENDMOVE1            3AA6
ENDPROG             3C7C
ENDSUB              3584
ENDSUBROUTINE       2F02
EORMATCH            3D4A
ERRORMESSAGE        3CC2
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HA                  3C1A
HASHTAG             3CE8
HB                  3C22
HC                  3C2A
HD                  3C32
HE                  3C3A
HEIGHT              3C0A
HF                  3C42
HFIVE               3BF2
HFOUR               3BEA
HNINE               3C12
HONE                3BD2
HSEVEN              3C02
HSIX                3BFA
HTHREE              3BE2
HTWO                3BDA
HZERO               3BCA
IMMLONG             356C
INC                 3CF4
INVALID             3580
JSRMATCH            3D17
LEAMATCH            3D21
LF                  A
LONGSKIP            357C
LOOP                1040
LSLMATCH            3D64
LSRMATCH            3D60
MASK0               0
MASK1               1
MASK2               2
MASK3               4
MASK4               8
MASK5               10
MASK6               20
MASK7               40
MASK8               80
MASKA               5
MASKB               A
MASKC               14
MASKD               28
MASKE               50
MASKF               A0
MEMSB               2692
MEMSHIFTIMM         2EDE
MEMSHIFTS           11EA
MEMSL               2BA6
MEMSW               291C
MOVEAMATCH          3D09
MOVEMATCH           3D04
MOVEMBRA            358A
MOVEML              35BA
MOVEMMATCH          3D1B
MOVEMW              359E
MOVEOVER            3AC4
MULSMATCH           3D52
NEGMATCH            3D0F
NEWLINE             3CE1
NEXTH               3C4A
NINE                9
ONE                 1
OPADDAL             245A
OPADDAW             23EA
OPADDB              229E
OPADDL              2376
OPADDW              230A
OPASBI              26D0
OPASBR              2732
OPASL               24CA
OPASLBI             2710
OPASLBR             2772
OPASLI              2BE4
OPASLLI             2C24
OPASLLR             2C86
OPASLR              2C46
OPASLWI             299A
OPASLWR             29FC
OPASR               2516
OPASRBI             26EE
OPASRBR             2750
OPASRLI             2C02
OPASRLR             2C64
OPASRWI             2978
OPASRWR             29DA
OPASWI              295A
OPASWR              29BC
OPBCLR              153A
OPBCS               20DA
OPBGE               214A
OPBLT               2182
OPBRA               20A2
OPBVC               2112
OPCMP               1E0A
OPCMPB              1E3C
OPCMPI              13AC
OPCMPIB             13CE
OPCMPIL             14C4
OPCMPIW             1440
OPCMPL              1EF0
OPCMPW              1E96
OPDIVS              1C5E
OPDYNBCLR           159E
OPEOR               1CBC
OPEORB              1CEA
OPEORL              1DAA
OPEORW              1D4A
OPJSR               198A
OPLEA               1A8C
OPLSBI              2794
OPLSBR              27F6
OPLSL               2562
OPLSLBI             27D4
OPLSLBR             2836
OPLSLI              2CA8
OPLSLLI             2CE8
OPLSLLR             2D4A
OPLSLR              2D0A
OPLSLWI             2A5E
OPLSLWR             2AC0
OPLSR               25AE
OPLSRBI             27B2
OPLSRBR             2814
OPLSRLI             2CC6
OPLSRLR             2D28
OPLSRWI             2A3C
OPLSRWR             2A9E
OPLSWI              2A1E
OPLSWR              2A80
OPMOVEAL            1724
OPMOVEAW            181A
OPMOVEB             160C
OPMOVEL             1690
OPMOVEM             1A02
OPMOVEMLEA          19E6
OPMOVEW             178C
OPMULS              223A
OPNEG               1882
OPNEGB              18B0
OPNEGL              18F0
OPNEGW              1930
OPOR                1B0C
OPORB               1B4A
OPORI               1244
OPORIB              1272
OPORIL              133E
OPORIW              12D8
OPORL               1C00
OPORW               1BA4
OPPER               3CEE
OPROBI              2858
OPROBR              28BA
OPROL               25FA
OPROLBI             2898
OPROLBR             28FA
OPROLI              2D6C
OPROLLI             2DAC
OPROLLR             2E0E
OPROLR              2DCE
OPROLWI             2B22
OPROLWR             2B84
OPROR               2646
OPRORBI             2876
OPRORBR             28D8
OPRORLI             2D8A
OPRORLR             2DEC
OPRORWI             2B00
OPRORWR             2B62
OPROWI              2AE2
OPROWR              2B44
OPRTS               19CA
OPRTSJSR            1970
OPSUB               1F4A
OPSUBB              1F94
OPSUBL              2048
OPSUBQ              21BA
OPSUBQB             21E6
OPSUBQL             221A
OPSUBQW             2200
OPSUBW              1FEE
ORIMATCH            3CF6
ORMATCH             3D43
OUTHEX              3AAC
PADDRDEC            3378
PADDRDIR            30C0
PADDRPOST           31EC
PADDRREG            3000
PDATAREG            2F40
PHEX                34B0
PRINTEA             2F08
PRINTINVALID        3C76
PRINTMEM            384A
PRINTMEMNOW         384E
PRINTREGMEM         35FE
PRINTSTACK          35EA
PRNTIMM             2E30
PRNTREG             2E8C
REG0CONT            36AA
REG1CONT            36EA
REG2CONT            372A
REG3CONT            376A
REG4CONT            37AA
REG5CONT            37EA
REG6CONT            382A
REGSHIFTS           1228
RETRY               3B1A
ROLMATCH            3D74
RORMATCH            3D70
RTSMATCH            3D13
SECNIB              F
SEVEN               7
SIX                 6
SKIPPRINTEA         1A7C
SLASH               3D78
SPACE               3CE5
STACK               3D7A
START               1000
STARTINGMESSAGE     3C80
SUBLOOP             3B32
SUBMATCH            3D46
SUBQMATCH           3D25
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
