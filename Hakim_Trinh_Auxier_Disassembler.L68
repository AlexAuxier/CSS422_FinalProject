00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 12/11/2014 1:42:44 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9       
00000000  =00000000                 10  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 11  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 12  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 13  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 14  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 15  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 16  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 17  seven       EQU     $07
00000000  =00000008                 18  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 19  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 20  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 21  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 22  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 23  fourteen    EQU     $0E         ; defined hex value 14
00000000                            24  
00000000  =00000000                 25  mask0       EQU     %00000000
00000000  =00000001                 26  mask1       EQU     %00000001
00000000  =00000002                 27  mask2       EQU     %00000010
00000000  =00000004                 28  mask3       EQU     %00000100
00000000  =00000008                 29  mask4       EQU     %00001000
00000000  =00000010                 30  mask5       EQU     %00010000
00000000  =00000020                 31  mask6       EQU     %00100000
00000000  =00000040                 32  mask7       EQU     %01000000
00000000  =00000080                 33  mask8       EQU     %10000000
00000000                            34  
00000000  =00000005                 35  maskA       EQU     %00000101
00000000  =0000000A                 36  maskB       EQU     %00001010
00000000  =00000014                 37  maskC       EQU     %00010100
00000000  =00000028                 38  maskD       EQU     %00101000
00000000  =00000050                 39  maskE       EQU     %01010000
00000000  =000000A0                 40  maskF       EQU     %10100000
00000000                            41  
00000000  =000000F0                 42  firstNib    EQU     $F0
00000000  =0000000F                 43  secNib      EQU     $0F
00000000                            44               
00001000                            45              ORG    $1000
00001000                            46  START:                                  ; first instruction of program
00001000                            47        
00001000  43F9 00003C6A             48          LEA     startingMessage, A1
00001006  103C 000E                 49          MOVE.B  #14, D0
0000100A  4E4F                      50          TRAP    #15    
0000100C                            51      
0000100C  103C 0002                 52          MOVE.B  #2, D0
00001010  4E4F                      53          TRAP    #15
00001012                            54      
00001012  4EB9 00003B0A             55          JSR     Address
00001018  2042                      56          MOVEA.L D2, A0
0000101A                            57          
0000101A  43F9 00003C8C             58          LEA     endingMessage, A1
00001020  103C 000E                 59          MOVE.B  #14, D0
00001024  4E4F                      60          TRAP    #15    
00001026                            61      
00001026  103C 0002                 62          MOVE.B  #2, D0
0000102A  4E4F                      63          TRAP    #15
0000102C                            64      
0000102C  4EB9 00003B0A             65          JSR     Address
00001032  2442                      66          MOVEA.L D2, A2
00001034                            67          
00001034  43F9 00003CCB             68          LEA     newline, A1
0000103A  103C 000E                 69          MOVE.B  #14, D0
0000103E  4E4F                      70          TRAP    #15 
00001040                            71            
00001040  4241                      72  LOOP    CLR         D1                  ; clear out D1
00001042  4242                      73          CLR         D2                  ; clear out D2
00001044  B1CA                      74          CMPA.L      A2, A0              ; compare starting and ending addresses
00001046  6E00 2C1E                 75          BGT         endProg             ; if A0 > A1, we've finished, end program
0000104A  1218                      76          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
0000104C  1401                      77          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000104E  E882                      78          ASR.L       #four, D2           ; get first nibble in D2
00001050                            79          
00001050  B43C 0000                 80          CMP.B       #zero, D2           ; compare with 0
00001054  6700 0064                 81          BEQ         braZero             ; branch out to zero method
00001058  B43C 0001                 82          CMP.B       #one, D2            ; compare with 1
0000105C  6700 008C                 83          BEQ         braOne              ; branch out to one method
00001060  B43C 0002                 84          CMP.B       #two, D2            ; compare with 2    
00001064  6700 0088                 85          BEQ         braTwo              ; branch out to two method
00001068  B43C 0003                 86          CMP.B       #three, D2          ; compare with 3
0000106C  6700 0084                 87          BEQ         braThree            ; branch out to three method
00001070  B43C 0004                 88          CMP.B       #four, D2           ; compare with 4
00001074  6700 0080                 89          BEQ         braFour             ; branch out to four method
00001078  B43C 0005                 90          CMP.B       #five, D2           ; compare with 5
0000107C  6700 0094                 91          BEQ         braFive             ; branch out to five method
00001080  B43C 0006                 92          CMP.B       #six, D2            ; compare with 6
00001084  6700 0090                 93          BEQ         braSix              ; branch out to six method
00001088  B43C 0008                 94          CMP.B       #eight, D2          ; compare with 8
0000108C  6700 00B4                 95          BEQ         braEight            ; branch out to eight method
00001090  B43C 0009                 96          CMP.B       #nine, D2           ; compare with 9
00001094  6700 00C6                 97          BEQ         braNine             ; branch out to nine method
00001098  B43C 000B                 98          CMP.B       #eleven, D2         ; compare with 11
0000109C  6700 00C2                 99          BEQ         braEleven           ; branch out to eleven method
000010A0  B43C 000C                100          CMP.B       #twelve, D2         ; compare with 12
000010A4  6700 00D4                101          BEQ         braTwelve           ; branch out to twelve method
000010A8  B43C 000D                102          CMP.B       #thirteen, D2       ; compare with 13
000010AC  6700 00D0                103          BEQ         braThirteen         ; branch out to thirteen method
000010B0  B43C 000E                104          CMP.B       #fourteen, D2       ; compare with 14
000010B4  6700 011A                105          BEQ         braFourteen         ; branch out to fourteen method
000010B8  6086                     106          BRA         loop
000010BA                           107  
000010BA  4242                     108  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
000010BC  1401                     109          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010BE  C43C 000F                110          AND.B       #secNib, D2             ; set first nibble to 0
000010C2                           111   
000010C2  B43C 0000                112          CMP.B       #zero, D2           ; compare second nibble to 0
000010C6  6700 017C                113          BEQ         opORI               ; branch to ORI method
000010CA  B43C 000C                114          CMP.B       #twelve, D2         ; compare second nibble to 12
000010CE  6700 02DC                115          BEQ         opCMPI              ; branch to CMPI method
000010D2  B43C 0008                116          CMP.B       #eight,D2           ; Test for static BCLR
000010D6  6700 0462                117          BEQ         opBCLR
000010DA  C47C 0001                118          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010DE  B43C 0001                119          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010E2  6700 04BA                120          BEQ         opDynBCLR
000010E6  6000 2B7E                121          BRA         printInvalid
000010EA                           122          
000010EA                           123          
000010EA  6000 0520                124  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010EE                           125  
000010EE  6000 05A0                126  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010F2                           127  
000010F2                           128  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010F2                           129  
000010F2  6000 0698                130          BRA         opMOVEW
000010F6                           131  
000010F6  4242                     132  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010F8  1401                     133          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010FA  C43C 000F                134          AND.B       #secNib, D2             ; set first nibble to 0
000010FE                           135   
000010FE  B43C 0004                136          CMP.B       #four, D2           ; compare second nibble to 4
00001102  6700 077E                137          BEQ         opNEG               ; branch to NEG method
00001106  B43C 000E                138          CMP.B       #fourteen, D2       ; compare second nibble to E
0000110A  6700 0864                139          BEQ         opRTSJSR            ; branch to JSR or RTS method
0000110E  6000 08D6                140          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
00001112                           141  
00001112  6000 10A6                142  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
00001116                           143  
00001116  4242                     144  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
00001118  1401                     145          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000111A  C43C 000F                146          AND.B       #$0F, D2             ; set first nibble to 0
0000111E                           147   
0000111E  B43C 0000                148          CMP.B       #zero, D2           ; compare second nibble to 0
00001122  6700 0F7E                149          BEQ         opBRA               ; branch to BRA method
00001126  B43C 0005                150          CMP.B       #five, D2           ; compare second nibble to 5
0000112A  6700 0FAE                151          BEQ         opBCS               ; branch to BCS method
0000112E  B43C 0008                152          CMP.B       #eight, D2          ; compare second nibble to 8
00001132  6700 0FDE                153          BEQ         opBVC               ; branch to BCS method
00001136  B43C 000C                154          CMP.B       #twelve, D2         ; compare second nibble to 12
0000113A  6700 100E                155          BEQ         opBGE               ; branch to BGE method
0000113E  6000 1042                156          BRA         opBLT               ; otherwise, branch to BLT method
00001142                           157  
00001142                           158  braEight                                ; there are two opCodes available DIVS, or OR
00001142  4242                     159              CLR     D2
00001144  E141                     160              ASL     #8,D1
00001146  1218                     161              MOVE.B  (A0)+,D1
00001148  3401                     162              MOVE.W  D1,D2
0000114A  EC42                     163              ASR     #six,D2
0000114C  C47C 0007                164              AND     #$07,D2
00001150  B43C 0007                165              CMP.B   #seven,D2
00001154  6700 0B08                166              BEQ     opDIVS              ; If bits 8 - 6 are equal to 7, we have DIVS
00001158  6000 09B2                167              BRA     opOR                ; else opcode is OR
0000115C                           168  
0000115C  6000 0DEC                169  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
00001160                           170  
00001160                           171  braEleven                               ; there are two opCodes available EOR, or CMP
00001160  4242                     172              CLR     D2
00001162  E141                     173              ASL     #8,D1
00001164  1218                     174              MOVE.B  (A0)+,D1
00001166  3401                     175              MOVE.W  D1,D2
00001168  EC42                     176              ASR     #six,D2
0000116A  C47C 0007                177              AND     #$07,D2
0000116E  B43C 0003                178              CMP.B   #three,D2
00001172  6D00 0C96                179              BLT     opCMP               ; If opmode bits are less than 3, we have CMP
00001176  6000 0B44                180              BRA     opEOR               ; Else its EOR
0000117A                           181  
0000117A  6000 10B6                182  braTwelve   BRA         opMULS              ; we know that there is only one opcode that is MULS    
0000117E                           183    
0000117E  E141                     184  braThirteen ASL         #eight, D1          ; we need the whole word to compare between add and adda, so move over the current byte 
00001180  1218                     185              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
00001182                           186              
00001182  4242                     187              CLR         D2                  ; clear D2
00001184  3401                     188              MOVE.W      D1, D2              ; copy opcode to D2
00001186  EC42                     189              ASR         #six, D2            ; shift the bits right to get size and type
00001188  C47C 0007                190              AND         #seven,D2           ; clear out all but first 3 bits
0000118C                           191              
0000118C  B43C 0000                192              CMP.B       #zero,D2            ; compare 0 to D2
00001190  6700 1104                193              BEQ         opADDB              ; we know its ADDB
00001194  B43C 0001                194              CMP.B       #one, D2            ; compare 1 to D2
00001198  6700 1168                195              BEQ         opADDW              ; we know its ADDW
0000119C  B43C 0002                196              CMP.B       #two, D2            ; compare 2 to D2
000011A0  6700 11CC                197              BEQ         opADDL              ; we know its ADDL
000011A4  B43C 0003                198              CMP.B       #three, D2          ; compare 3 to D2
000011A8  6700 1238                199              BEQ         opADDAW             ; we know its ADDAW
000011AC  B43C 0004                200              CMP.B       #four, D2           ; compare 4 to D2
000011B0  6700 10E4                201              BEQ         opADDB              ; we know its ADDB
000011B4  B43C 0005                202              CMP.B       #five, D2           ; compare 5 to D2
000011B8  6700 1148                203              BEQ         opADDW              ; we know its ADDW
000011BC  B43C 0006                204              CMP.B       #six, D2            ; compare 6 to D2
000011C0  6700 11AC                205              BEQ         opADDL              ; we know its ADDL
000011C4  B43C 0007                206              CMP.B       #seven, D2          ; compare 7 to D2
000011C8  6700 1288                207              BEQ         opADDAL             ; we know its ADDAL
000011CC  6000 2A98                208              BRA         printInvalid        ; invalid opcode
000011D0                           209               
000011D0  E141                     210  braFourteen ASL.W       #eight,D1           ; we need the whole word to compare between add and adda, so move over the current byte
000011D2  1218                     211              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
000011D4                           212              
000011D4  4242                     213              CLR         D2                  ; clear D2
000011D6  3401                     214              MOVE.W      D1, D2              ; copy opcode to D2
000011D8  EC42                     215              ASR         #six, D2            ; shift the bits right to get size
000011DA  C47C 0003                216              AND         #03,D2
000011DE                           217          
000011DE  B43C 0003                218              CMP.B       #three, D2          ; if the size is three, we are shifting memory
000011E2  6700 0006                219              BEQ         memShifts           ; go to memory shift
000011E6  6000 0040                220              BRA         regShifts           ; else go to register shift
000011EA                           221  
000011EA  4242                     222  memShifts   CLR         D2             
000011EC  3401                     223              MOVE.W      D1, D2              ; clear out D2 and copy D1 back in
000011EE  E082                     224              ASR.L       #eight,D2           ; move to get first byte back
000011F0  C47C 000F                225              AND         #secNib, D2         ; set first nibble to 0
000011F4                           226   
000011F4  B43C 0000                227              CMP.B       #zero, D2           ; compare second nibble to 0
000011F8  6700 1314                228              BEQ         opASR               ; branch to ASR method
000011FC  B43C 0001                229              CMP.B       #one, D2            ; compare second nibble to 1
00001200  6700 12C0                230              BEQ         opASL               ; branch to ASL method
00001204  B43C 0002                231              CMP.B       #two, D2            ; compare second nibble to 2
00001208  6700 139C                232              BEQ         opLSR               ; branch to LSR method
0000120C  B43C 0003                233              CMP.B       #three, D2          ; compare second nibble to 3
00001210  6700 1348                234              BEQ         opLSL               ; branch to LSL method
00001214  B43C 0006                235              CMP.B       #six, D2            ; compare second nibble to 6
00001218  6700 1424                236              BEQ         opROR               ; branch to ROR method
0000121C  B43C 0007                237              CMP.B       #seven, D2          ; compare second nibble to 7
00001220  6700 13D0                238              BEQ         opROL               ; branch to ROL method
00001224  6000 2A40                239              BRA         printInvalid        ; otherwise, invalid
00001228                           240              
00001228  B43C 0000                241  regShifts   CMP.B       #zero, D2           ; if size is 0, we are shifting a byte
0000122C  6700 145C                242              BEQ         memSB               ; branch to register shift byte
00001230  B43C 0001                243              CMP.B       #one, D2            ; if size is 1, we are shifting a word
00001234  6700 16DE                244              BEQ         memSW               ; branch to register shift word
00001238  B43C 0002                245              CMP.B       #two, D2            ; if size is 1, we are shifting a long
0000123C  6700 1960                246              BEQ         memSL               ; branch to register shift long
00001240  6000 2A24                247              BRA         printInvalid        ; otherwise, invalid
00001244                           248  
00001244  43F9 00003CE0            249  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
0000124A  103C 000E                250          MOVE.B      #14, D0             ; command for trap call to display message
0000124E  4E4F                     251          TRAP        #15                 ; trap call
00001250                           252          
00001250  1218                     253          MOVE.B      (A0)+, D1
00001252  1401                     254          MOVE.B      D1,D2               ; copy data over
00001254  EC42                     255          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001256  B43C 0000                256          CMP.B       #zero,D2
0000125A  6700 0016                257          BEQ         opORIB
0000125E  B43C 0001                258          CMP.B       #one,D2
00001262  6700 0074                259          BEQ         opORIW
00001266  B43C 0002                260          CMP.B       #two,D2
0000126A  6700 00D2                261          BEQ         opORIL
0000126E                           262          
0000126E  6000 29F6                263          BRA         printInvalid
00001272                           264          
00001272  43F9 00003D69            265  opORIB  LEA         dispByte, A1        ; Display byte
00001278  103C 000E                266          MOVE.B      #14, D0             ; command for trap call to display message
0000127C  4E4F                     267          TRAP        #15                 ; trap call
0000127E                           268          
0000127E  43F9 00003CCF            269          LEA         space, A1           ; Display space
00001284  103C 000E                270          MOVE.B      #14, D0             ; command for trap call to display message
00001288  4E4F                     271          TRAP        #15                 ; trap call
0000128A                           272          
0000128A  4244                     273          CLR         D4
0000128C  1801                     274          MOVE.B      D1,D4
0000128E  E644                     275          ASR         #three,D4
00001290  C87C 0007                276          AND         #seven,D4
00001294  4245                     277          CLR         D5        
00001296  1A01                     278          MOVE.B      D1,D5
00001298  CA7C 0007                279          AND         #seven,D5
0000129C                           280          
0000129C  4243                     281          CLR         D3
0000129E  4242                     282          CLR         D2
000012A0  163C 0004                283          MOVE.B      #four,D3
000012A4  143C 0007                284          MOVE.B      #seven,D2
000012A8                           285  
000012A8  4EB9 00002F00            286          JSR         printEA
000012AE                           287          
000012AE  43F9 00003CD6            288          LEA         comma, A1           ; Display space
000012B4  103C 000E                289          MOVE.B      #14, D0             ; command for trap call to display message
000012B8  4E4F                     290          TRAP        #15                 ; trap call
000012BA                           291          
000012BA  4242                     292          CLR         D2
000012BC  4243                     293          CLR         D3
000012BE  1404                     294          MOVE.B      D4,D2
000012C0  1605                     295          MOVE.B      D5,D3
000012C2                           296          
000012C2  4EB9 00002F00            297          JSR         printEA
000012C8                           298          
000012C8  43F9 00003CCB            299          LEA         newLine, A1           ; Display space
000012CE  103C 000E                300          MOVE.B      #14, D0             ; command for trap call to display message
000012D2  4E4F                     301          TRAP        #15                 ; trap call
000012D4                           302          
000012D4  6000 FD6A                303          BRA         LOOP
000012D8                           304          
000012D8                           305          
000012D8  43F9 00003D6C            306  opORIW  LEA         dispWord, A1        ; Display byte
000012DE  103C 000E                307          MOVE.B      #14, D0             ; command for trap call to display message
000012E2  4E4F                     308          TRAP        #15                 ; trap call
000012E4                           309          
000012E4  43F9 00003CCF            310          LEA         space, A1           ; Display space
000012EA  103C 000E                311          MOVE.B      #14, D0             ; command for trap call to display message
000012EE  4E4F                     312          TRAP        #15                 ; trap call
000012F0                           313          
000012F0  4244                     314          CLR         D4
000012F2  1801                     315          MOVE.B      D1,D4
000012F4  E644                     316          ASR         #three,D4
000012F6  C87C 0007                317          AND         #seven,D4
000012FA  4245                     318          CLR         D5        
000012FC  1A01                     319          MOVE.B      D1,D5
000012FE  CA7C 0007                320          AND         #seven,D5
00001302                           321          
00001302  4243                     322          CLR         D3
00001304  4242                     323          CLR         D2
00001306  163C 0004                324          MOVE.B      #four,D3
0000130A  143C 0007                325          MOVE.B      #seven,D2
0000130E                           326          
0000130E  4EB9 00002F00            327          JSR         printEA
00001314                           328          
00001314  43F9 00003CD6            329          LEA         comma, A1           ; Display space
0000131A  103C 000E                330          MOVE.B      #14, D0             ; command for trap call to display message
0000131E  4E4F                     331          TRAP        #15                 ; trap call
00001320                           332          
00001320  4242                     333          CLR         D2
00001322  4243                     334          CLR         D3
00001324  1404                     335          MOVE.B      D4,D2
00001326  1605                     336          MOVE.B      D5,D3
00001328                           337                  
00001328  4EB9 00002F00            338          JSR         printEA
0000132E                           339          
0000132E  43F9 00003CCB            340          LEA         newLine, A1           ; Display space
00001334  103C 000E                341          MOVE.B      #14, D0             ; command for trap call to display message
00001338  4E4F                     342          TRAP        #15                 ; trap call
0000133A                           343          
0000133A  6000 FD04                344          BRA         LOOP
0000133E                           345       
0000133E  43F9 00003D6F            346  opORIL  LEA         dispLong, A1        ; Display byte
00001344  103C 000E                347          MOVE.B      #14, D0             ; command for trap call to display message
00001348  4E4F                     348          TRAP        #15                 ; trap call
0000134A                           349          
0000134A  43F9 00003CCF            350          LEA         space, A1           ; Display space
00001350  103C 000E                351          MOVE.B      #14, D0             ; command for trap call to display message
00001354  4E4F                     352          TRAP        #15                 ; trap call
00001356                           353          
00001356  4244                     354          CLR         D4
00001358  1801                     355          MOVE.B      D1,D4
0000135A  E644                     356          ASR         #three,D4
0000135C  C87C 0007                357          AND         #seven,D4
00001360  4245                     358          CLR         D5        
00001362  1A01                     359          MOVE.B      D1,D5
00001364  CA7C 0007                360          AND         #seven,D5
00001368  1C3C 0001                361          MOVE.B      #one,D6
0000136C                           362          
0000136C  4243                     363          CLR         D3
0000136E  4242                     364          CLR         D2
00001370  163C 0004                365          MOVE.B      #four,D3
00001374  143C 0007                366          MOVE.B      #seven,D2      
00001378                           367          
00001378  4EB9 00002F00            368          JSR         printEA        
0000137E                           369          
0000137E  4243                     370          CLR         D3
00001380  4242                     371          CLR         D2
00001382  163C 0004                372          MOVE.B      #four,D3
00001386  143C 0007                373          MOVE.B      #seven,D2
0000138A                           374          
0000138A  43F9 00003CD6            375          LEA         comma, A1           ; Display space
00001390  103C 000E                376          MOVE.B      #14, D0             ; command for trap call to display message
00001394  4E4F                     377          TRAP        #15                 ; trap call
00001396                           378          
00001396  4EB9 00002F00            379          JSR         printEA
0000139C                           380          
0000139C  43F9 00003CCB            381          LEA         newLine, A1           ; Display space
000013A2  103C 000E                382          MOVE.B      #14, D0             ; command for trap call to display message
000013A6  4E4F                     383          TRAP        #15                 ; trap call
000013A8                           384          
000013A8  6000 FC96                385          BRA         LOOP
000013AC                           386           
000013AC                           387  opCMPI  
000013AC                           388  
000013AC                           389                  
000013AC  1218                     390          MOVE.B      (A0)+, D1
000013AE  1401                     391          MOVE.B      D1,D2               ; copy data over
000013B0  EC42                     392          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000013B2  B43C 0000                393          CMP.B       #zero,D2
000013B6  6700 0016                394          BEQ         opCMPIB
000013BA  B43C 0001                395          CMP.B       #one,D2
000013BE  6700 0080                396          BEQ         opCMPIW
000013C2  B43C 0002                397          CMP.B       #two,D2
000013C6  6700 00FC                398          BEQ         opCMPIL
000013CA  6000 21AC                399          BRA         invalid
000013CE                           400  
000013CE                           401  opCMPIB 
000013CE                           402  
000013CE  43F9 00003CE4            403          LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000013D4  103C 000E                404          MOVE.B      #14, D0             ; command for trap call to display message
000013D8  4E4F                     405          TRAP        #15                 ; trap call
000013DA                           406          
000013DA  43F9 00003D69            407          LEA         dispByte, A1        ; Display byte
000013E0  103C 000E                408          MOVE.B      #14, D0             ; command for trap call to display message
000013E4  4E4F                     409          TRAP        #15                 ; trap call
000013E6                           410          
000013E6  43F9 00003CCF            411          LEA         space, A1           ; Display space
000013EC  103C 000E                412          MOVE.B      #14, D0             ; command for trap call to display message
000013F0  4E4F                     413          TRAP        #15                 ; trap call
000013F2                           414          
000013F2  4244                     415          CLR         D4
000013F4  1801                     416          MOVE.B      D1,D4
000013F6  E644                     417          ASR         #three,D4
000013F8  C87C 0007                418          AND         #seven,D4
000013FC  4245                     419          CLR         D5        
000013FE  1A01                     420          MOVE.B      D1,D5
00001400  CA7C 0007                421          AND         #seven,D5
00001404                           422          
00001404  4243                     423          CLR         D3
00001406  4242                     424          CLR         D2
00001408  163C 0004                425          MOVE.B      #four,D3
0000140C  143C 0007                426          MOVE.B      #seven,D2      
00001410                           427          
00001410  4EB9 00002F00            428          JSR         printEA  
00001416                           429              
00001416  43F9 00003CD6            430          LEA         comma, A1           ; Display space
0000141C  103C 000E                431          MOVE.B      #14, D0             ; command for trap call to display message
00001420  4E4F                     432          TRAP        #15                 ; trap call
00001422                           433          
00001422  4242                     434          CLR         D2
00001424  4243                     435          CLR         D3
00001426  1404                     436          MOVE.B      D4,D2
00001428  1605                     437          MOVE.B      D5,D3        
0000142A                           438          
0000142A  4EB9 00002F00            439          JSR         printEA
00001430                           440          
00001430  43F9 00003CCB            441          LEA         newLine, A1           ; Display space
00001436  103C 000E                442          MOVE.B      #14, D0             ; command for trap call to display message
0000143A  4E4F                     443          TRAP        #15                 ; trap call
0000143C                           444  
0000143C  6000 FC02                445          BRA         LOOP
00001440                           446  
00001440                           447  opCMPIW 
00001440  43F9 00003CE4            448          LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001446  103C 000E                449          MOVE.B      #14, D0             ; command for trap call to display message
0000144A  4E4F                     450          TRAP        #15                 ; trap call
0000144C                           451          
0000144C  43F9 00003D6C            452          LEA         dispWord, A1        ; Display byte
00001452  103C 000E                453          MOVE.B      #14, D0             ; command for trap call to display message
00001456  4E4F                     454          TRAP        #15                 ; trap call
00001458                           455          
00001458  43F9 00003CCF            456          LEA         space, A1           ; Display space
0000145E  103C 000E                457          MOVE.B      #14, D0             ; command for trap call to display message
00001462  4E4F                     458          TRAP        #15                 ; trap call
00001464                           459          
00001464  4244                     460          CLR         D4
00001466  1801                     461          MOVE.B      D1,D4
00001468  E644                     462          ASR         #three,D4
0000146A  C87C 0007                463          AND         #seven,D4
0000146E  4245                     464          CLR         D5        
00001470  1A01                     465          MOVE.B      D1,D5
00001472  CA7C 0007                466          AND         #seven,D5
00001476                           467          
00001476  4243                     468          CLR         D3
00001478  4242                     469          CLR         D2
0000147A  163C 0004                470          MOVE.B      #four,D3
0000147E  143C 0007                471          MOVE.B      #seven,D2      
00001482                           472          
00001482  4EB9 00002F00            473          JSR         printEA  
00001488                           474          
00001488  43F9 00003CD2            475          LEA         hashTag, A1           ; Display space
0000148E  103C 000E                476          MOVE.B      #14, D0             ; command for trap call to display message
00001492  4E4F                     477          TRAP        #15                 ; trap call
00001494                           478          
00001494  103C 0003                479          MOVE.B      #3, D0
00001498  4E4F                     480          TRAP        #15
0000149A                           481          
0000149A  43F9 00003CD6            482          LEA         comma, A1           ; Display space
000014A0  103C 000E                483          MOVE.B      #14, D0             ; command for trap call to display message
000014A4  4E4F                     484          TRAP        #15                 ; trap call
000014A6                           485  
000014A6  4242                     486          CLR         D2
000014A8  4243                     487          CLR         D3
000014AA  1404                     488          MOVE.B      D4,D2
000014AC  1605                     489          MOVE.B      D5,D3       
000014AE                           490          
000014AE  4EB9 00002F00            491          JSR         printEA
000014B4                           492          
000014B4  43F9 00003CCB            493          LEA         newLine, A1           ; Display space
000014BA  103C 000E                494          MOVE.B      #14, D0             ; command for trap call to display message
000014BE  4E4F                     495          TRAP        #15                 ; trap call
000014C0  6000 FB7E                496          BRA         LOOP
000014C4                           497  
000014C4                           498  opCMPIL 
000014C4  43F9 00003CE4            499          LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000014CA  103C 000E                500          MOVE.B      #14, D0             ; command for trap call to display message
000014CE  4E4F                     501          TRAP        #15                 ; trap call
000014D0                           502          
000014D0  43F9 00003D6F            503          LEA         dispLong, A1        ; Display byte
000014D6  103C 000E                504          MOVE.B      #14, D0             ; command for trap call to display message
000014DA  4E4F                     505          TRAP        #15                 ; trap call
000014DC                           506          
000014DC  43F9 00003CCF            507          LEA         space, A1           ; Display space
000014E2  103C 000E                508          MOVE.B      #14, D0             ; command for trap call to display message
000014E6  4E4F                     509          TRAP        #15                 ; trap call
000014E8                           510          
000014E8  4244                     511          CLR         D4
000014EA  1801                     512          MOVE.B      D1,D4
000014EC  E644                     513          ASR         #three,D4
000014EE  C87C 0007                514          AND         #seven,D4
000014F2  4245                     515          CLR         D5        
000014F4  1A01                     516          MOVE.B      D1,D5
000014F6  CA7C 0007                517          AND         #seven,D5
000014FA                           518          
000014FA  4243                     519          CLR         D3
000014FC  4242                     520          CLR         D2
000014FE  163C 0004                521          MOVE.B      #four,D3
00001502  143C 0007                522          MOVE.B      #seven,D2      
00001506  1C3C 0001                523          MOVE.B      #one,D6
0000150A                           524          
0000150A  4EB9 00002F00            525          JSR         printEA  
00001510                           526          
00001510  43F9 00003CD6            527          LEA         comma, A1           ; Display space
00001516  103C 000E                528          MOVE.B      #14, D0             ; command for trap call to display message
0000151A  4E4F                     529          TRAP        #15                 ; trap call
0000151C                           530          
0000151C  4242                     531          CLR         D2
0000151E  4243                     532          CLR         D3
00001520  1404                     533          MOVE.B      D4,D2
00001522  1605                     534          MOVE.B      D5,D3              
00001524                           535          
00001524  4EB9 00002F00            536          JSR         printEA
0000152A                           537          
0000152A  43F9 00003CCB            538          LEA         newLine, A1           ; Display space
00001530  103C 000E                539          MOVE.B      #14, D0             ; command for trap call to display message
00001534  4E4F                     540          TRAP        #15                 ; trap call
00001536                           541          
00001536  6000 FB08                542          BRA         LOOP
0000153A                           543  
0000153A  43F9 00003CE9            544  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001540  103C 000E                545                  MOVE.B      #14, D0             ; command for trap call to display message
00001544  4E4F                     546                  TRAP        #15                 ; trap call
00001546                           547  
00001546  43F9 00003CCF            548                  LEA         space, A1           ; Display space
0000154C  103C 000E                549                  MOVE.B      #14, D0             ; command for trap call to display message
00001550  4E4F                     550                  TRAP        #15                 ; trap call
00001552                           551                  
00001552  4242                     552                  CLR         D2
00001554  1218                     553                  MOVE.B      (A0)+, D1
00001556  1401                     554                  MOVE.B      D1,D2               ; copy data over
00001558  E642                     555                  ASR         #three,D2           ; Shift to the right to remove register
0000155A  C47C 0007                556                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
0000155E                           557                  
0000155E  4243                     558                  CLR         D3                  ; Clear D3 so we can move D1 in
00001560  1601                     559                  MOVE.B      D1,D3               ; Move othr byte in
00001562  C67C 0007                560                  AND         #seven,D3           ; Set everything besides register to 0
00001566                           561                  
00001566  4241                     562                  CLR         D1
00001568  3218                     563                  MOVE.W      (A0)+, D1
0000156A                           564                 
0000156A                           565                  
0000156A  43F9 00003CD2            566                  LEA         hashTag, A1           ; Display space
00001570  103C 000E                567                  MOVE.B      #14, D0             ; command for trap call to display message
00001574  4E4F                     568                  TRAP        #15                 ; trap call
00001576                           569          
00001576  103C 0003                570                  MOVE.B      #3, D0
0000157A  4E4F                     571                  TRAP        #15
0000157C                           572          
0000157C  43F9 00003CD6            573                  LEA         comma, A1           ; Display space
00001582  103C 000E                574                  MOVE.B      #14, D0             ; command for trap call to display message
00001586  4E4F                     575                  TRAP        #15                 ; trap call
00001588                           576                  
00001588  4EB9 00002F00            577                  JSR         printEA
0000158E                           578          
0000158E  43F9 00003CCB            579                  LEA         newLine, A1           ; Display space
00001594  103C 000E                580                  MOVE.B      #14, D0             ; command for trap call to display message
00001598  4E4F                     581                  TRAP        #15                 ; trap call
0000159A                           582                  
0000159A                           583                  
0000159A  6000 FAA4                584                  BRA         LOOP                
0000159E                           585          
0000159E                           586  opDynBCLR       
0000159E  4241                     587                  CLR         D1
000015A0  1218                     588                  MOVE.B      (A0)+,D1            ; Copy second byte in
000015A2  1601                     589                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
000015A4  E243                     590                  ASR         #one,D3             ; Shift register over to the end
000015A6  C67C 0007                591                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
000015AA                           592                  
000015AA  1401                     593                  MOVE.B      D1,D2
000015AC  EC42                     594                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
000015AE  B47C 0002                595                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
000015B2  6600 26B2                596                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
000015B6                           597  
000015B6                           598                  
000015B6  43F9 00003CE9            599                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
000015BC  103C 000E                600                  MOVE.B      #14, D0             ; command for trap call to display message
000015C0  4E4F                     601                  TRAP        #15                 ; trap call  
000015C2                           602                  
000015C2  43F9 00003CCF            603                  LEA         space, A1           ; Display space
000015C8  103C 000E                604                  MOVE.B      #14, D0             ; command for trap call to display message
000015CC  4E4F                     605                  TRAP        #15                 ; trap call
000015CE                           606                  
000015CE  143C 0000                607                  MOVE.B      #zero,D2                
000015D2  4EB9 00002F00            608                  JSR         printEA
000015D8                           609                  
000015D8  43F9 00003CD6            610                  LEA         comma, A1           ; Display space
000015DE  103C 000E                611                  MOVE.B      #14, D0             ; command for trap call to display message
000015E2  4E4F                     612                  TRAP        #15                 ; trap call
000015E4                           613                  
000015E4  4242                     614                  CLR         D2
000015E6  1401                     615                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000015E8  E642                     616                  ASR         #three,D2           ; Remove/shift the register out
000015EA  C47C 0007                617                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000015EE                           618                  
000015EE  4243                     619                  CLR         D3                  ; Clearing D3 to avoid mashing data
000015F0  1601                     620                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000015F2  C67C 0007                621                  AND         #seven,D3           ; Change all bits except for register bits to 0
000015F6                           622                  
000015F6                           623  
000015F6  4EB9 00002F00            624                  JSR         printEA
000015FC                           625          
000015FC  43F9 00003CCB            626                  LEA         newLine, A1           ; Display space
00001602  103C 000E                627                  MOVE.B      #14, D0             ; command for trap call to display message
00001606  4E4F                     628                  TRAP        #15                 ; trap call            
00001608                           629  
00001608                           630  
00001608  6000 FA36                631                  BRA         LOOP                ; go back to the loop
0000160C                           632   
0000160C                           633  opMOVEB 
0000160C  43F9 00003CEE            634          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
00001612  103C 000E                635          MOVE.B      #14, D0             ; command for trap call to display message
00001616  4E4F                     636          TRAP        #15                 ; trap call
00001618  43F9 00003D69            637          LEA         dispByte, A1        ; display byte
0000161E  103C 000E                638          MOVE.B      #14, D0             ; command for trap call to display message
00001622  4E4F                     639          TRAP        #15                 ; trap call
00001624  43F9 00003CCF            640          LEA         space, A1           ; create spaces
0000162A  103C 000E                641          MOVE.B      #14, D0             ; command for trap call to display message
0000162E  4E4F                     642          TRAP        #15                 ; trap call
00001630                           643          
00001630                           644          
00001630  4245                     645          CLR         D5                  ; Clear D5
00001632  1A01                     646          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001634  E245                     647          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001636  CA7C 0007                648          AND         #seven,D5
0000163A                           649          
0000163A  4244                     650          CLR         D4                  ; Clear out D4
0000163C  1801                     651          MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000163E  C87C 0001                652          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001642                           653          
00001642  4241                     654          CLR          D1
00001644  4242                     655          CLR          D2
00001646  1218                     656          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001648  1401                     657          MOVE.B      D1,D2
0000164A  EC42                     658          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000164C  D842                     659          ADD         D2,D4               ; Adds the remaining bits to D4
0000164E                           660          
0000164E  4242                     661          CLR         D2
00001650  1401                     662          MOVE.B      D1,D2               ; Copy new byte over to D2
00001652  E642                     663          ASR         #three,D2           ; Shift source register out
00001654  C47C 0007                664          AND         #seven,D2           ; Set everything to 0 except for the mode
00001658                           665          
00001658  4243                     666          CLR         D3
0000165A  1601                     667          MOVE.B      D1,D3
0000165C  C67C 0007                668          AND         #seven,D3
00001660                           669          
00001660  4EB9 00002F00            670          JSR         printEA
00001666                           671          
00001666  43F9 00003CD6            672          LEA         comma, A1           ; Display space
0000166C  103C 000E                673          MOVE.B      #14, D0             ; command for trap call to display message
00001670  4E4F                     674          TRAP        #15                 ; trap call
00001672                           675          
00001672  4242                     676          CLR         D2
00001674  4243                     677          CLR         D3
00001676  1404                     678          MOVE.B      D4,D2
00001678  1605                     679          MOVE.B      D5,D3
0000167A                           680          
0000167A  4EB9 00002F00            681          JSR         printEA
00001680                           682          
00001680                           683          
00001680  43F9 00003CCB            684          LEA         newLine, A1           ; Display space
00001686  103C 000E                685          MOVE.B      #14, D0             ; command for trap call to display message
0000168A  4E4F                     686          TRAP        #15                 ; trap call            
0000168C                           687  
0000168C                           688  
0000168C  6000 F9B2                689          BRA         LOOP                ; go back to the loop
00001690                           690          
00001690                           691  opMOVEL     
00001690                           692          
00001690  4245                     693              CLR         D5                  ; Clear D5
00001692  1A01                     694              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001694  E245                     695              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001696  CA7C 0007                696              AND         #seven,D5
0000169A                           697          
0000169A  4244                     698              CLR         D4                  ; Clear out D4
0000169C  1801                     699              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000169E  C87C 0001                700              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
000016A2                           701          
000016A2  4241                     702              CLR          D1
000016A4  4242                     703              CLR          D2
000016A6  1218                     704              MOVE.B      (A0)+,D1            ; Copy byte into D1
000016A8  1401                     705              MOVE.B      D1,D2
000016AA  EC42                     706              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000016AC  D842                     707              ADD         D2,D4               ; Adds the remaining bits to D4
000016AE                           708          
000016AE  B87C 0001                709              CMP         #one,D4             ; Check if it is MOVEA
000016B2  6700 0070                710              BEQ         opMOVEAL            ; If it is, branch off
000016B6                           711              
000016B6  43F9 00003CEE            712              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000016BC  103C 000E                713              MOVE.B      #14, D0             ; command for trap call to display message
000016C0  4E4F                     714              TRAP        #15                 ; trap call  
000016C2                           715              
000016C2                           716              
000016C2  43F9 00003D6F            717              LEA         dispLong,A1
000016C8  103C 000E                718              MOVE.B      #14, D0             ; command for trap call to display message
000016CC  4E4F                     719              TRAP        #15                 ; trap call
000016CE                           720              
000016CE  43F9 00003CCF            721              LEA         space, A1           ; create spaces
000016D4  103C 000E                722              MOVE.B      #14, D0             ; command for trap call to display message
000016D8  4E4F                     723              TRAP        #15                 ; trap call
000016DA                           724          
000016DA  4242                     725              CLR         D2
000016DC  1401                     726              MOVE.B      D1,D2               ; Copy new byte over to D2
000016DE  E642                     727              ASR         #three,D2           ; Shift source register out
000016E0  C47C 0007                728              AND         #seven,D2           ; Set everything to 0 except for the mode
000016E4                           729          
000016E4  4243                     730              CLR         D3
000016E6  1601                     731              MOVE.B      D1,D3
000016E8  C67C 0007                732              AND         #seven,D3
000016EC                           733              
000016EC  4246                     734              CLR         D6
000016EE  1C3C 0001                735              MOVE.B      #1,D6
000016F2  4EB9 00002F00            736              JSR         printEA
000016F8  4246                     737              CLR         D6
000016FA                           738              
000016FA  43F9 00003CD6            739              LEA         comma, A1           ; Display comma
00001700  103C 000E                740              MOVE.B      #14, D0             ; command for trap call to display message
00001704  4E4F                     741              TRAP        #15                 ; trap call
00001706                           742          
00001706  4242                     743              CLR         D2
00001708  4243                     744              CLR         D3
0000170A  1404                     745              MOVE.B      D4,D2
0000170C  1605                     746              MOVE.B      D5,D3
0000170E                           747              
0000170E                           748  
0000170E                           749              
0000170E  4EB9 00002F00            750              JSR         printEA
00001714                           751          
00001714                           752          
00001714  43F9 00003CCB            753              LEA         newLine, A1           ; Display space
0000171A  103C 000E                754              MOVE.B      #14, D0             ; command for trap call to display message
0000171E  4E4F                     755              TRAP        #15                 ; trap call            
00001720                           756  
00001720                           757  
00001720  6000 F91E                758              BRA         LOOP                ; go back to the loop
00001724                           759              
00001724                           760  opMOVEAL
00001724                           761  
00001724  43F9 00003CF3            762              LEA         MOVEAmatch,A1
0000172A  103C 000E                763              MOVE.B      #14, D0             ; command for trap call to display message
0000172E  4E4F                     764              TRAP        #15                 ; trap call
00001730                           765              
00001730  43F9 00003D6F            766              LEA         dispLong,A1
00001736  103C 000E                767              MOVE.B      #14, D0             ; command for trap call to display message
0000173A  4E4F                     768              TRAP        #15                 ; trap call
0000173C                           769              
0000173C                           770  
0000173C  43F9 00003CCF            771              LEA         space, A1           ; create spaces
00001742  103C 000E                772              MOVE.B      #14, D0             ; command for trap call to display message
00001746  4E4F                     773              TRAP        #15                 ; trap call
00001748                           774              
00001748  4242                     775              CLR         D2
0000174A  1401                     776              MOVE.B      D1,D2               ; Copy new byte over to D2
0000174C  E642                     777              ASR         #three,D2           ; Shift source register out
0000174E  C47C 0007                778              AND         #seven,D2           ; Set everything to 0 except for the mode
00001752                           779          
00001752  4243                     780              CLR         D3
00001754  1601                     781              MOVE.B      D1,D3
00001756  C67C 0007                782              AND         #seven,D3
0000175A                           783              
0000175A  4241                     784              CLR         D1                  ; Clear D1
0000175C                           785              
0000175C                           786              
0000175C  4EB9 00002F00            787              JSR         printEA
00001762                           788              
00001762  43F9 00003CD6            789              LEA         comma, A1           ; Display comma
00001768  103C 000E                790              MOVE.B      #14, D0             ; command for trap call to display message
0000176C  4E4F                     791              TRAP        #15                 ; trap call
0000176E                           792  
0000176E  4242                     793              CLR         D2
00001770  4243                     794              CLR         D3
00001772  1404                     795              MOVE.B      D4,D2
00001774  1605                     796              MOVE.B      D5,D3
00001776                           797          
00001776  4EB9 00002F00            798              JSR         printEA
0000177C                           799          
0000177C                           800          
0000177C  43F9 00003CCB            801              LEA         newLine, A1           ; Display space
00001782  103C 000E                802              MOVE.B      #14, D0             ; command for trap call to display message
00001786  4E4F                     803              TRAP        #15                 ; trap call            
00001788                           804  
00001788                           805  
00001788  6000 F8B6                806              BRA         LOOP                ; go back to the loop
0000178C                           807  
0000178C                           808  opMOVEW
0000178C                           809          
0000178C  4245                     810              CLR         D5                  ; Clear D5
0000178E  1A01                     811              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001790  E245                     812              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001792  CA7C 0007                813              AND         #seven,D5
00001796                           814          
00001796  4244                     815              CLR         D4                  ; Clear out D4
00001798  1801                     816              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000179A  C87C 0001                817              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000179E                           818          
0000179E  4241                     819              CLR          D1
000017A0  4242                     820              CLR          D2
000017A2  1218                     821              MOVE.B      (A0)+,D1            ; Copy byte into D1
000017A4  1401                     822              MOVE.B      D1,D2
000017A6  EC42                     823              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000017A8  D842                     824              ADD         D2,D4               ; Adds the remaining bits to D4
000017AA                           825          
000017AA  B87C 0001                826              CMP         #one,D4             ; Check if it is MOVEA
000017AE  6700 006A                827              BEQ         opMOVEAW            ; If it is, branch off
000017B2                           828              
000017B2  43F9 00003CEE            829              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000017B8  103C 000E                830              MOVE.B      #14, D0             ; command for trap call to display message
000017BC  4E4F                     831              TRAP        #15                 ; trap call  
000017BE                           832              
000017BE  43F9 00003D6C            833              LEA         dispWord,A1
000017C4  103C 000E                834              MOVE.B      #14, D0             ; command for trap call to display message
000017C8  4E4F                     835              TRAP        #15                 ; trap call
000017CA                           836              
000017CA  43F9 00003CCF            837              LEA         space, A1           ; create spaces
000017D0  103C 000E                838              MOVE.B      #14, D0             ; command for trap call to display message
000017D4  4E4F                     839              TRAP        #15                 ; trap call
000017D6                           840          
000017D6  4242                     841              CLR         D2
000017D8  1401                     842              MOVE.B      D1,D2               ; Copy new byte over to D2
000017DA  E642                     843              ASR         #three,D2           ; Shift source register out
000017DC  C47C 0007                844              AND         #seven,D2           ; Set everything to 0 except for the mode
000017E0                           845          
000017E0  4243                     846              CLR         D3
000017E2  1601                     847              MOVE.B      D1,D3
000017E4  C67C 0007                848              AND         #seven,D3
000017E8                           849              
000017E8  4241                     850              CLR         D1                  ; Clear D1
000017EA                           851              
000017EA  4EB9 00002F00            852              JSR         printEA
000017F0                           853              
000017F0  43F9 00003CD6            854              LEA         comma, A1           ; Display comma
000017F6  103C 000E                855              MOVE.B      #14, D0             ; command for trap call to display message
000017FA  4E4F                     856              TRAP        #15                 ; trap call
000017FC                           857          
000017FC  4242                     858              CLR         D2
000017FE  4243                     859              CLR         D3
00001800  1404                     860              MOVE.B      D4,D2
00001802  1605                     861              MOVE.B      D5,D3
00001804                           862              
00001804                           863  
00001804                           864              
00001804  4EB9 00002F00            865              JSR         printEA
0000180A                           866          
0000180A                           867          
0000180A  43F9 00003CCB            868              LEA         newLine, A1           ; Display space
00001810  103C 000E                869              MOVE.B      #14, D0             ; command for trap call to display message
00001814  4E4F                     870              TRAP        #15                 ; trap call            
00001816                           871  
00001816                           872  
00001816  6000 F828                873              BRA         LOOP                ; go back to the loop
0000181A                           874  opMOVEAW  
0000181A  43F9 00003CF3            875              LEA         MOVEAmatch,A1
00001820  103C 000E                876              MOVE.B      #14, D0             ; command for trap call to display message
00001824  4E4F                     877              TRAP        #15                 ; trap call
00001826                           878              
00001826  43F9 00003D6C            879              LEA         dispWord,A1
0000182C  103C 000E                880              MOVE.B      #14, D0             ; command for trap call to display message
00001830  4E4F                     881              TRAP        #15                 ; trap call
00001832                           882              
00001832                           883  
00001832  43F9 00003CCF            884              LEA         space, A1           ; create spaces
00001838  103C 000E                885              MOVE.B      #14, D0             ; command for trap call to display message
0000183C  4E4F                     886              TRAP        #15                 ; trap call
0000183E                           887              
0000183E  4242                     888              CLR         D2
00001840  1401                     889              MOVE.B      D1,D2               ; Copy new byte over to D2
00001842  E642                     890              ASR         #three,D2           ; Shift source register out
00001844  C47C 0007                891              AND         #seven,D2           ; Set everything to 0 except for the mode
00001848                           892          
00001848  4243                     893              CLR         D3
0000184A  1601                     894              MOVE.B      D1,D3
0000184C  C67C 0007                895              AND         #seven,D3
00001850                           896              
00001850  4241                     897              CLR         D1                  ; Clear D1
00001852                           898              
00001852                           899              
00001852  4EB9 00002F00            900              JSR         printEA
00001858                           901              
00001858  43F9 00003CD6            902              LEA         comma, A1           ; Display comma
0000185E  103C 000E                903              MOVE.B      #14, D0             ; command for trap call to display message
00001862  4E4F                     904              TRAP        #15                 ; trap call
00001864                           905  
00001864  4242                     906              CLR         D2
00001866  4243                     907              CLR         D3
00001868  1404                     908              MOVE.B      D4,D2
0000186A  1605                     909              MOVE.B      D5,D3
0000186C                           910          
0000186C  4EB9 00002F00            911              JSR         printEA
00001872                           912          
00001872                           913          
00001872  43F9 00003CCB            914              LEA         newLine, A1           ; Display space
00001878  103C 000E                915              MOVE.B      #14, D0             ; command for trap call to display message
0000187C  4E4F                     916              TRAP        #15                 ; trap call            
0000187E                           917  
0000187E                           918  
0000187E  6000 F7C0                919              BRA         LOOP                ; go back to the loop
00001882                           920  
00001882                           921  opNEG   
00001882  43F9 00003CF9            922              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001888  103C 000E                923              MOVE.B      #14, D0             ; command for trap call to display message
0000188C  4E4F                     924              TRAP        #15                 ; trap call
0000188E                           925          
0000188E                           926          
0000188E  1218                     927              MOVE.B      (A0)+, D1
00001890  1401                     928              MOVE.B      D1,D2               ; copy data over
00001892  EC42                     929              ASR         #six,D2
00001894                           930              
00001894  B47C 0000                931              CMP         #zero,D2
00001898  6700 0016                932              BEQ         opNEGB
0000189C  B47C 0001                933              CMP         #one,D2
000018A0  6700 008E                934              BEQ         opNEGW
000018A4  B47C 0002                935              CMP         #two,D2
000018A8  6700 0046                936              BEQ         opNEGL
000018AC  6000 1CCA                937              BRA         invalid
000018B0                           938  opNEGB
000018B0                           939  
000018B0  43F9 00003D69            940              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
000018B6  103C 000E                941              MOVE.B      #14, D0             ; command for trap call to display message
000018BA  4E4F                     942              TRAP        #15                 ; trap call
000018BC                           943          
000018BC  43F9 00003CCF            944              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000018C2  103C 000E                945              MOVE.B      #14, D0             ; command for trap call to display message
000018C6  4E4F                     946              TRAP        #15                 ; trap call
000018C8                           947          
000018C8  4242                     948              CLR         D2                  ; Clear Data register 2
000018CA  3401                     949              MOVE        D1,D2               ; Move byte into D2
000018CC  E642                     950              ASR         #three,D2           ; Shift mode into place and moves mode into place
000018CE  C47C 0007                951              AND         #seven,D2           ; Stores mode
000018D2                           952              
000018D2  4243                     953              CLR         D3
000018D4  3601                     954              MOVE        D1,D3
000018D6  C67C 0007                955              AND         #seven,D3
000018DA                           956          
000018DA  4EB9 00002F00            957              JSR         printEA
000018E0                           958                  
000018E0  43F9 00003CCB            959              LEA         newLine, A1           ; Display space
000018E6  103C 000E                960              MOVE.B      #14, D0             ; command for trap call to display message
000018EA  4E4F                     961              TRAP        #15                 ; trap call  
000018EC                           962          
000018EC  6000 F752                963              BRA         LOOP
000018F0                           964                  
000018F0                           965  
000018F0                           966  opNEGL
000018F0                           967  
000018F0  43F9 00003D6F            968              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
000018F6  103C 000E                969              MOVE.B      #14, D0             ; command for trap call to display message
000018FA  4E4F                     970              TRAP        #15                 ; trap call
000018FC                           971  
000018FC  43F9 00003CCF            972              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001902  103C 000E                973              MOVE.B      #14, D0             ; command for trap call to display message
00001906  4E4F                     974              TRAP        #15                 ; trap call
00001908                           975                  
00001908  4242                     976              CLR         D2                  ; Clear Data register 2
0000190A  3401                     977              MOVE        D1,D2               ; Move byte into D2
0000190C  E642                     978              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000190E  C47C 0007                979              AND         #seven,D2           ; Stores mode
00001912                           980          
00001912  4243                     981              CLR         D3
00001914  3601                     982              MOVE        D1,D3
00001916  C67C 0007                983              AND         #seven,D3
0000191A                           984          
0000191A  4EB9 00002F00            985              JSR         printEA
00001920                           986                      
00001920  43F9 00003CCB            987              LEA         newLine, A1         ; Display space
00001926  103C 000E                988              MOVE.B      #14, D0             ; command for trap call to display message
0000192A  4E4F                     989              TRAP        #15                 ; trap call  
0000192C                           990          
0000192C  6000 F712                991              BRA         LOOP
00001930                           992          
00001930                           993  
00001930                           994  opNEGW
00001930                           995  
00001930  43F9 00003D6C            996              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001936  103C 000E                997              MOVE.B      #14, D0             ; command for trap call to display message
0000193A  4E4F                     998              TRAP        #15                 ; trap call
0000193C                           999          
0000193C  43F9 00003CCF           1000              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001942  103C 000E               1001              MOVE.B      #14, D0             ; command for trap call to display message
00001946  4E4F                    1002              TRAP        #15                 ; trap call        
00001948                          1003                  
00001948  4242                    1004              CLR         D2                  ; Clear Data register 2
0000194A  3401                    1005              MOVE        D1,D2               ; Move byte into D2
0000194C  E642                    1006              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000194E  C47C 0007               1007              AND         #seven,D2           ; Stores mode
00001952                          1008          
00001952  4243                    1009              CLR         D3
00001954  3601                    1010              MOVE        D1,D3
00001956  C67C 0007               1011              AND         #seven,D3
0000195A                          1012          
0000195A  4EB9 00002F00           1013              JSR         printEA
00001960                          1014              
00001960  43F9 00003CCB           1015              LEA         newLine, A1           ; Display space
00001966  103C 000E               1016              MOVE.B      #14, D0             ; command for trap call to display message
0000196A  4E4F                    1017              TRAP        #15                 ; trap call  
0000196C                          1018          
0000196C  6000 F6D2               1019              BRA         LOOP
00001970                          1020  
00001970                          1021  opRTSJSR
00001970                          1022          
00001970  1218                    1023              MOVE.B      (A0)+, D1
00001972                          1024              
00001972  1401                    1025              MOVE.B      D1,D2               ; copy data over
00001974  B47C 0075               1026              CMP         #117,D2
00001978  6700 0050               1027              BEQ         opRTS
0000197C                          1028              
0000197C  EC42                    1029              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
0000197E  B47C 0002               1030              CMP         #two,D2             ; Checking if it is JSR
00001982  6700 0006               1031              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001986                          1032  
00001986  6000 1BF0               1033              BRA         invalid
0000198A                          1034  
0000198A                          1035  opJSR
0000198A                          1036                        
0000198A  43F9 00003D01           1037              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001990  103C 000E               1038              MOVE.B      #14, D0             ; command for trap call to display message
00001994  4E4F                    1039              TRAP        #15                 ; trap call
00001996                          1040              
00001996  43F9 00003CCF           1041              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000199C  103C 000E               1042              MOVE.B      #14, D0             ; command for trap call to display message
000019A0  4E4F                    1043              TRAP        #15                 ; trap call
000019A2                          1044              
000019A2  4242                    1045              CLR         D2
000019A4  4243                    1046              CLR         D3
000019A6                          1047              
000019A6  1401                    1048              MOVE.B      D1,D2
000019A8  E642                    1049              ASR         #three,D2
000019AA  C47C 0007               1050              AND         #seven,D2
000019AE                          1051              
000019AE  1601                    1052              MOVE.B      D1,D3
000019B0  C67C 0007               1053              AND         #seven,D3
000019B4                          1054              
000019B4  4EB9 00002F00           1055              JSR         printEA
000019BA                          1056              
000019BA  43F9 00003CCB           1057              LEA         newLine, A1           ; Display space
000019C0  103C 000E               1058              MOVE.B      #14, D0             ; command for trap call to display message
000019C4  4E4F                    1059              TRAP        #15                 ; trap call  
000019C6                          1060              
000019C6  6000 F678               1061              BRA         loop            
000019CA                          1062  opRTS
000019CA                          1063  
000019CA  43F9 00003CFD           1064              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
000019D0  103C 000E               1065              MOVE.B      #14, D0             ; command for trap call to display message
000019D4  4E4F                    1066              TRAP        #15                 ; trap call
000019D6                          1067              
000019D6  43F9 00003CCB           1068              LEA         newLine, A1           ; Display space
000019DC  103C 000E               1069              MOVE.B      #14, D0             ; command for trap call to display message
000019E0  4E4F                    1070              TRAP        #15                 ; trap call 
000019E2                          1071              
000019E2  6000 F65C               1072              BRA         loop
000019E6                          1073  
000019E6                          1074  opMOVEMLEA
000019E6  4242                    1075              CLR         D2                  ; Clear D2
000019E8  1401                    1076              MOVE.B      D1,D2               ; Copy byte over
000019EA  C47C 000F               1077              AND         #secNib,D2          ; Check only the second nibble
000019EE  B47C 000C               1078              CMP         #twelve,D2          ; Compare the second nibble to twelve
000019F2  6700 000E               1079              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
000019F6  B47C 0008               1080              CMP         #eight,D2           ; Compare the second nibble to eight
000019FA  6700 0006               1081              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
000019FE  6000 008C               1082              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
00001A02                          1083              
00001A02                          1084  opMOVEM            
00001A02  4246                    1085              CLR         D6                  ; Clearing D4 to store dr field
00001A04  1C01                    1086              MOVE.B      D1,D6               ; Moving byte to find dr field
00001A06  E446                    1087              ASR         #two,D6             ; Moving dr field to readable spot
00001A08  CC7C 0001               1088              AND         #one,D6             ; seting everything except dr to 0
00001A0C                          1089  
00001A0C  4241                    1090              CLR         D1  
00001A0E  1218                    1091              MOVE.B      (A0)+, D1           ; Taking in next byte
00001A10                          1092              
00001A10  4245                    1093              CLR         D5
00001A12  1A01                    1094              MOVE.B      D1,D5               ; Using D6 to check if this is indeed MOVEM
00001A14  EE45                    1095              ASR         #seven,D5
00001A16  CA7C 0001               1096              AND         #one,D5
00001A1A  BA7C 0001               1097              CMP         #one,D5             ; This bit should be one if this is MOVEM
00001A1E  6600 1B58               1098              BNE         invalid             ; If this is not 1 then this is not moveM
00001A22  4245                    1099              CLR         D5
00001A24                          1100              
00001A24  43F9 00003D05           1101              LEA         MOVEMMatch, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001A2A  103C 000E               1102              MOVE.B      #14, D0             ; command for trap call to display message
00001A2E  4E4F                    1103              TRAP        #15                 ; trap call
00001A30                          1104              
00001A30  4245                    1105              CLR         D5                  ; Clearing D5 to store size
00001A32  1A01                    1106              MOVE.B      D1,D5               ; Moving byte that contains bit for size
00001A34  EC45                    1107              ASR         #six,D5            ; Moving size bit to the very right to read
00001A36  CA7C 0001               1108              AND         #one,D5             ; Isolating the one bit for size
00001A3A                          1109              
00001A3A  4242                    1110              CLR         D2                  ; Storing EA mode in D2
00001A3C  1401                    1111              MOVE.B      D1,D2
00001A3E  E642                    1112              ASR         #three,D2
00001A40  C47C 0007               1113              AND         #seven,D2
00001A44                          1114              
00001A44  4243                    1115              CLR         D3                  ; Storing EA register into D3
00001A46  1601                    1116              MOVE.B      D1,D3
00001A48  C67C 0007               1117              AND         #seven,D3
00001A4C                          1118              
00001A4C  4EB9 0000357E           1119              JSR         MOVEMBRA
00001A52                          1120              
00001A52  B47C 0003               1121              CMP         #three,D2
00001A56  6700 0024               1122              BEQ         skipPrintEA
00001A5A                          1123              
00001A5A  43F9 00003CD6           1124              LEA         comma, A1           ; Display comma
00001A60  103C 000E               1125              MOVE.B      #14, D0             ; command for trap call to display message
00001A64  4E4F                    1126              TRAP        #15                 ; trap call
00001A66                          1127              
00001A66  4EB9 00002F00           1128              JSR         printEA
00001A6C                          1129              
00001A6C  43F9 00003CCB           1130              LEA         newline, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001A72  103C 000E               1131              MOVE.B      #14, D0             ; command for trap call to display message
00001A76  4E4F                    1132              TRAP        #15                 ; trap call            
00001A78                          1133  
00001A78  6000 F5C6               1134              BRA         loop            
00001A7C                          1135  
00001A7C                          1136  skipPrintEA 
00001A7C                          1137  
00001A7C  43F9 00003CCB           1138              LEA         newline, A1        
00001A82  103C 000E               1139              MOVE.B      #14, D0             ; command for trap call to display message
00001A86  4E4F                    1140              TRAP        #15                 ; trap call            
00001A88                          1141  
00001A88  6000 F5B6               1142              BRA         loop 
00001A8C                          1143  opLEA
00001A8C  4244                    1144              CLR         D4                  ; Clearing space for source register
00001A8E  1801                    1145              MOVE.B      D1,D4               ; Moving byte to isolate register
00001A90  E244                    1146              ASR         #one,D4
00001A92  C87C 0007               1147              AND         #seven,D4           ; Isolated register
00001A96                          1148  
00001A96  4245                    1149              CLR         D5                  ; Clearing D5 to check if bits match LEA static bits
00001A98  1A01                    1150              MOVE.B      D1,D5
00001A9A  CA7C 0001               1151              AND         #one,D5
00001A9E  E545                    1152              ASL         #two,D5
00001AA0                          1153              
00001AA0  1218                    1154              MOVE.B      (A0)+, D1           ; Taking in next byte
00001AA2                          1155              
00001AA2  1C01                    1156              MOVE.B      D1,D6
00001AA4  EC46                    1157              ASR         #six,D6
00001AA6  DA46                    1158              ADD         D6,D5
00001AA8  4246                    1159              CLR         D6
00001AAA                          1160  
00001AAA  BA7C 0007               1161              CMP         #seven,D5
00001AAE  6600 1AC8               1162              BNE         invalid   
00001AB2                          1163              
00001AB2  43F9 00003D0B           1164              LEA         LEAmatch, A1        ; we know that the opcode will be LEA, so load A1 to print message
00001AB8  103C 000E               1165              MOVE.B      #14, D0             ; command for trap call to display message
00001ABC  4E4F                    1166              TRAP        #15                 ; trap call            
00001ABE                          1167  
00001ABE  43F9 00003CCF           1168              LEA         space, A1         ; we know that the opcode will be MOVEM, so load A1 to print message
00001AC4  103C 000E               1169              MOVE.B      #14, D0             ; command for trap call to display message
00001AC8  4E4F                    1170              TRAP        #15                 ; trap call            
00001ACA                          1171              
00001ACA  4242                    1172              CLR         D2
00001ACC  1401                    1173              MOVE.B      D1,D2
00001ACE  E642                    1174              ASR         #three,D2
00001AD0  C47C 0007               1175              AND         #seven,D2
00001AD4                          1176              
00001AD4  4243                    1177              CLR         D3
00001AD6  1601                    1178              MOVE.B      D1,D3
00001AD8  C67C 0007               1179              AND         #seven,D3
00001ADC                          1180              
00001ADC  4EB9 00002F00           1181              JSR         printEA
00001AE2                          1182              
00001AE2  43F9 00003CD6           1183              LEA         comma, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001AE8  103C 000E               1184              MOVE.B      #14, D0             ; command for trap call to display message
00001AEC  4E4F                    1185              TRAP        #15                 ; trap call            
00001AEE                          1186              
00001AEE                          1187              
00001AEE  4243                    1188              CLR         D3
00001AF0  1604                    1189              MOVE.B      D4,D3
00001AF2  143C 0001               1190              MOVE.B      #one,D2
00001AF6                          1191              
00001AF6  4EB9 00002F00           1192              JSR         printEA             ; Prints out source address
00001AFC                          1193              
00001AFC  43F9 00003CCB           1194              LEA         newline, A1         ; Prints new line
00001B02  103C 000E               1195              MOVE.B      #14, D0             ; command for trap call to display message
00001B06  4E4F                    1196              TRAP        #15                 ; trap call
00001B08                          1197  
00001B08  6000 F536               1198              BRA         loop                        
00001B0C                          1199  
00001B0C  43F9 00003D2D           1200  opOR        LEA         ORmatch,A1
00001B12  103C 000E               1201              MOVE.B      #14,D0
00001B16  4E4F                    1202              TRAP        #15
00001B18                          1203              
00001B18  4242                    1204              CLR         D2
00001B1A                          1205              ; These are for EA to Dn direction
00001B1A  B43C 0000               1206              CMP.B       #zero,D2
00001B1E  6700 002A               1207              BEQ         opORB               ; Byte in opmode
00001B22  B43C 0001               1208              CMP.B       #one,D2
00001B26  6700 007C               1209              BEQ         opORW               ; Word in opmode
00001B2A  B43C 0002               1210              CMP.B       #two,D2
00001B2E  6700 00D0               1211              BEQ         opORL               ; Long in opmode
00001B32                          1212              
00001B32                          1213              ; These are for Dn to EA direction
00001B32  B43C 0004               1214              CMP.B       #four,D2
00001B36  6700 0012               1215              BEQ         opORB               ; Byte in opmode
00001B3A  B43C 0005               1216              CMP.B       #five,D2
00001B3E  6700 0064               1217              BEQ         opORW               ; Word in opmode
00001B42  B43C 0006               1218              CMP.B       #six,D2
00001B46  6700 00B8               1219              BEQ         opORL               ; Long in opmode
00001B4A                          1220              
00001B4A  43F9 00003D69           1221  opORB       LEA         dispByte,A1
00001B50  103C 000E               1222              MOVE.B      #14,D0
00001B54  4E4F                    1223              TRAP        #15
00001B56                          1224              
00001B56  43F9 00003CCF           1225              LEA         space, A1           ; Display space
00001B5C  103C 000E               1226              MOVE.B      #14, D0             ; command for trap call to display message
00001B60  4E4F                    1227              TRAP        #15                 ; trap call
00001B62                          1228              
00001B62                          1229  
00001B62  1401                    1230              MOVE.B      D1,D2
00001B64  E642                    1231              ASR         #3,D2
00001B66  C47C 0007               1232              AND         #$07,D2
00001B6A  1601                    1233              MOVE.B      D1,D3
00001B6C  C67C 0007               1234              AND         #$07,D3
00001B70  4EB9 00002F00           1235              JSR         printEA         ; Determines the "left" operand register
00001B76                          1236              
00001B76  43F9 00003CD6           1237              LEA         comma, A1           ; Display space
00001B7C  103C 000E               1238              MOVE.B      #14, D0             ; command for trap call to display message
00001B80  4E4F                    1239              TRAP        #15                 ; trap call
00001B82                          1240              
00001B82  4242                    1241              CLR         D2
00001B84  3601                    1242              MOVE.W      D1,D3
00001B86  E043                    1243              ASR         #eight,D3
00001B88  E243                    1244              ASR         #one,D3
00001B8A  C67C 0007               1245              AND         #$07,D3
00001B8E  4EB9 00002F00           1246              JSR         printEA
00001B94                          1247              
00001B94  43F9 00003CCB           1248              LEA         newLine,A1
00001B9A  103C 000E               1249              MOVE.B      #14,D0
00001B9E  4E4F                    1250              TRAP        #15
00001BA0                          1251              
00001BA0  6000 F49E               1252              BRA         LOOP
00001BA4                          1253              
00001BA4                          1254              
00001BA4  43F9 00003D6C           1255  opORW       LEA         dispWord,A1
00001BAA  103C 000E               1256              MOVE.B      #14,D0
00001BAE  4E4F                    1257              TRAP        #15
00001BB0                          1258              
00001BB0  43F9 00003CCF           1259              LEA         space, A1           ; Display space
00001BB6  103C 000E               1260              MOVE.B      #14, D0             ; command for trap call to display message
00001BBA  4E4F                    1261              TRAP        #15                 ; trap call
00001BBC                          1262              
00001BBC  4242                    1263              CLR         D2
00001BBE  1401                    1264              MOVE.B      D1,D2
00001BC0  E642                    1265              ASR         #3,D2
00001BC2  C47C 0007               1266              AND         #$07,D2
00001BC6  1601                    1267              MOVE.B      D1,D3
00001BC8  C67C 0007               1268              AND         #$07,D3
00001BCC  4EB9 00002F00           1269              JSR         printEA         ; Determines the "left" operand register
00001BD2                          1270              
00001BD2  43F9 00003CD6           1271              LEA         comma, A1           ; Display space
00001BD8  103C 000E               1272              MOVE.B      #14, D0             ; command for trap call to display message
00001BDC  4E4F                    1273              TRAP        #15                 ; trap call
00001BDE                          1274              
00001BDE  4242                    1275              CLR         D2
00001BE0  3601                    1276              MOVE.W      D1,D3
00001BE2  E043                    1277              ASR         #eight,D3
00001BE4  E243                    1278              ASR         #one,D3
00001BE6  C67C 0007               1279              AND         #$07,D3
00001BEA  4EB9 00002F00           1280              JSR         printEA
00001BF0                          1281              
00001BF0  43F9 00003CCB           1282              LEA         newLine,A1
00001BF6  103C 000E               1283              MOVE.B      #14,D0
00001BFA  4E4F                    1284              TRAP        #15
00001BFC                          1285              
00001BFC  6000 F442               1286              BRA         LOOP
00001C00                          1287              
00001C00  43F9 00003D6F           1288  opORL       LEA         dispLong,A1
00001C06  103C 000E               1289              MOVE.B      #14,D0
00001C0A  4E4F                    1290              TRAP        #15
00001C0C                          1291              
00001C0C  43F9 00003CCF           1292              LEA         space, A1           ; Display space
00001C12  103C 000E               1293              MOVE.B      #14, D0             ; command for trap call to display message
00001C16  4E4F                    1294              TRAP        #15                 ; trap call
00001C18                          1295              
00001C18  1401                    1296              MOVE.B      D1,D2
00001C1A  E642                    1297              ASR         #3,D2
00001C1C  C47C 0007               1298              AND         #$07,D2
00001C20  1601                    1299              MOVE.B      D1,D3
00001C22  C67C 0007               1300              AND         #$07,D3
00001C26  4EB9 00002F00           1301              JSR         printEA         ; Determines the "left" operand register
00001C2C                          1302              
00001C2C  43F9 00003CD6           1303              LEA         comma, A1           ; Display space
00001C32  103C 000E               1304              MOVE.B      #14, D0             ; command for trap call to display message
00001C36  4E4F                    1305              TRAP        #15                 ; trap call
00001C38                          1306              
00001C38  4242                    1307              CLR         D2
00001C3A  3601                    1308              MOVE.W      D1,D3
00001C3C  E043                    1309              ASR         #eight,D3
00001C3E  E243                    1310              ASR         #one,D3
00001C40  C67C 0007               1311              AND         #$07,D3
00001C44  4EB9 00002F00           1312              JSR         printEA
00001C4A                          1313              
00001C4A  43F9 00003CCB           1314              LEA         newLine,A1
00001C50  103C 000E               1315              MOVE.B      #14,D0
00001C54  4E4F                    1316              TRAP        #15
00001C56                          1317              
00001C56  6000 F3E8               1318              BRA         LOOP            ; trap call
00001C5A                          1319              
00001C5A  6000 F3E4               1320              BRA         LOOP            ; DOUBLE CHECK THIS AGAIN AFTER MORE TESTING ALEX
00001C5E                          1321              
00001C5E                          1322  ***********************************************************************************************************
00001C5E                          1323  *
00001C5E                          1324  *               DIVS OPCODE
00001C5E                          1325  *
00001C5E                          1326  ***********************************************************************************************************
00001C5E                          1327  
00001C5E  43F9 00003D28           1328  opDIVS      LEA     DIVSmatch,A1
00001C64  103C 000E               1329              MOVE.B  #14,D0
00001C68  4E4F                    1330              TRAP    #15
00001C6A                          1331              
00001C6A  43F9 00003CCF           1332              LEA         space, A1           ; Display space
00001C70  103C 000E               1333              MOVE.B      #14, D0             ; command for trap call to display message
00001C74  4E4F                    1334              TRAP        #15                 ; trap call
00001C76                          1335              
00001C76  1401                    1336              MOVE.B      D1,D2
00001C78  E642                    1337              ASR         #3,D2
00001C7A  C47C 0007               1338              AND         #$07,D2
00001C7E  1601                    1339              MOVE.B      D1,D3
00001C80  C67C 0007               1340              AND         #$07,D3
00001C84  4EB9 00002F00           1341              JSR         printEA
00001C8A                          1342              
00001C8A  43F9 00003CD6           1343              LEA         comma, A1           ; Display space
00001C90  103C 000E               1344              MOVE.B      #14, D0             ; command for trap call to display message
00001C94  4E4F                    1345              TRAP        #15                 ; trap call
00001C96                          1346              
00001C96  4242                    1347              CLR         D2
00001C98  3601                    1348              MOVE.W      D1,D3
00001C9A  E043                    1349              ASR         #eight,D3
00001C9C  E243                    1350              ASR         #one,D3
00001C9E  C67C 0007               1351              AND         #$07,D3
00001CA2  4EB9 00002F00           1352              JSR         printEA
00001CA8                          1353              
00001CA8  43F9 00003CCB           1354              LEA         newLine,A1
00001CAE  103C 000E               1355              MOVE.B      #14,D0
00001CB2  4E4F                    1356              TRAP        #15
00001CB4                          1357              
00001CB4  6000 F38A               1358              BRA         LOOP
00001CB8                          1359      
00001CB8  6000 F386               1360              BRA     LOOP
00001CBC                          1361              
00001CBC                          1362  **********************************************************************************************************
00001CBC                          1363  *
00001CBC                          1364  *               EOR OPCODE
00001CBC                          1365  *
00001CBC                          1366  ***********************************************************************************************************
00001CBC                          1367  
00001CBC  43F9 00003D34           1368  opEOR       LEA         EORmatch,A1
00001CC2  103C 000E               1369              MOVE.B      #14,D0
00001CC6  4E4F                    1370              TRAP        #15
00001CC8                          1371              
00001CC8  4242                    1372              CLR         D2
00001CCA                          1373              
00001CCA  1401                    1374              MOVE.B      D1,D2
00001CCC  EE42                    1375              ASR         #seven,D2           ; Move bits 7 places over to find opmode
00001CCE  C47C 0007               1376              AND         #$07,D2
00001CD2  B43C 0005               1377              CMP.B       #five,D2
00001CD6  6D00 0012               1378              BLT         opEORB              ; Byte in opmode
00001CDA  B43C 0005               1379              CMP.B       #five,D2
00001CDE  6700 006A               1380              BEQ         opEORW              ; Word in opmode
00001CE2  B43C 0005               1381              CMP.B       #five,D2
00001CE6  6E00 00C2               1382              BGT         opEORL              ; Long in opmode
00001CEA                          1383              
00001CEA  43F9 00003D69           1384  opEORB      LEA         dispByte,A1
00001CF0  103C 000E               1385              MOVE.B      #14,D0
00001CF4  4E4F                    1386              TRAP        #15
00001CF6                          1387              
00001CF6  43F9 00003CCF           1388              LEA         space, A1           ; Display space
00001CFC  103C 000E               1389              MOVE.B      #14, D0             ; command for trap call to display message
00001D00  4E4F                    1390              TRAP        #15                 ; trap call
00001D02                          1391              
00001D02  4242                    1392              CLR         D2
00001D04  4243                    1393              CLR         D3
00001D06  3601                    1394              MOVE.W      D1,D3
00001D08  E043                    1395              ASR         #eight,D3
00001D0A  E243                    1396              ASR         #one,D3
00001D0C  C67C 0007               1397              AND         #$07,D3
00001D10  4EB9 00002F00           1398              JSR         printEA
00001D16                          1399              
00001D16  43F9 00003CD6           1400              LEA         comma, A1           ; Display space
00001D1C  103C 000E               1401              MOVE.B      #14, D0             ; command for trap call to display message
00001D20  4E4F                    1402              TRAP        #15                 ; trap call
00001D22                          1403              
00001D22  4242                    1404              CLR         D2
00001D24  4243                    1405              CLR         D3
00001D26  1401                    1406              MOVE.B      D1,D2
00001D28  E642                    1407              ASR         #three,D2
00001D2A  C47C 0007               1408              AND         #seven,D2
00001D2E  1601                    1409              MOVE.B      D1,D3
00001D30  C67C 0007               1410              AND         #$07,D3
00001D34  4EB9 00002F00           1411              JSR         printEA         ; Determines the "left" operand register
00001D3A                          1412              
00001D3A  43F9 00003CCB           1413              LEA         newLine,A1
00001D40  103C 000E               1414              MOVE.B      #14,D0
00001D44  4E4F                    1415              TRAP        #15
00001D46                          1416              
00001D46  6000 F2F8               1417              BRA         LOOP
00001D4A                          1418              
00001D4A                          1419              
00001D4A  43F9 00003D6C           1420  opEORW      LEA         dispWord,A1
00001D50  103C 000E               1421              MOVE.B      #14,D0
00001D54  4E4F                    1422              TRAP        #15
00001D56                          1423              
00001D56  43F9 00003CCF           1424              LEA         space, A1           ; Display space
00001D5C  103C 000E               1425              MOVE.B      #14, D0             ; command for trap call to display message
00001D60  4E4F                    1426              TRAP        #15                 ; trap call
00001D62                          1427              
00001D62  4242                    1428              CLR         D2
00001D64  4243                    1429              CLR         D3
00001D66  3601                    1430              MOVE.W      D1,D3
00001D68  E043                    1431              ASR         #eight,D3
00001D6A  E243                    1432              ASR         #one,D3
00001D6C  C67C 0007               1433              AND         #$07,D3
00001D70  4EB9 00002F00           1434              JSR         printEA
00001D76                          1435              
00001D76  43F9 00003CD6           1436              LEA         comma, A1           ; Display space
00001D7C  103C 000E               1437              MOVE.B      #14, D0             ; command for trap call to display message
00001D80  4E4F                    1438              TRAP        #15                 ; trap call
00001D82                          1439              
00001D82  4242                    1440              CLR         D2
00001D84  4243                    1441              CLR         D3
00001D86  1401                    1442              MOVE.B      D1,D2
00001D88  E642                    1443              ASR         #three,D2
00001D8A  C47C 0007               1444              AND         #seven,D2
00001D8E  1601                    1445              MOVE.B      D1,D3
00001D90  C67C 0007               1446              AND         #$07,D3
00001D94  4EB9 00002F00           1447              JSR         printEA         ; Determines the "left" operand register
00001D9A                          1448              
00001D9A  43F9 00003CCB           1449              LEA         newLine,A1
00001DA0  103C 000E               1450              MOVE.B      #14,D0
00001DA4  4E4F                    1451              TRAP        #15
00001DA6                          1452              
00001DA6  6000 F298               1453              BRA         LOOP
00001DAA                          1454              
00001DAA  43F9 00003D6F           1455  opEORL      LEA         dispLong,A1
00001DB0  103C 000E               1456              MOVE.B      #14,D0
00001DB4  4E4F                    1457              TRAP        #15
00001DB6                          1458              
00001DB6  43F9 00003CCF           1459              LEA         space, A1           ; Display space
00001DBC  103C 000E               1460              MOVE.B      #14, D0             ; command for trap call to display message
00001DC0  4E4F                    1461              TRAP        #15                 ; trap call
00001DC2                          1462              
00001DC2  4242                    1463              CLR         D2
00001DC4  4243                    1464              CLR         D3
00001DC6  3601                    1465              MOVE.W      D1,D3
00001DC8  E043                    1466              ASR         #eight,D3
00001DCA  E243                    1467              ASR         #one,D3
00001DCC  C67C 0007               1468              AND         #$07,D3
00001DD0  4EB9 00002F00           1469              JSR         printEA
00001DD6                          1470              
00001DD6  43F9 00003CD6           1471              LEA         comma, A1           ; Display space
00001DDC  103C 000E               1472              MOVE.B      #14, D0             ; command for trap call to display message
00001DE0  4E4F                    1473              TRAP        #15                 ; trap call
00001DE2                          1474              
00001DE2  4242                    1475              CLR         D2
00001DE4  4243                    1476              CLR         D3
00001DE6  1401                    1477              MOVE.B      D1,D2
00001DE8  E642                    1478              ASR         #three,D2
00001DEA  C47C 0007               1479              AND         #seven,D2
00001DEE  1601                    1480              MOVE.B      D1,D3
00001DF0  C67C 0007               1481              AND         #$07,D3
00001DF4  4EB9 00002F00           1482              JSR         printEA         ; Determines the "left" operand register
00001DFA                          1483              
00001DFA  43F9 00003CCB           1484              LEA         newLine,A1
00001E00  103C 000E               1485              MOVE.B      #14,D0
00001E04  4E4F                    1486              TRAP        #15
00001E06                          1487              
00001E06  6000 F238               1488              BRA         LOOP            ; trap call
00001E0A                          1489              
00001E0A                          1490  
00001E0A                          1491  ***********************************************************************************************************
00001E0A                          1492  *
00001E0A                          1493  *               CMP OPCODE
00001E0A                          1494  *
00001E0A                          1495  ***********************************************************************************************************
00001E0A                          1496  
00001E0A  43F9 00003D38           1497  opCMP       LEA         CMPmatch,A1
00001E10  103C 000E               1498              MOVE.B      #14,D0
00001E14  4E4F                    1499              TRAP        #15
00001E16                          1500              
00001E16  4242                    1501              CLR         D2
00001E18                          1502              
00001E18  1401                    1503              MOVE.B      D1,D2
00001E1A  EC42                    1504              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001E1C  C47C 0007               1505              AND         #$07,D2
00001E20  B43C 0000               1506              CMP.B       #zero,D2
00001E24  6700 0016               1507              BEQ         opCMPB              ; Byte in opmode
00001E28  B43C 0001               1508              CMP.B       #one,D2
00001E2C  6700 0068               1509              BEQ         opCMPW              ; Word in opmode
00001E30  B43C 0002               1510              CMP.B       #two,D2
00001E34  6700 00BA               1511              BEQ         opCMPL              ; Long in opmode
00001E38                          1512              
00001E38  6000 1E2C               1513              BRA         printInvalid        ; Incorrect input
00001E3C                          1514  
00001E3C  43F9 00003D69           1515  opCMPB      LEA         dispByte,A1
00001E42  103C 000E               1516              MOVE.B      #14,D0
00001E46  4E4F                    1517              TRAP        #15
00001E48                          1518              
00001E48  43F9 00003CCF           1519              LEA         space, A1           ; Display space
00001E4E  103C 000E               1520              MOVE.B      #14, D0             ; command for trap call to display message
00001E52  4E4F                    1521              TRAP        #15                 ; trap call
00001E54                          1522              
00001E54  1401                    1523              MOVE.B      D1,D2
00001E56  E642                    1524              ASR         #3,D2
00001E58  C47C 0007               1525              AND         #$07,D2
00001E5C  1601                    1526              MOVE.B      D1,D3
00001E5E  C67C 0007               1527              AND         #$07,D3
00001E62  4EB9 00002F00           1528              JSR         printEA         ; Determines the "left" operand register
00001E68                          1529              
00001E68  43F9 00003CD6           1530              LEA         comma, A1           ; Display space
00001E6E  103C 000E               1531              MOVE.B      #14, D0             ; command for trap call to display message
00001E72  4E4F                    1532              TRAP        #15                 ; trap call
00001E74                          1533              
00001E74  4242                    1534              CLR         D2
00001E76  3601                    1535              MOVE.W      D1,D3
00001E78  E043                    1536              ASR         #eight,D3
00001E7A  E243                    1537              ASR         #one,D3
00001E7C  C67C 0007               1538              AND         #$07,D3
00001E80  4EB9 00002F00           1539              JSR         printEA
00001E86                          1540              
00001E86  43F9 00003CCB           1541              LEA         newLine,A1
00001E8C  103C 000E               1542              MOVE.B      #14,D0
00001E90  4E4F                    1543              TRAP        #15
00001E92                          1544              
00001E92  6000 F1AC               1545              BRA         LOOP
00001E96                          1546              
00001E96  43F9 00003D6C           1547  opCMPW      LEA         dispWord,A1
00001E9C  103C 000E               1548              MOVE.B      #14,D0
00001EA0  4E4F                    1549              TRAP        #15
00001EA2                          1550              
00001EA2  43F9 00003CCF           1551              LEA         space, A1           ; Display space
00001EA8  103C 000E               1552              MOVE.B      #14, D0             ; command for trap call to display message
00001EAC  4E4F                    1553              TRAP        #15                 ; trap call
00001EAE                          1554              
00001EAE  1401                    1555              MOVE.B      D1,D2
00001EB0  E642                    1556              ASR         #3,D2
00001EB2  C47C 0007               1557              AND         #$07,D2
00001EB6  1601                    1558              MOVE.B      D1,D3
00001EB8  C67C 0007               1559              AND         #$07,D3
00001EBC  4EB9 00002F00           1560              JSR         printEA         ; Determines the "left" operand register
00001EC2                          1561              
00001EC2  43F9 00003CD6           1562              LEA         comma, A1           ; Display space
00001EC8  103C 000E               1563              MOVE.B      #14, D0             ; command for trap call to display message
00001ECC  4E4F                    1564              TRAP        #15                 ; trap call
00001ECE                          1565              
00001ECE  4242                    1566              CLR         D2
00001ED0  3601                    1567              MOVE.W      D1,D3
00001ED2  E043                    1568              ASR         #eight,D3
00001ED4  E243                    1569              ASR         #one,D3
00001ED6  C67C 0007               1570              AND         #$07,D3
00001EDA  4EB9 00002F00           1571              JSR         printEA
00001EE0                          1572              
00001EE0  43F9 00003CCB           1573              LEA         newLine,A1
00001EE6  103C 000E               1574              MOVE.B      #14,D0
00001EEA  4E4F                    1575              TRAP        #15
00001EEC                          1576              
00001EEC  6000 F152               1577              BRA         LOOP
00001EF0                          1578  
00001EF0  43F9 00003D6F           1579  opCMPL      LEA         dispLong,A1
00001EF6  103C 000E               1580              MOVE.B      #14,D0
00001EFA  4E4F                    1581              TRAP        #15
00001EFC                          1582              
00001EFC  43F9 00003CCF           1583              LEA         space, A1           ; Display space
00001F02  103C 000E               1584              MOVE.B      #14, D0             ; command for trap call to display message
00001F06  4E4F                    1585              TRAP        #15                 ; trap call
00001F08                          1586              
00001F08  1401                    1587              MOVE.B      D1,D2
00001F0A  E642                    1588              ASR         #3,D2
00001F0C  C47C 0007               1589              AND         #$07,D2
00001F10  1601                    1590              MOVE.B      D1,D3
00001F12  C67C 0007               1591              AND         #$07,D3
00001F16  4EB9 00002F00           1592              JSR         printEA         ; Determines the "left" operand register
00001F1C                          1593              
00001F1C  43F9 00003CD6           1594              LEA         comma, A1           ; Display space
00001F22  103C 000E               1595              MOVE.B      #14, D0             ; command for trap call to display message
00001F26  4E4F                    1596              TRAP        #15                 ; trap call
00001F28                          1597              
00001F28  4242                    1598              CLR         D2
00001F2A  3601                    1599              MOVE.W      D1,D3
00001F2C  E043                    1600              ASR         #eight,D3
00001F2E  E243                    1601              ASR         #one,D3
00001F30  C67C 0007               1602              AND         #$07,D3
00001F34  4EB9 00002F00           1603              JSR         printEA
00001F3A                          1604              
00001F3A  43F9 00003CCB           1605              LEA         newLine,A1
00001F40  103C 000E               1606              MOVE.B      #14,D0
00001F44  4E4F                    1607              TRAP        #15
00001F46                          1608              
00001F46  6000 F0F8               1609              BRA         LOOP
00001F4A                          1610  
00001F4A                          1611  ***********************************************************************************************************
00001F4A                          1612  *
00001F4A                          1613  *               SUB OPCODE
00001F4A                          1614  *
00001F4A                          1615  ***********************************************************************************************************
00001F4A                          1616  
00001F4A  43F9 00003D30           1617  opSUB       LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001F50  103C 000E               1618              MOVE.B      #14, D0             ; command for trap call to display message
00001F54  4E4F                    1619              TRAP        #15                 ; trap call
00001F56                          1620          
00001F56                          1621          
00001F56  E141                    1622              ASL         #eight,D1
00001F58  1218                    1623              MOVE.B      (A0)+,D1
00001F5A  4242                    1624              CLR         D2
00001F5C                          1625              
00001F5C  3401                    1626              MOVE.W      D1,D2
00001F5E  EC42                    1627              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001F60  C47C 0007               1628              AND         #seven,D2
00001F64                          1629              
00001F64                          1630              ; These are for DN - EA
00001F64  B43C 0000               1631              CMP.B       #zero,D2
00001F68  6700 002A               1632              BEQ         opSUBB              ; Byte in opmode
00001F6C  B43C 0001               1633              CMP.B       #one,D2
00001F70  6700 007C               1634              BEQ         opSUBW              ; Word in opmode
00001F74  B43C 0002               1635              CMP.B       #two,D2
00001F78  6700 00CE               1636              BEQ         opSUBL              ; Long in opmode
00001F7C                          1637              
00001F7C                          1638              ; These are for EA - DN
00001F7C  B43C 0004               1639              CMP.B       #four,D2
00001F80  6700 0012               1640              BEQ         opSUBB              ; Byte in opmode
00001F84  B43C 0005               1641              CMP.B       #five,D2
00001F88  6700 0064               1642              BEQ         opSUBW              ; Word in opmode
00001F8C  B43C 0006               1643              CMP.B       #six,D2
00001F90  6700 00B6               1644              BEQ         opSUBL              ; Long in opmode
00001F94                          1645              
00001F94  43F9 00003D69           1646  opSUBB      LEA         dispByte,A1
00001F9A  103C 000E               1647              MOVE.B      #14,D0
00001F9E  4E4F                    1648              TRAP        #15
00001FA0                          1649              
00001FA0  43F9 00003CCF           1650              LEA         space, A1           ; Display space
00001FA6  103C 000E               1651              MOVE.B      #14, D0             ; command for trap call to display message
00001FAA  4E4F                    1652              TRAP        #15                 ; trap call         
00001FAC                          1653              
00001FAC  1401                    1654              MOVE.B      D1,D2
00001FAE  E642                    1655              ASR         #3,D2
00001FB0  C47C 0007               1656              AND         #$07,D2
00001FB4  3601                    1657              MOVE.W      D1,D3
00001FB6  C67C 0007               1658              AND         #$07,D3
00001FBA  4EB9 00002F00           1659              JSR         printEA         ; Determines the "left" operand register
00001FC0                          1660              
00001FC0  43F9 00003CD6           1661              LEA         comma, A1           ; Display space
00001FC6  103C 000E               1662              MOVE.B      #14, D0             ; command for trap call to display message
00001FCA  4E4F                    1663              TRAP        #15                 ; trap call
00001FCC                          1664              
00001FCC  4242                    1665              CLR         D2
00001FCE  3601                    1666              MOVE.W      D1,D3
00001FD0  E043                    1667              ASR         #eight,D3
00001FD2  E243                    1668              ASR         #one,D3
00001FD4  C67C 0007               1669              AND         #$07,D3
00001FD8  4EB9 00002F00           1670              JSR         printEA
00001FDE                          1671              
00001FDE  43F9 00003CCB           1672              LEA         newLine,A1
00001FE4  103C 000E               1673              MOVE.B      #14,D0
00001FE8  4E4F                    1674              TRAP        #15
00001FEA                          1675              
00001FEA  6000 F054               1676              BRA         LOOP
00001FEE                          1677              
00001FEE                          1678              
00001FEE  43F9 00003D6C           1679  opSUBW      LEA         dispWord,A1
00001FF4  103C 000E               1680              MOVE.B      #14,D0
00001FF8  4E4F                    1681              TRAP        #15
00001FFA                          1682              
00001FFA  43F9 00003CCF           1683              LEA         space, A1           ; Display space
00002000  103C 000E               1684              MOVE.B      #14, D0             ; command for trap call to display message
00002004  4E4F                    1685              TRAP        #15                 ; trap call         
00002006                          1686              
00002006  1401                    1687              MOVE.B      D1,D2
00002008  E642                    1688              ASR         #3,D2
0000200A  C47C 0007               1689              AND         #$07,D2
0000200E  3601                    1690              MOVE.W      D1,D3
00002010  C67C 0007               1691              AND         #$07,D3
00002014  4EB9 00002F00           1692              JSR         printEA         ; Determines the "left" operand register
0000201A                          1693              
0000201A  43F9 00003CD6           1694              LEA         comma, A1           ; Display space
00002020  103C 000E               1695              MOVE.B      #14, D0             ; command for trap call to display message
00002024  4E4F                    1696              TRAP        #15                 ; trap call
00002026                          1697              
00002026  4242                    1698              CLR         D2
00002028  3601                    1699              MOVE.W      D1,D3
0000202A  E043                    1700              ASR         #eight,D3
0000202C  E243                    1701              ASR         #one,D3
0000202E  C67C 0007               1702              AND         #$07,D3
00002032  4EB9 00002F00           1703              JSR         printEA
00002038                          1704              
00002038  43F9 00003CCB           1705              LEA         newLine,A1
0000203E  103C 000E               1706              MOVE.B      #14,D0
00002042  4E4F                    1707              TRAP        #15
00002044                          1708              
00002044  6000 EFFA               1709              BRA         LOOP
00002048                          1710              
00002048  43F9 00003D6F           1711  opSUBL      LEA         dispLong,A1
0000204E  103C 000E               1712              MOVE.B      #14,D0
00002052  4E4F                    1713              TRAP        #15
00002054                          1714              
00002054  43F9 00003CCF           1715              LEA         space, A1           ; Display space
0000205A  103C 000E               1716              MOVE.B      #14, D0             ; command for trap call to display message
0000205E  4E4F                    1717              TRAP        #15                 ; trap call         
00002060                          1718              
00002060  1401                    1719              MOVE.B      D1,D2
00002062  E642                    1720              ASR         #3,D2
00002064  C47C 0007               1721              AND         #$07,D2
00002068  3601                    1722              MOVE.W      D1,D3
0000206A  C67C 0007               1723              AND         #$07,D3
0000206E  4EB9 00002F00           1724              JSR         printEA         ; Determines the "left" operand register
00002074                          1725              
00002074  43F9 00003CD6           1726              LEA         comma, A1           ; Display space
0000207A  103C 000E               1727              MOVE.B      #14, D0             ; command for trap call to display message
0000207E  4E4F                    1728              TRAP        #15                 ; trap call
00002080                          1729              
00002080  4242                    1730              CLR         D2
00002082  3601                    1731              MOVE.W      D1,D3
00002084  E043                    1732              ASR         #eight,D3
00002086  E243                    1733              ASR         #one,D3
00002088  C67C 0007               1734              AND         #$07,D3
0000208C  4EB9 00002F00           1735              JSR         printEA
00002092                          1736              
00002092  43F9 00003CCB           1737              LEA         newLine,A1
00002098  103C 000E               1738              MOVE.B      #14,D0
0000209C  4E4F                    1739              TRAP        #15
0000209E                          1740              
0000209E  6000 EFA0               1741              BRA         LOOP
000020A2                          1742              
000020A2                          1743              
000020A2                          1744              
000020A2                          1745  ***********************************************************************************************************
000020A2                          1746  *
000020A2                          1747  *               BRA OPCODE
000020A2                          1748  *
000020A2                          1749  ***********************************************************************************************************
000020A2                          1750              
000020A2  43F9 00003D14           1751  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
000020A8  103C 000E               1752          MOVE.B      #14, D0             ; command for trap call to display message
000020AC  4E4F                    1753          TRAP        #15                 ; trap call
000020AE                          1754          
000020AE  4242                    1755          CLR         D2
000020B0  4243                    1756          CLR         D3      
000020B2                          1757  
000020B2  43F9 00003CCF           1758          LEA         space,A1
000020B8  103C 000E               1759          MOVE.B      #14,D0
000020BC  4E4F                    1760          TRAP        #15
000020BE                          1761          
000020BE  143C 0007               1762          MOVE.B      #seven,D2
000020C2  1218                    1763          MOVE.B      (A0)+,D1
000020C4  4EB9 00002F00           1764          JSR         printEA
000020CA                          1765          
000020CA  43F9 00003CCB           1766          LEA         newLine, A1           ; create new line
000020D0  103C 000E               1767          MOVE.B      #14, D0             ; command for trap call to display message
000020D4  4E4F                    1768          TRAP        #15                 ; trap call
000020D6                          1769  
000020D6  6000 EF68               1770          BRA         LOOP
000020DA                          1771          
000020DA                          1772          
000020DA  43F9 00003D18           1773  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
000020E0  103C 000E               1774          MOVE.B      #14, D0             ; command for trap call to display message
000020E4  4E4F                    1775          TRAP        #15                 ; trap call
000020E6                          1776          
000020E6  4242                    1777          CLR         D2
000020E8  4243                    1778          CLR         D3      
000020EA                          1779  
000020EA  43F9 00003CCF           1780          LEA         space,A1
000020F0  103C 000E               1781          MOVE.B      #14,D0
000020F4  4E4F                    1782          TRAP        #15
000020F6                          1783          
000020F6  143C 0007               1784          MOVE.B      #seven,D2
000020FA  1218                    1785          MOVE.B      (A0)+,D1
000020FC  4EB9 00002F00           1786          JSR         printEA
00002102                          1787          
00002102  43F9 00003CCB           1788          LEA         newLine, A1           ; create new line
00002108  103C 000E               1789          MOVE.B      #14, D0             ; command for trap call to display message
0000210C  4E4F                    1790          TRAP        #15                 ; trap call
0000210E                          1791          
0000210E  6000 EF30               1792          BRA         LOOP
00002112                          1793  
00002112  43F9 00003D1C           1794  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00002118  103C 000E               1795          MOVE.B      #14, D0             ; command for trap call to display message
0000211C  4E4F                    1796          TRAP        #15                 ; trap call
0000211E                          1797          
0000211E  4242                    1798          CLR         D2
00002120  4243                    1799          CLR         D3      
00002122                          1800  
00002122  43F9 00003CCF           1801          LEA         space,A1
00002128  103C 000E               1802          MOVE.B      #14,D0
0000212C  4E4F                    1803          TRAP        #15
0000212E                          1804          
0000212E  143C 0007               1805          MOVE.B      #seven,D2
00002132  1218                    1806          MOVE.B      (A0)+,D1
00002134  4EB9 00002F00           1807          JSR         printEA
0000213A                          1808          
0000213A  43F9 00003CCB           1809          LEA         newLine, A1           ; create new line
00002140  103C 000E               1810          MOVE.B      #14, D0             ; command for trap call to display message
00002144  4E4F                    1811          TRAP        #15                 ; trap call
00002146                          1812          
00002146  6000 EEF8               1813          BRA         LOOP
0000214A                          1814  
0000214A  43F9 00003D20           1815  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00002150  103C 000E               1816          MOVE.B      #14, D0             ; command for trap call to display message
00002154  4E4F                    1817          TRAP        #15                 ; trap call
00002156                          1818          
00002156  4242                    1819          CLR         D2
00002158  4243                    1820          CLR         D3      
0000215A                          1821  
0000215A  43F9 00003CCF           1822          LEA         space,A1
00002160  103C 000E               1823          MOVE.B      #14,D0
00002164  4E4F                    1824          TRAP        #15
00002166                          1825          
00002166  143C 0007               1826          MOVE.B      #seven,D2
0000216A  1218                    1827          MOVE.B      (A0)+,D1
0000216C  4EB9 00002F00           1828          JSR         printEA
00002172                          1829          
00002172  43F9 00003CCB           1830          LEA         newLine, A1           ; create new line
00002178  103C 000E               1831          MOVE.B      #14, D0             ; command for trap call to display message
0000217C  4E4F                    1832          TRAP        #15                 ; trap call
0000217E                          1833          
0000217E  6000 EEC0               1834          BRA         LOOP
00002182                          1835  
00002182  43F9 00003D24           1836  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00002188  103C 000E               1837          MOVE.B      #14, D0             ; command for trap call to display message
0000218C  4E4F                    1838          TRAP        #15                 ; trap call
0000218E                          1839          
0000218E  4242                    1840          CLR         D2
00002190  4243                    1841          CLR         D3      
00002192                          1842  
00002192  43F9 00003CCF           1843          LEA         space,A1
00002198  103C 000E               1844          MOVE.B      #14,D0
0000219C  4E4F                    1845          TRAP        #15
0000219E                          1846          
0000219E  143C 0007               1847          MOVE.B      #seven,D2
000021A2  1218                    1848          MOVE.B      (A0)+,D1
000021A4  4EB9 00002F00           1849          JSR         printEA
000021AA                          1850          
000021AA  43F9 00003CCB           1851          LEA         newLine, A1           ; create new line
000021B0  103C 000E               1852          MOVE.B      #14, D0             ; command for trap call to display message
000021B4  4E4F                    1853          TRAP        #15                 ; trap call
000021B6                          1854          
000021B6  6000 EE88               1855          BRA         LOOP
000021BA                          1856          
000021BA                          1857          
000021BA                          1858  ***********************************************************************************************************
000021BA                          1859  *
000021BA                          1860  *               SUBQ OPCODE
000021BA                          1861  *
000021BA                          1862  ***********************************************************************************************************
000021BA                          1863  
000021BA                          1864  opSUBQ      
000021BA  43F9 00003D0F           1865              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
000021C0  103C 000E               1866              MOVE.B      #14, D0             ; command for trap call to display message
000021C4  4E4F                    1867              TRAP        #15                 ; trap call
000021C6                          1868              
000021C6  E141                    1869              ASL         #eight,D1
000021C8  1218                    1870              MOVE.B      (A0)+,D1
000021CA                          1871  
000021CA  1401                    1872              MOVE.B      D1,D2
000021CC  EC42                    1873              ASR         #six,D2           ; Move bits 7 places over to find size
000021CE  C47C 0003               1874              AND         #$03,D2
000021D2                          1875              
000021D2                          1876              ; Find size bits
000021D2  B43C 0000               1877              CMP.B       #zero,D2
000021D6  6700 0012               1878              BEQ         opSUBQB             ; Byte in size
000021DA  B43C 0001               1879              CMP.B       #one,D2
000021DE  6700 0020               1880              BEQ         opSUBQW             ; Word in size
000021E2  B43C 0002               1881              CMP.B       #two,D2
000021E6  6700 002E               1882              BEQ         opSUBQL             ; Long in size
000021EA                          1883              
000021EA                          1884              
000021EA  43F9 00003D69           1885  opSUBQB     LEA         dispByte,A1
000021F0  103C 000E               1886              MOVE.B      #14,D0
000021F4  4E4F                    1887              TRAP        #15 
000021F6                          1888              
000021F6  4EB9 00002E28           1889              JSR         PrntImm
000021FC                          1890              
000021FC  6000 EE42               1891              BRA         LOOP
00002200                          1892              
00002200  43F9 00003D6C           1893  opSUBQW     LEA         dispWord,A1
00002206  103C 000E               1894              MOVE.B      #14,D0
0000220A  4E4F                    1895              TRAP        #15
0000220C                          1896              
0000220C  4EB9 00002E28           1897              JSR         PrntImm
00002212                          1898              
00002212  6000 EE2C               1899              BRA         LOOP
00002216                          1900              
00002216  43F9 00003D6F           1901  opSUBQL     LEA         dispLong,A1
0000221C  103C 000E               1902              MOVE.B      #14,D0
00002220  4E4F                    1903              TRAP        #15
00002222                          1904              
00002222  4246                    1905              CLR         D6
00002224  1C3C 0001               1906              MOVE.B      #1,D6
00002228                          1907              
00002228  4EB9 00002E28           1908              JSR         PrntImm         
0000222E                          1909              
0000222E  6000 EE10               1910              BRA         LOOP            ; trap call
00002232                          1911  
00002232  43F9 00003D3C           1912  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002238  103C 000E               1913          MOVE.B      #14, D0             ; command for trap call to display message
0000223C  4E4F                    1914          TRAP        #15                 ; trap call
0000223E  43F9 00003CCF           1915          LEA         space, A1           ; create spaces
00002244  103C 000E               1916          MOVE.B      #14, D0             ; command for trap call to display message
00002248  4E4F                    1917          TRAP        #15                 ; trap call
0000224A                          1918          
0000224A  E141                    1919          ASL         #eight, D1
0000224C  1218                    1920          MOVE.B      (A0)+, D1
0000224E                          1921          
0000224E  4242                    1922          CLR         D2
00002250  4243                    1923          CLR         D3
00002252  1401                    1924          MOVE.B      D1, D2
00002254  E642                    1925          ASR         #three, D2
00002256  C47C 0007               1926          AND         #seven, D2
0000225A  1601                    1927          MOVE.B      D1, D3
0000225C  C67C 0007               1928          AND         #seven, D3
00002260                          1929          
00002260  4EB9 00002F00           1930          JSR         printEA
00002266                          1931          
00002266  43F9 00003CD6           1932          LEA         comma, A1           ; create comma
0000226C  103C 000E               1933          MOVE.B      #14, D0             ; command for trap call to display message
00002270  4E4F                    1934          TRAP        #15                 ; trap call
00002272                          1935  
00002272  4242                    1936          CLR         D2
00002274  4243                    1937          CLR         D3
00002276  3601                    1938          MOVE.W      D1, D3
00002278  E043                    1939          ASR         #eight, D3
0000227A  E243                    1940          ASR         #one, D3
0000227C  C67C 0007               1941          AND         #seven, D3
00002280                          1942  
00002280  4EB9 00002F00           1943          JSR         printEA
00002286                          1944          
00002286  43F9 00003CCB           1945          LEA         newLine, A1           ; create new line
0000228C  103C 000E               1946          MOVE.B      #14, D0             ; command for trap call to display message
00002290  4E4F                    1947          TRAP        #15                 ; trap call
00002292                          1948          
00002292  6000 EDAC               1949          BRA         LOOP
00002296                          1950          
00002296  43F9 00003D41           1951  opADDB  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
0000229C  103C 000E               1952          MOVE.B      #14, D0             ; command for trap call to display message
000022A0  4E4F                    1953          TRAP        #15                 ; trap call
000022A2                          1954          
000022A2  43F9 00003D69           1955          LEA         dispByte, A1        ; display byte
000022A8  103C 000E               1956          MOVE.B      #14, D0             ; command for trap call to display message
000022AC  4E4F                    1957          TRAP        #15                 ; trap call
000022AE  43F9 00003CCF           1958          LEA         space, A1           ; create spaces
000022B4  103C 000E               1959          MOVE.B      #14, D0             ; command for trap call to display message
000022B8  4E4F                    1960          TRAP        #15                 ; trap call
000022BA                          1961          
000022BA  4242                    1962          CLR         D2
000022BC  4243                    1963          CLR         D3
000022BE  1401                    1964          MOVE.B      D1, D2
000022C0  E642                    1965          ASR         #three, D2
000022C2  C47C 0007               1966          AND         #seven, D2
000022C6  1601                    1967          MOVE.B      D1, D3
000022C8  C67C 0007               1968          AND         #seven, D3
000022CC                          1969          
000022CC  4EB9 00002F00           1970          JSR         printEA
000022D2                          1971          
000022D2  43F9 00003CD6           1972          LEA         comma, A1           ; create comma
000022D8  103C 000E               1973          MOVE.B      #14, D0             ; command for trap call to display message
000022DC  4E4F                    1974          TRAP        #15                 ; trap call
000022DE                          1975  
000022DE  4242                    1976          CLR         D2
000022E0  4243                    1977          CLR         D3
000022E2  3601                    1978          MOVE.W      D1, D3
000022E4  E043                    1979          ASR         #eight, D3
000022E6  E243                    1980          ASR         #one, D3
000022E8  C67C 0007               1981          AND         #seven, D3
000022EC                          1982  
000022EC  4EB9 00002F00           1983          JSR         printEA
000022F2                          1984          
000022F2  43F9 00003CCB           1985          LEA         newLine, A1           ; create new line
000022F8  103C 000E               1986          MOVE.B      #14, D0             ; command for trap call to display message
000022FC  4E4F                    1987          TRAP        #15                 ; trap call
000022FE                          1988          
000022FE  6000 ED40               1989          BRA         LOOP
00002302                          1990          
00002302  43F9 00003D41           1991  opADDW  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002308  103C 000E               1992          MOVE.B      #14, D0             ; command for trap call to display message
0000230C  4E4F                    1993          TRAP        #15                 ; trap call
0000230E                          1994  
0000230E  43F9 00003D6C           1995          LEA         dispWord, A1        ; display word
00002314  103C 000E               1996          MOVE.B      #14, D0             ; command for trap call to display message
00002318  4E4F                    1997          TRAP        #15                 ; trap call
0000231A  43F9 00003CCF           1998          LEA         space, A1           ; create spaces
00002320  103C 000E               1999          MOVE.B      #14, D0             ; command for trap call to display message
00002324  4E4F                    2000          TRAP        #15                 ; trap call
00002326                          2001          
00002326  4242                    2002          CLR         D2
00002328  4243                    2003          CLR         D3
0000232A  1401                    2004          MOVE.B      D1, D2
0000232C  E642                    2005          ASR         #three, D2
0000232E  C47C 0007               2006          AND         #seven, D2
00002332  1601                    2007          MOVE.B      D1, D3
00002334  C67C 0007               2008          AND         #seven, D3
00002338                          2009          
00002338  4EB9 00002F00           2010          JSR         printEA
0000233E                          2011          
0000233E  43F9 00003CD6           2012          LEA         comma, A1           ; create comma
00002344  103C 000E               2013          MOVE.B      #14, D0             ; command for trap call to display message
00002348  4E4F                    2014          TRAP        #15                 ; trap call
0000234A                          2015  
0000234A  4242                    2016          CLR         D2
0000234C  4243                    2017          CLR         D3
0000234E  3601                    2018          MOVE.W      D1, D3
00002350  E043                    2019          ASR         #eight, D3
00002352  E243                    2020          ASR         #one, D3
00002354  C67C 0007               2021          AND         #seven, D3
00002358                          2022  
00002358  4EB9 00002F00           2023          JSR         printEA
0000235E                          2024          
0000235E  43F9 00003CCB           2025          LEA         newLine, A1           ; create new line
00002364  103C 000E               2026          MOVE.B      #14, D0             ; command for trap call to display message
00002368  4E4F                    2027          TRAP        #15                 ; trap call
0000236A                          2028          
0000236A  6000 ECD4               2029          BRA         LOOP
0000236E                          2030          
0000236E  43F9 00003D41           2031  opADDL  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002374  103C 000E               2032          MOVE.B      #14, D0             ; command for trap call to display message
00002378  4E4F                    2033          TRAP        #15                 ; trap call
0000237A                          2034          
0000237A  43F9 00003D6F           2035          LEA         dispLong, A1        ; display long
00002380  103C 000E               2036          MOVE.B      #14, D0             ; command for trap call to display message
00002384  4E4F                    2037          TRAP        #15                 ; trap call
00002386  43F9 00003CCF           2038          LEA         space, A1           ; create spaces
0000238C  103C 000E               2039          MOVE.B      #14, D0             ; command for trap call to display message
00002390  4E4F                    2040          TRAP        #15                 ; trap call
00002392                          2041          
00002392  4242                    2042          CLR         D2
00002394  4243                    2043          CLR         D3
00002396  1401                    2044          MOVE.B      D1, D2
00002398  E642                    2045          ASR         #three, D2
0000239A  C47C 0007               2046          AND         #seven, D2
0000239E  1601                    2047          MOVE.B      D1, D3
000023A0  C67C 0007               2048          AND         #seven, D3
000023A4                          2049          
000023A4  4246                    2050          CLR         D6
000023A6  1C3C 0001               2051          MOVE.B      #1, D6
000023AA                          2052          
000023AA  4EB9 00002F00           2053          JSR         printEA
000023B0  4246                    2054          CLR         D6
000023B2                          2055          
000023B2  43F9 00003CD6           2056          LEA         comma, A1           ; create comma
000023B8  103C 000E               2057          MOVE.B      #14, D0             ; command for trap call to display message
000023BC  4E4F                    2058          TRAP        #15                 ; trap call
000023BE                          2059  
000023BE  4242                    2060          CLR         D2
000023C0  4243                    2061          CLR         D3
000023C2  3601                    2062          MOVE.W      D1, D3
000023C4  E043                    2063          ASR         #eight, D3
000023C6  E243                    2064          ASR         #one, D3
000023C8  C67C 0007               2065          AND         #seven, D3
000023CC                          2066  
000023CC  4EB9 00002F00           2067          JSR         printEA
000023D2                          2068          
000023D2  43F9 00003CCB           2069          LEA         newLine, A1           ; create new line
000023D8  103C 000E               2070          MOVE.B      #14, D0             ; command for trap call to display message
000023DC  4E4F                    2071          TRAP        #15                 ; trap call
000023DE                          2072          
000023DE  6000 EC60               2073          BRA         LOOP
000023E2                          2074  
000023E2  43F9 00003D45           2075  opADDAW LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
000023E8  103C 000E               2076          MOVE.B      #14, D0             ; command for trap call to display message
000023EC  4E4F                    2077          TRAP        #15                 ; trap call
000023EE                          2078          
000023EE  43F9 00003D6C           2079          LEA         dispWord, A1        ; display word
000023F4  103C 000E               2080          MOVE.B      #14, D0             ; command for trap call to display message
000023F8  4E4F                    2081          TRAP        #15                 ; trap call
000023FA  43F9 00003CCF           2082          LEA         space, A1           ; create spaces
00002400  103C 000E               2083          MOVE.B      #14, D0             ; command for trap call to display message
00002404  4E4F                    2084          TRAP        #15                 ; trap call
00002406                          2085          
00002406  4242                    2086          CLR         D2
00002408  4243                    2087          CLR         D3
0000240A  1401                    2088          MOVE.B      D1, D2
0000240C  E642                    2089          ASR         #three, D2
0000240E  C47C 0007               2090          AND         #seven, D2
00002412  1601                    2091          MOVE.B      D1, D3
00002414  C67C 0007               2092          AND         #seven, D3
00002418                          2093          
00002418  4EB9 00002F00           2094          JSR         printEA
0000241E                          2095          
0000241E  43F9 00003CD6           2096          LEA         comma, A1           ; create comma
00002424  103C 000E               2097          MOVE.B      #14, D0             ; command for trap call to display message
00002428  4E4F                    2098          TRAP        #15                 ; trap call
0000242A                          2099  
0000242A  4242                    2100          CLR         D2
0000242C  4243                    2101          CLR         D3
0000242E  143C 0001               2102          MOVE.B      #one, D2
00002432  3601                    2103          MOVE.W      D1, D3
00002434  E043                    2104          ASR         #eight, D3
00002436  E243                    2105          ASR         #one, D3
00002438  C67C 0007               2106          AND         #seven, D3
0000243C                          2107  
0000243C  4EB9 00002F00           2108          JSR         printEA
00002442                          2109          
00002442  43F9 00003CCB           2110          LEA         newLine, A1           ; create new line
00002448  103C 000E               2111          MOVE.B      #14, D0             ; command for trap call to display message
0000244C  4E4F                    2112          TRAP        #15                 ; trap call
0000244E                          2113          
0000244E  6000 EBF0               2114          BRA         LOOP
00002452                          2115  
00002452  43F9 00003D45           2116  opADDAL LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002458  103C 000E               2117          MOVE.B      #14, D0             ; command for trap call to display message
0000245C  4E4F                    2118          TRAP        #15                 ; trap call
0000245E                          2119  
0000245E  43F9 00003D6F           2120          LEA         dispLong, A1        ; display long
00002464  103C 000E               2121          MOVE.B      #14, D0             ; command for trap call to display message
00002468  4E4F                    2122          TRAP        #15                 ; trap call
0000246A  43F9 00003CCF           2123          LEA         space, A1           ; create spaces
00002470  103C 000E               2124          MOVE.B      #14, D0             ; command for trap call to display message
00002474  4E4F                    2125          TRAP        #15                 ; trap call
00002476                          2126          
00002476  4242                    2127          CLR         D2
00002478  4243                    2128          CLR         D3
0000247A  1401                    2129          MOVE.B      D1, D2
0000247C  E642                    2130          ASR         #three, D2
0000247E  C47C 0007               2131          AND         #seven, D2
00002482  1601                    2132          MOVE.B      D1, D3
00002484  C67C 0007               2133          AND         #seven, D3
00002488                          2134          
00002488  4EB9 00002F00           2135          JSR         printEA
0000248E                          2136          
0000248E  43F9 00003CD6           2137          LEA         comma, A1           ; create comma
00002494  103C 000E               2138          MOVE.B      #14, D0             ; command for trap call to display message
00002498  4E4F                    2139          TRAP        #15                 ; trap call
0000249A                          2140  
0000249A  4242                    2141          CLR         D2
0000249C  4243                    2142          CLR         D3
0000249E  143C 0001               2143          MOVE.B      #one, D2
000024A2  3601                    2144          MOVE.W      D1, D3
000024A4  E043                    2145          ASR         #eight, D3
000024A6  E243                    2146          ASR         #one, D3
000024A8  C67C 0007               2147          AND         #seven, D3
000024AC                          2148  
000024AC  4EB9 00002F00           2149          JSR         printEA
000024B2                          2150          
000024B2  43F9 00003CCB           2151          LEA         newLine, A1           ; create new line
000024B8  103C 000E               2152          MOVE.B      #14, D0             ; command for trap call to display message
000024BC  4E4F                    2153          TRAP        #15                 ; trap call
000024BE                          2154          
000024BE  6000 EB80               2155          BRA         LOOP
000024C2                          2156          
000024C2  43F9 00003D56           2157  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024C8  103C 000E               2158          MOVE.B      #14, D0             ; command for trap call to display message
000024CC  4E4F                    2159          TRAP        #15                 ; trap call
000024CE                          2160          
000024CE  43F9 00003D6C           2161          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024D4  103C 000E               2162          MOVE.B      #14, D0             ; command for trap call to display message
000024D8  4E4F                    2163          TRAP        #15                 ; trap call
000024DA                          2164          
000024DA  43F9 00003CCF           2165          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024E0  103C 000E               2166          MOVE.B      #14, D0             ; command for trap call to display message
000024E4  4E4F                    2167          TRAP        #15                 ; trap call
000024E6                          2168          
000024E6  4242                    2169          CLR         D2
000024E8  4243                    2170          CLR         D3
000024EA  1401                    2171          MOVE.B      D1,D2
000024EC  1601                    2172          MOVE.B      D1,D3
000024EE                          2173          
000024EE  E602                    2174          ASR.B       #three, D2
000024F0  C47C 0007               2175          AND         #seven, D2
000024F4  C67C 0007               2176          AND         #seven, D3        
000024F8                          2177          
000024F8  4EB9 00002F00           2178          JSR         printEA
000024FE                          2179          
000024FE  43F9 00003CCB           2180          LEA         newLine, A1           ; Display space
00002504  103C 000E               2181          MOVE.B      #14, D0             ; command for trap call to display message
00002508  4E4F                    2182          TRAP        #15                 ; trap call
0000250A                          2183          
0000250A  6000 EB34               2184          BRA         LOOP
0000250E                          2185  
0000250E  43F9 00003D52           2186  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002514  103C 000E               2187          MOVE.B      #14, D0             ; command for trap call to display message
00002518  4E4F                    2188          TRAP        #15                 ; trap call
0000251A                          2189          
0000251A  43F9 00003D6C           2190          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002520  103C 000E               2191          MOVE.B      #14, D0             ; command for trap call to display message
00002524  4E4F                    2192          TRAP        #15                 ; trap call
00002526                          2193          
00002526  43F9 00003CCF           2194          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000252C  103C 000E               2195          MOVE.B      #14, D0             ; command for trap call to display message
00002530  4E4F                    2196          TRAP        #15                 ; trap call
00002532                          2197          
00002532  4242                    2198          CLR         D2
00002534  4243                    2199          CLR         D3
00002536  1401                    2200          MOVE.B      D1,D2
00002538  1601                    2201          MOVE.B      D1,D3
0000253A                          2202          
0000253A  E602                    2203          ASR.B       #three, D2
0000253C  C47C 0007               2204          AND         #seven, D2
00002540  C67C 0007               2205          AND         #seven, D3        
00002544                          2206          
00002544  4EB9 00002F00           2207          JSR         printEA
0000254A                          2208          
0000254A  43F9 00003CCB           2209          LEA         newLine, A1           ; Display space
00002550  103C 000E               2210          MOVE.B      #14, D0             ; command for trap call to display message
00002554  4E4F                    2211          TRAP        #15                 ; trap call
00002556                          2212          
00002556  6000 EAE8               2213          BRA         LOOP
0000255A                          2214  
0000255A  43F9 00003D4E           2215  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00002560  103C 000E               2216          MOVE.B      #14, D0             ; command for trap call to display message
00002564  4E4F                    2217          TRAP        #15                 ; trap call
00002566                          2218          
00002566  43F9 00003D6C           2219          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000256C  103C 000E               2220          MOVE.B      #14, D0             ; command for trap call to display message
00002570  4E4F                    2221          TRAP        #15                 ; trap call
00002572                          2222          
00002572  43F9 00003CCF           2223          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002578  103C 000E               2224          MOVE.B      #14, D0             ; command for trap call to display message
0000257C  4E4F                    2225          TRAP        #15                 ; trap call
0000257E                          2226          
0000257E  4242                    2227          CLR         D2
00002580  4243                    2228          CLR         D3
00002582  1401                    2229          MOVE.B      D1,D2
00002584  1601                    2230          MOVE.B      D1,D3
00002586                          2231          
00002586  E602                    2232          ASR.B       #three, D2
00002588  C47C 0007               2233          AND         #seven, D2
0000258C  C67C 0007               2234          AND         #seven, D3        
00002590                          2235          
00002590  4EB9 00002F00           2236          JSR         printEA
00002596                          2237          
00002596  43F9 00003CCB           2238          LEA         newLine, A1           ; Display space
0000259C  103C 000E               2239          MOVE.B      #14, D0             ; command for trap call to display message
000025A0  4E4F                    2240          TRAP        #15                 ; trap call
000025A2                          2241          
000025A2  6000 EA9C               2242          BRA         LOOP
000025A6                          2243  
000025A6  43F9 00003D4A           2244  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
000025AC  103C 000E               2245          MOVE.B      #14, D0             ; command for trap call to display message
000025B0  4E4F                    2246          TRAP        #15                 ; trap call
000025B2                          2247          
000025B2  43F9 00003D6C           2248          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000025B8  103C 000E               2249          MOVE.B      #14, D0             ; command for trap call to display message
000025BC  4E4F                    2250          TRAP        #15                 ; trap call
000025BE                          2251          
000025BE  43F9 00003CCF           2252          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
000025C4  103C 000E               2253          MOVE.B      #14, D0             ; command for trap call to display message
000025C8  4E4F                    2254          TRAP        #15                 ; trap call
000025CA                          2255          
000025CA  4242                    2256          CLR         D2
000025CC  4243                    2257          CLR         D3
000025CE  1401                    2258          MOVE.B      D1,D2
000025D0  1601                    2259          MOVE.B      D1,D3
000025D2                          2260          
000025D2  E602                    2261          ASR.B       #three, D2
000025D4  C47C 0007               2262          AND         #seven, D2
000025D8  C67C 0007               2263          AND         #seven, D3        
000025DC                          2264          
000025DC  4EB9 00002F00           2265          JSR         printEA
000025E2                          2266          
000025E2  43F9 00003CCB           2267          LEA         newLine, A1           ; Display space
000025E8  103C 000E               2268          MOVE.B      #14, D0             ; command for trap call to display message
000025EC  4E4F                    2269          TRAP        #15                 ; trap call
000025EE                          2270          
000025EE  6000 EA50               2271          BRA         LOOP
000025F2                          2272  
000025F2  43F9 00003D5E           2273  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
000025F8  103C 000E               2274          MOVE.B      #14, D0             ; command for trap call to display message
000025FC  4E4F                    2275          TRAP        #15                 ; trap call
000025FE                          2276          
000025FE  43F9 00003D6C           2277          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002604  103C 000E               2278          MOVE.B      #14, D0             ; command for trap call to display message
00002608  4E4F                    2279          TRAP        #15                 ; trap call
0000260A                          2280          
0000260A  43F9 00003CCF           2281          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002610  103C 000E               2282          MOVE.B      #14, D0             ; command for trap call to display message
00002614  4E4F                    2283          TRAP        #15                 ; trap call
00002616                          2284          
00002616  4242                    2285          CLR         D2
00002618  4243                    2286          CLR         D3
0000261A  1401                    2287          MOVE.B      D1,D2
0000261C  1601                    2288          MOVE.B      D1,D3
0000261E                          2289          
0000261E  E602                    2290          ASR.B       #three, D2
00002620  C47C 0007               2291          AND         #seven, D2
00002624  C67C 0007               2292          AND         #seven, D3        
00002628                          2293          
00002628  4EB9 00002F00           2294          JSR         printEA
0000262E                          2295          
0000262E  43F9 00003CCB           2296          LEA         newLine, A1           ; Display space
00002634  103C 000E               2297          MOVE.B      #14, D0             ; command for trap call to display message
00002638  4E4F                    2298          TRAP        #15                 ; trap call
0000263A                          2299          
0000263A  6000 EA04               2300          BRA         LOOP
0000263E                          2301  
0000263E  43F9 00003D5A           2302  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00002644  103C 000E               2303          MOVE.B      #14, D0             ; command for trap call to display message
00002648  4E4F                    2304          TRAP        #15                 ; trap call
0000264A                          2305          
0000264A  43F9 00003D6C           2306          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002650  103C 000E               2307          MOVE.B      #14, D0             ; command for trap call to display message
00002654  4E4F                    2308          TRAP        #15                 ; trap call
00002656                          2309          
00002656  43F9 00003CCF           2310          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000265C  103C 000E               2311          MOVE.B      #14, D0             ; command for trap call to display message
00002660  4E4F                    2312          TRAP        #15                 ; trap call
00002662                          2313          
00002662  4242                    2314          CLR         D2
00002664  4243                    2315          CLR         D3
00002666  1401                    2316          MOVE.B      D1,D2
00002668  1601                    2317          MOVE.B      D1,D3
0000266A                          2318          
0000266A  E602                    2319          ASR.B       #three, D2
0000266C  C47C 0007               2320          AND         #seven, D2
00002670  C67C 0007               2321          AND         #seven, D3        
00002674                          2322          
00002674  4EB9 00002F00           2323          JSR         printEA
0000267A                          2324          
0000267A  43F9 00003CCB           2325          LEA         newLine, A1           ; Display space
00002680  103C 000E               2326          MOVE.B      #14, D0             ; command for trap call to display message
00002684  4E4F                    2327          TRAP        #15                 ; trap call
00002686                          2328          
00002686  6000 E9B8               2329          BRA         LOOP
0000268A                          2330          
0000268A  4242                    2331  memSB   CLR         D2
0000268C  1401                    2332          MOVE.B      D1,D2
0000268E  E642                    2333          ASR         #three, D2
00002690                          2334          
00002690  C47C 0007               2335          AND         #$07, D2
00002694                          2336          
00002694  B43C 0000               2337          CMP.B       #zero, D2
00002698  6700 002E               2338          BEQ         opASBI
0000269C  B43C 0004               2339          CMP.B       #four, D2
000026A0  6700 0088               2340          BEQ         opASBR
000026A4  B43C 0001               2341          CMP.B       #one, D2
000026A8  6700 00E2               2342          BEQ         opLSBI
000026AC  B43C 0005               2343          CMP.B       #five, D2
000026B0  6700 013C               2344          BEQ         opLSBR
000026B4  B43C 0003               2345          CMP.B       #three, D2
000026B8  6700 0196               2346          BEQ         opROBI
000026BC  B43C 0007               2347          CMP.B       #seven, D2
000026C0  6700 01F0               2348          BEQ         opROBR
000026C4  6000 15A0               2349          BRA         printInvalid
000026C8                          2350          
000026C8  4242                    2351  opASBI  CLR         D2
000026CA  3401                    2352          MOVE.W      D1, D2
000026CC  E042                    2353          ASR         #eight, D2
000026CE  C47C 0001               2354          AND         #$01, D2
000026D2                          2355      
000026D2  B43C 0000               2356          CMP.B       #zero, D2
000026D6  6700 000E               2357          BEQ         opASRBI
000026DA  B43C 0001               2358          CMP.B       #one, D2
000026DE  6700 0028               2359          BEQ         opASLBI
000026E2  6000 1582               2360          BRA         printInvalid
000026E6                          2361          
000026E6  43F9 00003D52           2362  opASRBI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000026EC  103C 000E               2363          MOVE.B      #14, D0             ; command for trap call to display message
000026F0  4E4F                    2364          TRAP        #15                 ; trap call
000026F2                          2365  
000026F2  43F9 00003D69           2366          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000026F8  103C 000E               2367          MOVE.B      #14, D0             ; command for trap call to display message
000026FC  4E4F                    2368          TRAP        #15                 ; trap call
000026FE                          2369          
000026FE  4EB9 00002E28           2370          JSR         PrntImm
00002704                          2371          
00002704  6000 E93A               2372          BRA         LOOP
00002708                          2373  
00002708  43F9 00003D56           2374  opASLBI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000270E  103C 000E               2375          MOVE.B      #14, D0             ; command for trap call to display message
00002712  4E4F                    2376          TRAP        #15                 ; trap call
00002714                          2377  
00002714  43F9 00003D69           2378          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000271A  103C 000E               2379          MOVE.B      #14, D0             ; command for trap call to display message
0000271E  4E4F                    2380          TRAP        #15                 ; trap call
00002720                          2381          
00002720  4EB9 00002E28           2382          JSR         PrntImm
00002726                          2383          
00002726  6000 E918               2384          BRA         LOOP
0000272A                          2385  
0000272A  4242                    2386  opASBR  CLR         D2
0000272C  3401                    2387          MOVE.W      D1, D2
0000272E  E042                    2388          ASR         #eight, D2
00002730  C47C 0001               2389          AND         #$01, D2
00002734                          2390      
00002734  B43C 0000               2391          CMP.B       #zero, D2
00002738  6700 000E               2392          BEQ         opASRBR
0000273C  B43C 0001               2393          CMP.B       #one, D2
00002740  6700 0028               2394          BEQ         opASLBR
00002744  6000 1520               2395          BRA         printInvalid 
00002748                          2396          
00002748  43F9 00003D52           2397  opASRBR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000274E  103C 000E               2398          MOVE.B      #14, D0             ; command for trap call to display message
00002752  4E4F                    2399          TRAP        #15                 ; trap call
00002754                          2400  
00002754  43F9 00003D69           2401          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000275A  103C 000E               2402          MOVE.B      #14, D0             ; command for trap call to display message
0000275E  4E4F                    2403          TRAP        #15                 ; trap call
00002760                          2404          
00002760  4EB9 00002E84           2405          JSR         PrntReg
00002766                          2406          
00002766  6000 E8D8               2407          BRA         LOOP
0000276A                          2408  
0000276A  43F9 00003D56           2409  opASLBR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002770  103C 000E               2410          MOVE.B      #14, D0             ; command for trap call to display message
00002774  4E4F                    2411          TRAP        #15                 ; trap call
00002776                          2412  
00002776  43F9 00003D69           2413          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000277C  103C 000E               2414          MOVE.B      #14, D0             ; command for trap call to display message
00002780  4E4F                    2415          TRAP        #15                 ; trap call
00002782                          2416          
00002782  4EB9 00002E84           2417          JSR         PrntReg
00002788                          2418          
00002788  6000 E8B6               2419          BRA         LOOP
0000278C                          2420  
0000278C  4242                    2421  opLSBI  CLR         D2
0000278E  3401                    2422          MOVE.W      D1, D2
00002790  E042                    2423          ASR         #eight, D2
00002792  C47C 0001               2424          AND         #$01, D2
00002796                          2425      
00002796  B43C 0000               2426          CMP.B       #zero, D2
0000279A  6700 000E               2427          BEQ         opLSRBI
0000279E  B43C 0001               2428          CMP.B       #one, D2
000027A2  6700 0028               2429          BEQ         opLSLBI
000027A6  6000 14BE               2430          BRA         printInvalid 
000027AA                          2431          
000027AA  43F9 00003D4A           2432  opLSRBI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027B0  103C 000E               2433          MOVE.B      #14, D0             ; command for trap call to display message
000027B4  4E4F                    2434          TRAP        #15                 ; trap call
000027B6                          2435  
000027B6  43F9 00003D69           2436          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027BC  103C 000E               2437          MOVE.B      #14, D0             ; command for trap call to display message
000027C0  4E4F                    2438          TRAP        #15                 ; trap call
000027C2                          2439          
000027C2  4EB9 00002E28           2440          JSR         PrntImm
000027C8                          2441          
000027C8  6000 E876               2442          BRA         LOOP
000027CC                          2443  
000027CC                          2444  
000027CC  43F9 00003D4E           2445  opLSLBI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027D2  103C 000E               2446          MOVE.B      #14, D0             ; command for trap call to display message
000027D6  4E4F                    2447          TRAP        #15                 ; trap call
000027D8                          2448  
000027D8  43F9 00003D69           2449          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027DE  103C 000E               2450          MOVE.B      #14, D0             ; command for trap call to display message
000027E2  4E4F                    2451          TRAP        #15                 ; trap call
000027E4                          2452          
000027E4  4EB9 00002E28           2453          JSR         PrntImm
000027EA                          2454          
000027EA  6000 E854               2455          BRA         LOOP
000027EE                          2456  
000027EE                          2457  
000027EE  4242                    2458  opLSBR  CLR         D2
000027F0  3401                    2459          MOVE.W      D1, D2
000027F2  E042                    2460          ASR         #eight, D2
000027F4  C47C 0001               2461          AND         #$01, D2
000027F8                          2462      
000027F8  B43C 0000               2463          CMP.B       #zero, D2
000027FC  6700 000E               2464          BEQ         opLSRBR
00002800  B43C 0001               2465          CMP.B       #one, D2
00002804  6700 0028               2466          BEQ         opLSLBR
00002808  6000 145C               2467          BRA         printInvalid 
0000280C                          2468          
0000280C  43F9 00003D4A           2469  opLSRBR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002812  103C 000E               2470          MOVE.B      #14, D0             ; command for trap call to display message
00002816  4E4F                    2471          TRAP        #15                 ; trap call
00002818                          2472  
00002818  43F9 00003D69           2473          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000281E  103C 000E               2474          MOVE.B      #14, D0             ; command for trap call to display message
00002822  4E4F                    2475          TRAP        #15                 ; trap call
00002824                          2476          
00002824  4EB9 00002E84           2477          JSR         PrntReg
0000282A                          2478          
0000282A  6000 E814               2479          BRA         LOOP
0000282E                          2480          
0000282E  43F9 00003D4E           2481  opLSLBR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002834  103C 000E               2482          MOVE.B      #14, D0             ; command for trap call to display message
00002838  4E4F                    2483          TRAP        #15                 ; trap call
0000283A                          2484  
0000283A  43F9 00003D69           2485          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002840  103C 000E               2486          MOVE.B      #14, D0             ; command for trap call to display message
00002844  4E4F                    2487          TRAP        #15                 ; trap call
00002846                          2488          
00002846  4EB9 00002E84           2489          JSR         PrntReg
0000284C                          2490          
0000284C  6000 E7F2               2491          BRA         LOOP
00002850                          2492  
00002850                          2493  
00002850                          2494  
00002850  4242                    2495  opROBI  CLR         D2
00002852  3401                    2496          MOVE.W      D1, D2
00002854  E042                    2497          ASR         #eight, D2
00002856  C47C 0001               2498          AND         #$01, D2
0000285A                          2499      
0000285A  B43C 0000               2500          CMP.B       #zero, D2
0000285E  6700 000E               2501          BEQ         opRORBI
00002862  B43C 0001               2502          CMP.B       #one, D2
00002866  6700 0028               2503          BEQ         opROLBI
0000286A  6000 13FA               2504          BRA         printInvalid 
0000286E                          2505          
0000286E  43F9 00003D5A           2506  opRORBI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002874  103C 000E               2507          MOVE.B      #14, D0             ; command for trap call to display message
00002878  4E4F                    2508          TRAP        #15                 ; trap call
0000287A                          2509  
0000287A  43F9 00003D69           2510          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002880  103C 000E               2511          MOVE.B      #14, D0             ; command for trap call to display message
00002884  4E4F                    2512          TRAP        #15                 ; trap call
00002886                          2513          
00002886  4EB9 00002E28           2514          JSR         PrntImm
0000288C                          2515          
0000288C  6000 E7B2               2516          BRA         LOOP
00002890                          2517  
00002890  43F9 00003D5E           2518  opROLBI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002896  103C 000E               2519          MOVE.B      #14, D0             ; command for trap call to display message
0000289A  4E4F                    2520          TRAP        #15                 ; trap call
0000289C                          2521  
0000289C  43F9 00003D69           2522          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028A2  103C 000E               2523          MOVE.B      #14, D0             ; command for trap call to display message
000028A6  4E4F                    2524          TRAP        #15                 ; trap call
000028A8                          2525          
000028A8  4EB9 00002E28           2526          JSR         PrntImm
000028AE                          2527          
000028AE  6000 E790               2528          BRA         LOOP
000028B2                          2529  
000028B2  4242                    2530  opROBR  CLR         D2
000028B4  3401                    2531          MOVE.W      D1, D2
000028B6  E042                    2532          ASR         #eight, D2
000028B8  C47C 0001               2533          AND         #$01, D2
000028BC                          2534      
000028BC  B43C 0000               2535          CMP.B       #zero, D2
000028C0  6700 000E               2536          BEQ         opRORBR
000028C4  B43C 0001               2537          CMP.B       #one, D2
000028C8  6700 0028               2538          BEQ         opROLBR
000028CC  6000 1398               2539          BRA         printInvalid     
000028D0                          2540          
000028D0  43F9 00003D5A           2541  opRORBR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028D6  103C 000E               2542          MOVE.B      #14, D0             ; command for trap call to display message
000028DA  4E4F                    2543          TRAP        #15                 ; trap call
000028DC                          2544  
000028DC  43F9 00003D69           2545          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028E2  103C 000E               2546          MOVE.B      #14, D0             ; command for trap call to display message
000028E6  4E4F                    2547          TRAP        #15                 ; trap call
000028E8                          2548          
000028E8  4EB9 00002E84           2549          JSR         PrntReg
000028EE                          2550          
000028EE  6000 E750               2551          BRA         LOOP
000028F2                          2552  
000028F2  43F9 00003D5E           2553  opROLBR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028F8  103C 000E               2554          MOVE.B      #14, D0             ; command for trap call to display message
000028FC  4E4F                    2555          TRAP        #15                 ; trap call
000028FE                          2556  
000028FE  43F9 00003D69           2557          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002904  103C 000E               2558          MOVE.B      #14, D0             ; command for trap call to display message
00002908  4E4F                    2559          TRAP        #15                 ; trap call
0000290A                          2560          
0000290A  4EB9 00002E84           2561          JSR         PrntReg
00002910                          2562          
00002910  6000 E72E               2563          BRA         LOOP       
00002914                          2564  
00002914  4242                    2565  memSW   CLR         D2
00002916  1401                    2566          MOVE.B      D1,D2
00002918  E642                    2567          ASR         #three, D2
0000291A                          2568          
0000291A  C47C 0007               2569          AND         #$07, D2
0000291E                          2570          
0000291E  B43C 0000               2571          CMP.B       #zero, D2
00002922  6700 002E               2572          BEQ         opASWI
00002926  B43C 0004               2573          CMP.B       #four, D2
0000292A  6700 0088               2574          BEQ         opASWR
0000292E  B43C 0001               2575          CMP.B       #one, D2
00002932  6700 00E2               2576          BEQ         opLSWI
00002936  B43C 0005               2577          CMP.B       #five, D2
0000293A  6700 013C               2578          BEQ         opLSWR
0000293E  B43C 0003               2579          CMP.B       #three, D2
00002942  6700 0196               2580          BEQ         opROWI
00002946  B43C 0007               2581          CMP.B       #seven, D2
0000294A  6700 01F0               2582          BEQ         opROWR
0000294E  6000 1316               2583          BRA         printInvalid
00002952                          2584          
00002952  4242                    2585  opASWI  CLR         D2
00002954  3401                    2586          MOVE.W      D1, D2
00002956  E042                    2587          ASR         #eight, D2
00002958  C47C 0001               2588          AND         #$01, D2
0000295C                          2589      
0000295C  B43C 0000               2590          CMP.B       #zero, D2
00002960  6700 000E               2591          BEQ         opASRWI
00002964  B43C 0001               2592          CMP.B       #one, D2
00002968  6700 0028               2593          BEQ         opASLWI
0000296C  6000 12F8               2594          BRA         printInvalid
00002970                          2595          
00002970  43F9 00003D52           2596  opASRWI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002976  103C 000E               2597          MOVE.B      #14, D0             ; command for trap call to display message
0000297A  4E4F                    2598          TRAP        #15                 ; trap call
0000297C                          2599  
0000297C  43F9 00003D6C           2600          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002982  103C 000E               2601          MOVE.B      #14, D0             ; command for trap call to display message
00002986  4E4F                    2602          TRAP        #15                 ; trap call
00002988                          2603          
00002988  4EB9 00002E28           2604          JSR         PrntImm
0000298E                          2605          
0000298E  6000 E6B0               2606          BRA         LOOP
00002992                          2607  
00002992  43F9 00003D56           2608  opASLWI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002998  103C 000E               2609          MOVE.B      #14, D0             ; command for trap call to display message
0000299C  4E4F                    2610          TRAP        #15                 ; trap call
0000299E                          2611  
0000299E  43F9 00003D6C           2612          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000029A4  103C 000E               2613          MOVE.B      #14, D0             ; command for trap call to display message
000029A8  4E4F                    2614          TRAP        #15                 ; trap call
000029AA                          2615          
000029AA  4EB9 00002E28           2616          JSR         PrntImm
000029B0                          2617          
000029B0  6000 E68E               2618          BRA         LOOP
000029B4                          2619  
000029B4  4242                    2620  opASWR  CLR         D2
000029B6  3401                    2621          MOVE.W      D1, D2
000029B8  E042                    2622          ASR         #eight, D2
000029BA  C47C 0001               2623          AND         #$01, D2
000029BE                          2624      
000029BE  B43C 0000               2625          CMP.B       #zero, D2
000029C2  6700 000E               2626          BEQ         opASRWR
000029C6  B43C 0001               2627          CMP.B       #one, D2
000029CA  6700 0028               2628          BEQ         opASLWR
000029CE  6000 1296               2629          BRA         printInvalid 
000029D2                          2630          
000029D2  43F9 00003D52           2631  opASRWR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000029D8  103C 000E               2632          MOVE.B      #14, D0             ; command for trap call to display message
000029DC  4E4F                    2633          TRAP        #15                 ; trap call
000029DE                          2634  
000029DE  43F9 00003D6C           2635          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000029E4  103C 000E               2636          MOVE.B      #14, D0             ; command for trap call to display message
000029E8  4E4F                    2637          TRAP        #15                 ; trap call
000029EA                          2638          
000029EA  4EB9 00002E84           2639          JSR         PrntReg
000029F0                          2640          
000029F0  6000 E64E               2641          BRA         LOOP
000029F4                          2642  
000029F4  43F9 00003D56           2643  opASLWR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000029FA  103C 000E               2644          MOVE.B      #14, D0             ; command for trap call to display message
000029FE  4E4F                    2645          TRAP        #15                 ; trap call
00002A00                          2646  
00002A00  43F9 00003D6C           2647          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A06  103C 000E               2648          MOVE.B      #14, D0             ; command for trap call to display message
00002A0A  4E4F                    2649          TRAP        #15                 ; trap call
00002A0C                          2650          
00002A0C  4EB9 00002E84           2651          JSR         PrntReg
00002A12                          2652          
00002A12  6000 E62C               2653          BRA         LOOP
00002A16                          2654  
00002A16  4242                    2655  opLSWI  CLR         D2
00002A18  3401                    2656          MOVE.W      D1, D2
00002A1A  E042                    2657          ASR         #eight, D2
00002A1C  C47C 0001               2658          AND         #$01, D2
00002A20                          2659      
00002A20  B43C 0000               2660          CMP.B       #zero, D2
00002A24  6700 000E               2661          BEQ         opLSRWI
00002A28  B43C 0001               2662          CMP.B       #one, D2
00002A2C  6700 0028               2663          BEQ         opLSLWI
00002A30  6000 1234               2664          BRA         printInvalid 
00002A34                          2665          
00002A34  43F9 00003D4A           2666  opLSRWI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A3A  103C 000E               2667          MOVE.B      #14, D0             ; command for trap call to display message
00002A3E  4E4F                    2668          TRAP        #15                 ; trap call
00002A40                          2669  
00002A40  43F9 00003D6C           2670          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A46  103C 000E               2671          MOVE.B      #14, D0             ; command for trap call to display message
00002A4A  4E4F                    2672          TRAP        #15                 ; trap call
00002A4C                          2673          
00002A4C  4EB9 00002E28           2674          JSR         PrntImm
00002A52                          2675          
00002A52  6000 E5EC               2676          BRA         LOOP
00002A56                          2677  
00002A56                          2678  
00002A56  43F9 00003D4E           2679  opLSLWI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A5C  103C 000E               2680          MOVE.B      #14, D0             ; command for trap call to display message
00002A60  4E4F                    2681          TRAP        #15                 ; trap call
00002A62                          2682  
00002A62  43F9 00003D6C           2683          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A68  103C 000E               2684          MOVE.B      #14, D0             ; command for trap call to display message
00002A6C  4E4F                    2685          TRAP        #15                 ; trap call
00002A6E                          2686          
00002A6E  4EB9 00002E28           2687          JSR         PrntImm
00002A74                          2688          
00002A74  6000 E5CA               2689          BRA         LOOP
00002A78                          2690  
00002A78                          2691  
00002A78  4242                    2692  opLSWR  CLR         D2
00002A7A  3401                    2693          MOVE.W      D1, D2
00002A7C  E042                    2694          ASR         #eight, D2
00002A7E  C47C 0001               2695          AND         #$01, D2
00002A82                          2696      
00002A82  B43C 0000               2697          CMP.B       #zero, D2
00002A86  6700 000E               2698          BEQ         opLSRWR
00002A8A  B43C 0001               2699          CMP.B       #one, D2
00002A8E  6700 0028               2700          BEQ         opLSLWR
00002A92  6000 11D2               2701          BRA         printInvalid 
00002A96                          2702          
00002A96  43F9 00003D4A           2703  opLSRWR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002A9C  103C 000E               2704          MOVE.B      #14, D0             ; command for trap call to display message
00002AA0  4E4F                    2705          TRAP        #15                 ; trap call
00002AA2                          2706  
00002AA2  43F9 00003D6C           2707          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002AA8  103C 000E               2708          MOVE.B      #14, D0             ; command for trap call to display message
00002AAC  4E4F                    2709          TRAP        #15                 ; trap call
00002AAE                          2710          
00002AAE  4EB9 00002E84           2711          JSR         PrntReg
00002AB4                          2712          
00002AB4  6000 E58A               2713          BRA         LOOP
00002AB8                          2714          
00002AB8  43F9 00003D4E           2715  opLSLWR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002ABE  103C 000E               2716          MOVE.B      #14, D0             ; command for trap call to display message
00002AC2  4E4F                    2717          TRAP        #15                 ; trap call
00002AC4                          2718  
00002AC4  43F9 00003D6C           2719          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002ACA  103C 000E               2720          MOVE.B      #14, D0             ; command for trap call to display message
00002ACE  4E4F                    2721          TRAP        #15                 ; trap call
00002AD0                          2722          
00002AD0  4EB9 00002E84           2723          JSR         PrntReg
00002AD6                          2724          
00002AD6  6000 E568               2725          BRA         LOOP
00002ADA                          2726  
00002ADA                          2727  
00002ADA                          2728  
00002ADA  4242                    2729  opROWI  CLR         D2
00002ADC  3401                    2730          MOVE.W      D1, D2
00002ADE  E042                    2731          ASR         #eight, D2
00002AE0  C47C 0001               2732          AND         #$01, D2
00002AE4                          2733      
00002AE4  B43C 0000               2734          CMP.B       #zero, D2
00002AE8  6700 000E               2735          BEQ         opRORWI
00002AEC  B43C 0001               2736          CMP.B       #one, D2
00002AF0  6700 0028               2737          BEQ         opROLWI
00002AF4  6000 1170               2738          BRA         printInvalid 
00002AF8                          2739          
00002AF8  43F9 00003D5A           2740  opRORWI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002AFE  103C 000E               2741          MOVE.B      #14, D0             ; command for trap call to display message
00002B02  4E4F                    2742          TRAP        #15                 ; trap call
00002B04                          2743  
00002B04  43F9 00003D6C           2744          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B0A  103C 000E               2745          MOVE.B      #14, D0             ; command for trap call to display message
00002B0E  4E4F                    2746          TRAP        #15                 ; trap call
00002B10                          2747          
00002B10  4EB9 00002E28           2748          JSR         PrntImm
00002B16                          2749          
00002B16  6000 E528               2750          BRA         LOOP
00002B1A                          2751  
00002B1A  43F9 00003D5E           2752  opROLWI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B20  103C 000E               2753          MOVE.B      #14, D0             ; command for trap call to display message
00002B24  4E4F                    2754          TRAP        #15                 ; trap call
00002B26                          2755  
00002B26  43F9 00003D6C           2756          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B2C  103C 000E               2757          MOVE.B      #14, D0             ; command for trap call to display message
00002B30  4E4F                    2758          TRAP        #15                 ; trap call
00002B32                          2759          
00002B32  4EB9 00002E28           2760          JSR         PrntImm
00002B38                          2761          
00002B38  6000 E506               2762          BRA         LOOP
00002B3C                          2763  
00002B3C  4242                    2764  opROWR  CLR         D2
00002B3E  3401                    2765          MOVE.W      D1, D2
00002B40  E042                    2766          ASR         #eight, D2
00002B42  C47C 0001               2767          AND         #$01, D2
00002B46                          2768      
00002B46  B43C 0000               2769          CMP.B       #zero, D2
00002B4A  6700 000E               2770          BEQ         opRORWR
00002B4E  B43C 0001               2771          CMP.B       #one, D2
00002B52  6700 0028               2772          BEQ         opROLWR
00002B56  6000 110E               2773          BRA         printInvalid     
00002B5A                          2774          
00002B5A  43F9 00003D5A           2775  opRORWR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B60  103C 000E               2776          MOVE.B      #14, D0             ; command for trap call to display message
00002B64  4E4F                    2777          TRAP        #15                 ; trap call
00002B66                          2778  
00002B66  43F9 00003D6C           2779          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B6C  103C 000E               2780          MOVE.B      #14, D0             ; command for trap call to display message
00002B70  4E4F                    2781          TRAP        #15                 ; trap call
00002B72                          2782          
00002B72  4EB9 00002E84           2783          JSR         PrntReg
00002B78                          2784          
00002B78  6000 E4C6               2785          BRA         LOOP
00002B7C                          2786  
00002B7C  43F9 00003D5E           2787  opROLWR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B82  103C 000E               2788          MOVE.B      #14, D0             ; command for trap call to display message
00002B86  4E4F                    2789          TRAP        #15                 ; trap call
00002B88                          2790  
00002B88  43F9 00003D6C           2791          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B8E  103C 000E               2792          MOVE.B      #14, D0             ; command for trap call to display message
00002B92  4E4F                    2793          TRAP        #15                 ; trap call
00002B94                          2794          
00002B94  4EB9 00002E84           2795          JSR         PrntReg
00002B9A                          2796          
00002B9A  6000 E4A4               2797          BRA         LOOP
00002B9E                          2798  
00002B9E  4242                    2799  memSL   CLR         D2
00002BA0  1401                    2800          MOVE.B      D1,D2
00002BA2  E642                    2801          ASR         #three, D2
00002BA4                          2802          
00002BA4  C47C 0007               2803          AND         #$07, D2
00002BA8                          2804          
00002BA8  B43C 0000               2805          CMP.B       #zero, D2
00002BAC  6700 002E               2806          BEQ         opASLI
00002BB0  B43C 0004               2807          CMP.B       #four, D2
00002BB4  6700 0088               2808          BEQ         opASLR
00002BB8  B43C 0001               2809          CMP.B       #one, D2
00002BBC  6700 00E2               2810          BEQ         opLSLI
00002BC0  B43C 0005               2811          CMP.B       #five, D2
00002BC4  6700 013C               2812          BEQ         opLSLR
00002BC8  B43C 0003               2813          CMP.B       #three, D2
00002BCC  6700 0196               2814          BEQ         opROLI
00002BD0  B43C 0007               2815          CMP.B       #seven, D2
00002BD4  6700 01F0               2816          BEQ         opROLR
00002BD8  6000 108C               2817          BRA         printInvalid
00002BDC                          2818          
00002BDC  4242                    2819  opASLI  CLR         D2
00002BDE  3401                    2820          MOVE.W      D1, D2
00002BE0  E042                    2821          ASR         #eight, D2
00002BE2  C47C 0001               2822          AND         #$01, D2
00002BE6                          2823      
00002BE6  B43C 0000               2824          CMP.B       #zero, D2
00002BEA  6700 000E               2825          BEQ         opASRLI
00002BEE  B43C 0001               2826          CMP.B       #one, D2
00002BF2  6700 0028               2827          BEQ         opASLLI
00002BF6  6000 106E               2828          BRA         printInvalid
00002BFA                          2829          
00002BFA  43F9 00003D52           2830  opASRLI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C00  103C 000E               2831          MOVE.B      #14, D0             ; command for trap call to display message
00002C04  4E4F                    2832          TRAP        #15                 ; trap call
00002C06                          2833  
00002C06  43F9 00003D6F           2834          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C0C  103C 000E               2835          MOVE.B      #14, D0             ; command for trap call to display message
00002C10  4E4F                    2836          TRAP        #15                 ; trap call
00002C12                          2837          
00002C12  4EB9 00002E28           2838          JSR         PrntImm
00002C18                          2839          
00002C18  6000 E426               2840          BRA         LOOP
00002C1C                          2841  
00002C1C  43F9 00003D56           2842  opASLLI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002C22  103C 000E               2843          MOVE.B      #14, D0             ; command for trap call to display message
00002C26  4E4F                    2844          TRAP        #15                 ; trap call
00002C28                          2845  
00002C28  43F9 00003D6F           2846          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C2E  103C 000E               2847          MOVE.B      #14, D0             ; command for trap call to display message
00002C32  4E4F                    2848          TRAP        #15                 ; trap call
00002C34                          2849          
00002C34  4EB9 00002E28           2850          JSR         PrntImm
00002C3A                          2851          
00002C3A  6000 E404               2852          BRA         LOOP
00002C3E                          2853  
00002C3E  4242                    2854  opASLR  CLR         D2
00002C40  3401                    2855          MOVE.W      D1, D2
00002C42  E042                    2856          ASR         #eight, D2
00002C44  C47C 0001               2857          AND         #$01, D2
00002C48                          2858      
00002C48  B43C 0000               2859          CMP.B       #zero, D2
00002C4C  6700 000E               2860          BEQ         opASRLR
00002C50  B43C 0001               2861          CMP.B       #one, D2
00002C54  6700 0028               2862          BEQ         opASLLR
00002C58  6000 100C               2863          BRA         printInvalid 
00002C5C                          2864          
00002C5C  43F9 00003D52           2865  opASRLR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002C62  103C 000E               2866          MOVE.B      #14, D0             ; command for trap call to display message
00002C66  4E4F                    2867          TRAP        #15                 ; trap call
00002C68                          2868  
00002C68  43F9 00003D6F           2869          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C6E  103C 000E               2870          MOVE.B      #14, D0             ; command for trap call to display message
00002C72  4E4F                    2871          TRAP        #15                 ; trap call
00002C74                          2872          
00002C74  4EB9 00002E84           2873          JSR         PrntReg
00002C7A                          2874          
00002C7A  6000 E3C4               2875          BRA         LOOP
00002C7E                          2876  
00002C7E  43F9 00003D56           2877  opASLLR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002C84  103C 000E               2878          MOVE.B      #14, D0             ; command for trap call to display message
00002C88  4E4F                    2879          TRAP        #15                 ; trap call
00002C8A                          2880  
00002C8A  43F9 00003D6F           2881          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C90  103C 000E               2882          MOVE.B      #14, D0             ; command for trap call to display message
00002C94  4E4F                    2883          TRAP        #15                 ; trap call
00002C96                          2884          
00002C96  4EB9 00002E84           2885          JSR         PrntReg
00002C9C                          2886          
00002C9C  6000 E3A2               2887          BRA         LOOP
00002CA0                          2888  
00002CA0  4242                    2889  opLSLI  CLR         D2
00002CA2  3401                    2890          MOVE.W      D1, D2
00002CA4  E042                    2891          ASR         #eight, D2
00002CA6  C47C 0001               2892          AND         #$01, D2
00002CAA                          2893      
00002CAA  B43C 0000               2894          CMP.B       #zero, D2
00002CAE  6700 000E               2895          BEQ         opLSRLI
00002CB2  B43C 0001               2896          CMP.B       #one, D2
00002CB6  6700 0028               2897          BEQ         opLSLLI
00002CBA  6000 0FAA               2898          BRA         printInvalid 
00002CBE                          2899          
00002CBE  43F9 00003D4A           2900  opLSRLI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CC4  103C 000E               2901          MOVE.B      #14, D0             ; command for trap call to display message
00002CC8  4E4F                    2902          TRAP        #15                 ; trap call
00002CCA                          2903  
00002CCA  43F9 00003D6F           2904          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CD0  103C 000E               2905          MOVE.B      #14, D0             ; command for trap call to display message
00002CD4  4E4F                    2906          TRAP        #15                 ; trap call
00002CD6                          2907          
00002CD6  4EB9 00002E28           2908          JSR         PrntImm
00002CDC                          2909          
00002CDC  6000 E362               2910          BRA         LOOP
00002CE0                          2911  
00002CE0                          2912  
00002CE0  43F9 00003D4E           2913  opLSLLI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CE6  103C 000E               2914          MOVE.B      #14, D0             ; command for trap call to display message
00002CEA  4E4F                    2915          TRAP        #15                 ; trap call
00002CEC                          2916  
00002CEC  43F9 00003D6F           2917          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CF2  103C 000E               2918          MOVE.B      #14, D0             ; command for trap call to display message
00002CF6  4E4F                    2919          TRAP        #15                 ; trap call
00002CF8                          2920          
00002CF8  4EB9 00002E28           2921          JSR         PrntImm
00002CFE                          2922          
00002CFE  6000 E340               2923          BRA         LOOP
00002D02                          2924  
00002D02                          2925  
00002D02  4242                    2926  opLSLR  CLR         D2
00002D04  3401                    2927          MOVE.W      D1, D2
00002D06  E042                    2928          ASR         #eight, D2
00002D08  C47C 0001               2929          AND         #$01, D2
00002D0C                          2930      
00002D0C  B43C 0000               2931          CMP.B       #zero, D2
00002D10  6700 000E               2932          BEQ         opLSRLR
00002D14  B43C 0001               2933          CMP.B       #one, D2
00002D18  6700 0028               2934          BEQ         opLSLLR
00002D1C  6000 0F48               2935          BRA         printInvalid 
00002D20                          2936          
00002D20  43F9 00003D4A           2937  opLSRLR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002D26  103C 000E               2938          MOVE.B      #14, D0             ; command for trap call to display message
00002D2A  4E4F                    2939          TRAP        #15                 ; trap call
00002D2C                          2940  
00002D2C  43F9 00003D6F           2941          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D32  103C 000E               2942          MOVE.B      #14, D0             ; command for trap call to display message
00002D36  4E4F                    2943          TRAP        #15                 ; trap call
00002D38                          2944          
00002D38  4EB9 00002E84           2945          JSR         PrntReg
00002D3E                          2946          
00002D3E  6000 E300               2947          BRA         LOOP
00002D42                          2948          
00002D42  43F9 00003D4E           2949  opLSLLR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002D48  103C 000E               2950          MOVE.B      #14, D0             ; command for trap call to display message
00002D4C  4E4F                    2951          TRAP        #15                 ; trap call
00002D4E                          2952  
00002D4E  43F9 00003D6F           2953          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D54  103C 000E               2954          MOVE.B      #14, D0             ; command for trap call to display message
00002D58  4E4F                    2955          TRAP        #15                 ; trap call
00002D5A                          2956          
00002D5A  4EB9 00002E84           2957          JSR         PrntReg
00002D60                          2958          
00002D60  6000 E2DE               2959          BRA         LOOP
00002D64                          2960  
00002D64                          2961  
00002D64                          2962  
00002D64  4242                    2963  opROLI  CLR         D2
00002D66  3401                    2964          MOVE.W      D1, D2
00002D68  E042                    2965          ASR         #eight, D2
00002D6A  C47C 0001               2966          AND         #$01, D2
00002D6E                          2967      
00002D6E  B43C 0000               2968          CMP.B       #zero, D2
00002D72  6700 000E               2969          BEQ         opRORLI
00002D76  B43C 0001               2970          CMP.B       #one, D2
00002D7A  6700 0028               2971          BEQ         opROLLI
00002D7E  6000 0EE6               2972          BRA         printInvalid 
00002D82                          2973          
00002D82  43F9 00003D5A           2974  opRORLI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D88  103C 000E               2975          MOVE.B      #14, D0             ; command for trap call to display message
00002D8C  4E4F                    2976          TRAP        #15                 ; trap call
00002D8E                          2977  
00002D8E  43F9 00003D6F           2978          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D94  103C 000E               2979          MOVE.B      #14, D0             ; command for trap call to display message
00002D98  4E4F                    2980          TRAP        #15                 ; trap call
00002D9A                          2981          
00002D9A  4EB9 00002E28           2982          JSR         PrntImm
00002DA0                          2983          
00002DA0  6000 E29E               2984          BRA         LOOP
00002DA4                          2985  
00002DA4  43F9 00003D5E           2986  opROLLI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DAA  103C 000E               2987          MOVE.B      #14, D0             ; command for trap call to display message
00002DAE  4E4F                    2988          TRAP        #15                 ; trap call
00002DB0                          2989  
00002DB0  43F9 00003D6F           2990          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DB6  103C 000E               2991          MOVE.B      #14, D0             ; command for trap call to display message
00002DBA  4E4F                    2992          TRAP        #15                 ; trap call
00002DBC                          2993          
00002DBC  4EB9 00002E28           2994          JSR         PrntImm
00002DC2                          2995          
00002DC2  6000 E27C               2996          BRA         LOOP
00002DC6                          2997  
00002DC6  4242                    2998  opROLR  CLR         D2
00002DC8  3401                    2999          MOVE.W      D1, D2
00002DCA  E042                    3000          ASR         #eight, D2
00002DCC  C47C 0001               3001          AND         #$01, D2
00002DD0                          3002      
00002DD0  B43C 0000               3003          CMP.B       #zero, D2
00002DD4  6700 000E               3004          BEQ         opRORLR
00002DD8  B43C 0001               3005          CMP.B       #one, D2
00002DDC  6700 0028               3006          BEQ         opROLLR
00002DE0  6000 0E84               3007          BRA         printInvalid     
00002DE4                          3008          
00002DE4  43F9 00003D5A           3009  opRORLR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DEA  103C 000E               3010          MOVE.B      #14, D0             ; command for trap call to display message
00002DEE  4E4F                    3011          TRAP        #15                 ; trap call
00002DF0                          3012  
00002DF0  43F9 00003D6F           3013          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DF6  103C 000E               3014          MOVE.B      #14, D0             ; command for trap call to display message
00002DFA  4E4F                    3015          TRAP        #15                 ; trap call
00002DFC                          3016          
00002DFC  4EB9 00002E84           3017          JSR         PrntReg
00002E02                          3018          
00002E02  6000 E23C               3019          BRA         LOOP
00002E06                          3020  
00002E06  43F9 00003D5E           3021  opROLLR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E0C  103C 000E               3022          MOVE.B      #14, D0             ; command for trap call to display message
00002E10  4E4F                    3023          TRAP        #15                 ; trap call
00002E12                          3024  
00002E12  43F9 00003D6F           3025          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E18  103C 000E               3026          MOVE.B      #14, D0             ; command for trap call to display message
00002E1C  4E4F                    3027          TRAP        #15                 ; trap call
00002E1E                          3028          
00002E1E  4EB9 00002E84           3029          JSR         PrntReg
00002E24                          3030          
00002E24  6000 E21A               3031          BRA         LOOP
00002E28                          3032  * The following subroutine displays the immediate number to shift and the data register that is being shifted. 
00002E28                          3033  * This subroutine calls two printing immediate subroutine first, the the ea print subroutine.        
00002E28  48E7 FF7E               3034  PrntImm MOVEM.L D0-D7/A1-A6, -(SP)
00002E2C                          3035          
00002E2C  43F9 00003CCF           3036          LEA         space, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E32  103C 000E               3037          MOVE.B      #14, D0             ; command for trap call to display message
00002E36  4E4F                    3038          TRAP        #15                 ; trap call
00002E38                          3039          
00002E38  43F9 00003CD2           3040          LEA         hashTag, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E3E  103C 000E               3041          MOVE.B      #14, D0             ; command for trap call to display message
00002E42  4E4F                    3042          TRAP        #15                 ; trap call
00002E44                          3043          
00002E44  4242                    3044          CLR         D2
00002E46  3401                    3045          MOVE.W      D1, D2
00002E48  E042                    3046          ASR         #eight, D2
00002E4A  E242                    3047          ASR         #one, D2
00002E4C  C47C 0007               3048          AND         #$07, D2
00002E50                          3049          
00002E50  4EB9 00002ED6           3050          JSR         MemShiftImm
00002E56                          3051          
00002E56  43F9 00003CD6           3052          LEA         comma, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E5C  103C 000E               3053          MOVE.B      #14, D0             ; command for trap call to display message
00002E60  4E4F                    3054          TRAP        #15                 ; trap call
00002E62                          3055          
00002E62  4242                    3056          CLR         D2
00002E64  4243                    3057          CLR         D3
00002E66  1601                    3058          MOVE.B      D1,D3
00002E68  C67C 0007               3059          AND         #$07, D3
00002E6C                          3060          
00002E6C  4EB9 00002F00           3061          JSR         printEA
00002E72                          3062          
00002E72  43F9 00003CCB           3063          LEA         newLine, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E78  103C 000E               3064          MOVE.B      #14, D0             ; command for trap call to display message
00002E7C  4E4F                    3065          TRAP        #15                 ; trap call
00002E7E                          3066          
00002E7E  4CDF 7EFF               3067          MOVEM.L  (SP)+, D0-D7/A1-A6
00002E82  4E75                    3068          RTS
00002E84                          3069  * The following subroutine determines the correct data register to display, and sets the values of D2 and D3 accordingly to display the data register.
00002E84                          3070  * after setting the values, it calls another subroutine to actually display the data register.        
00002E84  48E7 FF7E               3071  PrntReg MOVEM.L D0-D7/A1-A6, -(SP)
00002E88                          3072          
00002E88  43F9 00003CCF           3073          LEA         space, A1           ; display space
00002E8E  103C 000E               3074          MOVE.B      #14, D0             ; command for trap call to display message
00002E92  4E4F                    3075          TRAP        #15                 ; trap call
00002E94                          3076          
00002E94  4242                    3077          CLR         D2
00002E96  4243                    3078          CLR         D3
00002E98  3601                    3079          MOVE.W      D1, D3
00002E9A  E043                    3080          ASR         #eight, D3
00002E9C  E243                    3081          ASR         #one, D3
00002E9E  C67C 0007               3082          AND         #$07, D3
00002EA2                          3083          
00002EA2  4EB9 00002F00           3084          JSR         printEA
00002EA8                          3085          
00002EA8  43F9 00003CD6           3086          LEA         comma, A1           ; display comma
00002EAE  103C 000E               3087          MOVE.B      #14, D0             ; command for trap call to display message
00002EB2  4E4F                    3088          TRAP        #15                 ; trap call
00002EB4                          3089          
00002EB4  4242                    3090          CLR         D2
00002EB6  4243                    3091          CLR         D3
00002EB8  1601                    3092          MOVE.B      D1,D3
00002EBA  C67C 0007               3093          AND         #$07, D3
00002EBE                          3094          
00002EBE  4EB9 00002F00           3095          JSR         printEA
00002EC4                          3096          
00002EC4  43F9 00003CCB           3097          LEA         newLine, A1         ; newline
00002ECA  103C 000E               3098          MOVE.B      #14, D0             ; command for trap call to display message
00002ECE  4E4F                    3099          TRAP        #15                 ; trap call
00002ED0                          3100          
00002ED0  4CDF 7EFF               3101          MOVEM.L  (SP)+, D0-D7/A1-A6
00002ED4  4E75                    3102          RTS
00002ED6                          3103  * The following subroutine is used to display the number between 1-8 for the bit vount for the shift/rotate opcode
00002ED6                          3104  * It displays it by storing the appropriate number in D1 and running trap task 3.        
00002ED6  48E7 FF7E               3105  MemShiftImm     MOVEM.L D0-D7/A1-A6, -(SP)      ;caller saved data
00002EDA  4241                    3106                  CLR     D1
00002EDC                          3107                  
00002EDC  1202                    3108                  MOVE.B  D2, D1
00002EDE  B23C 0000               3109                  CMP.B   #zero, D1
00002EE2  6700 000C               3110                  BEQ     displayEight
00002EE6                          3111                  
00002EE6  103C 0003               3112                  MOVE.B  #3, D0
00002EEA  4E4F                    3113                  TRAP    #15
00002EEC  6000 000C               3114                  BRA     endSubroutine
00002EF0                          3115                  
00002EF0  123C 0008               3116  displayEight    MOVE.B  #$08, D1
00002EF4  103C 0003               3117                  MOVE.B  #3, D0
00002EF8  4E4F                    3118                  TRAP    #15                
00002EFA                          3119  endSubroutine
00002EFA  4CDF 7EFF               3120                  MOVEM.L  (SP)+, D0-D7/A1-A6     ; recall data
00002EFE  4E75                    3121                  RTS                             ; Return to main routine
00002F00                          3122          
00002F00                          3123  
00002F00                          3124  ***********************************************************************************************************
00002F00                          3125  *
00002F00                          3126  *                                           EA Print Check
00002F00                          3127  *
00002F00                          3128  ***********************************************************************************************************
00002F00  48E7 FF7E               3129  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00002F04                          3130  
00002F04  B43C 0000               3131              CMP.B       #zero, D2
00002F08  6700 002E               3132              BEQ         pDataReg
00002F0C  B43C 0001               3133              CMP.B       #one, D2
00002F10  6700 00E6               3134              BEQ         pAddrReg
00002F14  B43C 0002               3135              CMP.B       #two, D2
00002F18  6700 019E               3136              BEQ         pAddrDir
00002F1C  B43C 0003               3137              CMP.B       #three, D2
00002F20  6700 02C2               3138              BEQ         pAddrPost
00002F24  B43C 0004               3139              CMP.B       #four, D2
00002F28  6700 0446               3140              BEQ         pAddrDec
00002F2C  B43C 0007               3141              CMP.B       #seven, D2
00002F30  6700 0576               3142              BEQ         pHex
00002F34  6000 0642               3143              BRA         invalid
00002F38                          3144  
00002F38                          3145  ***********************************************************************************************************
00002F38                          3146  * Data Register        
00002F38  B63C 0000               3147  pDataReg    CMP.B   #zero,D3
00002F3C  6700 003A               3148              BEQ     displayD0
00002F40  B63C 0001               3149              CMP.B   #one,D3
00002F44  6700 0042               3150              BEQ     displayD1
00002F48  B63C 0002               3151              CMP.B   #two,D3
00002F4C  6700 004A               3152              BEQ     displayD2
00002F50  B63C 0003               3153              CMP.B   #three,D3
00002F54  6700 0052               3154              BEQ     displayD3
00002F58  B63C 0004               3155              CMP.B   #four,D3
00002F5C  6700 005A               3156              BEQ     displayD4
00002F60  B63C 0005               3157              CMP.B   #five,D3
00002F64  6700 0062               3158              BEQ     displayD5
00002F68  B63C 0006               3159              CMP.B   #six,D3
00002F6C  6700 006A               3160              BEQ     displayD6
00002F70  B63C 0007               3161              CMP.B   #seven,D3
00002F74  6700 0072               3162              BEQ     displayD7
00002F78                          3163              
00002F78  43F9 00003D8C           3164  displayD0   LEA         dispD0, A1          ; Display space
00002F7E  103C 000E               3165              MOVE.B      #14, D0             ; command for trap call to display message
00002F82  4E4F                    3166              TRAP        #15                 ; trap call
00002F84  6000 05F2               3167              BRA         endSUB              ; go to the end of the subroutine
00002F88                          3168              
00002F88  43F9 00003D8F           3169  displayD1   LEA         dispD1, A1          ; Display space
00002F8E  103C 000E               3170              MOVE.B      #14, D0             ; command for trap call to display message
00002F92  4E4F                    3171              TRAP        #15                 ; trap call
00002F94  6000 05E2               3172              BRA         endSUB              ; go to the end of the subroutine
00002F98                          3173  
00002F98  43F9 00003D92           3174  displayD2   LEA         dispD2, A1          ; Display space
00002F9E  103C 000E               3175              MOVE.B      #14, D0             ; command for trap call to display message
00002FA2  4E4F                    3176              TRAP        #15                 ; trap call
00002FA4  6000 05D2               3177              BRA         endSUB              ; go to the end of the subroutine
00002FA8                          3178  
00002FA8  43F9 00003D95           3179  displayD3   LEA         dispD3, A1          ; Display space
00002FAE  103C 000E               3180              MOVE.B      #14, D0             ; command for trap call to display message
00002FB2  4E4F                    3181              TRAP        #15                 ; trap call
00002FB4  6000 05C2               3182              BRA         endSUB              ; go to the end of the subroutine
00002FB8                          3183  
00002FB8  43F9 00003D98           3184  displayD4   LEA         dispD4, A1          ; Display space
00002FBE  103C 000E               3185              MOVE.B      #14, D0             ; command for trap call to display message
00002FC2  4E4F                    3186              TRAP        #15                 ; trap call
00002FC4  6000 05B2               3187              BRA         endSUB              ; go to the end of the subroutine
00002FC8                          3188  
00002FC8  43F9 00003D9B           3189  displayD5   LEA         dispD5, A1          ; Display space
00002FCE  103C 000E               3190              MOVE.B      #14, D0             ; command for trap call to display message
00002FD2  4E4F                    3191              TRAP        #15                 ; trap call
00002FD4  6000 05A2               3192              BRA         endSUB              ; go to the end of the subroutine
00002FD8                          3193  
00002FD8  43F9 00003D9E           3194  displayD6   LEA         dispD6, A1          ; Display space
00002FDE  103C 000E               3195              MOVE.B      #14, D0             ; command for trap call to display message
00002FE2  4E4F                    3196              TRAP        #15                 ; trap call
00002FE4  6000 0592               3197              BRA         endSUB              ; go to the end of the subroutine
00002FE8                          3198  
00002FE8  43F9 00003DA1           3199  displayD7   LEA         dispD7, A1          ; Display space
00002FEE  103C 000E               3200              MOVE.B      #14, D0             ; command for trap call to display message
00002FF2  4E4F                    3201              TRAP        #15                 ; trap call
00002FF4  6000 0582               3202              BRA         endSUB              ; go to the end of the subroutine
00002FF8                          3203  ***********************************************************************************************************
00002FF8                          3204  * Address Register
00002FF8  B63C 0000               3205  pAddrReg    CMP.B   #zero,D3
00002FFC  6700 003A               3206              BEQ     displayA0
00003000  B63C 0001               3207              CMP.B   #one,D3
00003004  6700 0042               3208              BEQ     displayA1
00003008  B63C 0002               3209              CMP.B   #two,D3
0000300C  6700 004A               3210              BEQ     displayA2
00003010  B63C 0003               3211              CMP.B   #three,D3
00003014  6700 0052               3212              BEQ     displayA3
00003018  B63C 0004               3213              CMP.B   #four,D3
0000301C  6700 005A               3214              BEQ     displayA4
00003020  B63C 0005               3215              CMP.B   #five,D3
00003024  6700 0062               3216              BEQ     displayA5
00003028  B63C 0006               3217              CMP.B   #six,D3
0000302C  6700 006A               3218              BEQ     displayA6
00003030  B63C 0007               3219              CMP.B   #seven,D3
00003034  6700 0072               3220              BEQ     displayA7
00003038                          3221              
00003038  43F9 00003D72           3222  displayA0   LEA         dispA0, A1          ; Display space
0000303E  103C 000E               3223              MOVE.B      #14, D0             ; command for trap call to display message
00003042  4E4F                    3224              TRAP        #15                 ; trap call
00003044  6000 0532               3225              BRA         endSUB              ; go to the end of the subroutine
00003048                          3226              
00003048  43F9 00003D75           3227  displayA1   LEA         dispA1, A1          ; Display space
0000304E  103C 000E               3228              MOVE.B      #14, D0             ; command for trap call to display message
00003052  4E4F                    3229              TRAP        #15                 ; trap call
00003054  6000 0522               3230              BRA         endSUB              ; go to the end of the subroutine
00003058                          3231  
00003058  43F9 00003D78           3232  displayA2   LEA         dispA2, A1          ; Display space
0000305E  103C 000E               3233              MOVE.B      #14, D0             ; command for trap call to display message
00003062  4E4F                    3234              TRAP        #15                 ; trap call
00003064  6000 0512               3235              BRA         endSUB              ; go to the end of the subroutine
00003068                          3236  
00003068  43F9 00003D7B           3237  displayA3   LEA         dispA3, A1          ; Display space
0000306E  103C 000E               3238              MOVE.B      #14, D0             ; command for trap call to display message
00003072  4E4F                    3239              TRAP        #15                 ; trap call
00003074  6000 0502               3240              BRA         endSUB              ; go to the end of the subroutine
00003078                          3241  
00003078  43F9 00003D7E           3242  displayA4   LEA         dispA4, A1          ; Display space
0000307E  103C 000E               3243              MOVE.B      #14, D0             ; command for trap call to display message
00003082  4E4F                    3244              TRAP        #15                 ; trap call
00003084  6000 04F2               3245              BRA         endSUB              ; go to the end of the subroutine
00003088                          3246  
00003088  43F9 00003D81           3247  displayA5   LEA         dispA5, A1          ; Display space
0000308E  103C 000E               3248              MOVE.B      #14, D0             ; command for trap call to display message
00003092  4E4F                    3249              TRAP        #15                 ; trap call
00003094  6000 04E2               3250              BRA         endSUB              ; go to the end of the subroutine
00003098                          3251  
00003098  43F9 00003D84           3252  displayA6   LEA         dispA6, A1          ; Display space
0000309E  103C 000E               3253              MOVE.B      #14, D0             ; command for trap call to display message
000030A2  4E4F                    3254              TRAP        #15                 ; trap call
000030A4  6000 04D2               3255              BRA         endSUB              ; go to the end of the subroutine
000030A8                          3256  
000030A8  43F9 00003D87           3257  displayA7   LEA         dispA7, A1          ; Display space
000030AE  103C 000E               3258              MOVE.B      #14, D0             ; command for trap call to display message
000030B2  4E4F                    3259              TRAP        #15                 ; trap call
000030B4  6000 04C2               3260              BRA         endSUB              ; go to the end of the subroutine
000030B8                          3261  
000030B8                          3262  ***********************************************************************************************************
000030B8                          3263  * Address Register Direct
000030B8                          3264  
000030B8  43F9 00003CD8           3265  pAddrDir    LEA         opPer, A1           ; Display space
000030BE  103C 000E               3266              MOVE.B      #14, D0             ; command for trap call to display message
000030C2  4E4F                    3267              TRAP        #15                 ; trap call
000030C4                          3268              
000030C4  B63C 0000               3269              CMP.B   #zero,D3
000030C8  6700 003A               3270              BEQ     displayA0A
000030CC  B63C 0001               3271              CMP.B   #one,D3
000030D0  6700 004E               3272              BEQ     displayA1A
000030D4  B63C 0002               3273              CMP.B   #two,D3
000030D8  6700 0062               3274              BEQ     displayA2A
000030DC  B63C 0003               3275              CMP.B   #three,D3
000030E0  6700 0076               3276              BEQ     displayA3A
000030E4  B63C 0004               3277              CMP.B   #four,D3
000030E8  6700 008A               3278              BEQ     displayA4A
000030EC  B63C 0005               3279              CMP.B   #five,D3
000030F0  6700 009E               3280              BEQ     displayA5A
000030F4  B63C 0006               3281              CMP.B   #six,D3
000030F8  6700 00B2               3282              BEQ     displayA6A
000030FC  B63C 0007               3283              CMP.B   #seven,D3
00003100  6700 00C6               3284              BEQ     displayA7A
00003104                          3285              
00003104  43F9 00003D72           3286  displayA0A  LEA         dispA0, A1          ; Display space
0000310A  103C 000E               3287              MOVE.B      #14, D0             ; command for trap call to display message
0000310E  4E4F                    3288              TRAP        #15                 ; trap call
00003110  43F9 00003CDA           3289              LEA         clPer, A1           ; Display space
00003116  103C 000E               3290              MOVE.B      #14, D0             ; command for trap call to display message
0000311A  4E4F                    3291              TRAP        #15                 ; trap call
0000311C  6000 045A               3292              BRA         endSUB              ; go to the end of the subroutine
00003120                          3293              
00003120  43F9 00003D75           3294  displayA1A  LEA         dispA1, A1          ; Display space
00003126  103C 000E               3295              MOVE.B      #14, D0             ; command for trap call to display message
0000312A  4E4F                    3296              TRAP        #15                 ; trap call
0000312C  43F9 00003CDA           3297              LEA         clPer, A1           ; Display space
00003132  103C 000E               3298              MOVE.B      #14, D0             ; command for trap call to display message
00003136  4E4F                    3299              TRAP        #15                 ; trap call
00003138  6000 043E               3300              BRA         endSUB              ; go to the end of the subroutine
0000313C                          3301  
0000313C  43F9 00003D78           3302  displayA2A  LEA         dispA2, A1          ; Display space
00003142  103C 000E               3303              MOVE.B      #14, D0             ; command for trap call to display message
00003146  4E4F                    3304              TRAP        #15                 ; trap call
00003148  43F9 00003CDA           3305              LEA         clPer, A1           ; Display space
0000314E  103C 000E               3306              MOVE.B      #14, D0             ; command for trap call to display message
00003152  4E4F                    3307              TRAP        #15                 ; trap call
00003154  6000 0422               3308              BRA         endSUB              ; go to the end of the subroutine
00003158                          3309  
00003158  43F9 00003D7B           3310  displayA3A  LEA         dispA3, A1          ; Display space
0000315E  103C 000E               3311              MOVE.B      #14, D0             ; command for trap call to display message
00003162  4E4F                    3312              TRAP        #15                 ; trap call
00003164  43F9 00003CDA           3313              LEA         clPer, A1           ; Display space
0000316A  103C 000E               3314              MOVE.B      #14, D0             ; command for trap call to display message
0000316E  4E4F                    3315              TRAP        #15                 ; trap call
00003170  6000 0406               3316              BRA         endSUB              ; go to the end of the subroutine
00003174                          3317  
00003174  43F9 00003D7E           3318  displayA4A  LEA         dispA4, A1          ; Display space
0000317A  103C 000E               3319              MOVE.B      #14, D0             ; command for trap call to display message
0000317E  4E4F                    3320              TRAP        #15                 ; trap call
00003180  43F9 00003CDA           3321              LEA         clPer, A1           ; Display space
00003186  103C 000E               3322              MOVE.B      #14, D0             ; command for trap call to display message
0000318A  4E4F                    3323              TRAP        #15                 ; trap call
0000318C  6000 03EA               3324              BRA         endSUB              ; go to the end of the subroutine
00003190                          3325  
00003190  43F9 00003D81           3326  displayA5A  LEA         dispA5, A1          ; Display space
00003196  103C 000E               3327              MOVE.B      #14, D0             ; command for trap call to display message
0000319A  4E4F                    3328              TRAP        #15                 ; trap call
0000319C  43F9 00003CDA           3329              LEA         clPer, A1           ; Display space
000031A2  103C 000E               3330              MOVE.B      #14, D0             ; command for trap call to display message
000031A6  4E4F                    3331              TRAP        #15                 ; trap call
000031A8  6000 03CE               3332              BRA         endSUB              ; go to the end of the subroutine
000031AC                          3333  
000031AC  43F9 00003D84           3334  displayA6A  LEA         dispA6, A1          ; Display space
000031B2  103C 000E               3335              MOVE.B      #14, D0             ; command for trap call to display message
000031B6  4E4F                    3336              TRAP        #15                 ; trap call
000031B8  43F9 00003CDA           3337              LEA         clPer, A1           ; Display space
000031BE  103C 000E               3338              MOVE.B      #14, D0             ; command for trap call to display message
000031C2  4E4F                    3339              TRAP        #15                 ; trap call
000031C4  6000 03B2               3340              BRA         endSUB              ; go to the end of the subroutine
000031C8                          3341  
000031C8  43F9 00003D87           3342  displayA7A  LEA         dispA7, A1          ; Display space
000031CE  103C 000E               3343              MOVE.B      #14, D0             ; command for trap call to display message
000031D2  4E4F                    3344              TRAP        #15                 ; trap call
000031D4  43F9 00003CDA           3345              LEA         clPer, A1           ; Display space
000031DA  103C 000E               3346              MOVE.B      #14, D0             ; command for trap call to display message
000031DE  4E4F                    3347              TRAP        #15                 ; trap call
000031E0  6000 0396               3348              BRA         endSUB              ; go to the end of the subroutine
000031E4                          3349              
000031E4                          3350  ***********************************************************************************************************
000031E4                          3351  * Addr Postincrement
000031E4                          3352              
000031E4  43F9 00003CD8           3353  pAddrPost   LEA         opPer, A1           ; Display space
000031EA  103C 000E               3354              MOVE.B      #14, D0             ; command for trap call to display message
000031EE  4E4F                    3355              TRAP        #15                 ; trap call
000031F0                          3356              
000031F0  B63C 0000               3357              CMP.B   #zero,D3
000031F4  6700 003A               3358              BEQ     displayA0P
000031F8  B63C 0001               3359              CMP.B   #one,D3
000031FC  6700 005A               3360              BEQ     displayA1P
00003200  B63C 0002               3361              CMP.B   #two,D3
00003204  6700 007A               3362              BEQ     displayA2P
00003208  B63C 0003               3363              CMP.B   #three,D3
0000320C  6700 009A               3364              BEQ     displayA3P
00003210  B63C 0004               3365              CMP.B   #four,D3
00003214  6700 00BA               3366              BEQ     displayA4P
00003218  B63C 0005               3367              CMP.B   #five,D3
0000321C  6700 00DA               3368              BEQ     displayA5P
00003220  B63C 0006               3369              CMP.B   #six,D3
00003224  6700 00FA               3370              BEQ     displayA6P
00003228  B63C 0007               3371              CMP.B   #seven,D3
0000322C  6700 011A               3372              BEQ     displayA7P
00003230                          3373              
00003230  43F9 00003D72           3374  displayA0P  LEA         dispA0, A1          ; Display space
00003236  103C 000E               3375              MOVE.B      #14, D0             ; command for trap call to display message
0000323A  4E4F                    3376              TRAP        #15                 ; trap call
0000323C  43F9 00003CDA           3377              LEA         clPer, A1           ; Display space
00003242  103C 000E               3378              MOVE.B      #14, D0             ; command for trap call to display message
00003246  4E4F                    3379              TRAP        #15                 ; trap call
00003248  43F9 00003CDE           3380              LEA         inc, A1             ; Display space
0000324E  103C 000E               3381              MOVE.B      #14, D0             ; command for trap call to display message
00003252  4E4F                    3382              TRAP        #15                 ; trap call
00003254  6000 0322               3383              BRA         endSUB              ; go to the end of the subroutine
00003258                          3384              
00003258  43F9 00003D75           3385  displayA1P  LEA         dispA1, A1          ; Display space
0000325E  103C 000E               3386              MOVE.B      #14, D0             ; command for trap call to display message
00003262  4E4F                    3387              TRAP        #15                 ; trap call
00003264  43F9 00003CDA           3388              LEA         clPer, A1           ; Display space
0000326A  103C 000E               3389              MOVE.B      #14, D0             ; command for trap call to display message
0000326E  4E4F                    3390              TRAP        #15                 ; trap call
00003270  43F9 00003CDE           3391              LEA         inc, A1             ; Display space
00003276  103C 000E               3392              MOVE.B      #14, D0             ; command for trap call to display message
0000327A  4E4F                    3393              TRAP        #15                 ; trap call
0000327C  6000 02FA               3394              BRA         endSUB              ; go to the end of the subroutine
00003280                          3395  
00003280  43F9 00003D78           3396  displayA2P  LEA         dispA2, A1          ; Display space
00003286  103C 000E               3397              MOVE.B      #14, D0             ; command for trap call to display message
0000328A  4E4F                    3398              TRAP        #15                 ; trap call
0000328C  43F9 00003CDA           3399              LEA         clPer, A1           ; Display space
00003292  103C 000E               3400              MOVE.B      #14, D0             ; command for trap call to display message
00003296  4E4F                    3401              TRAP        #15                 ; trap call
00003298  43F9 00003CDE           3402              LEA         inc, A1             ; Display space
0000329E  103C 000E               3403              MOVE.B      #14, D0             ; command for trap call to display message
000032A2  4E4F                    3404              TRAP        #15                 ; trap call
000032A4  6000 02D2               3405              BRA         endSUB              ; go to the end of the subroutine
000032A8                          3406  
000032A8  43F9 00003D7B           3407  displayA3P  LEA         dispA3, A1          ; Display space
000032AE  103C 000E               3408              MOVE.B      #14, D0             ; command for trap call to display message
000032B2  4E4F                    3409              TRAP        #15                 ; trap call
000032B4  43F9 00003CDA           3410              LEA         clPer, A1           ; Display space
000032BA  103C 000E               3411              MOVE.B      #14, D0             ; command for trap call to display message
000032BE  4E4F                    3412              TRAP        #15                 ; trap call
000032C0  43F9 00003CDE           3413              LEA         inc, A1             ; Display space
000032C6  103C 000E               3414              MOVE.B      #14, D0             ; command for trap call to display message
000032CA  4E4F                    3415              TRAP        #15                 ; trap call
000032CC  6000 02AA               3416              BRA         endSUB              ; go to the end of the subroutine
000032D0                          3417  
000032D0  43F9 00003D7E           3418  displayA4P  LEA         dispA4, A1          ; Display space
000032D6  103C 000E               3419              MOVE.B      #14, D0             ; command for trap call to display message
000032DA  4E4F                    3420              TRAP        #15                 ; trap call
000032DC  43F9 00003CDA           3421              LEA         clPer, A1           ; Display space
000032E2  103C 000E               3422              MOVE.B      #14, D0             ; command for trap call to display message
000032E6  4E4F                    3423              TRAP        #15                 ; trap call
000032E8  43F9 00003CDE           3424              LEA         inc, A1             ; Display space
000032EE  103C 000E               3425              MOVE.B      #14, D0             ; command for trap call to display message
000032F2  4E4F                    3426              TRAP        #15                 ; trap call
000032F4  6000 0282               3427              BRA         endSUB              ; go to the end of the subroutine
000032F8                          3428  
000032F8  43F9 00003D81           3429  displayA5P  LEA         dispA5, A1          ; Display space
000032FE  103C 000E               3430              MOVE.B      #14, D0             ; command for trap call to display message
00003302  4E4F                    3431              TRAP        #15                 ; trap call
00003304  43F9 00003CDA           3432              LEA         clPer, A1           ; Display space
0000330A  103C 000E               3433              MOVE.B      #14, D0             ; command for trap call to display message
0000330E  4E4F                    3434              TRAP        #15                 ; trap call
00003310  43F9 00003CDE           3435              LEA         inc, A1             ; Display space
00003316  103C 000E               3436              MOVE.B      #14, D0             ; command for trap call to display message
0000331A  4E4F                    3437              TRAP        #15                 ; trap call
0000331C  6000 025A               3438              BRA         endSUB              ; go to the end of the subroutine
00003320                          3439  
00003320  43F9 00003D84           3440  displayA6P  LEA         dispA6, A1          ; Display space
00003326  103C 000E               3441              MOVE.B      #14, D0             ; command for trap call to display message
0000332A  4E4F                    3442              TRAP        #15                 ; trap call
0000332C  43F9 00003CDA           3443              LEA         clPer, A1           ; Display space
00003332  103C 000E               3444              MOVE.B      #14, D0             ; command for trap call to display message
00003336  4E4F                    3445              TRAP        #15                 ; trap call
00003338  43F9 00003CDE           3446              LEA         inc, A1             ; Display space
0000333E  103C 000E               3447              MOVE.B      #14, D0             ; command for trap call to display message
00003342  4E4F                    3448              TRAP        #15                 ; trap call
00003344  6000 0232               3449              BRA         endSUB              ; go to the end of the subroutine
00003348                          3450  
00003348  43F9 00003D87           3451  displayA7P  LEA         dispA7, A1          ; Display space
0000334E  103C 000E               3452              MOVE.B      #14, D0             ; command for trap call to display message
00003352  4E4F                    3453              TRAP        #15                 ; trap call
00003354  43F9 00003CDA           3454              LEA         clPer, A1           ; Display space
0000335A  103C 000E               3455              MOVE.B      #14, D0             ; command for trap call to display message
0000335E  4E4F                    3456              TRAP        #15                 ; trap call
00003360  43F9 00003CDE           3457              LEA         inc, A1             ; Display space
00003366  103C 000E               3458              MOVE.B      #14, D0             ; command for trap call to display message
0000336A  4E4F                    3459              TRAP        #15                 ; trap call
0000336C  6000 020A               3460              BRA         endSUB              ; go to the end of the subroutine
00003370                          3461  
00003370                          3462  ***********************************************************************************************************
00003370                          3463  * Addr Postdecrement
00003370                          3464  
00003370  43F9 00003CDC           3465  pAddrDec    LEA         dec, A1             ; Display space
00003376  103C 000E               3466              MOVE.B      #14, D0             ; command for trap call to display message
0000337A  4E4F                    3467              TRAP        #15                 ; trap call
0000337C                          3468              
0000337C  43F9 00003CD8           3469              LEA         opPer, A1           ; Display space
00003382  103C 000E               3470              MOVE.B      #14, D0             ; command for trap call to display message
00003386  4E4F                    3471              TRAP        #15                 ; trap call
00003388                          3472              
00003388  B63C 0000               3473              CMP.B   #zero,D3
0000338C  6700 003A               3474              BEQ     displayA0D
00003390  B63C 0001               3475              CMP.B   #one,D3
00003394  6700 004E               3476              BEQ     displayA1D
00003398  B63C 0002               3477              CMP.B   #two,D3
0000339C  6700 0062               3478              BEQ     displayA2D
000033A0  B63C 0003               3479              CMP.B   #three,D3
000033A4  6700 0076               3480              BEQ     displayA3D
000033A8  B63C 0004               3481              CMP.B   #four,D3
000033AC  6700 008A               3482              BEQ     displayA4D
000033B0  B63C 0005               3483              CMP.B   #five,D3
000033B4  6700 009E               3484              BEQ     displayA5D
000033B8  B63C 0006               3485              CMP.B   #six,D3
000033BC  6700 00B2               3486              BEQ     displayA6D
000033C0  B63C 0007               3487              CMP.B   #seven,D3
000033C4  6700 00C6               3488              BEQ     displayA7D
000033C8                          3489              
000033C8  43F9 00003D72           3490  displayA0D  LEA         dispA0, A1          ; Display space
000033CE  103C 000E               3491              MOVE.B      #14, D0             ; command for trap call to display message
000033D2  4E4F                    3492              TRAP        #15                 ; trap call
000033D4  43F9 00003CDA           3493              LEA         clPer, A1           ; Display space
000033DA  103C 000E               3494              MOVE.B      #14, D0             ; command for trap call to display message
000033DE  4E4F                    3495              TRAP        #15                 ; trap call
000033E0  6000 0196               3496              BRA         endSUB              ; go to the end of the subroutine
000033E4                          3497              
000033E4  43F9 00003D75           3498  displayA1D  LEA         dispA1, A1          ; Display space
000033EA  103C 000E               3499              MOVE.B      #14, D0             ; command for trap call to display message
000033EE  4E4F                    3500              TRAP        #15                 ; trap call
000033F0  43F9 00003CDA           3501              LEA         clPer, A1           ; Display space
000033F6  103C 000E               3502              MOVE.B      #14, D0             ; command for trap call to display message
000033FA  4E4F                    3503              TRAP        #15                 ; trap call
000033FC  6000 017A               3504              BRA         endSUB              ; go to the end of the subroutine
00003400                          3505  
00003400  43F9 00003D78           3506  displayA2D  LEA         dispA2, A1          ; Display space
00003406  103C 000E               3507              MOVE.B      #14, D0             ; command for trap call to display message
0000340A  4E4F                    3508              TRAP        #15                 ; trap call
0000340C  43F9 00003CDA           3509              LEA         clPer, A1           ; Display space
00003412  103C 000E               3510              MOVE.B      #14, D0             ; command for trap call to display message
00003416  4E4F                    3511              TRAP        #15                 ; trap call
00003418  6000 015E               3512              BRA         endSUB              ; go to the end of the subroutine
0000341C                          3513  
0000341C  43F9 00003D7B           3514  displayA3D  LEA         dispA3, A1          ; Display space
00003422  103C 000E               3515              MOVE.B      #14, D0             ; command for trap call to display message
00003426  4E4F                    3516              TRAP        #15                 ; trap call
00003428  43F9 00003CDA           3517              LEA         clPer, A1           ; Display space
0000342E  103C 000E               3518              MOVE.B      #14, D0             ; command for trap call to display message
00003432  4E4F                    3519              TRAP        #15                 ; trap call
00003434  6000 0142               3520              BRA         endSUB              ; go to the end of the subroutine
00003438                          3521  
00003438  43F9 00003D7E           3522  displayA4D  LEA         dispA4, A1          ; Display space
0000343E  103C 000E               3523              MOVE.B      #14, D0             ; command for trap call to display message
00003442  4E4F                    3524              TRAP        #15                 ; trap call
00003444  43F9 00003CDA           3525              LEA         clPer, A1           ; Display space
0000344A  103C 000E               3526              MOVE.B      #14, D0             ; command for trap call to display message
0000344E  4E4F                    3527              TRAP        #15                 ; trap call
00003450  6000 0126               3528              BRA         endSUB              ; go to the end of the subroutine
00003454                          3529  
00003454  43F9 00003D81           3530  displayA5D  LEA         dispA5, A1          ; Display space
0000345A  103C 000E               3531              MOVE.B      #14, D0             ; command for trap call to display message
0000345E  4E4F                    3532              TRAP        #15                 ; trap call
00003460  43F9 00003CDA           3533              LEA         clPer, A1           ; Display space
00003466  103C 000E               3534              MOVE.B      #14, D0             ; command for trap call to display message
0000346A  4E4F                    3535              TRAP        #15                 ; trap call
0000346C  6000 010A               3536              BRA         endSUB              ; go to the end of the subroutine
00003470                          3537  
00003470  43F9 00003D84           3538  displayA6D  LEA         dispA6, A1          ; Display space
00003476  103C 000E               3539              MOVE.B      #14, D0             ; command for trap call to display message
0000347A  4E4F                    3540              TRAP        #15                 ; trap call
0000347C  43F9 00003CDA           3541              LEA         clPer, A1           ; Display space
00003482  103C 000E               3542              MOVE.B      #14, D0             ; command for trap call to display message
00003486  4E4F                    3543              TRAP        #15                 ; trap call
00003488  6000 00EE               3544              BRA         endSUB              ; go to the end of the subroutine
0000348C                          3545  
0000348C  43F9 00003D87           3546  displayA7D  LEA         dispA7, A1          ; Display space
00003492  103C 000E               3547              MOVE.B      #14, D0             ; command for trap call to display message
00003496  4E4F                    3548              TRAP        #15                 ; trap call
00003498  43F9 00003CDA           3549              LEA         clPer, A1           ; Display space
0000349E  103C 000E               3550              MOVE.B      #14, D0             ; command for trap call to display message
000034A2  4E4F                    3551              TRAP        #15                 ; trap call
000034A4  6000 00D2               3552              BRA         endSUB              ; go to the end of the subroutine
000034A8                          3553  ***********************************************************************************************************
000034A8                          3554  * Display Hex
000034A8                          3555  
000034A8  B63C 0000               3556  pHex        CMP.B       #zero, D3
000034AC  6700 0012               3557              BEQ         AbsShort
000034B0  B63C 0001               3558              CMP.B       #one, D3
000034B4  6700 0042               3559              BEQ         AbsLong
000034B8  B63C 0004               3560              CMP.B       #four, D3
000034BC  6700 0072               3561              BEQ         DispImm
000034C0                          3562              
000034C0  43F9 00003CD8           3563  AbsShort    LEA         opPer, A1           ; Display space
000034C6  103C 000E               3564              MOVE.B      #14, D0             ; command for trap call to display message
000034CA  4E4F                    3565              TRAP        #15                 ; trap call
000034CC                          3566              
000034CC  43F9 00003CD4           3567              LEA         dispHex, A1         ; Display space
000034D2  103C 000E               3568              MOVE.B      #14, D0             ; command for trap call to display message
000034D6  4E4F                    3569              TRAP        #15                 ; trap call
000034D8                          3570              
000034D8  4241                    3571              CLR         D1
000034DA  3218                    3572              MOVE.W      (A0)+, D1
000034DC  4240                    3573              CLR         D0
000034DE  103C 0004               3574              MOVE.B      #4, D0
000034E2                          3575              
000034E2  4EB9 00003AA0           3576              JSR         outHex
000034E8                          3577              
000034E8  43F9 00003CDA           3578              LEA         clPer, A1           ; Display space
000034EE  103C 000E               3579              MOVE.B      #14, D0             ; command for trap call to display message
000034F2  4E4F                    3580              TRAP        #15                 ; trap call
000034F4                          3581              
000034F4  6000 0082               3582              BRA         endSub
000034F8                          3583              
000034F8  43F9 00003CD8           3584  AbsLong     LEA         opPer, A1           ; Display space
000034FE  103C 000E               3585              MOVE.B      #14, D0             ; command for trap call to display message
00003502  4E4F                    3586              TRAP        #15                 ; trap call
00003504                          3587              
00003504  43F9 00003CD4           3588              LEA         dispHex, A1         ; Display space
0000350A  103C 000E               3589              MOVE.B      #14, D0             ; command for trap call to display message
0000350E  4E4F                    3590              TRAP        #15                 ; trap call
00003510                          3591              
00003510  4241                    3592              CLR         D1
00003512  2218                    3593              MOVE.L      (A0)+, D1
00003514  4240                    3594              CLR         D0
00003516  103C 0008               3595              MOVE.B      #8, D0
0000351A                          3596              
0000351A  4EB9 00003AA0           3597              JSR         outHex
00003520                          3598              
00003520  43F9 00003CDA           3599              LEA         clPer, A1           ; Display space
00003526  103C 000E               3600              MOVE.B      #14, D0             ; command for trap call to display message
0000352A  4E4F                    3601              TRAP        #15                 ; trap call
0000352C                          3602              
0000352C  6000 004A               3603              BRA         endSub
00003530                          3604  
00003530  43F9 00003CD2           3605  DispImm     LEA         hashTag, A1         ; Display space
00003536  103C 000E               3606              MOVE.B      #14, D0             ; command for trap call to display message
0000353A  4E4F                    3607              TRAP        #15                 ; trap call
0000353C                          3608  
0000353C  43F9 00003CD4           3609              LEA         dispHex, A1         ; Display space
00003542  103C 000E               3610              MOVE.B      #14, D0             ; command for trap call to display message
00003546  4E4F                    3611              TRAP        #15                 ; trap call
00003548                          3612              
00003548  BC3C 0001               3613              CMP.B       #1,D6
0000354C  6700 0016               3614              BEQ         ImmLong
00003550                          3615              
00003550  4241                    3616              CLR         D1
00003552  3218                    3617              MOVE.W      (A0)+, D1
00003554  4240                    3618              CLR         D0
00003556  103C 0004               3619              MOVE.B      #4, D0
0000355A  4EB9 00003AA0           3620              JSR         outHex
00003560  6000 0012               3621              BRA         LongSkip
00003564                          3622              
00003564  4241                    3623  ImmLong     CLR         D1
00003566  2218                    3624              MOVE.L      (A0)+, D1
00003568  4240                    3625              CLR         D0
0000356A  103C 0008               3626              MOVE.B      #8, D0
0000356E  4EB9 00003AA0           3627              JSR         outHex             
00003574                          3628  
00003574                          3629  LongSkip
00003574  6000 0002               3630              BRA         endSub
00003578                          3631  invalid
00003578                          3632  
00003578                          3633  endSUB
00003578                          3634          
00003578  4CDF 7EFF               3635              MOVEM.L  (SP)+, D0-D7/A1-A6
0000357C  4E75                    3636              RTS
0000357E                          3637  
0000357E                          3638  ***********************************************************************************************************
0000357E                          3639  ***********************************************************************************************************
0000357E                          3640  ***********************************************************************************************************
0000357E                          3641  
0000357E  48E7 FF7E               3642  MOVEMBRA    MOVEM.L  D0-D7/A1-A6, -(SP)     ; Branches off depending on size bit
00003582  BA7C 0000               3643              CMP      #zero,D5
00003586  6700 000A               3644              BEQ      MOVEMW
0000358A  BA7C 0001               3645              CMP      #one, D5
0000358E  6700 001E               3646              BEQ      MOVEML
00003592                          3647              
00003592                          3648  MOVEMW     
00003592  43F9 00003D6C           3649              LEA         dispWord, A1        ; we know that the opcode will be ROR, so load A1 to print message
00003598  103C 000E               3650              MOVE.B      #14, D0             ; command for trap call to display message
0000359C  4E4F                    3651              TRAP        #15                 ; trap call
0000359E                          3652  
0000359E  43F9 00003CCF           3653              LEA         space, A1           ; we know that the opcode will be ROR, so load A1 to print message
000035A4  103C 000E               3654              MOVE.B      #14, D0             ; command for trap call to display message
000035A8  4E4F                    3655              TRAP        #15                 ; trap call
000035AA                          3656              
000035AA  6000 001E               3657              BRA         CheckDR
000035AE                          3658  
000035AE                          3659  MOVEML   
000035AE  43F9 00003D6F           3660              LEA         dispLong, A1        ; we know that the opcode will be ROR, so load A1 to print message
000035B4  103C 000E               3661              MOVE.B      #14, D0             ; command for trap call to display message
000035B8  4E4F                    3662              TRAP        #15                 ; trap call
000035BA                          3663  
000035BA  43F9 00003CCF           3664              LEA         space, A1        ; we know that the opcode will be ROR, so load A1 to print message
000035C0  103C 000E               3665              MOVE.B      #14, D0             ; command for trap call to display message
000035C4  4E4F                    3666              TRAP        #15                 ; trap call
000035C6                          3667           
000035C6                          3668  
000035C6  6000 0002               3669              BRA         CheckDR
000035CA                          3670  
000035CA                          3671  CheckDR     
000035CA                          3672              
000035CA                          3673                
000035CA  3218                    3674              MOVE.W      (A0)+, D1           ; Taking in next word
000035CC  BC7C 0000               3675              CMP         #zero,D6
000035D0  6700 0020               3676              BEQ         printRegMem
000035D4  BC7C 0001               3677              CMP         #one,D6
000035D8  6700 0004               3678              BEQ         printStack
000035DC  609A                    3679              BRA         invalid
000035DE                          3680              
000035DE                          3681  printStack 
000035DE  4EB8 2F00               3682              JSR         printEA
000035E2                          3683              
000035E2  43F9 00003CD6           3684              LEA         comma,A1
000035E8  103C 000E               3685              MOVE.B      #14, D0             ; command for trap call to display message
000035EC  4E4F                    3686              TRAP        #15                 ; trap call
000035EE                          3687              
000035EE                          3688              
000035EE  6000 0002               3689              BRA         printRegMem
000035F2                          3690             
000035F2                          3691  printRegMem 
000035F2  4244                    3692              CLR         D4                  ; Using D4 to store predecrement mode addresses
000035F4  1801                    3693              MOVE.B      D1,D4               ; Stores bits for D0-D7
000035F6                          3694              
000035F6  4245                    3695              CLR         D5
000035F8  1A01                    3696              MOVE.B      D1,D5
000035FA  CA7C 0001               3697              AND         #mask1,D5
000035FE  BA7C 0001               3698              CMP         #mask1,D5
00003602  6700 007A               3699              BEQ         DataReg0
00003606                          3700              
00003606  4245                    3701              CLR         D5
00003608  1A01                    3702              MOVE.B      D1,D5
0000360A  CA7C 0002               3703              AND         #mask2,D5
0000360E  BA7C 0002               3704              CMP         #mask2,D5
00003612  6700 009A               3705              BEQ         DataReg1
00003616                          3706  
00003616  4245                    3707              CLR         D5
00003618  1A01                    3708              MOVE.B      D1,D5
0000361A  CA7C 0004               3709              AND         #mask3,D5
0000361E  BA7C 0004               3710              CMP         #mask3,D5
00003622  6700 00CA               3711              BEQ         DataReg2            
00003626                          3712              
00003626  4245                    3713              CLR         D5
00003628  1A01                    3714              MOVE.B      D1,D5
0000362A  CA7C 0008               3715              AND         #mask4,D5
0000362E  BA7C 0008               3716              CMP         #mask4,D5
00003632  6700 00FA               3717              BEQ         DataReg3            
00003636                          3718              
00003636  4245                    3719              CLR         D5
00003638  1A01                    3720              MOVE.B      D1,D5
0000363A  CA7C 0010               3721              AND         #mask5,D5
0000363E  BA7C 0010               3722              CMP         #mask5,D5
00003642  6700 012A               3723              BEQ         DataReg4
00003646                          3724  
00003646  4245                    3725              CLR         D5
00003648  1A01                    3726              MOVE.B      D1,D5
0000364A  CA7C 0020               3727              AND         #mask6,D5
0000364E  BA7C 0020               3728              CMP         #mask6,D5
00003652  6700 015A               3729              BEQ         DataReg5
00003656                          3730  
00003656  4245                    3731              CLR         D5
00003658  1A01                    3732              MOVE.B      D1,D5
0000365A  CA7C 0040               3733              AND         #mask7,D5
0000365E  BA7C 0040               3734              CMP         #mask7,D5
00003662  6700 018A               3735              BEQ         DataReg6
00003666                          3736  
00003666  4245                    3737              CLR         D5
00003668  1A01                    3738              MOVE.B      D1,D5
0000366A  CA7C 0080               3739              AND         #mask8,D5
0000366E  BA7C 0080               3740              CMP         #mask8,D5
00003672  6700 01BA               3741              BEQ         DataReg7
00003676                          3742              
00003676  6000 FF00               3743              BRA         invalid
0000367A  6000 FEFC               3744              BRA         invalid        
0000367E                          3745              
0000367E                          3746  DataReg0
0000367E  43F9 00003D8C           3747              LEA         dispD0, A1          ; Output string D0
00003684  103C 000E               3748              MOVE.B      #14, D0             ; command for trap call to display message
00003688  4E4F                    3749              TRAP        #15                 ; trap call
0000368A                          3750              
0000368A  4245                    3751              CLR         D5
0000368C  1A01                    3752              MOVE.B      D1,D5
0000368E  CA7C 0002               3753              AND         #mask2,D5
00003692  BA7C 0002               3754              CMP         #mask2,D5
00003696  6700 0006               3755              BEQ         Reg0Cont
0000369A  6000 01A2               3756              BRA         printMem
0000369E                          3757  Reg0Cont        
0000369E  43F9 00003CDC           3758              LEA         dec, A1             ; Output -
000036A4  103C 000E               3759              MOVE.B      #14, D0             ; command for trap call to display message
000036A8  4E4F                    3760              TRAP        #15                 ; trap call        
000036AA  6000 0002               3761              BRA         DataReg1
000036AE                          3762  
000036AE                          3763  DataReg1
000036AE  4245                    3764              CLR         D5
000036B0  1A01                    3765              MOVE.B      D1,D5
000036B2  CA7C 0005               3766              AND         #maskA,D5
000036B6  BA7C 0005               3767              CMP         #maskA,D5
000036BA  6700 0032               3768              BEQ         DataReg2
000036BE                          3769              
000036BE  43F9 00003D8F           3770              LEA         dispD1, A1          ; Output string D0
000036C4  103C 000E               3771              MOVE.B      #14, D0             ; command for trap call to display message
000036C8  4E4F                    3772              TRAP        #15                 ; trap call
000036CA                          3773              
000036CA  4245                    3774              CLR         D5
000036CC  1A01                    3775              MOVE.B      D1,D5
000036CE  CA7C 0004               3776              AND         #mask3,D5
000036D2  BA7C 0004               3777              CMP         #mask3,D5
000036D6  6700 0006               3778              BEQ         Reg1Cont
000036DA  6000 0162               3779              BRA         printMem
000036DE                          3780  Reg1Cont        
000036DE  43F9 00003CDC           3781              LEA         dec, A1             ; Output -
000036E4  103C 000E               3782              MOVE.B      #14, D0             ; command for trap call to display message
000036E8  4E4F                    3783              TRAP        #15                 ; trap call        
000036EA  6000 0002               3784              BRA         DataReg2
000036EE                          3785  
000036EE                          3786  
000036EE                          3787  DataReg2
000036EE  4245                    3788              CLR         D5
000036F0  1A01                    3789              MOVE.B      D1,D5
000036F2  CA7C 000A               3790              AND         #maskB,D5
000036F6  BA7C 000A               3791              CMP         #maskB,D5
000036FA  6700 0032               3792              BEQ         DataReg3
000036FE                          3793              
000036FE                          3794              
000036FE  43F9 00003D92           3795              LEA         dispD2, A1          ; Output string D0
00003704  103C 000E               3796              MOVE.B      #14, D0             ; command for trap call to display message
00003708  4E4F                    3797              TRAP        #15                 ; trap call
0000370A                          3798              
0000370A  4245                    3799              CLR         D5
0000370C  1A01                    3800              MOVE.B      D1,D5
0000370E  CA7C 0008               3801              AND         #mask4,D5
00003712  BA7C 0008               3802              CMP         #mask4,D5
00003716  6700 0006               3803              BEQ         Reg2Cont
0000371A  6000 0122               3804              BRA         printMem
0000371E                          3805  Reg2Cont        
0000371E  43F9 00003CDC           3806              LEA         dec, A1             ; Output -
00003724  103C 000E               3807              MOVE.B      #14, D0             ; command for trap call to display message
00003728  4E4F                    3808              TRAP        #15                 ; trap call        
0000372A  6000 0002               3809              BRA         DataReg3
0000372E                          3810  
0000372E                          3811  DataReg3
0000372E  4245                    3812              CLR         D5
00003730  1A01                    3813              MOVE.B      D1,D5
00003732  CA7C 0014               3814              AND         #maskC,D5
00003736  BA7C 0014               3815              CMP         #maskC,D5
0000373A  6700 0032               3816              BEQ         DataReg4
0000373E                          3817              
0000373E  43F9 00003D95           3818              LEA         dispD3, A1          ; Output string D0
00003744  103C 000E               3819              MOVE.B      #14, D0             ; command for trap call to display message
00003748  4E4F                    3820              TRAP        #15                 ; trap call
0000374A                          3821              
0000374A  4245                    3822              CLR         D5
0000374C  1A01                    3823              MOVE.B      D1,D5
0000374E  CA7C 0010               3824              AND         #mask5,D5
00003752  BA7C 0010               3825              CMP         #mask5,D5
00003756  6700 0006               3826              BEQ         Reg3Cont
0000375A  6000 00E2               3827              BRA         printMem
0000375E                          3828  Reg3Cont        
0000375E  43F9 00003CDC           3829              LEA         dec, A1             ; Output -
00003764  103C 000E               3830              MOVE.B      #14, D0             ; command for trap call to display message
00003768  4E4F                    3831              TRAP        #15                 ; trap call        
0000376A  6000 0002               3832              BRA         DataReg4
0000376E                          3833  
0000376E                          3834  
0000376E                          3835  DataReg4
0000376E  4245                    3836              CLR         D5
00003770  1A01                    3837              MOVE.B      D1,D5
00003772  CA7C 0028               3838              AND         #maskD,D5
00003776  BA7C 0028               3839              CMP         #maskD,D5
0000377A  6700 0032               3840              BEQ         DataReg5
0000377E                          3841              
0000377E  43F9 00003D98           3842              LEA         dispD4, A1          ; Output string D0
00003784  103C 000E               3843              MOVE.B      #14, D0             ; command for trap call to display message
00003788  4E4F                    3844              TRAP        #15                 ; trap call
0000378A                          3845              
0000378A  4245                    3846              CLR         D5
0000378C  1A01                    3847              MOVE.B      D1,D5
0000378E  CA7C 0020               3848              AND         #mask6,D5
00003792  BA7C 0020               3849              CMP         #mask6,D5
00003796  6700 0006               3850              BEQ         Reg4Cont
0000379A  6000 00A2               3851              BRA         printMem
0000379E                          3852  Reg4Cont        
0000379E  43F9 00003CDC           3853              LEA         dec, A1             ; Output -
000037A4  103C 000E               3854              MOVE.B      #14, D0             ; command for trap call to display message
000037A8  4E4F                    3855              TRAP        #15                 ; trap call        
000037AA  6000 0002               3856              BRA         DataReg5
000037AE                          3857  
000037AE                          3858  DataReg5
000037AE  4245                    3859              CLR         D5
000037B0  1A01                    3860              MOVE.B      D1,D5
000037B2  CA7C 0050               3861              AND         #maskE,D5
000037B6  BA7C 0050               3862              CMP         #maskE,D5
000037BA  6700 0032               3863              BEQ         DataReg6
000037BE                          3864              
000037BE  43F9 00003D9B           3865              LEA         dispD5, A1          ; Output string D0
000037C4  103C 000E               3866              MOVE.B      #14, D0             ; command for trap call to display message
000037C8  4E4F                    3867              TRAP        #15                 ; trap call
000037CA                          3868              
000037CA  4245                    3869              CLR         D5
000037CC  1A01                    3870              MOVE.B      D1,D5
000037CE  CA7C 0040               3871              AND         #mask7,D5
000037D2  BA7C 0040               3872              CMP         #mask7,D5
000037D6  6700 0006               3873              BEQ         Reg5Cont
000037DA  6000 0062               3874              BRA         printMem
000037DE                          3875  Reg5Cont        
000037DE  43F9 00003CDC           3876              LEA         dec, A1             ; Output -
000037E4  103C 000E               3877              MOVE.B      #14, D0             ; command for trap call to display message
000037E8  4E4F                    3878              TRAP        #15                 ; trap call        
000037EA  6000 0042               3879              BRA         DataReg7
000037EE                          3880  
000037EE                          3881  DataReg6
000037EE  4245                    3882              CLR         D5
000037F0  1A01                    3883              MOVE.B      D1,D5
000037F2  CA7C 00A0               3884              AND         #maskF,D5
000037F6  BA7C 00A0               3885              CMP         #maskF,D5
000037FA  6700 0032               3886              BEQ         DataReg7
000037FE                          3887  
000037FE  43F9 00003D9E           3888              LEA         dispD6, A1          ; Output string D0
00003804  103C 000E               3889              MOVE.B      #14, D0             ; command for trap call to display message
00003808  4E4F                    3890              TRAP        #15                 ; trap call
0000380A                          3891              
0000380A  4245                    3892              CLR         D5
0000380C  1A01                    3893              MOVE.B      D1,D5
0000380E  CA7C 0080               3894              AND         #mask8,D5
00003812  BA7C 0080               3895              CMP         #mask8,D5
00003816  6700 0006               3896              BEQ         Reg6Cont
0000381A  6000 0022               3897              BRA         printMem
0000381E                          3898  Reg6Cont        
0000381E  43F9 00003CDC           3899              LEA         dec, A1             ; Output -
00003824  103C 000E               3900              MOVE.B      #14, D0             ; command for trap call to display message
00003828  4E4F                    3901              TRAP        #15                 ; trap call        
0000382A  6000 0002               3902              BRA         DataReg7
0000382E                          3903  
0000382E                          3904  DataReg7    
0000382E  43F9 00003DA1           3905              LEA         dispD7, A1             ; Output -
00003834  103C 000E               3906              MOVE.B      #14, D0             ; command for trap call to display message
00003838  4E4F                    3907              TRAP        #15                 ; trap call        
0000383A  6000 0002               3908              BRA         printMem            
0000383E                          3909  printMem                                    ; Made this function in order to reuse if DR is 1
0000383E  6000 0002               3910              BRA         printMemNow
00003842                          3911  printMemNow               
00003842  43F9 00003D62           3912              LEA         slash, A1           ; Display slash
00003848  103C 000E               3913              MOVE.B      #14, D0             ; command for trap call to display message
0000384C  4E4F                    3914              TRAP        #15                 ; trap call
0000384E                          3915           
0000384E  4244                    3916              CLR         D4                  ; Using D4 to store predecrement mode addresses
00003850  3801                    3917              MOVE.W      D1,D4               ; Stores bits for D0-D7
00003852  E044                    3918              ASR         #eight,D4
00003854                          3919              
00003854  4245                    3920              CLR         D5
00003856  1A04                    3921              MOVE.B      D4,D5
00003858  CA7C 0001               3922              AND         #mask1,D5
0000385C  BA7C 0001               3923              CMP         #mask1,D5
00003860  6700 0072               3924              BEQ         AddrReg0
00003864                          3925              
00003864  4245                    3926              CLR         D5
00003866  1A04                    3927              MOVE.B      D4,D5
00003868  CA7C 0002               3928              AND         #mask2,D5
0000386C  BA7C 0002               3929              CMP         #mask2,D5
00003870  6700 0092               3930              BEQ         AddrReg1
00003874                          3931  
00003874  4245                    3932              CLR         D5
00003876  1A04                    3933              MOVE.B      D4,D5
00003878  CA7C 0004               3934              AND         #mask3,D5
0000387C  BA7C 0004               3935              CMP         #mask3,D5
00003880  6700 00C2               3936              BEQ         AddrReg2            
00003884                          3937              
00003884  4245                    3938              CLR         D5
00003886  1A04                    3939              MOVE.B      D4,D5
00003888  CA7C 0008               3940              AND         #mask4,D5
0000388C  BA7C 0008               3941              CMP         #mask4,D5
00003890  6700 00F2               3942              BEQ         AddrReg3            
00003894                          3943              
00003894  4245                    3944              CLR         D5
00003896  1A04                    3945              MOVE.B      D4,D5
00003898  CA7C 0010               3946              AND         #mask5,D5
0000389C  BA7C 0010               3947              CMP         #mask5,D5
000038A0  6700 0122               3948              BEQ         AddrReg4
000038A4                          3949  
000038A4  4245                    3950              CLR         D5
000038A6  1A04                    3951              MOVE.B      D4,D5
000038A8  CA7C 0020               3952              AND         #mask6,D5
000038AC  BA7C 0020               3953              CMP         #mask6,D5
000038B0  6700 0152               3954              BEQ         AddrReg5
000038B4                          3955  
000038B4  4245                    3956              CLR         D5
000038B6  1A04                    3957              MOVE.B      D4,D5
000038B8  CA7C 0040               3958              AND         #mask7,D5
000038BC  BA7C 0040               3959              CMP         #mask7,D5
000038C0  6700 0182               3960              BEQ         AddrReg6
000038C4                          3961  
000038C4  4245                    3962              CLR         D5
000038C6  1A04                    3963              MOVE.B      D4,D5
000038C8  CA7C 0080               3964              AND         #mask8,D5
000038CC  BA7C 0080               3965              CMP         #mask8,D5
000038D0  6700 01B2               3966              BEQ         AddrReg7
000038D4                          3967  AddrReg0
000038D4  43F9 00003D72           3968              LEA         dispA0, A1          ; Output string D0
000038DA  103C 000E               3969              MOVE.B      #14, D0             ; command for trap call to display message
000038DE  4E4F                    3970              TRAP        #15                 ; trap call
000038E0                          3971              
000038E0  4245                    3972              CLR         D5
000038E2  1A01                    3973              MOVE.B      D1,D5
000038E4  CA7C 0002               3974              AND         #mask2,D5
000038E8  BA7C 0002               3975              CMP         #mask2,D5
000038EC  6700 0006               3976              BEQ         Addr0Cont
000038F0  6000 01A2               3977              BRA         endMOVE
000038F4                          3978  Addr0Cont        
000038F4  43F9 00003CDC           3979              LEA         dec, A1             ; Output -
000038FA  103C 000E               3980              MOVE.B      #14, D0             ; command for trap call to display message
000038FE  4E4F                    3981              TRAP        #15                 ; trap call        
00003900  6000 0002               3982              BRA         AddrReg1
00003904                          3983  
00003904                          3984  AddrReg1
00003904  4245                    3985              CLR         D5
00003906  1A04                    3986              MOVE.B      D4,D5
00003908  CA7C 0005               3987              AND         #maskA,D5
0000390C  BA7C 0005               3988              CMP         #maskA,D5
00003910  6700 0032               3989              BEQ         AddrReg2
00003914                          3990              
00003914  43F9 00003D75           3991              LEA         dispA1, A1          ; Output string D0
0000391A  103C 000E               3992              MOVE.B      #14, D0             ; command for trap call to display message
0000391E  4E4F                    3993              TRAP        #15                 ; trap call
00003920                          3994              
00003920  4245                    3995              CLR         D5
00003922  1A04                    3996              MOVE.B      D4,D5
00003924  CA7C 0004               3997              AND         #mask3,D5
00003928  BA7C 0004               3998              CMP         #mask3,D5
0000392C  6700 0006               3999              BEQ         Addr1Cont
00003930  6000 0162               4000              BRA         endMOVE
00003934                          4001  Addr1Cont        
00003934  43F9 00003CDC           4002              LEA         dec, A1             ; Output -
0000393A  103C 000E               4003              MOVE.B      #14, D0             ; command for trap call to display message
0000393E  4E4F                    4004              TRAP        #15                 ; trap call        
00003940  6000 0002               4005              BRA         AddrReg2
00003944                          4006  
00003944                          4007  
00003944                          4008  AddrReg2
00003944  4245                    4009              CLR         D5
00003946  1A04                    4010              MOVE.B      D4,D5
00003948  CA7C 000A               4011              AND         #maskB,D5
0000394C  BA7C 000A               4012              CMP         #maskB,D5
00003950  6700 0032               4013              BEQ         AddrReg3
00003954                          4014              
00003954                          4015              
00003954  43F9 00003D78           4016              LEA         dispA2, A1          ; Output string D0
0000395A  103C 000E               4017              MOVE.B      #14, D0             ; command for trap call to display message
0000395E  4E4F                    4018              TRAP        #15                 ; trap call
00003960                          4019              
00003960  4245                    4020              CLR         D5
00003962  1A04                    4021              MOVE.B      D4,D5
00003964  CA7C 0008               4022              AND         #mask4,D5
00003968  BA7C 0008               4023              CMP         #mask4,D5
0000396C  6700 0006               4024              BEQ         Addr2Cont
00003970  6000 0122               4025              BRA         endMOVE
00003974                          4026  Addr2Cont        
00003974  43F9 00003CDC           4027              LEA         dec, A1             ; Output -
0000397A  103C 000E               4028              MOVE.B      #14, D0             ; command for trap call to display message
0000397E  4E4F                    4029              TRAP        #15                 ; trap call        
00003980  6000 0002               4030              BRA         AddrReg3
00003984                          4031  
00003984                          4032  AddrReg3
00003984  4245                    4033              CLR         D5
00003986  1A04                    4034              MOVE.B      D4,D5
00003988  CA7C 0014               4035              AND         #maskC,D5
0000398C  BA7C 0014               4036              CMP         #maskC,D5
00003990  6700 0032               4037              BEQ         AddrReg4
00003994                          4038              
00003994  43F9 00003D7B           4039              LEA         dispA3, A1          ; Output string D0
0000399A  103C 000E               4040              MOVE.B      #14, D0             ; command for trap call to display message
0000399E  4E4F                    4041              TRAP        #15                 ; trap call
000039A0                          4042              
000039A0  4245                    4043              CLR         D5
000039A2  1A04                    4044              MOVE.B      D4,D5
000039A4  CA7C 0010               4045              AND         #mask5,D5
000039A8  BA7C 0010               4046              CMP         #mask5,D5
000039AC  6700 0006               4047              BEQ         Addr3Cont
000039B0  6000 00E2               4048              BRA         endMOVE
000039B4                          4049  Addr3Cont        
000039B4  43F9 00003CDC           4050              LEA         dec, A1             ; Output -
000039BA  103C 000E               4051              MOVE.B      #14, D0             ; command for trap call to display message
000039BE  4E4F                    4052              TRAP        #15                 ; trap call        
000039C0  6000 0002               4053              BRA         AddrReg4
000039C4                          4054  
000039C4                          4055  
000039C4                          4056  AddrReg4
000039C4  4245                    4057              CLR         D5
000039C6  1A04                    4058              MOVE.B      D4,D5
000039C8  CA7C 0028               4059              AND         #maskD,D5
000039CC  BA7C 0028               4060              CMP         #maskD,D5
000039D0  6700 0032               4061              BEQ         AddrReg5
000039D4                          4062              
000039D4  43F9 00003D7E           4063              LEA         dispA4, A1          ; Output string D0
000039DA  103C 000E               4064              MOVE.B      #14, D0             ; command for trap call to display message
000039DE  4E4F                    4065              TRAP        #15                 ; trap call
000039E0                          4066              
000039E0  4245                    4067              CLR         D5
000039E2  1A04                    4068              MOVE.B      D4,D5
000039E4  CA7C 0020               4069              AND         #mask6,D5
000039E8  BA7C 0020               4070              CMP         #mask6,D5
000039EC  6700 0006               4071              BEQ         Addr4Cont
000039F0  6000 00A2               4072              BRA         endMOVE
000039F4                          4073  Addr4Cont        
000039F4  43F9 00003CDC           4074              LEA         dec, A1             ; Output -
000039FA  103C 000E               4075              MOVE.B      #14, D0             ; command for trap call to display message
000039FE  4E4F                    4076              TRAP        #15                 ; trap call        
00003A00  6000 0002               4077              BRA         AddrReg5
00003A04                          4078  AddrReg5
00003A04  4245                    4079              CLR         D5
00003A06  1A04                    4080              MOVE.B      D4,D5
00003A08  CA7C 0050               4081              AND         #maskE,D5
00003A0C  BA7C 0050               4082              CMP         #maskE,D5
00003A10  6700 0032               4083              BEQ         AddrReg6
00003A14                          4084              
00003A14  43F9 00003D81           4085              LEA         dispA5, A1          ; Output string D0
00003A1A  103C 000E               4086              MOVE.B      #14, D0             ; command for trap call to display message
00003A1E  4E4F                    4087              TRAP        #15                 ; trap call
00003A20                          4088              
00003A20  4245                    4089              CLR         D5
00003A22  1A04                    4090              MOVE.B      D4,D5
00003A24  CA7C 0040               4091              AND         #mask7,D5
00003A28  BA7C 0040               4092              CMP         #mask7,D5
00003A2C  6700 0006               4093              BEQ         Addr5Cont
00003A30  6000 0062               4094              BRA         endMOVE
00003A34                          4095  Addr5Cont        
00003A34  43F9 00003CDC           4096              LEA         dec, A1             ; Output -
00003A3A  103C 000E               4097              MOVE.B      #14, D0             ; command for trap call to display message
00003A3E  4E4F                    4098              TRAP        #15                 ; trap call        
00003A40  6000 0042               4099              BRA         AddrReg7
00003A44                          4100  
00003A44                          4101  AddrReg6
00003A44  4245                    4102              CLR         D5
00003A46  1A04                    4103              MOVE.B      D4,D5
00003A48  CA7C 00A0               4104              AND         #maskF,D5
00003A4C  BA7C 00A0               4105              CMP         #maskF,D5
00003A50  6700 0032               4106              BEQ         AddrReg7
00003A54                          4107  
00003A54  43F9 00003D84           4108              LEA         dispA6, A1          ; Output string D0
00003A5A  103C 000E               4109              MOVE.B      #14, D0             ; command for trap call to display message
00003A5E  4E4F                    4110              TRAP        #15                 ; trap call
00003A60                          4111              
00003A60  4245                    4112              CLR         D5
00003A62  1A04                    4113              MOVE.B      D4,D5
00003A64  CA7C 0080               4114              AND         #mask8,D5
00003A68  BA7C 0080               4115              CMP         #mask8,D5
00003A6C  6700 0006               4116              BEQ         Addr6Cont
00003A70  6000 0022               4117              BRA         endMOVE
00003A74                          4118  Addr6Cont        
00003A74  43F9 00003CDC           4119              LEA         dec, A1             ; Output -
00003A7A  103C 000E               4120              MOVE.B      #14, D0             ; command for trap call to display message
00003A7E  4E4F                    4121              TRAP        #15                 ; trap call        
00003A80  6000 0002               4122              BRA         AddrReg7
00003A84                          4123  
00003A84                          4124  AddrReg7    
00003A84  43F9 00003D87           4125              LEA         dispA7, A1          ; Output -
00003A8A  103C 000E               4126              MOVE.B      #14, D0             ; command for trap call to display message
00003A8E  4E4F                    4127              TRAP        #15                 ; trap call        
00003A90  6000 0002               4128              BRA         endMOVE
00003A94                          4129  
00003A94                          4130  endMOVE
00003A94  4CDF 7EFF               4131              MOVEM.L  (SP)+, D0-D7/A1-A6
00003A98  4E75                    4132              RTS
00003A9A                          4133  endMove1                                    ; Used if MOVEM has DR is 1
00003A9A  4CDF 7EFF               4134              MOVEM.L  (SP)+, D0-D7/A1-A6
00003A9E  4E75                    4135              RTS
00003AA0                          4136  
00003AA0                          4137  *this subroutine displays hex code stored in D1. It displays based on the number of 
00003AA0                          4138  *It displays based on the number of hex to display which is stored in D0. If it is a
00003AA0                          4139  *long or word to display, it will figure out the ascii character and add $37 if it
00003AA0                          4140  *is a letter, and $30 if its a number. It will then load the character into D1 and 
00003AA0                          4141  *display it via trap task 6 and loop however many times is needed, 4 or 8. If a word
00003AA0                          4142  *needs to be displayed, it will roll the bits over so that, the hex are shifted by a word.
00003AA0  48E7 FF7E               4143  outHex      MOVEM.L D0-D7/A1-A6, -(SP)
00003AA4  4243                    4144              CLR     D3
00003AA6  4244                    4145              CLR     D4
00003AA8  1800                    4146              MOVE.B  D0, D4
00003AAA  2601                    4147              MOVE.L  D1, D3
00003AAC  B03C 0004               4148              CMP.B   #4, D0
00003AB0  6700 0006               4149              BEQ     moveOver
00003AB4  6000 0006               4150              BRA     dispLOOP
00003AB8                          4151              
00003AB8  E19B                    4152  moveOver    ROL.L   #8,D3
00003ABA  E19B                    4153              ROL.L   #8,D3
00003ABC                          4154              
00003ABC  B83C 0000               4155  dispLOOP    CMP.B   #0, D4
00003AC0  6700 0042               4156              BEQ     endDispSub
00003AC4  E99B                    4157              ROL.L   #4, D3
00003AC6  4245                    4158              CLR     D5
00003AC8  1A03                    4159              MOVE.B  D3, D5 
00003ACA  CABC 0000000F           4160              AND.L   #$0F, D5
00003AD0  BA3C 000A               4161              CMP.B   #10, D5
00003AD4  6D00 0006               4162              BLT     DLnine
00003AD8  6000 0016               4163              BRA     DLetters
00003ADC                          4164              
00003ADC  0645 0030               4165  DLnine      ADD     #$30, D5
00003AE0  4241                    4166              CLR     D1
00003AE2  1205                    4167              MOVE.B  D5, D1
00003AE4  4240                    4168              CLR     D0
00003AE6  103C 0006               4169              MOVE.B  #6, D0
00003AEA  4E4F                    4170              TRAP    #15
00003AEC  5344                    4171              SUB     #1, D4
00003AEE  60CC                    4172              BRA     dispLOOP  
00003AF0                          4173   
00003AF0  0645 0037               4174  DLetters    ADD     #$37, D5
00003AF4  4241                    4175              CLR     D1
00003AF6  1205                    4176              MOVE.B  D5, D1
00003AF8  4240                    4177              CLR     D0
00003AFA  103C 0006               4178              MOVE.B  #6, D0
00003AFE  4E4F                    4179              TRAP    #15
00003B00  5344                    4180              SUB     #1, D4
00003B02  60B8                    4181              BRA     dispLOOP        
00003B04                          4182  
00003B04  4CDF 7EFF               4183  endDispSub  MOVEM.L  (SP)+, D0-D7/A1-A6
00003B08  4E75                    4184              RTS
00003B0A                          4185  
00003B0A                          4186  *the following subroutine gets the string address from the user
00003B0A                          4187  *and converts it to Hex for a starting/ending address. it is done 
00003B0A                          4188  *by checking each byte at address A1, and converting it from ascii to 
00003B0A                          4189  *hex number. If the user enters an invalid character string, the
00003B0A                          4190  *program will have a simhalt.
00003B0A  48E7 1F3E               4191  Address MOVEM.L D3-D7/A2-A6, -(SP)
00003B0E  4242                    4192  Retry   CLR     D2
00003B10  4243                    4193          CLR     D3
00003B12  B23C 0004               4194          CMP.B   #4, D1
00003B16  6700 000E               4195          BEQ     subLOOP
00003B1A  B23C 0008               4196          CMP.B   #8, D1
00003B1E  6700 0006               4197          BEQ     subLOOP
00003B22  6000 0126               4198          BRA     ADDinvalid        
00003B26                          4199          
00003B26  E85C                    4200  subLOOP ROR     #4, D4
00003B28  1404                    4201          MOVE.B  D4, D2
00003B2A  4244                    4202          CLR     D4
00003B2C  4245                    4203          CLR     D5
00003B2E  B601                    4204          CMP.B   D1, D3
00003B30  6700 012E               4205          BEQ     endLOOP
00003B34  5443                    4206          ADD.W   #2, D3
00003B36  E19A                    4207          ROL.L   #8, D2
00003B38                          4208          
00003B38  E95C                    4209  bytLOOP ROL     #4, D4
00003B3A                          4210          
00003B3A  0C11 0030               4211          CMP.B   #$30, (A1)
00003B3E  6700 007E               4212          BEQ     hZero 
00003B42  0C11 0031               4213          CMP.B   #$31, (A1)
00003B46  6700 007E               4214          BEQ     hOne
00003B4A  0C11 0032               4215          CMP.B   #$32, (A1)
00003B4E  6700 007E               4216          BEQ     hTwo
00003B52  0C11 0033               4217          CMP.B   #$33, (A1)
00003B56  6700 007E               4218          BEQ     hThree
00003B5A  0C11 0034               4219          CMP.B   #$34, (A1)
00003B5E  6700 007E               4220          BEQ     hFour
00003B62  0C11 0035               4221          CMP.B   #$35, (A1)
00003B66  6700 007E               4222          BEQ     hFive
00003B6A  0C11 0036               4223          CMP.B   #$36, (A1)
00003B6E  6700 007E               4224          BEQ     hSix
00003B72  0C11 0037               4225          CMP.B   #$37, (A1)
00003B76  6700 007E               4226          BEQ     hSeven
00003B7A  0C11 0038               4227          CMP.B   #$38, (A1)
00003B7E  6700 007E               4228          BEQ     hEight
00003B82  0C11 0039               4229          CMP.B   #$39, (A1)
00003B86  6700 007E               4230          BEQ     hNine
00003B8A  0C11 0041               4231          CMP.B   #$41, (A1)
00003B8E  6700 007E               4232          BEQ     hA
00003B92  0C11 0042               4233          CMP.B   #$42, (A1)
00003B96  6700 007E               4234          BEQ     hB
00003B9A  0C11 0043               4235          CMP.B   #$43, (A1)
00003B9E  6700 007E               4236          BEQ     hC
00003BA2  0C11 0044               4237          CMP.B   #$44, (A1)
00003BA6  6700 007E               4238          BEQ     hD
00003BAA  0C11 0045               4239          CMP.B   #$45, (A1)
00003BAE  6700 007E               4240          BEQ     hE
00003BB2  0C11 0046               4241          CMP.B   #$46, (A1)
00003BB6  6700 007E               4242          BEQ     hF 
00003BBA  6000 F9BC               4243          BRA     invalid      
00003BBE  183C 0000               4244  hZero   MOVE.B  #$00, D4
00003BC2  6000 0076               4245          BRA     nextH
00003BC6  183C 0010               4246  hOne    MOVE.B  #$10, D4
00003BCA  6000 006E               4247          BRA     nextH
00003BCE  183C 0020               4248  hTwo    MOVE.B  #$20, D4
00003BD2  6000 0066               4249          BRA     nextH
00003BD6  183C 0030               4250  hThree  MOVE.B  #$30, D4
00003BDA  6000 005E               4251          BRA     nextH
00003BDE  183C 0040               4252  hFour   MOVE.B  #$40, D4
00003BE2  6000 0056               4253          BRA     nextH
00003BE6  183C 0050               4254  hFive   MOVE.B  #$50, D4
00003BEA  6000 004E               4255          BRA     nextH
00003BEE  183C 0060               4256  hSix    MOVE.B  #$60, D4
00003BF2  6000 0046               4257          BRA     nextH
00003BF6  183C 0070               4258  hSeven  MOVE.B  #$70, D4
00003BFA  6000 003E               4259          BRA     nextH
00003BFE  183C 0080               4260  hEight  MOVE.B  #$80, D4
00003C02  6000 0036               4261          BRA     nextH
00003C06  183C 0090               4262  hNine   MOVE.B  #$90, D4
00003C0A  6000 002E               4263          BRA     nextH
00003C0E  183C 00A0               4264  hA      MOVE.B  #$A0, D4
00003C12  6000 0026               4265          BRA     nextH
00003C16  183C 00B0               4266  hB      MOVE.B  #$B0, D4
00003C1A  6000 001E               4267          BRA     nextH
00003C1E  183C 00C0               4268  hC      MOVE.B  #$C0, D4
00003C22  6000 0016               4269          BRA     nextH
00003C26  183C 00D0               4270  hD      MOVE.B  #$D0, D4
00003C2A  6000 000E               4271          BRA     nextH
00003C2E  183C 00E0               4272  hE      MOVE.B  #$E0, D4
00003C32  6000 0006               4273          BRA     nextH
00003C36  183C 00F0               4274  hF      MOVE.B  #$F0, D4
00003C3A                          4275  
00003C3A  1019                    4276  nextH   MOVE.B  (A1)+, D0
00003C3C  5245                    4277          ADD     #1, D5
00003C3E  BA3C 0002               4278          CMP.B   #2, D5
00003C42  6700 FEE2               4279          BEQ     subLOOP
00003C46  6000 FEF0               4280          BRA     bytLOOP
00003C4A                          4281          
00003C4A  43F9 00003CAC           4282  ADDinvalid  LEA     errorMessage, A1
00003C50  103C 000E               4283              MOVE.B  #14, D0
00003C54  4E4F                    4284              TRAP    #15    
00003C56                          4285      
00003C56  103C 0002               4286              MOVE.B  #2, D0
00003C5A  4E4F                    4287              TRAP    #15
00003C5C                          4288  
00003C5C  6000 FEB0               4289              BRA     Retry
00003C60                          4290     
00003C60  4CDF 7CF8               4291  endLOOP MOVEM.L  (SP)+, D3-D7/A2-A6
00003C64  4E75                    4292          RTS
00003C66                          4293  
00003C66                          4294  printInvalid
00003C66                          4295  endPROG    
00003C66                          4296  
00003C66  FFFF FFFF               4297      SIMHALT                             ; halt simulator
00003C6A                          4298  
00003C6A= 45 6E 74 65 72 20 ...   4299  startingMessage DC.B    'Enter Starting Address (in hex): ', 0
00003C8C= 45 6E 74 65 72 20 ...   4300  endingMessage   DC.B    'Enter Ending Address (in hex): ', 0
00003CAC= 49 6E 63 6F 72 72 ...   4301  errorMessage    DC.B    'Incorrect Address, try again: ', 0
00003CCB                          4302  
00003CCB= 20 0D 0A 00             4303  newLine     DC.B    ' ', CR, LF, 0
00003CCF= 20 20 00                4304  space       DC.B    '  ', 0
00003CD2                          4305  
00003CD2= 23 00                   4306  hashTag     DC.B    '#', 0
00003CD4= 24 00                   4307  dispHex     DC.B    '$', 0
00003CD6= 2C 00                   4308  comma       DC.B    ',', 0
00003CD8                          4309  
00003CD8= 28 00                   4310  opPer       DC.B    '(', 0
00003CDA= 29 00                   4311  clPer       DC.B    ')', 0
00003CDC= 2D 00                   4312  dec         DC.B    '-', 0
00003CDE= 2B 00                   4313  inc         DC.B    '+', 0
00003CE0                          4314  
00003CE0= 4F 52 49 00             4315  ORImatch    DC.B    'ORI', 0
00003CE4= 43 4D 50 49 00          4316  CMPImatch   DC.B    'CMPI', 0
00003CE9= 42 43 4C 52 00          4317  BCLRmatch   DC.B    'BCLR', 0
00003CEE= 4D 4F 56 45 00          4318  MOVEmatch   DC.B    'MOVE', 0
00003CF3= 4D 4F 56 45 41 00       4319  MOVEAmatch  DC.B    'MOVEA', 0
00003CF9= 4E 45 47 00             4320  NEGmatch    DC.B    'NEG', 0
00003CFD= 52 54 53 00             4321  RTSmatch    DC.B    'RTS', 0
00003D01= 4A 53 52 00             4322  JSRmatch    DC.B    'JSR', 0
00003D05= 4D 4F 56 45 4D 00       4323  MOVEMmatch  DC.B    'MOVEM', 0
00003D0B= 4C 45 41 00             4324  LEAmatch    DC.B    'LEA', 0
00003D0F= 53 55 42 51 00          4325  SUBQmatch   DC.B    'SUBQ', 0
00003D14= 42 52 41 00             4326  BRAmatch    DC.B    'BRA', 0
00003D18= 42 43 53 00             4327  BCSmatch    DC.B    'BCS', 0
00003D1C= 42 56 43 00             4328  BVCmatch    DC.B    'BVC', 0
00003D20= 42 47 45 00             4329  BGEmatch    DC.B    'BGE', 0
00003D24= 42 4C 54 00             4330  BLTmatch    DC.B    'BLT', 0
00003D28= 44 49 56 53 00          4331  DIVSmatch   DC.B    'DIVS', 0
00003D2D= 4F 52 00                4332  ORmatch     DC.B    'OR', 0
00003D30= 53 55 42 00             4333  SUBmatch    DC.B    'SUB', 0
00003D34= 45 4F 52 00             4334  EORmatch    DC.B    'EOR', 0
00003D38= 43 4D 50 00             4335  CMPmatch    DC.B    'CMP', 0
00003D3C= 4D 55 4C 53 00          4336  MULSmatch   DC.B    'MULS', 0
00003D41= 41 44 44 00             4337  ADDmatch    DC.B    'ADD', 0
00003D45= 41 44 44 41 00          4338  ADDAmatch   DC.B    'ADDA', 0
00003D4A= 4C 53 52 00             4339  LSRmatch    DC.B    'LSR', 0
00003D4E= 4C 53 4C 00             4340  LSLmatch    DC.B    'LSL', 0
00003D52= 41 53 52 00             4341  ASRmatch    DC.B    'ASR', 0
00003D56= 41 53 4C 00             4342  ASLmatch    DC.B    'ASL', 0
00003D5A= 52 4F 52 00             4343  RORmatch    DC.B    'ROR', 0
00003D5E= 52 4F 4C 00             4344  ROLmatch    DC.B    'ROL', 0
00003D62                          4345  
00003D62= 2F 00                   4346  slash       DC.B    '/', 0
00003D64= 28 53 50 29 00          4347  stack       DC.B    '(SP)', 0
00003D69                          4348   
00003D69= 2E 42 00                4349  dispByte    DC.B    '.B', 0
00003D6C= 2E 57 00                4350  dispWord    DC.B    '.W', 0
00003D6F= 2E 4C 00                4351  dispLong    DC.B    '.L', 0
00003D72                          4352  
00003D72= 41 30 00                4353  dispA0      DC.B    'A0', 0
00003D75= 41 31 00                4354  dispA1      DC.B    'A1', 0
00003D78= 41 32 00                4355  dispA2      DC.B    'A2', 0
00003D7B= 41 33 00                4356  dispA3      DC.B    'A3', 0
00003D7E= 41 34 00                4357  dispA4      DC.B    'A4', 0
00003D81= 41 35 00                4358  dispA5      DC.B    'A5', 0
00003D84= 41 36 00                4359  dispA6      DC.B    'A6', 0
00003D87= 41 37 00                4360  dispA7      DC.B    'A7', 0
00003D8A                          4361  
00003D8A= 44 00                   4362  dispD       DC.B    'D',0
00003D8C= 44 30 00                4363  dispD0      DC.B    'D0', 0
00003D8F= 44 31 00                4364  dispD1      DC.B    'D1', 0
00003D92= 44 32 00                4365  dispD2      DC.B    'D2', 0
00003D95= 44 33 00                4366  dispD3      DC.B    'D3', 0
00003D98= 44 34 00                4367  dispD4      DC.B    'D4', 0
00003D9B= 44 35 00                4368  dispD5      DC.B    'D5', 0
00003D9E= 44 36 00                4369  dispD6      DC.B    'D6', 0
00003DA1= 44 37 00                4370  dispD7      DC.B    'D7', 0 
00003DA4                          4371   
00003DA4                          4372             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             34F8
ABSSHORT            34C0
ADDAMATCH           3D45
ADDINVALID          3C4A
ADDMATCH            3D41
ADDR0CONT           38F4
ADDR1CONT           3934
ADDR2CONT           3974
ADDR3CONT           39B4
ADDR4CONT           39F4
ADDR5CONT           3A34
ADDR6CONT           3A74
ADDRESS             3B0A
ADDRREG0            38D4
ADDRREG1            3904
ADDRREG2            3944
ADDRREG3            3984
ADDRREG4            39C4
ADDRREG5            3A04
ADDRREG6            3A44
ADDRREG7            3A84
ASLMATCH            3D56
ASRMATCH            3D52
BCLRMATCH           3CE9
BCSMATCH            3D18
BGEMATCH            3D20
BLTMATCH            3D24
BRAEIGHT            1142
BRAELEVEN           1160
BRAFIVE             1112
BRAFOUR             10F6
BRAFOURTEEN         11D0
BRAMATCH            3D14
BRANINE             115C
BRAONE              10EA
BRASIX              1116
BRATHIRTEEN         117E
BRATHREE            10F2
BRATWELVE           117A
BRATWO              10EE
BRAZERO             10BA
BVCMATCH            3D1C
BYTLOOP             3B38
CHECKDR             35CA
CLPER               3CDA
CMPIMATCH           3CE4
CMPMATCH            3D38
COMMA               3CD6
CR                  D
DATAREG0            367E
DATAREG1            36AE
DATAREG2            36EE
DATAREG3            372E
DATAREG4            376E
DATAREG5            37AE
DATAREG6            37EE
DATAREG7            382E
DEC                 3CDC
DISPA0              3D72
DISPA1              3D75
DISPA2              3D78
DISPA3              3D7B
DISPA4              3D7E
DISPA5              3D81
DISPA6              3D84
DISPA7              3D87
DISPBYTE            3D69
DISPD               3D8A
DISPD0              3D8C
DISPD1              3D8F
DISPD2              3D92
DISPD3              3D95
DISPD4              3D98
DISPD5              3D9B
DISPD6              3D9E
DISPD7              3DA1
DISPHEX             3CD4
DISPIMM             3530
DISPLAYA0           3038
DISPLAYA0A          3104
DISPLAYA0D          33C8
DISPLAYA0P          3230
DISPLAYA1           3048
DISPLAYA1A          3120
DISPLAYA1D          33E4
DISPLAYA1P          3258
DISPLAYA2           3058
DISPLAYA2A          313C
DISPLAYA2D          3400
DISPLAYA2P          3280
DISPLAYA3           3068
DISPLAYA3A          3158
DISPLAYA3D          341C
DISPLAYA3P          32A8
DISPLAYA4           3078
DISPLAYA4A          3174
DISPLAYA4D          3438
DISPLAYA4P          32D0
DISPLAYA5           3088
DISPLAYA5A          3190
DISPLAYA5D          3454
DISPLAYA5P          32F8
DISPLAYA6           3098
DISPLAYA6A          31AC
DISPLAYA6D          3470
DISPLAYA6P          3320
DISPLAYA7           30A8
DISPLAYA7A          31C8
DISPLAYA7D          348C
DISPLAYA7P          3348
DISPLAYD0           2F78
DISPLAYD1           2F88
DISPLAYD2           2F98
DISPLAYD3           2FA8
DISPLAYD4           2FB8
DISPLAYD5           2FC8
DISPLAYD6           2FD8
DISPLAYD7           2FE8
DISPLAYEIGHT        2EF0
DISPLONG            3D6F
DISPLOOP            3ABC
DISPWORD            3D6C
DIVSMATCH           3D28
DLETTERS            3AF0
DLNINE              3ADC
EIGHT               8
ELEVEN              B
ENDDISPSUB          3B04
ENDINGMESSAGE       3C8C
ENDLOOP             3C60
ENDMOVE             3A94
ENDMOVE1            3A9A
ENDPROG             3C66
ENDSUB              3578
ENDSUBROUTINE       2EFA
EORMATCH            3D34
ERRORMESSAGE        3CAC
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HA                  3C0E
HASHTAG             3CD2
HB                  3C16
HC                  3C1E
HD                  3C26
HE                  3C2E
HEIGHT              3BFE
HF                  3C36
HFIVE               3BE6
HFOUR               3BDE
HNINE               3C06
HONE                3BC6
HSEVEN              3BF6
HSIX                3BEE
HTHREE              3BD6
HTWO                3BCE
HZERO               3BBE
IMMLONG             3564
INC                 3CDE
INVALID             3578
JSRMATCH            3D01
LEAMATCH            3D0B
LF                  A
LONGSKIP            3574
LOOP                1040
LSLMATCH            3D4E
LSRMATCH            3D4A
MASK0               0
MASK1               1
MASK2               2
MASK3               4
MASK4               8
MASK5               10
MASK6               20
MASK7               40
MASK8               80
MASKA               5
MASKB               A
MASKC               14
MASKD               28
MASKE               50
MASKF               A0
MEMSB               268A
MEMSHIFTIMM         2ED6
MEMSHIFTS           11EA
MEMSL               2B9E
MEMSW               2914
MOVEAMATCH          3CF3
MOVEMATCH           3CEE
MOVEMBRA            357E
MOVEML              35AE
MOVEMMATCH          3D05
MOVEMW              3592
MOVEOVER            3AB8
MULSMATCH           3D3C
NEGMATCH            3CF9
NEWLINE             3CCB
NEXTH               3C3A
NINE                9
ONE                 1
OPADDAL             2452
OPADDAW             23E2
OPADDB              2296
OPADDL              236E
OPADDW              2302
OPASBI              26C8
OPASBR              272A
OPASL               24C2
OPASLBI             2708
OPASLBR             276A
OPASLI              2BDC
OPASLLI             2C1C
OPASLLR             2C7E
OPASLR              2C3E
OPASLWI             2992
OPASLWR             29F4
OPASR               250E
OPASRBI             26E6
OPASRBR             2748
OPASRLI             2BFA
OPASRLR             2C5C
OPASRWI             2970
OPASRWR             29D2
OPASWI              2952
OPASWR              29B4
OPBCLR              153A
OPBCS               20DA
OPBGE               214A
OPBLT               2182
OPBRA               20A2
OPBVC               2112
OPCMP               1E0A
OPCMPB              1E3C
OPCMPI              13AC
OPCMPIB             13CE
OPCMPIL             14C4
OPCMPIW             1440
OPCMPL              1EF0
OPCMPW              1E96
OPDIVS              1C5E
OPDYNBCLR           159E
OPEOR               1CBC
OPEORB              1CEA
OPEORL              1DAA
OPEORW              1D4A
OPJSR               198A
OPLEA               1A8C
OPLSBI              278C
OPLSBR              27EE
OPLSL               255A
OPLSLBI             27CC
OPLSLBR             282E
OPLSLI              2CA0
OPLSLLI             2CE0
OPLSLLR             2D42
OPLSLR              2D02
OPLSLWI             2A56
OPLSLWR             2AB8
OPLSR               25A6
OPLSRBI             27AA
OPLSRBR             280C
OPLSRLI             2CBE
OPLSRLR             2D20
OPLSRWI             2A34
OPLSRWR             2A96
OPLSWI              2A16
OPLSWR              2A78
OPMOVEAL            1724
OPMOVEAW            181A
OPMOVEB             160C
OPMOVEL             1690
OPMOVEM             1A02
OPMOVEMLEA          19E6
OPMOVEW             178C
OPMULS              2232
OPNEG               1882
OPNEGB              18B0
OPNEGL              18F0
OPNEGW              1930
OPOR                1B0C
OPORB               1B4A
OPORI               1244
OPORIB              1272
OPORIL              133E
OPORIW              12D8
OPORL               1C00
OPORW               1BA4
OPPER               3CD8
OPROBI              2850
OPROBR              28B2
OPROL               25F2
OPROLBI             2890
OPROLBR             28F2
OPROLI              2D64
OPROLLI             2DA4
OPROLLR             2E06
OPROLR              2DC6
OPROLWI             2B1A
OPROLWR             2B7C
OPROR               263E
OPRORBI             286E
OPRORBR             28D0
OPRORLI             2D82
OPRORLR             2DE4
OPRORWI             2AF8
OPRORWR             2B5A
OPROWI              2ADA
OPROWR              2B3C
OPRTS               19CA
OPRTSJSR            1970
OPSUB               1F4A
OPSUBB              1F94
OPSUBL              2048
OPSUBQ              21BA
OPSUBQB             21EA
OPSUBQL             2216
OPSUBQW             2200
OPSUBW              1FEE
ORIMATCH            3CE0
ORMATCH             3D2D
OUTHEX              3AA0
PADDRDEC            3370
PADDRDIR            30B8
PADDRPOST           31E4
PADDRREG            2FF8
PDATAREG            2F38
PHEX                34A8
PRINTEA             2F00
PRINTINVALID        3C66
PRINTMEM            383E
PRINTMEMNOW         3842
PRINTREGMEM         35F2
PRINTSTACK          35DE
PRNTIMM             2E28
PRNTREG             2E84
REG0CONT            369E
REG1CONT            36DE
REG2CONT            371E
REG3CONT            375E
REG4CONT            379E
REG5CONT            37DE
REG6CONT            381E
REGSHIFTS           1228
RETRY               3B0E
ROLMATCH            3D5E
RORMATCH            3D5A
RTSMATCH            3CFD
SECNIB              F
SEVEN               7
SIX                 6
SKIPPRINTEA         1A7C
SLASH               3D62
SPACE               3CCF
STACK               3D64
START               1000
STARTINGMESSAGE     3C6A
SUBLOOP             3B26
SUBMATCH            3D30
SUBQMATCH           3D0F
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
