00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 12/9/2014 7:15:54 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9       
00000000  =00000000                 10  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 11  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 12  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 13  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 14  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 15  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 16  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 17  seven       EQU     $07
00000000  =00000008                 18  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 19  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 20  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 21  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 22  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 23  fourteen    EQU     $0E         ; defined hex value 14
00000000                            24  
00000000  =00000000                 25  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 26  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 27  s1L         EQU     %0010       ; long size 1
00000000                            28  
00000000  =00000000                 29  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 30  s2L         EQU     %0001       ; long size 2
00000000                            31  
00000000  =00000001                 32  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 33  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 34  s3L         EQU     %0010       ; long size 3
00000000                            35  
00000000  =00000000                 36  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 37  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 38  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 39  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 40  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 41  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            42  
00000000  =00000000                 43  reg0        EQU     %0000       ; register 0
00000000  =00000001                 44  reg1        EQU     %0001       ; register 1
00000000  =00000002                 45  reg2        EQU     %0010       ; register 2
00000000  =00000003                 46  reg3        EQU     %0011       ; register 3
00000000  =00000004                 47  reg4        EQU     %0100       ; register 4
00000000  =00000005                 48  reg5        EQU     %0101       ; register 5
00000000  =00000006                 49  reg6        EQU     %0110       ; register 6
00000000  =00000007                 50  reg7        EQU     %0111       ; register 7
00000000                            51  
00000000  =000000F0                 52  firstNib    EQU     $F0
00000000  =0000000F                 53  secNib      EQU     $0F
00000000                            54               
00001000                            55              ORG    $1000
00001000                            56  START:                                  ; first instruction of program
00001000                            57        
00001000  43F9 00002EDA             58          LEA     startingMessage, A1
00001006  103C 000E                 59          MOVE.B  #14, D0
0000100A  4E4F                      60          TRAP    #15    
0000100C                            61      
0000100C  103C 0002                 62          MOVE.B  #2, D0
00001010  4E4F                      63          TRAP    #15
00001012                            64      
00001012  4EB9 00002D8A             65          JSR     Address
00001018  2042                      66          MOVEA.L D2, A0
0000101A                            67          
0000101A  43F9 00002EFC             68          LEA     endingMessage, A1
00001020  103C 000E                 69          MOVE.B  #14, D0
00001024  4E4F                      70          TRAP    #15    
00001026                            71      
00001026  103C 0002                 72          MOVE.B  #2, D0
0000102A  4E4F                      73          TRAP    #15
0000102C                            74      
0000102C  4EB9 00002D8A             75          JSR     Address
00001032  2442                      76          MOVEA.L D2, A2
00001034                            77          
00001034  43F9 00002F1C             78          LEA     newline, A1
0000103A  103C 000E                 79          MOVE.B  #14, D0
0000103E  4E4F                      80          TRAP    #15 
00001040                            81            
00001040  4241                      82  LOOP    CLR         D1                  ; clear out D1
00001042  4242                      83          CLR         D2                  ; clear out D2
00001044  B1CA                      84          CMPA.L      A2, A0              ; compare starting and ending addresses
00001046  6E00 1E8E                 85          BGT         endProg             ; if A0 > A1, we've finished, end program
0000104A  1218                      86          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
0000104C  1401                      87          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000104E  E882                      88          ASR.L       #four, D2           ; get first nibble in D2
00001050                            89          
00001050  B43C 0000                 90          CMP.B       #zero, D2           ; compare with 0
00001054  6700 0064                 91          BEQ         braZero             ; branch out to zero method
00001058  B43C 0001                 92          CMP.B       #one, D2            ; compare with 1
0000105C  6700 008C                 93          BEQ         braOne              ; branch out to one method
00001060  B43C 0002                 94          CMP.B       #two, D2            ; compare with 2    
00001064  6700 0088                 95          BEQ         braTwo              ; branch out to two method
00001068  B43C 0003                 96          CMP.B       #three, D2          ; compare with 3
0000106C  6700 0080                 97          BEQ         braThree            ; branch out to three method
00001070  B43C 0004                 98          CMP.B       #four, D2           ; compare with 4
00001074  6700 0078                 99          BEQ         braFour             ; branch out to four method
00001078  B43C 0005                100          CMP.B       #five, D2           ; compare with 5
0000107C  6700 008C                101          BEQ         braFive             ; branch out to five method
00001080  B43C 0006                102          CMP.B       #six, D2            ; compare with 6
00001084  6700 0088                103          BEQ         braSix              ; branch out to six method
00001088  B43C 0008                104          CMP.B       #eight, D2          ; compare with 8
0000108C  6700 00AC                105          BEQ         braEight            ; branch out to eight method
00001090  B43C 0009                106          CMP.B       #nine, D2           ; compare with 9
00001094  6700 00A4                107          BEQ         braNine             ; branch out to nine method
00001098  B43C 000B                108          CMP.B       #eleven, D2         ; compare with 11
0000109C  6700 00A0                109          BEQ         braEleven           ; branch out to eleven method
000010A0  B43C 000C                110          CMP.B       #twelve, D2         ; compare with 12
000010A4  6700 0098                111          BEQ         braTwelve           ; branch out to twelve method
000010A8  B43C 000D                112          CMP.B       #thirteen, D2       ; compare with 13
000010AC  6700 0094                113          BEQ         braThirteen         ; branch out to thirteen method
000010B0  B43C 000E                114          CMP.B       #fourteen, D2       ; compare with 14
000010B4  6700 00DE                115          BEQ         braFourteen         ; branch out to fourteen method
000010B8  6086                     116          BRA         loop
000010BA                           117  
000010BA  4242                     118  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
000010BC  1401                     119          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010BE  C43C 000F                120          AND.B       #secNib, D2         ; set first nibble to 0
000010C2                           121   
000010C2  B43C 0000                122          CMP.B       #zero, D2           ; compare second nibble to 0
000010C6  6700 0140                123          BEQ         opORI               ; branch to ORI method
000010CA  B43C 000C                124          CMP.B       #twelve, D2         ; compare second nibble to 12
000010CE  6700 028C                125          BEQ         opCMPI              ; branch to CMPI method
000010D2  B43C 0008                126          CMP.B       #eight,D2           ; Test for static BCLR
000010D6  6700 03F6                127          BEQ         opBCLR
000010DA  C47C 0001                128          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010DE  B43C 0001                129          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010E2  6700 044E                130          BEQ         opDynBCLR
000010E6  6000 1DEE                131          BRA         printInvalid
000010EA                           132          
000010EA                           133          
000010EA  6000 04B4                134  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010EE                           135  
000010EE                           136  braTwo  ; there are two opCodes available, MOVE.L, or MOVEA.L
000010EE                           137  
000010EE                           138  braThree ; there are two opCodes available, MOVE.W, or MOVEA.W
000010EE                           139  
000010EE  4242                     140  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010F0  1401                     141          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010F2  C438 000F                142          AND.B       $0F, D2             ; set first nibble to 0
000010F6                           143   
000010F6  B43C 0004                144          CMP.B       #four, D2           ; compare second nibble to 4
000010FA  6700 0714                145          BEQ         opNEG               ; branch to NEG method
000010FE  B43C 000E                146          CMP.B       #fourteen, D2       ; compare second nibble to E
00001102  6700 07FA                147          BEQ         opRTSJSR            ; branch to JSR or RTS method
00001106  6000 086C                148          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
0000110A                           149  
0000110A  6000 0868                150  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
0000110E                           151  
0000110E  4242                     152  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
00001110  1401                     153          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001112  C438 000F                154          AND.B       $0F, D2             ; set first nibble to 0
00001116                           155   
00001116  B43C 0000                156          CMP.B       #zero, D2           ; compare second nibble to 0
0000111A  6700 0864                157          BEQ         opBRA               ; branch to BRA method
0000111E  B43C 0005                158          CMP.B       #five, D2           ; compare second nibble to 5
00001122  6700 0874                159          BEQ         opBCS               ; branch to BCS method
00001126  B43C 0008                160          CMP.B       #eight, D2          ; compare second nibble to 8
0000112A  6700 0878                161          BEQ         opBVC               ; branch to BCS method
0000112E  B43C 000C                162          CMP.B       #twelve, D2         ; compare second nibble to 12
00001132  6700 087C                163          BEQ         opBGE               ; branch to BGE method
00001136  6000 0884                164          BRA         opBLT               ; otherwise, branch to BLT method
0000113A                           165  
0000113A                           166  braEight    ; there are two opCodes available DIVS, or OR
0000113A                           167  
0000113A  6000 088C                168  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000113E                           169  
0000113E                           170  braEleven   ; there are two opCodes available EOR, or CMP
0000113E                           171  
0000113E  6000 0894                172  braTwelve   BRA         opMULS              ; we know that there is only one opcode that is MULS    
00001142                           173    
00001142  E141                     174  braThirteen ASL         #eight, D1          ; we need the whole word to compare between add and adda, so move over the current byte 
00001144  1218                     175              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
00001146                           176              
00001146  4242                     177              CLR         D2                  ; clear D2
00001148  3401                     178              MOVE.W      D1, D2              ; copy opcode to D2
0000114A  EC42                     179              ASR         #six, D2            ; shift the bits right to get size and type
0000114C  C47C 0007                180              AND         #seven,D2           ; clear out all but first 3 bits
00001150                           181              
00001150  B43C 0000                182              CMP.B       #zero,D2            ; compare 0 to D2
00001154  6700 08E2                183              BEQ         opADDB              ; we know its ADDB
00001158  B43C 0001                184              CMP.B       #one, D2            ; compare 1 to D2
0000115C  6700 0946                185              BEQ         opADDW              ; we know its ADDW
00001160  B43C 0002                186              CMP.B       #two, D2            ; compare 2 to D2
00001164  6700 09AA                187              BEQ         opADDL              ; we know its ADDL
00001168  B43C 0003                188              CMP.B       #three, D2          ; compare 3 to D2
0000116C  6700 0A16                189              BEQ         opADDAW             ; we know its ADDAW
00001170  B43C 0004                190              CMP.B       #four, D2           ; compare 4 to D2
00001174  6700 08C2                191              BEQ         opADDB              ; we know its ADDB
00001178  B43C 0005                192              CMP.B       #five, D2           ; compare 5 to D2
0000117C  6700 0926                193              BEQ         opADDW              ; we know its ADDW
00001180  B43C 0006                194              CMP.B       #six, D2            ; compare 6 to D2
00001184  6700 098A                195              BEQ         opADDL              ; we know its ADDL
00001188  B43C 0007                196              CMP.B       #seven, D2          ; compare 7 to D2
0000118C  6700 0A66                197              BEQ         opADDAL             ; we know its ADDAL
00001190  6000 1D44                198              BRA         printInvalid        ; invalid opcode
00001194                           199               
00001194  E141                     200  braFourteen ASL.W       #eight,D1           ; we need the whole word to compare between add and adda, so move over the current byte
00001196  1218                     201              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
00001198                           202              
00001198  4242                     203              CLR         D2                  ; clear D2
0000119A  3401                     204              MOVE.W      D1, D2              ; copy opcode to D2
0000119C  EC42                     205              ASR         #six, D2            ; shift the bits right to get size
0000119E  C47C 0003                206              AND         #03,D2
000011A2                           207          
000011A2  B43C 0003                208              CMP.B       #three, D2          ; if the size is three, we are shifting memory
000011A6  6700 0006                209              BEQ         memShifts           ; go to memory shift
000011AA  6000 0040                210              BRA         regShifts           ; else go to register shift
000011AE                           211  
000011AE  4242                     212  memShifts   CLR         D2             
000011B0  3401                     213              MOVE.W      D1, D2              ; clear out D2 and copy D1 back in
000011B2  E082                     214              ASR.L       #eight,D2           ; move to get first byte back
000011B4  C47C 000F                215              AND         #secNib, D2         ; set first nibble to 0
000011B8                           216   
000011B8  B43C 0000                217              CMP.B       #zero, D2           ; compare second nibble to 0
000011BC  6700 0AF2                218              BEQ         opASR               ; branch to ASR method
000011C0  B43C 0001                219              CMP.B       #one, D2            ; compare second nibble to 1
000011C4  6700 0A9E                220              BEQ         opASL               ; branch to ASL method
000011C8  B43C 0002                221              CMP.B       #two, D2            ; compare second nibble to 2
000011CC  6700 0B7A                222              BEQ         opLSR               ; branch to LSR method
000011D0  B43C 0003                223              CMP.B       #three, D2          ; compare second nibble to 3
000011D4  6700 0B26                224              BEQ         opLSL               ; branch to LSL method
000011D8  B43C 0006                225              CMP.B       #six, D2            ; compare second nibble to 6
000011DC  6700 0C02                226              BEQ         opROR               ; branch to ROR method
000011E0  B43C 0007                227              CMP.B       #seven, D2          ; compare second nibble to 7
000011E4  6700 0BAE                228              BEQ         opROL               ; branch to ROL method
000011E8  6000 1CEC                229              BRA         printInvalid        ; otherwise, invalid
000011EC                           230              
000011EC  B43C 0000                231  regShifts   CMP.B       #zero, D2           ; if size is 0, we are shifting a byte
000011F0  6700 0C3A                232              BEQ         memSB               ; branch to register shift byte
000011F4  B43C 0001                233              CMP.B       #one, D2            ; if size is 1, we are shifting a word
000011F8  6700 0EBC                234              BEQ         memSW               ; branch to register shift word
000011FC  B43C 0002                235              CMP.B       #two, D2            ; if size is 1, we are shifting a long
00001200  6700 113E                236              BEQ         memSL               ; branch to register shift long
00001204  6000 1CD0                237              BRA         printInvalid        ; otherwise, invalid
00001208                           238  
00001208  43F9 00002F31            239  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
0000120E  103C 000E                240          MOVE.B      #14, D0             ; command for trap call to display message
00001212  4E4F                     241          TRAP        #15                 ; trap call
00001214                           242          
00001214  1218                     243          MOVE.B      (A0)+, D1
00001216  1401                     244          MOVE.B      D1,D2               ; copy data over
00001218  EC42                     245          ASR         #6,D2               ; shifts 6 bits over to read just the size        
0000121A  B43C 0000                246          CMP.B       #zero,D2
0000121E  6700 0016                247          BEQ         opORIB
00001222  B43C 0001                248          CMP.B       #one,D2
00001226  6700 0070                249          BEQ         opORIW
0000122A  B43C 0002                250          CMP.B       #two,D2
0000122E  6700 00CA                251          BEQ         opORIL
00001232                           252          
00001232  6000 1CA2                253          BRA         printInvalid
00001236                           254          
00001236  43F9 00002FB3            255  opORIB  LEA         dispByte, A1        ; Display byte
0000123C  103C 000E                256          MOVE.B      #14, D0             ; command for trap call to display message
00001240  4E4F                     257          TRAP        #15                 ; trap call
00001242                           258          
00001242  43F9 00002F20            259          LEA         space, A1           ; Display space
00001248  103C 000E                260          MOVE.B      #14, D0             ; command for trap call to display message
0000124C  4E4F                     261          TRAP        #15                 ; trap call
0000124E                           262          
0000124E  4242                     263          CLR         D2
00001250  1401                     264          MOVE.B      D1,D2
00001252  E642                     265          ASR         #three,D2
00001254  C47C 0007                266          AND         #seven,D2
00001258  4243                     267          CLR         D3        
0000125A  1601                     268          MOVE.B      D1,D3
0000125C  C67C 0007                269          AND         #seven,D3
00001260                           270          
00001260  4241                     271          CLR         D1
00001262  3218                     272          MOVE.W      (A0)+, D1
00001264                           273          
00001264  43F9 00002F23            274          LEA         hashTag, A1           ; Display space
0000126A  103C 000E                275          MOVE.B      #14, D0             ; command for trap call to display message
0000126E  4E4F                     276          TRAP        #15                 ; trap call
00001270                           277          
00001270  103C 0003                278          MOVE.B      #3, D0
00001274  4E4F                     279          TRAP        #15
00001276                           280          
00001276  43F9 00002F27            281          LEA         comma, A1           ; Display space
0000127C  103C 000E                282          MOVE.B      #14, D0             ; command for trap call to display message
00001280  4E4F                     283          TRAP        #15                 ; trap call
00001282                           284          
00001282  4EB9 000026A2            285          JSR         printEA
00001288                           286          
00001288  43F9 00002F1C            287          LEA         newLine, A1           ; Display space
0000128E  103C 000E                288          MOVE.B      #14, D0             ; command for trap call to display message
00001292  4E4F                     289          TRAP        #15                 ; trap call
00001294                           290          
00001294  6000 FDAA                291          BRA         LOOP
00001298                           292          
00001298                           293          
00001298  43F9 00002FB6            294  opORIW  LEA         dispWord, A1        ; Display byte
0000129E  103C 000E                295          MOVE.B      #14, D0             ; command for trap call to display message
000012A2  4E4F                     296          TRAP        #15                 ; trap call
000012A4                           297          
000012A4  43F9 00002F20            298          LEA         space, A1           ; Display space
000012AA  103C 000E                299          MOVE.B      #14, D0             ; command for trap call to display message
000012AE  4E4F                     300          TRAP        #15                 ; trap call
000012B0                           301          
000012B0  4242                     302          CLR         D2
000012B2  1401                     303          MOVE.B      D1,D2
000012B4  E642                     304          ASR         #three,D2
000012B6  C47C 0007                305          AND         #seven,D2
000012BA  4243                     306          CLR         D3        
000012BC  1601                     307          MOVE.B      D1,D3
000012BE  C67C 0007                308          AND         #seven,D3
000012C2                           309          
000012C2  4241                     310          CLR         D1
000012C4  3218                     311          MOVE.W      (A0)+, D1
000012C6                           312          
000012C6  43F9 00002F23            313          LEA         hashTag, A1           ; Display space
000012CC  103C 000E                314          MOVE.B      #14, D0             ; command for trap call to display message
000012D0  4E4F                     315          TRAP        #15                 ; trap call
000012D2                           316          
000012D2  103C 0003                317          MOVE.B      #3, D0
000012D6  4E4F                     318          TRAP        #15
000012D8                           319          
000012D8  43F9 00002F27            320          LEA         comma, A1           ; Display space
000012DE  103C 000E                321          MOVE.B      #14, D0             ; command for trap call to display message
000012E2  4E4F                     322          TRAP        #15                 ; trap call
000012E4                           323          
000012E4  4EB9 000026A2            324          JSR         printEA
000012EA                           325          
000012EA  43F9 00002F1C            326          LEA         newLine, A1           ; Display space
000012F0  103C 000E                327          MOVE.B      #14, D0             ; command for trap call to display message
000012F4  4E4F                     328          TRAP        #15                 ; trap call
000012F6                           329          
000012F6  6000 FD48                330          BRA         LOOP
000012FA                           331       
000012FA  43F9 00002FB9            332  opORIL  LEA         dispLong, A1        ; Display byte
00001300  103C 000E                333          MOVE.B      #14, D0             ; command for trap call to display message
00001304  4E4F                     334          TRAP        #15                 ; trap call
00001306                           335          
00001306  43F9 00002F20            336          LEA         space, A1           ; Display space
0000130C  103C 000E                337          MOVE.B      #14, D0             ; command for trap call to display message
00001310  4E4F                     338          TRAP        #15                 ; trap call
00001312                           339          
00001312  4242                     340          CLR         D2
00001314  1401                     341          MOVE.B      D1,D2
00001316  E642                     342          ASR         #three,D2
00001318  C47C 0007                343          AND         #seven,D2
0000131C  4243                     344          CLR         D3        
0000131E  1601                     345          MOVE.B      D1,D3
00001320  C67C 0007                346          AND         #seven,D3
00001324                           347          
00001324  4241                     348          CLR         D1
00001326  2218                     349          MOVE.L      (A0)+, D1
00001328                           350          
00001328  43F9 00002F23            351          LEA         hashTag, A1           ; Display space
0000132E  103C 000E                352          MOVE.B      #14, D0             ; command for trap call to display message
00001332  4E4F                     353          TRAP        #15                 ; trap call
00001334                           354          
00001334  103C 0003                355          MOVE.B      #3, D0
00001338  4E4F                     356          TRAP        #15
0000133A                           357          
0000133A  43F9 00002F27            358          LEA         comma, A1           ; Display space
00001340  103C 000E                359          MOVE.B      #14, D0             ; command for trap call to display message
00001344  4E4F                     360          TRAP        #15                 ; trap call
00001346                           361          
00001346  4EB9 000026A2            362          JSR         printEA
0000134C                           363          
0000134C  43F9 00002F1C            364          LEA         newLine, A1           ; Display space
00001352  103C 000E                365          MOVE.B      #14, D0             ; command for trap call to display message
00001356  4E4F                     366          TRAP        #15                 ; trap call
00001358                           367          
00001358  6000 FCE6                368          BRA         LOOP
0000135C                           369           
0000135C  43F9 00002F35            370  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001362  103C 000E                371          MOVE.B      #14, D0             ; command for trap call to display message
00001366  4E4F                     372          TRAP        #15                 ; trap call
00001368                           373                  
00001368  1218                     374          MOVE.B      (A0)+, D1
0000136A  1401                     375          MOVE.B      D1,D2               ; copy data over
0000136C  EC42                     376          ASR         #6,D2               ; shifts 6 bits over to read just the size        
0000136E  B43C 0000                377          CMP.B       #zero,D2
00001372  6700 0034                378          BEQ         opCMPIB
00001376  B43C 0001                379          CMP.B       #one,D2
0000137A  6700 008E                380          BEQ         opCMPIW
0000137E  B43C 0002                381          CMP.B       #two,D2
00001382  6700 00E8                382          BEQ         opCMPIL
00001386                           383          
00001386  1401                     384          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
00001388  E542                     385          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
0000138A  1802                     386          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
0000138C  4242                     387          CLR         D2                  ; Clear out data register
0000138E  1404                     388          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
00001390  EA42                     389          ASR         #five,D2            ; Shift the register out to get just the mode
00001392  1802                     390          MOVE.B      D2,D4               ; Store mode into D4
00001394  4242                     391          CLR         D2
00001396                           392          
00001396  1401                     393          MOVE.B      D1,D2               ; Getting the EA register
00001398  EB42                     394          ASL         #five,D2
0000139A  1A02                     395          MOVE.B      D2,D5               ; Move just the register into D5
0000139C  4242                     396          CLR         D2                  ; Clearing D2 to put data back
0000139E  1405                     397          MOVE.B      D5,D2               ; Putting back the register
000013A0  EA42                     398          ASR         #five,D2            ; Shifting bits in order to read the register
000013A2  1A02                     399          MOVE.B      D2,D5               ; Store register into D5
000013A4                           400          
000013A4  6000 FC9A                401          BRA         LOOP                ; go back to the loop
000013A8                           402  
000013A8  43F9 00002FB3            403  opCMPIB LEA         dispByte, A1        ; Display byte
000013AE  103C 000E                404          MOVE.B      #14, D0             ; command for trap call to display message
000013B2  4E4F                     405          TRAP        #15                 ; trap call
000013B4                           406          
000013B4  43F9 00002F20            407          LEA         space, A1           ; Display space
000013BA  103C 000E                408          MOVE.B      #14, D0             ; command for trap call to display message
000013BE  4E4F                     409          TRAP        #15                 ; trap call
000013C0                           410          
000013C0  4242                     411          CLR         D2
000013C2  1401                     412          MOVE.B      D1,D2
000013C4  E642                     413          ASR         #three,D2
000013C6  C47C 0007                414          AND         #seven,D2
000013CA  4243                     415          CLR         D3        
000013CC  1601                     416          MOVE.B      D1,D3
000013CE  C67C 0007                417          AND         #seven,D3
000013D2                           418          
000013D2  4241                     419          CLR         D1
000013D4  3218                     420          MOVE.W      (A0)+, D1
000013D6                           421          
000013D6  43F9 00002F23            422          LEA         hashTag, A1           ; Display space
000013DC  103C 000E                423          MOVE.B      #14, D0             ; command for trap call to display message
000013E0  4E4F                     424          TRAP        #15                 ; trap call
000013E2                           425          
000013E2  103C 0003                426          MOVE.B      #3, D0
000013E6  4E4F                     427          TRAP        #15
000013E8                           428          
000013E8  43F9 00002F27            429          LEA         comma, A1           ; Display space
000013EE  103C 000E                430          MOVE.B      #14, D0             ; command for trap call to display message
000013F2  4E4F                     431          TRAP        #15                 ; trap call
000013F4                           432          
000013F4  4EB9 000026A2            433          JSR         printEA
000013FA                           434          
000013FA  43F9 00002F1C            435          LEA         newLine, A1           ; Display space
00001400  103C 000E                436          MOVE.B      #14, D0             ; command for trap call to display message
00001404  4E4F                     437          TRAP        #15                 ; trap call
00001406                           438  
00001406  6000 FC38                439          BRA         LOOP
0000140A                           440  
0000140A  43F9 00002FB6            441  opCMPIW LEA         dispWord, A1        ; Display byte
00001410  103C 000E                442          MOVE.B      #14, D0             ; command for trap call to display message
00001414  4E4F                     443          TRAP        #15                 ; trap call
00001416                           444          
00001416  43F9 00002F20            445          LEA         space, A1           ; Display space
0000141C  103C 000E                446          MOVE.B      #14, D0             ; command for trap call to display message
00001420  4E4F                     447          TRAP        #15                 ; trap call
00001422                           448          
00001422  4242                     449          CLR         D2
00001424  1401                     450          MOVE.B      D1,D2
00001426  E642                     451          ASR         #three,D2
00001428  C47C 0007                452          AND         #seven,D2
0000142C  4243                     453          CLR         D3        
0000142E  1601                     454          MOVE.B      D1,D3
00001430  C67C 0007                455          AND         #seven,D3
00001434                           456          
00001434  4241                     457          CLR         D1
00001436  3218                     458          MOVE.W      (A0)+, D1
00001438                           459          
00001438  43F9 00002F23            460          LEA         hashTag, A1           ; Display space
0000143E  103C 000E                461          MOVE.B      #14, D0             ; command for trap call to display message
00001442  4E4F                     462          TRAP        #15                 ; trap call
00001444                           463          
00001444  103C 0003                464          MOVE.B      #3, D0
00001448  4E4F                     465          TRAP        #15
0000144A                           466          
0000144A  43F9 00002F27            467          LEA         comma, A1           ; Display space
00001450  103C 000E                468          MOVE.B      #14, D0             ; command for trap call to display message
00001454  4E4F                     469          TRAP        #15                 ; trap call
00001456                           470          
00001456  4EB9 000026A2            471          JSR         printEA
0000145C                           472          
0000145C  43F9 00002F1C            473          LEA         newLine, A1           ; Display space
00001462  103C 000E                474          MOVE.B      #14, D0             ; command for trap call to display message
00001466  4E4F                     475          TRAP        #15                 ; trap call
00001468  6000 FBD6                476          BRA         LOOP
0000146C                           477  
0000146C  43F9 00002FB9            478  opCMPIL LEA         dispLong, A1        ; Display byte
00001472  103C 000E                479          MOVE.B      #14, D0             ; command for trap call to display message
00001476  4E4F                     480          TRAP        #15                 ; trap call
00001478                           481          
00001478  43F9 00002F20            482          LEA         space, A1           ; Display space
0000147E  103C 000E                483          MOVE.B      #14, D0             ; command for trap call to display message
00001482  4E4F                     484          TRAP        #15                 ; trap call
00001484                           485          
00001484  4242                     486          CLR         D2
00001486  1401                     487          MOVE.B      D1,D2
00001488  E642                     488          ASR         #three,D2
0000148A  C47C 0007                489          AND         #seven,D2
0000148E  4243                     490          CLR         D3        
00001490  1601                     491          MOVE.B      D1,D3
00001492  C67C 0007                492          AND         #seven,D3
00001496                           493          
00001496  4241                     494          CLR         D1
00001498  3218                     495          MOVE.W      (A0)+, D1
0000149A                           496          
0000149A  43F9 00002F23            497          LEA         hashTag, A1           ; Display space
000014A0  103C 000E                498          MOVE.B      #14, D0             ; command for trap call to display message
000014A4  4E4F                     499          TRAP        #15                 ; trap call
000014A6                           500          
000014A6  103C 0003                501          MOVE.B      #3, D0
000014AA  4E4F                     502          TRAP        #15
000014AC                           503          
000014AC  43F9 00002F27            504          LEA         comma, A1           ; Display space
000014B2  103C 000E                505          MOVE.B      #14, D0             ; command for trap call to display message
000014B6  4E4F                     506          TRAP        #15                 ; trap call
000014B8                           507          
000014B8  4EB9 000026A2            508          JSR         printEA
000014BE                           509          
000014BE  43F9 00002F1C            510          LEA         newLine, A1           ; Display space
000014C4  103C 000E                511          MOVE.B      #14, D0             ; command for trap call to display message
000014C8  4E4F                     512          TRAP        #15                 ; trap call
000014CA                           513          
000014CA  6000 FB74                514          BRA         LOOP
000014CE                           515  
000014CE  43F9 00002F3A            516  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000014D4  103C 000E                517                  MOVE.B      #14, D0             ; command for trap call to display message
000014D8  4E4F                     518                  TRAP        #15                 ; trap call
000014DA                           519  
000014DA  43F9 00002F20            520                  LEA         space, A1           ; Display space
000014E0  103C 000E                521                  MOVE.B      #14, D0             ; command for trap call to display message
000014E4  4E4F                     522                  TRAP        #15                 ; trap call
000014E6                           523                  
000014E6  4242                     524                  CLR         D2
000014E8  1218                     525                  MOVE.B      (A0)+, D1
000014EA  1401                     526                  MOVE.B      D1,D2               ; copy data over
000014EC  E642                     527                  ASR         #three,D2           ; Shift to the right to remove register
000014EE  C47C 0007                528                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
000014F2                           529                  
000014F2  4243                     530                  CLR         D3                  ; Clear D3 so we can move D1 in
000014F4  1601                     531                  MOVE.B      D1,D3               ; Move othr byte in
000014F6  C67C 0007                532                  AND         #seven,D3           ; Set everything besides register to 0
000014FA                           533                  
000014FA  4241                     534                  CLR         D1
000014FC  3218                     535                  MOVE.W      (A0)+, D1
000014FE                           536                 
000014FE                           537                  
000014FE  43F9 00002F23            538                  LEA         hashTag, A1           ; Display space
00001504  103C 000E                539                  MOVE.B      #14, D0             ; command for trap call to display message
00001508  4E4F                     540                  TRAP        #15                 ; trap call
0000150A                           541          
0000150A  103C 0003                542                  MOVE.B      #3, D0
0000150E  4E4F                     543                  TRAP        #15
00001510                           544          
00001510  43F9 00002F27            545                  LEA         comma, A1           ; Display space
00001516  103C 000E                546                  MOVE.B      #14, D0             ; command for trap call to display message
0000151A  4E4F                     547                  TRAP        #15                 ; trap call
0000151C                           548                  
0000151C  4EB9 000026A2            549                  JSR         printEA
00001522                           550          
00001522  43F9 00002F1C            551                  LEA         newLine, A1           ; Display space
00001528  103C 000E                552                  MOVE.B      #14, D0             ; command for trap call to display message
0000152C  4E4F                     553                  TRAP        #15                 ; trap call
0000152E                           554                  
0000152E                           555                  
0000152E  6000 FB10                556                  BRA         LOOP                
00001532                           557          
00001532                           558  opDynBCLR       
00001532  4241                     559                  CLR         D1
00001534  1218                     560                  MOVE.B      (A0)+,D1            ; Copy second byte in
00001536  1601                     561                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
00001538  E243                     562                  ASR         #one,D3             ; Shift register over to the end
0000153A  C67C 0007                563                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
0000153E                           564                  
0000153E  1401                     565                  MOVE.B      D1,D2
00001540  EC42                     566                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
00001542  B47C 0002                567                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
00001546  6600 198E                568                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
0000154A                           569  
0000154A                           570                  
0000154A  43F9 00002F3A            571                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
00001550  103C 000E                572                  MOVE.B      #14, D0             ; command for trap call to display message
00001554  4E4F                     573                  TRAP        #15                 ; trap call  
00001556                           574                  
00001556  43F9 00002F20            575                  LEA         space, A1           ; Display space
0000155C  103C 000E                576                  MOVE.B      #14, D0             ; command for trap call to display message
00001560  4E4F                     577                  TRAP        #15                 ; trap call
00001562                           578                  
00001562  143C 0000                579                  MOVE.B      #zero,D2                
00001566  4EB9 000026A2            580                  JSR         printEA
0000156C                           581                  
0000156C  43F9 00002F27            582                  LEA         comma, A1           ; Display space
00001572  103C 000E                583                  MOVE.B      #14, D0             ; command for trap call to display message
00001576  4E4F                     584                  TRAP        #15                 ; trap call
00001578                           585                  
00001578  4242                     586                  CLR         D2
0000157A  1401                     587                  MOVE.B      D1,D2               ; Using D2 to store EA mode
0000157C  E642                     588                  ASR         #three,D2           ; Remove/shift the register out
0000157E  C47C 0007                589                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
00001582                           590                  
00001582  4243                     591                  CLR         D3                  ; Clearing D3 to avoid mashing data
00001584  1601                     592                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
00001586  C67C 0007                593                  AND         #seven,D3           ; Change all bits except for register bits to 0
0000158A                           594                  
0000158A                           595  
0000158A  4EB9 000026A2            596                  JSR         printEA
00001590                           597          
00001590  43F9 00002F1C            598                  LEA         newLine, A1           ; Display space
00001596  103C 000E                599                  MOVE.B      #14, D0             ; command for trap call to display message
0000159A  4E4F                     600                  TRAP        #15                 ; trap call            
0000159C                           601  
0000159C                           602  
0000159C  6000 FAA2                603                  BRA         LOOP                ; go back to the loop
000015A0                           604   
000015A0                           605  opMOVEB 
000015A0  43F9 00002F3F            606          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
000015A6  103C 000E                607          MOVE.B      #14, D0             ; command for trap call to display message
000015AA  4E4F                     608          TRAP        #15                 ; trap call
000015AC  43F9 00002FB3            609          LEA         dispByte, A1        ; display byte
000015B2  103C 000E                610          MOVE.B      #14, D0             ; command for trap call to display message
000015B6  4E4F                     611          TRAP        #15                 ; trap call
000015B8  43F9 00002F20            612          LEA         space, A1           ; create spaces
000015BE  103C 000E                613          MOVE.B      #14, D0             ; command for trap call to display message
000015C2  4E4F                     614          TRAP        #15                 ; trap call
000015C4                           615          
000015C4                           616          
000015C4  4245                     617          CLR         D5                  ; Clear D5
000015C6  1A01                     618          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
000015C8  E245                     619          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
000015CA  CA7C 0007                620          AND         #seven,D5
000015CE                           621          
000015CE  4244                     622          CLR         D4                  ; Clear out D4
000015D0  1801                     623          MOVE.B      D1,D4               ; Copy byte over to store destination mode
000015D2  C87C 0001                624          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
000015D6                           625          
000015D6  4241                     626          CLR          D1
000015D8  4242                     627          CLR          D2
000015DA  1218                     628          MOVE.B      (A0)+,D1            ; Copy byte into D1
000015DC  1401                     629          MOVE.B      D1,D2
000015DE  EC42                     630          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000015E0  D842                     631          ADD         D2,D4               ; Adds the remaining bits to D4
000015E2                           632          
000015E2  4242                     633          CLR         D2
000015E4  1401                     634          MOVE.B      D1,D2               ; Copy new byte over to D2
000015E6  E642                     635          ASR         #three,D2           ; Shift source register out
000015E8  C47C 0007                636          AND         #seven,D2           ; Set everything to 0 except for the mode
000015EC                           637          
000015EC  4243                     638          CLR         D3
000015EE  1601                     639          MOVE.B      D1,D3
000015F0  C67C 0007                640          AND         #seven,D3
000015F4                           641          
000015F4  4EB9 000026A2            642          JSR         printEA
000015FA                           643          
000015FA  43F9 00002F27            644          LEA         comma, A1           ; Display space
00001600  103C 000E                645          MOVE.B      #14, D0             ; command for trap call to display message
00001604  4E4F                     646          TRAP        #15                 ; trap call
00001606                           647          
00001606  4242                     648          CLR         D2
00001608  4243                     649          CLR         D3
0000160A  1404                     650          MOVE.B      D4,D2
0000160C  1605                     651          MOVE.B      D5,D3
0000160E                           652          
0000160E  4EB9 000026A2            653          JSR         printEA
00001614                           654          
00001614                           655          
00001614  43F9 00002F1C            656          LEA         newLine, A1           ; Display space
0000161A  103C 000E                657          MOVE.B      #14, D0             ; command for trap call to display message
0000161E  4E4F                     658          TRAP        #15                 ; trap call            
00001620                           659  
00001620                           660  
00001620  6000 FA1E                661          BRA         LOOP                ; go back to the loop
00001624                           662          
00001624                           663  opMOVEL     
00001624                           664          
00001624  4245                     665              CLR         D5                  ; Clear D5
00001626  1A01                     666              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001628  E245                     667              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
0000162A  CA7C 0007                668              AND         #seven,D5
0000162E                           669          
0000162E  4244                     670              CLR         D4                  ; Clear out D4
00001630  1801                     671              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001632  C87C 0001                672              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001636                           673          
00001636  4241                     674              CLR          D1
00001638  4242                     675              CLR          D2
0000163A  1218                     676              MOVE.B      (A0)+,D1            ; Copy byte into D1
0000163C  1401                     677              MOVE.B      D1,D2
0000163E  EC42                     678              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001640  D842                     679              ADD         D2,D4               ; Adds the remaining bits to D4
00001642                           680          
00001642  B87C 0001                681              CMP         #one,D4             ; Check if it is MOVEA
00001646  6700 006A                682              BEQ         opMOVEAL            ; If it is, branch off
0000164A                           683              
0000164A  43F9 00002F3F            684              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001650  103C 000E                685              MOVE.B      #14, D0             ; command for trap call to display message
00001654  4E4F                     686              TRAP        #15                 ; trap call  
00001656                           687              
00001656                           688              
00001656  43F9 00002FB9            689              LEA         dispLong,A1
0000165C  103C 000E                690              MOVE.B      #14, D0             ; command for trap call to display message
00001660  4E4F                     691              TRAP        #15                 ; trap call
00001662                           692              
00001662  43F9 00002F20            693              LEA         space, A1           ; create spaces
00001668  103C 000E                694              MOVE.B      #14, D0             ; command for trap call to display message
0000166C  4E4F                     695              TRAP        #15                 ; trap call
0000166E                           696          
0000166E  4242                     697              CLR         D2
00001670  1401                     698              MOVE.B      D1,D2               ; Copy new byte over to D2
00001672  E642                     699              ASR         #three,D2           ; Shift source register out
00001674  C47C 0007                700              AND         #seven,D2           ; Set everything to 0 except for the mode
00001678                           701          
00001678  4243                     702              CLR         D3
0000167A  1601                     703              MOVE.B      D1,D3
0000167C  C67C 0007                704              AND         #seven,D3
00001680                           705              
00001680  4241                     706              CLR         D1                  ; Clear D1
00001682                           707              
00001682  4EB9 000026A2            708              JSR         printEA
00001688                           709              
00001688  43F9 00002F27            710              LEA         comma, A1           ; Display comma
0000168E  103C 000E                711              MOVE.B      #14, D0             ; command for trap call to display message
00001692  4E4F                     712              TRAP        #15                 ; trap call
00001694                           713          
00001694  4242                     714              CLR         D2
00001696  4243                     715              CLR         D3
00001698  1404                     716              MOVE.B      D4,D2
0000169A  1605                     717              MOVE.B      D5,D3
0000169C                           718              
0000169C                           719  
0000169C                           720              
0000169C  4EB9 000026A2            721              JSR         printEA
000016A2                           722          
000016A2                           723          
000016A2  43F9 00002F1C            724              LEA         newLine, A1           ; Display space
000016A8  103C 000E                725              MOVE.B      #14, D0             ; command for trap call to display message
000016AC  4E4F                     726              TRAP        #15                 ; trap call            
000016AE                           727  
000016AE                           728  
000016AE  6000 F990                729              BRA         LOOP                ; go back to the loop
000016B2                           730              
000016B2                           731  opMOVEAL
000016B2                           732  
000016B2  43F9 00002F44            733              LEA         MOVEAmatch,A1
000016B8  103C 000E                734              MOVE.B      #14, D0             ; command for trap call to display message
000016BC  4E4F                     735              TRAP        #15                 ; trap call
000016BE                           736              
000016BE  43F9 00002FB9            737              LEA         dispLong,A1
000016C4  103C 000E                738              MOVE.B      #14, D0             ; command for trap call to display message
000016C8  4E4F                     739              TRAP        #15                 ; trap call
000016CA                           740              
000016CA                           741  
000016CA  43F9 00002F20            742              LEA         space, A1           ; create spaces
000016D0  103C 000E                743              MOVE.B      #14, D0             ; command for trap call to display message
000016D4  4E4F                     744              TRAP        #15                 ; trap call
000016D6                           745              
000016D6  4242                     746              CLR         D2
000016D8  1401                     747              MOVE.B      D1,D2               ; Copy new byte over to D2
000016DA  E642                     748              ASR         #three,D2           ; Shift source register out
000016DC  C47C 0007                749              AND         #seven,D2           ; Set everything to 0 except for the mode
000016E0                           750          
000016E0  4243                     751              CLR         D3
000016E2  1601                     752              MOVE.B      D1,D3
000016E4  C67C 0007                753              AND         #seven,D3
000016E8                           754              
000016E8  4241                     755              CLR         D1                  ; Clear D1
000016EA                           756              
000016EA                           757              
000016EA  4EB9 000026A2            758              JSR         printEA
000016F0                           759              
000016F0  43F9 00002F27            760              LEA         comma, A1           ; Display comma
000016F6  103C 000E                761              MOVE.B      #14, D0             ; command for trap call to display message
000016FA  4E4F                     762              TRAP        #15                 ; trap call
000016FC                           763  
000016FC  4242                     764              CLR         D2
000016FE  4243                     765              CLR         D3
00001700  1404                     766              MOVE.B      D4,D2
00001702  1605                     767              MOVE.B      D5,D3
00001704                           768          
00001704  4EB9 000026A2            769              JSR         printEA
0000170A                           770          
0000170A                           771          
0000170A  43F9 00002F1C            772              LEA         newLine, A1           ; Display space
00001710  103C 000E                773              MOVE.B      #14, D0             ; command for trap call to display message
00001714  4E4F                     774              TRAP        #15                 ; trap call            
00001716                           775  
00001716                           776  
00001716  6000 F928                777              BRA         LOOP                ; go back to the loop
0000171A                           778  
0000171A                           779  opMOVEW
0000171A                           780          
0000171A  4245                     781              CLR         D5                  ; Clear D5
0000171C  1A01                     782              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000171E  E245                     783              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001720  CA7C 0007                784              AND         #seven,D5
00001724                           785          
00001724  4244                     786              CLR         D4                  ; Clear out D4
00001726  1801                     787              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001728  C87C 0001                788              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000172C                           789          
0000172C  4241                     790              CLR          D1
0000172E  4242                     791              CLR          D2
00001730  1218                     792              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001732  1401                     793              MOVE.B      D1,D2
00001734  EC42                     794              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001736  D842                     795              ADD         D2,D4               ; Adds the remaining bits to D4
00001738                           796          
00001738  B87C 0001                797              CMP         #one,D4             ; Check if it is MOVEA
0000173C  6700 006A                798              BEQ         opMOVEAW            ; If it is, branch off
00001740                           799              
00001740  43F9 00002F3F            800              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001746  103C 000E                801              MOVE.B      #14, D0             ; command for trap call to display message
0000174A  4E4F                     802              TRAP        #15                 ; trap call  
0000174C                           803              
0000174C  43F9 00002FB6            804              LEA         dispWord,A1
00001752  103C 000E                805              MOVE.B      #14, D0             ; command for trap call to display message
00001756  4E4F                     806              TRAP        #15                 ; trap call
00001758                           807              
00001758  43F9 00002F20            808              LEA         space, A1           ; create spaces
0000175E  103C 000E                809              MOVE.B      #14, D0             ; command for trap call to display message
00001762  4E4F                     810              TRAP        #15                 ; trap call
00001764                           811          
00001764  4242                     812              CLR         D2
00001766  1401                     813              MOVE.B      D1,D2               ; Copy new byte over to D2
00001768  E642                     814              ASR         #three,D2           ; Shift source register out
0000176A  C47C 0007                815              AND         #seven,D2           ; Set everything to 0 except for the mode
0000176E                           816          
0000176E  4243                     817              CLR         D3
00001770  1601                     818              MOVE.B      D1,D3
00001772  C67C 0007                819              AND         #seven,D3
00001776                           820              
00001776  4241                     821              CLR         D1                  ; Clear D1
00001778                           822              
00001778  4EB9 000026A2            823              JSR         printEA
0000177E                           824              
0000177E  43F9 00002F27            825              LEA         comma, A1           ; Display comma
00001784  103C 000E                826              MOVE.B      #14, D0             ; command for trap call to display message
00001788  4E4F                     827              TRAP        #15                 ; trap call
0000178A                           828          
0000178A  4242                     829              CLR         D2
0000178C  4243                     830              CLR         D3
0000178E  1404                     831              MOVE.B      D4,D2
00001790  1605                     832              MOVE.B      D5,D3
00001792                           833              
00001792                           834  
00001792                           835              
00001792  4EB9 000026A2            836              JSR         printEA
00001798                           837          
00001798                           838          
00001798  43F9 00002F1C            839              LEA         newLine, A1           ; Display space
0000179E  103C 000E                840              MOVE.B      #14, D0             ; command for trap call to display message
000017A2  4E4F                     841              TRAP        #15                 ; trap call            
000017A4                           842  
000017A4                           843  
000017A4  6000 F89A                844              BRA         LOOP                ; go back to the loop
000017A8                           845  opMOVEAW  
000017A8  43F9 00002F44            846              LEA         MOVEAmatch,A1
000017AE  103C 000E                847              MOVE.B      #14, D0             ; command for trap call to display message
000017B2  4E4F                     848              TRAP        #15                 ; trap call
000017B4                           849              
000017B4  43F9 00002FB6            850              LEA         dispWord,A1
000017BA  103C 000E                851              MOVE.B      #14, D0             ; command for trap call to display message
000017BE  4E4F                     852              TRAP        #15                 ; trap call
000017C0                           853              
000017C0                           854  
000017C0  43F9 00002F20            855              LEA         space, A1           ; create spaces
000017C6  103C 000E                856              MOVE.B      #14, D0             ; command for trap call to display message
000017CA  4E4F                     857              TRAP        #15                 ; trap call
000017CC                           858              
000017CC  4242                     859              CLR         D2
000017CE  1401                     860              MOVE.B      D1,D2               ; Copy new byte over to D2
000017D0  E642                     861              ASR         #three,D2           ; Shift source register out
000017D2  C47C 0007                862              AND         #seven,D2           ; Set everything to 0 except for the mode
000017D6                           863          
000017D6  4243                     864              CLR         D3
000017D8  1601                     865              MOVE.B      D1,D3
000017DA  C67C 0007                866              AND         #seven,D3
000017DE                           867              
000017DE  4241                     868              CLR         D1                  ; Clear D1
000017E0                           869              
000017E0                           870              
000017E0  4EB9 000026A2            871              JSR         printEA
000017E6                           872              
000017E6  43F9 00002F27            873              LEA         comma, A1           ; Display comma
000017EC  103C 000E                874              MOVE.B      #14, D0             ; command for trap call to display message
000017F0  4E4F                     875              TRAP        #15                 ; trap call
000017F2                           876  
000017F2  4242                     877              CLR         D2
000017F4  4243                     878              CLR         D3
000017F6  1404                     879              MOVE.B      D4,D2
000017F8  1605                     880              MOVE.B      D5,D3
000017FA                           881          
000017FA  4EB9 000026A2            882              JSR         printEA
00001800                           883          
00001800                           884          
00001800  43F9 00002F1C            885              LEA         newLine, A1           ; Display space
00001806  103C 000E                886              MOVE.B      #14, D0             ; command for trap call to display message
0000180A  4E4F                     887              TRAP        #15                 ; trap call            
0000180C                           888  
0000180C                           889  
0000180C  6000 F832                890              BRA         LOOP                ; go back to the loop
00001810                           891  
00001810                           892  opNEG   
00001810  43F9 00002F4A            893              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001816  103C 000E                894              MOVE.B      #14, D0             ; command for trap call to display message
0000181A  4E4F                     895              TRAP        #15                 ; trap call
0000181C                           896          
0000181C                           897          
0000181C  1218                     898              MOVE.B      (A0)+, D1
0000181E  1401                     899              MOVE.B      D1,D2               ; copy data over
00001820  EC42                     900              ASR         #six,D2
00001822                           901              
00001822  B47C 0000                902              CMP         #zero,D2
00001826  6700 0016                903              BEQ         opNEGB
0000182A  B47C 0001                904              CMP         #one,D2
0000182E  6700 008E                905              BEQ         opNEGW
00001832  B47C 0002                906              CMP         #two,D2
00001836  6700 0046                907              BEQ         opNEGL
0000183A  6000 14DE                908              BRA         invalid
0000183E                           909  opNEGB
0000183E                           910  
0000183E  43F9 00002FB3            911              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001844  103C 000E                912              MOVE.B      #14, D0             ; command for trap call to display message
00001848  4E4F                     913              TRAP        #15                 ; trap call
0000184A                           914          
0000184A  43F9 00002F20            915              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001850  103C 000E                916              MOVE.B      #14, D0             ; command for trap call to display message
00001854  4E4F                     917              TRAP        #15                 ; trap call
00001856                           918          
00001856  4242                     919              CLR         D2                  ; Clear Data register 2
00001858  3401                     920              MOVE        D1,D2               ; Move byte into D2
0000185A  E642                     921              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000185C  C47C 0007                922              AND         #seven,D2           ; Stores mode
00001860                           923              
00001860  4243                     924              CLR         D3
00001862  3601                     925              MOVE        D1,D3
00001864  C67C 0007                926              AND         #seven,D3
00001868                           927          
00001868  4EB9 000026A2            928              JSR         printEA
0000186E                           929                  
0000186E  43F9 00002F1C            930              LEA         newLine, A1           ; Display space
00001874  103C 000E                931              MOVE.B      #14, D0             ; command for trap call to display message
00001878  4E4F                     932              TRAP        #15                 ; trap call  
0000187A                           933          
0000187A  6000 F7C4                934              BRA         LOOP
0000187E                           935                  
0000187E                           936  
0000187E                           937  opNEGL
0000187E                           938  
0000187E  43F9 00002FB9            939              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001884  103C 000E                940              MOVE.B      #14, D0             ; command for trap call to display message
00001888  4E4F                     941              TRAP        #15                 ; trap call
0000188A                           942  
0000188A  43F9 00002F20            943              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001890  103C 000E                944              MOVE.B      #14, D0             ; command for trap call to display message
00001894  4E4F                     945              TRAP        #15                 ; trap call
00001896                           946                  
00001896  4242                     947              CLR         D2                  ; Clear Data register 2
00001898  3401                     948              MOVE        D1,D2               ; Move byte into D2
0000189A  E642                     949              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000189C  C47C 0007                950              AND         #seven,D2           ; Stores mode
000018A0                           951          
000018A0  4243                     952              CLR         D3
000018A2  3601                     953              MOVE        D1,D3
000018A4  C67C 0007                954              AND         #seven,D3
000018A8                           955          
000018A8  4EB9 000026A2            956              JSR         printEA
000018AE                           957                      
000018AE  43F9 00002F1C            958              LEA         newLine, A1         ; Display space
000018B4  103C 000E                959              MOVE.B      #14, D0             ; command for trap call to display message
000018B8  4E4F                     960              TRAP        #15                 ; trap call  
000018BA                           961          
000018BA  6000 F784                962              BRA         LOOP
000018BE                           963          
000018BE                           964  
000018BE                           965  opNEGW
000018BE                           966  
000018BE  43F9 00002FB6            967              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
000018C4  103C 000E                968              MOVE.B      #14, D0             ; command for trap call to display message
000018C8  4E4F                     969              TRAP        #15                 ; trap call
000018CA                           970          
000018CA  43F9 00002F20            971              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000018D0  103C 000E                972              MOVE.B      #14, D0             ; command for trap call to display message
000018D4  4E4F                     973              TRAP        #15                 ; trap call        
000018D6                           974                  
000018D6  4242                     975              CLR         D2                  ; Clear Data register 2
000018D8  3401                     976              MOVE        D1,D2               ; Move byte into D2
000018DA  E642                     977              ASR         #three,D2           ; Shift mode into place and moves mode into place
000018DC  C47C 0007                978              AND         #seven,D2           ; Stores mode
000018E0                           979          
000018E0  4243                     980              CLR         D3
000018E2  3601                     981              MOVE        D1,D3
000018E4  C67C 0007                982              AND         #seven,D3
000018E8                           983          
000018E8  4EB9 000026A2            984              JSR         printEA
000018EE                           985              
000018EE  43F9 00002F1C            986              LEA         newLine, A1           ; Display space
000018F4  103C 000E                987              MOVE.B      #14, D0             ; command for trap call to display message
000018F8  4E4F                     988              TRAP        #15                 ; trap call  
000018FA                           989          
000018FA  6000 F744                990              BRA         LOOP
000018FE                           991  
000018FE                           992  opRTSJSR
000018FE                           993          
000018FE  1218                     994              MOVE.B      (A0)+, D1
00001900                           995              
00001900  1401                     996              MOVE.B      D1,D2               ; copy data over
00001902  B47C 0075                997              CMP         #117,D2
00001906  6700 0050                998              BEQ         opRTS
0000190A                           999              
0000190A  EC42                    1000              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
0000190C  B47C 0002               1001              CMP         #two,D2             ; Checking if it is JSR
00001910  6700 0006               1002              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001914                          1003  
00001914  6000 1404               1004              BRA         invalid
00001918                          1005  
00001918                          1006  opJSR
00001918                          1007                        
00001918  43F9 00002F52           1008              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
0000191E  103C 000E               1009              MOVE.B      #14, D0             ; command for trap call to display message
00001922  4E4F                    1010              TRAP        #15                 ; trap call
00001924                          1011              
00001924  43F9 00002F20           1012              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000192A  103C 000E               1013              MOVE.B      #14, D0             ; command for trap call to display message
0000192E  4E4F                    1014              TRAP        #15                 ; trap call
00001930                          1015              
00001930  4242                    1016              CLR         D2
00001932  4243                    1017              CLR         D3
00001934                          1018              
00001934  1401                    1019              MOVE.B      D1,D2
00001936  E642                    1020              ASR         #three,D2
00001938  C47C 0007               1021              AND         #seven,D2
0000193C                          1022              
0000193C  1601                    1023              MOVE.B      D1,D3
0000193E  C67C 0007               1024              AND         #seven,D3
00001942                          1025              
00001942  4EB9 000026A2           1026              JSR         printEA
00001948                          1027              
00001948  43F9 00002F1C           1028              LEA         newLine, A1           ; Display space
0000194E  103C 000E               1029              MOVE.B      #14, D0             ; command for trap call to display message
00001952  4E4F                    1030              TRAP        #15                 ; trap call  
00001954                          1031              
00001954  6000 F6EA               1032              BRA         loop            
00001958                          1033  opRTS
00001958                          1034  
00001958  43F9 00002F4E           1035              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
0000195E  103C 000E               1036              MOVE.B      #14, D0             ; command for trap call to display message
00001962  4E4F                    1037              TRAP        #15                 ; trap call
00001964                          1038              
00001964  43F9 00002F1C           1039              LEA         newLine, A1           ; Display space
0000196A  103C 000E               1040              MOVE.B      #14, D0             ; command for trap call to display message
0000196E  4E4F                    1041              TRAP        #15                 ; trap call 
00001970                          1042              
00001970  6000 F6CE               1043              BRA         loop
00001974                          1044  
00001974                          1045  opMOVEMLEA
00001974                          1046  
00001974  43F9 00002F60           1047  opSUBQ  LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
0000197A  103C 000E               1048          MOVE.B      #14, D0             ; command for trap call to display message
0000197E  4E4F                    1049          TRAP        #15                 ; trap call
00001980                          1050  
00001980  43F9 00002F65           1051  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001986  103C 000E               1052          MOVE.B      #14, D0             ; command for trap call to display message
0000198A  4E4F                    1053          TRAP        #15                 ; trap call
0000198C  43F9 00002F20           1054          LEA         space, A1           ; create spaces
00001992  103C 000E               1055          MOVE.B      #14, D0             ; command for trap call to display message
00001996  4E4F                    1056          TRAP        #15                 ; trap call
00001998                          1057  
00001998  43F9 00002F69           1058  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
0000199E  103C 000E               1059          MOVE.B      #14, D0             ; command for trap call to display message
000019A2  4E4F                    1060          TRAP        #15                 ; trap call
000019A4                          1061  
000019A4  43F9 00002F6D           1062  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
000019AA  103C 000E               1063          MOVE.B      #14, D0             ; command for trap call to display message
000019AE  4E4F                    1064          TRAP        #15                 ; trap call
000019B0                          1065  
000019B0  43F9 00002F71           1066  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
000019B6  103C 000E               1067          MOVE.B      #14, D0             ; command for trap call to display message
000019BA  4E4F                    1068          TRAP        #15                 ; trap call
000019BC                          1069  
000019BC  43F9 00002F75           1070  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
000019C2  103C 000E               1071          MOVE.B      #14, D0             ; command for trap call to display message
000019C6  4E4F                    1072          TRAP        #15                 ; trap call
000019C8                          1073  
000019C8  43F9 00002F81           1074  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
000019CE  103C 000E               1075          MOVE.B      #14, D0             ; command for trap call to display message
000019D2  4E4F                    1076          TRAP        #15                 ; trap call
000019D4                          1077  
000019D4  43F9 00002F8D           1078  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
000019DA  103C 000E               1079          MOVE.B      #14, D0             ; command for trap call to display message
000019DE  4E4F                    1080          TRAP        #15                 ; trap call
000019E0  43F9 00002F20           1081          LEA         space, A1           ; create spaces
000019E6  103C 000E               1082          MOVE.B      #14, D0             ; command for trap call to display message
000019EA  4E4F                    1083          TRAP        #15                 ; trap call
000019EC                          1084          
000019EC  E141                    1085          ASL         #eight, D1
000019EE  1218                    1086          MOVE.B      (A0)+, D1
000019F0                          1087          
000019F0  4242                    1088          CLR         D2
000019F2  4243                    1089          CLR         D3
000019F4  1401                    1090          MOVE.B      D1, D2
000019F6  E642                    1091          ASR         #three, D2
000019F8  C47C 0007               1092          AND         #seven, D2
000019FC  1601                    1093          MOVE.B      D1, D3
000019FE  C67C 0007               1094          AND         #seven, D3
00001A02                          1095          
00001A02  4EB9 000026A2           1096          JSR         printEA
00001A08                          1097          
00001A08  43F9 00002F27           1098          LEA         comma, A1           ; create comma
00001A0E  103C 000E               1099          MOVE.B      #14, D0             ; command for trap call to display message
00001A12  4E4F                    1100          TRAP        #15                 ; trap call
00001A14                          1101  
00001A14  4242                    1102          CLR         D2
00001A16  4243                    1103          CLR         D3
00001A18  3601                    1104          MOVE.W      D1, D3
00001A1A  E043                    1105          ASR         #eight, D3
00001A1C  E243                    1106          ASR         #one, D3
00001A1E  C67C 0007               1107          AND         #seven, D3
00001A22                          1108  
00001A22  4EB9 000026A2           1109          JSR         printEA
00001A28                          1110          
00001A28  43F9 00002F1C           1111          LEA         newLine, A1           ; create new line
00001A2E  103C 000E               1112          MOVE.B      #14, D0             ; command for trap call to display message
00001A32  4E4F                    1113          TRAP        #15                 ; trap call
00001A34                          1114          
00001A34  6000 F60A               1115          BRA         LOOP
00001A38                          1116          
00001A38  43F9 00002F92           1117  opADDB  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001A3E  103C 000E               1118          MOVE.B      #14, D0             ; command for trap call to display message
00001A42  4E4F                    1119          TRAP        #15                 ; trap call
00001A44                          1120          
00001A44  43F9 00002FB3           1121          LEA         dispByte, A1        ; display byte
00001A4A  103C 000E               1122          MOVE.B      #14, D0             ; command for trap call to display message
00001A4E  4E4F                    1123          TRAP        #15                 ; trap call
00001A50  43F9 00002F20           1124          LEA         space, A1           ; create spaces
00001A56  103C 000E               1125          MOVE.B      #14, D0             ; command for trap call to display message
00001A5A  4E4F                    1126          TRAP        #15                 ; trap call
00001A5C                          1127          
00001A5C  4242                    1128          CLR         D2
00001A5E  4243                    1129          CLR         D3
00001A60  1401                    1130          MOVE.B      D1, D2
00001A62  E642                    1131          ASR         #three, D2
00001A64  C47C 0007               1132          AND         #seven, D2
00001A68  1601                    1133          MOVE.B      D1, D3
00001A6A  C67C 0007               1134          AND         #seven, D3
00001A6E                          1135          
00001A6E  4EB9 000026A2           1136          JSR         printEA
00001A74                          1137          
00001A74  43F9 00002F27           1138          LEA         comma, A1           ; create comma
00001A7A  103C 000E               1139          MOVE.B      #14, D0             ; command for trap call to display message
00001A7E  4E4F                    1140          TRAP        #15                 ; trap call
00001A80                          1141  
00001A80  4242                    1142          CLR         D2
00001A82  4243                    1143          CLR         D3
00001A84  3601                    1144          MOVE.W      D1, D3
00001A86  E043                    1145          ASR         #eight, D3
00001A88  E243                    1146          ASR         #one, D3
00001A8A  C67C 0007               1147          AND         #seven, D3
00001A8E                          1148  
00001A8E  4EB9 000026A2           1149          JSR         printEA
00001A94                          1150          
00001A94  43F9 00002F1C           1151          LEA         newLine, A1           ; create new line
00001A9A  103C 000E               1152          MOVE.B      #14, D0             ; command for trap call to display message
00001A9E  4E4F                    1153          TRAP        #15                 ; trap call
00001AA0                          1154          
00001AA0  6000 F59E               1155          BRA         LOOP
00001AA4                          1156          
00001AA4  43F9 00002F92           1157  opADDW  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001AAA  103C 000E               1158          MOVE.B      #14, D0             ; command for trap call to display message
00001AAE  4E4F                    1159          TRAP        #15                 ; trap call
00001AB0                          1160  
00001AB0  43F9 00002FB6           1161          LEA         dispWord, A1        ; display word
00001AB6  103C 000E               1162          MOVE.B      #14, D0             ; command for trap call to display message
00001ABA  4E4F                    1163          TRAP        #15                 ; trap call
00001ABC  43F9 00002F20           1164          LEA         space, A1           ; create spaces
00001AC2  103C 000E               1165          MOVE.B      #14, D0             ; command for trap call to display message
00001AC6  4E4F                    1166          TRAP        #15                 ; trap call
00001AC8                          1167          
00001AC8  4242                    1168          CLR         D2
00001ACA  4243                    1169          CLR         D3
00001ACC  1401                    1170          MOVE.B      D1, D2
00001ACE  E642                    1171          ASR         #three, D2
00001AD0  C47C 0007               1172          AND         #seven, D2
00001AD4  1601                    1173          MOVE.B      D1, D3
00001AD6  C67C 0007               1174          AND         #seven, D3
00001ADA                          1175          
00001ADA  4EB9 000026A2           1176          JSR         printEA
00001AE0                          1177          
00001AE0  43F9 00002F27           1178          LEA         comma, A1           ; create comma
00001AE6  103C 000E               1179          MOVE.B      #14, D0             ; command for trap call to display message
00001AEA  4E4F                    1180          TRAP        #15                 ; trap call
00001AEC                          1181  
00001AEC  4242                    1182          CLR         D2
00001AEE  4243                    1183          CLR         D3
00001AF0  3601                    1184          MOVE.W      D1, D3
00001AF2  E043                    1185          ASR         #eight, D3
00001AF4  E243                    1186          ASR         #one, D3
00001AF6  C67C 0007               1187          AND         #seven, D3
00001AFA                          1188  
00001AFA  4EB9 000026A2           1189          JSR         printEA
00001B00                          1190          
00001B00  43F9 00002F1C           1191          LEA         newLine, A1           ; create new line
00001B06  103C 000E               1192          MOVE.B      #14, D0             ; command for trap call to display message
00001B0A  4E4F                    1193          TRAP        #15                 ; trap call
00001B0C                          1194          
00001B0C  6000 F532               1195          BRA         LOOP
00001B10                          1196          
00001B10  43F9 00002F92           1197  opADDL  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001B16  103C 000E               1198          MOVE.B      #14, D0             ; command for trap call to display message
00001B1A  4E4F                    1199          TRAP        #15                 ; trap call
00001B1C                          1200          
00001B1C  43F9 00002FB9           1201          LEA         dispLong, A1        ; display long
00001B22  103C 000E               1202          MOVE.B      #14, D0             ; command for trap call to display message
00001B26  4E4F                    1203          TRAP        #15                 ; trap call
00001B28  43F9 00002F20           1204          LEA         space, A1           ; create spaces
00001B2E  103C 000E               1205          MOVE.B      #14, D0             ; command for trap call to display message
00001B32  4E4F                    1206          TRAP        #15                 ; trap call
00001B34                          1207          
00001B34  4242                    1208          CLR         D2
00001B36  4243                    1209          CLR         D3
00001B38  1401                    1210          MOVE.B      D1, D2
00001B3A  E642                    1211          ASR         #three, D2
00001B3C  C47C 0007               1212          AND         #seven, D2
00001B40  1601                    1213          MOVE.B      D1, D3
00001B42  C67C 0007               1214          AND         #seven, D3
00001B46                          1215          
00001B46  4246                    1216          CLR         D6
00001B48  1C3C 0001               1217          MOVE.B      #1, D6
00001B4C                          1218          
00001B4C  4EB9 000026A2           1219          JSR         printEA
00001B52  4246                    1220          CLR         D6
00001B54                          1221          
00001B54  43F9 00002F27           1222          LEA         comma, A1           ; create comma
00001B5A  103C 000E               1223          MOVE.B      #14, D0             ; command for trap call to display message
00001B5E  4E4F                    1224          TRAP        #15                 ; trap call
00001B60                          1225  
00001B60  4242                    1226          CLR         D2
00001B62  4243                    1227          CLR         D3
00001B64  3601                    1228          MOVE.W      D1, D3
00001B66  E043                    1229          ASR         #eight, D3
00001B68  E243                    1230          ASR         #one, D3
00001B6A  C67C 0007               1231          AND         #seven, D3
00001B6E                          1232  
00001B6E  4EB9 000026A2           1233          JSR         printEA
00001B74                          1234          
00001B74  43F9 00002F1C           1235          LEA         newLine, A1           ; create new line
00001B7A  103C 000E               1236          MOVE.B      #14, D0             ; command for trap call to display message
00001B7E  4E4F                    1237          TRAP        #15                 ; trap call
00001B80                          1238          
00001B80  6000 F4BE               1239          BRA         LOOP
00001B84                          1240  
00001B84  43F9 00002F96           1241  opADDAW LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001B8A  103C 000E               1242          MOVE.B      #14, D0             ; command for trap call to display message
00001B8E  4E4F                    1243          TRAP        #15                 ; trap call
00001B90                          1244          
00001B90  43F9 00002FB6           1245          LEA         dispWord, A1        ; display word
00001B96  103C 000E               1246          MOVE.B      #14, D0             ; command for trap call to display message
00001B9A  4E4F                    1247          TRAP        #15                 ; trap call
00001B9C  43F9 00002F20           1248          LEA         space, A1           ; create spaces
00001BA2  103C 000E               1249          MOVE.B      #14, D0             ; command for trap call to display message
00001BA6  4E4F                    1250          TRAP        #15                 ; trap call
00001BA8                          1251          
00001BA8  4242                    1252          CLR         D2
00001BAA  4243                    1253          CLR         D3
00001BAC  1401                    1254          MOVE.B      D1, D2
00001BAE  E642                    1255          ASR         #three, D2
00001BB0  C47C 0007               1256          AND         #seven, D2
00001BB4  1601                    1257          MOVE.B      D1, D3
00001BB6  C67C 0007               1258          AND         #seven, D3
00001BBA                          1259          
00001BBA  4EB9 000026A2           1260          JSR         printEA
00001BC0                          1261          
00001BC0  43F9 00002F27           1262          LEA         comma, A1           ; create comma
00001BC6  103C 000E               1263          MOVE.B      #14, D0             ; command for trap call to display message
00001BCA  4E4F                    1264          TRAP        #15                 ; trap call
00001BCC                          1265  
00001BCC  4242                    1266          CLR         D2
00001BCE  4243                    1267          CLR         D3
00001BD0  143C 0001               1268          MOVE.B      #one, D2
00001BD4  3601                    1269          MOVE.W      D1, D3
00001BD6  E043                    1270          ASR         #eight, D3
00001BD8  E243                    1271          ASR         #one, D3
00001BDA  C67C 0007               1272          AND         #seven, D3
00001BDE                          1273  
00001BDE  4EB9 000026A2           1274          JSR         printEA
00001BE4                          1275          
00001BE4  43F9 00002F1C           1276          LEA         newLine, A1           ; create new line
00001BEA  103C 000E               1277          MOVE.B      #14, D0             ; command for trap call to display message
00001BEE  4E4F                    1278          TRAP        #15                 ; trap call
00001BF0                          1279          
00001BF0  6000 F44E               1280          BRA         LOOP
00001BF4                          1281  
00001BF4  43F9 00002F96           1282  opADDAL LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001BFA  103C 000E               1283          MOVE.B      #14, D0             ; command for trap call to display message
00001BFE  4E4F                    1284          TRAP        #15                 ; trap call
00001C00                          1285  
00001C00  43F9 00002FB9           1286          LEA         dispLong, A1        ; display long
00001C06  103C 000E               1287          MOVE.B      #14, D0             ; command for trap call to display message
00001C0A  4E4F                    1288          TRAP        #15                 ; trap call
00001C0C  43F9 00002F20           1289          LEA         space, A1           ; create spaces
00001C12  103C 000E               1290          MOVE.B      #14, D0             ; command for trap call to display message
00001C16  4E4F                    1291          TRAP        #15                 ; trap call
00001C18                          1292          
00001C18  4242                    1293          CLR         D2
00001C1A  4243                    1294          CLR         D3
00001C1C  1401                    1295          MOVE.B      D1, D2
00001C1E  E642                    1296          ASR         #three, D2
00001C20  C47C 0007               1297          AND         #seven, D2
00001C24  1601                    1298          MOVE.B      D1, D3
00001C26  C67C 0007               1299          AND         #seven, D3
00001C2A                          1300          
00001C2A  4EB9 000026A2           1301          JSR         printEA
00001C30                          1302          
00001C30  43F9 00002F27           1303          LEA         comma, A1           ; create comma
00001C36  103C 000E               1304          MOVE.B      #14, D0             ; command for trap call to display message
00001C3A  4E4F                    1305          TRAP        #15                 ; trap call
00001C3C                          1306  
00001C3C  4242                    1307          CLR         D2
00001C3E  4243                    1308          CLR         D3
00001C40  143C 0001               1309          MOVE.B      #one, D2
00001C44  3601                    1310          MOVE.W      D1, D3
00001C46  E043                    1311          ASR         #eight, D3
00001C48  E243                    1312          ASR         #one, D3
00001C4A  C67C 0007               1313          AND         #seven, D3
00001C4E                          1314  
00001C4E  4EB9 000026A2           1315          JSR         printEA
00001C54                          1316          
00001C54  43F9 00002F1C           1317          LEA         newLine, A1           ; create new line
00001C5A  103C 000E               1318          MOVE.B      #14, D0             ; command for trap call to display message
00001C5E  4E4F                    1319          TRAP        #15                 ; trap call
00001C60                          1320          
00001C60  6000 F3DE               1321          BRA         LOOP
00001C64                          1322          
00001C64  43F9 00002FA7           1323  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001C6A  103C 000E               1324          MOVE.B      #14, D0             ; command for trap call to display message
00001C6E  4E4F                    1325          TRAP        #15                 ; trap call
00001C70                          1326          
00001C70  43F9 00002FB6           1327          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001C76  103C 000E               1328          MOVE.B      #14, D0             ; command for trap call to display message
00001C7A  4E4F                    1329          TRAP        #15                 ; trap call
00001C7C                          1330          
00001C7C  43F9 00002F20           1331          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001C82  103C 000E               1332          MOVE.B      #14, D0             ; command for trap call to display message
00001C86  4E4F                    1333          TRAP        #15                 ; trap call
00001C88                          1334          
00001C88  4242                    1335          CLR         D2
00001C8A  4243                    1336          CLR         D3
00001C8C  1401                    1337          MOVE.B      D1,D2
00001C8E  1601                    1338          MOVE.B      D1,D3
00001C90                          1339          
00001C90  E602                    1340          ASR.B       #three, D2
00001C92  C47C 0007               1341          AND         #seven, D2
00001C96  C67C 0007               1342          AND         #seven, D3        
00001C9A                          1343          
00001C9A  4EB9 000026A2           1344          JSR         printEA
00001CA0                          1345          
00001CA0  43F9 00002F1C           1346          LEA         newLine, A1           ; Display space
00001CA6  103C 000E               1347          MOVE.B      #14, D0             ; command for trap call to display message
00001CAA  4E4F                    1348          TRAP        #15                 ; trap call
00001CAC                          1349          
00001CAC  6000 F392               1350          BRA         LOOP
00001CB0                          1351  
00001CB0  43F9 00002FA3           1352  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001CB6  103C 000E               1353          MOVE.B      #14, D0             ; command for trap call to display message
00001CBA  4E4F                    1354          TRAP        #15                 ; trap call
00001CBC                          1355          
00001CBC  43F9 00002FB6           1356          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001CC2  103C 000E               1357          MOVE.B      #14, D0             ; command for trap call to display message
00001CC6  4E4F                    1358          TRAP        #15                 ; trap call
00001CC8                          1359          
00001CC8  43F9 00002F20           1360          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001CCE  103C 000E               1361          MOVE.B      #14, D0             ; command for trap call to display message
00001CD2  4E4F                    1362          TRAP        #15                 ; trap call
00001CD4                          1363          
00001CD4  4242                    1364          CLR         D2
00001CD6  4243                    1365          CLR         D3
00001CD8  1401                    1366          MOVE.B      D1,D2
00001CDA  1601                    1367          MOVE.B      D1,D3
00001CDC                          1368          
00001CDC  E602                    1369          ASR.B       #three, D2
00001CDE  C47C 0007               1370          AND         #seven, D2
00001CE2  C67C 0007               1371          AND         #seven, D3        
00001CE6                          1372          
00001CE6  4EB9 000026A2           1373          JSR         printEA
00001CEC                          1374          
00001CEC  43F9 00002F1C           1375          LEA         newLine, A1           ; Display space
00001CF2  103C 000E               1376          MOVE.B      #14, D0             ; command for trap call to display message
00001CF6  4E4F                    1377          TRAP        #15                 ; trap call
00001CF8                          1378          
00001CF8  6000 F346               1379          BRA         LOOP
00001CFC                          1380  
00001CFC  43F9 00002F9F           1381  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00001D02  103C 000E               1382          MOVE.B      #14, D0             ; command for trap call to display message
00001D06  4E4F                    1383          TRAP        #15                 ; trap call
00001D08                          1384          
00001D08  43F9 00002FB6           1385          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001D0E  103C 000E               1386          MOVE.B      #14, D0             ; command for trap call to display message
00001D12  4E4F                    1387          TRAP        #15                 ; trap call
00001D14                          1388          
00001D14  43F9 00002F20           1389          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001D1A  103C 000E               1390          MOVE.B      #14, D0             ; command for trap call to display message
00001D1E  4E4F                    1391          TRAP        #15                 ; trap call
00001D20                          1392          
00001D20  4242                    1393          CLR         D2
00001D22  4243                    1394          CLR         D3
00001D24  1401                    1395          MOVE.B      D1,D2
00001D26  1601                    1396          MOVE.B      D1,D3
00001D28                          1397          
00001D28  E602                    1398          ASR.B       #three, D2
00001D2A  C47C 0007               1399          AND         #seven, D2
00001D2E  C67C 0007               1400          AND         #seven, D3        
00001D32                          1401          
00001D32  4EB9 000026A2           1402          JSR         printEA
00001D38                          1403          
00001D38  43F9 00002F1C           1404          LEA         newLine, A1           ; Display space
00001D3E  103C 000E               1405          MOVE.B      #14, D0             ; command for trap call to display message
00001D42  4E4F                    1406          TRAP        #15                 ; trap call
00001D44                          1407          
00001D44  6000 F2FA               1408          BRA         LOOP
00001D48                          1409  
00001D48  43F9 00002F9B           1410  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001D4E  103C 000E               1411          MOVE.B      #14, D0             ; command for trap call to display message
00001D52  4E4F                    1412          TRAP        #15                 ; trap call
00001D54                          1413          
00001D54  43F9 00002FB6           1414          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001D5A  103C 000E               1415          MOVE.B      #14, D0             ; command for trap call to display message
00001D5E  4E4F                    1416          TRAP        #15                 ; trap call
00001D60                          1417          
00001D60  43F9 00002F20           1418          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001D66  103C 000E               1419          MOVE.B      #14, D0             ; command for trap call to display message
00001D6A  4E4F                    1420          TRAP        #15                 ; trap call
00001D6C                          1421          
00001D6C  4242                    1422          CLR         D2
00001D6E  4243                    1423          CLR         D3
00001D70  1401                    1424          MOVE.B      D1,D2
00001D72  1601                    1425          MOVE.B      D1,D3
00001D74                          1426          
00001D74  E602                    1427          ASR.B       #three, D2
00001D76  C47C 0007               1428          AND         #seven, D2
00001D7A  C67C 0007               1429          AND         #seven, D3        
00001D7E                          1430          
00001D7E  4EB9 000026A2           1431          JSR         printEA
00001D84                          1432          
00001D84  43F9 00002F1C           1433          LEA         newLine, A1           ; Display space
00001D8A  103C 000E               1434          MOVE.B      #14, D0             ; command for trap call to display message
00001D8E  4E4F                    1435          TRAP        #15                 ; trap call
00001D90                          1436          
00001D90  6000 F2AE               1437          BRA         LOOP
00001D94                          1438  
00001D94  43F9 00002FAF           1439  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001D9A  103C 000E               1440          MOVE.B      #14, D0             ; command for trap call to display message
00001D9E  4E4F                    1441          TRAP        #15                 ; trap call
00001DA0                          1442          
00001DA0  43F9 00002FB6           1443          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001DA6  103C 000E               1444          MOVE.B      #14, D0             ; command for trap call to display message
00001DAA  4E4F                    1445          TRAP        #15                 ; trap call
00001DAC                          1446          
00001DAC  43F9 00002F20           1447          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001DB2  103C 000E               1448          MOVE.B      #14, D0             ; command for trap call to display message
00001DB6  4E4F                    1449          TRAP        #15                 ; trap call
00001DB8                          1450          
00001DB8  4242                    1451          CLR         D2
00001DBA  4243                    1452          CLR         D3
00001DBC  1401                    1453          MOVE.B      D1,D2
00001DBE  1601                    1454          MOVE.B      D1,D3
00001DC0                          1455          
00001DC0  E602                    1456          ASR.B       #three, D2
00001DC2  C47C 0007               1457          AND         #seven, D2
00001DC6  C67C 0007               1458          AND         #seven, D3        
00001DCA                          1459          
00001DCA  4EB9 000026A2           1460          JSR         printEA
00001DD0                          1461          
00001DD0  43F9 00002F1C           1462          LEA         newLine, A1           ; Display space
00001DD6  103C 000E               1463          MOVE.B      #14, D0             ; command for trap call to display message
00001DDA  4E4F                    1464          TRAP        #15                 ; trap call
00001DDC                          1465          
00001DDC  6000 F262               1466          BRA         LOOP
00001DE0                          1467  
00001DE0  43F9 00002FAB           1468  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001DE6  103C 000E               1469          MOVE.B      #14, D0             ; command for trap call to display message
00001DEA  4E4F                    1470          TRAP        #15                 ; trap call
00001DEC                          1471          
00001DEC  43F9 00002FB6           1472          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001DF2  103C 000E               1473          MOVE.B      #14, D0             ; command for trap call to display message
00001DF6  4E4F                    1474          TRAP        #15                 ; trap call
00001DF8                          1475          
00001DF8  43F9 00002F20           1476          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001DFE  103C 000E               1477          MOVE.B      #14, D0             ; command for trap call to display message
00001E02  4E4F                    1478          TRAP        #15                 ; trap call
00001E04                          1479          
00001E04  4242                    1480          CLR         D2
00001E06  4243                    1481          CLR         D3
00001E08  1401                    1482          MOVE.B      D1,D2
00001E0A  1601                    1483          MOVE.B      D1,D3
00001E0C                          1484          
00001E0C  E602                    1485          ASR.B       #three, D2
00001E0E  C47C 0007               1486          AND         #seven, D2
00001E12  C67C 0007               1487          AND         #seven, D3        
00001E16                          1488          
00001E16  4EB9 000026A2           1489          JSR         printEA
00001E1C                          1490          
00001E1C  43F9 00002F1C           1491          LEA         newLine, A1           ; Display space
00001E22  103C 000E               1492          MOVE.B      #14, D0             ; command for trap call to display message
00001E26  4E4F                    1493          TRAP        #15                 ; trap call
00001E28                          1494          
00001E28  6000 F216               1495          BRA         LOOP
00001E2C                          1496          
00001E2C  4242                    1497  memSB   CLR         D2
00001E2E  1401                    1498          MOVE.B      D1,D2
00001E30  E642                    1499          ASR         #three, D2
00001E32                          1500          
00001E32  C47C 0007               1501          AND         #$07, D2
00001E36                          1502          
00001E36  B43C 0000               1503          CMP.B       #zero, D2
00001E3A  6700 002E               1504          BEQ         opASBI
00001E3E  B43C 0004               1505          CMP.B       #four, D2
00001E42  6700 0088               1506          BEQ         opASBR
00001E46  B43C 0001               1507          CMP.B       #one, D2
00001E4A  6700 00E2               1508          BEQ         opLSBI
00001E4E  B43C 0005               1509          CMP.B       #five, D2
00001E52  6700 013C               1510          BEQ         opLSBR
00001E56  B43C 0003               1511          CMP.B       #three, D2
00001E5A  6700 0196               1512          BEQ         opROBI
00001E5E  B43C 0007               1513          CMP.B       #seven, D2
00001E62  6700 01F0               1514          BEQ         opROBR
00001E66  6000 106E               1515          BRA         printInvalid
00001E6A                          1516          
00001E6A  4242                    1517  opASBI  CLR         D2
00001E6C  3401                    1518          MOVE.W      D1, D2
00001E6E  E042                    1519          ASR         #eight, D2
00001E70  C47C 0001               1520          AND         #$01, D2
00001E74                          1521      
00001E74  B43C 0000               1522          CMP.B       #zero, D2
00001E78  6700 000E               1523          BEQ         opASRBI
00001E7C  B43C 0001               1524          CMP.B       #one, D2
00001E80  6700 0028               1525          BEQ         opASLBI
00001E84  6000 1050               1526          BRA         printInvalid
00001E88                          1527          
00001E88  43F9 00002FA3           1528  opASRBI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001E8E  103C 000E               1529          MOVE.B      #14, D0             ; command for trap call to display message
00001E92  4E4F                    1530          TRAP        #15                 ; trap call
00001E94                          1531  
00001E94  43F9 00002FB3           1532          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001E9A  103C 000E               1533          MOVE.B      #14, D0             ; command for trap call to display message
00001E9E  4E4F                    1534          TRAP        #15                 ; trap call
00001EA0                          1535          
00001EA0  4EB9 000025CA           1536          JSR         PrntImm
00001EA6                          1537          
00001EA6  6000 F198               1538          BRA         LOOP
00001EAA                          1539  
00001EAA  43F9 00002FA7           1540  opASLBI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001EB0  103C 000E               1541          MOVE.B      #14, D0             ; command for trap call to display message
00001EB4  4E4F                    1542          TRAP        #15                 ; trap call
00001EB6                          1543  
00001EB6  43F9 00002FB3           1544          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001EBC  103C 000E               1545          MOVE.B      #14, D0             ; command for trap call to display message
00001EC0  4E4F                    1546          TRAP        #15                 ; trap call
00001EC2                          1547          
00001EC2  4EB9 000025CA           1548          JSR         PrntImm
00001EC8                          1549          
00001EC8  6000 F176               1550          BRA         LOOP
00001ECC                          1551  
00001ECC  4242                    1552  opASBR  CLR         D2
00001ECE  3401                    1553          MOVE.W      D1, D2
00001ED0  E042                    1554          ASR         #eight, D2
00001ED2  C47C 0001               1555          AND         #$01, D2
00001ED6                          1556      
00001ED6  B43C 0000               1557          CMP.B       #zero, D2
00001EDA  6700 000E               1558          BEQ         opASRBR
00001EDE  B43C 0001               1559          CMP.B       #one, D2
00001EE2  6700 0028               1560          BEQ         opASLBR
00001EE6  6000 0FEE               1561          BRA         printInvalid 
00001EEA                          1562          
00001EEA  43F9 00002FA3           1563  opASRBR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001EF0  103C 000E               1564          MOVE.B      #14, D0             ; command for trap call to display message
00001EF4  4E4F                    1565          TRAP        #15                 ; trap call
00001EF6                          1566  
00001EF6  43F9 00002FB3           1567          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001EFC  103C 000E               1568          MOVE.B      #14, D0             ; command for trap call to display message
00001F00  4E4F                    1569          TRAP        #15                 ; trap call
00001F02                          1570          
00001F02  4EB9 00002626           1571          JSR         PrntReg
00001F08                          1572          
00001F08  6000 F136               1573          BRA         LOOP
00001F0C                          1574  
00001F0C  43F9 00002FA7           1575  opASLBR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001F12  103C 000E               1576          MOVE.B      #14, D0             ; command for trap call to display message
00001F16  4E4F                    1577          TRAP        #15                 ; trap call
00001F18                          1578  
00001F18  43F9 00002FB3           1579          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F1E  103C 000E               1580          MOVE.B      #14, D0             ; command for trap call to display message
00001F22  4E4F                    1581          TRAP        #15                 ; trap call
00001F24                          1582          
00001F24  4EB9 00002626           1583          JSR         PrntReg
00001F2A                          1584          
00001F2A  6000 F114               1585          BRA         LOOP
00001F2E                          1586  
00001F2E  4242                    1587  opLSBI  CLR         D2
00001F30  3401                    1588          MOVE.W      D1, D2
00001F32  E042                    1589          ASR         #eight, D2
00001F34  C47C 0001               1590          AND         #$01, D2
00001F38                          1591      
00001F38  B43C 0000               1592          CMP.B       #zero, D2
00001F3C  6700 000E               1593          BEQ         opLSRBI
00001F40  B43C 0001               1594          CMP.B       #one, D2
00001F44  6700 0028               1595          BEQ         opLSLBI
00001F48  6000 0F8C               1596          BRA         printInvalid 
00001F4C                          1597          
00001F4C  43F9 00002F9B           1598  opLSRBI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F52  103C 000E               1599          MOVE.B      #14, D0             ; command for trap call to display message
00001F56  4E4F                    1600          TRAP        #15                 ; trap call
00001F58                          1601  
00001F58  43F9 00002FB3           1602          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F5E  103C 000E               1603          MOVE.B      #14, D0             ; command for trap call to display message
00001F62  4E4F                    1604          TRAP        #15                 ; trap call
00001F64                          1605          
00001F64  4EB9 000025CA           1606          JSR         PrntImm
00001F6A                          1607          
00001F6A  6000 F0D4               1608          BRA         LOOP
00001F6E                          1609  
00001F6E                          1610  
00001F6E  43F9 00002F9F           1611  opLSLBI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F74  103C 000E               1612          MOVE.B      #14, D0             ; command for trap call to display message
00001F78  4E4F                    1613          TRAP        #15                 ; trap call
00001F7A                          1614  
00001F7A  43F9 00002FB3           1615          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F80  103C 000E               1616          MOVE.B      #14, D0             ; command for trap call to display message
00001F84  4E4F                    1617          TRAP        #15                 ; trap call
00001F86                          1618          
00001F86  4EB9 000025CA           1619          JSR         PrntImm
00001F8C                          1620          
00001F8C  6000 F0B2               1621          BRA         LOOP
00001F90                          1622  
00001F90                          1623  
00001F90  4242                    1624  opLSBR  CLR         D2
00001F92  3401                    1625          MOVE.W      D1, D2
00001F94  E042                    1626          ASR         #eight, D2
00001F96  C47C 0001               1627          AND         #$01, D2
00001F9A                          1628      
00001F9A  B43C 0000               1629          CMP.B       #zero, D2
00001F9E  6700 000E               1630          BEQ         opLSRBR
00001FA2  B43C 0001               1631          CMP.B       #one, D2
00001FA6  6700 0028               1632          BEQ         opLSLBR
00001FAA  6000 0F2A               1633          BRA         printInvalid 
00001FAE                          1634          
00001FAE  43F9 00002F9B           1635  opLSRBR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001FB4  103C 000E               1636          MOVE.B      #14, D0             ; command for trap call to display message
00001FB8  4E4F                    1637          TRAP        #15                 ; trap call
00001FBA                          1638  
00001FBA  43F9 00002FB3           1639          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001FC0  103C 000E               1640          MOVE.B      #14, D0             ; command for trap call to display message
00001FC4  4E4F                    1641          TRAP        #15                 ; trap call
00001FC6                          1642          
00001FC6  4EB9 00002626           1643          JSR         PrntReg
00001FCC                          1644          
00001FCC  6000 F072               1645          BRA         LOOP
00001FD0                          1646          
00001FD0  43F9 00002F9F           1647  opLSLBR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001FD6  103C 000E               1648          MOVE.B      #14, D0             ; command for trap call to display message
00001FDA  4E4F                    1649          TRAP        #15                 ; trap call
00001FDC                          1650  
00001FDC  43F9 00002FB3           1651          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001FE2  103C 000E               1652          MOVE.B      #14, D0             ; command for trap call to display message
00001FE6  4E4F                    1653          TRAP        #15                 ; trap call
00001FE8                          1654          
00001FE8  4EB9 00002626           1655          JSR         PrntReg
00001FEE                          1656          
00001FEE  6000 F050               1657          BRA         LOOP
00001FF2                          1658  
00001FF2                          1659  
00001FF2                          1660  
00001FF2  4242                    1661  opROBI  CLR         D2
00001FF4  3401                    1662          MOVE.W      D1, D2
00001FF6  E042                    1663          ASR         #eight, D2
00001FF8  C47C 0001               1664          AND         #$01, D2
00001FFC                          1665      
00001FFC  B43C 0000               1666          CMP.B       #zero, D2
00002000  6700 000E               1667          BEQ         opRORBI
00002004  B43C 0001               1668          CMP.B       #one, D2
00002008  6700 0028               1669          BEQ         opROLBI
0000200C  6000 0EC8               1670          BRA         printInvalid 
00002010                          1671          
00002010  43F9 00002FAB           1672  opRORBI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002016  103C 000E               1673          MOVE.B      #14, D0             ; command for trap call to display message
0000201A  4E4F                    1674          TRAP        #15                 ; trap call
0000201C                          1675  
0000201C  43F9 00002FB3           1676          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002022  103C 000E               1677          MOVE.B      #14, D0             ; command for trap call to display message
00002026  4E4F                    1678          TRAP        #15                 ; trap call
00002028                          1679          
00002028  4EB9 000025CA           1680          JSR         PrntImm
0000202E                          1681          
0000202E  6000 F010               1682          BRA         LOOP
00002032                          1683  
00002032  43F9 00002FAF           1684  opROLBI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002038  103C 000E               1685          MOVE.B      #14, D0             ; command for trap call to display message
0000203C  4E4F                    1686          TRAP        #15                 ; trap call
0000203E                          1687  
0000203E  43F9 00002FB3           1688          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002044  103C 000E               1689          MOVE.B      #14, D0             ; command for trap call to display message
00002048  4E4F                    1690          TRAP        #15                 ; trap call
0000204A                          1691          
0000204A  4EB9 000025CA           1692          JSR         PrntImm
00002050                          1693          
00002050  6000 EFEE               1694          BRA         LOOP
00002054                          1695  
00002054  4242                    1696  opROBR  CLR         D2
00002056  3401                    1697          MOVE.W      D1, D2
00002058  E042                    1698          ASR         #eight, D2
0000205A  C47C 0001               1699          AND         #$01, D2
0000205E                          1700      
0000205E  B43C 0000               1701          CMP.B       #zero, D2
00002062  6700 000E               1702          BEQ         opRORBR
00002066  B43C 0001               1703          CMP.B       #one, D2
0000206A  6700 0028               1704          BEQ         opROLBR
0000206E  6000 0E66               1705          BRA         printInvalid     
00002072                          1706          
00002072  43F9 00002FAB           1707  opRORBR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002078  103C 000E               1708          MOVE.B      #14, D0             ; command for trap call to display message
0000207C  4E4F                    1709          TRAP        #15                 ; trap call
0000207E                          1710  
0000207E  43F9 00002FB3           1711          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002084  103C 000E               1712          MOVE.B      #14, D0             ; command for trap call to display message
00002088  4E4F                    1713          TRAP        #15                 ; trap call
0000208A                          1714          
0000208A  4EB9 00002626           1715          JSR         PrntReg
00002090                          1716          
00002090  6000 EFAE               1717          BRA         LOOP
00002094                          1718  
00002094  43F9 00002FAF           1719  opROLBR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000209A  103C 000E               1720          MOVE.B      #14, D0             ; command for trap call to display message
0000209E  4E4F                    1721          TRAP        #15                 ; trap call
000020A0                          1722  
000020A0  43F9 00002FB3           1723          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000020A6  103C 000E               1724          MOVE.B      #14, D0             ; command for trap call to display message
000020AA  4E4F                    1725          TRAP        #15                 ; trap call
000020AC                          1726          
000020AC  4EB9 00002626           1727          JSR         PrntReg
000020B2                          1728          
000020B2  6000 EF8C               1729          BRA         LOOP       
000020B6                          1730  
000020B6  4242                    1731  memSW   CLR         D2
000020B8  1401                    1732          MOVE.B      D1,D2
000020BA  E642                    1733          ASR         #three, D2
000020BC                          1734          
000020BC  C47C 0007               1735          AND         #$07, D2
000020C0                          1736          
000020C0  B43C 0000               1737          CMP.B       #zero, D2
000020C4  6700 002E               1738          BEQ         opASWI
000020C8  B43C 0004               1739          CMP.B       #four, D2
000020CC  6700 0088               1740          BEQ         opASWR
000020D0  B43C 0001               1741          CMP.B       #one, D2
000020D4  6700 00E2               1742          BEQ         opLSWI
000020D8  B43C 0005               1743          CMP.B       #five, D2
000020DC  6700 013C               1744          BEQ         opLSWR
000020E0  B43C 0003               1745          CMP.B       #three, D2
000020E4  6700 0196               1746          BEQ         opROWI
000020E8  B43C 0007               1747          CMP.B       #seven, D2
000020EC  6700 01F0               1748          BEQ         opROWR
000020F0  6000 0DE4               1749          BRA         printInvalid
000020F4                          1750          
000020F4  4242                    1751  opASWI  CLR         D2
000020F6  3401                    1752          MOVE.W      D1, D2
000020F8  E042                    1753          ASR         #eight, D2
000020FA  C47C 0001               1754          AND         #$01, D2
000020FE                          1755      
000020FE  B43C 0000               1756          CMP.B       #zero, D2
00002102  6700 000E               1757          BEQ         opASRWI
00002106  B43C 0001               1758          CMP.B       #one, D2
0000210A  6700 0028               1759          BEQ         opASLWI
0000210E  6000 0DC6               1760          BRA         printInvalid
00002112                          1761          
00002112  43F9 00002FA3           1762  opASRWI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002118  103C 000E               1763          MOVE.B      #14, D0             ; command for trap call to display message
0000211C  4E4F                    1764          TRAP        #15                 ; trap call
0000211E                          1765  
0000211E  43F9 00002FB6           1766          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002124  103C 000E               1767          MOVE.B      #14, D0             ; command for trap call to display message
00002128  4E4F                    1768          TRAP        #15                 ; trap call
0000212A                          1769          
0000212A  4EB9 000025CA           1770          JSR         PrntImm
00002130                          1771          
00002130  6000 EF0E               1772          BRA         LOOP
00002134                          1773  
00002134  43F9 00002FA7           1774  opASLWI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000213A  103C 000E               1775          MOVE.B      #14, D0             ; command for trap call to display message
0000213E  4E4F                    1776          TRAP        #15                 ; trap call
00002140                          1777  
00002140  43F9 00002FB6           1778          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002146  103C 000E               1779          MOVE.B      #14, D0             ; command for trap call to display message
0000214A  4E4F                    1780          TRAP        #15                 ; trap call
0000214C                          1781          
0000214C  4EB9 000025CA           1782          JSR         PrntImm
00002152                          1783          
00002152  6000 EEEC               1784          BRA         LOOP
00002156                          1785  
00002156  4242                    1786  opASWR  CLR         D2
00002158  3401                    1787          MOVE.W      D1, D2
0000215A  E042                    1788          ASR         #eight, D2
0000215C  C47C 0001               1789          AND         #$01, D2
00002160                          1790      
00002160  B43C 0000               1791          CMP.B       #zero, D2
00002164  6700 000E               1792          BEQ         opASRWR
00002168  B43C 0001               1793          CMP.B       #one, D2
0000216C  6700 0028               1794          BEQ         opASLWR
00002170  6000 0D64               1795          BRA         printInvalid 
00002174                          1796          
00002174  43F9 00002FA3           1797  opASRWR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000217A  103C 000E               1798          MOVE.B      #14, D0             ; command for trap call to display message
0000217E  4E4F                    1799          TRAP        #15                 ; trap call
00002180                          1800  
00002180  43F9 00002FB6           1801          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002186  103C 000E               1802          MOVE.B      #14, D0             ; command for trap call to display message
0000218A  4E4F                    1803          TRAP        #15                 ; trap call
0000218C                          1804          
0000218C  4EB9 00002626           1805          JSR         PrntReg
00002192                          1806          
00002192  6000 EEAC               1807          BRA         LOOP
00002196                          1808  
00002196  43F9 00002FA7           1809  opASLWR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000219C  103C 000E               1810          MOVE.B      #14, D0             ; command for trap call to display message
000021A0  4E4F                    1811          TRAP        #15                 ; trap call
000021A2                          1812  
000021A2  43F9 00002FB6           1813          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000021A8  103C 000E               1814          MOVE.B      #14, D0             ; command for trap call to display message
000021AC  4E4F                    1815          TRAP        #15                 ; trap call
000021AE                          1816          
000021AE  4EB9 00002626           1817          JSR         PrntReg
000021B4                          1818          
000021B4  6000 EE8A               1819          BRA         LOOP
000021B8                          1820  
000021B8  4242                    1821  opLSWI  CLR         D2
000021BA  3401                    1822          MOVE.W      D1, D2
000021BC  E042                    1823          ASR         #eight, D2
000021BE  C47C 0001               1824          AND         #$01, D2
000021C2                          1825      
000021C2  B43C 0000               1826          CMP.B       #zero, D2
000021C6  6700 000E               1827          BEQ         opLSRWI
000021CA  B43C 0001               1828          CMP.B       #one, D2
000021CE  6700 0028               1829          BEQ         opLSLWI
000021D2  6000 0D02               1830          BRA         printInvalid 
000021D6                          1831          
000021D6  43F9 00002F9B           1832  opLSRWI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000021DC  103C 000E               1833          MOVE.B      #14, D0             ; command for trap call to display message
000021E0  4E4F                    1834          TRAP        #15                 ; trap call
000021E2                          1835  
000021E2  43F9 00002FB6           1836          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000021E8  103C 000E               1837          MOVE.B      #14, D0             ; command for trap call to display message
000021EC  4E4F                    1838          TRAP        #15                 ; trap call
000021EE                          1839          
000021EE  4EB9 000025CA           1840          JSR         PrntImm
000021F4                          1841          
000021F4  6000 EE4A               1842          BRA         LOOP
000021F8                          1843  
000021F8                          1844  
000021F8  43F9 00002F9F           1845  opLSLWI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000021FE  103C 000E               1846          MOVE.B      #14, D0             ; command for trap call to display message
00002202  4E4F                    1847          TRAP        #15                 ; trap call
00002204                          1848  
00002204  43F9 00002FB6           1849          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000220A  103C 000E               1850          MOVE.B      #14, D0             ; command for trap call to display message
0000220E  4E4F                    1851          TRAP        #15                 ; trap call
00002210                          1852          
00002210  4EB9 000025CA           1853          JSR         PrntImm
00002216                          1854          
00002216  6000 EE28               1855          BRA         LOOP
0000221A                          1856  
0000221A                          1857  
0000221A  4242                    1858  opLSWR  CLR         D2
0000221C  3401                    1859          MOVE.W      D1, D2
0000221E  E042                    1860          ASR         #eight, D2
00002220  C47C 0001               1861          AND         #$01, D2
00002224                          1862      
00002224  B43C 0000               1863          CMP.B       #zero, D2
00002228  6700 000E               1864          BEQ         opLSRWR
0000222C  B43C 0001               1865          CMP.B       #one, D2
00002230  6700 0028               1866          BEQ         opLSLWR
00002234  6000 0CA0               1867          BRA         printInvalid 
00002238                          1868          
00002238  43F9 00002F9B           1869  opLSRWR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000223E  103C 000E               1870          MOVE.B      #14, D0             ; command for trap call to display message
00002242  4E4F                    1871          TRAP        #15                 ; trap call
00002244                          1872  
00002244  43F9 00002FB6           1873          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000224A  103C 000E               1874          MOVE.B      #14, D0             ; command for trap call to display message
0000224E  4E4F                    1875          TRAP        #15                 ; trap call
00002250                          1876          
00002250  4EB9 00002626           1877          JSR         PrntReg
00002256                          1878          
00002256  6000 EDE8               1879          BRA         LOOP
0000225A                          1880          
0000225A  43F9 00002F9F           1881  opLSLWR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002260  103C 000E               1882          MOVE.B      #14, D0             ; command for trap call to display message
00002264  4E4F                    1883          TRAP        #15                 ; trap call
00002266                          1884  
00002266  43F9 00002FB6           1885          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000226C  103C 000E               1886          MOVE.B      #14, D0             ; command for trap call to display message
00002270  4E4F                    1887          TRAP        #15                 ; trap call
00002272                          1888          
00002272  4EB9 00002626           1889          JSR         PrntReg
00002278                          1890          
00002278  6000 EDC6               1891          BRA         LOOP
0000227C                          1892  
0000227C                          1893  
0000227C                          1894  
0000227C  4242                    1895  opROWI  CLR         D2
0000227E  3401                    1896          MOVE.W      D1, D2
00002280  E042                    1897          ASR         #eight, D2
00002282  C47C 0001               1898          AND         #$01, D2
00002286                          1899      
00002286  B43C 0000               1900          CMP.B       #zero, D2
0000228A  6700 000E               1901          BEQ         opRORWI
0000228E  B43C 0001               1902          CMP.B       #one, D2
00002292  6700 0028               1903          BEQ         opROLWI
00002296  6000 0C3E               1904          BRA         printInvalid 
0000229A                          1905          
0000229A  43F9 00002FAB           1906  opRORWI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000022A0  103C 000E               1907          MOVE.B      #14, D0             ; command for trap call to display message
000022A4  4E4F                    1908          TRAP        #15                 ; trap call
000022A6                          1909  
000022A6  43F9 00002FB6           1910          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000022AC  103C 000E               1911          MOVE.B      #14, D0             ; command for trap call to display message
000022B0  4E4F                    1912          TRAP        #15                 ; trap call
000022B2                          1913          
000022B2  4EB9 000025CA           1914          JSR         PrntImm
000022B8                          1915          
000022B8  6000 ED86               1916          BRA         LOOP
000022BC                          1917  
000022BC  43F9 00002FAF           1918  opROLWI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000022C2  103C 000E               1919          MOVE.B      #14, D0             ; command for trap call to display message
000022C6  4E4F                    1920          TRAP        #15                 ; trap call
000022C8                          1921  
000022C8  43F9 00002FB6           1922          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000022CE  103C 000E               1923          MOVE.B      #14, D0             ; command for trap call to display message
000022D2  4E4F                    1924          TRAP        #15                 ; trap call
000022D4                          1925          
000022D4  4EB9 000025CA           1926          JSR         PrntImm
000022DA                          1927          
000022DA  6000 ED64               1928          BRA         LOOP
000022DE                          1929  
000022DE  4242                    1930  opROWR  CLR         D2
000022E0  3401                    1931          MOVE.W      D1, D2
000022E2  E042                    1932          ASR         #eight, D2
000022E4  C47C 0001               1933          AND         #$01, D2
000022E8                          1934      
000022E8  B43C 0000               1935          CMP.B       #zero, D2
000022EC  6700 000E               1936          BEQ         opRORWR
000022F0  B43C 0001               1937          CMP.B       #one, D2
000022F4  6700 0028               1938          BEQ         opROLWR
000022F8  6000 0BDC               1939          BRA         printInvalid     
000022FC                          1940          
000022FC  43F9 00002FAB           1941  opRORWR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002302  103C 000E               1942          MOVE.B      #14, D0             ; command for trap call to display message
00002306  4E4F                    1943          TRAP        #15                 ; trap call
00002308                          1944  
00002308  43F9 00002FB6           1945          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000230E  103C 000E               1946          MOVE.B      #14, D0             ; command for trap call to display message
00002312  4E4F                    1947          TRAP        #15                 ; trap call
00002314                          1948          
00002314  4EB9 00002626           1949          JSR         PrntReg
0000231A                          1950          
0000231A  6000 ED24               1951          BRA         LOOP
0000231E                          1952  
0000231E  43F9 00002FAF           1953  opROLWR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002324  103C 000E               1954          MOVE.B      #14, D0             ; command for trap call to display message
00002328  4E4F                    1955          TRAP        #15                 ; trap call
0000232A                          1956  
0000232A  43F9 00002FB6           1957          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002330  103C 000E               1958          MOVE.B      #14, D0             ; command for trap call to display message
00002334  4E4F                    1959          TRAP        #15                 ; trap call
00002336                          1960          
00002336  4EB9 00002626           1961          JSR         PrntReg
0000233C                          1962          
0000233C  6000 ED02               1963          BRA         LOOP
00002340                          1964  
00002340  4242                    1965  memSL   CLR         D2
00002342  1401                    1966          MOVE.B      D1,D2
00002344  E642                    1967          ASR         #three, D2
00002346                          1968          
00002346  C47C 0007               1969          AND         #$07, D2
0000234A                          1970          
0000234A  B43C 0000               1971          CMP.B       #zero, D2
0000234E  6700 002E               1972          BEQ         opASLI
00002352  B43C 0004               1973          CMP.B       #four, D2
00002356  6700 0088               1974          BEQ         opASLR
0000235A  B43C 0001               1975          CMP.B       #one, D2
0000235E  6700 00E2               1976          BEQ         opLSLI
00002362  B43C 0005               1977          CMP.B       #five, D2
00002366  6700 013C               1978          BEQ         opLSLR
0000236A  B43C 0003               1979          CMP.B       #three, D2
0000236E  6700 0196               1980          BEQ         opROLI
00002372  B43C 0007               1981          CMP.B       #seven, D2
00002376  6700 01F0               1982          BEQ         opROLR
0000237A  6000 0B5A               1983          BRA         printInvalid
0000237E                          1984          
0000237E  4242                    1985  opASLI  CLR         D2
00002380  3401                    1986          MOVE.W      D1, D2
00002382  E042                    1987          ASR         #eight, D2
00002384  C47C 0001               1988          AND         #$01, D2
00002388                          1989      
00002388  B43C 0000               1990          CMP.B       #zero, D2
0000238C  6700 000E               1991          BEQ         opASRLI
00002390  B43C 0001               1992          CMP.B       #one, D2
00002394  6700 0028               1993          BEQ         opASLLI
00002398  6000 0B3C               1994          BRA         printInvalid
0000239C                          1995          
0000239C  43F9 00002FA3           1996  opASRLI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000023A2  103C 000E               1997          MOVE.B      #14, D0             ; command for trap call to display message
000023A6  4E4F                    1998          TRAP        #15                 ; trap call
000023A8                          1999  
000023A8  43F9 00002FB9           2000          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
000023AE  103C 000E               2001          MOVE.B      #14, D0             ; command for trap call to display message
000023B2  4E4F                    2002          TRAP        #15                 ; trap call
000023B4                          2003          
000023B4  4EB9 000025CA           2004          JSR         PrntImm
000023BA                          2005          
000023BA  6000 EC84               2006          BRA         LOOP
000023BE                          2007  
000023BE  43F9 00002FA7           2008  opASLLI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000023C4  103C 000E               2009          MOVE.B      #14, D0             ; command for trap call to display message
000023C8  4E4F                    2010          TRAP        #15                 ; trap call
000023CA                          2011  
000023CA  43F9 00002FB9           2012          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
000023D0  103C 000E               2013          MOVE.B      #14, D0             ; command for trap call to display message
000023D4  4E4F                    2014          TRAP        #15                 ; trap call
000023D6                          2015          
000023D6  4EB9 000025CA           2016          JSR         PrntImm
000023DC                          2017          
000023DC  6000 EC62               2018          BRA         LOOP
000023E0                          2019  
000023E0  4242                    2020  opASLR  CLR         D2
000023E2  3401                    2021          MOVE.W      D1, D2
000023E4  E042                    2022          ASR         #eight, D2
000023E6  C47C 0001               2023          AND         #$01, D2
000023EA                          2024      
000023EA  B43C 0000               2025          CMP.B       #zero, D2
000023EE  6700 000E               2026          BEQ         opASRLR
000023F2  B43C 0001               2027          CMP.B       #one, D2
000023F6  6700 0028               2028          BEQ         opASLLR
000023FA  6000 0ADA               2029          BRA         printInvalid 
000023FE                          2030          
000023FE  43F9 00002FA3           2031  opASRLR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002404  103C 000E               2032          MOVE.B      #14, D0             ; command for trap call to display message
00002408  4E4F                    2033          TRAP        #15                 ; trap call
0000240A                          2034  
0000240A  43F9 00002FB9           2035          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002410  103C 000E               2036          MOVE.B      #14, D0             ; command for trap call to display message
00002414  4E4F                    2037          TRAP        #15                 ; trap call
00002416                          2038          
00002416  4EB9 00002626           2039          JSR         PrntReg
0000241C                          2040          
0000241C  6000 EC22               2041          BRA         LOOP
00002420                          2042  
00002420  43F9 00002FA7           2043  opASLLR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002426  103C 000E               2044          MOVE.B      #14, D0             ; command for trap call to display message
0000242A  4E4F                    2045          TRAP        #15                 ; trap call
0000242C                          2046  
0000242C  43F9 00002FB9           2047          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002432  103C 000E               2048          MOVE.B      #14, D0             ; command for trap call to display message
00002436  4E4F                    2049          TRAP        #15                 ; trap call
00002438                          2050          
00002438  4EB9 00002626           2051          JSR         PrntReg
0000243E                          2052          
0000243E  6000 EC00               2053          BRA         LOOP
00002442                          2054  
00002442  4242                    2055  opLSLI  CLR         D2
00002444  3401                    2056          MOVE.W      D1, D2
00002446  E042                    2057          ASR         #eight, D2
00002448  C47C 0001               2058          AND         #$01, D2
0000244C                          2059      
0000244C  B43C 0000               2060          CMP.B       #zero, D2
00002450  6700 000E               2061          BEQ         opLSRLI
00002454  B43C 0001               2062          CMP.B       #one, D2
00002458  6700 0028               2063          BEQ         opLSLLI
0000245C  6000 0A78               2064          BRA         printInvalid 
00002460                          2065          
00002460  43F9 00002F9B           2066  opLSRLI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002466  103C 000E               2067          MOVE.B      #14, D0             ; command for trap call to display message
0000246A  4E4F                    2068          TRAP        #15                 ; trap call
0000246C                          2069  
0000246C  43F9 00002FB9           2070          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002472  103C 000E               2071          MOVE.B      #14, D0             ; command for trap call to display message
00002476  4E4F                    2072          TRAP        #15                 ; trap call
00002478                          2073          
00002478  4EB9 000025CA           2074          JSR         PrntImm
0000247E                          2075          
0000247E  6000 EBC0               2076          BRA         LOOP
00002482                          2077  
00002482                          2078  
00002482  43F9 00002F9F           2079  opLSLLI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002488  103C 000E               2080          MOVE.B      #14, D0             ; command for trap call to display message
0000248C  4E4F                    2081          TRAP        #15                 ; trap call
0000248E                          2082  
0000248E  43F9 00002FB9           2083          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002494  103C 000E               2084          MOVE.B      #14, D0             ; command for trap call to display message
00002498  4E4F                    2085          TRAP        #15                 ; trap call
0000249A                          2086          
0000249A  4EB9 000025CA           2087          JSR         PrntImm
000024A0                          2088          
000024A0  6000 EB9E               2089          BRA         LOOP
000024A4                          2090  
000024A4                          2091  
000024A4  4242                    2092  opLSLR  CLR         D2
000024A6  3401                    2093          MOVE.W      D1, D2
000024A8  E042                    2094          ASR         #eight, D2
000024AA  C47C 0001               2095          AND         #$01, D2
000024AE                          2096      
000024AE  B43C 0000               2097          CMP.B       #zero, D2
000024B2  6700 000E               2098          BEQ         opLSRLR
000024B6  B43C 0001               2099          CMP.B       #one, D2
000024BA  6700 0028               2100          BEQ         opLSLLR
000024BE  6000 0A16               2101          BRA         printInvalid 
000024C2                          2102          
000024C2  43F9 00002F9B           2103  opLSRLR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024C8  103C 000E               2104          MOVE.B      #14, D0             ; command for trap call to display message
000024CC  4E4F                    2105          TRAP        #15                 ; trap call
000024CE                          2106  
000024CE  43F9 00002FB9           2107          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
000024D4  103C 000E               2108          MOVE.B      #14, D0             ; command for trap call to display message
000024D8  4E4F                    2109          TRAP        #15                 ; trap call
000024DA                          2110          
000024DA  4EB9 00002626           2111          JSR         PrntReg
000024E0                          2112          
000024E0  6000 EB5E               2113          BRA         LOOP
000024E4                          2114          
000024E4  43F9 00002F9F           2115  opLSLLR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024EA  103C 000E               2116          MOVE.B      #14, D0             ; command for trap call to display message
000024EE  4E4F                    2117          TRAP        #15                 ; trap call
000024F0                          2118  
000024F0  43F9 00002FB9           2119          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
000024F6  103C 000E               2120          MOVE.B      #14, D0             ; command for trap call to display message
000024FA  4E4F                    2121          TRAP        #15                 ; trap call
000024FC                          2122          
000024FC  4EB9 00002626           2123          JSR         PrntReg
00002502                          2124          
00002502  6000 EB3C               2125          BRA         LOOP
00002506                          2126  
00002506                          2127  
00002506                          2128  
00002506  4242                    2129  opROLI  CLR         D2
00002508  3401                    2130          MOVE.W      D1, D2
0000250A  E042                    2131          ASR         #eight, D2
0000250C  C47C 0001               2132          AND         #$01, D2
00002510                          2133      
00002510  B43C 0000               2134          CMP.B       #zero, D2
00002514  6700 000E               2135          BEQ         opRORLI
00002518  B43C 0001               2136          CMP.B       #one, D2
0000251C  6700 0028               2137          BEQ         opROLLI
00002520  6000 09B4               2138          BRA         printInvalid 
00002524                          2139          
00002524  43F9 00002FAB           2140  opRORLI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000252A  103C 000E               2141          MOVE.B      #14, D0             ; command for trap call to display message
0000252E  4E4F                    2142          TRAP        #15                 ; trap call
00002530                          2143  
00002530  43F9 00002FB9           2144          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002536  103C 000E               2145          MOVE.B      #14, D0             ; command for trap call to display message
0000253A  4E4F                    2146          TRAP        #15                 ; trap call
0000253C                          2147          
0000253C  4EB9 000025CA           2148          JSR         PrntImm
00002542                          2149          
00002542  6000 EAFC               2150          BRA         LOOP
00002546                          2151  
00002546  43F9 00002FAF           2152  opROLLI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000254C  103C 000E               2153          MOVE.B      #14, D0             ; command for trap call to display message
00002550  4E4F                    2154          TRAP        #15                 ; trap call
00002552                          2155  
00002552  43F9 00002FB9           2156          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002558  103C 000E               2157          MOVE.B      #14, D0             ; command for trap call to display message
0000255C  4E4F                    2158          TRAP        #15                 ; trap call
0000255E                          2159          
0000255E  4EB9 000025CA           2160          JSR         PrntImm
00002564                          2161          
00002564  6000 EADA               2162          BRA         LOOP
00002568                          2163  
00002568  4242                    2164  opROLR  CLR         D2
0000256A  3401                    2165          MOVE.W      D1, D2
0000256C  E042                    2166          ASR         #eight, D2
0000256E  C47C 0001               2167          AND         #$01, D2
00002572                          2168      
00002572  B43C 0000               2169          CMP.B       #zero, D2
00002576  6700 000E               2170          BEQ         opRORLR
0000257A  B43C 0001               2171          CMP.B       #one, D2
0000257E  6700 0028               2172          BEQ         opROLLR
00002582  6000 0952               2173          BRA         printInvalid     
00002586                          2174          
00002586  43F9 00002FAB           2175  opRORLR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000258C  103C 000E               2176          MOVE.B      #14, D0             ; command for trap call to display message
00002590  4E4F                    2177          TRAP        #15                 ; trap call
00002592                          2178  
00002592  43F9 00002FB9           2179          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002598  103C 000E               2180          MOVE.B      #14, D0             ; command for trap call to display message
0000259C  4E4F                    2181          TRAP        #15                 ; trap call
0000259E                          2182          
0000259E  4EB9 00002626           2183          JSR         PrntReg
000025A4                          2184          
000025A4  6000 EA9A               2185          BRA         LOOP
000025A8                          2186  
000025A8  43F9 00002FAF           2187  opROLLR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000025AE  103C 000E               2188          MOVE.B      #14, D0             ; command for trap call to display message
000025B2  4E4F                    2189          TRAP        #15                 ; trap call
000025B4                          2190  
000025B4  43F9 00002FB9           2191          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
000025BA  103C 000E               2192          MOVE.B      #14, D0             ; command for trap call to display message
000025BE  4E4F                    2193          TRAP        #15                 ; trap call
000025C0                          2194          
000025C0  4EB9 00002626           2195          JSR         PrntReg
000025C6                          2196          
000025C6  6000 EA78               2197          BRA         LOOP
000025CA                          2198  * The following subroutine displays the immediate number to shift and the data register that is being shifted. 
000025CA                          2199  * This subroutine calls two printing immediate subroutine first, the the ea print subroutine.        
000025CA  48E7 FF7E               2200  PrntImm MOVEM.L D0-D7/A1-A6, -(SP)
000025CE                          2201          
000025CE  43F9 00002F20           2202          LEA         space, A1        ; we know that the opcode will be ASR, so load A1 to print message
000025D4  103C 000E               2203          MOVE.B      #14, D0             ; command for trap call to display message
000025D8  4E4F                    2204          TRAP        #15                 ; trap call
000025DA                          2205          
000025DA  43F9 00002F23           2206          LEA         hashTag, A1        ; we know that the opcode will be ASR, so load A1 to print message
000025E0  103C 000E               2207          MOVE.B      #14, D0             ; command for trap call to display message
000025E4  4E4F                    2208          TRAP        #15                 ; trap call
000025E6                          2209          
000025E6  4242                    2210          CLR         D2
000025E8  3401                    2211          MOVE.W      D1, D2
000025EA  E042                    2212          ASR         #eight, D2
000025EC  E242                    2213          ASR         #one, D2
000025EE  C47C 0007               2214          AND         #$07, D2
000025F2                          2215          
000025F2  4EB9 00002678           2216          JSR         MemShiftImm
000025F8                          2217          
000025F8  43F9 00002F27           2218          LEA         comma, A1        ; we know that the opcode will be ASR, so load A1 to print message
000025FE  103C 000E               2219          MOVE.B      #14, D0             ; command for trap call to display message
00002602  4E4F                    2220          TRAP        #15                 ; trap call
00002604                          2221          
00002604  4242                    2222          CLR         D2
00002606  4243                    2223          CLR         D3
00002608  1601                    2224          MOVE.B      D1,D3
0000260A  C67C 0007               2225          AND         #$07, D3
0000260E                          2226          
0000260E  4EB9 000026A2           2227          JSR         printEA
00002614                          2228          
00002614  43F9 00002F1C           2229          LEA         newLine, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000261A  103C 000E               2230          MOVE.B      #14, D0             ; command for trap call to display message
0000261E  4E4F                    2231          TRAP        #15                 ; trap call
00002620                          2232          
00002620  4CDF 7EFF               2233          MOVEM.L  (SP)+, D0-D7/A1-A6
00002624  4E75                    2234          RTS
00002626                          2235  * The following subroutine determines the correct data register to display, and sets the values of D2 and D3 accordingly to display the data register.
00002626                          2236  * after setting the values, it calls another subroutine to actually display the data register.        
00002626  48E7 FF7E               2237  PrntReg MOVEM.L D0-D7/A1-A6, -(SP)
0000262A                          2238          
0000262A  43F9 00002F20           2239          LEA         space, A1           ; display space
00002630  103C 000E               2240          MOVE.B      #14, D0             ; command for trap call to display message
00002634  4E4F                    2241          TRAP        #15                 ; trap call
00002636                          2242          
00002636  4242                    2243          CLR         D2
00002638  4243                    2244          CLR         D3
0000263A  3601                    2245          MOVE.W      D1, D3
0000263C  E043                    2246          ASR         #eight, D3
0000263E  E243                    2247          ASR         #one, D3
00002640  C67C 0007               2248          AND         #$07, D3
00002644                          2249          
00002644  4EB9 000026A2           2250          JSR         printEA
0000264A                          2251          
0000264A  43F9 00002F27           2252          LEA         comma, A1           ; display comma
00002650  103C 000E               2253          MOVE.B      #14, D0             ; command for trap call to display message
00002654  4E4F                    2254          TRAP        #15                 ; trap call
00002656                          2255          
00002656  4242                    2256          CLR         D2
00002658  4243                    2257          CLR         D3
0000265A  1601                    2258          MOVE.B      D1,D3
0000265C  C67C 0007               2259          AND         #$07, D3
00002660                          2260          
00002660  4EB9 000026A2           2261          JSR         printEA
00002666                          2262          
00002666  43F9 00002F1C           2263          LEA         newLine, A1         ; newline
0000266C  103C 000E               2264          MOVE.B      #14, D0             ; command for trap call to display message
00002670  4E4F                    2265          TRAP        #15                 ; trap call
00002672                          2266          
00002672  4CDF 7EFF               2267          MOVEM.L  (SP)+, D0-D7/A1-A6
00002676  4E75                    2268          RTS
00002678                          2269  * The following subroutine is used to display the number between 1-8 for the bit vount for the shift/rotate opcode
00002678                          2270  * It displays it by storing the appropriate number in D1 and running trap task 3.        
00002678  48E7 FF7E               2271  MemShiftImm     MOVEM.L D0-D7/A1-A6, -(SP)      ;caller saved data
0000267C  4241                    2272                  CLR     D1
0000267E                          2273                  
0000267E  1202                    2274                  MOVE.B  D2, D1
00002680  B23C 0000               2275                  CMP.B   #zero, D1
00002684  6700 000C               2276                  BEQ     displayEight
00002688                          2277                  
00002688  103C 0003               2278                  MOVE.B  #3, D0
0000268C  4E4F                    2279                  TRAP    #15
0000268E  6000 000C               2280                  BRA     endSubroutine
00002692                          2281                  
00002692  123C 0008               2282  displayEight    MOVE.B  #$08, D1
00002696  103C 0003               2283                  MOVE.B  #3, D0
0000269A  4E4F                    2284                  TRAP    #15                
0000269C                          2285  endSubroutine
0000269C  4CDF 7EFF               2286                  MOVEM.L  (SP)+, D0-D7/A1-A6     ; recall data
000026A0  4E75                    2287                  RTS                             ; Return to main routine
000026A2                          2288          
000026A2                          2289  
000026A2                          2290  ***********************************************************************************************************
000026A2                          2291  *
000026A2                          2292  *                                           EA Print Check
000026A2                          2293  *
000026A2                          2294  ***********************************************************************************************************
000026A2  48E7 FF7E               2295  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
000026A6                          2296  
000026A6  B43C 0000               2297              CMP.B       #zero, D2
000026AA  6700 002E               2298              BEQ         pDataReg
000026AE  B43C 0001               2299              CMP.B       #one, D2
000026B2  6700 00E6               2300              BEQ         pAddrReg
000026B6  B43C 0002               2301              CMP.B       #two, D2
000026BA  6700 019E               2302              BEQ         pAddrDir
000026BE  B43C 0003               2303              CMP.B       #three, D2
000026C2  6700 02C2               2304              BEQ         pAddrPost
000026C6  B43C 0004               2305              CMP.B       #four, D2
000026CA  6700 0446               2306              BEQ         pAddrDec
000026CE  B43C 0007               2307              CMP.B       #seven, D2
000026D2  6700 0576               2308              BEQ         pHex
000026D6  6000 0642               2309              BRA         invalid
000026DA                          2310  
000026DA                          2311  ***********************************************************************************************************
000026DA                          2312  * Data Register        
000026DA  B63C 0000               2313  pDataReg    CMP.B   #zero,D3
000026DE  6700 003A               2314              BEQ     displayD0
000026E2  B63C 0001               2315              CMP.B   #one,D3
000026E6  6700 0042               2316              BEQ     displayD1
000026EA  B63C 0002               2317              CMP.B   #two,D3
000026EE  6700 004A               2318              BEQ     displayD2
000026F2  B63C 0003               2319              CMP.B   #three,D3
000026F6  6700 0052               2320              BEQ     displayD3
000026FA  B63C 0004               2321              CMP.B   #four,D3
000026FE  6700 005A               2322              BEQ     displayD4
00002702  B63C 0005               2323              CMP.B   #five,D3
00002706  6700 0062               2324              BEQ     displayD5
0000270A  B63C 0006               2325              CMP.B   #six,D3
0000270E  6700 006A               2326              BEQ     displayD6
00002712  B63C 0007               2327              CMP.B   #seven,D3
00002716  6700 0072               2328              BEQ     displayD7
0000271A                          2329              
0000271A  43F9 00002FD6           2330  displayD0   LEA         dispD0, A1          ; Display space
00002720  103C 000E               2331              MOVE.B      #14, D0             ; command for trap call to display message
00002724  4E4F                    2332              TRAP        #15                 ; trap call
00002726  6000 05F2               2333              BRA         endSUB              ; go to the end of the subroutine
0000272A                          2334              
0000272A  43F9 00002FD9           2335  displayD1   LEA         dispD1, A1          ; Display space
00002730  103C 000E               2336              MOVE.B      #14, D0             ; command for trap call to display message
00002734  4E4F                    2337              TRAP        #15                 ; trap call
00002736  6000 05E2               2338              BRA         endSUB              ; go to the end of the subroutine
0000273A                          2339  
0000273A  43F9 00002FDC           2340  displayD2   LEA         dispD2, A1          ; Display space
00002740  103C 000E               2341              MOVE.B      #14, D0             ; command for trap call to display message
00002744  4E4F                    2342              TRAP        #15                 ; trap call
00002746  6000 05D2               2343              BRA         endSUB              ; go to the end of the subroutine
0000274A                          2344  
0000274A  43F9 00002FDF           2345  displayD3   LEA         dispD3, A1          ; Display space
00002750  103C 000E               2346              MOVE.B      #14, D0             ; command for trap call to display message
00002754  4E4F                    2347              TRAP        #15                 ; trap call
00002756  6000 05C2               2348              BRA         endSUB              ; go to the end of the subroutine
0000275A                          2349  
0000275A  43F9 00002FE2           2350  displayD4   LEA         dispD4, A1          ; Display space
00002760  103C 000E               2351              MOVE.B      #14, D0             ; command for trap call to display message
00002764  4E4F                    2352              TRAP        #15                 ; trap call
00002766  6000 05B2               2353              BRA         endSUB              ; go to the end of the subroutine
0000276A                          2354  
0000276A  43F9 00002FE5           2355  displayD5   LEA         dispD5, A1          ; Display space
00002770  103C 000E               2356              MOVE.B      #14, D0             ; command for trap call to display message
00002774  4E4F                    2357              TRAP        #15                 ; trap call
00002776  6000 05A2               2358              BRA         endSUB              ; go to the end of the subroutine
0000277A                          2359  
0000277A  43F9 00002FE8           2360  displayD6   LEA         dispD6, A1          ; Display space
00002780  103C 000E               2361              MOVE.B      #14, D0             ; command for trap call to display message
00002784  4E4F                    2362              TRAP        #15                 ; trap call
00002786  6000 0592               2363              BRA         endSUB              ; go to the end of the subroutine
0000278A                          2364  
0000278A  43F9 00002FEB           2365  displayD7   LEA         dispD7, A1          ; Display space
00002790  103C 000E               2366              MOVE.B      #14, D0             ; command for trap call to display message
00002794  4E4F                    2367              TRAP        #15                 ; trap call
00002796  6000 0582               2368              BRA         endSUB              ; go to the end of the subroutine
0000279A                          2369  ***********************************************************************************************************
0000279A                          2370  * Address Register
0000279A  B63C 0000               2371  pAddrReg    CMP.B   #zero,D3
0000279E  6700 003A               2372              BEQ     displayA0
000027A2  B63C 0001               2373              CMP.B   #one,D3
000027A6  6700 0042               2374              BEQ     displayA1
000027AA  B63C 0002               2375              CMP.B   #two,D3
000027AE  6700 004A               2376              BEQ     displayA2
000027B2  B63C 0003               2377              CMP.B   #three,D3
000027B6  6700 0052               2378              BEQ     displayA3
000027BA  B63C 0004               2379              CMP.B   #four,D3
000027BE  6700 005A               2380              BEQ     displayA4
000027C2  B63C 0005               2381              CMP.B   #five,D3
000027C6  6700 0062               2382              BEQ     displayA5
000027CA  B63C 0006               2383              CMP.B   #six,D3
000027CE  6700 006A               2384              BEQ     displayA6
000027D2  B63C 0007               2385              CMP.B   #seven,D3
000027D6  6700 0072               2386              BEQ     displayA7
000027DA                          2387              
000027DA  43F9 00002FBC           2388  displayA0   LEA         dispA0, A1          ; Display space
000027E0  103C 000E               2389              MOVE.B      #14, D0             ; command for trap call to display message
000027E4  4E4F                    2390              TRAP        #15                 ; trap call
000027E6  6000 0532               2391              BRA         endSUB              ; go to the end of the subroutine
000027EA                          2392              
000027EA  43F9 00002FBF           2393  displayA1   LEA         dispA1, A1          ; Display space
000027F0  103C 000E               2394              MOVE.B      #14, D0             ; command for trap call to display message
000027F4  4E4F                    2395              TRAP        #15                 ; trap call
000027F6  6000 0522               2396              BRA         endSUB              ; go to the end of the subroutine
000027FA                          2397  
000027FA  43F9 00002FC2           2398  displayA2   LEA         dispA2, A1          ; Display space
00002800  103C 000E               2399              MOVE.B      #14, D0             ; command for trap call to display message
00002804  4E4F                    2400              TRAP        #15                 ; trap call
00002806  6000 0512               2401              BRA         endSUB              ; go to the end of the subroutine
0000280A                          2402  
0000280A  43F9 00002FC5           2403  displayA3   LEA         dispA3, A1          ; Display space
00002810  103C 000E               2404              MOVE.B      #14, D0             ; command for trap call to display message
00002814  4E4F                    2405              TRAP        #15                 ; trap call
00002816  6000 0502               2406              BRA         endSUB              ; go to the end of the subroutine
0000281A                          2407  
0000281A  43F9 00002FC8           2408  displayA4   LEA         dispA4, A1          ; Display space
00002820  103C 000E               2409              MOVE.B      #14, D0             ; command for trap call to display message
00002824  4E4F                    2410              TRAP        #15                 ; trap call
00002826  6000 04F2               2411              BRA         endSUB              ; go to the end of the subroutine
0000282A                          2412  
0000282A  43F9 00002FCB           2413  displayA5   LEA         dispA5, A1          ; Display space
00002830  103C 000E               2414              MOVE.B      #14, D0             ; command for trap call to display message
00002834  4E4F                    2415              TRAP        #15                 ; trap call
00002836  6000 04E2               2416              BRA         endSUB              ; go to the end of the subroutine
0000283A                          2417  
0000283A  43F9 00002FCE           2418  displayA6   LEA         dispA6, A1          ; Display space
00002840  103C 000E               2419              MOVE.B      #14, D0             ; command for trap call to display message
00002844  4E4F                    2420              TRAP        #15                 ; trap call
00002846  6000 04D2               2421              BRA         endSUB              ; go to the end of the subroutine
0000284A                          2422  
0000284A  43F9 00002FD1           2423  displayA7   LEA         dispA7, A1          ; Display space
00002850  103C 000E               2424              MOVE.B      #14, D0             ; command for trap call to display message
00002854  4E4F                    2425              TRAP        #15                 ; trap call
00002856  6000 04C2               2426              BRA         endSUB              ; go to the end of the subroutine
0000285A                          2427  
0000285A                          2428  ***********************************************************************************************************
0000285A                          2429  * Address Register Direct
0000285A                          2430  
0000285A  43F9 00002F29           2431  pAddrDir    LEA         opPer, A1           ; Display space
00002860  103C 000E               2432              MOVE.B      #14, D0             ; command for trap call to display message
00002864  4E4F                    2433              TRAP        #15                 ; trap call
00002866                          2434              
00002866  B63C 0000               2435              CMP.B   #zero,D3
0000286A  6700 003A               2436              BEQ     displayA0A
0000286E  B63C 0001               2437              CMP.B   #one,D3
00002872  6700 004E               2438              BEQ     displayA1A
00002876  B63C 0002               2439              CMP.B   #two,D3
0000287A  6700 0062               2440              BEQ     displayA2A
0000287E  B63C 0003               2441              CMP.B   #three,D3
00002882  6700 0076               2442              BEQ     displayA3A
00002886  B63C 0004               2443              CMP.B   #four,D3
0000288A  6700 008A               2444              BEQ     displayA4A
0000288E  B63C 0005               2445              CMP.B   #five,D3
00002892  6700 009E               2446              BEQ     displayA5A
00002896  B63C 0006               2447              CMP.B   #six,D3
0000289A  6700 00B2               2448              BEQ     displayA6A
0000289E  B63C 0007               2449              CMP.B   #seven,D3
000028A2  6700 00C6               2450              BEQ     displayA7A
000028A6                          2451              
000028A6  43F9 00002FBC           2452  displayA0A  LEA         dispA0, A1          ; Display space
000028AC  103C 000E               2453              MOVE.B      #14, D0             ; command for trap call to display message
000028B0  4E4F                    2454              TRAP        #15                 ; trap call
000028B2  43F9 00002F2B           2455              LEA         clPer, A1           ; Display space
000028B8  103C 000E               2456              MOVE.B      #14, D0             ; command for trap call to display message
000028BC  4E4F                    2457              TRAP        #15                 ; trap call
000028BE  6000 045A               2458              BRA         endSUB              ; go to the end of the subroutine
000028C2                          2459              
000028C2  43F9 00002FBF           2460  displayA1A  LEA         dispA1, A1          ; Display space
000028C8  103C 000E               2461              MOVE.B      #14, D0             ; command for trap call to display message
000028CC  4E4F                    2462              TRAP        #15                 ; trap call
000028CE  43F9 00002F2B           2463              LEA         clPer, A1           ; Display space
000028D4  103C 000E               2464              MOVE.B      #14, D0             ; command for trap call to display message
000028D8  4E4F                    2465              TRAP        #15                 ; trap call
000028DA  6000 043E               2466              BRA         endSUB              ; go to the end of the subroutine
000028DE                          2467  
000028DE  43F9 00002FC2           2468  displayA2A  LEA         dispA2, A1          ; Display space
000028E4  103C 000E               2469              MOVE.B      #14, D0             ; command for trap call to display message
000028E8  4E4F                    2470              TRAP        #15                 ; trap call
000028EA  43F9 00002F2B           2471              LEA         clPer, A1           ; Display space
000028F0  103C 000E               2472              MOVE.B      #14, D0             ; command for trap call to display message
000028F4  4E4F                    2473              TRAP        #15                 ; trap call
000028F6  6000 0422               2474              BRA         endSUB              ; go to the end of the subroutine
000028FA                          2475  
000028FA  43F9 00002FC5           2476  displayA3A  LEA         dispA3, A1          ; Display space
00002900  103C 000E               2477              MOVE.B      #14, D0             ; command for trap call to display message
00002904  4E4F                    2478              TRAP        #15                 ; trap call
00002906  43F9 00002F2B           2479              LEA         clPer, A1           ; Display space
0000290C  103C 000E               2480              MOVE.B      #14, D0             ; command for trap call to display message
00002910  4E4F                    2481              TRAP        #15                 ; trap call
00002912  6000 0406               2482              BRA         endSUB              ; go to the end of the subroutine
00002916                          2483  
00002916  43F9 00002FC8           2484  displayA4A  LEA         dispA4, A1          ; Display space
0000291C  103C 000E               2485              MOVE.B      #14, D0             ; command for trap call to display message
00002920  4E4F                    2486              TRAP        #15                 ; trap call
00002922  43F9 00002F2B           2487              LEA         clPer, A1           ; Display space
00002928  103C 000E               2488              MOVE.B      #14, D0             ; command for trap call to display message
0000292C  4E4F                    2489              TRAP        #15                 ; trap call
0000292E  6000 03EA               2490              BRA         endSUB              ; go to the end of the subroutine
00002932                          2491  
00002932  43F9 00002FCB           2492  displayA5A  LEA         dispA5, A1          ; Display space
00002938  103C 000E               2493              MOVE.B      #14, D0             ; command for trap call to display message
0000293C  4E4F                    2494              TRAP        #15                 ; trap call
0000293E  43F9 00002F2B           2495              LEA         clPer, A1           ; Display space
00002944  103C 000E               2496              MOVE.B      #14, D0             ; command for trap call to display message
00002948  4E4F                    2497              TRAP        #15                 ; trap call
0000294A  6000 03CE               2498              BRA         endSUB              ; go to the end of the subroutine
0000294E                          2499  
0000294E  43F9 00002FCE           2500  displayA6A  LEA         dispA6, A1          ; Display space
00002954  103C 000E               2501              MOVE.B      #14, D0             ; command for trap call to display message
00002958  4E4F                    2502              TRAP        #15                 ; trap call
0000295A  43F9 00002F2B           2503              LEA         clPer, A1           ; Display space
00002960  103C 000E               2504              MOVE.B      #14, D0             ; command for trap call to display message
00002964  4E4F                    2505              TRAP        #15                 ; trap call
00002966  6000 03B2               2506              BRA         endSUB              ; go to the end of the subroutine
0000296A                          2507  
0000296A  43F9 00002FD1           2508  displayA7A  LEA         dispA7, A1          ; Display space
00002970  103C 000E               2509              MOVE.B      #14, D0             ; command for trap call to display message
00002974  4E4F                    2510              TRAP        #15                 ; trap call
00002976  43F9 00002F2B           2511              LEA         clPer, A1           ; Display space
0000297C  103C 000E               2512              MOVE.B      #14, D0             ; command for trap call to display message
00002980  4E4F                    2513              TRAP        #15                 ; trap call
00002982  6000 0396               2514              BRA         endSUB              ; go to the end of the subroutine
00002986                          2515              
00002986                          2516  ***********************************************************************************************************
00002986                          2517  * Addr Postincrement
00002986                          2518              
00002986  43F9 00002F29           2519  pAddrPost   LEA         opPer, A1           ; Display space
0000298C  103C 000E               2520              MOVE.B      #14, D0             ; command for trap call to display message
00002990  4E4F                    2521              TRAP        #15                 ; trap call
00002992                          2522              
00002992  B63C 0000               2523              CMP.B   #zero,D3
00002996  6700 003A               2524              BEQ     displayA0P
0000299A  B63C 0001               2525              CMP.B   #one,D3
0000299E  6700 005A               2526              BEQ     displayA1P
000029A2  B63C 0002               2527              CMP.B   #two,D3
000029A6  6700 007A               2528              BEQ     displayA2P
000029AA  B63C 0003               2529              CMP.B   #three,D3
000029AE  6700 009A               2530              BEQ     displayA3P
000029B2  B63C 0004               2531              CMP.B   #four,D3
000029B6  6700 00BA               2532              BEQ     displayA4P
000029BA  B63C 0005               2533              CMP.B   #five,D3
000029BE  6700 00DA               2534              BEQ     displayA5P
000029C2  B63C 0006               2535              CMP.B   #six,D3
000029C6  6700 00FA               2536              BEQ     displayA6P
000029CA  B63C 0007               2537              CMP.B   #seven,D3
000029CE  6700 011A               2538              BEQ     displayA7P
000029D2                          2539              
000029D2  43F9 00002FBC           2540  displayA0P  LEA         dispA0, A1          ; Display space
000029D8  103C 000E               2541              MOVE.B      #14, D0             ; command for trap call to display message
000029DC  4E4F                    2542              TRAP        #15                 ; trap call
000029DE  43F9 00002F2B           2543              LEA         clPer, A1           ; Display space
000029E4  103C 000E               2544              MOVE.B      #14, D0             ; command for trap call to display message
000029E8  4E4F                    2545              TRAP        #15                 ; trap call
000029EA  43F9 00002F2F           2546              LEA         inc, A1             ; Display space
000029F0  103C 000E               2547              MOVE.B      #14, D0             ; command for trap call to display message
000029F4  4E4F                    2548              TRAP        #15                 ; trap call
000029F6  6000 0322               2549              BRA         endSUB              ; go to the end of the subroutine
000029FA                          2550              
000029FA  43F9 00002FBF           2551  displayA1P  LEA         dispA1, A1          ; Display space
00002A00  103C 000E               2552              MOVE.B      #14, D0             ; command for trap call to display message
00002A04  4E4F                    2553              TRAP        #15                 ; trap call
00002A06  43F9 00002F2B           2554              LEA         clPer, A1           ; Display space
00002A0C  103C 000E               2555              MOVE.B      #14, D0             ; command for trap call to display message
00002A10  4E4F                    2556              TRAP        #15                 ; trap call
00002A12  43F9 00002F2F           2557              LEA         inc, A1             ; Display space
00002A18  103C 000E               2558              MOVE.B      #14, D0             ; command for trap call to display message
00002A1C  4E4F                    2559              TRAP        #15                 ; trap call
00002A1E  6000 02FA               2560              BRA         endSUB              ; go to the end of the subroutine
00002A22                          2561  
00002A22  43F9 00002FC2           2562  displayA2P  LEA         dispA2, A1          ; Display space
00002A28  103C 000E               2563              MOVE.B      #14, D0             ; command for trap call to display message
00002A2C  4E4F                    2564              TRAP        #15                 ; trap call
00002A2E  43F9 00002F2B           2565              LEA         clPer, A1           ; Display space
00002A34  103C 000E               2566              MOVE.B      #14, D0             ; command for trap call to display message
00002A38  4E4F                    2567              TRAP        #15                 ; trap call
00002A3A  43F9 00002F2F           2568              LEA         inc, A1             ; Display space
00002A40  103C 000E               2569              MOVE.B      #14, D0             ; command for trap call to display message
00002A44  4E4F                    2570              TRAP        #15                 ; trap call
00002A46  6000 02D2               2571              BRA         endSUB              ; go to the end of the subroutine
00002A4A                          2572  
00002A4A  43F9 00002FC5           2573  displayA3P  LEA         dispA3, A1          ; Display space
00002A50  103C 000E               2574              MOVE.B      #14, D0             ; command for trap call to display message
00002A54  4E4F                    2575              TRAP        #15                 ; trap call
00002A56  43F9 00002F2B           2576              LEA         clPer, A1           ; Display space
00002A5C  103C 000E               2577              MOVE.B      #14, D0             ; command for trap call to display message
00002A60  4E4F                    2578              TRAP        #15                 ; trap call
00002A62  43F9 00002F2F           2579              LEA         inc, A1             ; Display space
00002A68  103C 000E               2580              MOVE.B      #14, D0             ; command for trap call to display message
00002A6C  4E4F                    2581              TRAP        #15                 ; trap call
00002A6E  6000 02AA               2582              BRA         endSUB              ; go to the end of the subroutine
00002A72                          2583  
00002A72  43F9 00002FC8           2584  displayA4P  LEA         dispA4, A1          ; Display space
00002A78  103C 000E               2585              MOVE.B      #14, D0             ; command for trap call to display message
00002A7C  4E4F                    2586              TRAP        #15                 ; trap call
00002A7E  43F9 00002F2B           2587              LEA         clPer, A1           ; Display space
00002A84  103C 000E               2588              MOVE.B      #14, D0             ; command for trap call to display message
00002A88  4E4F                    2589              TRAP        #15                 ; trap call
00002A8A  43F9 00002F2F           2590              LEA         inc, A1             ; Display space
00002A90  103C 000E               2591              MOVE.B      #14, D0             ; command for trap call to display message
00002A94  4E4F                    2592              TRAP        #15                 ; trap call
00002A96  6000 0282               2593              BRA         endSUB              ; go to the end of the subroutine
00002A9A                          2594  
00002A9A  43F9 00002FCB           2595  displayA5P  LEA         dispA5, A1          ; Display space
00002AA0  103C 000E               2596              MOVE.B      #14, D0             ; command for trap call to display message
00002AA4  4E4F                    2597              TRAP        #15                 ; trap call
00002AA6  43F9 00002F2B           2598              LEA         clPer, A1           ; Display space
00002AAC  103C 000E               2599              MOVE.B      #14, D0             ; command for trap call to display message
00002AB0  4E4F                    2600              TRAP        #15                 ; trap call
00002AB2  43F9 00002F2F           2601              LEA         inc, A1             ; Display space
00002AB8  103C 000E               2602              MOVE.B      #14, D0             ; command for trap call to display message
00002ABC  4E4F                    2603              TRAP        #15                 ; trap call
00002ABE  6000 025A               2604              BRA         endSUB              ; go to the end of the subroutine
00002AC2                          2605  
00002AC2  43F9 00002FCE           2606  displayA6P  LEA         dispA6, A1          ; Display space
00002AC8  103C 000E               2607              MOVE.B      #14, D0             ; command for trap call to display message
00002ACC  4E4F                    2608              TRAP        #15                 ; trap call
00002ACE  43F9 00002F2B           2609              LEA         clPer, A1           ; Display space
00002AD4  103C 000E               2610              MOVE.B      #14, D0             ; command for trap call to display message
00002AD8  4E4F                    2611              TRAP        #15                 ; trap call
00002ADA  43F9 00002F2F           2612              LEA         inc, A1             ; Display space
00002AE0  103C 000E               2613              MOVE.B      #14, D0             ; command for trap call to display message
00002AE4  4E4F                    2614              TRAP        #15                 ; trap call
00002AE6  6000 0232               2615              BRA         endSUB              ; go to the end of the subroutine
00002AEA                          2616  
00002AEA  43F9 00002FD1           2617  displayA7P  LEA         dispA7, A1          ; Display space
00002AF0  103C 000E               2618              MOVE.B      #14, D0             ; command for trap call to display message
00002AF4  4E4F                    2619              TRAP        #15                 ; trap call
00002AF6  43F9 00002F2B           2620              LEA         clPer, A1           ; Display space
00002AFC  103C 000E               2621              MOVE.B      #14, D0             ; command for trap call to display message
00002B00  4E4F                    2622              TRAP        #15                 ; trap call
00002B02  43F9 00002F2F           2623              LEA         inc, A1             ; Display space
00002B08  103C 000E               2624              MOVE.B      #14, D0             ; command for trap call to display message
00002B0C  4E4F                    2625              TRAP        #15                 ; trap call
00002B0E  6000 020A               2626              BRA         endSUB              ; go to the end of the subroutine
00002B12                          2627  
00002B12                          2628  ***********************************************************************************************************
00002B12                          2629  * Addr Postdecrement
00002B12                          2630  
00002B12  43F9 00002F2D           2631  pAddrDec    LEA         dec, A1             ; Display space
00002B18  103C 000E               2632              MOVE.B      #14, D0             ; command for trap call to display message
00002B1C  4E4F                    2633              TRAP        #15                 ; trap call
00002B1E                          2634              
00002B1E  43F9 00002F29           2635              LEA         opPer, A1           ; Display space
00002B24  103C 000E               2636              MOVE.B      #14, D0             ; command for trap call to display message
00002B28  4E4F                    2637              TRAP        #15                 ; trap call
00002B2A                          2638              
00002B2A  B63C 0000               2639              CMP.B   #zero,D3
00002B2E  6700 003A               2640              BEQ     displayA0D
00002B32  B63C 0001               2641              CMP.B   #one,D3
00002B36  6700 004E               2642              BEQ     displayA1D
00002B3A  B63C 0002               2643              CMP.B   #two,D3
00002B3E  6700 0062               2644              BEQ     displayA2D
00002B42  B63C 0003               2645              CMP.B   #three,D3
00002B46  6700 0076               2646              BEQ     displayA3D
00002B4A  B63C 0004               2647              CMP.B   #four,D3
00002B4E  6700 008A               2648              BEQ     displayA4D
00002B52  B63C 0005               2649              CMP.B   #five,D3
00002B56  6700 009E               2650              BEQ     displayA5D
00002B5A  B63C 0006               2651              CMP.B   #six,D3
00002B5E  6700 00B2               2652              BEQ     displayA6D
00002B62  B63C 0007               2653              CMP.B   #seven,D3
00002B66  6700 00C6               2654              BEQ     displayA7D
00002B6A                          2655              
00002B6A  43F9 00002FBC           2656  displayA0D  LEA         dispA0, A1          ; Display space
00002B70  103C 000E               2657              MOVE.B      #14, D0             ; command for trap call to display message
00002B74  4E4F                    2658              TRAP        #15                 ; trap call
00002B76  43F9 00002F2B           2659              LEA         clPer, A1           ; Display space
00002B7C  103C 000E               2660              MOVE.B      #14, D0             ; command for trap call to display message
00002B80  4E4F                    2661              TRAP        #15                 ; trap call
00002B82  6000 0196               2662              BRA         endSUB              ; go to the end of the subroutine
00002B86                          2663              
00002B86  43F9 00002FBF           2664  displayA1D  LEA         dispA1, A1          ; Display space
00002B8C  103C 000E               2665              MOVE.B      #14, D0             ; command for trap call to display message
00002B90  4E4F                    2666              TRAP        #15                 ; trap call
00002B92  43F9 00002F2B           2667              LEA         clPer, A1           ; Display space
00002B98  103C 000E               2668              MOVE.B      #14, D0             ; command for trap call to display message
00002B9C  4E4F                    2669              TRAP        #15                 ; trap call
00002B9E  6000 017A               2670              BRA         endSUB              ; go to the end of the subroutine
00002BA2                          2671  
00002BA2  43F9 00002FC2           2672  displayA2D  LEA         dispA2, A1          ; Display space
00002BA8  103C 000E               2673              MOVE.B      #14, D0             ; command for trap call to display message
00002BAC  4E4F                    2674              TRAP        #15                 ; trap call
00002BAE  43F9 00002F2B           2675              LEA         clPer, A1           ; Display space
00002BB4  103C 000E               2676              MOVE.B      #14, D0             ; command for trap call to display message
00002BB8  4E4F                    2677              TRAP        #15                 ; trap call
00002BBA  6000 015E               2678              BRA         endSUB              ; go to the end of the subroutine
00002BBE                          2679  
00002BBE  43F9 00002FC5           2680  displayA3D  LEA         dispA3, A1          ; Display space
00002BC4  103C 000E               2681              MOVE.B      #14, D0             ; command for trap call to display message
00002BC8  4E4F                    2682              TRAP        #15                 ; trap call
00002BCA  43F9 00002F2B           2683              LEA         clPer, A1           ; Display space
00002BD0  103C 000E               2684              MOVE.B      #14, D0             ; command for trap call to display message
00002BD4  4E4F                    2685              TRAP        #15                 ; trap call
00002BD6  6000 0142               2686              BRA         endSUB              ; go to the end of the subroutine
00002BDA                          2687  
00002BDA  43F9 00002FC8           2688  displayA4D  LEA         dispA4, A1          ; Display space
00002BE0  103C 000E               2689              MOVE.B      #14, D0             ; command for trap call to display message
00002BE4  4E4F                    2690              TRAP        #15                 ; trap call
00002BE6  43F9 00002F2B           2691              LEA         clPer, A1           ; Display space
00002BEC  103C 000E               2692              MOVE.B      #14, D0             ; command for trap call to display message
00002BF0  4E4F                    2693              TRAP        #15                 ; trap call
00002BF2  6000 0126               2694              BRA         endSUB              ; go to the end of the subroutine
00002BF6                          2695  
00002BF6  43F9 00002FCB           2696  displayA5D  LEA         dispA5, A1          ; Display space
00002BFC  103C 000E               2697              MOVE.B      #14, D0             ; command for trap call to display message
00002C00  4E4F                    2698              TRAP        #15                 ; trap call
00002C02  43F9 00002F2B           2699              LEA         clPer, A1           ; Display space
00002C08  103C 000E               2700              MOVE.B      #14, D0             ; command for trap call to display message
00002C0C  4E4F                    2701              TRAP        #15                 ; trap call
00002C0E  6000 010A               2702              BRA         endSUB              ; go to the end of the subroutine
00002C12                          2703  
00002C12  43F9 00002FCE           2704  displayA6D  LEA         dispA6, A1          ; Display space
00002C18  103C 000E               2705              MOVE.B      #14, D0             ; command for trap call to display message
00002C1C  4E4F                    2706              TRAP        #15                 ; trap call
00002C1E  43F9 00002F2B           2707              LEA         clPer, A1           ; Display space
00002C24  103C 000E               2708              MOVE.B      #14, D0             ; command for trap call to display message
00002C28  4E4F                    2709              TRAP        #15                 ; trap call
00002C2A  6000 00EE               2710              BRA         endSUB              ; go to the end of the subroutine
00002C2E                          2711  
00002C2E  43F9 00002FD1           2712  displayA7D  LEA         dispA7, A1          ; Display space
00002C34  103C 000E               2713              MOVE.B      #14, D0             ; command for trap call to display message
00002C38  4E4F                    2714              TRAP        #15                 ; trap call
00002C3A  43F9 00002F2B           2715              LEA         clPer, A1           ; Display space
00002C40  103C 000E               2716              MOVE.B      #14, D0             ; command for trap call to display message
00002C44  4E4F                    2717              TRAP        #15                 ; trap call
00002C46  6000 00D2               2718              BRA         endSUB              ; go to the end of the subroutine
00002C4A                          2719  ***********************************************************************************************************
00002C4A                          2720  * Display Hex
00002C4A                          2721  
00002C4A  B63C 0000               2722  pHex        CMP.B       #zero, D3
00002C4E  6700 0012               2723              BEQ         AbsShort
00002C52  B63C 0001               2724              CMP.B       #one, D3
00002C56  6700 0042               2725              BEQ         AbsLong
00002C5A  B63C 0004               2726              CMP.B       #four, D3
00002C5E  6700 0072               2727              BEQ         DispImm
00002C62                          2728              
00002C62  43F9 00002F29           2729  AbsShort    LEA         opPer, A1           ; Display space
00002C68  103C 000E               2730              MOVE.B      #14, D0             ; command for trap call to display message
00002C6C  4E4F                    2731              TRAP        #15                 ; trap call
00002C6E                          2732              
00002C6E  43F9 00002F25           2733              LEA         dispHex, A1         ; Display space
00002C74  103C 000E               2734              MOVE.B      #14, D0             ; command for trap call to display message
00002C78  4E4F                    2735              TRAP        #15                 ; trap call
00002C7A                          2736              
00002C7A  4241                    2737              CLR         D1
00002C7C  3218                    2738              MOVE.W      (A0)+, D1
00002C7E  4240                    2739              CLR         D0
00002C80  103C 0004               2740              MOVE.B      #4, D0
00002C84                          2741              
00002C84  4EB9 00002D20           2742              JSR         outHex
00002C8A                          2743              
00002C8A  43F9 00002F2B           2744              LEA         clPer, A1           ; Display space
00002C90  103C 000E               2745              MOVE.B      #14, D0             ; command for trap call to display message
00002C94  4E4F                    2746              TRAP        #15                 ; trap call
00002C96                          2747              
00002C96  6000 0082               2748              BRA         endSub
00002C9A                          2749              
00002C9A  43F9 00002F29           2750  AbsLong     LEA         opPer, A1           ; Display space
00002CA0  103C 000E               2751              MOVE.B      #14, D0             ; command for trap call to display message
00002CA4  4E4F                    2752              TRAP        #15                 ; trap call
00002CA6                          2753              
00002CA6  43F9 00002F25           2754              LEA         dispHex, A1         ; Display space
00002CAC  103C 000E               2755              MOVE.B      #14, D0             ; command for trap call to display message
00002CB0  4E4F                    2756              TRAP        #15                 ; trap call
00002CB2                          2757              
00002CB2  4241                    2758              CLR         D1
00002CB4  2218                    2759              MOVE.L      (A0)+, D1
00002CB6  4240                    2760              CLR         D0
00002CB8  103C 0008               2761              MOVE.B      #8, D0
00002CBC                          2762              
00002CBC  4EB9 00002D20           2763              JSR         outHex
00002CC2                          2764              
00002CC2  43F9 00002F2B           2765              LEA         clPer, A1           ; Display space
00002CC8  103C 000E               2766              MOVE.B      #14, D0             ; command for trap call to display message
00002CCC  4E4F                    2767              TRAP        #15                 ; trap call
00002CCE                          2768              
00002CCE  6000 004A               2769              BRA         endSub
00002CD2                          2770  
00002CD2  43F9 00002F23           2771  DispImm     LEA         hashTag, A1         ; Display space
00002CD8  103C 000E               2772              MOVE.B      #14, D0             ; command for trap call to display message
00002CDC  4E4F                    2773              TRAP        #15                 ; trap call
00002CDE                          2774  
00002CDE  43F9 00002F25           2775              LEA         dispHex, A1         ; Display space
00002CE4  103C 000E               2776              MOVE.B      #14, D0             ; command for trap call to display message
00002CE8  4E4F                    2777              TRAP        #15                 ; trap call
00002CEA                          2778              
00002CEA  BC3C 0001               2779              CMP.B       #1,D6
00002CEE  6700 0016               2780              BEQ         ImmLong
00002CF2                          2781              
00002CF2  4241                    2782              CLR         D1
00002CF4  3218                    2783              MOVE.W      (A0)+, D1
00002CF6  4240                    2784              CLR         D0
00002CF8  103C 0004               2785              MOVE.B      #4, D0
00002CFC  4EB9 00002D20           2786              JSR         outHex
00002D02  6000 0012               2787              BRA         LongSkip
00002D06                          2788              
00002D06  4241                    2789  ImmLong     CLR         D1
00002D08  2218                    2790              MOVE.L      (A0)+, D1
00002D0A  4240                    2791              CLR         D0
00002D0C  103C 0008               2792              MOVE.B      #8, D0
00002D10  4EB9 00002D20           2793              JSR         outHex             
00002D16                          2794  
00002D16                          2795  LongSkip
00002D16  6000 0002               2796              BRA         endSub
00002D1A                          2797  invalid
00002D1A                          2798  
00002D1A                          2799  endSUB
00002D1A                          2800          
00002D1A  4CDF 7EFF               2801              MOVEM.L  (SP)+, D0-D7/A1-A6
00002D1E  4E75                    2802              RTS
00002D20                          2803  
00002D20                          2804  ***********************************************************************************************************
00002D20                          2805  ***********************************************************************************************************
00002D20                          2806  ***********************************************************************************************************
00002D20                          2807  
00002D20                          2808  *this subroutine displays hex code stored in D1. It displays based on the number of 
00002D20                          2809  *It displays based on the number of hex to display which is stored in D0. If it is a
00002D20                          2810  *long or word to display, it will figure out the ascii character and add $37 if it
00002D20                          2811  *is a letter, and $30 if its a number. It will then load the character into D1 and 
00002D20                          2812  *display it via trap task 6 and loop however many times is needed, 4 or 8. If a word
00002D20                          2813  *needs to be displayed, it will roll the bits over so that, the hex are shifted by a word.
00002D20  48E7 FF7E               2814  outHex      MOVEM.L D0-D7/A1-A6, -(SP)
00002D24  4243                    2815              CLR     D3
00002D26  4244                    2816              CLR     D4
00002D28  1800                    2817              MOVE.B  D0, D4
00002D2A  2601                    2818              MOVE.L  D1, D3
00002D2C  B03C 0004               2819              CMP.B   #4, D0
00002D30  6700 0006               2820              BEQ     moveOver
00002D34  6000 0006               2821              BRA     dispLOOP
00002D38                          2822              
00002D38  E19B                    2823  moveOver    ROL.L   #8,D3
00002D3A  E19B                    2824              ROL.L   #8,D3
00002D3C                          2825              
00002D3C  B83C 0000               2826  dispLOOP    CMP.B   #0, D4
00002D40  6700 0042               2827              BEQ     endDispSub
00002D44  E99B                    2828              ROL.L   #4, D3
00002D46  4245                    2829              CLR     D5
00002D48  1A03                    2830              MOVE.B  D3, D5 
00002D4A  CABC 0000000F           2831              AND.L   #$0F, D5
00002D50  BA3C 000A               2832              CMP.B   #10, D5
00002D54  6D00 0006               2833              BLT     DLnine
00002D58  6000 0016               2834              BRA     DLetters
00002D5C                          2835              
00002D5C  0645 0030               2836  DLnine      ADD     #$30, D5
00002D60  4241                    2837              CLR     D1
00002D62  1205                    2838              MOVE.B  D5, D1
00002D64  4240                    2839              CLR     D0
00002D66  103C 0006               2840              MOVE.B  #6, D0
00002D6A  4E4F                    2841              TRAP    #15
00002D6C  5344                    2842              SUB     #1, D4
00002D6E  60CC                    2843              BRA     dispLOOP  
00002D70                          2844   
00002D70  0645 0037               2845  DLetters    ADD     #$37, D5
00002D74  4241                    2846              CLR     D1
00002D76  1205                    2847              MOVE.B  D5, D1
00002D78  4240                    2848              CLR     D0
00002D7A  103C 0006               2849              MOVE.B  #6, D0
00002D7E  4E4F                    2850              TRAP    #15
00002D80  5344                    2851              SUB     #1, D4
00002D82  60B8                    2852              BRA     dispLOOP        
00002D84                          2853  
00002D84  4CDF 7EFF               2854  endDispSub  MOVEM.L  (SP)+, D0-D7/A1-A6
00002D88  4E75                    2855              RTS
00002D8A                          2856  
00002D8A                          2857  *the following subroutine gets the string address from the user
00002D8A                          2858  *and converts it to Hex for a starting/ending address. it is done 
00002D8A                          2859  *by checking each byte at address A1, and converting it from ascii to 
00002D8A                          2860  *hex number. If the user enters an invalid character string, the
00002D8A                          2861  *program will have a simhalt.
00002D8A  48E7 1F3E               2862  Address MOVEM.L D3-D7/A2-A6, -(SP)
00002D8E  4242                    2863          CLR     D2
00002D90  4243                    2864          CLR     D3
00002D92  B23C 0004               2865          CMP.B   #4, D1
00002D96  6700 000E               2866          BEQ     subLOOP
00002D9A  B23C 0008               2867          CMP.B   #8, D1
00002D9E  6700 0006               2868          BEQ     subLOOP
00002DA2  6000 0126               2869          BRA     ADDinvalid        
00002DA6                          2870          
00002DA6  E85C                    2871  subLOOP ROR     #4, D4
00002DA8  1404                    2872          MOVE.B  D4, D2
00002DAA  4244                    2873          CLR     D4
00002DAC  4245                    2874          CLR     D5
00002DAE  B601                    2875          CMP.B   D1, D3
00002DB0  6700 011E               2876          BEQ     endLOOP
00002DB4  5443                    2877          ADD.W   #2, D3
00002DB6  E19A                    2878          ROL.L   #8, D2
00002DB8                          2879          
00002DB8  E95C                    2880  bytLOOP ROL     #4, D4
00002DBA                          2881          
00002DBA  0C11 0030               2882          CMP.B   #$30, (A1)
00002DBE  6700 007E               2883          BEQ     hZero 
00002DC2  0C11 0031               2884          CMP.B   #$31, (A1)
00002DC6  6700 007E               2885          BEQ     hOne
00002DCA  0C11 0032               2886          CMP.B   #$32, (A1)
00002DCE  6700 007E               2887          BEQ     hTwo
00002DD2  0C11 0033               2888          CMP.B   #$33, (A1)
00002DD6  6700 007E               2889          BEQ     hThree
00002DDA  0C11 0034               2890          CMP.B   #$34, (A1)
00002DDE  6700 007E               2891          BEQ     hFour
00002DE2  0C11 0035               2892          CMP.B   #$35, (A1)
00002DE6  6700 007E               2893          BEQ     hFive
00002DEA  0C11 0036               2894          CMP.B   #$36, (A1)
00002DEE  6700 007E               2895          BEQ     hSix
00002DF2  0C11 0037               2896          CMP.B   #$37, (A1)
00002DF6  6700 007E               2897          BEQ     hSeven
00002DFA  0C11 0038               2898          CMP.B   #$38, (A1)
00002DFE  6700 007E               2899          BEQ     hEight
00002E02  0C11 0039               2900          CMP.B   #$39, (A1)
00002E06  6700 007E               2901          BEQ     hNine
00002E0A  0C11 0041               2902          CMP.B   #$41, (A1)
00002E0E  6700 007E               2903          BEQ     hA
00002E12  0C11 0042               2904          CMP.B   #$42, (A1)
00002E16  6700 007E               2905          BEQ     hB
00002E1A  0C11 0043               2906          CMP.B   #$43, (A1)
00002E1E  6700 007E               2907          BEQ     hC
00002E22  0C11 0044               2908          CMP.B   #$44, (A1)
00002E26  6700 007E               2909          BEQ     hD
00002E2A  0C11 0045               2910          CMP.B   #$45, (A1)
00002E2E  6700 007E               2911          BEQ     hE
00002E32  0C11 0046               2912          CMP.B   #$46, (A1)
00002E36  6700 007E               2913          BEQ     hF 
00002E3A  6000 FEDE               2914          BRA     invalid      
00002E3E  183C 0000               2915  hZero   MOVE.B  #$00, D4
00002E42  6000 0076               2916          BRA     nextH
00002E46  183C 0010               2917  hOne    MOVE.B  #$10, D4
00002E4A  6000 006E               2918          BRA     nextH
00002E4E  183C 0020               2919  hTwo    MOVE.B  #$20, D4
00002E52  6000 0066               2920          BRA     nextH
00002E56  183C 0030               2921  hThree  MOVE.B  #$30, D4
00002E5A  6000 005E               2922          BRA     nextH
00002E5E  183C 0040               2923  hFour   MOVE.B  #$40, D4
00002E62  6000 0056               2924          BRA     nextH
00002E66  183C 0050               2925  hFive   MOVE.B  #$50, D4
00002E6A  6000 004E               2926          BRA     nextH
00002E6E  183C 0060               2927  hSix    MOVE.B  #$60, D4
00002E72  6000 0046               2928          BRA     nextH
00002E76  183C 0070               2929  hSeven  MOVE.B  #$70, D4
00002E7A  6000 003E               2930          BRA     nextH
00002E7E  183C 0080               2931  hEight  MOVE.B  #$80, D4
00002E82  6000 0036               2932          BRA     nextH
00002E86  183C 0090               2933  hNine   MOVE.B  #$90, D4
00002E8A  6000 002E               2934          BRA     nextH
00002E8E  183C 00A0               2935  hA      MOVE.B  #$A0, D4
00002E92  6000 0026               2936          BRA     nextH
00002E96  183C 00B0               2937  hB      MOVE.B  #$B0, D4
00002E9A  6000 001E               2938          BRA     nextH
00002E9E  183C 00C0               2939  hC      MOVE.B  #$C0, D4
00002EA2  6000 0016               2940          BRA     nextH
00002EA6  183C 00D0               2941  hD      MOVE.B  #$D0, D4
00002EAA  6000 000E               2942          BRA     nextH
00002EAE  183C 00E0               2943  hE      MOVE.B  #$E0, D4
00002EB2  6000 0006               2944          BRA     nextH
00002EB6  183C 00F0               2945  hF      MOVE.B  #$F0, D4
00002EBA                          2946  
00002EBA  1019                    2947  nextH   MOVE.B  (A1)+, D0
00002EBC  5245                    2948          ADD     #1, D5
00002EBE  BA3C 0002               2949          CMP.B   #2, D5
00002EC2  6700 FEE2               2950          BEQ     subLOOP
00002EC6  6000 FEF0               2951          BRA     bytLOOP
00002ECA                          2952          
00002ECA  103C 0009               2953  ADDinvalid  MOVE.B  #9,D0
00002ECE  4E4F                    2954              TRAP    #15
00002ED0                          2955     
00002ED0  4CDF 7CF8               2956  endLOOP MOVEM.L  (SP)+, D3-D7/A2-A6
00002ED4  4E75                    2957          RTS
00002ED6                          2958  
00002ED6                          2959  printInvalid
00002ED6                          2960  endPROG    
00002ED6                          2961  
00002ED6  FFFF FFFF               2962      SIMHALT                             ; halt simulator
00002EDA                          2963  
00002EDA= 45 6E 74 65 72 20 ...   2964  startingMessage DC.B    'Enter Starting Address (in hex): ', 0
00002EFC= 45 6E 74 65 72 20 ...   2965  endingMessage   DC.B    'Enter Ending Address (in hex): ', 0
00002F1C                          2966  
00002F1C= 20 0D 0A 00             2967  newLine     DC.B    ' ', CR, LF, 0
00002F20= 20 20 00                2968  space       DC.B    '  ', 0
00002F23                          2969  
00002F23= 23 00                   2970  hashTag     DC.B    '#', 0
00002F25= 24 00                   2971  dispHex     DC.B    '$', 0
00002F27= 2C 00                   2972  comma       DC.B    ',', 0
00002F29                          2973  
00002F29= 28 00                   2974  opPer       DC.B    '(', 0
00002F2B= 29 00                   2975  clPer       DC.B    ')', 0
00002F2D= 2D 00                   2976  dec         DC.B    '-', 0
00002F2F= 2B 00                   2977  inc         DC.B    '+', 0
00002F31                          2978  
00002F31= 4F 52 49 00             2979  ORImatch    DC.B    'ORI', 0
00002F35= 43 4D 50 49 00          2980  CMPImatch   DC.B    'CMPI', 0
00002F3A= 42 43 4C 52 00          2981  BCLRmatch   DC.B    'BCLR', 0
00002F3F= 4D 4F 56 45 00          2982  MOVEmatch   DC.B    'MOVE', 0
00002F44= 4D 4F 56 45 41 00       2983  MOVEAmatch  DC.B    'MOVEA', 0
00002F4A= 4E 45 47 00             2984  NEGmatch    DC.B    'NEG', 0
00002F4E= 52 54 53 00             2985  RTSmatch    DC.B    'RTS', 0
00002F52= 4A 53 52 00             2986  JSRmatch    DC.B    'JSR', 0
00002F56= 4D 4F 56 45 4D 00       2987  MOVEMmatch  DC.B    'MOVEM', 0
00002F5C= 4C 45 41 00             2988  LEAmatch    DC.B    'LEA', 0
00002F60= 53 55 42 51 00          2989  SUBQmatch   DC.B    'SUBQ', 0
00002F65= 42 52 41 00             2990  BRAmatch    DC.B    'BRA', 0
00002F69= 42 43 53 00             2991  BCSmatch    DC.B    'BCS', 0
00002F6D= 42 56 43 00             2992  BVCmatch    DC.B    'BVC', 0
00002F71= 42 47 45 00             2993  BGEmatch    DC.B    'BGE', 0
00002F75= 42 4C 54 00             2994  BLTmatch    DC.B    'BLT', 0
00002F79= 44 49 56 53 00          2995  DIVSmatch   DC.B    'DIVS', 0
00002F7E= 4F 52 00                2996  ORmatch     DC.B    'OR', 0
00002F81= 53 55 42 00             2997  SUBmatch    DC.B    'SUB', 0
00002F85= 45 4F 52 00             2998  EORmatch    DC.B    'EOR', 0
00002F89= 43 4D 50 00             2999  CMPmatch    DC.B    'CMP', 0
00002F8D= 4D 55 4C 53 00          3000  MULSmatch   DC.B    'MULS', 0
00002F92= 41 44 44 00             3001  ADDmatch    DC.B    'ADD', 0
00002F96= 41 44 44 41 00          3002  ADDAmatch   DC.B    'ADDA', 0
00002F9B= 4C 53 52 00             3003  LSRmatch    DC.B    'LSR', 0
00002F9F= 4C 53 4C 00             3004  LSLmatch    DC.B    'LSL', 0
00002FA3= 41 53 52 00             3005  ASRmatch    DC.B    'ASR', 0
00002FA7= 41 53 4C 00             3006  ASLmatch    DC.B    'ASL', 0
00002FAB= 52 4F 52 00             3007  RORmatch    DC.B    'ROR', 0
00002FAF= 52 4F 4C 00             3008  ROLmatch    DC.B    'ROL', 0
00002FB3                          3009   
00002FB3= 2E 42 00                3010  dispByte    DC.B    '.B', 0
00002FB6= 2E 57 00                3011  dispWord    DC.B    '.W', 0
00002FB9= 2E 4C 00                3012  dispLong    DC.B    '.L', 0
00002FBC                          3013  
00002FBC= 41 30 00                3014  dispA0      DC.B    'A0', 0
00002FBF= 41 31 00                3015  dispA1      DC.B    'A1', 0
00002FC2= 41 32 00                3016  dispA2      DC.B    'A2', 0
00002FC5= 41 33 00                3017  dispA3      DC.B    'A3', 0
00002FC8= 41 34 00                3018  dispA4      DC.B    'A4', 0
00002FCB= 41 35 00                3019  dispA5      DC.B    'A5', 0
00002FCE= 41 36 00                3020  dispA6      DC.B    'A6', 0
00002FD1= 41 37 00                3021  dispA7      DC.B    'A7', 0
00002FD4                          3022  
00002FD4= 44 00                   3023  dispD       DC.B    'D',0
00002FD6= 44 30 00                3024  dispD0      DC.B    'D0', 0
00002FD9= 44 31 00                3025  dispD1      DC.B    'D1', 0
00002FDC= 44 32 00                3026  dispD2      DC.B    'D2', 0
00002FDF= 44 33 00                3027  dispD3      DC.B    'D3', 0
00002FE2= 44 34 00                3028  dispD4      DC.B    'D4', 0
00002FE5= 44 35 00                3029  dispD5      DC.B    'D5', 0
00002FE8= 44 36 00                3030  dispD6      DC.B    'D6', 0
00002FEB= 44 37 00                3031  dispD7      DC.B    'D7', 0 
00002FEE                          3032   
00002FEE                          3033             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             2C9A
ABSSHORT            2C62
ADDAMATCH           2F96
ADDINVALID          2ECA
ADDMATCH            2F92
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ADDRESS             2D8A
ASLMATCH            2FA7
ASRMATCH            2FA3
BCLRMATCH           2F3A
BCSMATCH            2F69
BGEMATCH            2F71
BLTMATCH            2F75
BRAEIGHT            113A
BRAELEVEN           113E
BRAFIVE             110A
BRAFOUR             10EE
BRAFOURTEEN         1194
BRAMATCH            2F65
BRANINE             113A
BRAONE              10EA
BRASIX              110E
BRATHIRTEEN         1142
BRATHREE            10EE
BRATWELVE           113E
BRATWO              10EE
BRAZERO             10BA
BVCMATCH            2F6D
BYTLOOP             2DB8
CLPER               2F2B
CMPIMATCH           2F35
CMPMATCH            2F89
COMMA               2F27
CR                  D
DEC                 2F2D
DISPA0              2FBC
DISPA1              2FBF
DISPA2              2FC2
DISPA3              2FC5
DISPA4              2FC8
DISPA5              2FCB
DISPA6              2FCE
DISPA7              2FD1
DISPBYTE            2FB3
DISPD               2FD4
DISPD0              2FD6
DISPD1              2FD9
DISPD2              2FDC
DISPD3              2FDF
DISPD4              2FE2
DISPD5              2FE5
DISPD6              2FE8
DISPD7              2FEB
DISPHEX             2F25
DISPIMM             2CD2
DISPLAYA0           27DA
DISPLAYA0A          28A6
DISPLAYA0D          2B6A
DISPLAYA0P          29D2
DISPLAYA1           27EA
DISPLAYA1A          28C2
DISPLAYA1D          2B86
DISPLAYA1P          29FA
DISPLAYA2           27FA
DISPLAYA2A          28DE
DISPLAYA2D          2BA2
DISPLAYA2P          2A22
DISPLAYA3           280A
DISPLAYA3A          28FA
DISPLAYA3D          2BBE
DISPLAYA3P          2A4A
DISPLAYA4           281A
DISPLAYA4A          2916
DISPLAYA4D          2BDA
DISPLAYA4P          2A72
DISPLAYA5           282A
DISPLAYA5A          2932
DISPLAYA5D          2BF6
DISPLAYA5P          2A9A
DISPLAYA6           283A
DISPLAYA6A          294E
DISPLAYA6D          2C12
DISPLAYA6P          2AC2
DISPLAYA7           284A
DISPLAYA7A          296A
DISPLAYA7D          2C2E
DISPLAYA7P          2AEA
DISPLAYD0           271A
DISPLAYD1           272A
DISPLAYD2           273A
DISPLAYD3           274A
DISPLAYD4           275A
DISPLAYD5           276A
DISPLAYD6           277A
DISPLAYD7           278A
DISPLAYEIGHT        2692
DISPLONG            2FB9
DISPLOOP            2D3C
DISPWORD            2FB6
DIVSMATCH           2F79
DLETTERS            2D70
DLNINE              2D5C
EIGHT               8
ELEVEN              B
ENDDISPSUB          2D84
ENDINGMESSAGE       2EFC
ENDLOOP             2ED0
ENDPROG             2ED6
ENDSUB              2D1A
ENDSUBROUTINE       269C
EORMATCH            2F85
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HA                  2E8E
HASHTAG             2F23
HB                  2E96
HC                  2E9E
HD                  2EA6
HE                  2EAE
HEIGHT              2E7E
HF                  2EB6
HFIVE               2E66
HFOUR               2E5E
HNINE               2E86
HONE                2E46
HSEVEN              2E76
HSIX                2E6E
HTHREE              2E56
HTWO                2E4E
HZERO               2E3E
IMMLONG             2D06
INC                 2F2F
INVALID             2D1A
JSRMATCH            2F52
LEAMATCH            2F5C
LF                  A
LONGSKIP            2D16
LOOP                1040
LSLMATCH            2F9F
LSRMATCH            2F9B
MEMSB               1E2C
MEMSHIFTIMM         2678
MEMSHIFTS           11AE
MEMSL               2340
MEMSW               20B6
MOVEAMATCH          2F44
MOVEMATCH           2F3F
MOVEMMATCH          2F56
MOVEOVER            2D38
MULSMATCH           2F8D
NEGMATCH            2F4A
NEWLINE             2F1C
NEXTH               2EBA
NINE                9
ONE                 1
OPADDAL             1BF4
OPADDAW             1B84
OPADDB              1A38
OPADDL              1B10
OPADDW              1AA4
OPASBI              1E6A
OPASBR              1ECC
OPASL               1C64
OPASLBI             1EAA
OPASLBR             1F0C
OPASLI              237E
OPASLLI             23BE
OPASLLR             2420
OPASLR              23E0
OPASLWI             2134
OPASLWR             2196
OPASR               1CB0
OPASRBI             1E88
OPASRBR             1EEA
OPASRLI             239C
OPASRLR             23FE
OPASRWI             2112
OPASRWR             2174
OPASWI              20F4
OPASWR              2156
OPBCLR              14CE
OPBCS               1998
OPBGE               19B0
OPBLT               19BC
OPBRA               1980
OPBVC               19A4
OPCMPI              135C
OPCMPIB             13A8
OPCMPIL             146C
OPCMPIW             140A
OPDYNBCLR           1532
OPJSR               1918
OPLSBI              1F2E
OPLSBR              1F90
OPLSL               1CFC
OPLSLBI             1F6E
OPLSLBR             1FD0
OPLSLI              2442
OPLSLLI             2482
OPLSLLR             24E4
OPLSLR              24A4
OPLSLWI             21F8
OPLSLWR             225A
OPLSR               1D48
OPLSRBI             1F4C
OPLSRBR             1FAE
OPLSRLI             2460
OPLSRLR             24C2
OPLSRWI             21D6
OPLSRWR             2238
OPLSWI              21B8
OPLSWR              221A
OPMOVEAL            16B2
OPMOVEAW            17A8
OPMOVEB             15A0
OPMOVEL             1624
OPMOVEMLEA          1974
OPMOVEW             171A
OPMULS              19D4
OPNEG               1810
OPNEGB              183E
OPNEGL              187E
OPNEGW              18BE
OPORI               1208
OPORIB              1236
OPORIL              12FA
OPORIW              1298
OPPER               2F29
OPROBI              1FF2
OPROBR              2054
OPROL               1D94
OPROLBI             2032
OPROLBR             2094
OPROLI              2506
OPROLLI             2546
OPROLLR             25A8
OPROLR              2568
OPROLWI             22BC
OPROLWR             231E
OPROR               1DE0
OPRORBI             2010
OPRORBR             2072
OPRORLI             2524
OPRORLR             2586
OPRORWI             229A
OPRORWR             22FC
OPROWI              227C
OPROWR              22DE
OPRTS               1958
OPRTSJSR            18FE
OPSUB               19C8
OPSUBQ              1974
ORIMATCH            2F31
ORMATCH             2F7E
OUTHEX              2D20
PADDRDEC            2B12
PADDRDIR            285A
PADDRPOST           2986
PADDRREG            279A
PDATAREG            26DA
PHEX                2C4A
PRINTEA             26A2
PRINTINVALID        2ED6
PRNTIMM             25CA
PRNTREG             2626
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
REGSHIFTS           11EC
ROLMATCH            2FAF
RORMATCH            2FAB
RTSMATCH            2F4E
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               2F20
START               1000
STARTINGMESSAGE     2EDA
SUBLOOP             2DA6
SUBMATCH            2F81
SUBQMATCH           2F60
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
