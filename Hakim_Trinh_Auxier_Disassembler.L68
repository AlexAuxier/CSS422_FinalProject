00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 2014-12-11 15:32:10

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9       
00000000  =00000000                 10  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 11  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 12  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 13  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 14  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 15  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 16  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 17  seven       EQU     $07
00000000  =00000008                 18  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 19  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 20  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 21  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 22  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 23  fourteen    EQU     $0E         ; defined hex value 14
00000000                            24  
00000000  =00000000                 25  mask0       EQU     %00000000
00000000  =00000001                 26  mask1       EQU     %00000001
00000000  =00000002                 27  mask2       EQU     %00000010
00000000  =00000004                 28  mask3       EQU     %00000100
00000000  =00000008                 29  mask4       EQU     %00001000
00000000  =00000010                 30  mask5       EQU     %00010000
00000000  =00000020                 31  mask6       EQU     %00100000
00000000  =00000040                 32  mask7       EQU     %01000000
00000000  =00000080                 33  mask8       EQU     %10000000
00000000                            34  
00000000  =00000005                 35  maskA       EQU     %00000101
00000000  =0000000A                 36  maskB       EQU     %00001010
00000000  =00000014                 37  maskC       EQU     %00010100
00000000  =00000028                 38  maskD       EQU     %00101000
00000000  =00000050                 39  maskE       EQU     %01010000
00000000  =000000A0                 40  maskF       EQU     %10100000
00000000                            41  
00000000  =000000F0                 42  firstNib    EQU     $F0
00000000  =0000000F                 43  secNib      EQU     $0F
00000000                            44               
00001000                            45              ORG    $1000
00001000                            46  START: 
00001000                            47  ***********************************************************************************************************
00001000                            48  *
00001000                            49  *                   Dissassembler Start
00001000                            50  *
00001000                            51  ***********************************************************************************************************
00001000                            52              ; Dissassemble Start, obtain addr range
00001000  43F9 00003C68             53              LEA         startingMessage, A1
00001006  103C 000E                 54              MOVE.B      #14, D0
0000100A  4E4F                      55              TRAP        #15    
0000100C                            56          
0000100C  103C 0002                 57              MOVE.B      #2, D0
00001010  4E4F                      58              TRAP        #15
00001012                            59      
00001012  4EB9 00003B02             60              JSR         Address
00001018  2042                      61              MOVEA.L     D2, A0
0000101A                            62          
0000101A  43F9 00003C8A             63              LEA         endingMessage, A1
00001020  103C 000E                 64              MOVE.B      #14, D0
00001024  4E4F                      65              TRAP        #15    
00001026                            66      
00001026  103C 0002                 67              MOVE.B      #2, D0
0000102A  4E4F                      68              TRAP        #15
0000102C                            69      
0000102C  4EB9 00003B02             70              JSR         Address
00001032  2442                      71              MOVEA.L     D2, A2
00001034                            72          
00001034  43F9 00003CC9             73              LEA         newline, A1
0000103A  103C 000E                 74              MOVE.B      #14, D0
0000103E  4E4F                      75              TRAP        #15 
00001040                            76            
00001040                            77  ***********************************************************************************************************
00001040                            78  *
00001040                            79  *                   Control Loop
00001040                            80  *
00001040                            81  *       This loop cycles and branches our code by the first nibble of OPCODE binary
00001040                            82  *
00001040                            83  ***********************************************************************************************************
00001040                            84            
00001040  4241                      85  LOOP        CLR         D1                  ; clear out D1
00001042  4242                      86              CLR         D2                  ; clear out D2
00001044  B1CA                      87              CMPA.L      A2, A0              ; compare starting and ending addresses
00001046  6E00 2C1C                 88              BGT         endProg             ; if A0 > A1, we've finished, end program
0000104A  1218                      89              MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
0000104C  1401                      90              MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000104E  E882                      91              ASR.L       #four, D2           ; get first nibble in D2
00001050                            92          
00001050  B43C 0000                 93              CMP.B       #zero, D2           ; compare with 0
00001054  6700 0064                 94              BEQ         braZero             ; branch out to zero method
00001058  B43C 0001                 95              CMP.B       #one, D2            ; compare with 1
0000105C  6700 008C                 96              BEQ         braOne              ; branch out to one method
00001060  B43C 0002                 97              CMP.B       #two, D2            ; compare with 2    
00001064  6700 0088                 98              BEQ         braTwo              ; branch out to two method
00001068  B43C 0003                 99              CMP.B       #three, D2          ; compare with 3
0000106C  6700 0084                100              BEQ         braThree            ; branch out to three method
00001070  B43C 0004                101              CMP.B       #four, D2           ; compare with 4
00001074  6700 0080                102              BEQ         braFour             ; branch out to four method
00001078  B43C 0005                103              CMP.B       #five, D2           ; compare with 5
0000107C  6700 0094                104              BEQ         braFive             ; branch out to five method
00001080  B43C 0006                105              CMP.B       #six, D2            ; compare with 6
00001084  6700 0090                106              BEQ         braSix              ; branch out to six method
00001088  B43C 0008                107              CMP.B       #eight, D2          ; compare with 8
0000108C  6700 00B4                108              BEQ         braEight            ; branch out to eight method
00001090  B43C 0009                109              CMP.B       #nine, D2           ; compare with 9
00001094  6700 00C6                110              BEQ         braNine             ; branch out to nine method
00001098  B43C 000B                111              CMP.B       #eleven, D2         ; compare with 11
0000109C  6700 00C2                112              BEQ         braEleven           ; branch out to eleven method
000010A0  B43C 000C                113              CMP.B       #twelve, D2         ; compare with 12
000010A4  6700 00D4                114              BEQ         braTwelve           ; branch out to twelve method
000010A8  B43C 000D                115              CMP.B       #thirteen, D2       ; compare with 13
000010AC  6700 00D0                116              BEQ         braThirteen         ; branch out to thirteen method
000010B0  B43C 000E                117              CMP.B       #fourteen, D2       ; compare with 14
000010B4  6700 011A                118              BEQ         braFourteen         ; branch out to fourteen method
000010B8  6086                     119              BRA         loop
000010BA                           120  
000010BA                           121  ***********************************************************************************************************
000010BA                           122  *
000010BA                           123  *                   Nibble Branch Section
000010BA                           124  *
000010BA                           125  *       This section decides which nibble goes to the corresponding opcode
000010BA                           126  *
000010BA                           127  *********************************************************************************************************** 
000010BA                           128          
000010BA                           129  braZero     
000010BA  4242                     130              CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
000010BC  1401                     131              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010BE  C43C 000F                132              AND.B       #secNib, D2             ; set first nibble to 0
000010C2                           133  
000010C2  B43C 0000                134              CMP.B       #zero, D2           ; compare second nibble to 0
000010C6  6700 017C                135              BEQ         opORI               ; branch to ORI method
000010CA  B43C 000C                136              CMP.B       #twelve, D2         ; compare second nibble to 12
000010CE  6700 02DC                137              BEQ         opCMPI              ; branch to CMPI method
000010D2  B43C 0008                138              CMP.B       #eight,D2           ; Test for static BCLR
000010D6  6700 0462                139              BEQ         opBCLR
000010DA  C47C 0001                140              AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010DE  B43C 0001                141              CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010E2  6700 04BA                142              BEQ         opDynBCLR
000010E6  6000 2B76                143              BRA         printInvalid
000010EA                           144          
000010EA                           145  braOne      
000010EA  6000 0520                146              BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010EE                           147  
000010EE                           148  braTwo      
000010EE  6000 05A0                149              BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010F2                           150  
000010F2                           151  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010F2  6000 0698                152              BRA         opMOVEW
000010F6                           153  
000010F6  4242                     154  braFour     CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010F8  1401                     155              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010FA  C43C 000F                156              AND.B       #secNib, D2             ; set first nibble to 0
000010FE                           157   
000010FE  B43C 0004                158              CMP.B       #four, D2           ; compare second nibble to 4
00001102  6700 077E                159              BEQ         opNEG               ; branch to NEG method
00001106  B43C 000E                160              CMP.B       #fourteen, D2       ; compare second nibble to E
0000110A  6700 0864                161              BEQ         opRTSJSR            ; branch to JSR or RTS method
0000110E  6000 08D6                162              BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
00001112                           163  
00001112                           164  braFive     
00001112  6000 1096                165              BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
00001116                           166  
00001116                           167  braSix      
00001116  4242                     168              CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
00001118  1401                     169              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000111A  C43C 000F                170              AND.B       #$0F, D2             ; set first nibble to 0
0000111E                           171   
0000111E  B43C 0000                172              CMP.B       #zero, D2           ; compare second nibble to 0
00001122  6700 0F7E                173              BEQ         opBRA               ; branch to BRA method
00001126  B43C 0005                174              CMP.B       #five, D2           ; compare second nibble to 5
0000112A  6700 0FAE                175              BEQ         opBCS               ; branch to BCS method
0000112E  B43C 0008                176              CMP.B       #eight, D2          ; compare second nibble to 8
00001132  6700 0FDA                177              BEQ         opBVC               ; branch to BCS method
00001136  B43C 000C                178              CMP.B       #twelve, D2         ; compare second nibble to 12
0000113A  6700 1006                179              BEQ         opBGE               ; branch to BGE method
0000113E  6000 1036                180              BRA         opBLT               ; otherwise, branch to BLT method
00001142                           181  
00001142                           182  braEight                                ; there are two opCodes available DIVS, or OR
00001142  4242                     183              CLR         D2
00001144  E141                     184              ASL         #8,D1
00001146  1218                     185              MOVE.B      (A0)+,D1
00001148  3401                     186              MOVE.W      D1,D2
0000114A  EC42                     187              ASR         #six,D2
0000114C  C47C 0007                188              AND         #$07,D2
00001150  B43C 0007                189              CMP.B       #seven,D2
00001154  6700 0B08                190              BEQ         opDIVS              ; If bits 8 - 6 are equal to 7, we have DIVS
00001158  6000 09B2                191              BRA         opOR                ; else opcode is OR
0000115C                           192  
0000115C                           193  braNine     
0000115C  6000 0DEC                194              BRA         opSUB               ; we know that there is only one opcode that is SUB
00001160                           195  
00001160                           196  braEleven                               ; there are two opCodes available EOR, or CMP
00001160  4242                     197              CLR         D2
00001162  E141                     198              ASL         #8,D1
00001164  1218                     199              MOVE.B      (A0)+,D1
00001166  3401                     200              MOVE.W      D1,D2
00001168  EC42                     201              ASR         #six,D2
0000116A  C47C 0007                202              AND         #$07,D2
0000116E  B43C 0003                203              CMP.B       #three,D2
00001172  6D00 0C96                204              BLT         opCMP               ; If opmode bits are less than 3, we have CMP
00001176  6000 0B44                205              BRA         opEOR               ; Else its EOR
0000117A                           206  
0000117A                           207  braTwelve   
0000117A  6000 10AE                208              BRA         opMULS              ; we know that there is only one opcode that is MULS    
0000117E                           209    
0000117E                           210  braThirteen 
0000117E  E141                     211              ASL         #eight, D1          ; we need the whole word to compare between add and adda, so move over the current byte 
00001180  1218                     212              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
00001182                           213              
00001182  4242                     214              CLR         D2                  ; clear D2
00001184  3401                     215              MOVE.W      D1, D2              ; copy opcode to D2
00001186  EC42                     216              ASR         #six, D2            ; shift the bits right to get size and type
00001188  C47C 0007                217              AND         #seven,D2           ; clear out all but first 3 bits
0000118C                           218              
0000118C  B43C 0000                219              CMP.B       #zero,D2            ; compare 0 to D2
00001190  6700 10FC                220              BEQ         opADDB              ; we know its ADDB
00001194  B43C 0001                221              CMP.B       #one, D2            ; compare 1 to D2
00001198  6700 1160                222              BEQ         opADDW              ; we know its ADDW
0000119C  B43C 0002                223              CMP.B       #two, D2            ; compare 2 to D2
000011A0  6700 11C4                224              BEQ         opADDL              ; we know its ADDL
000011A4  B43C 0003                225              CMP.B       #three, D2          ; compare 3 to D2
000011A8  6700 1230                226              BEQ         opADDAW             ; we know its ADDAW
000011AC  B43C 0004                227              CMP.B       #four, D2           ; compare 4 to D2
000011B0  6700 10DC                228              BEQ         opADDB              ; we know its ADDB
000011B4  B43C 0005                229              CMP.B       #five, D2           ; compare 5 to D2
000011B8  6700 1140                230              BEQ         opADDW              ; we know its ADDW
000011BC  B43C 0006                231              CMP.B       #six, D2            ; compare 6 to D2
000011C0  6700 11A4                232              BEQ         opADDL              ; we know its ADDL
000011C4  B43C 0007                233              CMP.B       #seven, D2          ; compare 7 to D2
000011C8  6700 1280                234              BEQ         opADDAL             ; we know its ADDAL
000011CC  6000 2A90                235              BRA         printInvalid        ; invalid opcode
000011D0                           236               
000011D0                           237  braFourteen 
000011D0  E141                     238              ASL.W       #eight,D1           ; we need the whole word to compare between add and adda, so move over the current byte
000011D2  1218                     239              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
000011D4                           240              
000011D4  4242                     241              CLR         D2                  ; clear D2
000011D6  3401                     242              MOVE.W      D1, D2              ; copy opcode to D2
000011D8  EC42                     243              ASR         #six, D2            ; shift the bits right to get size
000011DA  C47C 0003                244              AND         #03,D2
000011DE                           245          
000011DE  B43C 0003                246              CMP.B       #three, D2          ; if the size is three, we are shifting memory
000011E2  6700 0006                247              BEQ         memShifts           ; go to memory shift
000011E6  6000 0040                248              BRA         regShifts           ; else go to register shift
000011EA                           249  
000011EA                           250  memShifts   
000011EA  4242                     251              CLR         D2             
000011EC  3401                     252              MOVE.W      D1, D2              ; clear out D2 and copy D1 back in
000011EE  E082                     253              ASR.L       #eight,D2           ; move to get first byte back
000011F0  C47C 000F                254              AND         #secNib, D2         ; set first nibble to 0
000011F4                           255   
000011F4  B43C 0000                256              CMP.B       #zero, D2           ; compare second nibble to 0
000011F8  6700 130C                257              BEQ         opASR               ; branch to ASR method
000011FC  B43C 0001                258              CMP.B       #one, D2            ; compare second nibble to 1
00001200  6700 12B8                259              BEQ         opASL               ; branch to ASL method
00001204  B43C 0002                260              CMP.B       #two, D2            ; compare second nibble to 2
00001208  6700 1394                261              BEQ         opLSR               ; branch to LSR method
0000120C  B43C 0003                262              CMP.B       #three, D2          ; compare second nibble to 3
00001210  6700 1340                263              BEQ         opLSL               ; branch to LSL method
00001214  B43C 0006                264              CMP.B       #six, D2            ; compare second nibble to 6
00001218  6700 141C                265              BEQ         opROR               ; branch to ROR method
0000121C  B43C 0007                266              CMP.B       #seven, D2          ; compare second nibble to 7
00001220  6700 13C8                267              BEQ         opROL               ; branch to ROL method
00001224  6000 2A38                268              BRA         printInvalid        ; otherwise, invalid
00001228                           269              
00001228                           270  regShifts   
00001228  B43C 0000                271              CMP.B       #zero, D2           ; if size is 0, we are shifting a byte
0000122C  6700 1454                272              BEQ         memSB               ; branch to register shift byte
00001230  B43C 0001                273              CMP.B       #one, D2            ; if size is 1, we are shifting a word
00001234  6700 16D6                274              BEQ         memSW               ; branch to register shift word
00001238  B43C 0002                275              CMP.B       #two, D2            ; if size is 1, we are shifting a long
0000123C  6700 1958                276              BEQ         memSL               ; branch to register shift long
00001240  6000 2A1C                277              BRA         printInvalid        ; otherwise, invalid
00001244                           278              
00001244                           279  ***********************************************************************************************************
00001244                           280  *
00001244                           281  *                   ORI OPCODE
00001244                           282  *
00001244                           283  ***********************************************************************************************************
00001244                           284  
00001244                           285  opORI       
00001244  43F9 00003CDE            286              LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
0000124A  103C 000E                287              MOVE.B      #14, D0             ; command for trap call to display message
0000124E  4E4F                     288              TRAP        #15                 ; trap call
00001250                           289          
00001250  1218                     290              MOVE.B      (A0)+, D1
00001252  1401                     291              MOVE.B      D1,D2               ; copy data over
00001254  EC42                     292              ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001256  B43C 0000                293              CMP.B       #zero,D2
0000125A  6700 0016                294              BEQ         opORIB
0000125E  B43C 0001                295              CMP.B       #one,D2
00001262  6700 0074                296              BEQ         opORIW
00001266  B43C 0002                297              CMP.B       #two,D2
0000126A  6700 00D2                298              BEQ         opORIL
0000126E                           299          
0000126E  6000 29EE                300              BRA         printInvalid
00001272                           301          
00001272                           302  opORIB      
00001272  43F9 00003D67            303              LEA         dispByte, A1        ; Display byte
00001278  103C 000E                304              MOVE.B      #14, D0             ; command for trap call to display message
0000127C  4E4F                     305              TRAP        #15                 ; trap call
0000127E                           306          
0000127E  43F9 00003CCD            307              LEA         space, A1           ; Display space
00001284  103C 000E                308              MOVE.B      #14, D0             ; command for trap call to display message
00001288  4E4F                     309              TRAP        #15                 ; trap call
0000128A                           310          
0000128A  4244                     311              CLR         D4
0000128C  1801                     312              MOVE.B      D1,D4
0000128E  E644                     313              ASR         #three,D4
00001290  C87C 0007                314              AND         #seven,D4
00001294  4245                     315              CLR         D5        
00001296  1A01                     316              MOVE.B      D1,D5
00001298  CA7C 0007                317              AND         #seven,D5
0000129C                           318          
0000129C  4243                     319              CLR         D3
0000129E  4242                     320              CLR         D2
000012A0  163C 0004                321              MOVE.B      #four,D3
000012A4  143C 0007                322              MOVE.B      #seven,D2
000012A8                           323  
000012A8  4EB9 00002EF8            324              JSR         printEA
000012AE                           325          
000012AE  43F9 00003CD4            326              LEA         comma, A1           ; Display space
000012B4  103C 000E                327              MOVE.B      #14, D0             ; command for trap call to display message
000012B8  4E4F                     328              TRAP        #15                 ; trap call
000012BA                           329          
000012BA  4242                     330              CLR         D2
000012BC  4243                     331              CLR         D3
000012BE  1404                     332              MOVE.B      D4,D2
000012C0  1605                     333              MOVE.B      D5,D3
000012C2                           334          
000012C2  4EB9 00002EF8            335              JSR         printEA
000012C8                           336          
000012C8  43F9 00003CC9            337              LEA         newLine, A1           ; Display space
000012CE  103C 000E                338              MOVE.B      #14, D0             ; command for trap call to display message
000012D2  4E4F                     339              TRAP        #15                 ; trap call
000012D4                           340          
000012D4  6000 FD6A                341              BRA         LOOP
000012D8                           342          
000012D8                           343  opORIW      
000012D8  43F9 00003D6A            344              LEA         dispWord, A1        ; Display byte
000012DE  103C 000E                345              MOVE.B      #14, D0             ; command for trap call to display message
000012E2  4E4F                     346              TRAP        #15                 ; trap call
000012E4                           347          
000012E4  43F9 00003CCD            348              LEA         space, A1           ; Display space
000012EA  103C 000E                349              MOVE.B      #14, D0             ; command for trap call to display message
000012EE  4E4F                     350              TRAP        #15                 ; trap call
000012F0                           351          
000012F0  4244                     352              CLR         D4
000012F2  1801                     353              MOVE.B      D1,D4
000012F4  E644                     354              ASR         #three,D4
000012F6  C87C 0007                355              AND         #seven,D4
000012FA  4245                     356              CLR         D5        
000012FC  1A01                     357              MOVE.B      D1,D5
000012FE  CA7C 0007                358              AND         #seven,D5
00001302                           359          
00001302  4243                     360              CLR         D3
00001304  4242                     361              CLR         D2
00001306  163C 0004                362              MOVE.B      #four,D3
0000130A  143C 0007                363              MOVE.B      #seven,D2
0000130E                           364          
0000130E  4EB9 00002EF8            365              JSR         printEA
00001314                           366          
00001314  43F9 00003CD4            367              LEA         comma, A1           ; Display space
0000131A  103C 000E                368              MOVE.B      #14, D0             ; command for trap call to display message
0000131E  4E4F                     369              TRAP        #15                 ; trap call
00001320                           370          
00001320  4242                     371              CLR         D2
00001322  4243                     372              CLR         D3
00001324  1404                     373              MOVE.B      D4,D2
00001326  1605                     374              MOVE.B      D5,D3
00001328                           375                  
00001328  4EB9 00002EF8            376              JSR         printEA
0000132E                           377          
0000132E  43F9 00003CC9            378              LEA         newLine, A1           ; Display space
00001334  103C 000E                379              MOVE.B      #14, D0             ; command for trap call to display message
00001338  4E4F                     380              TRAP        #15                 ; trap call
0000133A                           381          
0000133A  6000 FD04                382              BRA         LOOP
0000133E                           383       
0000133E                           384  opORIL      
0000133E  43F9 00003D6D            385              LEA         dispLong, A1        ; Display byte
00001344  103C 000E                386              MOVE.B      #14, D0             ; command for trap call to display message
00001348  4E4F                     387              TRAP        #15                 ; trap call
0000134A                           388          
0000134A  43F9 00003CCD            389              LEA         space, A1           ; Display space
00001350  103C 000E                390              MOVE.B      #14, D0             ; command for trap call to display message
00001354  4E4F                     391              TRAP        #15                 ; trap call
00001356                           392          
00001356  4244                     393              CLR         D4
00001358  1801                     394              MOVE.B      D1,D4
0000135A  E644                     395              ASR         #three,D4
0000135C  C87C 0007                396              AND         #seven,D4
00001360  4245                     397              CLR         D5        
00001362  1A01                     398              MOVE.B      D1,D5
00001364  CA7C 0007                399              AND         #seven,D5
00001368  1C3C 0001                400              MOVE.B      #one,D6
0000136C                           401          
0000136C  4243                     402              CLR         D3
0000136E  4242                     403              CLR         D2
00001370  163C 0004                404              MOVE.B      #four,D3
00001374  143C 0007                405              MOVE.B      #seven,D2      
00001378                           406          
00001378  4EB9 00002EF8            407              JSR         printEA        
0000137E                           408          
0000137E  4243                     409              CLR         D3
00001380  4242                     410              CLR         D2
00001382  163C 0004                411              MOVE.B      #four,D3
00001386  143C 0007                412              MOVE.B      #seven,D2
0000138A                           413          
0000138A  43F9 00003CD4            414              LEA         comma, A1           ; Display space
00001390  103C 000E                415              MOVE.B      #14, D0             ; command for trap call to display message
00001394  4E4F                     416              TRAP        #15                 ; trap call
00001396                           417          
00001396  4EB9 00002EF8            418              JSR         printEA
0000139C                           419          
0000139C  43F9 00003CC9            420              LEA         newLine, A1           ; Display space
000013A2  103C 000E                421              MOVE.B      #14, D0             ; command for trap call to display message
000013A6  4E4F                     422              TRAP        #15                 ; trap call
000013A8                           423          
000013A8  6000 FC96                424              BRA         LOOP
000013AC                           425          
000013AC                           426  ***********************************************************************************************************
000013AC                           427  *
000013AC                           428  *                   CMPI OPCODE
000013AC                           429  *
000013AC                           430  ***********************************************************************************************************
000013AC                           431          
000013AC                           432  opCMPI           
000013AC  1218                     433              MOVE.B      (A0)+, D1
000013AE  1401                     434              MOVE.B      D1,D2               ; copy data over
000013B0  EC42                     435              ASR         #6,D2               ; shifts 6 bits over to read just the size        
000013B2  B43C 0000                436              CMP.B       #zero,D2
000013B6  6700 0016                437              BEQ         opCMPIB
000013BA  B43C 0001                438              CMP.B       #one,D2
000013BE  6700 0080                439              BEQ         opCMPIW
000013C2  B43C 0002                440              CMP.B       #two,D2
000013C6  6700 00FC                441              BEQ         opCMPIL
000013CA  6000 21A4                442              BRA         invalid
000013CE                           443  
000013CE                           444  opCMPIB 
000013CE  43F9 00003CE2            445              LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000013D4  103C 000E                446              MOVE.B      #14, D0             ; command for trap call to display message
000013D8  4E4F                     447              TRAP        #15                 ; trap call
000013DA                           448          
000013DA  43F9 00003D67            449              LEA         dispByte, A1        ; Display byte
000013E0  103C 000E                450              MOVE.B      #14, D0             ; command for trap call to display message
000013E4  4E4F                     451              TRAP        #15                 ; trap call
000013E6                           452          
000013E6  43F9 00003CCD            453              LEA         space, A1           ; Display space
000013EC  103C 000E                454              MOVE.B      #14, D0             ; command for trap call to display message
000013F0  4E4F                     455              TRAP        #15                 ; trap call
000013F2                           456          
000013F2  4244                     457              CLR         D4
000013F4  1801                     458              MOVE.B      D1,D4
000013F6  E644                     459              ASR         #three,D4
000013F8  C87C 0007                460              AND         #seven,D4
000013FC  4245                     461              CLR         D5        
000013FE  1A01                     462              MOVE.B      D1,D5
00001400  CA7C 0007                463              AND         #seven,D5
00001404                           464          
00001404  4243                     465              CLR         D3
00001406  4242                     466              CLR         D2
00001408  163C 0004                467              MOVE.B      #four,D3
0000140C  143C 0007                468              MOVE.B      #seven,D2      
00001410                           469          
00001410  4EB9 00002EF8            470              JSR         printEA  
00001416                           471              
00001416  43F9 00003CD4            472              LEA         comma, A1           ; Display space
0000141C  103C 000E                473              MOVE.B      #14, D0             ; command for trap call to display message
00001420  4E4F                     474              TRAP        #15                 ; trap call
00001422                           475          
00001422  4242                     476              CLR         D2
00001424  4243                     477              CLR         D3
00001426  1404                     478              MOVE.B      D4,D2
00001428  1605                     479              MOVE.B      D5,D3        
0000142A                           480          
0000142A  4EB9 00002EF8            481              JSR         printEA
00001430                           482          
00001430  43F9 00003CC9            483              LEA         newLine, A1           ; Display space
00001436  103C 000E                484              MOVE.B      #14, D0             ; command for trap call to display message
0000143A  4E4F                     485              TRAP        #15                 ; trap call
0000143C                           486  
0000143C  6000 FC02                487              BRA         LOOP
00001440                           488  
00001440                           489  opCMPIW 
00001440  43F9 00003CE2            490              LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001446  103C 000E                491              MOVE.B      #14, D0             ; command for trap call to display message
0000144A  4E4F                     492              TRAP        #15                 ; trap call
0000144C                           493          
0000144C  43F9 00003D6A            494              LEA         dispWord, A1        ; Display byte
00001452  103C 000E                495              MOVE.B      #14, D0             ; command for trap call to display message
00001456  4E4F                     496              TRAP        #15                 ; trap call
00001458                           497          
00001458  43F9 00003CCD            498              LEA         space, A1           ; Display space
0000145E  103C 000E                499              MOVE.B      #14, D0             ; command for trap call to display message
00001462  4E4F                     500              TRAP        #15                 ; trap call
00001464                           501          
00001464  4244                     502              CLR         D4
00001466  1801                     503              MOVE.B      D1,D4
00001468  E644                     504              ASR         #three,D4
0000146A  C87C 0007                505              AND         #seven,D4
0000146E  4245                     506              CLR         D5        
00001470  1A01                     507              MOVE.B      D1,D5
00001472  CA7C 0007                508              AND         #seven,D5
00001476                           509          
00001476  4243                     510              CLR         D3
00001478  4242                     511              CLR         D2
0000147A  163C 0004                512              MOVE.B      #four,D3
0000147E  143C 0007                513              MOVE.B      #seven,D2      
00001482                           514          
00001482  4EB9 00002EF8            515              JSR         printEA  
00001488                           516          
00001488  43F9 00003CD0            517              LEA         hashTag, A1           ; Display space
0000148E  103C 000E                518              MOVE.B      #14, D0             ; command for trap call to display message
00001492  4E4F                     519              TRAP        #15                 ; trap call
00001494                           520          
00001494  103C 0003                521              MOVE.B      #3, D0
00001498  4E4F                     522              TRAP        #15
0000149A                           523          
0000149A  43F9 00003CD4            524              LEA         comma, A1           ; Display space
000014A0  103C 000E                525              MOVE.B      #14, D0             ; command for trap call to display message
000014A4  4E4F                     526              TRAP        #15                 ; trap call
000014A6                           527  
000014A6  4242                     528              CLR         D2
000014A8  4243                     529              CLR         D3
000014AA  1404                     530              MOVE.B      D4,D2
000014AC  1605                     531              MOVE.B      D5,D3       
000014AE                           532          
000014AE  4EB9 00002EF8            533              JSR         printEA
000014B4                           534          
000014B4  43F9 00003CC9            535              LEA         newLine, A1           ; Display space
000014BA  103C 000E                536              MOVE.B      #14, D0             ; command for trap call to display message
000014BE  4E4F                     537              TRAP        #15                 ; trap call
000014C0  6000 FB7E                538              BRA         LOOP
000014C4                           539  
000014C4                           540  opCMPIL 
000014C4  43F9 00003CE2            541              LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000014CA  103C 000E                542              MOVE.B      #14, D0             ; command for trap call to display message
000014CE  4E4F                     543              TRAP        #15                 ; trap call
000014D0                           544          
000014D0  43F9 00003D6D            545              LEA         dispLong, A1        ; Display byte
000014D6  103C 000E                546              MOVE.B      #14, D0             ; command for trap call to display message
000014DA  4E4F                     547              TRAP        #15                 ; trap call
000014DC                           548          
000014DC  43F9 00003CCD            549              LEA         space, A1           ; Display space
000014E2  103C 000E                550              MOVE.B      #14, D0             ; command for trap call to display message
000014E6  4E4F                     551              TRAP        #15                 ; trap call
000014E8                           552          
000014E8  4244                     553              CLR         D4
000014EA  1801                     554              MOVE.B      D1,D4
000014EC  E644                     555              ASR         #three,D4
000014EE  C87C 0007                556              AND         #seven,D4
000014F2  4245                     557              CLR         D5        
000014F4  1A01                     558              MOVE.B      D1,D5
000014F6  CA7C 0007                559              AND         #seven,D5
000014FA                           560          
000014FA  4243                     561              CLR         D3
000014FC  4242                     562              CLR         D2
000014FE  163C 0004                563              MOVE.B      #four,D3
00001502  143C 0007                564              MOVE.B      #seven,D2      
00001506  1C3C 0001                565              MOVE.B      #one,D6
0000150A                           566          
0000150A  4EB9 00002EF8            567              JSR         printEA  
00001510                           568          
00001510  43F9 00003CD4            569              LEA         comma, A1           ; Display space
00001516  103C 000E                570              MOVE.B      #14, D0             ; command for trap call to display message
0000151A  4E4F                     571              TRAP        #15                 ; trap call
0000151C                           572          
0000151C  4242                     573              CLR         D2
0000151E  4243                     574              CLR         D3
00001520  1404                     575              MOVE.B      D4,D2
00001522  1605                     576              MOVE.B      D5,D3              
00001524                           577          
00001524  4EB9 00002EF8            578              JSR         printEA
0000152A                           579          
0000152A  43F9 00003CC9            580              LEA         newLine, A1           ; Display space
00001530  103C 000E                581              MOVE.B      #14, D0             ; command for trap call to display message
00001534  4E4F                     582              TRAP        #15                 ; trap call
00001536                           583          
00001536  6000 FB08                584              BRA         LOOP
0000153A                           585          
0000153A                           586  ***********************************************************************************************************
0000153A                           587  *
0000153A                           588  *                   BCLR OPCODE
0000153A                           589  *
0000153A                           590  ***********************************************************************************************************
0000153A                           591  
0000153A                           592  opBCLR      
0000153A  43F9 00003CE7            593              LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001540  103C 000E                594              MOVE.B      #14, D0             ; command for trap call to display message
00001544  4E4F                     595              TRAP        #15                 ; trap call
00001546                           596  
00001546  43F9 00003CCD            597              LEA         space, A1           ; Display space
0000154C  103C 000E                598              MOVE.B      #14, D0             ; command for trap call to display message
00001550  4E4F                     599              TRAP        #15                 ; trap call
00001552                           600                  
00001552  4242                     601              CLR         D2
00001554  1218                     602              MOVE.B      (A0)+, D1
00001556  1401                     603              MOVE.B      D1,D2               ; copy data over
00001558  E642                     604              ASR         #three,D2           ; Shift to the right to remove register
0000155A  C47C 0007                605              AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
0000155E                           606                  
0000155E  4243                     607              CLR         D3                  ; Clear D3 so we can move D1 in
00001560  1601                     608              MOVE.B      D1,D3               ; Move othr byte in
00001562  C67C 0007                609              AND         #seven,D3           ; Set everything besides register to 0
00001566                           610                 
00001566  4241                     611              CLR         D1
00001568  3218                     612              MOVE.W      (A0)+, D1
0000156A                           613                 
0000156A                           614                  
0000156A  43F9 00003CD0            615              LEA         hashTag, A1           ; Display space
00001570  103C 000E                616              MOVE.B      #14, D0             ; command for trap call to display message
00001574  4E4F                     617              TRAP        #15                 ; trap call
00001576                           618          
00001576  103C 0003                619              MOVE.B      #3, D0
0000157A  4E4F                     620              TRAP        #15
0000157C                           621          
0000157C  43F9 00003CD4            622              LEA         comma, A1           ; Display space
00001582  103C 000E                623              MOVE.B      #14, D0             ; command for trap call to display message
00001586  4E4F                     624              TRAP        #15                 ; trap call
00001588                           625                  
00001588  4EB9 00002EF8            626              JSR         printEA
0000158E                           627          
0000158E  43F9 00003CC9            628              LEA         newLine, A1           ; Display space
00001594  103C 000E                629              MOVE.B      #14, D0             ; command for trap call to display message
00001598  4E4F                     630              TRAP        #15                 ; trap call
0000159A                           631                  
0000159A  6000 FAA4                632              BRA         LOOP                
0000159E                           633          
0000159E                           634  opDynBCLR       
0000159E  4241                     635              CLR         D1
000015A0  1218                     636              MOVE.B      (A0)+,D1            ; Copy second byte in
000015A2  1601                     637              MOVE.B      D1,D3               ; Will use D4 to store in the source register
000015A4  E243                     638              ASR         #one,D3             ; Shift register over to the end
000015A6  C67C 0007                639              AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
000015AA                           640                  
000015AA  1401                     641              MOVE.B      D1,D2
000015AC  EC42                     642              ASR         #six,D2             ; Removing mode and register to check BCLR bits
000015AE  B47C 0002                643              CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
000015B2  6600 26AA                644              BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
000015B6                           645  
000015B6                           646                  
000015B6  43F9 00003CE7            647              LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
000015BC  103C 000E                648              MOVE.B      #14, D0             ; command for trap call to display message
000015C0  4E4F                     649              TRAP        #15                 ; trap call  
000015C2                           650                  
000015C2  43F9 00003CCD            651              LEA         space, A1           ; Display space
000015C8  103C 000E                652              MOVE.B      #14, D0             ; command for trap call to display message
000015CC  4E4F                     653              TRAP        #15                 ; trap call
000015CE                           654                  
000015CE  143C 0000                655              MOVE.B      #zero,D2                
000015D2  4EB9 00002EF8            656              JSR         printEA
000015D8                           657                  
000015D8  43F9 00003CD4            658              LEA         comma, A1           ; Display space
000015DE  103C 000E                659              MOVE.B      #14, D0             ; command for trap call to display message
000015E2  4E4F                     660              TRAP        #15                 ; trap call
000015E4                           661                
000015E4  4242                     662              CLR         D2
000015E6  1401                     663              MOVE.B      D1,D2               ; Using D2 to store EA mode
000015E8  E642                     664              ASR         #three,D2           ; Remove/shift the register out
000015EA  C47C 0007                665              AND         #seven,D2           ; Change all bits except for the mode bits to 0
000015EE                           666                  
000015EE  4243                     667              CLR         D3                  ; Clearing D3 to avoid mashing data
000015F0  1601                     668              MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000015F2  C67C 0007                669              AND         #seven,D3           ; Change all bits except for register bits to 0
000015F6                           670              
000015F6  4EB9 00002EF8            671              JSR         printEA
000015FC                           672          
000015FC  43F9 00003CC9            673              LEA         newLine, A1           ; Display space
00001602  103C 000E                674              MOVE.B      #14, D0             ; command for trap call to display message
00001606  4E4F                     675              TRAP        #15                 ; trap call            
00001608                           676  
00001608                           677  
00001608  6000 FA36                678              BRA         LOOP                ; go back to the loop   
0000160C                           679                  
0000160C                           680  ***********************************************************************************************************
0000160C                           681  *
0000160C                           682  *                   MOVE OPCODE
0000160C                           683  *                   MOVEA OPCODE
0000160C                           684  *
0000160C                           685  ***********************************************************************************************************
0000160C                           686   
0000160C                           687  opMOVEB 
0000160C  43F9 00003CEC            688              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
00001612  103C 000E                689              MOVE.B      #14, D0             ; command for trap call to display message
00001616  4E4F                     690              TRAP        #15                 ; trap call
00001618  43F9 00003D67            691              LEA         dispByte, A1        ; display byte
0000161E  103C 000E                692              MOVE.B      #14, D0             ; command for trap call to display message
00001622  4E4F                     693              TRAP        #15                 ; trap call
00001624  43F9 00003CCD            694              LEA         space, A1           ; create spaces
0000162A  103C 000E                695              MOVE.B      #14, D0             ; command for trap call to display message
0000162E  4E4F                     696              TRAP        #15                 ; trap call
00001630                           697          
00001630                           698          
00001630  4245                     699              CLR         D5                  ; Clear D5
00001632  1A01                     700              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001634  E245                     701              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001636  CA7C 0007                702              AND         #seven,D5
0000163A                           703          
0000163A  4244                     704              CLR         D4                  ; Clear out D4
0000163C  1801                     705              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000163E  C87C 0001                706              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001642                           707          
00001642  4241                     708              CLR          D1
00001644  4242                     709              CLR          D2
00001646  1218                     710              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001648  1401                     711              MOVE.B      D1,D2
0000164A  EC42                     712              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000164C  D842                     713              ADD         D2,D4               ; Adds the remaining bits to D4
0000164E                           714          
0000164E  4242                     715              CLR         D2
00001650  1401                     716              MOVE.B      D1,D2               ; Copy new byte over to D2
00001652  E642                     717              ASR         #three,D2           ; Shift source register out
00001654  C47C 0007                718              AND         #seven,D2           ; Set everything to 0 except for the mode
00001658                           719          
00001658  4243                     720              CLR         D3
0000165A  1601                     721              MOVE.B      D1,D3
0000165C  C67C 0007                722              AND         #seven,D3
00001660                           723          
00001660  4EB9 00002EF8            724              JSR         printEA
00001666                           725          
00001666  43F9 00003CD4            726              LEA         comma, A1           ; Display space
0000166C  103C 000E                727              MOVE.B      #14, D0             ; command for trap call to display message
00001670  4E4F                     728              TRAP        #15                 ; trap call
00001672                           729          
00001672  4242                     730              CLR         D2
00001674  4243                     731              CLR         D3
00001676  1404                     732              MOVE.B      D4,D2
00001678  1605                     733              MOVE.B      D5,D3
0000167A                           734          
0000167A  4EB9 00002EF8            735              JSR         printEA
00001680                           736          
00001680  43F9 00003CC9            737              LEA         newLine, A1           ; Display space
00001686  103C 000E                738              MOVE.B      #14, D0             ; command for trap call to display message
0000168A  4E4F                     739              TRAP        #15                 ; trap call            
0000168C                           740  
0000168C  6000 F9B2                741              BRA         LOOP                ; go back to the loop
00001690                           742          
00001690                           743  opMOVEL     
00001690  4245                     744              CLR         D5                  ; Clear D5
00001692  1A01                     745              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001694  E245                     746              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001696  CA7C 0007                747              AND         #seven,D5
0000169A                           748          
0000169A  4244                     749              CLR         D4                  ; Clear out D4
0000169C  1801                     750              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000169E  C87C 0001                751              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
000016A2                           752          
000016A2  4241                     753              CLR          D1
000016A4  4242                     754              CLR          D2
000016A6  1218                     755              MOVE.B      (A0)+,D1            ; Copy byte into D1
000016A8  1401                     756              MOVE.B      D1,D2
000016AA  EC42                     757              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000016AC  D842                     758              ADD         D2,D4               ; Adds the remaining bits to D4
000016AE                           759          
000016AE  B87C 0001                760              CMP         #one,D4             ; Check if it is MOVEA
000016B2  6700 0070                761              BEQ         opMOVEAL            ; If it is, branch off
000016B6                           762              
000016B6  43F9 00003CEC            763              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000016BC  103C 000E                764              MOVE.B      #14, D0             ; command for trap call to display message
000016C0  4E4F                     765              TRAP        #15                 ; trap call  
000016C2                           766              
000016C2  43F9 00003D6D            767              LEA         dispLong,A1
000016C8  103C 000E                768              MOVE.B      #14, D0             ; command for trap call to display message
000016CC  4E4F                     769              TRAP        #15                 ; trap call
000016CE                           770              
000016CE  43F9 00003CCD            771              LEA         space, A1           ; create spaces
000016D4  103C 000E                772              MOVE.B      #14, D0             ; command for trap call to display message
000016D8  4E4F                     773              TRAP        #15                 ; trap call
000016DA                           774          
000016DA  4242                     775              CLR         D2
000016DC  1401                     776              MOVE.B      D1,D2               ; Copy new byte over to D2
000016DE  E642                     777              ASR         #three,D2           ; Shift source register out
000016E0  C47C 0007                778              AND         #seven,D2           ; Set everything to 0 except for the mode
000016E4                           779          
000016E4  4243                     780              CLR         D3
000016E6  1601                     781              MOVE.B      D1,D3
000016E8  C67C 0007                782              AND         #seven,D3
000016EC                           783              
000016EC  4246                     784              CLR         D6
000016EE  1C3C 0001                785              MOVE.B      #1,D6
000016F2  4EB9 00002EF8            786              JSR         printEA
000016F8  4246                     787              CLR         D6
000016FA                           788              
000016FA  43F9 00003CD4            789              LEA         comma, A1           ; Display comma
00001700  103C 000E                790              MOVE.B      #14, D0             ; command for trap call to display message
00001704  4E4F                     791              TRAP        #15                 ; trap call
00001706                           792          
00001706  4242                     793              CLR         D2
00001708  4243                     794              CLR         D3
0000170A  1404                     795              MOVE.B      D4,D2
0000170C  1605                     796              MOVE.B      D5,D3
0000170E                           797             
0000170E  4EB9 00002EF8            798              JSR         printEA
00001714                           799  
00001714  43F9 00003CC9            800              LEA         newLine, A1           ; Display space
0000171A  103C 000E                801              MOVE.B      #14, D0             ; command for trap call to display message
0000171E  4E4F                     802              TRAP        #15                 ; trap call            
00001720                           803  
00001720  6000 F91E                804              BRA         LOOP                ; go back to the loop
00001724                           805              
00001724                           806  opMOVEAL
00001724  43F9 00003CF1            807              LEA         MOVEAmatch,A1
0000172A  103C 000E                808              MOVE.B      #14, D0             ; command for trap call to display message
0000172E  4E4F                     809              TRAP        #15                 ; trap call
00001730                           810              
00001730  43F9 00003D6D            811              LEA         dispLong,A1
00001736  103C 000E                812              MOVE.B      #14, D0             ; command for trap call to display message
0000173A  4E4F                     813              TRAP        #15                 ; trap call
0000173C                           814              
0000173C                           815  
0000173C  43F9 00003CCD            816              LEA         space, A1           ; create spaces
00001742  103C 000E                817              MOVE.B      #14, D0             ; command for trap call to display message
00001746  4E4F                     818              TRAP        #15                 ; trap call
00001748                           819              
00001748  4242                     820              CLR         D2
0000174A  1401                     821              MOVE.B      D1,D2               ; Copy new byte over to D2
0000174C  E642                     822              ASR         #three,D2           ; Shift source register out
0000174E  C47C 0007                823              AND         #seven,D2           ; Set everything to 0 except for the mode
00001752                           824          
00001752  4243                     825              CLR         D3
00001754  1601                     826              MOVE.B      D1,D3
00001756  C67C 0007                827              AND         #seven,D3
0000175A                           828              
0000175A  4241                     829              CLR         D1                  ; Clear D1
0000175C                           830              
0000175C  4EB9 00002EF8            831              JSR         printEA
00001762                           832              
00001762  43F9 00003CD4            833              LEA         comma, A1           ; Display comma
00001768  103C 000E                834              MOVE.B      #14, D0             ; command for trap call to display message
0000176C  4E4F                     835              TRAP        #15                 ; trap call
0000176E                           836  
0000176E  4242                     837              CLR         D2
00001770  4243                     838              CLR         D3
00001772  1404                     839              MOVE.B      D4,D2
00001774  1605                     840              MOVE.B      D5,D3
00001776                           841          
00001776  4EB9 00002EF8            842              JSR         printEA
0000177C                           843          
0000177C  43F9 00003CC9            844              LEA         newLine, A1           ; Display space
00001782  103C 000E                845              MOVE.B      #14, D0             ; command for trap call to display message
00001786  4E4F                     846              TRAP        #15                 ; trap call            
00001788                           847  
00001788  6000 F8B6                848              BRA         LOOP                ; go back to the loop
0000178C                           849  
0000178C                           850  opMOVEW
0000178C  4245                     851              CLR         D5                  ; Clear D5
0000178E  1A01                     852              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001790  E245                     853              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001792  CA7C 0007                854              AND         #seven,D5
00001796                           855          
00001796  4244                     856              CLR         D4                  ; Clear out D4
00001798  1801                     857              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000179A  C87C 0001                858              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000179E                           859          
0000179E  4241                     860              CLR          D1
000017A0  4242                     861              CLR          D2
000017A2  1218                     862              MOVE.B      (A0)+,D1            ; Copy byte into D1
000017A4  1401                     863              MOVE.B      D1,D2
000017A6  EC42                     864              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000017A8  D842                     865              ADD         D2,D4               ; Adds the remaining bits to D4
000017AA                           866          
000017AA  B87C 0001                867              CMP         #one,D4             ; Check if it is MOVEA
000017AE  6700 006A                868              BEQ         opMOVEAW            ; If it is, branch off
000017B2                           869              
000017B2  43F9 00003CEC            870              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000017B8  103C 000E                871              MOVE.B      #14, D0             ; command for trap call to display message
000017BC  4E4F                     872              TRAP        #15                 ; trap call  
000017BE                           873              
000017BE  43F9 00003D6A            874              LEA         dispWord,A1
000017C4  103C 000E                875              MOVE.B      #14, D0             ; command for trap call to display message
000017C8  4E4F                     876              TRAP        #15                 ; trap call
000017CA                           877              
000017CA  43F9 00003CCD            878              LEA         space, A1           ; create spaces
000017D0  103C 000E                879              MOVE.B      #14, D0             ; command for trap call to display message
000017D4  4E4F                     880              TRAP        #15                 ; trap call
000017D6                           881          
000017D6  4242                     882              CLR         D2
000017D8  1401                     883              MOVE.B      D1,D2               ; Copy new byte over to D2
000017DA  E642                     884              ASR         #three,D2           ; Shift source register out
000017DC  C47C 0007                885              AND         #seven,D2           ; Set everything to 0 except for the mode
000017E0                           886          
000017E0  4243                     887              CLR         D3
000017E2  1601                     888              MOVE.B      D1,D3
000017E4  C67C 0007                889              AND         #seven,D3
000017E8                           890              
000017E8  4241                     891              CLR         D1                  ; Clear D1
000017EA                           892              
000017EA  4EB9 00002EF8            893              JSR         printEA
000017F0                           894              
000017F0  43F9 00003CD4            895              LEA         comma, A1           ; Display comma
000017F6  103C 000E                896              MOVE.B      #14, D0             ; command for trap call to display message
000017FA  4E4F                     897              TRAP        #15                 ; trap call
000017FC                           898          
000017FC  4242                     899              CLR         D2
000017FE  4243                     900              CLR         D3
00001800  1404                     901              MOVE.B      D4,D2
00001802  1605                     902              MOVE.B      D5,D3
00001804                           903              
00001804  4EB9 00002EF8            904              JSR         printEA
0000180A                           905          
0000180A  43F9 00003CC9            906              LEA         newLine, A1           ; Display space
00001810  103C 000E                907              MOVE.B      #14, D0             ; command for trap call to display message
00001814  4E4F                     908              TRAP        #15                 ; trap call            
00001816                           909  
00001816  6000 F828                910              BRA         LOOP                ; go back to the loop
0000181A                           911              
0000181A                           912  opMOVEAW  
0000181A  43F9 00003CF1            913              LEA         MOVEAmatch,A1
00001820  103C 000E                914              MOVE.B      #14, D0             ; command for trap call to display message
00001824  4E4F                     915              TRAP        #15                 ; trap call
00001826                           916              
00001826  43F9 00003D6A            917              LEA         dispWord,A1
0000182C  103C 000E                918              MOVE.B      #14, D0             ; command for trap call to display message
00001830  4E4F                     919              TRAP        #15                 ; trap call
00001832                           920              
00001832  43F9 00003CCD            921              LEA         space, A1           ; create spaces
00001838  103C 000E                922              MOVE.B      #14, D0             ; command for trap call to display message
0000183C  4E4F                     923              TRAP        #15                 ; trap call
0000183E                           924              
0000183E  4242                     925              CLR         D2
00001840  1401                     926              MOVE.B      D1,D2               ; Copy new byte over to D2
00001842  E642                     927              ASR         #three,D2           ; Shift source register out
00001844  C47C 0007                928              AND         #seven,D2           ; Set everything to 0 except for the mode
00001848                           929          
00001848  4243                     930              CLR         D3
0000184A  1601                     931              MOVE.B      D1,D3
0000184C  C67C 0007                932              AND         #seven,D3
00001850                           933              
00001850  4241                     934              CLR         D1                  ; Clear D1      
00001852                           935              
00001852  4EB9 00002EF8            936              JSR         printEA
00001858                           937              
00001858  43F9 00003CD4            938              LEA         comma, A1           ; Display comma
0000185E  103C 000E                939              MOVE.B      #14, D0             ; command for trap call to display message
00001862  4E4F                     940              TRAP        #15                 ; trap call
00001864                           941  
00001864  4242                     942              CLR         D2
00001866  4243                     943              CLR         D3
00001868  1404                     944              MOVE.B      D4,D2
0000186A  1605                     945              MOVE.B      D5,D3
0000186C                           946          
0000186C  4EB9 00002EF8            947              JSR         printEA
00001872                           948          
00001872  43F9 00003CC9            949              LEA         newLine, A1           ; Display space
00001878  103C 000E                950              MOVE.B      #14, D0             ; command for trap call to display message
0000187C  4E4F                     951              TRAP        #15                 ; trap call            
0000187E                           952  
0000187E  6000 F7C0                953              BRA         LOOP                ; go back to the loop
00001882                           954  
00001882                           955  ***********************************************************************************************************
00001882                           956  *
00001882                           957  *                   NEG OPCODE
00001882                           958  *
00001882                           959  ***********************************************************************************************************
00001882                           960  
00001882                           961  opNEG   
00001882  43F9 00003CF7            962              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001888  103C 000E                963              MOVE.B      #14, D0             ; command for trap call to display message
0000188C  4E4F                     964              TRAP        #15                 ; trap call
0000188E                           965          
0000188E                           966          
0000188E  1218                     967              MOVE.B      (A0)+, D1
00001890  1401                     968              MOVE.B      D1,D2               ; copy data over
00001892  EC42                     969              ASR         #six,D2
00001894                           970              
00001894  B47C 0000                971              CMP         #zero,D2
00001898  6700 0016                972              BEQ         opNEGB
0000189C  B47C 0001                973              CMP         #one,D2
000018A0  6700 008E                974              BEQ         opNEGW
000018A4  B47C 0002                975              CMP         #two,D2
000018A8  6700 0046                976              BEQ         opNEGL
000018AC  6000 1CC2                977              BRA         invalid
000018B0                           978              
000018B0                           979  opNEGB
000018B0  43F9 00003D67            980              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
000018B6  103C 000E                981              MOVE.B      #14, D0             ; command for trap call to display message
000018BA  4E4F                     982              TRAP        #15                 ; trap call
000018BC                           983          
000018BC  43F9 00003CCD            984              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000018C2  103C 000E                985              MOVE.B      #14, D0             ; command for trap call to display message
000018C6  4E4F                     986              TRAP        #15                 ; trap call
000018C8                           987          
000018C8  4242                     988              CLR         D2                  ; Clear Data register 2
000018CA  3401                     989              MOVE        D1,D2               ; Move byte into D2
000018CC  E642                     990              ASR         #three,D2           ; Shift mode into place and moves mode into place
000018CE  C47C 0007                991              AND         #seven,D2           ; Stores mode
000018D2                           992              
000018D2  4243                     993              CLR         D3
000018D4  3601                     994              MOVE        D1,D3
000018D6  C67C 0007                995              AND         #seven,D3
000018DA                           996          
000018DA  4EB9 00002EF8            997              JSR         printEA
000018E0                           998                  
000018E0  43F9 00003CC9            999              LEA         newLine, A1           ; Display space
000018E6  103C 000E               1000              MOVE.B      #14, D0             ; command for trap call to display message
000018EA  4E4F                    1001              TRAP        #15                 ; trap call  
000018EC                          1002          
000018EC  6000 F752               1003              BRA         LOOP
000018F0                          1004  
000018F0                          1005  opNEGL
000018F0  43F9 00003D6D           1006              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
000018F6  103C 000E               1007              MOVE.B      #14, D0             ; command for trap call to display message
000018FA  4E4F                    1008              TRAP        #15                 ; trap call
000018FC                          1009  
000018FC  43F9 00003CCD           1010              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001902  103C 000E               1011              MOVE.B      #14, D0             ; command for trap call to display message
00001906  4E4F                    1012              TRAP        #15                 ; trap call
00001908                          1013                  
00001908  4242                    1014              CLR         D2                  ; Clear Data register 2
0000190A  3401                    1015              MOVE        D1,D2               ; Move byte into D2
0000190C  E642                    1016              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000190E  C47C 0007               1017              AND         #seven,D2           ; Stores mode
00001912                          1018          
00001912  4243                    1019              CLR         D3
00001914  3601                    1020              MOVE        D1,D3
00001916  C67C 0007               1021              AND         #seven,D3
0000191A                          1022          
0000191A  4EB9 00002EF8           1023              JSR         printEA
00001920                          1024                      
00001920  43F9 00003CC9           1025              LEA         newLine, A1         ; Display space
00001926  103C 000E               1026              MOVE.B      #14, D0             ; command for trap call to display message
0000192A  4E4F                    1027              TRAP        #15                 ; trap call  
0000192C                          1028          
0000192C  6000 F712               1029              BRA         LOOP
00001930                          1030  
00001930                          1031  opNEGW
00001930  43F9 00003D6A           1032              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001936  103C 000E               1033              MOVE.B      #14, D0             ; command for trap call to display message
0000193A  4E4F                    1034              TRAP        #15                 ; trap call
0000193C                          1035          
0000193C  43F9 00003CCD           1036              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001942  103C 000E               1037              MOVE.B      #14, D0             ; command for trap call to display message
00001946  4E4F                    1038              TRAP        #15                 ; trap call        
00001948                          1039                  
00001948  4242                    1040              CLR         D2                  ; Clear Data register 2
0000194A  3401                    1041              MOVE        D1,D2               ; Move byte into D2
0000194C  E642                    1042              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000194E  C47C 0007               1043              AND         #seven,D2           ; Stores mode
00001952                          1044          
00001952  4243                    1045              CLR         D3
00001954  3601                    1046              MOVE        D1,D3
00001956  C67C 0007               1047              AND         #seven,D3
0000195A                          1048          
0000195A  4EB9 00002EF8           1049              JSR         printEA
00001960                          1050              
00001960  43F9 00003CC9           1051              LEA         newLine, A1           ; Display space
00001966  103C 000E               1052              MOVE.B      #14, D0             ; command for trap call to display message
0000196A  4E4F                    1053              TRAP        #15                 ; trap call  
0000196C                          1054          
0000196C  6000 F6D2               1055              BRA         LOOP
00001970                          1056              
00001970                          1057  ***********************************************************************************************************
00001970                          1058  *
00001970                          1059  *                   RTS_JSR Helper Function
00001970                          1060  *
00001970                          1061  ***********************************************************************************************************
00001970                          1062  
00001970                          1063  opRTSJSR
00001970  1218                    1064              MOVE.B      (A0)+, D1
00001972                          1065              
00001972  1401                    1066              MOVE.B      D1,D2               ; copy data over
00001974  B47C 0075               1067              CMP         #117,D2
00001978  6700 0050               1068              BEQ         opRTS
0000197C                          1069              
0000197C  EC42                    1070              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
0000197E  B47C 0002               1071              CMP         #two,D2             ; Checking if it is JSR
00001982  6700 0006               1072              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001986                          1073  
00001986  6000 1BE8               1074              BRA         invalid
0000198A                          1075              
0000198A                          1076  ***********************************************************************************************************
0000198A                          1077  *
0000198A                          1078  *                   JSR OPCODE
0000198A                          1079  *
0000198A                          1080  ***********************************************************************************************************
0000198A                          1081  
0000198A                          1082  opJSR
0000198A  43F9 00003CFF           1083              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001990  103C 000E               1084              MOVE.B      #14, D0             ; command for trap call to display message
00001994  4E4F                    1085              TRAP        #15                 ; trap call
00001996                          1086              
00001996  43F9 00003CCD           1087              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000199C  103C 000E               1088              MOVE.B      #14, D0             ; command for trap call to display message
000019A0  4E4F                    1089              TRAP        #15                 ; trap call
000019A2                          1090              
000019A2  4242                    1091              CLR         D2
000019A4  4243                    1092              CLR         D3
000019A6                          1093              
000019A6  1401                    1094              MOVE.B      D1,D2
000019A8  E642                    1095              ASR         #three,D2
000019AA  C47C 0007               1096              AND         #seven,D2
000019AE                          1097              
000019AE  1601                    1098              MOVE.B      D1,D3
000019B0  C67C 0007               1099              AND         #seven,D3
000019B4                          1100              
000019B4  4EB9 00002EF8           1101              JSR         printEA
000019BA                          1102              
000019BA  43F9 00003CC9           1103              LEA         newLine, A1           ; Display space
000019C0  103C 000E               1104              MOVE.B      #14, D0             ; command for trap call to display message
000019C4  4E4F                    1105              TRAP        #15                 ; trap call  
000019C6                          1106              
000019C6  6000 F678               1107              BRA         loop   
000019CA                          1108  
000019CA                          1109  ***********************************************************************************************************
000019CA                          1110  *
000019CA                          1111  *                   RTS OPCODE
000019CA                          1112  *
000019CA                          1113  ***********************************************************************************************************
000019CA                          1114  
000019CA                          1115  opRTS
000019CA  43F9 00003CFB           1116              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
000019D0  103C 000E               1117              MOVE.B      #14, D0             ; command for trap call to display message
000019D4  4E4F                    1118              TRAP        #15                 ; trap call
000019D6                          1119              
000019D6  43F9 00003CC9           1120              LEA         newLine, A1           ; Display space
000019DC  103C 000E               1121              MOVE.B      #14, D0             ; command for trap call to display message
000019E0  4E4F                    1122              TRAP        #15                 ; trap call 
000019E2                          1123              
000019E2  6000 F65C               1124              BRA         loop
000019E6                          1125              
000019E6                          1126  ***********************************************************************************************************
000019E6                          1127  *
000019E6                          1128  *                   MOVEM_LEA OPCODE
000019E6                          1129  *
000019E6                          1130  ***********************************************************************************************************
000019E6                          1131  
000019E6                          1132  opMOVEMLEA
000019E6  4242                    1133              CLR         D2                  ; Clear D2
000019E8  1401                    1134              MOVE.B      D1,D2               ; Copy byte over
000019EA  C47C 000F               1135              AND         #secNib,D2          ; Check only the second nibble
000019EE  B47C 000C               1136              CMP         #twelve,D2          ; Compare the second nibble to twelve
000019F2  6700 000E               1137              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
000019F6  B47C 0008               1138              CMP         #eight,D2           ; Compare the second nibble to eight
000019FA  6700 0006               1139              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
000019FE  6000 008C               1140              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
00001A02                          1141              
00001A02                          1142  ***********************************************************************************************************
00001A02                          1143  *
00001A02                          1144  *                   MOVEM OPCODE
00001A02                          1145  *
00001A02                          1146  ***********************************************************************************************************
00001A02                          1147  
00001A02                          1148  opMOVEM            
00001A02  4246                    1149              CLR         D6                  ; Clearing D4 to store dr field
00001A04  1C01                    1150              MOVE.B      D1,D6               ; Moving byte to find dr field
00001A06  E446                    1151              ASR         #two,D6             ; Moving dr field to readable spot
00001A08  CC7C 0001               1152              AND         #one,D6             ; seting everything except dr to 0
00001A0C                          1153  
00001A0C  4241                    1154              CLR         D1  
00001A0E  1218                    1155              MOVE.B      (A0)+, D1           ; Taking in next byte
00001A10                          1156              
00001A10  4245                    1157              CLR         D5
00001A12  1A01                    1158              MOVE.B      D1,D5               ; Using D6 to check if this is indeed MOVEM
00001A14  EE45                    1159              ASR         #seven,D5
00001A16  CA7C 0001               1160              AND         #one,D5
00001A1A  BA7C 0001               1161              CMP         #one,D5             ; This bit should be one if this is MOVEM
00001A1E  6600 1B50               1162              BNE         invalid             ; If this is not 1 then this is not moveM
00001A22  4245                    1163              CLR         D5
00001A24                          1164              
00001A24  43F9 00003D03           1165              LEA         MOVEMMatch, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001A2A  103C 000E               1166              MOVE.B      #14, D0             ; command for trap call to display message
00001A2E  4E4F                    1167              TRAP        #15                 ; trap call
00001A30                          1168              
00001A30  4245                    1169              CLR         D5                  ; Clearing D5 to store size
00001A32  1A01                    1170              MOVE.B      D1,D5               ; Moving byte that contains bit for size
00001A34  EC45                    1171              ASR         #six,D5            ; Moving size bit to the very right to read
00001A36  CA7C 0001               1172              AND         #one,D5             ; Isolating the one bit for size
00001A3A                          1173              
00001A3A  4242                    1174              CLR         D2                  ; Storing EA mode in D2
00001A3C  1401                    1175              MOVE.B      D1,D2               
00001A3E  E642                    1176              ASR         #three,D2
00001A40  C47C 0007               1177              AND         #seven,D2
00001A44                          1178              
00001A44  4243                    1179              CLR         D3                  ; Storing EA register into D3
00001A46  1601                    1180              MOVE.B      D1,D3
00001A48  C67C 0007               1181              AND         #seven,D3
00001A4C                          1182              
00001A4C  4EB9 00003576           1183              JSR         MOVEMBRA
00001A52                          1184              
00001A52  B47C 0003               1185              CMP         #three,D2           ; Checks if this is post increment
00001A56  6700 0024               1186              BEQ         skipPrintEA         ; If it is, skipping printing EA again, because it is printed already in JSR
00001A5A                          1187              
00001A5A  43F9 00003CD4           1188              LEA         comma, A1           ; Display comma
00001A60  103C 000E               1189              MOVE.B      #14, D0             ; command for trap call to display message
00001A64  4E4F                    1190              TRAP        #15                 ; trap call
00001A66                          1191              
00001A66  4EB9 00002EF8           1192              JSR         printEA
00001A6C                          1193              
00001A6C  43F9 00003CC9           1194              LEA         newline, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001A72  103C 000E               1195              MOVE.B      #14, D0             ; command for trap call to display message
00001A76  4E4F                    1196              TRAP        #15                 ; trap call            
00001A78                          1197  
00001A78  6000 F5C6               1198              BRA         loop            
00001A7C                          1199  
00001A7C                          1200  skipPrintEA 
00001A7C  43F9 00003CC9           1201              LEA         newline, A1        
00001A82  103C 000E               1202              MOVE.B      #14, D0             ; command for trap call to display message
00001A86  4E4F                    1203              TRAP        #15                 ; trap call            
00001A88                          1204  
00001A88  6000 F5B6               1205              BRA         loop 
00001A8C                          1206              
00001A8C                          1207  ***********************************************************************************************************
00001A8C                          1208  *
00001A8C                          1209  *               LEA OPCODE
00001A8C                          1210  *
00001A8C                          1211  ***********************************************************************************************************
00001A8C                          1212  
00001A8C                          1213  opLEA
00001A8C  4244                    1214              CLR         D4                  ; Clearing space for source register
00001A8E  1801                    1215              MOVE.B      D1,D4               ; Moving byte to isolate register
00001A90  E244                    1216              ASR         #one,D4
00001A92  C87C 0007               1217              AND         #seven,D4           ; Isolated register
00001A96                          1218  
00001A96  4245                    1219              CLR         D5                  ; Clearing D5 to check if bits match LEA static bits
00001A98  1A01                    1220              MOVE.B      D1,D5
00001A9A  CA7C 0001               1221              AND         #one,D5
00001A9E  E545                    1222              ASL         #two,D5
00001AA0                          1223              
00001AA0  1218                    1224              MOVE.B      (A0)+, D1           ; Taking in next byte
00001AA2                          1225              
00001AA2  1C01                    1226              MOVE.B      D1,D6
00001AA4  EC46                    1227              ASR         #six,D6
00001AA6  DA46                    1228              ADD         D6,D5
00001AA8  4246                    1229              CLR         D6
00001AAA                          1230  
00001AAA  BA7C 0007               1231              CMP         #seven,D5
00001AAE  6600 1AC0               1232              BNE         invalid   
00001AB2                          1233              
00001AB2  43F9 00003D09           1234              LEA         LEAmatch, A1        ; we know that the opcode will be LEA, so load A1 to print message
00001AB8  103C 000E               1235              MOVE.B      #14, D0             ; command for trap call to display message
00001ABC  4E4F                    1236              TRAP        #15                 ; trap call            
00001ABE                          1237  
00001ABE  43F9 00003CCD           1238              LEA         space, A1         ; we know that the opcode will be MOVEM, so load A1 to print message
00001AC4  103C 000E               1239              MOVE.B      #14, D0             ; command for trap call to display message
00001AC8  4E4F                    1240              TRAP        #15                 ; trap call            
00001ACA                          1241              
00001ACA  4242                    1242              CLR         D2
00001ACC  1401                    1243              MOVE.B      D1,D2
00001ACE  E642                    1244              ASR         #three,D2
00001AD0  C47C 0007               1245              AND         #seven,D2
00001AD4                          1246              
00001AD4  4243                    1247              CLR         D3
00001AD6  1601                    1248              MOVE.B      D1,D3
00001AD8  C67C 0007               1249              AND         #seven,D3
00001ADC                          1250              
00001ADC  4EB9 00002EF8           1251              JSR         printEA
00001AE2                          1252              
00001AE2  43F9 00003CD4           1253              LEA         comma, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001AE8  103C 000E               1254              MOVE.B      #14, D0             ; command for trap call to display message
00001AEC  4E4F                    1255              TRAP        #15                 ; trap call            
00001AEE                          1256              
00001AEE                          1257              
00001AEE  4243                    1258              CLR         D3
00001AF0  1604                    1259              MOVE.B      D4,D3
00001AF2  143C 0001               1260              MOVE.B      #one,D2
00001AF6                          1261              
00001AF6  4EB9 00002EF8           1262              JSR         printEA             ; Prints out source address
00001AFC                          1263              
00001AFC  43F9 00003CC9           1264              LEA         newline, A1         ; Prints new line
00001B02  103C 000E               1265              MOVE.B      #14, D0             ; command for trap call to display message
00001B06  4E4F                    1266              TRAP        #15                 ; trap call
00001B08                          1267  
00001B08  6000 F536               1268              BRA         loop                        
00001B0C                          1269  
00001B0C                          1270  ***********************************************************************************************************
00001B0C                          1271  *
00001B0C                          1272  *                   OR OPCODE
00001B0C                          1273  *
00001B0C                          1274  ***********************************************************************************************************
00001B0C                          1275              
00001B0C                          1276  opOR       
00001B0C  43F9 00003D2B           1277              LEA         ORmatch,A1
00001B12  103C 000E               1278              MOVE.B      #14,D0
00001B16  4E4F                    1279              TRAP        #15
00001B18                          1280              
00001B18  4242                    1281              CLR         D2
00001B1A                          1282              ; These are for EA to Dn direction
00001B1A  B43C 0000               1283              CMP.B       #zero,D2
00001B1E  6700 002A               1284              BEQ         opORB               ; Byte in opmode
00001B22  B43C 0001               1285              CMP.B       #one,D2
00001B26  6700 007C               1286              BEQ         opORW               ; Word in opmode
00001B2A  B43C 0002               1287              CMP.B       #two,D2
00001B2E  6700 00D0               1288              BEQ         opORL               ; Long in opmode
00001B32                          1289              
00001B32                          1290              ; These are for Dn to EA direction
00001B32  B43C 0004               1291              CMP.B       #four,D2
00001B36  6700 0012               1292              BEQ         opORB               ; Byte in opmode
00001B3A  B43C 0005               1293              CMP.B       #five,D2
00001B3E  6700 0064               1294              BEQ         opORW               ; Word in opmode
00001B42  B43C 0006               1295              CMP.B       #six,D2
00001B46  6700 00B8               1296              BEQ         opORL               ; Long in opmode
00001B4A                          1297              
00001B4A  43F9 00003D67           1298  opORB       LEA         dispByte,A1
00001B50  103C 000E               1299              MOVE.B      #14,D0
00001B54  4E4F                    1300              TRAP        #15
00001B56                          1301              
00001B56  43F9 00003CCD           1302              LEA         space, A1           ; Display space
00001B5C  103C 000E               1303              MOVE.B      #14, D0             ; command for trap call to display message
00001B60  4E4F                    1304              TRAP        #15                 ; trap call
00001B62                          1305              
00001B62                          1306  
00001B62  1401                    1307              MOVE.B      D1,D2
00001B64  E642                    1308              ASR         #3,D2
00001B66  C47C 0007               1309              AND         #$07,D2
00001B6A  1601                    1310              MOVE.B      D1,D3
00001B6C  C67C 0007               1311              AND         #$07,D3
00001B70  4EB9 00002EF8           1312              JSR         printEA         ; Determines the "left" operand register
00001B76                          1313              
00001B76  43F9 00003CD4           1314              LEA         comma, A1           ; Display space
00001B7C  103C 000E               1315              MOVE.B      #14, D0             ; command for trap call to display message
00001B80  4E4F                    1316              TRAP        #15                 ; trap call
00001B82                          1317              
00001B82  4242                    1318              CLR         D2
00001B84  3601                    1319              MOVE.W      D1,D3
00001B86  E043                    1320              ASR         #eight,D3
00001B88  E243                    1321              ASR         #one,D3
00001B8A  C67C 0007               1322              AND         #$07,D3
00001B8E  4EB9 00002EF8           1323              JSR         printEA
00001B94                          1324              
00001B94  43F9 00003CC9           1325              LEA         newLine,A1
00001B9A  103C 000E               1326              MOVE.B      #14,D0
00001B9E  4E4F                    1327              TRAP        #15
00001BA0                          1328              
00001BA0  6000 F49E               1329              BRA         LOOP
00001BA4                          1330              
00001BA4                          1331              
00001BA4  43F9 00003D6A           1332  opORW       LEA         dispWord,A1
00001BAA  103C 000E               1333              MOVE.B      #14,D0
00001BAE  4E4F                    1334              TRAP        #15
00001BB0                          1335              
00001BB0  43F9 00003CCD           1336              LEA         space, A1           ; Display space
00001BB6  103C 000E               1337              MOVE.B      #14, D0             ; command for trap call to display message
00001BBA  4E4F                    1338              TRAP        #15                 ; trap call
00001BBC                          1339              
00001BBC  4242                    1340              CLR         D2
00001BBE  1401                    1341              MOVE.B      D1,D2
00001BC0  E642                    1342              ASR         #3,D2
00001BC2  C47C 0007               1343              AND         #$07,D2
00001BC6  1601                    1344              MOVE.B      D1,D3
00001BC8  C67C 0007               1345              AND         #$07,D3
00001BCC  4EB9 00002EF8           1346              JSR         printEA         ; Determines the "left" operand register
00001BD2                          1347              
00001BD2  43F9 00003CD4           1348              LEA         comma, A1           ; Display space
00001BD8  103C 000E               1349              MOVE.B      #14, D0             ; command for trap call to display message
00001BDC  4E4F                    1350              TRAP        #15                 ; trap call
00001BDE                          1351              
00001BDE  4242                    1352              CLR         D2
00001BE0  3601                    1353              MOVE.W      D1,D3
00001BE2  E043                    1354              ASR         #eight,D3
00001BE4  E243                    1355              ASR         #one,D3
00001BE6  C67C 0007               1356              AND         #$07,D3
00001BEA  4EB9 00002EF8           1357              JSR         printEA
00001BF0                          1358              
00001BF0  43F9 00003CC9           1359              LEA         newLine,A1
00001BF6  103C 000E               1360              MOVE.B      #14,D0
00001BFA  4E4F                    1361              TRAP        #15
00001BFC                          1362              
00001BFC  6000 F442               1363              BRA         LOOP
00001C00                          1364              
00001C00  43F9 00003D6D           1365  opORL       LEA         dispLong,A1
00001C06  103C 000E               1366              MOVE.B      #14,D0
00001C0A  4E4F                    1367              TRAP        #15
00001C0C                          1368              
00001C0C  43F9 00003CCD           1369              LEA         space, A1           ; Display space
00001C12  103C 000E               1370              MOVE.B      #14, D0             ; command for trap call to display message
00001C16  4E4F                    1371              TRAP        #15                 ; trap call
00001C18                          1372              
00001C18  1401                    1373              MOVE.B      D1,D2
00001C1A  E642                    1374              ASR         #3,D2
00001C1C  C47C 0007               1375              AND         #$07,D2
00001C20  1601                    1376              MOVE.B      D1,D3
00001C22  C67C 0007               1377              AND         #$07,D3
00001C26  4EB9 00002EF8           1378              JSR         printEA         ; Determines the "left" operand register
00001C2C                          1379              
00001C2C  43F9 00003CD4           1380              LEA         comma, A1           ; Display space
00001C32  103C 000E               1381              MOVE.B      #14, D0             ; command for trap call to display message
00001C36  4E4F                    1382              TRAP        #15                 ; trap call
00001C38                          1383              
00001C38  4242                    1384              CLR         D2
00001C3A  3601                    1385              MOVE.W      D1,D3
00001C3C  E043                    1386              ASR         #eight,D3
00001C3E  E243                    1387              ASR         #one,D3
00001C40  C67C 0007               1388              AND         #$07,D3
00001C44  4EB9 00002EF8           1389              JSR         printEA
00001C4A                          1390              
00001C4A  43F9 00003CC9           1391              LEA         newLine,A1
00001C50  103C 000E               1392              MOVE.B      #14,D0
00001C54  4E4F                    1393              TRAP        #15
00001C56                          1394              
00001C56  6000 F3E8               1395              BRA         LOOP            ; trap call
00001C5A                          1396              
00001C5A  6000 F3E4               1397              BRA         LOOP            ; DOUBLE CHECK THIS AGAIN AFTER MORE TESTING ALEX
00001C5E                          1398              
00001C5E                          1399  ***********************************************************************************************************
00001C5E                          1400  *
00001C5E                          1401  *                   DIVS OPCODE
00001C5E                          1402  *
00001C5E                          1403  ***********************************************************************************************************
00001C5E                          1404  
00001C5E                          1405  opDIVS      
00001C5E  43F9 00003D26           1406              LEA         DIVSmatch,A1
00001C64  103C 000E               1407              MOVE.B      #14,D0
00001C68  4E4F                    1408              TRAP        #15
00001C6A                          1409              
00001C6A  43F9 00003CCD           1410              LEA         space, A1           ; Display space
00001C70  103C 000E               1411              MOVE.B      #14, D0             ; command for trap call to display message
00001C74  4E4F                    1412              TRAP        #15                 ; trap call
00001C76                          1413              
00001C76  1401                    1414              MOVE.B      D1,D2
00001C78  E642                    1415              ASR         #3,D2
00001C7A  C47C 0007               1416              AND         #$07,D2
00001C7E  1601                    1417              MOVE.B      D1,D3
00001C80  C67C 0007               1418              AND         #$07,D3
00001C84  4EB9 00002EF8           1419              JSR         printEA
00001C8A                          1420              
00001C8A  43F9 00003CD4           1421              LEA         comma, A1           ; Display space
00001C90  103C 000E               1422              MOVE.B      #14, D0             ; command for trap call to display message
00001C94  4E4F                    1423              TRAP        #15                 ; trap call
00001C96                          1424              
00001C96  4242                    1425              CLR         D2
00001C98  3601                    1426              MOVE.W      D1,D3
00001C9A  E043                    1427              ASR         #eight,D3
00001C9C  E243                    1428              ASR         #one,D3
00001C9E  C67C 0007               1429              AND         #$07,D3
00001CA2  4EB9 00002EF8           1430              JSR         printEA
00001CA8                          1431              
00001CA8  43F9 00003CC9           1432              LEA         newLine,A1
00001CAE  103C 000E               1433              MOVE.B      #14,D0
00001CB2  4E4F                    1434              TRAP        #15
00001CB4                          1435              
00001CB4  6000 F38A               1436              BRA         LOOP
00001CB8                          1437      
00001CB8  6000 F386               1438              BRA     LOOP
00001CBC                          1439              
00001CBC                          1440  **********************************************************************************************************
00001CBC                          1441  *
00001CBC                          1442  *                   EOR OPCODE
00001CBC                          1443  *
00001CBC                          1444  ***********************************************************************************************************
00001CBC                          1445  
00001CBC                          1446  opEOR       
00001CBC  43F9 00003D32           1447              LEA         EORmatch,A1
00001CC2  103C 000E               1448              MOVE.B      #14,D0
00001CC6  4E4F                    1449              TRAP        #15
00001CC8                          1450              
00001CC8  4242                    1451              CLR         D2
00001CCA                          1452              
00001CCA  1401                    1453              MOVE.B      D1,D2
00001CCC  EE42                    1454              ASR         #seven,D2           ; Move bits 7 places over to find opmode
00001CCE  C47C 0007               1455              AND         #$07,D2
00001CD2  B43C 0005               1456              CMP.B       #five,D2
00001CD6  6D00 0012               1457              BLT         opEORB              ; Byte in opmode
00001CDA  B43C 0005               1458              CMP.B       #five,D2
00001CDE  6700 006A               1459              BEQ         opEORW              ; Word in opmode
00001CE2  B43C 0005               1460              CMP.B       #five,D2
00001CE6  6E00 00C2               1461              BGT         opEORL              ; Long in opmode
00001CEA                          1462              
00001CEA                          1463  opEORB      
00001CEA  43F9 00003D67           1464              LEA         dispByte,A1
00001CF0  103C 000E               1465              MOVE.B      #14,D0
00001CF4  4E4F                    1466              TRAP        #15
00001CF6                          1467              
00001CF6  43F9 00003CCD           1468              LEA         space, A1           ; Display space
00001CFC  103C 000E               1469              MOVE.B      #14, D0             ; command for trap call to display message
00001D00  4E4F                    1470              TRAP        #15                 ; trap call
00001D02                          1471              
00001D02  4242                    1472              CLR         D2
00001D04  4243                    1473              CLR         D3
00001D06  3601                    1474              MOVE.W      D1,D3
00001D08  E043                    1475              ASR         #eight,D3
00001D0A  E243                    1476              ASR         #one,D3
00001D0C  C67C 0007               1477              AND         #$07,D3
00001D10  4EB9 00002EF8           1478              JSR         printEA
00001D16                          1479              
00001D16  43F9 00003CD4           1480              LEA         comma, A1           ; Display space
00001D1C  103C 000E               1481              MOVE.B      #14, D0             ; command for trap call to display message
00001D20  4E4F                    1482              TRAP        #15                 ; trap call
00001D22                          1483              
00001D22  4242                    1484              CLR         D2
00001D24  4243                    1485              CLR         D3
00001D26  1401                    1486              MOVE.B      D1,D2
00001D28  E642                    1487              ASR         #three,D2
00001D2A  C47C 0007               1488              AND         #seven,D2
00001D2E  1601                    1489              MOVE.B      D1,D3
00001D30  C67C 0007               1490              AND         #$07,D3
00001D34  4EB9 00002EF8           1491              JSR         printEA         ; Determines the "left" operand register
00001D3A                          1492              
00001D3A  43F9 00003CC9           1493              LEA         newLine,A1
00001D40  103C 000E               1494              MOVE.B      #14,D0
00001D44  4E4F                    1495              TRAP        #15
00001D46                          1496              
00001D46  6000 F2F8               1497              BRA         LOOP
00001D4A                          1498              
00001D4A                          1499              
00001D4A                          1500  opEORW      
00001D4A  43F9 00003D6A           1501              LEA         dispWord,A1
00001D50  103C 000E               1502              MOVE.B      #14,D0
00001D54  4E4F                    1503              TRAP        #15
00001D56                          1504              
00001D56  43F9 00003CCD           1505              LEA         space, A1           ; Display space
00001D5C  103C 000E               1506              MOVE.B      #14, D0             ; command for trap call to display message
00001D60  4E4F                    1507              TRAP        #15                 ; trap call
00001D62                          1508              
00001D62  4242                    1509              CLR         D2
00001D64  4243                    1510              CLR         D3
00001D66  3601                    1511              MOVE.W      D1,D3
00001D68  E043                    1512              ASR         #eight,D3
00001D6A  E243                    1513              ASR         #one,D3
00001D6C  C67C 0007               1514              AND         #$07,D3
00001D70  4EB9 00002EF8           1515              JSR         printEA
00001D76                          1516              
00001D76  43F9 00003CD4           1517              LEA         comma, A1           ; Display space
00001D7C  103C 000E               1518              MOVE.B      #14, D0             ; command for trap call to display message
00001D80  4E4F                    1519              TRAP        #15                 ; trap call
00001D82                          1520              
00001D82  4242                    1521              CLR         D2
00001D84  4243                    1522              CLR         D3
00001D86  1401                    1523              MOVE.B      D1,D2
00001D88  E642                    1524              ASR         #three,D2
00001D8A  C47C 0007               1525              AND         #seven,D2
00001D8E  1601                    1526              MOVE.B      D1,D3
00001D90  C67C 0007               1527              AND         #$07,D3
00001D94  4EB9 00002EF8           1528              JSR         printEA         ; Determines the "left" operand register
00001D9A                          1529              
00001D9A  43F9 00003CC9           1530              LEA         newLine,A1
00001DA0  103C 000E               1531              MOVE.B      #14,D0
00001DA4  4E4F                    1532              TRAP        #15
00001DA6                          1533              
00001DA6  6000 F298               1534              BRA         LOOP
00001DAA                          1535              
00001DAA                          1536  opEORL     
00001DAA  43F9 00003D6D           1537              LEA         dispLong,A1
00001DB0  103C 000E               1538              MOVE.B      #14,D0
00001DB4  4E4F                    1539              TRAP        #15
00001DB6                          1540              
00001DB6  43F9 00003CCD           1541              LEA         space, A1           ; Display space
00001DBC  103C 000E               1542              MOVE.B      #14, D0             ; command for trap call to display message
00001DC0  4E4F                    1543              TRAP        #15                 ; trap call
00001DC2                          1544              
00001DC2  4242                    1545              CLR         D2
00001DC4  4243                    1546              CLR         D3
00001DC6  3601                    1547              MOVE.W      D1,D3
00001DC8  E043                    1548              ASR         #eight,D3
00001DCA  E243                    1549              ASR         #one,D3
00001DCC  C67C 0007               1550              AND         #$07,D3
00001DD0  4EB9 00002EF8           1551              JSR         printEA
00001DD6                          1552              
00001DD6  43F9 00003CD4           1553              LEA         comma, A1           ; Display space
00001DDC  103C 000E               1554              MOVE.B      #14, D0             ; command for trap call to display message
00001DE0  4E4F                    1555              TRAP        #15                 ; trap call
00001DE2                          1556              
00001DE2  4242                    1557              CLR         D2
00001DE4  4243                    1558              CLR         D3
00001DE6  1401                    1559              MOVE.B      D1,D2
00001DE8  E642                    1560              ASR         #three,D2
00001DEA  C47C 0007               1561              AND         #seven,D2
00001DEE  1601                    1562              MOVE.B      D1,D3
00001DF0  C67C 0007               1563              AND         #$07,D3
00001DF4  4EB9 00002EF8           1564              JSR         printEA         ; Determines the "left" operand register
00001DFA                          1565              
00001DFA  43F9 00003CC9           1566              LEA         newLine,A1
00001E00  103C 000E               1567              MOVE.B      #14,D0
00001E04  4E4F                    1568              TRAP        #15
00001E06                          1569              
00001E06  6000 F238               1570              BRA         LOOP            ; trap call 
00001E0A                          1571  
00001E0A                          1572  ***********************************************************************************************************
00001E0A                          1573  *
00001E0A                          1574  *                   CMP OPCODE
00001E0A                          1575  *
00001E0A                          1576  ***********************************************************************************************************
00001E0A                          1577  
00001E0A                          1578  opCMP       
00001E0A  43F9 00003D36           1579              LEA         CMPmatch,A1
00001E10  103C 000E               1580              MOVE.B      #14,D0
00001E14  4E4F                    1581              TRAP        #15
00001E16                          1582              
00001E16  4242                    1583              CLR         D2
00001E18                          1584              
00001E18  1401                    1585              MOVE.B      D1,D2
00001E1A  EC42                    1586              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001E1C  C47C 0007               1587              AND         #$07,D2
00001E20  B43C 0000               1588              CMP.B       #zero,D2
00001E24  6700 0016               1589              BEQ         opCMPB              ; Byte in opmode
00001E28  B43C 0001               1590              CMP.B       #one,D2
00001E2C  6700 0068               1591              BEQ         opCMPW              ; Word in opmode
00001E30  B43C 0002               1592              CMP.B       #two,D2
00001E34  6700 00BA               1593              BEQ         opCMPL              ; Long in opmode
00001E38                          1594              
00001E38  6000 1E24               1595              BRA         printInvalid        ; Incorrect input
00001E3C                          1596  
00001E3C                          1597  opCMPB      
00001E3C  43F9 00003D67           1598              LEA         dispByte,A1
00001E42  103C 000E               1599              MOVE.B      #14,D0
00001E46  4E4F                    1600              TRAP        #15
00001E48                          1601              
00001E48  43F9 00003CCD           1602              LEA         space, A1           ; Display space
00001E4E  103C 000E               1603              MOVE.B      #14, D0             ; command for trap call to display message
00001E52  4E4F                    1604              TRAP        #15                 ; trap call
00001E54                          1605              
00001E54  1401                    1606              MOVE.B      D1,D2
00001E56  E642                    1607              ASR         #3,D2
00001E58  C47C 0007               1608              AND         #$07,D2
00001E5C  1601                    1609              MOVE.B      D1,D3
00001E5E  C67C 0007               1610              AND         #$07,D3
00001E62  4EB9 00002EF8           1611              JSR         printEA         ; Determines the "left" operand register
00001E68                          1612              
00001E68  43F9 00003CD4           1613              LEA         comma, A1           ; Display space
00001E6E  103C 000E               1614              MOVE.B      #14, D0             ; command for trap call to display message
00001E72  4E4F                    1615              TRAP        #15                 ; trap call
00001E74                          1616              
00001E74  4242                    1617              CLR         D2
00001E76  3601                    1618              MOVE.W      D1,D3
00001E78  E043                    1619              ASR         #eight,D3
00001E7A  E243                    1620              ASR         #one,D3
00001E7C  C67C 0007               1621              AND         #$07,D3
00001E80  4EB9 00002EF8           1622              JSR         printEA
00001E86                          1623              
00001E86  43F9 00003CC9           1624              LEA         newLine,A1
00001E8C  103C 000E               1625              MOVE.B      #14,D0
00001E90  4E4F                    1626              TRAP        #15
00001E92                          1627              
00001E92  6000 F1AC               1628              BRA         LOOP
00001E96                          1629              
00001E96                          1630  opCMPW      
00001E96  43F9 00003D6A           1631              LEA         dispWord,A1
00001E9C  103C 000E               1632              MOVE.B      #14,D0
00001EA0  4E4F                    1633              TRAP        #15
00001EA2                          1634              
00001EA2  43F9 00003CCD           1635              LEA         space, A1           ; Display space
00001EA8  103C 000E               1636              MOVE.B      #14, D0             ; command for trap call to display message
00001EAC  4E4F                    1637              TRAP        #15                 ; trap call
00001EAE                          1638              
00001EAE  1401                    1639              MOVE.B      D1,D2
00001EB0  E642                    1640              ASR         #3,D2
00001EB2  C47C 0007               1641              AND         #$07,D2
00001EB6  1601                    1642              MOVE.B      D1,D3
00001EB8  C67C 0007               1643              AND         #$07,D3
00001EBC  4EB9 00002EF8           1644              JSR         printEA         ; Determines the "left" operand register
00001EC2                          1645              
00001EC2  43F9 00003CD4           1646              LEA         comma, A1           ; Display space
00001EC8  103C 000E               1647              MOVE.B      #14, D0             ; command for trap call to display message
00001ECC  4E4F                    1648              TRAP        #15                 ; trap call
00001ECE                          1649              
00001ECE  4242                    1650              CLR         D2
00001ED0  3601                    1651              MOVE.W      D1,D3
00001ED2  E043                    1652              ASR         #eight,D3
00001ED4  E243                    1653              ASR         #one,D3
00001ED6  C67C 0007               1654              AND         #$07,D3
00001EDA  4EB9 00002EF8           1655              JSR         printEA
00001EE0                          1656              
00001EE0  43F9 00003CC9           1657              LEA         newLine,A1
00001EE6  103C 000E               1658              MOVE.B      #14,D0
00001EEA  4E4F                    1659              TRAP        #15
00001EEC                          1660              
00001EEC  6000 F152               1661              BRA         LOOP
00001EF0                          1662  
00001EF0                          1663  opCMPL      
00001EF0  43F9 00003D6D           1664              LEA         dispLong,A1
00001EF6  103C 000E               1665              MOVE.B      #14,D0
00001EFA  4E4F                    1666              TRAP        #15
00001EFC                          1667              
00001EFC  43F9 00003CCD           1668              LEA         space, A1           ; Display space
00001F02  103C 000E               1669              MOVE.B      #14, D0             ; command for trap call to display message
00001F06  4E4F                    1670              TRAP        #15                 ; trap call
00001F08                          1671              
00001F08  1401                    1672              MOVE.B      D1,D2
00001F0A  E642                    1673              ASR         #3,D2
00001F0C  C47C 0007               1674              AND         #$07,D2
00001F10  1601                    1675              MOVE.B      D1,D3
00001F12  C67C 0007               1676              AND         #$07,D3
00001F16  4EB9 00002EF8           1677              JSR         printEA         ; Determines the "left" operand register
00001F1C                          1678              
00001F1C  43F9 00003CD4           1679              LEA         comma, A1           ; Display space
00001F22  103C 000E               1680              MOVE.B      #14, D0             ; command for trap call to display message
00001F26  4E4F                    1681              TRAP        #15                 ; trap call
00001F28                          1682              
00001F28  4242                    1683              CLR         D2
00001F2A  3601                    1684              MOVE.W      D1,D3
00001F2C  E043                    1685              ASR         #eight,D3
00001F2E  E243                    1686              ASR         #one,D3
00001F30  C67C 0007               1687              AND         #$07,D3
00001F34  4EB9 00002EF8           1688              JSR         printEA
00001F3A                          1689              
00001F3A  43F9 00003CC9           1690              LEA         newLine,A1
00001F40  103C 000E               1691              MOVE.B      #14,D0
00001F44  4E4F                    1692              TRAP        #15
00001F46                          1693              
00001F46  6000 F0F8               1694              BRA         LOOP
00001F4A                          1695  
00001F4A                          1696  ***********************************************************************************************************
00001F4A                          1697  *
00001F4A                          1698  *                   SUB OPCODE
00001F4A                          1699  *
00001F4A                          1700  ***********************************************************************************************************
00001F4A                          1701  
00001F4A                          1702  opSUB       
00001F4A  43F9 00003D2E           1703              LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001F50  103C 000E               1704              MOVE.B      #14, D0             ; command for trap call to display message
00001F54  4E4F                    1705              TRAP        #15                 ; trap call
00001F56                          1706          
00001F56                          1707          
00001F56  E141                    1708              ASL         #eight,D1
00001F58  1218                    1709              MOVE.B      (A0)+,D1
00001F5A  4242                    1710              CLR         D2
00001F5C                          1711              
00001F5C  3401                    1712              MOVE.W      D1,D2
00001F5E  EC42                    1713              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001F60  C47C 0007               1714              AND         #seven,D2
00001F64                          1715              
00001F64                          1716              ; These are for DN - EA
00001F64  B43C 0000               1717              CMP.B       #zero,D2
00001F68  6700 002A               1718              BEQ         opSUBB              ; Byte in opmode
00001F6C  B43C 0001               1719              CMP.B       #one,D2
00001F70  6700 007C               1720              BEQ         opSUBW              ; Word in opmode
00001F74  B43C 0002               1721              CMP.B       #two,D2
00001F78  6700 00CE               1722              BEQ         opSUBL              ; Long in opmode
00001F7C                          1723              
00001F7C                          1724              ; These are for EA - DN
00001F7C  B43C 0004               1725              CMP.B       #four,D2
00001F80  6700 0012               1726              BEQ         opSUBB              ; Byte in opmode
00001F84  B43C 0005               1727              CMP.B       #five,D2
00001F88  6700 0064               1728              BEQ         opSUBW              ; Word in opmode
00001F8C  B43C 0006               1729              CMP.B       #six,D2
00001F90  6700 00B6               1730              BEQ         opSUBL              ; Long in opmode
00001F94                          1731              
00001F94                          1732  opSUBB      
00001F94  43F9 00003D67           1733              LEA         dispByte,A1
00001F9A  103C 000E               1734              MOVE.B      #14,D0
00001F9E  4E4F                    1735              TRAP        #15
00001FA0                          1736              
00001FA0  43F9 00003CCD           1737              LEA         space, A1           ; Display space
00001FA6  103C 000E               1738              MOVE.B      #14, D0             ; command for trap call to display message
00001FAA  4E4F                    1739              TRAP        #15                 ; trap call         
00001FAC                          1740              
00001FAC  1401                    1741              MOVE.B      D1,D2
00001FAE  E642                    1742              ASR         #3,D2
00001FB0  C47C 0007               1743              AND         #$07,D2
00001FB4  3601                    1744              MOVE.W      D1,D3
00001FB6  C67C 0007               1745              AND         #$07,D3
00001FBA  4EB9 00002EF8           1746              JSR         printEA         ; Determines the "left" operand register
00001FC0                          1747              
00001FC0  43F9 00003CD4           1748              LEA         comma, A1           ; Display space
00001FC6  103C 000E               1749              MOVE.B      #14, D0             ; command for trap call to display message
00001FCA  4E4F                    1750              TRAP        #15                 ; trap call
00001FCC                          1751              
00001FCC  4242                    1752              CLR         D2
00001FCE  3601                    1753              MOVE.W      D1,D3
00001FD0  E043                    1754              ASR         #eight,D3
00001FD2  E243                    1755              ASR         #one,D3
00001FD4  C67C 0007               1756              AND         #$07,D3
00001FD8  4EB9 00002EF8           1757              JSR         printEA
00001FDE                          1758              
00001FDE  43F9 00003CC9           1759              LEA         newLine,A1
00001FE4  103C 000E               1760              MOVE.B      #14,D0
00001FE8  4E4F                    1761              TRAP        #15
00001FEA                          1762              
00001FEA  6000 F054               1763              BRA         LOOP
00001FEE                          1764              
00001FEE                          1765              
00001FEE                          1766  opSUBW      
00001FEE  43F9 00003D6A           1767              LEA         dispWord,A1
00001FF4  103C 000E               1768              MOVE.B      #14,D0
00001FF8  4E4F                    1769              TRAP        #15
00001FFA                          1770              
00001FFA  43F9 00003CCD           1771              LEA         space, A1           ; Display space
00002000  103C 000E               1772              MOVE.B      #14, D0             ; command for trap call to display message
00002004  4E4F                    1773              TRAP        #15                 ; trap call         
00002006                          1774              
00002006  1401                    1775              MOVE.B      D1,D2
00002008  E642                    1776              ASR         #3,D2
0000200A  C47C 0007               1777              AND         #$07,D2
0000200E  3601                    1778              MOVE.W      D1,D3
00002010  C67C 0007               1779              AND         #$07,D3
00002014  4EB9 00002EF8           1780              JSR         printEA         ; Determines the "left" operand register
0000201A                          1781              
0000201A  43F9 00003CD4           1782              LEA         comma, A1           ; Display space
00002020  103C 000E               1783              MOVE.B      #14, D0             ; command for trap call to display message
00002024  4E4F                    1784              TRAP        #15                 ; trap call
00002026                          1785              
00002026  4242                    1786              CLR         D2
00002028  3601                    1787              MOVE.W      D1,D3
0000202A  E043                    1788              ASR         #eight,D3
0000202C  E243                    1789              ASR         #one,D3
0000202E  C67C 0007               1790              AND         #$07,D3
00002032  4EB9 00002EF8           1791              JSR         printEA
00002038                          1792              
00002038  43F9 00003CC9           1793              LEA         newLine,A1
0000203E  103C 000E               1794              MOVE.B      #14,D0
00002042  4E4F                    1795              TRAP        #15
00002044                          1796              
00002044  6000 EFFA               1797              BRA         LOOP
00002048                          1798              
00002048                          1799  opSUBL      
00002048  43F9 00003D6D           1800              LEA         dispLong,A1
0000204E  103C 000E               1801              MOVE.B      #14,D0
00002052  4E4F                    1802              TRAP        #15
00002054                          1803              
00002054  43F9 00003CCD           1804              LEA         space, A1           ; Display space
0000205A  103C 000E               1805              MOVE.B      #14, D0             ; command for trap call to display message
0000205E  4E4F                    1806              TRAP        #15                 ; trap call         
00002060                          1807              
00002060  1401                    1808              MOVE.B      D1,D2
00002062  E642                    1809              ASR         #3,D2
00002064  C47C 0007               1810              AND         #$07,D2
00002068  3601                    1811              MOVE.W      D1,D3
0000206A  C67C 0007               1812              AND         #$07,D3
0000206E  4EB9 00002EF8           1813              JSR         printEA         ; Determines the "left" operand register
00002074                          1814              
00002074  43F9 00003CD4           1815              LEA         comma, A1           ; Display space
0000207A  103C 000E               1816              MOVE.B      #14, D0             ; command for trap call to display message
0000207E  4E4F                    1817              TRAP        #15                 ; trap call
00002080                          1818              
00002080  4242                    1819              CLR         D2
00002082  3601                    1820              MOVE.W      D1,D3
00002084  E043                    1821              ASR         #eight,D3
00002086  E243                    1822              ASR         #one,D3
00002088  C67C 0007               1823              AND         #$07,D3
0000208C  4EB9 00002EF8           1824              JSR         printEA
00002092                          1825              
00002092  43F9 00003CC9           1826              LEA         newLine,A1
00002098  103C 000E               1827              MOVE.B      #14,D0
0000209C  4E4F                    1828              TRAP        #15
0000209E                          1829              
0000209E  6000 EFA0               1830              BRA         LOOP 
000020A2                          1831              
000020A2                          1832  ***********************************************************************************************************
000020A2                          1833  *
000020A2                          1834  *                   BRA OPCODE
000020A2                          1835  *
000020A2                          1836  ***********************************************************************************************************
000020A2                          1837              
000020A2                          1838  opBRA       
000020A2  43F9 00003D12           1839              LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
000020A8  103C 000E               1840              MOVE.B      #14, D0             ; command for trap call to display message
000020AC  4E4F                    1841              TRAP        #15                 ; trap call
000020AE                          1842          
000020AE  4242                    1843              CLR         D2
000020B0  4243                    1844              CLR         D3      
000020B2                          1845  
000020B2  43F9 00003CCD           1846              LEA         space,A1
000020B8  103C 000E               1847              MOVE.B      #14,D0
000020BC  4E4F                    1848              TRAP        #15
000020BE                          1849          
000020BE  143C 0007               1850              MOVE.B      #seven,D2
000020C2  1218                    1851              MOVE.B      (A0)+,D1
000020C4  4EB9 00002EF8           1852              JSR         printEA
000020CA                          1853          
000020CA  43F9 00003CC9           1854              LEA         newLine, A1           ; create new line
000020D0  103C 000E               1855              MOVE.B      #14, D0             ; command for trap call to display message
000020D4  4E4F                    1856              TRAP        #15                 ; trap call
000020D6                          1857  
000020D6  6000 EF68               1858              BRA         LOOP
000020DA                          1859          
000020DA                          1860  ***********************************************************************************************************
000020DA                          1861  *
000020DA                          1862  *                   Bcc OPCODES
000020DA                          1863  *
000020DA                          1864  *   Supported cc condition codes:
000020DA                          1865  *           >CS
000020DA                          1866  *           >VC
000020DA                          1867  *           >GE
000020DA                          1868  *           >LT
000020DA                          1869  *
000020DA                          1870  ***********************************************************************************************************
000020DA                          1871  * CS Conition Code
000020DA                          1872  
000020DA                          1873  opBCS       
000020DA  43F9 00003D16           1874              LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
000020E0  103C 000E               1875              MOVE.B      #14, D0             ; command for trap call to display message
000020E4  4E4F                    1876              TRAP        #15                 ; trap call
000020E6                          1877          
000020E6  4242                    1878              CLR         D2
000020E8  4243                    1879              CLR         D3      
000020EA                          1880  
000020EA  43F9 00003CCD           1881              LEA         space,A1
000020F0  103C 000E               1882              MOVE.B      #14,D0
000020F4  4E4F                    1883              TRAP        #15
000020F6                          1884          
000020F6  143C 0007               1885              MOVE.B      #seven,D2
000020FA  1218                    1886              MOVE.B      (A0)+,D1
000020FC  4EB9 00002EF8           1887              JSR         printEA
00002102                          1888          
00002102  43F9 00003CC9           1889              LEA         newLine, A1           ; create new line
00002108  103C 000E               1890              MOVE.B      #14, D0             ; command for trap call to display message
0000210C  4E4F                    1891              TRAP        #15                 ; trap call
0000210E                          1892  
0000210E                          1893  ***********************************************************************************************************
0000210E                          1894  * VC Condition Code
0000210E                          1895  
0000210E                          1896  opBVC       
0000210E  43F9 00003D1A           1897              LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00002114  103C 000E               1898              MOVE.B      #14, D0             ; command for trap call to display message
00002118  4E4F                    1899              TRAP        #15                 ; trap call
0000211A                          1900          
0000211A  4242                    1901              CLR         D2
0000211C  4243                    1902              CLR         D3      
0000211E                          1903  
0000211E  43F9 00003CCD           1904              LEA         space,A1
00002124  103C 000E               1905              MOVE.B      #14,D0
00002128  4E4F                    1906              TRAP        #15
0000212A                          1907          
0000212A  143C 0007               1908              MOVE.B      #seven,D2
0000212E  1218                    1909              MOVE.B      (A0)+,D1
00002130  4EB9 00002EF8           1910              JSR         printEA
00002136                          1911          
00002136  43F9 00003CC9           1912              LEA         newLine, A1           ; create new line
0000213C  103C 000E               1913              MOVE.B      #14, D0             ; command for trap call to display message
00002140  4E4F                    1914              TRAP        #15                 ; trap call
00002142                          1915  
00002142                          1916  ***********************************************************************************************************
00002142                          1917  * GE Conidtion Code     
00002142                          1918          
00002142                          1919  opBGE       
00002142  43F9 00003D1E           1920              LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00002148  103C 000E               1921              MOVE.B      #14, D0             ; command for trap call to display message
0000214C  4E4F                    1922              TRAP        #15                 ; trap call
0000214E                          1923          
0000214E  4242                    1924              CLR         D2
00002150  4243                    1925              CLR         D3      
00002152                          1926  
00002152  43F9 00003CCD           1927              LEA         space,A1
00002158  103C 000E               1928              MOVE.B      #14,D0
0000215C  4E4F                    1929              TRAP        #15
0000215E                          1930          
0000215E  143C 0007               1931              MOVE.B      #seven,D2
00002162  1218                    1932              MOVE.B      (A0)+,D1
00002164  4EB9 00002EF8           1933              JSR         printEA
0000216A                          1934          
0000216A  43F9 00003CC9           1935              LEA         newLine, A1           ; create new line
00002170  103C 000E               1936              MOVE.B      #14, D0             ; command for trap call to display message
00002174  4E4F                    1937              TRAP        #15                 ; trap call
00002176                          1938  
00002176                          1939  ***********************************************************************************************************
00002176                          1940  * LT Conditions Code        
00002176                          1941          
00002176                          1942  opBLT   
00002176  43F9 00003D22           1943              LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
0000217C  103C 000E               1944              MOVE.B      #14, D0             ; command for trap call to display message
00002180  4E4F                    1945              TRAP        #15                 ; trap call
00002182                          1946          
00002182  4242                    1947              CLR         D2
00002184  4243                    1948              CLR         D3      
00002186                          1949  
00002186  43F9 00003CCD           1950              LEA         space,A1
0000218C  103C 000E               1951              MOVE.B      #14,D0
00002190  4E4F                    1952              TRAP        #15
00002192                          1953          
00002192  143C 0007               1954              MOVE.B      #seven,D2
00002196  1218                    1955              MOVE.B      (A0)+,D1
00002198  4EB9 00002EF8           1956              JSR         printEA
0000219E                          1957          
0000219E  43F9 00003CC9           1958              LEA         newLine, A1           ; create new line
000021A4  103C 000E               1959              MOVE.B      #14, D0             ; command for trap call to display message
000021A8  4E4F                    1960              TRAP        #15                 ; trap call
000021AA                          1961          
000021AA                          1962          
000021AA                          1963  ***********************************************************************************************************
000021AA                          1964  *
000021AA                          1965  *               SUBQ OPCODE
000021AA                          1966  *
000021AA                          1967  ***********************************************************************************************************
000021AA                          1968  
000021AA                          1969  opSUBQ      
000021AA  43F9 00003D0D           1970              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
000021B0  103C 000E               1971              MOVE.B      #14, D0             ; command for trap call to display message
000021B4  4E4F                    1972              TRAP        #15                 ; trap call
000021B6                          1973              
000021B6  1401                    1974              MOVE.B      D1,D2
000021B8  EE42                    1975              ASR         #seven,D2           ; Move bits 7 places over to find size
000021BA  C47C 0007               1976              AND         #$07,D2
000021BE                          1977              
000021BE                          1978              ; Find size bits
000021BE  B43C 0000               1979              CMP.B       #zero,D2
000021C2  6700 0012               1980              BEQ         opSUBQB             ; Byte in size
000021C6  B43C 0001               1981              CMP.B       #one,D2
000021CA  6700 0024               1982              BEQ         opSUBQW             ; Word in size
000021CE  B43C 0002               1983              CMP.B       #two,D2
000021D2  6700 0036               1984              BEQ         opSUBQL             ; Long in size
000021D6                          1985              
000021D6                          1986              
000021D6                          1987  opSUBQB     
000021D6  43F9 00003D67           1988              LEA         dispByte,A1
000021DC  103C 000E               1989              MOVE.B      #14,D0
000021E0  4E4F                    1990              TRAP        #15 
000021E2                          1991              
000021E2  E141                    1992              ASL         #eight,D1
000021E4  1218                    1993              MOVE.B      (A0)+,D1
000021E6  4EB9 00002E20           1994              JSR         PrntImm
000021EC                          1995              
000021EC  6000 EE52               1996              BRA         LOOP
000021F0                          1997              
000021F0                          1998  opSUBQW     
000021F0  43F9 00003D6A           1999              LEA         dispWord,A1
000021F6  103C 000E               2000              MOVE.B      #14,D0
000021FA  4E4F                    2001              TRAP        #15
000021FC                          2002              
000021FC  E141                    2003              ASL         #eight,D1
000021FE  1218                    2004              MOVE.B      (A0)+,D1
00002200  4EB9 00002E20           2005              JSR         PrntImm
00002206                          2006              
00002206  6000 EE38               2007              BRA         LOOP
0000220A                          2008              
0000220A                          2009  opSUBQL     
0000220A  43F9 00003D6D           2010              LEA         dispLong,A1
00002210  103C 000E               2011              MOVE.B      #14,D0
00002214  4E4F                    2012              TRAP        #15
00002216                          2013              
00002216  E141                    2014              ASL         #eight,D1
00002218  1218                    2015              MOVE.B      (A0)+,D1
0000221A                          2016              
0000221A  4246                    2017              CLR         D6
0000221C  1C3C 0001               2018              MOVE.B      #1,D6
00002220                          2019              
00002220  4EB9 00002E20           2020              JSR         PrntImm         
00002226                          2021              
00002226  6000 EE18               2022              BRA         LOOP            ; trap call
0000222A                          2023              
0000222A                          2024  ***********************************************************************************************************
0000222A                          2025  *
0000222A                          2026  *                   MULS OPCODE
0000222A                          2027  *
0000222A                          2028  ***********************************************************************************************************
0000222A                          2029  
0000222A                          2030  opMULS  
0000222A  43F9 00003D3A           2031              LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002230  103C 000E               2032              MOVE.B      #14, D0             ; command for trap call to display message
00002234  4E4F                    2033              TRAP        #15                 ; trap call
00002236  43F9 00003CCD           2034              LEA         space, A1           ; create spaces
0000223C  103C 000E               2035              MOVE.B      #14, D0             ; command for trap call to display message
00002240  4E4F                    2036              TRAP        #15                 ; trap call
00002242                          2037          
00002242  E141                    2038              ASL         #eight, D1
00002244  1218                    2039              MOVE.B      (A0)+, D1
00002246                          2040          
00002246  4242                    2041              CLR         D2
00002248  4243                    2042              CLR         D3
0000224A  1401                    2043              MOVE.B      D1, D2
0000224C  E642                    2044              ASR         #three, D2
0000224E  C47C 0007               2045              AND         #seven, D2
00002252  1601                    2046              MOVE.B      D1, D3
00002254  C67C 0007               2047              AND         #seven, D3
00002258                          2048          
00002258  4EB9 00002EF8           2049              JSR         printEA
0000225E                          2050          
0000225E  43F9 00003CD4           2051              LEA         comma, A1           ; create comma
00002264  103C 000E               2052              MOVE.B      #14, D0             ; command for trap call to display message
00002268  4E4F                    2053              TRAP        #15                 ; trap call
0000226A                          2054  
0000226A  4242                    2055              CLR         D2
0000226C  4243                    2056              CLR         D3
0000226E  3601                    2057              MOVE.W      D1, D3
00002270  E043                    2058              ASR         #eight, D3
00002272  E243                    2059              ASR         #one, D3
00002274  C67C 0007               2060              AND         #seven, D3
00002278                          2061  
00002278  4EB9 00002EF8           2062              JSR         printEA
0000227E                          2063          
0000227E  43F9 00003CC9           2064              LEA         newLine, A1           ; create new line
00002284  103C 000E               2065              MOVE.B      #14, D0             ; command for trap call to display message
00002288  4E4F                    2066              TRAP        #15                 ; trap call
0000228A                          2067          
0000228A  6000 EDB4               2068              BRA         LOOP
0000228E                          2069  
0000228E                          2070  ***********************************************************************************************************
0000228E                          2071  *
0000228E                          2072  *                   ADD OPCODE
0000228E                          2073  *
0000228E                          2074  ***********************************************************************************************************   
0000228E                          2075  
0000228E                          2076  opADDB  
0000228E  43F9 00003D3F           2077              LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002294  103C 000E               2078              MOVE.B      #14, D0             ; command for trap call to display message
00002298  4E4F                    2079              TRAP        #15                 ; trap call
0000229A                          2080          
0000229A  43F9 00003D67           2081              LEA         dispByte, A1        ; display byte
000022A0  103C 000E               2082              MOVE.B      #14, D0             ; command for trap call to display message
000022A4  4E4F                    2083              TRAP        #15                 ; trap call
000022A6  43F9 00003CCD           2084              LEA         space, A1           ; create spaces
000022AC  103C 000E               2085              MOVE.B      #14, D0             ; command for trap call to display message
000022B0  4E4F                    2086              TRAP        #15                 ; trap call
000022B2                          2087          
000022B2  4242                    2088              CLR         D2
000022B4  4243                    2089              CLR         D3
000022B6  1401                    2090              MOVE.B      D1, D2
000022B8  E642                    2091              ASR         #three, D2
000022BA  C47C 0007               2092              AND         #seven, D2
000022BE  1601                    2093              MOVE.B      D1, D3
000022C0  C67C 0007               2094              AND         #seven, D3
000022C4                          2095          
000022C4  4EB9 00002EF8           2096              JSR         printEA
000022CA                          2097          
000022CA  43F9 00003CD4           2098              LEA         comma, A1           ; create comma
000022D0  103C 000E               2099              MOVE.B      #14, D0             ; command for trap call to display message
000022D4  4E4F                    2100              TRAP        #15                 ; trap call
000022D6                          2101  
000022D6  4242                    2102              CLR         D2
000022D8  4243                    2103              CLR         D3
000022DA  3601                    2104              MOVE.W      D1, D3
000022DC  E043                    2105              ASR         #eight, D3
000022DE  E243                    2106              ASR         #one, D3
000022E0  C67C 0007               2107              AND         #seven, D3
000022E4                          2108  
000022E4  4EB9 00002EF8           2109              JSR         printEA
000022EA                          2110          
000022EA  43F9 00003CC9           2111              LEA         newLine, A1           ; create new line
000022F0  103C 000E               2112              MOVE.B      #14, D0             ; command for trap call to display message
000022F4  4E4F                    2113              TRAP        #15                 ; trap call
000022F6                          2114          
000022F6  6000 ED48               2115              BRA         LOOP
000022FA                          2116          
000022FA                          2117  opADDW  
000022FA  43F9 00003D3F           2118              LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002300  103C 000E               2119              MOVE.B      #14, D0             ; command for trap call to display message
00002304  4E4F                    2120              TRAP        #15                 ; trap call
00002306                          2121  
00002306  43F9 00003D6A           2122              LEA         dispWord, A1        ; display word
0000230C  103C 000E               2123              MOVE.B      #14, D0             ; command for trap call to display message
00002310  4E4F                    2124              TRAP        #15                 ; trap call
00002312  43F9 00003CCD           2125              LEA         space, A1           ; create spaces
00002318  103C 000E               2126              MOVE.B      #14, D0             ; command for trap call to display message
0000231C  4E4F                    2127              TRAP        #15                 ; trap call
0000231E                          2128          
0000231E  4242                    2129              CLR         D2
00002320  4243                    2130              CLR         D3
00002322  1401                    2131              MOVE.B      D1, D2
00002324  E642                    2132              ASR         #three, D2
00002326  C47C 0007               2133              AND         #seven, D2
0000232A  1601                    2134              MOVE.B      D1, D3
0000232C  C67C 0007               2135              AND         #seven, D3
00002330                          2136          
00002330  4EB9 00002EF8           2137              JSR         printEA
00002336                          2138          
00002336  43F9 00003CD4           2139              LEA         comma, A1           ; create comma
0000233C  103C 000E               2140              MOVE.B      #14, D0             ; command for trap call to display message
00002340  4E4F                    2141              TRAP        #15                 ; trap call
00002342                          2142  
00002342  4242                    2143              CLR         D2
00002344  4243                    2144              CLR         D3
00002346  3601                    2145              MOVE.W      D1, D3
00002348  E043                    2146              ASR         #eight, D3
0000234A  E243                    2147              ASR         #one, D3
0000234C  C67C 0007               2148              AND         #seven, D3
00002350                          2149  
00002350  4EB9 00002EF8           2150              JSR         printEA
00002356                          2151          
00002356  43F9 00003CC9           2152              LEA         newLine, A1           ; create new line
0000235C  103C 000E               2153              MOVE.B      #14, D0             ; command for trap call to display message
00002360  4E4F                    2154              TRAP        #15                 ; trap call
00002362                          2155          
00002362  6000 ECDC               2156              BRA         LOOP
00002366                          2157          
00002366                          2158  opADDL  
00002366  43F9 00003D3F           2159              LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
0000236C  103C 000E               2160              MOVE.B      #14, D0             ; command for trap call to display message
00002370  4E4F                    2161              TRAP        #15                 ; trap call
00002372                          2162          
00002372  43F9 00003D6D           2163              LEA         dispLong, A1        ; display long
00002378  103C 000E               2164              MOVE.B      #14, D0             ; command for trap call to display message
0000237C  4E4F                    2165              TRAP        #15                 ; trap call
0000237E  43F9 00003CCD           2166              LEA         space, A1           ; create spaces
00002384  103C 000E               2167              MOVE.B      #14, D0             ; command for trap call to display message
00002388  4E4F                    2168              TRAP        #15                 ; trap call
0000238A                          2169          
0000238A  4242                    2170              CLR         D2
0000238C  4243                    2171              CLR         D3
0000238E  1401                    2172              MOVE.B      D1, D2
00002390  E642                    2173              ASR         #three, D2
00002392  C47C 0007               2174              AND         #seven, D2
00002396  1601                    2175              MOVE.B      D1, D3
00002398  C67C 0007               2176              AND         #seven, D3
0000239C                          2177          
0000239C  4246                    2178              CLR         D6
0000239E  1C3C 0001               2179              MOVE.B      #1, D6
000023A2                          2180          
000023A2  4EB9 00002EF8           2181              JSR         printEA
000023A8  4246                    2182              CLR         D6
000023AA                          2183          
000023AA  43F9 00003CD4           2184              LEA         comma, A1           ; create comma
000023B0  103C 000E               2185              MOVE.B      #14, D0             ; command for trap call to display message
000023B4  4E4F                    2186              TRAP        #15                 ; trap call
000023B6                          2187  
000023B6  4242                    2188              CLR         D2
000023B8  4243                    2189              CLR         D3
000023BA  3601                    2190              MOVE.W      D1, D3
000023BC  E043                    2191              ASR         #eight, D3
000023BE  E243                    2192              ASR         #one, D3
000023C0  C67C 0007               2193              AND         #seven, D3
000023C4                          2194  
000023C4  4EB9 00002EF8           2195              JSR         printEA
000023CA                          2196          
000023CA  43F9 00003CC9           2197              LEA         newLine, A1           ; create new line
000023D0  103C 000E               2198              MOVE.B      #14, D0             ; command for trap call to display message
000023D4  4E4F                    2199              TRAP        #15                 ; trap call
000023D6                          2200          
000023D6  6000 EC68               2201              BRA         LOOP
000023DA                          2202  
000023DA                          2203  opADDAW 
000023DA  43F9 00003D43           2204              LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
000023E0  103C 000E               2205              MOVE.B      #14, D0             ; command for trap call to display message
000023E4  4E4F                    2206              TRAP        #15                 ; trap call
000023E6                          2207          
000023E6  43F9 00003D6A           2208              LEA         dispWord, A1        ; display word
000023EC  103C 000E               2209              MOVE.B      #14, D0             ; command for trap call to display message
000023F0  4E4F                    2210              TRAP        #15                 ; trap call
000023F2  43F9 00003CCD           2211              LEA         space, A1           ; create spaces
000023F8  103C 000E               2212              MOVE.B      #14, D0             ; command for trap call to display message
000023FC  4E4F                    2213              TRAP        #15                 ; trap call
000023FE                          2214          
000023FE  4242                    2215              CLR         D2
00002400  4243                    2216              CLR         D3
00002402  1401                    2217              MOVE.B      D1, D2
00002404  E642                    2218              ASR         #three, D2
00002406  C47C 0007               2219              AND         #seven, D2
0000240A  1601                    2220              MOVE.B      D1, D3
0000240C  C67C 0007               2221              AND         #seven, D3
00002410                          2222          
00002410  4EB9 00002EF8           2223              JSR         printEA
00002416                          2224          
00002416  43F9 00003CD4           2225              LEA         comma, A1           ; create comma
0000241C  103C 000E               2226              MOVE.B      #14, D0             ; command for trap call to display message
00002420  4E4F                    2227              TRAP        #15                 ; trap call
00002422                          2228  
00002422  4242                    2229              CLR         D2
00002424  4243                    2230              CLR         D3
00002426  143C 0001               2231              MOVE.B      #one, D2
0000242A  3601                    2232              MOVE.W      D1, D3
0000242C  E043                    2233              ASR         #eight, D3
0000242E  E243                    2234              ASR         #one, D3
00002430  C67C 0007               2235              AND         #seven, D3
00002434                          2236      
00002434  4EB9 00002EF8           2237              JSR         printEA
0000243A                          2238          
0000243A  43F9 00003CC9           2239              LEA         newLine, A1           ; create new line
00002440  103C 000E               2240              MOVE.B      #14, D0             ; command for trap call to display message
00002444  4E4F                    2241              TRAP        #15                 ; trap call
00002446                          2242          
00002446  6000 EBF8               2243              BRA         LOOP
0000244A                          2244  
0000244A                          2245  opADDAL 
0000244A  43F9 00003D43           2246              LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002450  103C 000E               2247              MOVE.B      #14, D0             ; command for trap call to display message
00002454  4E4F                    2248              TRAP        #15                 ; trap call
00002456                          2249  
00002456  43F9 00003D6D           2250              LEA         dispLong, A1        ; display long
0000245C  103C 000E               2251              MOVE.B      #14, D0             ; command for trap call to display message
00002460  4E4F                    2252              TRAP        #15                 ; trap call
00002462  43F9 00003CCD           2253              LEA         space, A1           ; create spaces
00002468  103C 000E               2254              MOVE.B      #14, D0             ; command for trap call to display message
0000246C  4E4F                    2255              TRAP        #15                 ; trap call
0000246E                          2256          
0000246E  4242                    2257              CLR         D2
00002470  4243                    2258              CLR         D3
00002472  1401                    2259              MOVE.B      D1, D2
00002474  E642                    2260              ASR         #three, D2
00002476  C47C 0007               2261              AND         #seven, D2
0000247A  1601                    2262              MOVE.B      D1, D3
0000247C  C67C 0007               2263              AND         #seven, D3
00002480                          2264          
00002480  4EB9 00002EF8           2265              JSR         printEA
00002486                          2266          
00002486  43F9 00003CD4           2267              LEA         comma, A1           ; create comma
0000248C  103C 000E               2268              MOVE.B      #14, D0             ; command for trap call to display message
00002490  4E4F                    2269              TRAP        #15                 ; trap call
00002492                          2270  
00002492  4242                    2271              CLR         D2
00002494  4243                    2272              CLR         D3
00002496  143C 0001               2273              MOVE.B      #one, D2
0000249A  3601                    2274              MOVE.W      D1, D3
0000249C  E043                    2275              ASR         #eight, D3
0000249E  E243                    2276              ASR         #one, D3
000024A0  C67C 0007               2277              AND         #seven, D3
000024A4                          2278  
000024A4  4EB9 00002EF8           2279              JSR         printEA
000024AA                          2280          
000024AA  43F9 00003CC9           2281              LEA         newLine, A1           ; create new line
000024B0  103C 000E               2282              MOVE.B      #14, D0             ; command for trap call to display message
000024B4  4E4F                    2283              TRAP        #15                 ; trap call
000024B6                          2284          
000024B6  6000 EB88               2285              BRA         LOOP
000024BA                          2286          
000024BA                          2287  ***********************************************************************************************************
000024BA                          2288  *
000024BA                          2289  *                       Shifting OPCODES
000024BA                          2290  *
000024BA                          2291  ***********************************************************************************************************
000024BA                          2292  
000024BA                          2293  opASL       
000024BA  43F9 00003D54           2294              LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024C0  103C 000E               2295              MOVE.B      #14, D0             ; command for trap call to display message
000024C4  4E4F                    2296              TRAP        #15                 ; trap call
000024C6                          2297          
000024C6  43F9 00003D6A           2298              LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024CC  103C 000E               2299              MOVE.B      #14, D0             ; command for trap call to display message
000024D0  4E4F                    2300              TRAP        #15                 ; trap call
000024D2                          2301          
000024D2  43F9 00003CCD           2302              LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024D8  103C 000E               2303              MOVE.B      #14, D0             ; command for trap call to display message
000024DC  4E4F                    2304              TRAP        #15                 ; trap call
000024DE                          2305          
000024DE  4242                    2306              CLR         D2
000024E0  4243                    2307              CLR         D3
000024E2  1401                    2308              MOVE.B      D1,D2
000024E4  1601                    2309              MOVE.B      D1,D3
000024E6                          2310          
000024E6  E602                    2311              ASR.B       #three, D2
000024E8  C47C 0007               2312              AND         #seven, D2
000024EC  C67C 0007               2313              AND         #seven, D3        
000024F0                          2314          
000024F0  4EB9 00002EF8           2315              JSR         printEA
000024F6                          2316          
000024F6  43F9 00003CC9           2317              LEA         newLine, A1           ; Display space
000024FC  103C 000E               2318              MOVE.B      #14, D0             ; command for trap call to display message
00002500  4E4F                    2319              TRAP        #15                 ; trap call
00002502                          2320          
00002502  6000 EB3C               2321              BRA         LOOP
00002506                          2322  
00002506                          2323  opASR   
00002506  43F9 00003D50           2324              LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000250C  103C 000E               2325              MOVE.B      #14, D0             ; command for trap call to display message
00002510  4E4F                    2326              TRAP        #15                 ; trap call
00002512                          2327          
00002512  43F9 00003D6A           2328              LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002518  103C 000E               2329              MOVE.B      #14, D0             ; command for trap call to display message
0000251C  4E4F                    2330              TRAP        #15                 ; trap call
0000251E                          2331          
0000251E  43F9 00003CCD           2332              LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002524  103C 000E               2333              MOVE.B      #14, D0             ; command for trap call to display message
00002528  4E4F                    2334              TRAP        #15                 ; trap call
0000252A                          2335              
0000252A  4242                    2336              CLR         D2
0000252C  4243                    2337              CLR         D3
0000252E  1401                    2338              MOVE.B      D1,D2
00002530  1601                    2339              MOVE.B      D1,D3
00002532                          2340          
00002532  E602                    2341              ASR.B       #three, D2
00002534  C47C 0007               2342              AND         #seven, D2
00002538  C67C 0007               2343              AND         #seven, D3        
0000253C                          2344          
0000253C  4EB9 00002EF8           2345              JSR         printEA
00002542                          2346              
00002542  43F9 00003CC9           2347              LEA         newLine, A1           ; Display space
00002548  103C 000E               2348              MOVE.B      #14, D0             ; command for trap call to display message
0000254C  4E4F                    2349              TRAP        #15                 ; trap call
0000254E                          2350          
0000254E  6000 EAF0               2351              BRA         LOOP
00002552                          2352  
00002552                          2353  opLSL       
00002552  43F9 00003D4C           2354              LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00002558  103C 000E               2355              MOVE.B      #14, D0             ; command for trap call to display message
0000255C  4E4F                    2356              TRAP        #15                 ; trap call
0000255E                          2357              
0000255E  43F9 00003D6A           2358              LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002564  103C 000E               2359              MOVE.B      #14, D0             ; command for trap call to display message
00002568  4E4F                    2360              TRAP        #15                 ; trap call
0000256A                          2361              
0000256A  43F9 00003CCD           2362              LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002570  103C 000E               2363              MOVE.B      #14, D0             ; command for trap call to display message
00002574  4E4F                    2364              TRAP        #15                 ; trap call
00002576                          2365              
00002576  4242                    2366              CLR         D2
00002578  4243                    2367              CLR         D3
0000257A  1401                    2368              MOVE.B      D1,D2
0000257C  1601                    2369              MOVE.B      D1,D3
0000257E                          2370          
0000257E  E602                    2371              ASR.B       #three, D2
00002580  C47C 0007               2372              AND         #seven, D2
00002584  C67C 0007               2373              AND         #seven, D3        
00002588                          2374              
00002588  4EB9 00002EF8           2375              JSR         printEA
0000258E                          2376          
0000258E  43F9 00003CC9           2377              LEA         newLine, A1           ; Display space
00002594  103C 000E               2378              MOVE.B      #14, D0             ; command for trap call to display message
00002598  4E4F                    2379              TRAP        #15                 ; trap call
0000259A                          2380          
0000259A  6000 EAA4               2381              BRA         LOOP
0000259E                          2382  
0000259E                          2383  opLSR   
0000259E  43F9 00003D48           2384              LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
000025A4  103C 000E               2385              MOVE.B      #14, D0             ; command for trap call to display message
000025A8  4E4F                    2386              TRAP        #15                 ; trap call
000025AA                          2387          
000025AA  43F9 00003D6A           2388              LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000025B0  103C 000E               2389              MOVE.B      #14, D0             ; command for trap call to display message
000025B4  4E4F                    2390              TRAP        #15                 ; trap call
000025B6                          2391          
000025B6  43F9 00003CCD           2392              LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
000025BC  103C 000E               2393              MOVE.B      #14, D0             ; command for trap call to display message
000025C0  4E4F                    2394              TRAP        #15                 ; trap call
000025C2                          2395          
000025C2  4242                    2396              CLR         D2
000025C4  4243                    2397              CLR         D3
000025C6  1401                    2398              MOVE.B      D1,D2
000025C8  1601                    2399              MOVE.B      D1,D3
000025CA                          2400          
000025CA  E602                    2401              ASR.B       #three, D2
000025CC  C47C 0007               2402              AND         #seven, D2
000025D0  C67C 0007               2403              AND         #seven, D3        
000025D4                          2404          
000025D4  4EB9 00002EF8           2405              JSR         printEA
000025DA                          2406          
000025DA  43F9 00003CC9           2407              LEA         newLine, A1           ; Display space
000025E0  103C 000E               2408              MOVE.B      #14, D0             ; command for trap call to display message
000025E4  4E4F                    2409              TRAP        #15                 ; trap call
000025E6                          2410          
000025E6  6000 EA58               2411              BRA         LOOP
000025EA                          2412  
000025EA                          2413  opROL   
000025EA  43F9 00003D5C           2414              LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
000025F0  103C 000E               2415              MOVE.B      #14, D0             ; command for trap call to display message
000025F4  4E4F                    2416              TRAP        #15                 ; trap call
000025F6                          2417          
000025F6  43F9 00003D6A           2418              LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000025FC  103C 000E               2419              MOVE.B      #14, D0             ; command for trap call to display message
00002600  4E4F                    2420              TRAP        #15                 ; trap call
00002602                          2421          
00002602  43F9 00003CCD           2422              LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002608  103C 000E               2423              MOVE.B      #14, D0             ; command for trap call to display message
0000260C  4E4F                    2424              TRAP        #15                 ; trap call
0000260E                          2425          
0000260E  4242                    2426              CLR         D2
00002610  4243                    2427              CLR         D3
00002612  1401                    2428              MOVE.B      D1,D2
00002614  1601                    2429              MOVE.B      D1,D3
00002616                          2430          
00002616  E602                    2431              ASR.B       #three, D2
00002618  C47C 0007               2432              AND         #seven, D2
0000261C  C67C 0007               2433              AND         #seven, D3        
00002620                          2434          
00002620  4EB9 00002EF8           2435              JSR         printEA
00002626                          2436          
00002626  43F9 00003CC9           2437              LEA         newLine, A1           ; Display space
0000262C  103C 000E               2438              MOVE.B      #14, D0             ; command for trap call to display message
00002630  4E4F                    2439              TRAP        #15                 ; trap call
00002632                          2440          
00002632  6000 EA0C               2441              BRA         LOOP
00002636                          2442  
00002636                          2443  opROR   
00002636  43F9 00003D58           2444              LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
0000263C  103C 000E               2445              MOVE.B      #14, D0             ; command for trap call to display message
00002640  4E4F                    2446              TRAP        #15                 ; trap call
00002642                          2447          
00002642  43F9 00003D6A           2448              LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002648  103C 000E               2449              MOVE.B      #14, D0             ; command for trap call to display message
0000264C  4E4F                    2450              TRAP        #15                 ; trap call
0000264E                          2451          
0000264E  43F9 00003CCD           2452              LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002654  103C 000E               2453              MOVE.B      #14, D0             ; command for trap call to display message
00002658  4E4F                    2454              TRAP        #15                 ; trap call
0000265A                          2455          
0000265A  4242                    2456              CLR         D2
0000265C  4243                    2457              CLR         D3
0000265E  1401                    2458              MOVE.B      D1,D2
00002660  1601                    2459              MOVE.B      D1,D3
00002662                          2460          
00002662  E602                    2461              ASR.B       #three, D2
00002664  C47C 0007               2462              AND         #seven, D2
00002668  C67C 0007               2463              AND         #seven, D3        
0000266C                          2464          
0000266C  4EB9 00002EF8           2465              JSR         printEA
00002672                          2466          
00002672  43F9 00003CC9           2467              LEA         newLine, A1           ; Display space
00002678  103C 000E               2468              MOVE.B      #14, D0             ; command for trap call to display message
0000267C  4E4F                    2469              TRAP        #15                 ; trap call
0000267E                          2470              
0000267E  6000 E9C0               2471              BRA         LOOP
00002682                          2472          
00002682                          2473  memSB       
00002682  4242                    2474              CLR         D2
00002684  1401                    2475              MOVE.B      D1,D2
00002686  E642                    2476              ASR         #three, D2
00002688                          2477              
00002688  C47C 0007               2478              AND         #$07, D2
0000268C                          2479          
0000268C  B43C 0000               2480              CMP.B       #zero, D2
00002690  6700 002E               2481              BEQ         opASBI
00002694  B43C 0004               2482              CMP.B       #four, D2
00002698  6700 0088               2483              BEQ         opASBR
0000269C  B43C 0001               2484              CMP.B       #one, D2
000026A0  6700 00E2               2485              BEQ         opLSBI
000026A4  B43C 0005               2486              CMP.B       #five, D2
000026A8  6700 013C               2487              BEQ         opLSBR
000026AC  B43C 0003               2488              CMP.B       #three, D2
000026B0  6700 0196               2489              BEQ         opROBI
000026B4  B43C 0007               2490              CMP.B       #seven, D2
000026B8  6700 01F0               2491              BEQ         opROBR
000026BC  6000 15A0               2492              BRA         printInvalid
000026C0                          2493          
000026C0                          2494  opASBI  
000026C0  4242                    2495              CLR         D2
000026C2  3401                    2496              MOVE.W      D1, D2
000026C4  E042                    2497              ASR         #eight, D2
000026C6  C47C 0001               2498              AND         #$01, D2
000026CA                          2499      
000026CA  B43C 0000               2500              CMP.B       #zero, D2
000026CE  6700 000E               2501              BEQ         opASRBI
000026D2  B43C 0001               2502              CMP.B       #one, D2
000026D6  6700 0028               2503              BEQ         opASLBI
000026DA  6000 1582               2504              BRA         printInvalid
000026DE                          2505          
000026DE                          2506  opASRBI 
000026DE  43F9 00003D50           2507              LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000026E4  103C 000E               2508              MOVE.B      #14, D0             ; command for trap call to display message
000026E8  4E4F                    2509              TRAP        #15                 ; trap call
000026EA                          2510  
000026EA  43F9 00003D67           2511              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000026F0  103C 000E               2512              MOVE.B      #14, D0             ; command for trap call to display message
000026F4  4E4F                    2513              TRAP        #15                 ; trap call
000026F6                          2514          
000026F6  4EB9 00002E20           2515              JSR         PrntImm
000026FC                          2516          
000026FC  6000 E942               2517              BRA         LOOP
00002700                          2518  
00002700                          2519  opASLBI 
00002700  43F9 00003D54           2520              LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002706  103C 000E               2521              MOVE.B      #14, D0             ; command for trap call to display message
0000270A  4E4F                    2522              TRAP        #15                 ; trap call
0000270C                          2523  
0000270C  43F9 00003D67           2524              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002712  103C 000E               2525              MOVE.B      #14, D0             ; command for trap call to display message
00002716  4E4F                    2526              TRAP        #15                 ; trap call
00002718                          2527          
00002718  4EB9 00002E20           2528              JSR         PrntImm
0000271E                          2529          
0000271E  6000 E920               2530              BRA         LOOP
00002722                          2531  
00002722                          2532  opASBR  
00002722  4242                    2533              CLR         D2
00002724  3401                    2534              MOVE.W      D1, D2
00002726  E042                    2535              ASR         #eight, D2
00002728  C47C 0001               2536              AND         #$01, D2
0000272C                          2537      
0000272C  B43C 0000               2538              CMP.B       #zero, D2
00002730  6700 000E               2539              BEQ         opASRBR
00002734  B43C 0001               2540              CMP.B       #one, D2
00002738  6700 0028               2541              BEQ         opASLBR
0000273C  6000 1520               2542              BRA         printInvalid 
00002740                          2543          
00002740                          2544  opASRBR 
00002740  43F9 00003D50           2545              LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002746  103C 000E               2546              MOVE.B      #14, D0             ; command for trap call to display message
0000274A  4E4F                    2547              TRAP        #15                 ; trap call
0000274C                          2548  
0000274C  43F9 00003D67           2549              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002752  103C 000E               2550              MOVE.B      #14, D0             ; command for trap call to display message
00002756  4E4F                    2551              TRAP        #15                 ; trap call
00002758                          2552          
00002758  4EB9 00002E7C           2553              JSR         PrntReg
0000275E                          2554          
0000275E  6000 E8E0               2555              BRA         LOOP
00002762                          2556  
00002762                          2557  opASLBR 
00002762  43F9 00003D54           2558              LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002768  103C 000E               2559              MOVE.B      #14, D0             ; command for trap call to display message
0000276C  4E4F                    2560              TRAP        #15                 ; trap call
0000276E                          2561  
0000276E  43F9 00003D67           2562              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002774  103C 000E               2563              MOVE.B      #14, D0             ; command for trap call to display message
00002778  4E4F                    2564              TRAP        #15                 ; trap call
0000277A                          2565          
0000277A  4EB9 00002E7C           2566              JSR         PrntReg
00002780                          2567          
00002780  6000 E8BE               2568              BRA         LOOP
00002784                          2569  
00002784                          2570  opLSBI      
00002784  4242                    2571              CLR         D2
00002786  3401                    2572              MOVE.W      D1, D2
00002788  E042                    2573              ASR         #eight, D2
0000278A  C47C 0001               2574              AND         #$01, D2
0000278E                          2575      
0000278E  B43C 0000               2576              CMP.B       #zero, D2
00002792  6700 000E               2577              BEQ         opLSRBI
00002796  B43C 0001               2578              CMP.B       #one, D2
0000279A  6700 0028               2579              BEQ         opLSLBI
0000279E  6000 14BE               2580              BRA         printInvalid 
000027A2                          2581          
000027A2                          2582  opLSRBI 
000027A2  43F9 00003D48           2583              LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027A8  103C 000E               2584              MOVE.B      #14, D0             ; command for trap call to display message
000027AC  4E4F                    2585              TRAP        #15                 ; trap call
000027AE                          2586  
000027AE  43F9 00003D67           2587              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027B4  103C 000E               2588              MOVE.B      #14, D0             ; command for trap call to display message
000027B8  4E4F                    2589              TRAP        #15                 ; trap call
000027BA                          2590          
000027BA  4EB9 00002E20           2591              JSR         PrntImm
000027C0                          2592          
000027C0  6000 E87E               2593              BRA         LOOP
000027C4                          2594              
000027C4                          2595  opLSLBI     
000027C4  43F9 00003D4C           2596              LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027CA  103C 000E               2597              MOVE.B      #14, D0             ; command for trap call to display message
000027CE  4E4F                    2598              TRAP        #15                 ; trap call
000027D0                          2599  
000027D0  43F9 00003D67           2600              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027D6  103C 000E               2601              MOVE.B      #14, D0             ; command for trap call to display message
000027DA  4E4F                    2602              TRAP        #15                 ; trap call
000027DC                          2603          
000027DC  4EB9 00002E20           2604              JSR         PrntImm
000027E2                          2605          
000027E2  6000 E85C               2606              BRA         LOOP
000027E6                          2607  
000027E6                          2608  opLSBR  
000027E6  4242                    2609              CLR         D2
000027E8  3401                    2610              MOVE.W      D1, D2
000027EA  E042                    2611              ASR         #eight, D2
000027EC  C47C 0001               2612              AND         #$01, D2
000027F0                          2613      
000027F0  B43C 0000               2614              CMP.B       #zero, D2
000027F4  6700 000E               2615              BEQ         opLSRBR
000027F8  B43C 0001               2616              CMP.B       #one, D2
000027FC  6700 0028               2617              BEQ         opLSLBR
00002800  6000 145C               2618              BRA         printInvalid 
00002804                          2619          
00002804                          2620  opLSRBR 
00002804  43F9 00003D48           2621              LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000280A  103C 000E               2622              MOVE.B      #14, D0             ; command for trap call to display message
0000280E  4E4F                    2623              TRAP        #15                 ; trap call
00002810                          2624  
00002810  43F9 00003D67           2625              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002816  103C 000E               2626              MOVE.B      #14, D0             ; command for trap call to display message
0000281A  4E4F                    2627              TRAP        #15                 ; trap call
0000281C                          2628          
0000281C  4EB9 00002E7C           2629              JSR         PrntReg
00002822                          2630          
00002822  6000 E81C               2631              BRA         LOOP
00002826                          2632          
00002826                          2633  opLSLBR     
00002826  43F9 00003D4C           2634              LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000282C  103C 000E               2635              MOVE.B      #14, D0             ; command for trap call to display message
00002830  4E4F                    2636              TRAP        #15                 ; trap call
00002832                          2637  
00002832  43F9 00003D67           2638              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002838  103C 000E               2639              MOVE.B      #14, D0             ; command for trap call to display message
0000283C  4E4F                    2640              TRAP        #15                 ; trap call
0000283E                          2641          
0000283E  4EB9 00002E7C           2642              JSR         PrntReg
00002844                          2643          
00002844  6000 E7FA               2644              BRA         LOOP
00002848                          2645              
00002848                          2646  opROBI  
00002848  4242                    2647              CLR         D2
0000284A  3401                    2648              MOVE.W      D1, D2
0000284C  E042                    2649              ASR         #eight, D2
0000284E  C47C 0001               2650              AND         #$01, D2
00002852                          2651      
00002852  B43C 0000               2652              CMP.B       #zero, D2
00002856  6700 000E               2653              BEQ         opRORBI
0000285A  B43C 0001               2654              CMP.B       #one, D2
0000285E  6700 0028               2655              BEQ         opROLBI
00002862  6000 13FA               2656              BRA         printInvalid 
00002866                          2657          
00002866                          2658  opRORBI 
00002866  43F9 00003D58           2659              LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000286C  103C 000E               2660              MOVE.B      #14, D0             ; command for trap call to display message
00002870  4E4F                    2661              TRAP        #15                 ; trap call
00002872                          2662  
00002872  43F9 00003D67           2663              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002878  103C 000E               2664              MOVE.B      #14, D0             ; command for trap call to display message
0000287C  4E4F                    2665              TRAP        #15                 ; trap call
0000287E                          2666          
0000287E  4EB9 00002E20           2667              JSR         PrntImm
00002884                          2668          
00002884  6000 E7BA               2669              BRA         LOOP
00002888                          2670  
00002888                          2671  opROLBI 
00002888  43F9 00003D5C           2672              LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000288E  103C 000E               2673              MOVE.B      #14, D0             ; command for trap call to display message
00002892  4E4F                    2674              TRAP        #15                 ; trap call
00002894                          2675  
00002894  43F9 00003D67           2676              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000289A  103C 000E               2677              MOVE.B      #14, D0             ; command for trap call to display message
0000289E  4E4F                    2678              TRAP        #15                 ; trap call
000028A0                          2679          
000028A0  4EB9 00002E20           2680              JSR         PrntImm
000028A6                          2681          
000028A6  6000 E798               2682              BRA         LOOP
000028AA                          2683  
000028AA                          2684  opROBR  
000028AA  4242                    2685              CLR         D2
000028AC  3401                    2686              MOVE.W      D1, D2
000028AE  E042                    2687              ASR         #eight, D2
000028B0  C47C 0001               2688              AND         #$01, D2
000028B4                          2689      
000028B4  B43C 0000               2690              CMP.B       #zero, D2
000028B8  6700 000E               2691              BEQ         opRORBR
000028BC  B43C 0001               2692              CMP.B       #one, D2
000028C0  6700 0028               2693              BEQ         opROLBR
000028C4  6000 1398               2694              BRA         printInvalid     
000028C8                          2695          
000028C8                          2696  opRORBR 
000028C8  43F9 00003D58           2697              LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028CE  103C 000E               2698          MOVE.B      #14, D0             ; command for trap call to display message
000028D2  4E4F                    2699          TRAP        #15                 ; trap call
000028D4                          2700  
000028D4  43F9 00003D67           2701          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028DA  103C 000E               2702          MOVE.B      #14, D0             ; command for trap call to display message
000028DE  4E4F                    2703          TRAP        #15                 ; trap call
000028E0                          2704          
000028E0  4EB9 00002E7C           2705          JSR         PrntReg
000028E6                          2706          
000028E6  6000 E758               2707          BRA         LOOP
000028EA                          2708  
000028EA  43F9 00003D5C           2709  opROLBR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028F0  103C 000E               2710          MOVE.B      #14, D0             ; command for trap call to display message
000028F4  4E4F                    2711          TRAP        #15                 ; trap call
000028F6                          2712  
000028F6  43F9 00003D67           2713          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028FC  103C 000E               2714          MOVE.B      #14, D0             ; command for trap call to display message
00002900  4E4F                    2715          TRAP        #15                 ; trap call
00002902                          2716          
00002902  4EB9 00002E7C           2717          JSR         PrntReg
00002908                          2718          
00002908  6000 E736               2719          BRA         LOOP       
0000290C                          2720  
0000290C  4242                    2721  memSW   CLR         D2
0000290E  1401                    2722          MOVE.B      D1,D2
00002910  E642                    2723          ASR         #three, D2
00002912                          2724          
00002912  C47C 0007               2725          AND         #$07, D2
00002916                          2726          
00002916  B43C 0000               2727          CMP.B       #zero, D2
0000291A  6700 002E               2728          BEQ         opASWI
0000291E  B43C 0004               2729          CMP.B       #four, D2
00002922  6700 0088               2730          BEQ         opASWR
00002926  B43C 0001               2731          CMP.B       #one, D2
0000292A  6700 00E2               2732          BEQ         opLSWI
0000292E  B43C 0005               2733          CMP.B       #five, D2
00002932  6700 013C               2734          BEQ         opLSWR
00002936  B43C 0003               2735          CMP.B       #three, D2
0000293A  6700 0196               2736          BEQ         opROWI
0000293E  B43C 0007               2737          CMP.B       #seven, D2
00002942  6700 01F0               2738          BEQ         opROWR
00002946  6000 1316               2739          BRA         printInvalid
0000294A                          2740          
0000294A  4242                    2741  opASWI  CLR         D2
0000294C  3401                    2742          MOVE.W      D1, D2
0000294E  E042                    2743          ASR         #eight, D2
00002950  C47C 0001               2744          AND         #$01, D2
00002954                          2745      
00002954  B43C 0000               2746          CMP.B       #zero, D2
00002958  6700 000E               2747          BEQ         opASRWI
0000295C  B43C 0001               2748          CMP.B       #one, D2
00002960  6700 0028               2749          BEQ         opASLWI
00002964  6000 12F8               2750          BRA         printInvalid
00002968                          2751          
00002968  43F9 00003D50           2752  opASRWI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000296E  103C 000E               2753          MOVE.B      #14, D0             ; command for trap call to display message
00002972  4E4F                    2754          TRAP        #15                 ; trap call
00002974                          2755  
00002974  43F9 00003D6A           2756          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000297A  103C 000E               2757          MOVE.B      #14, D0             ; command for trap call to display message
0000297E  4E4F                    2758          TRAP        #15                 ; trap call
00002980                          2759          
00002980  4EB9 00002E20           2760          JSR         PrntImm
00002986                          2761          
00002986  6000 E6B8               2762          BRA         LOOP
0000298A                          2763  
0000298A  43F9 00003D54           2764  opASLWI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002990  103C 000E               2765          MOVE.B      #14, D0             ; command for trap call to display message
00002994  4E4F                    2766          TRAP        #15                 ; trap call
00002996                          2767  
00002996  43F9 00003D6A           2768          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000299C  103C 000E               2769          MOVE.B      #14, D0             ; command for trap call to display message
000029A0  4E4F                    2770          TRAP        #15                 ; trap call
000029A2                          2771          
000029A2  4EB9 00002E20           2772          JSR         PrntImm
000029A8                          2773          
000029A8  6000 E696               2774          BRA         LOOP
000029AC                          2775  
000029AC  4242                    2776  opASWR  CLR         D2
000029AE  3401                    2777          MOVE.W      D1, D2
000029B0  E042                    2778          ASR         #eight, D2
000029B2  C47C 0001               2779          AND         #$01, D2
000029B6                          2780      
000029B6  B43C 0000               2781          CMP.B       #zero, D2
000029BA  6700 000E               2782          BEQ         opASRWR
000029BE  B43C 0001               2783          CMP.B       #one, D2
000029C2  6700 0028               2784          BEQ         opASLWR
000029C6  6000 1296               2785          BRA         printInvalid 
000029CA                          2786          
000029CA  43F9 00003D50           2787  opASRWR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000029D0  103C 000E               2788          MOVE.B      #14, D0             ; command for trap call to display message
000029D4  4E4F                    2789          TRAP        #15                 ; trap call
000029D6                          2790  
000029D6  43F9 00003D6A           2791          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000029DC  103C 000E               2792          MOVE.B      #14, D0             ; command for trap call to display message
000029E0  4E4F                    2793          TRAP        #15                 ; trap call
000029E2                          2794          
000029E2  4EB9 00002E7C           2795          JSR         PrntReg
000029E8                          2796          
000029E8  6000 E656               2797          BRA         LOOP
000029EC                          2798  
000029EC  43F9 00003D54           2799  opASLWR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000029F2  103C 000E               2800          MOVE.B      #14, D0             ; command for trap call to display message
000029F6  4E4F                    2801          TRAP        #15                 ; trap call
000029F8                          2802  
000029F8  43F9 00003D6A           2803          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000029FE  103C 000E               2804          MOVE.B      #14, D0             ; command for trap call to display message
00002A02  4E4F                    2805          TRAP        #15                 ; trap call
00002A04                          2806          
00002A04  4EB9 00002E7C           2807          JSR         PrntReg
00002A0A                          2808          
00002A0A  6000 E634               2809          BRA         LOOP
00002A0E                          2810  
00002A0E  4242                    2811  opLSWI  CLR         D2
00002A10  3401                    2812          MOVE.W      D1, D2
00002A12  E042                    2813          ASR         #eight, D2
00002A14  C47C 0001               2814          AND         #$01, D2
00002A18                          2815      
00002A18  B43C 0000               2816          CMP.B       #zero, D2
00002A1C  6700 000E               2817          BEQ         opLSRWI
00002A20  B43C 0001               2818          CMP.B       #one, D2
00002A24  6700 0028               2819          BEQ         opLSLWI
00002A28  6000 1234               2820          BRA         printInvalid 
00002A2C                          2821          
00002A2C  43F9 00003D48           2822  opLSRWI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A32  103C 000E               2823          MOVE.B      #14, D0             ; command for trap call to display message
00002A36  4E4F                    2824          TRAP        #15                 ; trap call
00002A38                          2825  
00002A38  43F9 00003D6A           2826          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A3E  103C 000E               2827          MOVE.B      #14, D0             ; command for trap call to display message
00002A42  4E4F                    2828          TRAP        #15                 ; trap call
00002A44                          2829          
00002A44  4EB9 00002E20           2830          JSR         PrntImm
00002A4A                          2831          
00002A4A  6000 E5F4               2832          BRA         LOOP
00002A4E                          2833  
00002A4E                          2834  
00002A4E  43F9 00003D4C           2835  opLSLWI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A54  103C 000E               2836          MOVE.B      #14, D0             ; command for trap call to display message
00002A58  4E4F                    2837          TRAP        #15                 ; trap call
00002A5A                          2838  
00002A5A  43F9 00003D6A           2839          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A60  103C 000E               2840          MOVE.B      #14, D0             ; command for trap call to display message
00002A64  4E4F                    2841          TRAP        #15                 ; trap call
00002A66                          2842          
00002A66  4EB9 00002E20           2843          JSR         PrntImm
00002A6C                          2844          
00002A6C  6000 E5D2               2845          BRA         LOOP
00002A70                          2846  
00002A70                          2847  
00002A70  4242                    2848  opLSWR  CLR         D2
00002A72  3401                    2849          MOVE.W      D1, D2
00002A74  E042                    2850          ASR         #eight, D2
00002A76  C47C 0001               2851          AND         #$01, D2
00002A7A                          2852      
00002A7A  B43C 0000               2853          CMP.B       #zero, D2
00002A7E  6700 000E               2854          BEQ         opLSRWR
00002A82  B43C 0001               2855          CMP.B       #one, D2
00002A86  6700 0028               2856          BEQ         opLSLWR
00002A8A  6000 11D2               2857          BRA         printInvalid 
00002A8E                          2858          
00002A8E  43F9 00003D48           2859  opLSRWR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002A94  103C 000E               2860          MOVE.B      #14, D0             ; command for trap call to display message
00002A98  4E4F                    2861          TRAP        #15                 ; trap call
00002A9A                          2862  
00002A9A  43F9 00003D6A           2863          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002AA0  103C 000E               2864          MOVE.B      #14, D0             ; command for trap call to display message
00002AA4  4E4F                    2865          TRAP        #15                 ; trap call
00002AA6                          2866          
00002AA6  4EB9 00002E7C           2867          JSR         PrntReg
00002AAC                          2868          
00002AAC  6000 E592               2869          BRA         LOOP
00002AB0                          2870          
00002AB0  43F9 00003D4C           2871  opLSLWR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002AB6  103C 000E               2872          MOVE.B      #14, D0             ; command for trap call to display message
00002ABA  4E4F                    2873          TRAP        #15                 ; trap call
00002ABC                          2874  
00002ABC  43F9 00003D6A           2875          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002AC2  103C 000E               2876          MOVE.B      #14, D0             ; command for trap call to display message
00002AC6  4E4F                    2877          TRAP        #15                 ; trap call
00002AC8                          2878          
00002AC8  4EB9 00002E7C           2879          JSR         PrntReg
00002ACE                          2880          
00002ACE  6000 E570               2881          BRA         LOOP
00002AD2                          2882  
00002AD2                          2883  
00002AD2                          2884  
00002AD2  4242                    2885  opROWI  CLR         D2
00002AD4  3401                    2886          MOVE.W      D1, D2
00002AD6  E042                    2887          ASR         #eight, D2
00002AD8  C47C 0001               2888          AND         #$01, D2
00002ADC                          2889      
00002ADC  B43C 0000               2890          CMP.B       #zero, D2
00002AE0  6700 000E               2891          BEQ         opRORWI
00002AE4  B43C 0001               2892          CMP.B       #one, D2
00002AE8  6700 0028               2893          BEQ         opROLWI
00002AEC  6000 1170               2894          BRA         printInvalid 
00002AF0                          2895          
00002AF0  43F9 00003D58           2896  opRORWI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002AF6  103C 000E               2897          MOVE.B      #14, D0             ; command for trap call to display message
00002AFA  4E4F                    2898          TRAP        #15                 ; trap call
00002AFC                          2899  
00002AFC  43F9 00003D6A           2900          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B02  103C 000E               2901          MOVE.B      #14, D0             ; command for trap call to display message
00002B06  4E4F                    2902          TRAP        #15                 ; trap call
00002B08                          2903          
00002B08  4EB9 00002E20           2904          JSR         PrntImm
00002B0E                          2905          
00002B0E  6000 E530               2906          BRA         LOOP
00002B12                          2907  
00002B12  43F9 00003D5C           2908  opROLWI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B18  103C 000E               2909          MOVE.B      #14, D0             ; command for trap call to display message
00002B1C  4E4F                    2910          TRAP        #15                 ; trap call
00002B1E                          2911  
00002B1E  43F9 00003D6A           2912          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B24  103C 000E               2913          MOVE.B      #14, D0             ; command for trap call to display message
00002B28  4E4F                    2914          TRAP        #15                 ; trap call
00002B2A                          2915          
00002B2A  4EB9 00002E20           2916          JSR         PrntImm
00002B30                          2917          
00002B30  6000 E50E               2918          BRA         LOOP
00002B34                          2919  
00002B34  4242                    2920  opROWR  CLR         D2
00002B36  3401                    2921          MOVE.W      D1, D2
00002B38  E042                    2922          ASR         #eight, D2
00002B3A  C47C 0001               2923          AND         #$01, D2
00002B3E                          2924      
00002B3E  B43C 0000               2925          CMP.B       #zero, D2
00002B42  6700 000E               2926          BEQ         opRORWR
00002B46  B43C 0001               2927          CMP.B       #one, D2
00002B4A  6700 0028               2928          BEQ         opROLWR
00002B4E  6000 110E               2929          BRA         printInvalid     
00002B52                          2930          
00002B52  43F9 00003D58           2931  opRORWR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B58  103C 000E               2932          MOVE.B      #14, D0             ; command for trap call to display message
00002B5C  4E4F                    2933          TRAP        #15                 ; trap call
00002B5E                          2934  
00002B5E  43F9 00003D6A           2935          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B64  103C 000E               2936          MOVE.B      #14, D0             ; command for trap call to display message
00002B68  4E4F                    2937          TRAP        #15                 ; trap call
00002B6A                          2938          
00002B6A  4EB9 00002E7C           2939          JSR         PrntReg
00002B70                          2940          
00002B70  6000 E4CE               2941          BRA         LOOP
00002B74                          2942  
00002B74  43F9 00003D5C           2943  opROLWR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B7A  103C 000E               2944          MOVE.B      #14, D0             ; command for trap call to display message
00002B7E  4E4F                    2945          TRAP        #15                 ; trap call
00002B80                          2946  
00002B80  43F9 00003D6A           2947          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B86  103C 000E               2948          MOVE.B      #14, D0             ; command for trap call to display message
00002B8A  4E4F                    2949          TRAP        #15                 ; trap call
00002B8C                          2950          
00002B8C  4EB9 00002E7C           2951          JSR         PrntReg
00002B92                          2952          
00002B92  6000 E4AC               2953          BRA         LOOP
00002B96                          2954  
00002B96  4242                    2955  memSL   CLR         D2
00002B98  1401                    2956          MOVE.B      D1,D2
00002B9A  E642                    2957          ASR         #three, D2
00002B9C                          2958          
00002B9C  C47C 0007               2959          AND         #$07, D2
00002BA0                          2960          
00002BA0  B43C 0000               2961          CMP.B       #zero, D2
00002BA4  6700 002E               2962          BEQ         opASLI
00002BA8  B43C 0004               2963          CMP.B       #four, D2
00002BAC  6700 0088               2964          BEQ         opASLR
00002BB0  B43C 0001               2965          CMP.B       #one, D2
00002BB4  6700 00E2               2966          BEQ         opLSLI
00002BB8  B43C 0005               2967          CMP.B       #five, D2
00002BBC  6700 013C               2968          BEQ         opLSLR
00002BC0  B43C 0003               2969          CMP.B       #three, D2
00002BC4  6700 0196               2970          BEQ         opROLI
00002BC8  B43C 0007               2971          CMP.B       #seven, D2
00002BCC  6700 01F0               2972          BEQ         opROLR
00002BD0  6000 108C               2973          BRA         printInvalid
00002BD4                          2974          
00002BD4  4242                    2975  opASLI  CLR         D2
00002BD6  3401                    2976          MOVE.W      D1, D2
00002BD8  E042                    2977          ASR         #eight, D2
00002BDA  C47C 0001               2978          AND         #$01, D2
00002BDE                          2979      
00002BDE  B43C 0000               2980          CMP.B       #zero, D2
00002BE2  6700 000E               2981          BEQ         opASRLI
00002BE6  B43C 0001               2982          CMP.B       #one, D2
00002BEA  6700 0028               2983          BEQ         opASLLI
00002BEE  6000 106E               2984          BRA         printInvalid
00002BF2                          2985          
00002BF2  43F9 00003D50           2986  opASRLI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002BF8  103C 000E               2987          MOVE.B      #14, D0             ; command for trap call to display message
00002BFC  4E4F                    2988          TRAP        #15                 ; trap call
00002BFE                          2989  
00002BFE  43F9 00003D6D           2990          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C04  103C 000E               2991          MOVE.B      #14, D0             ; command for trap call to display message
00002C08  4E4F                    2992          TRAP        #15                 ; trap call
00002C0A                          2993          
00002C0A  4EB9 00002E20           2994          JSR         PrntImm
00002C10                          2995          
00002C10  6000 E42E               2996          BRA         LOOP
00002C14                          2997  
00002C14  43F9 00003D54           2998  opASLLI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002C1A  103C 000E               2999          MOVE.B      #14, D0             ; command for trap call to display message
00002C1E  4E4F                    3000          TRAP        #15                 ; trap call
00002C20                          3001  
00002C20  43F9 00003D6D           3002          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C26  103C 000E               3003          MOVE.B      #14, D0             ; command for trap call to display message
00002C2A  4E4F                    3004          TRAP        #15                 ; trap call
00002C2C                          3005          
00002C2C  4EB9 00002E20           3006          JSR         PrntImm
00002C32                          3007          
00002C32  6000 E40C               3008          BRA         LOOP
00002C36                          3009  
00002C36  4242                    3010  opASLR  CLR         D2
00002C38  3401                    3011          MOVE.W      D1, D2
00002C3A  E042                    3012          ASR         #eight, D2
00002C3C  C47C 0001               3013          AND         #$01, D2
00002C40                          3014      
00002C40  B43C 0000               3015          CMP.B       #zero, D2
00002C44  6700 000E               3016          BEQ         opASRLR
00002C48  B43C 0001               3017          CMP.B       #one, D2
00002C4C  6700 0028               3018          BEQ         opASLLR
00002C50  6000 100C               3019          BRA         printInvalid 
00002C54                          3020          
00002C54  43F9 00003D50           3021  opASRLR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002C5A  103C 000E               3022          MOVE.B      #14, D0             ; command for trap call to display message
00002C5E  4E4F                    3023          TRAP        #15                 ; trap call
00002C60                          3024  
00002C60  43F9 00003D6D           3025          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C66  103C 000E               3026          MOVE.B      #14, D0             ; command for trap call to display message
00002C6A  4E4F                    3027          TRAP        #15                 ; trap call
00002C6C                          3028          
00002C6C  4EB9 00002E7C           3029          JSR         PrntReg
00002C72                          3030          
00002C72  6000 E3CC               3031          BRA         LOOP
00002C76                          3032  
00002C76  43F9 00003D54           3033  opASLLR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002C7C  103C 000E               3034          MOVE.B      #14, D0             ; command for trap call to display message
00002C80  4E4F                    3035          TRAP        #15                 ; trap call
00002C82                          3036  
00002C82  43F9 00003D6D           3037          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C88  103C 000E               3038          MOVE.B      #14, D0             ; command for trap call to display message
00002C8C  4E4F                    3039          TRAP        #15                 ; trap call
00002C8E                          3040          
00002C8E  4EB9 00002E7C           3041          JSR         PrntReg
00002C94                          3042          
00002C94  6000 E3AA               3043          BRA         LOOP
00002C98                          3044  
00002C98  4242                    3045  opLSLI  CLR         D2
00002C9A  3401                    3046          MOVE.W      D1, D2
00002C9C  E042                    3047          ASR         #eight, D2
00002C9E  C47C 0001               3048          AND         #$01, D2
00002CA2                          3049      
00002CA2  B43C 0000               3050          CMP.B       #zero, D2
00002CA6  6700 000E               3051          BEQ         opLSRLI
00002CAA  B43C 0001               3052          CMP.B       #one, D2
00002CAE  6700 0028               3053          BEQ         opLSLLI
00002CB2  6000 0FAA               3054          BRA         printInvalid 
00002CB6                          3055          
00002CB6  43F9 00003D48           3056  opLSRLI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CBC  103C 000E               3057          MOVE.B      #14, D0             ; command for trap call to display message
00002CC0  4E4F                    3058          TRAP        #15                 ; trap call
00002CC2                          3059  
00002CC2  43F9 00003D6D           3060          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CC8  103C 000E               3061          MOVE.B      #14, D0             ; command for trap call to display message
00002CCC  4E4F                    3062          TRAP        #15                 ; trap call
00002CCE                          3063          
00002CCE  4EB9 00002E20           3064          JSR         PrntImm
00002CD4                          3065          
00002CD4  6000 E36A               3066          BRA         LOOP
00002CD8                          3067  
00002CD8                          3068  
00002CD8  43F9 00003D4C           3069  opLSLLI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CDE  103C 000E               3070          MOVE.B      #14, D0             ; command for trap call to display message
00002CE2  4E4F                    3071          TRAP        #15                 ; trap call
00002CE4                          3072  
00002CE4  43F9 00003D6D           3073          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CEA  103C 000E               3074          MOVE.B      #14, D0             ; command for trap call to display message
00002CEE  4E4F                    3075          TRAP        #15                 ; trap call
00002CF0                          3076          
00002CF0  4EB9 00002E20           3077          JSR         PrntImm
00002CF6                          3078          
00002CF6  6000 E348               3079          BRA         LOOP
00002CFA                          3080  
00002CFA                          3081  
00002CFA  4242                    3082  opLSLR  CLR         D2
00002CFC  3401                    3083          MOVE.W      D1, D2
00002CFE  E042                    3084          ASR         #eight, D2
00002D00  C47C 0001               3085          AND         #$01, D2
00002D04                          3086      
00002D04  B43C 0000               3087          CMP.B       #zero, D2
00002D08  6700 000E               3088          BEQ         opLSRLR
00002D0C  B43C 0001               3089          CMP.B       #one, D2
00002D10  6700 0028               3090          BEQ         opLSLLR
00002D14  6000 0F48               3091          BRA         printInvalid 
00002D18                          3092          
00002D18  43F9 00003D48           3093  opLSRLR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002D1E  103C 000E               3094          MOVE.B      #14, D0             ; command for trap call to display message
00002D22  4E4F                    3095          TRAP        #15                 ; trap call
00002D24                          3096  
00002D24  43F9 00003D6D           3097          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D2A  103C 000E               3098          MOVE.B      #14, D0             ; command for trap call to display message
00002D2E  4E4F                    3099          TRAP        #15                 ; trap call
00002D30                          3100          
00002D30  4EB9 00002E7C           3101          JSR         PrntReg
00002D36                          3102          
00002D36  6000 E308               3103          BRA         LOOP
00002D3A                          3104          
00002D3A  43F9 00003D4C           3105  opLSLLR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002D40  103C 000E               3106          MOVE.B      #14, D0             ; command for trap call to display message
00002D44  4E4F                    3107          TRAP        #15                 ; trap call
00002D46                          3108  
00002D46  43F9 00003D6D           3109          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D4C  103C 000E               3110          MOVE.B      #14, D0             ; command for trap call to display message
00002D50  4E4F                    3111          TRAP        #15                 ; trap call
00002D52                          3112          
00002D52  4EB9 00002E7C           3113          JSR         PrntReg
00002D58                          3114          
00002D58  6000 E2E6               3115          BRA         LOOP
00002D5C                          3116  
00002D5C                          3117  
00002D5C                          3118  
00002D5C  4242                    3119  opROLI  CLR         D2
00002D5E  3401                    3120          MOVE.W      D1, D2
00002D60  E042                    3121          ASR         #eight, D2
00002D62  C47C 0001               3122          AND         #$01, D2
00002D66                          3123      
00002D66  B43C 0000               3124          CMP.B       #zero, D2
00002D6A  6700 000E               3125          BEQ         opRORLI
00002D6E  B43C 0001               3126          CMP.B       #one, D2
00002D72  6700 0028               3127          BEQ         opROLLI
00002D76  6000 0EE6               3128          BRA         printInvalid 
00002D7A                          3129          
00002D7A  43F9 00003D58           3130  opRORLI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D80  103C 000E               3131          MOVE.B      #14, D0             ; command for trap call to display message
00002D84  4E4F                    3132          TRAP        #15                 ; trap call
00002D86                          3133  
00002D86  43F9 00003D6D           3134          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D8C  103C 000E               3135          MOVE.B      #14, D0             ; command for trap call to display message
00002D90  4E4F                    3136          TRAP        #15                 ; trap call
00002D92                          3137          
00002D92  4EB9 00002E20           3138          JSR         PrntImm
00002D98                          3139          
00002D98  6000 E2A6               3140          BRA         LOOP
00002D9C                          3141  
00002D9C  43F9 00003D5C           3142  opROLLI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DA2  103C 000E               3143          MOVE.B      #14, D0             ; command for trap call to display message
00002DA6  4E4F                    3144          TRAP        #15                 ; trap call
00002DA8                          3145  
00002DA8  43F9 00003D6D           3146          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DAE  103C 000E               3147          MOVE.B      #14, D0             ; command for trap call to display message
00002DB2  4E4F                    3148          TRAP        #15                 ; trap call
00002DB4                          3149          
00002DB4  4EB9 00002E20           3150          JSR         PrntImm
00002DBA                          3151          
00002DBA  6000 E284               3152          BRA         LOOP
00002DBE                          3153  
00002DBE  4242                    3154  opROLR  CLR         D2
00002DC0  3401                    3155          MOVE.W      D1, D2
00002DC2  E042                    3156          ASR         #eight, D2
00002DC4  C47C 0001               3157          AND         #$01, D2
00002DC8                          3158      
00002DC8  B43C 0000               3159          CMP.B       #zero, D2
00002DCC  6700 000E               3160          BEQ         opRORLR
00002DD0  B43C 0001               3161          CMP.B       #one, D2
00002DD4  6700 0028               3162          BEQ         opROLLR
00002DD8  6000 0E84               3163          BRA         printInvalid     
00002DDC                          3164          
00002DDC  43F9 00003D58           3165  opRORLR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DE2  103C 000E               3166          MOVE.B      #14, D0             ; command for trap call to display message
00002DE6  4E4F                    3167          TRAP        #15                 ; trap call
00002DE8                          3168  
00002DE8  43F9 00003D6D           3169          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DEE  103C 000E               3170          MOVE.B      #14, D0             ; command for trap call to display message
00002DF2  4E4F                    3171          TRAP        #15                 ; trap call
00002DF4                          3172          
00002DF4  4EB9 00002E7C           3173          JSR         PrntReg
00002DFA                          3174          
00002DFA  6000 E244               3175          BRA         LOOP
00002DFE                          3176  
00002DFE  43F9 00003D5C           3177  opROLLR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E04  103C 000E               3178          MOVE.B      #14, D0             ; command for trap call to display message
00002E08  4E4F                    3179          TRAP        #15                 ; trap call
00002E0A                          3180  
00002E0A  43F9 00003D6D           3181          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E10  103C 000E               3182          MOVE.B      #14, D0             ; command for trap call to display message
00002E14  4E4F                    3183          TRAP        #15                 ; trap call
00002E16                          3184          
00002E16  4EB9 00002E7C           3185          JSR         PrntReg
00002E1C                          3186          
00002E1C  6000 E222               3187          BRA         LOOP
00002E20                          3188          
00002E20                          3189  ***********************************************************************************************************
00002E20                          3190  *                       Immediate Data Subroutine Part 1
00002E20                          3191  *
00002E20                          3192  * The following subroutine displays the immediate number to shift and the data register that is being shifted. 
00002E20                          3193  * This subroutine calls two printing immediate subroutine first, the the ea print subroutine.        
00002E20                          3194  *
00002E20                          3195  ***********************************************************************************************************
00002E20  48E7 FF7E               3196  PrntImm MOVEM.L D0-D7/A1-A6, -(SP)
00002E24                          3197          
00002E24  43F9 00003CCD           3198          LEA         space, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E2A  103C 000E               3199          MOVE.B      #14, D0             ; command for trap call to display message
00002E2E  4E4F                    3200          TRAP        #15                 ; trap call
00002E30                          3201          
00002E30  43F9 00003CD0           3202          LEA         hashTag, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E36  103C 000E               3203          MOVE.B      #14, D0             ; command for trap call to display message
00002E3A  4E4F                    3204          TRAP        #15                 ; trap call
00002E3C                          3205          
00002E3C  4242                    3206          CLR         D2
00002E3E  3401                    3207          MOVE.W      D1, D2
00002E40  E042                    3208          ASR         #eight, D2
00002E42  E242                    3209          ASR         #one, D2
00002E44  C47C 0007               3210          AND         #$07, D2
00002E48                          3211          
00002E48  4EB9 00002ECE           3212          JSR         MemShiftImm
00002E4E                          3213          
00002E4E  43F9 00003CD4           3214          LEA         comma, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E54  103C 000E               3215          MOVE.B      #14, D0             ; command for trap call to display message
00002E58  4E4F                    3216          TRAP        #15                 ; trap call
00002E5A                          3217          
00002E5A  4242                    3218          CLR         D2
00002E5C  4243                    3219          CLR         D3
00002E5E  1601                    3220          MOVE.B      D1,D3
00002E60  C67C 0007               3221          AND         #$07, D3
00002E64                          3222          
00002E64  4EB9 00002EF8           3223          JSR         printEA
00002E6A                          3224          
00002E6A  43F9 00003CC9           3225          LEA         newLine, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E70  103C 000E               3226          MOVE.B      #14, D0             ; command for trap call to display message
00002E74  4E4F                    3227          TRAP        #15                 ; trap call
00002E76                          3228          
00002E76  4CDF 7EFF               3229          MOVEM.L  (SP)+, D0-D7/A1-A6
00002E7A  4E75                    3230          RTS
00002E7C                          3231  ***********************************************************************************************************
00002E7C                          3232  *
00002E7C                          3233  *                       Shifting Helping Function
00002E7C                          3234  *
00002E7C                          3235  * The following subroutine determines the correct data register to display, and sets the values of D2 and 
00002E7C                          3236  *       D3 accordingly to display the data register.
00002E7C                          3237  * after setting the values, it calls another subroutine to actually display the data register.        
00002E7C                          3238  *
00002E7C                          3239  ***********************************************************************************************************
00002E7C  48E7 FF7E               3240  PrntReg     MOVEM.L D0-D7/A1-A6, -(SP)
00002E80                          3241          
00002E80  43F9 00003CCD           3242              LEA         space, A1           ; display space
00002E86  103C 000E               3243              MOVE.B      #14, D0             ; command for trap call to display message
00002E8A  4E4F                    3244              TRAP        #15                 ; trap call
00002E8C                          3245          
00002E8C  4242                    3246              CLR         D2
00002E8E  4243                    3247              CLR         D3
00002E90  3601                    3248              MOVE.W      D1, D3
00002E92  E043                    3249              ASR         #eight, D3
00002E94  E243                    3250              ASR         #one, D3
00002E96  C67C 0007               3251              AND         #$07, D3
00002E9A                          3252          
00002E9A  4EB9 00002EF8           3253              JSR         printEA
00002EA0                          3254          
00002EA0  43F9 00003CD4           3255              LEA         comma, A1           ; display comma
00002EA6  103C 000E               3256              MOVE.B      #14, D0             ; command for trap call to display message
00002EAA  4E4F                    3257              TRAP        #15                 ; trap call
00002EAC                          3258          
00002EAC  4242                    3259              CLR        D2
00002EAE  4243                    3260              CLR         D3
00002EB0  1601                    3261              MOVE.B      D1,D3
00002EB2  C67C 0007               3262              AND         #$07, D3
00002EB6                          3263          
00002EB6  4EB9 00002EF8           3264              JSR         printEA
00002EBC                          3265          
00002EBC  43F9 00003CC9           3266              LEA         newLine, A1         ; newline
00002EC2  103C 000E               3267              MOVE.B      #14, D0             ; command for trap call to display message
00002EC6  4E4F                    3268              TRAP        #15                 ; trap call
00002EC8                          3269          
00002EC8  4CDF 7EFF               3270              MOVEM.L  (SP)+, D0-D7/A1-A6
00002ECC  4E75                    3271              RTS
00002ECE                          3272  
00002ECE                          3273  ***********************************************************************************************************
00002ECE                          3274  *
00002ECE                          3275  *                       Immediate Data Subroutine Part 2
00002ECE                          3276  *
00002ECE                          3277  * The following subroutine is used to display the number between 1-8 for the bit vount for the shift/rotate opcode
00002ECE                          3278  * It displays it by storing the appropriate number in D1 and running trap task 3.
00002ECE                          3279  *
00002ECE                          3280  ***********************************************************************************************************
00002ECE                          3281  
00002ECE  48E7 FF7E               3282  MemShiftImm     MOVEM.L D0-D7/A1-A6, -(SP)      ;caller saved data
00002ED2  4241                    3283                  CLR     D1
00002ED4                          3284                  
00002ED4  1202                    3285                  MOVE.B  D2, D1
00002ED6  B23C 0000               3286                  CMP.B   #zero, D1
00002EDA  6700 000C               3287                  BEQ     displayEight
00002EDE                          3288                  
00002EDE  103C 0003               3289                  MOVE.B  #3, D0
00002EE2  4E4F                    3290                  TRAP    #15
00002EE4  6000 000C               3291                  BRA     endSubroutine
00002EE8                          3292                  
00002EE8  123C 0008               3293  displayEight    MOVE.B  #$08, D1
00002EEC  103C 0003               3294                  MOVE.B  #3, D0
00002EF0  4E4F                    3295                  TRAP    #15                
00002EF2                          3296  endSubroutine
00002EF2  4CDF 7EFF               3297                  MOVEM.L  (SP)+, D0-D7/A1-A6     ; recall data
00002EF6  4E75                    3298                  RTS                             ; Return to main routine
00002EF8                          3299          
00002EF8                          3300  
00002EF8                          3301  ***********************************************************************************************************
00002EF8                          3302  *
00002EF8                          3303  *                       EA Print Subroutine
00002EF8                          3304  *
00002EF8                          3305  ***********************************************************************************************************
00002EF8                          3306  
00002EF8  48E7 FF7E               3307  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00002EFC                          3308  
00002EFC  B43C 0000               3309              CMP.B       #zero, D2
00002F00  6700 002E               3310              BEQ         pDataReg
00002F04  B43C 0001               3311              CMP.B       #one, D2
00002F08  6700 00E6               3312              BEQ         pAddrReg
00002F0C  B43C 0002               3313              CMP.B       #two, D2
00002F10  6700 019E               3314              BEQ         pAddrDir
00002F14  B43C 0003               3315              CMP.B       #three, D2
00002F18  6700 02C2               3316              BEQ         pAddrPost
00002F1C  B43C 0004               3317              CMP.B       #four, D2
00002F20  6700 0446               3318              BEQ         pAddrDec
00002F24  B43C 0007               3319              CMP.B       #seven, D2
00002F28  6700 0576               3320              BEQ         pHex
00002F2C  6000 0642               3321              BRA         invalid
00002F30                          3322  
00002F30                          3323  ***********************************************************************************************************
00002F30                          3324  * Data Register        
00002F30  B63C 0000               3325  pDataReg    CMP.B   #zero,D3
00002F34  6700 003A               3326              BEQ     displayD0
00002F38  B63C 0001               3327              CMP.B   #one,D3
00002F3C  6700 0042               3328              BEQ     displayD1
00002F40  B63C 0002               3329              CMP.B   #two,D3
00002F44  6700 004A               3330              BEQ     displayD2
00002F48  B63C 0003               3331              CMP.B   #three,D3
00002F4C  6700 0052               3332              BEQ     displayD3
00002F50  B63C 0004               3333              CMP.B   #four,D3
00002F54  6700 005A               3334              BEQ     displayD4
00002F58  B63C 0005               3335              CMP.B   #five,D3
00002F5C  6700 0062               3336              BEQ     displayD5
00002F60  B63C 0006               3337              CMP.B   #six,D3
00002F64  6700 006A               3338              BEQ     displayD6
00002F68  B63C 0007               3339              CMP.B   #seven,D3
00002F6C  6700 0072               3340              BEQ     displayD7
00002F70                          3341              
00002F70  43F9 00003D8A           3342  displayD0   LEA         dispD0, A1          ; Display space
00002F76  103C 000E               3343              MOVE.B      #14, D0             ; command for trap call to display message
00002F7A  4E4F                    3344              TRAP        #15                 ; trap call
00002F7C  6000 05F2               3345              BRA         endSUB              ; go to the end of the subroutine
00002F80                          3346              
00002F80  43F9 00003D8D           3347  displayD1   LEA         dispD1, A1          ; Display space
00002F86  103C 000E               3348              MOVE.B      #14, D0             ; command for trap call to display message
00002F8A  4E4F                    3349              TRAP        #15                 ; trap call
00002F8C  6000 05E2               3350              BRA         endSUB              ; go to the end of the subroutine
00002F90                          3351  
00002F90  43F9 00003D90           3352  displayD2   LEA         dispD2, A1          ; Display space
00002F96  103C 000E               3353              MOVE.B      #14, D0             ; command for trap call to display message
00002F9A  4E4F                    3354              TRAP        #15                 ; trap call
00002F9C  6000 05D2               3355              BRA         endSUB              ; go to the end of the subroutine
00002FA0                          3356  
00002FA0  43F9 00003D93           3357  displayD3   LEA         dispD3, A1          ; Display space
00002FA6  103C 000E               3358              MOVE.B      #14, D0             ; command for trap call to display message
00002FAA  4E4F                    3359              TRAP        #15                 ; trap call
00002FAC  6000 05C2               3360              BRA         endSUB              ; go to the end of the subroutine
00002FB0                          3361  
00002FB0  43F9 00003D96           3362  displayD4   LEA         dispD4, A1          ; Display space
00002FB6  103C 000E               3363              MOVE.B      #14, D0             ; command for trap call to display message
00002FBA  4E4F                    3364              TRAP        #15                 ; trap call
00002FBC  6000 05B2               3365              BRA         endSUB              ; go to the end of the subroutine
00002FC0                          3366  
00002FC0  43F9 00003D99           3367  displayD5   LEA         dispD5, A1          ; Display space
00002FC6  103C 000E               3368              MOVE.B      #14, D0             ; command for trap call to display message
00002FCA  4E4F                    3369              TRAP        #15                 ; trap call
00002FCC  6000 05A2               3370              BRA         endSUB              ; go to the end of the subroutine
00002FD0                          3371  
00002FD0  43F9 00003D9C           3372  displayD6   LEA         dispD6, A1          ; Display space
00002FD6  103C 000E               3373              MOVE.B      #14, D0             ; command for trap call to display message
00002FDA  4E4F                    3374              TRAP        #15                 ; trap call
00002FDC  6000 0592               3375              BRA         endSUB              ; go to the end of the subroutine
00002FE0                          3376  
00002FE0  43F9 00003D9F           3377  displayD7   LEA         dispD7, A1          ; Display space
00002FE6  103C 000E               3378              MOVE.B      #14, D0             ; command for trap call to display message
00002FEA  4E4F                    3379              TRAP        #15                 ; trap call
00002FEC  6000 0582               3380              BRA         endSUB              ; go to the end of the subroutine
00002FF0                          3381              
00002FF0                          3382  ***********************************************************************************************************
00002FF0                          3383  * Address Register
00002FF0                          3384  
00002FF0  B63C 0000               3385  pAddrReg    CMP.B   #zero,D3
00002FF4  6700 003A               3386              BEQ     displayA0
00002FF8  B63C 0001               3387              CMP.B   #one,D3
00002FFC  6700 0042               3388              BEQ     displayA1
00003000  B63C 0002               3389              CMP.B   #two,D3
00003004  6700 004A               3390              BEQ     displayA2
00003008  B63C 0003               3391              CMP.B   #three,D3
0000300C  6700 0052               3392              BEQ     displayA3
00003010  B63C 0004               3393              CMP.B   #four,D3
00003014  6700 005A               3394              BEQ     displayA4
00003018  B63C 0005               3395              CMP.B   #five,D3
0000301C  6700 0062               3396              BEQ     displayA5
00003020  B63C 0006               3397              CMP.B   #six,D3
00003024  6700 006A               3398              BEQ     displayA6
00003028  B63C 0007               3399              CMP.B   #seven,D3
0000302C  6700 0072               3400              BEQ     displayA7
00003030                          3401              
00003030  43F9 00003D70           3402  displayA0   LEA         dispA0, A1          ; Display space
00003036  103C 000E               3403              MOVE.B      #14, D0             ; command for trap call to display message
0000303A  4E4F                    3404              TRAP        #15                 ; trap call
0000303C  6000 0532               3405              BRA         endSUB              ; go to the end of the subroutine
00003040                          3406              
00003040  43F9 00003D73           3407  displayA1   LEA         dispA1, A1          ; Display space
00003046  103C 000E               3408              MOVE.B      #14, D0             ; command for trap call to display message
0000304A  4E4F                    3409              TRAP        #15                 ; trap call
0000304C  6000 0522               3410              BRA         endSUB              ; go to the end of the subroutine
00003050                          3411  
00003050  43F9 00003D76           3412  displayA2   LEA         dispA2, A1          ; Display space
00003056  103C 000E               3413              MOVE.B      #14, D0             ; command for trap call to display message
0000305A  4E4F                    3414              TRAP        #15                 ; trap call
0000305C  6000 0512               3415              BRA         endSUB              ; go to the end of the subroutine
00003060                          3416  
00003060  43F9 00003D79           3417  displayA3   LEA         dispA3, A1          ; Display space
00003066  103C 000E               3418              MOVE.B      #14, D0             ; command for trap call to display message
0000306A  4E4F                    3419              TRAP        #15                 ; trap call
0000306C  6000 0502               3420              BRA         endSUB              ; go to the end of the subroutine
00003070                          3421  
00003070  43F9 00003D7C           3422  displayA4   LEA         dispA4, A1          ; Display space
00003076  103C 000E               3423              MOVE.B      #14, D0             ; command for trap call to display message
0000307A  4E4F                    3424              TRAP        #15                 ; trap call
0000307C  6000 04F2               3425              BRA         endSUB              ; go to the end of the subroutine
00003080                          3426  
00003080  43F9 00003D7F           3427  displayA5   LEA         dispA5, A1          ; Display space
00003086  103C 000E               3428              MOVE.B      #14, D0             ; command for trap call to display message
0000308A  4E4F                    3429              TRAP        #15                 ; trap call
0000308C  6000 04E2               3430              BRA         endSUB              ; go to the end of the subroutine
00003090                          3431  
00003090  43F9 00003D82           3432  displayA6   LEA         dispA6, A1          ; Display space
00003096  103C 000E               3433              MOVE.B      #14, D0             ; command for trap call to display message
0000309A  4E4F                    3434              TRAP        #15                 ; trap call
0000309C  6000 04D2               3435              BRA         endSUB              ; go to the end of the subroutine
000030A0                          3436  
000030A0  43F9 00003D85           3437  displayA7   LEA         dispA7, A1          ; Display space
000030A6  103C 000E               3438              MOVE.B      #14, D0             ; command for trap call to display message
000030AA  4E4F                    3439              TRAP        #15                 ; trap call
000030AC  6000 04C2               3440              BRA         endSUB              ; go to the end of the subroutine
000030B0                          3441  
000030B0                          3442  ***********************************************************************************************************
000030B0                          3443  * Address Register Direct
000030B0                          3444  
000030B0  43F9 00003CD6           3445  pAddrDir    LEA         opPer, A1           ; Display space
000030B6  103C 000E               3446              MOVE.B      #14, D0             ; command for trap call to display message
000030BA  4E4F                    3447              TRAP        #15                 ; trap call
000030BC                          3448              
000030BC  B63C 0000               3449              CMP.B   #zero,D3
000030C0  6700 003A               3450              BEQ     displayA0A
000030C4  B63C 0001               3451              CMP.B   #one,D3
000030C8  6700 004E               3452              BEQ     displayA1A
000030CC  B63C 0002               3453              CMP.B   #two,D3
000030D0  6700 0062               3454              BEQ     displayA2A
000030D4  B63C 0003               3455              CMP.B   #three,D3
000030D8  6700 0076               3456              BEQ     displayA3A
000030DC  B63C 0004               3457              CMP.B   #four,D3
000030E0  6700 008A               3458              BEQ     displayA4A
000030E4  B63C 0005               3459              CMP.B   #five,D3
000030E8  6700 009E               3460              BEQ     displayA5A
000030EC  B63C 0006               3461              CMP.B   #six,D3
000030F0  6700 00B2               3462              BEQ     displayA6A
000030F4  B63C 0007               3463              CMP.B   #seven,D3
000030F8  6700 00C6               3464              BEQ     displayA7A
000030FC                          3465              
000030FC  43F9 00003D70           3466  displayA0A  LEA         dispA0, A1          ; Display space
00003102  103C 000E               3467              MOVE.B      #14, D0             ; command for trap call to display message
00003106  4E4F                    3468              TRAP        #15                 ; trap call
00003108  43F9 00003CD8           3469              LEA         clPer, A1           ; Display space
0000310E  103C 000E               3470              MOVE.B      #14, D0             ; command for trap call to display message
00003112  4E4F                    3471              TRAP        #15                 ; trap call
00003114  6000 045A               3472              BRA         endSUB              ; go to the end of the subroutine
00003118                          3473              
00003118  43F9 00003D73           3474  displayA1A  LEA         dispA1, A1          ; Display space
0000311E  103C 000E               3475              MOVE.B      #14, D0             ; command for trap call to display message
00003122  4E4F                    3476              TRAP        #15                 ; trap call
00003124  43F9 00003CD8           3477              LEA         clPer, A1           ; Display space
0000312A  103C 000E               3478              MOVE.B      #14, D0             ; command for trap call to display message
0000312E  4E4F                    3479              TRAP        #15                 ; trap call
00003130  6000 043E               3480              BRA         endSUB              ; go to the end of the subroutine
00003134                          3481  
00003134  43F9 00003D76           3482  displayA2A  LEA         dispA2, A1          ; Display space
0000313A  103C 000E               3483              MOVE.B      #14, D0             ; command for trap call to display message
0000313E  4E4F                    3484              TRAP        #15                 ; trap call
00003140  43F9 00003CD8           3485              LEA         clPer, A1           ; Display space
00003146  103C 000E               3486              MOVE.B      #14, D0             ; command for trap call to display message
0000314A  4E4F                    3487              TRAP        #15                 ; trap call
0000314C  6000 0422               3488              BRA         endSUB              ; go to the end of the subroutine
00003150                          3489  
00003150  43F9 00003D79           3490  displayA3A  LEA         dispA3, A1          ; Display space
00003156  103C 000E               3491              MOVE.B      #14, D0             ; command for trap call to display message
0000315A  4E4F                    3492              TRAP        #15                 ; trap call
0000315C  43F9 00003CD8           3493              LEA         clPer, A1           ; Display space
00003162  103C 000E               3494              MOVE.B      #14, D0             ; command for trap call to display message
00003166  4E4F                    3495              TRAP        #15                 ; trap call
00003168  6000 0406               3496              BRA         endSUB              ; go to the end of the subroutine
0000316C                          3497  
0000316C  43F9 00003D7C           3498  displayA4A  LEA         dispA4, A1          ; Display space
00003172  103C 000E               3499              MOVE.B      #14, D0             ; command for trap call to display message
00003176  4E4F                    3500              TRAP        #15                 ; trap call
00003178  43F9 00003CD8           3501              LEA         clPer, A1           ; Display space
0000317E  103C 000E               3502              MOVE.B      #14, D0             ; command for trap call to display message
00003182  4E4F                    3503              TRAP        #15                 ; trap call
00003184  6000 03EA               3504              BRA         endSUB              ; go to the end of the subroutine
00003188                          3505  
00003188  43F9 00003D7F           3506  displayA5A  LEA         dispA5, A1          ; Display space
0000318E  103C 000E               3507              MOVE.B      #14, D0             ; command for trap call to display message
00003192  4E4F                    3508              TRAP        #15                 ; trap call
00003194  43F9 00003CD8           3509              LEA         clPer, A1           ; Display space
0000319A  103C 000E               3510              MOVE.B      #14, D0             ; command for trap call to display message
0000319E  4E4F                    3511              TRAP        #15                 ; trap call
000031A0  6000 03CE               3512              BRA         endSUB              ; go to the end of the subroutine
000031A4                          3513  
000031A4  43F9 00003D82           3514  displayA6A  LEA         dispA6, A1          ; Display space
000031AA  103C 000E               3515              MOVE.B      #14, D0             ; command for trap call to display message
000031AE  4E4F                    3516              TRAP        #15                 ; trap call
000031B0  43F9 00003CD8           3517              LEA         clPer, A1           ; Display space
000031B6  103C 000E               3518              MOVE.B      #14, D0             ; command for trap call to display message
000031BA  4E4F                    3519              TRAP        #15                 ; trap call
000031BC  6000 03B2               3520              BRA         endSUB              ; go to the end of the subroutine
000031C0                          3521  
000031C0  43F9 00003D85           3522  displayA7A  LEA         dispA7, A1          ; Display space
000031C6  103C 000E               3523              MOVE.B      #14, D0             ; command for trap call to display message
000031CA  4E4F                    3524              TRAP        #15                 ; trap call
000031CC  43F9 00003CD8           3525              LEA         clPer, A1           ; Display space
000031D2  103C 000E               3526              MOVE.B      #14, D0             ; command for trap call to display message
000031D6  4E4F                    3527              TRAP        #15                 ; trap call
000031D8  6000 0396               3528              BRA         endSUB              ; go to the end of the subroutine
000031DC                          3529              
000031DC                          3530  ***********************************************************************************************************
000031DC                          3531  * Addr Postincrement
000031DC                          3532              
000031DC  43F9 00003CD6           3533  pAddrPost   LEA         opPer, A1           ; Display space
000031E2  103C 000E               3534              MOVE.B      #14, D0             ; command for trap call to display message
000031E6  4E4F                    3535              TRAP        #15                 ; trap call
000031E8                          3536              
000031E8  B63C 0000               3537              CMP.B   #zero,D3
000031EC  6700 003A               3538              BEQ     displayA0P
000031F0  B63C 0001               3539              CMP.B   #one,D3
000031F4  6700 005A               3540              BEQ     displayA1P
000031F8  B63C 0002               3541              CMP.B   #two,D3
000031FC  6700 007A               3542              BEQ     displayA2P
00003200  B63C 0003               3543              CMP.B   #three,D3
00003204  6700 009A               3544              BEQ     displayA3P
00003208  B63C 0004               3545              CMP.B   #four,D3
0000320C  6700 00BA               3546              BEQ     displayA4P
00003210  B63C 0005               3547              CMP.B   #five,D3
00003214  6700 00DA               3548              BEQ     displayA5P
00003218  B63C 0006               3549              CMP.B   #six,D3
0000321C  6700 00FA               3550              BEQ     displayA6P
00003220  B63C 0007               3551              CMP.B   #seven,D3
00003224  6700 011A               3552              BEQ     displayA7P
00003228                          3553              
00003228  43F9 00003D70           3554  displayA0P  LEA         dispA0, A1          ; Display space
0000322E  103C 000E               3555              MOVE.B      #14, D0             ; command for trap call to display message
00003232  4E4F                    3556              TRAP        #15                 ; trap call
00003234  43F9 00003CD8           3557              LEA         clPer, A1           ; Display space
0000323A  103C 000E               3558              MOVE.B      #14, D0             ; command for trap call to display message
0000323E  4E4F                    3559              TRAP        #15                 ; trap call
00003240  43F9 00003CDC           3560              LEA         inc, A1             ; Display space
00003246  103C 000E               3561              MOVE.B      #14, D0             ; command for trap call to display message
0000324A  4E4F                    3562              TRAP        #15                 ; trap call
0000324C  6000 0322               3563              BRA         endSUB              ; go to the end of the subroutine
00003250                          3564              
00003250  43F9 00003D73           3565  displayA1P  LEA         dispA1, A1          ; Display space
00003256  103C 000E               3566              MOVE.B      #14, D0             ; command for trap call to display message
0000325A  4E4F                    3567              TRAP        #15                 ; trap call
0000325C  43F9 00003CD8           3568              LEA         clPer, A1           ; Display space
00003262  103C 000E               3569              MOVE.B      #14, D0             ; command for trap call to display message
00003266  4E4F                    3570              TRAP        #15                 ; trap call
00003268  43F9 00003CDC           3571              LEA         inc, A1             ; Display space
0000326E  103C 000E               3572              MOVE.B      #14, D0             ; command for trap call to display message
00003272  4E4F                    3573              TRAP        #15                 ; trap call
00003274  6000 02FA               3574              BRA         endSUB              ; go to the end of the subroutine
00003278                          3575  
00003278  43F9 00003D76           3576  displayA2P  LEA         dispA2, A1          ; Display space
0000327E  103C 000E               3577              MOVE.B      #14, D0             ; command for trap call to display message
00003282  4E4F                    3578              TRAP        #15                 ; trap call
00003284  43F9 00003CD8           3579              LEA         clPer, A1           ; Display space
0000328A  103C 000E               3580              MOVE.B      #14, D0             ; command for trap call to display message
0000328E  4E4F                    3581              TRAP        #15                 ; trap call
00003290  43F9 00003CDC           3582              LEA         inc, A1             ; Display space
00003296  103C 000E               3583              MOVE.B      #14, D0             ; command for trap call to display message
0000329A  4E4F                    3584              TRAP        #15                 ; trap call
0000329C  6000 02D2               3585              BRA         endSUB              ; go to the end of the subroutine
000032A0                          3586  
000032A0  43F9 00003D79           3587  displayA3P  LEA         dispA3, A1          ; Display space
000032A6  103C 000E               3588              MOVE.B      #14, D0             ; command for trap call to display message
000032AA  4E4F                    3589              TRAP        #15                 ; trap call
000032AC  43F9 00003CD8           3590              LEA         clPer, A1           ; Display space
000032B2  103C 000E               3591              MOVE.B      #14, D0             ; command for trap call to display message
000032B6  4E4F                    3592              TRAP        #15                 ; trap call
000032B8  43F9 00003CDC           3593              LEA         inc, A1             ; Display space
000032BE  103C 000E               3594              MOVE.B      #14, D0             ; command for trap call to display message
000032C2  4E4F                    3595              TRAP        #15                 ; trap call
000032C4  6000 02AA               3596              BRA         endSUB              ; go to the end of the subroutine
000032C8                          3597  
000032C8  43F9 00003D7C           3598  displayA4P  LEA         dispA4, A1          ; Display space
000032CE  103C 000E               3599              MOVE.B      #14, D0             ; command for trap call to display message
000032D2  4E4F                    3600              TRAP        #15                 ; trap call
000032D4  43F9 00003CD8           3601              LEA         clPer, A1           ; Display space
000032DA  103C 000E               3602              MOVE.B      #14, D0             ; command for trap call to display message
000032DE  4E4F                    3603              TRAP        #15                 ; trap call
000032E0  43F9 00003CDC           3604              LEA         inc, A1             ; Display space
000032E6  103C 000E               3605              MOVE.B      #14, D0             ; command for trap call to display message
000032EA  4E4F                    3606              TRAP        #15                 ; trap call
000032EC  6000 0282               3607              BRA         endSUB              ; go to the end of the subroutine
000032F0                          3608  
000032F0  43F9 00003D7F           3609  displayA5P  LEA         dispA5, A1          ; Display space
000032F6  103C 000E               3610              MOVE.B      #14, D0             ; command for trap call to display message
000032FA  4E4F                    3611              TRAP        #15                 ; trap call
000032FC  43F9 00003CD8           3612              LEA         clPer, A1           ; Display space
00003302  103C 000E               3613              MOVE.B      #14, D0             ; command for trap call to display message
00003306  4E4F                    3614              TRAP        #15                 ; trap call
00003308  43F9 00003CDC           3615              LEA         inc, A1             ; Display space
0000330E  103C 000E               3616              MOVE.B      #14, D0             ; command for trap call to display message
00003312  4E4F                    3617              TRAP        #15                 ; trap call
00003314  6000 025A               3618              BRA         endSUB              ; go to the end of the subroutine
00003318                          3619  
00003318  43F9 00003D82           3620  displayA6P  LEA         dispA6, A1          ; Display space
0000331E  103C 000E               3621              MOVE.B      #14, D0             ; command for trap call to display message
00003322  4E4F                    3622              TRAP        #15                 ; trap call
00003324  43F9 00003CD8           3623              LEA         clPer, A1           ; Display space
0000332A  103C 000E               3624              MOVE.B      #14, D0             ; command for trap call to display message
0000332E  4E4F                    3625              TRAP        #15                 ; trap call
00003330  43F9 00003CDC           3626              LEA         inc, A1             ; Display space
00003336  103C 000E               3627              MOVE.B      #14, D0             ; command for trap call to display message
0000333A  4E4F                    3628              TRAP        #15                 ; trap call
0000333C  6000 0232               3629              BRA         endSUB              ; go to the end of the subroutine
00003340                          3630  
00003340  43F9 00003D85           3631  displayA7P  LEA         dispA7, A1          ; Display space
00003346  103C 000E               3632              MOVE.B      #14, D0             ; command for trap call to display message
0000334A  4E4F                    3633              TRAP        #15                 ; trap call
0000334C  43F9 00003CD8           3634              LEA         clPer, A1           ; Display space
00003352  103C 000E               3635              MOVE.B      #14, D0             ; command for trap call to display message
00003356  4E4F                    3636              TRAP        #15                 ; trap call
00003358  43F9 00003CDC           3637              LEA         inc, A1             ; Display space
0000335E  103C 000E               3638              MOVE.B      #14, D0             ; command for trap call to display message
00003362  4E4F                    3639              TRAP        #15                 ; trap call
00003364  6000 020A               3640              BRA         endSUB              ; go to the end of the subroutine
00003368                          3641  
00003368                          3642  ***********************************************************************************************************
00003368                          3643  * Addr Postdecrement
00003368                          3644  
00003368  43F9 00003CDA           3645  pAddrDec    LEA         dec, A1             ; Display space
0000336E  103C 000E               3646              MOVE.B      #14, D0             ; command for trap call to display message
00003372  4E4F                    3647              TRAP        #15                 ; trap call
00003374                          3648              
00003374  43F9 00003CD6           3649              LEA         opPer, A1           ; Display space
0000337A  103C 000E               3650              MOVE.B      #14, D0             ; command for trap call to display message
0000337E  4E4F                    3651              TRAP        #15                 ; trap call
00003380                          3652              
00003380  B63C 0000               3653              CMP.B   #zero,D3
00003384  6700 003A               3654              BEQ     displayA0D
00003388  B63C 0001               3655              CMP.B   #one,D3
0000338C  6700 004E               3656              BEQ     displayA1D
00003390  B63C 0002               3657              CMP.B   #two,D3
00003394  6700 0062               3658              BEQ     displayA2D
00003398  B63C 0003               3659              CMP.B   #three,D3
0000339C  6700 0076               3660              BEQ     displayA3D
000033A0  B63C 0004               3661              CMP.B   #four,D3
000033A4  6700 008A               3662              BEQ     displayA4D
000033A8  B63C 0005               3663              CMP.B   #five,D3
000033AC  6700 009E               3664              BEQ     displayA5D
000033B0  B63C 0006               3665              CMP.B   #six,D3
000033B4  6700 00B2               3666              BEQ     displayA6D
000033B8  B63C 0007               3667              CMP.B   #seven,D3
000033BC  6700 00C6               3668              BEQ     displayA7D
000033C0                          3669              
000033C0  43F9 00003D70           3670  displayA0D  LEA         dispA0, A1          ; Display space
000033C6  103C 000E               3671              MOVE.B      #14, D0             ; command for trap call to display message
000033CA  4E4F                    3672              TRAP        #15                 ; trap call
000033CC  43F9 00003CD8           3673              LEA         clPer, A1           ; Display space
000033D2  103C 000E               3674              MOVE.B      #14, D0             ; command for trap call to display message
000033D6  4E4F                    3675              TRAP        #15                 ; trap call
000033D8  6000 0196               3676              BRA         endSUB              ; go to the end of the subroutine
000033DC                          3677              
000033DC  43F9 00003D73           3678  displayA1D  LEA         dispA1, A1          ; Display space
000033E2  103C 000E               3679              MOVE.B      #14, D0             ; command for trap call to display message
000033E6  4E4F                    3680              TRAP        #15                 ; trap call
000033E8  43F9 00003CD8           3681              LEA         clPer, A1           ; Display space
000033EE  103C 000E               3682              MOVE.B      #14, D0             ; command for trap call to display message
000033F2  4E4F                    3683              TRAP        #15                 ; trap call
000033F4  6000 017A               3684              BRA         endSUB              ; go to the end of the subroutine
000033F8                          3685  
000033F8  43F9 00003D76           3686  displayA2D  LEA         dispA2, A1          ; Display space
000033FE  103C 000E               3687              MOVE.B      #14, D0             ; command for trap call to display message
00003402  4E4F                    3688              TRAP        #15                 ; trap call
00003404  43F9 00003CD8           3689              LEA         clPer, A1           ; Display space
0000340A  103C 000E               3690              MOVE.B      #14, D0             ; command for trap call to display message
0000340E  4E4F                    3691              TRAP        #15                 ; trap call
00003410  6000 015E               3692              BRA         endSUB              ; go to the end of the subroutine
00003414                          3693  
00003414  43F9 00003D79           3694  displayA3D  LEA         dispA3, A1          ; Display space
0000341A  103C 000E               3695              MOVE.B      #14, D0             ; command for trap call to display message
0000341E  4E4F                    3696              TRAP        #15                 ; trap call
00003420  43F9 00003CD8           3697              LEA         clPer, A1           ; Display space
00003426  103C 000E               3698              MOVE.B      #14, D0             ; command for trap call to display message
0000342A  4E4F                    3699              TRAP        #15                 ; trap call
0000342C  6000 0142               3700              BRA         endSUB              ; go to the end of the subroutine
00003430                          3701  
00003430  43F9 00003D7C           3702  displayA4D  LEA         dispA4, A1          ; Display space
00003436  103C 000E               3703              MOVE.B      #14, D0             ; command for trap call to display message
0000343A  4E4F                    3704              TRAP        #15                 ; trap call
0000343C  43F9 00003CD8           3705              LEA         clPer, A1           ; Display space
00003442  103C 000E               3706              MOVE.B      #14, D0             ; command for trap call to display message
00003446  4E4F                    3707              TRAP        #15                 ; trap call
00003448  6000 0126               3708              BRA         endSUB              ; go to the end of the subroutine
0000344C                          3709  
0000344C  43F9 00003D7F           3710  displayA5D  LEA         dispA5, A1          ; Display space
00003452  103C 000E               3711              MOVE.B      #14, D0             ; command for trap call to display message
00003456  4E4F                    3712              TRAP        #15                 ; trap call
00003458  43F9 00003CD8           3713              LEA         clPer, A1           ; Display space
0000345E  103C 000E               3714              MOVE.B      #14, D0             ; command for trap call to display message
00003462  4E4F                    3715              TRAP        #15                 ; trap call
00003464  6000 010A               3716              BRA         endSUB              ; go to the end of the subroutine
00003468                          3717  
00003468  43F9 00003D82           3718  displayA6D  LEA         dispA6, A1          ; Display space
0000346E  103C 000E               3719              MOVE.B      #14, D0             ; command for trap call to display message
00003472  4E4F                    3720              TRAP        #15                 ; trap call
00003474  43F9 00003CD8           3721              LEA         clPer, A1           ; Display space
0000347A  103C 000E               3722              MOVE.B      #14, D0             ; command for trap call to display message
0000347E  4E4F                    3723              TRAP        #15                 ; trap call
00003480  6000 00EE               3724              BRA         endSUB              ; go to the end of the subroutine
00003484                          3725  
00003484  43F9 00003D85           3726  displayA7D  LEA         dispA7, A1          ; Display space
0000348A  103C 000E               3727              MOVE.B      #14, D0             ; command for trap call to display message
0000348E  4E4F                    3728              TRAP        #15                 ; trap call
00003490  43F9 00003CD8           3729              LEA         clPer, A1           ; Display space
00003496  103C 000E               3730              MOVE.B      #14, D0             ; command for trap call to display message
0000349A  4E4F                    3731              TRAP        #15                 ; trap call
0000349C  6000 00D2               3732              BRA         endSUB              ; go to the end of the subroutine
000034A0                          3733  ***********************************************************************************************************
000034A0                          3734  * Display Hex
000034A0                          3735  
000034A0  B63C 0000               3736  pHex        CMP.B       #zero, D3
000034A4  6700 0012               3737              BEQ         AbsShort
000034A8  B63C 0001               3738              CMP.B       #one, D3
000034AC  6700 0042               3739              BEQ         AbsLong
000034B0  B63C 0004               3740              CMP.B       #four, D3
000034B4  6700 0072               3741              BEQ         DispImm
000034B8                          3742              
000034B8  43F9 00003CD6           3743  AbsShort    LEA         opPer, A1           ; Display space
000034BE  103C 000E               3744              MOVE.B      #14, D0             ; command for trap call to display message
000034C2  4E4F                    3745              TRAP        #15                 ; trap call
000034C4                          3746              
000034C4  43F9 00003CD2           3747              LEA         dispHex, A1         ; Display space
000034CA  103C 000E               3748              MOVE.B      #14, D0             ; command for trap call to display message
000034CE  4E4F                    3749              TRAP        #15                 ; trap call
000034D0                          3750              
000034D0  4241                    3751              CLR         D1
000034D2  3218                    3752              MOVE.W      (A0)+, D1
000034D4  4240                    3753              CLR         D0
000034D6  103C 0004               3754              MOVE.B      #4, D0
000034DA                          3755              
000034DA  4EB9 00003A98           3756              JSR         outHex
000034E0                          3757              
000034E0  43F9 00003CD8           3758              LEA         clPer, A1           ; Display space
000034E6  103C 000E               3759              MOVE.B      #14, D0             ; command for trap call to display message
000034EA  4E4F                    3760              TRAP        #15                 ; trap call
000034EC                          3761              
000034EC  6000 0082               3762              BRA         endSub
000034F0                          3763              
000034F0  43F9 00003CD6           3764  AbsLong     LEA         opPer, A1           ; Display space
000034F6  103C 000E               3765              MOVE.B      #14, D0             ; command for trap call to display message
000034FA  4E4F                    3766              TRAP        #15                 ; trap call
000034FC                          3767              
000034FC  43F9 00003CD2           3768              LEA         dispHex, A1         ; Display space
00003502  103C 000E               3769              MOVE.B      #14, D0             ; command for trap call to display message
00003506  4E4F                    3770              TRAP        #15                 ; trap call
00003508                          3771              
00003508  4241                    3772              CLR         D1
0000350A  2218                    3773              MOVE.L      (A0)+, D1
0000350C  4240                    3774              CLR         D0
0000350E  103C 0008               3775              MOVE.B      #8, D0
00003512                          3776              
00003512  4EB9 00003A98           3777              JSR         outHex
00003518                          3778              
00003518  43F9 00003CD8           3779              LEA         clPer, A1           ; Display space
0000351E  103C 000E               3780              MOVE.B      #14, D0             ; command for trap call to display message
00003522  4E4F                    3781              TRAP        #15                 ; trap call
00003524                          3782              
00003524  6000 004A               3783              BRA         endSub
00003528                          3784  
00003528  43F9 00003CD0           3785  DispImm     LEA         hashTag, A1         ; Display space
0000352E  103C 000E               3786              MOVE.B      #14, D0             ; command for trap call to display message
00003532  4E4F                    3787              TRAP        #15                 ; trap call
00003534                          3788  
00003534  43F9 00003CD2           3789              LEA         dispHex, A1         ; Display space
0000353A  103C 000E               3790              MOVE.B      #14, D0             ; command for trap call to display message
0000353E  4E4F                    3791              TRAP        #15                 ; trap call
00003540                          3792              
00003540  BC3C 0001               3793              CMP.B       #1,D6
00003544  6700 0016               3794              BEQ         ImmLong
00003548                          3795              
00003548  4241                    3796              CLR         D1
0000354A  3218                    3797              MOVE.W      (A0)+, D1
0000354C  4240                    3798              CLR         D0
0000354E  103C 0004               3799              MOVE.B      #4, D0
00003552  4EB9 00003A98           3800              JSR         outHex
00003558  6000 0012               3801              BRA         LongSkip
0000355C                          3802              
0000355C  4241                    3803  ImmLong     CLR         D1
0000355E  2218                    3804              MOVE.L      (A0)+, D1
00003560  4240                    3805              CLR         D0
00003562  103C 0008               3806              MOVE.B      #8, D0
00003566  4EB9 00003A98           3807              JSR         outHex             
0000356C                          3808  
0000356C                          3809  LongSkip
0000356C  6000 0002               3810              BRA         endSub
00003570                          3811  invalid
00003570                          3812  
00003570                          3813  endSUB
00003570                          3814          
00003570  4CDF 7EFF               3815              MOVEM.L  (SP)+, D0-D7/A1-A6
00003574  4E75                    3816              RTS
00003576                          3817  
00003576                          3818  ***********************************************************************************************************
00003576                          3819  *
00003576                          3820  *                       MOVEM Helper Function
00003576                          3821  *
00003576                          3822  ***********************************************************************************************************
00003576                          3823  
00003576  48E7 FF7E               3824  MOVEMBRA    MOVEM.L     D0-D7/A1-A6, -(SP)     ; Branches off depending on size bit
0000357A  BA7C 0000               3825              CMP         #zero,D5
0000357E  6700 000A               3826              BEQ         MOVEMW
00003582  BA7C 0001               3827              CMP         #one, D5
00003586  6700 001E               3828              BEQ         MOVEML
0000358A                          3829              
0000358A                          3830  MOVEMW     
0000358A  43F9 00003D6A           3831              LEA         dispWord, A1        ; we know that the opcode will be ROR, so load A1 to print message
00003590  103C 000E               3832              MOVE.B      #14, D0             ; command for trap call to display message
00003594  4E4F                    3833              TRAP        #15                 ; trap call
00003596                          3834  
00003596  43F9 00003CCD           3835              LEA         space, A1           ; we know that the opcode will be ROR, so load A1 to print message
0000359C  103C 000E               3836              MOVE.B      #14, D0             ; command for trap call to display message
000035A0  4E4F                    3837              TRAP        #15                 ; trap call
000035A2                          3838              
000035A2  6000 001E               3839              BRA         CheckDR
000035A6                          3840  
000035A6                          3841  MOVEML   
000035A6  43F9 00003D6D           3842              LEA         dispLong, A1        ; we know that the opcode will be ROR, so load A1 to print message
000035AC  103C 000E               3843              MOVE.B      #14, D0             ; command for trap call to display message
000035B0  4E4F                    3844              TRAP        #15                 ; trap call
000035B2                          3845  
000035B2  43F9 00003CCD           3846              LEA         space, A1        ; we know that the opcode will be ROR, so load A1 to print message
000035B8  103C 000E               3847              MOVE.B      #14, D0             ; command for trap call to display message
000035BC  4E4F                    3848              TRAP        #15                 ; trap call
000035BE                          3849           
000035BE                          3850  
000035BE  6000 0002               3851              BRA         CheckDR
000035C2                          3852  
000035C2                          3853  CheckDR     
000035C2                          3854              
000035C2                          3855                
000035C2  3218                    3856              MOVE.W      (A0)+, D1           ; Taking in next word
000035C4  BC7C 0000               3857              CMP         #zero,D6
000035C8  6700 0020               3858              BEQ         printRegMem
000035CC  BC7C 0001               3859              CMP         #one,D6
000035D0  6700 0004               3860              BEQ         printStack
000035D4  609A                    3861              BRA         invalid
000035D6                          3862              
000035D6                          3863  printStack 
000035D6  4EB8 2EF8               3864              JSR         printEA
000035DA                          3865              
000035DA  43F9 00003CD4           3866              LEA         comma,A1
000035E0  103C 000E               3867              MOVE.B      #14, D0             ; command for trap call to display message
000035E4  4E4F                    3868              TRAP        #15                 ; trap call
000035E6                          3869              
000035E6                          3870              
000035E6  6000 0002               3871              BRA         printRegMem
000035EA                          3872             
000035EA                          3873  printRegMem 
000035EA  4244                    3874              CLR         D4                  ; Using D4 to store predecrement mode addresses
000035EC  1801                    3875              MOVE.B      D1,D4               ; Stores bits for D0-D7
000035EE                          3876              
000035EE  4245                    3877              CLR         D5
000035F0  1A01                    3878              MOVE.B      D1,D5
000035F2  CA7C 0001               3879              AND         #mask1,D5
000035F6  BA7C 0001               3880              CMP         #mask1,D5
000035FA  6700 007A               3881              BEQ         DataReg0
000035FE                          3882              
000035FE  4245                    3883              CLR         D5
00003600  1A01                    3884              MOVE.B      D1,D5
00003602  CA7C 0002               3885              AND         #mask2,D5
00003606  BA7C 0002               3886              CMP         #mask2,D5
0000360A  6700 009A               3887              BEQ         DataReg1
0000360E                          3888  
0000360E  4245                    3889              CLR         D5
00003610  1A01                    3890              MOVE.B      D1,D5
00003612  CA7C 0004               3891              AND         #mask3,D5
00003616  BA7C 0004               3892              CMP         #mask3,D5
0000361A  6700 00CA               3893              BEQ         DataReg2            
0000361E                          3894              
0000361E  4245                    3895              CLR         D5
00003620  1A01                    3896              MOVE.B      D1,D5
00003622  CA7C 0008               3897              AND         #mask4,D5
00003626  BA7C 0008               3898              CMP         #mask4,D5
0000362A  6700 00FA               3899              BEQ         DataReg3            
0000362E                          3900              
0000362E  4245                    3901              CLR         D5
00003630  1A01                    3902              MOVE.B      D1,D5
00003632  CA7C 0010               3903              AND         #mask5,D5
00003636  BA7C 0010               3904              CMP         #mask5,D5
0000363A  6700 012A               3905              BEQ         DataReg4
0000363E                          3906  
0000363E  4245                    3907              CLR         D5
00003640  1A01                    3908              MOVE.B      D1,D5
00003642  CA7C 0020               3909              AND         #mask6,D5
00003646  BA7C 0020               3910              CMP         #mask6,D5
0000364A  6700 015A               3911              BEQ         DataReg5
0000364E                          3912  
0000364E  4245                    3913              CLR         D5
00003650  1A01                    3914              MOVE.B      D1,D5
00003652  CA7C 0040               3915              AND         #mask7,D5
00003656  BA7C 0040               3916              CMP         #mask7,D5
0000365A  6700 018A               3917              BEQ         DataReg6
0000365E                          3918  
0000365E  4245                    3919              CLR         D5
00003660  1A01                    3920              MOVE.B      D1,D5
00003662  CA7C 0080               3921              AND         #mask8,D5
00003666  BA7C 0080               3922              CMP         #mask8,D5
0000366A  6700 01BA               3923              BEQ         DataReg7
0000366E                          3924              
0000366E  6000 FF00               3925              BRA         invalid
00003672  6000 FEFC               3926              BRA         invalid        
00003676                          3927              
00003676                          3928  DataReg0
00003676  43F9 00003D8A           3929              LEA         dispD0, A1          ; Output string D0
0000367C  103C 000E               3930              MOVE.B      #14, D0             ; command for trap call to display message
00003680  4E4F                    3931              TRAP        #15                 ; trap call
00003682                          3932              
00003682  4245                    3933              CLR         D5
00003684  1A01                    3934              MOVE.B      D1,D5
00003686  CA7C 0002               3935              AND         #mask2,D5
0000368A  BA7C 0002               3936              CMP         #mask2,D5
0000368E  6700 0006               3937              BEQ         Reg0Cont
00003692  6000 01A2               3938              BRA         printMem
00003696                          3939  Reg0Cont        
00003696  43F9 00003CDA           3940              LEA         dec, A1             ; Output -
0000369C  103C 000E               3941              MOVE.B      #14, D0             ; command for trap call to display message
000036A0  4E4F                    3942              TRAP        #15                 ; trap call        
000036A2  6000 0002               3943              BRA         DataReg1
000036A6                          3944  
000036A6                          3945  DataReg1
000036A6  4245                    3946              CLR         D5
000036A8  1A01                    3947              MOVE.B      D1,D5
000036AA  CA7C 0005               3948              AND         #maskA,D5
000036AE  BA7C 0005               3949              CMP         #maskA,D5
000036B2  6700 0032               3950              BEQ         DataReg2
000036B6                          3951              
000036B6  43F9 00003D8D           3952              LEA         dispD1, A1          ; Output string D0
000036BC  103C 000E               3953              MOVE.B      #14, D0             ; command for trap call to display message
000036C0  4E4F                    3954              TRAP        #15                 ; trap call
000036C2                          3955              
000036C2  4245                    3956              CLR         D5
000036C4  1A01                    3957              MOVE.B      D1,D5
000036C6  CA7C 0004               3958              AND         #mask3,D5
000036CA  BA7C 0004               3959              CMP         #mask3,D5
000036CE  6700 0006               3960              BEQ         Reg1Cont
000036D2  6000 0162               3961              BRA         printMem
000036D6                          3962  Reg1Cont        
000036D6  43F9 00003CDA           3963              LEA         dec, A1             ; Output -
000036DC  103C 000E               3964              MOVE.B      #14, D0             ; command for trap call to display message
000036E0  4E4F                    3965              TRAP        #15                 ; trap call        
000036E2  6000 0002               3966              BRA         DataReg2
000036E6                          3967  
000036E6                          3968  
000036E6                          3969  DataReg2
000036E6  4245                    3970              CLR         D5
000036E8  1A01                    3971              MOVE.B      D1,D5
000036EA  CA7C 000A               3972              AND         #maskB,D5
000036EE  BA7C 000A               3973              CMP         #maskB,D5
000036F2  6700 0032               3974              BEQ         DataReg3
000036F6                          3975              
000036F6                          3976              
000036F6  43F9 00003D90           3977              LEA         dispD2, A1          ; Output string D0
000036FC  103C 000E               3978              MOVE.B      #14, D0             ; command for trap call to display message
00003700  4E4F                    3979              TRAP        #15                 ; trap call
00003702                          3980              
00003702  4245                    3981              CLR         D5
00003704  1A01                    3982              MOVE.B      D1,D5
00003706  CA7C 0008               3983              AND         #mask4,D5
0000370A  BA7C 0008               3984              CMP         #mask4,D5
0000370E  6700 0006               3985              BEQ         Reg2Cont
00003712  6000 0122               3986              BRA         printMem
00003716                          3987  Reg2Cont        
00003716  43F9 00003CDA           3988              LEA         dec, A1             ; Output -
0000371C  103C 000E               3989              MOVE.B      #14, D0             ; command for trap call to display message
00003720  4E4F                    3990              TRAP        #15                 ; trap call        
00003722  6000 0002               3991              BRA         DataReg3
00003726                          3992  
00003726                          3993  DataReg3
00003726  4245                    3994              CLR         D5
00003728  1A01                    3995              MOVE.B      D1,D5
0000372A  CA7C 0014               3996              AND         #maskC,D5
0000372E  BA7C 0014               3997              CMP         #maskC,D5
00003732  6700 0032               3998              BEQ         DataReg4
00003736                          3999              
00003736  43F9 00003D93           4000              LEA         dispD3, A1          ; Output string D0
0000373C  103C 000E               4001              MOVE.B      #14, D0             ; command for trap call to display message
00003740  4E4F                    4002              TRAP        #15                 ; trap call
00003742                          4003              
00003742  4245                    4004              CLR         D5
00003744  1A01                    4005              MOVE.B      D1,D5
00003746  CA7C 0010               4006              AND         #mask5,D5
0000374A  BA7C 0010               4007              CMP         #mask5,D5
0000374E  6700 0006               4008              BEQ         Reg3Cont
00003752  6000 00E2               4009              BRA         printMem
00003756                          4010  Reg3Cont        
00003756  43F9 00003CDA           4011              LEA         dec, A1             ; Output -
0000375C  103C 000E               4012              MOVE.B      #14, D0             ; command for trap call to display message
00003760  4E4F                    4013              TRAP        #15                 ; trap call        
00003762  6000 0002               4014              BRA         DataReg4
00003766                          4015  
00003766                          4016  
00003766                          4017  DataReg4
00003766  4245                    4018              CLR         D5
00003768  1A01                    4019              MOVE.B      D1,D5
0000376A  CA7C 0028               4020              AND         #maskD,D5
0000376E  BA7C 0028               4021              CMP         #maskD,D5
00003772  6700 0032               4022              BEQ         DataReg5
00003776                          4023              
00003776  43F9 00003D96           4024              LEA         dispD4, A1          ; Output string D0
0000377C  103C 000E               4025              MOVE.B      #14, D0             ; command for trap call to display message
00003780  4E4F                    4026              TRAP        #15                 ; trap call
00003782                          4027              
00003782  4245                    4028              CLR         D5
00003784  1A01                    4029              MOVE.B      D1,D5
00003786  CA7C 0020               4030              AND         #mask6,D5
0000378A  BA7C 0020               4031              CMP         #mask6,D5
0000378E  6700 0006               4032              BEQ         Reg4Cont
00003792  6000 00A2               4033              BRA         printMem
00003796                          4034  Reg4Cont        
00003796  43F9 00003CDA           4035              LEA         dec, A1             ; Output -
0000379C  103C 000E               4036              MOVE.B      #14, D0             ; command for trap call to display message
000037A0  4E4F                    4037              TRAP        #15                 ; trap call        
000037A2  6000 0002               4038              BRA         DataReg5
000037A6                          4039  
000037A6                          4040  DataReg5
000037A6  4245                    4041              CLR         D5
000037A8  1A01                    4042              MOVE.B      D1,D5
000037AA  CA7C 0050               4043              AND         #maskE,D5
000037AE  BA7C 0050               4044              CMP         #maskE,D5
000037B2  6700 0032               4045              BEQ         DataReg6
000037B6                          4046              
000037B6  43F9 00003D99           4047              LEA         dispD5, A1          ; Output string D0
000037BC  103C 000E               4048              MOVE.B      #14, D0             ; command for trap call to display message
000037C0  4E4F                    4049              TRAP        #15                 ; trap call
000037C2                          4050              
000037C2  4245                    4051              CLR         D5
000037C4  1A01                    4052              MOVE.B      D1,D5
000037C6  CA7C 0040               4053              AND         #mask7,D5
000037CA  BA7C 0040               4054              CMP         #mask7,D5
000037CE  6700 0006               4055              BEQ         Reg5Cont
000037D2  6000 0062               4056              BRA         printMem
000037D6                          4057  Reg5Cont        
000037D6  43F9 00003CDA           4058              LEA         dec, A1             ; Output -
000037DC  103C 000E               4059              MOVE.B      #14, D0             ; command for trap call to display message
000037E0  4E4F                    4060              TRAP        #15                 ; trap call        
000037E2  6000 0042               4061              BRA         DataReg7
000037E6                          4062  
000037E6                          4063  DataReg6
000037E6  4245                    4064              CLR         D5
000037E8  1A01                    4065              MOVE.B      D1,D5
000037EA  CA7C 00A0               4066              AND         #maskF,D5
000037EE  BA7C 00A0               4067              CMP         #maskF,D5
000037F2  6700 0032               4068              BEQ         DataReg7
000037F6                          4069  
000037F6  43F9 00003D9C           4070              LEA         dispD6, A1          ; Output string D0
000037FC  103C 000E               4071              MOVE.B      #14, D0             ; command for trap call to display message
00003800  4E4F                    4072              TRAP        #15                 ; trap call
00003802                          4073              
00003802  4245                    4074              CLR         D5
00003804  1A01                    4075              MOVE.B      D1,D5
00003806  CA7C 0080               4076              AND         #mask8,D5
0000380A  BA7C 0080               4077              CMP         #mask8,D5
0000380E  6700 0006               4078              BEQ         Reg6Cont
00003812  6000 0022               4079              BRA         printMem
00003816                          4080  Reg6Cont        
00003816  43F9 00003CDA           4081              LEA         dec, A1             ; Output -
0000381C  103C 000E               4082              MOVE.B      #14, D0             ; command for trap call to display message
00003820  4E4F                    4083              TRAP        #15                 ; trap call        
00003822  6000 0002               4084              BRA         DataReg7
00003826                          4085  
00003826                          4086  DataReg7    
00003826  43F9 00003D9F           4087              LEA         dispD7, A1             ; Output -
0000382C  103C 000E               4088              MOVE.B      #14, D0             ; command for trap call to display message
00003830  4E4F                    4089              TRAP        #15                 ; trap call        
00003832  6000 0002               4090              BRA         printMem            
00003836                          4091  printMem                                    ; Made this function in order to reuse if DR is 1
00003836  6000 0002               4092              BRA         printMemNow
0000383A                          4093  printMemNow               
0000383A  43F9 00003D60           4094              LEA         slash, A1           ; Display slash
00003840  103C 000E               4095              MOVE.B      #14, D0             ; command for trap call to display message
00003844  4E4F                    4096              TRAP        #15                 ; trap call
00003846                          4097           
00003846  4244                    4098              CLR         D4                  ; Using D4 to store predecrement mode addresses
00003848  3801                    4099              MOVE.W      D1,D4               ; Stores bits for D0-D7
0000384A  E044                    4100              ASR         #eight,D4
0000384C                          4101              
0000384C  4245                    4102              CLR         D5
0000384E  1A04                    4103              MOVE.B      D4,D5
00003850  CA7C 0001               4104              AND         #mask1,D5
00003854  BA7C 0001               4105              CMP         #mask1,D5
00003858  6700 0072               4106              BEQ         AddrReg0
0000385C                          4107              
0000385C  4245                    4108              CLR         D5
0000385E  1A04                    4109              MOVE.B      D4,D5
00003860  CA7C 0002               4110              AND         #mask2,D5
00003864  BA7C 0002               4111              CMP         #mask2,D5
00003868  6700 0092               4112              BEQ         AddrReg1
0000386C                          4113  
0000386C  4245                    4114              CLR         D5
0000386E  1A04                    4115              MOVE.B      D4,D5
00003870  CA7C 0004               4116              AND         #mask3,D5
00003874  BA7C 0004               4117              CMP         #mask3,D5
00003878  6700 00C2               4118              BEQ         AddrReg2            
0000387C                          4119              
0000387C  4245                    4120              CLR         D5
0000387E  1A04                    4121              MOVE.B      D4,D5
00003880  CA7C 0008               4122              AND         #mask4,D5
00003884  BA7C 0008               4123              CMP         #mask4,D5
00003888  6700 00F2               4124              BEQ         AddrReg3            
0000388C                          4125              
0000388C  4245                    4126              CLR         D5
0000388E  1A04                    4127              MOVE.B      D4,D5
00003890  CA7C 0010               4128              AND         #mask5,D5
00003894  BA7C 0010               4129              CMP         #mask5,D5
00003898  6700 0122               4130              BEQ         AddrReg4
0000389C                          4131  
0000389C  4245                    4132              CLR         D5
0000389E  1A04                    4133              MOVE.B      D4,D5
000038A0  CA7C 0020               4134              AND         #mask6,D5
000038A4  BA7C 0020               4135              CMP         #mask6,D5
000038A8  6700 0152               4136              BEQ         AddrReg5
000038AC                          4137  
000038AC  4245                    4138              CLR         D5
000038AE  1A04                    4139              MOVE.B      D4,D5
000038B0  CA7C 0040               4140              AND         #mask7,D5
000038B4  BA7C 0040               4141              CMP         #mask7,D5
000038B8  6700 0182               4142              BEQ         AddrReg6
000038BC                          4143  
000038BC  4245                    4144              CLR         D5
000038BE  1A04                    4145              MOVE.B      D4,D5
000038C0  CA7C 0080               4146              AND         #mask8,D5
000038C4  BA7C 0080               4147              CMP         #mask8,D5
000038C8  6700 01B2               4148              BEQ         AddrReg7
000038CC                          4149  AddrReg0
000038CC  43F9 00003D70           4150              LEA         dispA0, A1          ; Output string D0
000038D2  103C 000E               4151              MOVE.B      #14, D0             ; command for trap call to display message
000038D6  4E4F                    4152              TRAP        #15                 ; trap call
000038D8                          4153              
000038D8  4245                    4154              CLR         D5
000038DA  1A01                    4155              MOVE.B      D1,D5
000038DC  CA7C 0002               4156              AND         #mask2,D5
000038E0  BA7C 0002               4157              CMP         #mask2,D5
000038E4  6700 0006               4158              BEQ         Addr0Cont
000038E8  6000 01A2               4159              BRA         endMOVE
000038EC                          4160  Addr0Cont        
000038EC  43F9 00003CDA           4161              LEA         dec, A1             ; Output -
000038F2  103C 000E               4162              MOVE.B      #14, D0             ; command for trap call to display message
000038F6  4E4F                    4163              TRAP        #15                 ; trap call        
000038F8  6000 0002               4164              BRA         AddrReg1
000038FC                          4165  
000038FC                          4166  AddrReg1
000038FC  4245                    4167              CLR         D5
000038FE  1A04                    4168              MOVE.B      D4,D5
00003900  CA7C 0005               4169              AND         #maskA,D5
00003904  BA7C 0005               4170              CMP         #maskA,D5
00003908  6700 0032               4171              BEQ         AddrReg2
0000390C                          4172              
0000390C  43F9 00003D73           4173              LEA         dispA1, A1          ; Output string D0
00003912  103C 000E               4174              MOVE.B      #14, D0             ; command for trap call to display message
00003916  4E4F                    4175              TRAP        #15                 ; trap call
00003918                          4176              
00003918  4245                    4177              CLR         D5
0000391A  1A04                    4178              MOVE.B      D4,D5
0000391C  CA7C 0004               4179              AND         #mask3,D5
00003920  BA7C 0004               4180              CMP         #mask3,D5
00003924  6700 0006               4181              BEQ         Addr1Cont
00003928  6000 0162               4182              BRA         endMOVE
0000392C                          4183  Addr1Cont        
0000392C  43F9 00003CDA           4184              LEA         dec, A1             ; Output -
00003932  103C 000E               4185              MOVE.B      #14, D0             ; command for trap call to display message
00003936  4E4F                    4186              TRAP        #15                 ; trap call        
00003938  6000 0002               4187              BRA         AddrReg2
0000393C                          4188  
0000393C                          4189  
0000393C                          4190  AddrReg2
0000393C  4245                    4191              CLR         D5
0000393E  1A04                    4192              MOVE.B      D4,D5
00003940  CA7C 000A               4193              AND         #maskB,D5
00003944  BA7C 000A               4194              CMP         #maskB,D5
00003948  6700 0032               4195              BEQ         AddrReg3
0000394C                          4196              
0000394C                          4197              
0000394C  43F9 00003D76           4198              LEA         dispA2, A1          ; Output string D0
00003952  103C 000E               4199              MOVE.B      #14, D0             ; command for trap call to display message
00003956  4E4F                    4200              TRAP        #15                 ; trap call
00003958                          4201              
00003958  4245                    4202              CLR         D5
0000395A  1A04                    4203              MOVE.B      D4,D5
0000395C  CA7C 0008               4204              AND         #mask4,D5
00003960  BA7C 0008               4205              CMP         #mask4,D5
00003964  6700 0006               4206              BEQ         Addr2Cont
00003968  6000 0122               4207              BRA         endMOVE
0000396C                          4208  Addr2Cont        
0000396C  43F9 00003CDA           4209              LEA         dec, A1             ; Output -
00003972  103C 000E               4210              MOVE.B      #14, D0             ; command for trap call to display message
00003976  4E4F                    4211              TRAP        #15                 ; trap call        
00003978  6000 0002               4212              BRA         AddrReg3
0000397C                          4213  
0000397C                          4214  AddrReg3
0000397C  4245                    4215              CLR         D5
0000397E  1A04                    4216              MOVE.B      D4,D5
00003980  CA7C 0014               4217              AND         #maskC,D5
00003984  BA7C 0014               4218              CMP         #maskC,D5
00003988  6700 0032               4219              BEQ         AddrReg4
0000398C                          4220              
0000398C  43F9 00003D79           4221              LEA         dispA3, A1          ; Output string D0
00003992  103C 000E               4222              MOVE.B      #14, D0             ; command for trap call to display message
00003996  4E4F                    4223              TRAP        #15                 ; trap call
00003998                          4224              
00003998  4245                    4225              CLR         D5
0000399A  1A04                    4226              MOVE.B      D4,D5
0000399C  CA7C 0010               4227              AND         #mask5,D5
000039A0  BA7C 0010               4228              CMP         #mask5,D5
000039A4  6700 0006               4229              BEQ         Addr3Cont
000039A8  6000 00E2               4230              BRA         endMOVE
000039AC                          4231  Addr3Cont        
000039AC  43F9 00003CDA           4232              LEA         dec, A1             ; Output -
000039B2  103C 000E               4233              MOVE.B      #14, D0             ; command for trap call to display message
000039B6  4E4F                    4234              TRAP        #15                 ; trap call        
000039B8  6000 0002               4235              BRA         AddrReg4
000039BC                          4236  
000039BC                          4237  
000039BC                          4238  AddrReg4
000039BC  4245                    4239              CLR         D5
000039BE  1A04                    4240              MOVE.B      D4,D5
000039C0  CA7C 0028               4241              AND         #maskD,D5
000039C4  BA7C 0028               4242              CMP         #maskD,D5
000039C8  6700 0032               4243              BEQ         AddrReg5
000039CC                          4244              
000039CC  43F9 00003D7C           4245              LEA         dispA4, A1          ; Output string D0
000039D2  103C 000E               4246              MOVE.B      #14, D0             ; command for trap call to display message
000039D6  4E4F                    4247              TRAP        #15                 ; trap call
000039D8                          4248              
000039D8  4245                    4249              CLR         D5
000039DA  1A04                    4250              MOVE.B      D4,D5
000039DC  CA7C 0020               4251              AND         #mask6,D5
000039E0  BA7C 0020               4252              CMP         #mask6,D5
000039E4  6700 0006               4253              BEQ         Addr4Cont
000039E8  6000 00A2               4254              BRA         endMOVE
000039EC                          4255  Addr4Cont        
000039EC  43F9 00003CDA           4256              LEA         dec, A1             ; Output -
000039F2  103C 000E               4257              MOVE.B      #14, D0             ; command for trap call to display message
000039F6  4E4F                    4258              TRAP        #15                 ; trap call        
000039F8  6000 0002               4259              BRA         AddrReg5
000039FC                          4260  AddrReg5
000039FC  4245                    4261              CLR         D5
000039FE  1A04                    4262              MOVE.B      D4,D5
00003A00  CA7C 0050               4263              AND         #maskE,D5
00003A04  BA7C 0050               4264              CMP         #maskE,D5
00003A08  6700 0032               4265              BEQ         AddrReg6
00003A0C                          4266              
00003A0C  43F9 00003D7F           4267              LEA         dispA5, A1          ; Output string D0
00003A12  103C 000E               4268              MOVE.B      #14, D0             ; command for trap call to display message
00003A16  4E4F                    4269              TRAP        #15                 ; trap call
00003A18                          4270              
00003A18  4245                    4271              CLR         D5
00003A1A  1A04                    4272              MOVE.B      D4,D5
00003A1C  CA7C 0040               4273              AND         #mask7,D5
00003A20  BA7C 0040               4274              CMP         #mask7,D5
00003A24  6700 0006               4275              BEQ         Addr5Cont
00003A28  6000 0062               4276              BRA         endMOVE
00003A2C                          4277  Addr5Cont        
00003A2C  43F9 00003CDA           4278              LEA         dec, A1             ; Output -
00003A32  103C 000E               4279              MOVE.B      #14, D0             ; command for trap call to display message
00003A36  4E4F                    4280              TRAP        #15                 ; trap call        
00003A38  6000 0042               4281              BRA         AddrReg7
00003A3C                          4282  
00003A3C                          4283  AddrReg6
00003A3C  4245                    4284              CLR         D5
00003A3E  1A04                    4285              MOVE.B      D4,D5
00003A40  CA7C 00A0               4286              AND         #maskF,D5
00003A44  BA7C 00A0               4287              CMP         #maskF,D5
00003A48  6700 0032               4288              BEQ         AddrReg7
00003A4C                          4289  
00003A4C  43F9 00003D82           4290              LEA         dispA6, A1          ; Output string D0
00003A52  103C 000E               4291              MOVE.B      #14, D0             ; command for trap call to display message
00003A56  4E4F                    4292              TRAP        #15                 ; trap call
00003A58                          4293              
00003A58  4245                    4294              CLR         D5
00003A5A  1A04                    4295              MOVE.B      D4,D5
00003A5C  CA7C 0080               4296              AND         #mask8,D5
00003A60  BA7C 0080               4297              CMP         #mask8,D5
00003A64  6700 0006               4298              BEQ         Addr6Cont
00003A68  6000 0022               4299              BRA         endMOVE
00003A6C                          4300  Addr6Cont        
00003A6C  43F9 00003CDA           4301              LEA         dec, A1             ; Output -
00003A72  103C 000E               4302              MOVE.B      #14, D0             ; command for trap call to display message
00003A76  4E4F                    4303              TRAP        #15                 ; trap call        
00003A78  6000 0002               4304              BRA         AddrReg7
00003A7C                          4305  
00003A7C                          4306  AddrReg7    
00003A7C  43F9 00003D85           4307              LEA         dispA7, A1          ; Output -
00003A82  103C 000E               4308              MOVE.B      #14, D0             ; command for trap call to display message
00003A86  4E4F                    4309              TRAP        #15                 ; trap call        
00003A88  6000 0002               4310              BRA         endMOVE
00003A8C                          4311  
00003A8C                          4312  endMOVE
00003A8C  4CDF 7EFF               4313              MOVEM.L  (SP)+, D0-D7/A1-A6
00003A90  4E75                    4314              RTS
00003A92                          4315  endMove1                                    ; Used if MOVEM has DR is 1
00003A92  4CDF 7EFF               4316              MOVEM.L  (SP)+, D0-D7/A1-A6
00003A96  4E75                    4317              RTS
00003A98                          4318  ***********************************************************************************************************
00003A98                          4319  *
00003A98                          4320  *                       Hex Decode
00003A98                          4321  *
00003A98                          4322  *this subroutine displays hex code stored in D1. It displays based on the number of 
00003A98                          4323  *It displays based on the number of hex to display which is stored in D0. If it is a
00003A98                          4324  *long or word to display, it will figure out the ascii character and add $37 if it
00003A98                          4325  *is a letter, and $30 if its a number. It will then load the character into D1 and 
00003A98                          4326  *display it via trap task 6 and loop however many times is needed, 4 or 8. If a word
00003A98                          4327  *needs to be displayed, it will roll the bits over so that, the hex are shifted by a word.
00003A98                          4328  *
00003A98                          4329  ***********************************************************************************************************
00003A98                          4330  
00003A98  48E7 FF7E               4331  outHex      MOVEM.L D0-D7/A1-A6, -(SP)
00003A9C  4243                    4332              CLR     D3
00003A9E  4244                    4333              CLR     D4
00003AA0  1800                    4334              MOVE.B  D0, D4
00003AA2  2601                    4335              MOVE.L  D1, D3
00003AA4  B03C 0004               4336              CMP.B   #4, D0
00003AA8  6700 0006               4337              BEQ     moveOver
00003AAC  6000 0006               4338              BRA     dispLOOP
00003AB0                          4339              
00003AB0  E19B                    4340  moveOver    ROL.L   #8,D3
00003AB2  E19B                    4341              ROL.L   #8,D3
00003AB4                          4342              
00003AB4  B83C 0000               4343  dispLOOP    CMP.B   #0, D4
00003AB8  6700 0042               4344              BEQ     endDispSub
00003ABC  E99B                    4345              ROL.L   #4, D3
00003ABE  4245                    4346              CLR     D5
00003AC0  1A03                    4347              MOVE.B  D3, D5 
00003AC2  CABC 0000000F           4348              AND.L   #$0F, D5
00003AC8  BA3C 000A               4349              CMP.B   #10, D5
00003ACC  6D00 0006               4350              BLT     DLnine
00003AD0  6000 0016               4351              BRA     DLetters
00003AD4                          4352              
00003AD4  0645 0030               4353  DLnine      ADD     #$30, D5
00003AD8  4241                    4354              CLR     D1
00003ADA  1205                    4355              MOVE.B  D5, D1
00003ADC  4240                    4356              CLR     D0
00003ADE  103C 0006               4357              MOVE.B  #6, D0
00003AE2  4E4F                    4358              TRAP    #15
00003AE4  5344                    4359              SUB     #1, D4
00003AE6  60CC                    4360              BRA     dispLOOP  
00003AE8                          4361   
00003AE8  0645 0037               4362  DLetters    ADD     #$37, D5
00003AEC  4241                    4363              CLR     D1
00003AEE  1205                    4364              MOVE.B  D5, D1
00003AF0  4240                    4365              CLR     D0
00003AF2  103C 0006               4366              MOVE.B  #6, D0
00003AF6  4E4F                    4367              TRAP    #15
00003AF8  5344                    4368              SUB     #1, D4
00003AFA  60B8                    4369              BRA     dispLOOP        
00003AFC                          4370  
00003AFC  4CDF 7EFF               4371  endDispSub  MOVEM.L  (SP)+, D0-D7/A1-A6
00003B00  4E75                    4372              RTS
00003B02                          4373  
00003B02                          4374              
00003B02                          4375  ***********************************************************************************************************
00003B02                          4376  *
00003B02                          4377  *                       IO Subroutine
00003B02                          4378  *
00003B02                          4379  *
00003B02                          4380  *   the following subroutine gets the string address from the user
00003B02                          4381  *   and converts it to Hex for a starting/ending address. it is done 
00003B02                          4382  *   by checking each byte at address A1, and converting it from ascii to 
00003B02                          4383  *   hex number. If the user enters an invalid character string, the
00003B02                          4384  *   program will have a simhalt.
00003B02                          4385  *
00003B02                          4386  ***********************************************************************************************************
00003B02                          4387  
00003B02  48E7 1F3E               4388  Address     MOVEM.L D3-D7/A2-A6, -(SP)
00003B06                          4389  
00003B06  4242                    4390  Retry       CLR     D2
00003B08  4243                    4391              CLR     D3
00003B0A  B23C 0004               4392              CMP.B   #4, D1
00003B0E  6700 000E               4393              BEQ     subLOOP
00003B12  B23C 0008               4394              CMP.B   #8, D1
00003B16  6700 0006               4395              BEQ     subLOOP
00003B1A  6000 0126               4396              BRA     ADDinvalid        
00003B1E                          4397          
00003B1E  E85C                    4398  subLOOP     ROR     #4, D4
00003B20  1404                    4399              MOVE.B  D4, D2
00003B22  4244                    4400              CLR     D4
00003B24  4245                    4401              CLR     D5
00003B26  B601                    4402              CMP.B   D1, D3
00003B28  6700 012E               4403              BEQ     endLOOP
00003B2C  5443                    4404              ADD.W   #2, D3
00003B2E  E19A                    4405              ROL.L   #8, D2
00003B30                          4406          
00003B30  E95C                    4407  bytLOOP     ROL     #4, D4
00003B32                          4408          
00003B32  0C11 0030               4409              CMP.B   #$30, (A1)
00003B36  6700 007E               4410              BEQ     hZero 
00003B3A  0C11 0031               4411              CMP.B   #$31, (A1)
00003B3E  6700 007E               4412              BEQ     hOne
00003B42  0C11 0032               4413              CMP.B   #$32, (A1)
00003B46  6700 007E               4414              BEQ     hTwo
00003B4A  0C11 0033               4415              CMP.B   #$33, (A1)
00003B4E  6700 007E               4416              BEQ     hThree
00003B52  0C11 0034               4417              CMP.B   #$34, (A1)
00003B56  6700 007E               4418              BEQ     hFour
00003B5A  0C11 0035               4419              CMP.B   #$35, (A1)
00003B5E  6700 007E               4420              BEQ     hFive
00003B62  0C11 0036               4421              CMP.B   #$36, (A1)
00003B66  6700 007E               4422              BEQ     hSix
00003B6A  0C11 0037               4423              CMP.B   #$37, (A1)
00003B6E  6700 007E               4424              BEQ     hSeven
00003B72  0C11 0038               4425              CMP.B   #$38, (A1)
00003B76  6700 007E               4426              BEQ     hEight
00003B7A  0C11 0039               4427              CMP.B   #$39, (A1)
00003B7E  6700 007E               4428              BEQ     hNine
00003B82  0C11 0041               4429              CMP.B   #$41, (A1)
00003B86  6700 007E               4430              BEQ     hA
00003B8A  0C11 0042               4431              CMP.B   #$42, (A1)
00003B8E  6700 007E               4432              BEQ     hB
00003B92  0C11 0043               4433              CMP.B   #$43, (A1)
00003B96  6700 007E               4434              BEQ     hC
00003B9A  0C11 0044               4435              CMP.B   #$44, (A1)
00003B9E  6700 007E               4436              BEQ     hD
00003BA2  0C11 0045               4437              CMP.B   #$45, (A1)
00003BA6  6700 007E               4438              BEQ     hE
00003BAA  0C11 0046               4439              CMP.B   #$46, (A1)
00003BAE  6700 007E               4440              BEQ     hF 
00003BB2  6000 F9BC               4441              BRA     invalid      
00003BB6  183C 0000               4442  hZero       MOVE.B  #$00, D4
00003BBA  6000 0076               4443              BRA     nextH
00003BBE  183C 0010               4444  hOne        MOVE.B  #$10, D4
00003BC2  6000 006E               4445              BRA     nextH
00003BC6  183C 0020               4446  hTwo        MOVE.B  #$20, D4
00003BCA  6000 0066               4447              BRA     nextH
00003BCE  183C 0030               4448  hThree      MOVE.B  #$30, D4
00003BD2  6000 005E               4449              BRA     nextH
00003BD6  183C 0040               4450  hFour       MOVE.B  #$40, D4
00003BDA  6000 0056               4451              BRA     nextH
00003BDE  183C 0050               4452  hFive       MOVE.B  #$50, D4
00003BE2  6000 004E               4453              BRA     nextH
00003BE6  183C 0060               4454  hSix        MOVE.B  #$60, D4
00003BEA  6000 0046               4455              BRA     nextH
00003BEE  183C 0070               4456  hSeven      MOVE.B  #$70, D4
00003BF2  6000 003E               4457              BRA     nextH
00003BF6  183C 0080               4458  hEight      MOVE.B  #$80, D4
00003BFA  6000 0036               4459              BRA     nextH
00003BFE  183C 0090               4460  hNine       MOVE.B  #$90, D4
00003C02  6000 002E               4461              BRA     nextH
00003C06  183C 00A0               4462  hA          MOVE.B  #$A0, D4
00003C0A  6000 0026               4463              BRA     nextH
00003C0E  183C 00B0               4464  hB          MOVE.B  #$B0, D4
00003C12  6000 001E               4465              BRA     nextH
00003C16  183C 00C0               4466  hC          MOVE.B  #$C0, D4
00003C1A  6000 0016               4467              BRA     nextH
00003C1E  183C 00D0               4468  hD          MOVE.B  #$D0, D4
00003C22  6000 000E               4469              BRA     nextH
00003C26  183C 00E0               4470  hE          MOVE.B  #$E0, D4
00003C2A  6000 0006               4471              BRA     nextH
00003C2E  183C 00F0               4472  hF          MOVE.B  #$F0, D4
00003C32                          4473  
00003C32  1019                    4474  nextH       MOVE.B  (A1)+, D0
00003C34  5245                    4475              ADD     #1, D5
00003C36  BA3C 0002               4476              CMP.B   #2, D5
00003C3A  6700 FEE2               4477              BEQ     subLOOP
00003C3E  6000 FEF0               4478              BRA     bytLOOP
00003C42                          4479          
00003C42  43F9 00003CAA           4480  ADDinvalid  LEA     errorMessage, A1
00003C48  103C 000E               4481              MOVE.B  #14, D0
00003C4C  4E4F                    4482              TRAP    #15    
00003C4E                          4483      
00003C4E  103C 0002               4484              MOVE.B  #2, D0
00003C52  4E4F                    4485              TRAP    #15
00003C54                          4486  
00003C54  6000 FEB0               4487              BRA     Retry
00003C58                          4488     
00003C58  4CDF 7CF8               4489  endLOOP     MOVEM.L  (SP)+, D3-D7/A2-A6
00003C5C  4E75                    4490              RTS
00003C5E                          4491  
00003C5E                          4492  printInvalid
00003C5E  1218                    4493              MOVE.B  (A0)+,D1
00003C60  6000 D3DE               4494              BRA     LOOP
00003C64                          4495  
00003C64                          4496  endPROG    
00003C64                          4497  
00003C64  FFFF FFFF               4498      SIMHALT                             ; halt simulator
00003C68                          4499  
00003C68                          4500  ***********************************************************************************************************
00003C68                          4501  *
00003C68                          4502  *                       IO Strings
00003C68                          4503  *           
00003C68                          4504  *       This section holds all of the various strings to output to the console.
00003C68                          4505  *
00003C68                          4506  ***********************************************************************************************************
00003C68                          4507  
00003C68= 45 6E 74 65 72 20 ...   4508  startingMessage DC.B    'Enter Starting Address (in hex): ', 0
00003C8A= 45 6E 74 65 72 20 ...   4509  endingMessage   DC.B    'Enter Ending Address (in hex): ', 0
00003CAA= 49 6E 63 6F 72 72 ...   4510  errorMessage    DC.B    'Incorrect Address, try again: ', 0
00003CC9                          4511  
00003CC9= 20 0D 0A 00             4512  newLine         DC.B    ' ', CR, LF, 0
00003CCD= 20 20 00                4513  space           DC.B    '  ', 0
00003CD0                          4514  
00003CD0= 23 00                   4515  hashTag         DC.B    '#', 0
00003CD2= 24 00                   4516  dispHex         DC.B    '$', 0
00003CD4= 2C 00                   4517  comma           DC.B    ',', 0
00003CD6                          4518  
00003CD6= 28 00                   4519  opPer           DC.B    '(', 0
00003CD8= 29 00                   4520  clPer           DC.B    ')', 0
00003CDA= 2D 00                   4521  dec             DC.B    '-', 0
00003CDC= 2B 00                   4522  inc             DC.B    '+', 0
00003CDE                          4523  
00003CDE= 4F 52 49 00             4524  ORImatch        DC.B    'ORI', 0
00003CE2= 43 4D 50 49 00          4525  CMPImatch       DC.B    'CMPI', 0
00003CE7= 42 43 4C 52 00          4526  BCLRmatch       DC.B    'BCLR', 0
00003CEC= 4D 4F 56 45 00          4527  MOVEmatch       DC.B    'MOVE', 0
00003CF1= 4D 4F 56 45 41 00       4528  MOVEAmatch      DC.B    'MOVEA', 0
00003CF7= 4E 45 47 00             4529  NEGmatch        DC.B    'NEG', 0
00003CFB= 52 54 53 00             4530  RTSmatch        DC.B    'RTS', 0
00003CFF= 4A 53 52 00             4531  JSRmatch        DC.B    'JSR', 0
00003D03= 4D 4F 56 45 4D 00       4532  MOVEMmatch      DC.B    'MOVEM', 0
00003D09= 4C 45 41 00             4533  LEAmatch        DC.B    'LEA', 0
00003D0D= 53 55 42 51 00          4534  SUBQmatch       DC.B    'SUBQ', 0
00003D12= 42 52 41 00             4535  BRAmatch        DC.B    'BRA', 0
00003D16= 42 43 53 00             4536  BCSmatch        DC.B    'BCS', 0
00003D1A= 42 56 43 00             4537  BVCmatch        DC.B    'BVC', 0
00003D1E= 42 47 45 00             4538  BGEmatch        DC.B    'BGE', 0
00003D22= 42 4C 54 00             4539  BLTmatch        DC.B    'BLT', 0
00003D26= 44 49 56 53 00          4540  DIVSmatch       DC.B    'DIVS', 0
00003D2B= 4F 52 00                4541  ORmatch         DC.B    'OR', 0
00003D2E= 53 55 42 00             4542  SUBmatch        DC.B    'SUB', 0
00003D32= 45 4F 52 00             4543  EORmatch        DC.B    'EOR', 0
00003D36= 43 4D 50 00             4544  CMPmatch        DC.B    'CMP', 0
00003D3A= 4D 55 4C 53 00          4545  MULSmatch       DC.B    'MULS', 0
00003D3F= 41 44 44 00             4546  ADDmatch        DC.B    'ADD', 0
00003D43= 41 44 44 41 00          4547  ADDAmatch       DC.B    'ADDA', 0
00003D48= 4C 53 52 00             4548  LSRmatch        DC.B    'LSR', 0
00003D4C= 4C 53 4C 00             4549  LSLmatch        DC.B    'LSL', 0
00003D50= 41 53 52 00             4550  ASRmatch        DC.B    'ASR', 0
00003D54= 41 53 4C 00             4551  ASLmatch        DC.B    'ASL', 0
00003D58= 52 4F 52 00             4552  RORmatch        DC.B    'ROR', 0
00003D5C= 52 4F 4C 00             4553  ROLmatch        DC.B    'ROL', 0
00003D60                          4554  
00003D60= 2F 00                   4555  slash           DC.B    '/', 0
00003D62= 28 53 50 29 00          4556  stack           DC.B    '(SP)', 0
00003D67                          4557   
00003D67= 2E 42 00                4558  dispByte        DC.B    '.B', 0
00003D6A= 2E 57 00                4559  dispWord        DC.B    '.W', 0
00003D6D= 2E 4C 00                4560  dispLong        DC.B    '.L', 0
00003D70                          4561  
00003D70= 41 30 00                4562  dispA0          DC.B    'A0', 0
00003D73= 41 31 00                4563  dispA1          DC.B    'A1', 0
00003D76= 41 32 00                4564  dispA2          DC.B    'A2', 0
00003D79= 41 33 00                4565  dispA3          DC.B    'A3', 0
00003D7C= 41 34 00                4566  dispA4          DC.B    'A4', 0
00003D7F= 41 35 00                4567  dispA5          DC.B    'A5', 0
00003D82= 41 36 00                4568  dispA6          DC.B    'A6', 0
00003D85= 41 37 00                4569  dispA7          DC.B    'A7', 0
00003D88                          4570  
00003D88= 44 00                   4571  dispD           DC.B    'D',0
00003D8A= 44 30 00                4572  dispD0          DC.B    'D0', 0
00003D8D= 44 31 00                4573  dispD1          DC.B    'D1', 0
00003D90= 44 32 00                4574  dispD2          DC.B    'D2', 0
00003D93= 44 33 00                4575  dispD3          DC.B    'D3', 0
00003D96= 44 34 00                4576  dispD4          DC.B    'D4', 0
00003D99= 44 35 00                4577  dispD5          DC.B    'D5', 0
00003D9C= 44 36 00                4578  dispD6          DC.B    'D6', 0
00003D9F= 44 37 00                4579  dispD7          DC.B    'D7', 0 
00003DA2                          4580   
00003DA2                          4581             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             34F0
ABSSHORT            34B8
ADDAMATCH           3D43
ADDINVALID          3C42
ADDMATCH            3D3F
ADDR0CONT           38EC
ADDR1CONT           392C
ADDR2CONT           396C
ADDR3CONT           39AC
ADDR4CONT           39EC
ADDR5CONT           3A2C
ADDR6CONT           3A6C
ADDRESS             3B02
ADDRREG0            38CC
ADDRREG1            38FC
ADDRREG2            393C
ADDRREG3            397C
ADDRREG4            39BC
ADDRREG5            39FC
ADDRREG6            3A3C
ADDRREG7            3A7C
ASLMATCH            3D54
ASRMATCH            3D50
BCLRMATCH           3CE7
BCSMATCH            3D16
BGEMATCH            3D1E
BLTMATCH            3D22
BRAEIGHT            1142
BRAELEVEN           1160
BRAFIVE             1112
BRAFOUR             10F6
BRAFOURTEEN         11D0
BRAMATCH            3D12
BRANINE             115C
BRAONE              10EA
BRASIX              1116
BRATHIRTEEN         117E
BRATHREE            10F2
BRATWELVE           117A
BRATWO              10EE
BRAZERO             10BA
BVCMATCH            3D1A
BYTLOOP             3B30
CHECKDR             35C2
CLPER               3CD8
CMPIMATCH           3CE2
CMPMATCH            3D36
COMMA               3CD4
CR                  D
DATAREG0            3676
DATAREG1            36A6
DATAREG2            36E6
DATAREG3            3726
DATAREG4            3766
DATAREG5            37A6
DATAREG6            37E6
DATAREG7            3826
DEC                 3CDA
DISPA0              3D70
DISPA1              3D73
DISPA2              3D76
DISPA3              3D79
DISPA4              3D7C
DISPA5              3D7F
DISPA6              3D82
DISPA7              3D85
DISPBYTE            3D67
DISPD               3D88
DISPD0              3D8A
DISPD1              3D8D
DISPD2              3D90
DISPD3              3D93
DISPD4              3D96
DISPD5              3D99
DISPD6              3D9C
DISPD7              3D9F
DISPHEX             3CD2
DISPIMM             3528
DISPLAYA0           3030
DISPLAYA0A          30FC
DISPLAYA0D          33C0
DISPLAYA0P          3228
DISPLAYA1           3040
DISPLAYA1A          3118
DISPLAYA1D          33DC
DISPLAYA1P          3250
DISPLAYA2           3050
DISPLAYA2A          3134
DISPLAYA2D          33F8
DISPLAYA2P          3278
DISPLAYA3           3060
DISPLAYA3A          3150
DISPLAYA3D          3414
DISPLAYA3P          32A0
DISPLAYA4           3070
DISPLAYA4A          316C
DISPLAYA4D          3430
DISPLAYA4P          32C8
DISPLAYA5           3080
DISPLAYA5A          3188
DISPLAYA5D          344C
DISPLAYA5P          32F0
DISPLAYA6           3090
DISPLAYA6A          31A4
DISPLAYA6D          3468
DISPLAYA6P          3318
DISPLAYA7           30A0
DISPLAYA7A          31C0
DISPLAYA7D          3484
DISPLAYA7P          3340
DISPLAYD0           2F70
DISPLAYD1           2F80
DISPLAYD2           2F90
DISPLAYD3           2FA0
DISPLAYD4           2FB0
DISPLAYD5           2FC0
DISPLAYD6           2FD0
DISPLAYD7           2FE0
DISPLAYEIGHT        2EE8
DISPLONG            3D6D
DISPLOOP            3AB4
DISPWORD            3D6A
DIVSMATCH           3D26
DLETTERS            3AE8
DLNINE              3AD4
EIGHT               8
ELEVEN              B
ENDDISPSUB          3AFC
ENDINGMESSAGE       3C8A
ENDLOOP             3C58
ENDMOVE             3A8C
ENDMOVE1            3A92
ENDPROG             3C64
ENDSUB              3570
ENDSUBROUTINE       2EF2
EORMATCH            3D32
ERRORMESSAGE        3CAA
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HA                  3C06
HASHTAG             3CD0
HB                  3C0E
HC                  3C16
HD                  3C1E
HE                  3C26
HEIGHT              3BF6
HF                  3C2E
HFIVE               3BDE
HFOUR               3BD6
HNINE               3BFE
HONE                3BBE
HSEVEN              3BEE
HSIX                3BE6
HTHREE              3BCE
HTWO                3BC6
HZERO               3BB6
IMMLONG             355C
INC                 3CDC
INVALID             3570
JSRMATCH            3CFF
LEAMATCH            3D09
LF                  A
LONGSKIP            356C
LOOP                1040
LSLMATCH            3D4C
LSRMATCH            3D48
MASK0               0
MASK1               1
MASK2               2
MASK3               4
MASK4               8
MASK5               10
MASK6               20
MASK7               40
MASK8               80
MASKA               5
MASKB               A
MASKC               14
MASKD               28
MASKE               50
MASKF               A0
MEMSB               2682
MEMSHIFTIMM         2ECE
MEMSHIFTS           11EA
MEMSL               2B96
MEMSW               290C
MOVEAMATCH          3CF1
MOVEMATCH           3CEC
MOVEMBRA            3576
MOVEML              35A6
MOVEMMATCH          3D03
MOVEMW              358A
MOVEOVER            3AB0
MULSMATCH           3D3A
NEGMATCH            3CF7
NEWLINE             3CC9
NEXTH               3C32
NINE                9
ONE                 1
OPADDAL             244A
OPADDAW             23DA
OPADDB              228E
OPADDL              2366
OPADDW              22FA
OPASBI              26C0
OPASBR              2722
OPASL               24BA
OPASLBI             2700
OPASLBR             2762
OPASLI              2BD4
OPASLLI             2C14
OPASLLR             2C76
OPASLR              2C36
OPASLWI             298A
OPASLWR             29EC
OPASR               2506
OPASRBI             26DE
OPASRBR             2740
OPASRLI             2BF2
OPASRLR             2C54
OPASRWI             2968
OPASRWR             29CA
OPASWI              294A
OPASWR              29AC
OPBCLR              153A
OPBCS               20DA
OPBGE               2142
OPBLT               2176
OPBRA               20A2
OPBVC               210E
OPCMP               1E0A
OPCMPB              1E3C
OPCMPI              13AC
OPCMPIB             13CE
OPCMPIL             14C4
OPCMPIW             1440
OPCMPL              1EF0
OPCMPW              1E96
OPDIVS              1C5E
OPDYNBCLR           159E
OPEOR               1CBC
OPEORB              1CEA
OPEORL              1DAA
OPEORW              1D4A
OPJSR               198A
OPLEA               1A8C
OPLSBI              2784
OPLSBR              27E6
OPLSL               2552
OPLSLBI             27C4
OPLSLBR             2826
OPLSLI              2C98
OPLSLLI             2CD8
OPLSLLR             2D3A
OPLSLR              2CFA
OPLSLWI             2A4E
OPLSLWR             2AB0
OPLSR               259E
OPLSRBI             27A2
OPLSRBR             2804
OPLSRLI             2CB6
OPLSRLR             2D18
OPLSRWI             2A2C
OPLSRWR             2A8E
OPLSWI              2A0E
OPLSWR              2A70
OPMOVEAL            1724
OPMOVEAW            181A
OPMOVEB             160C
OPMOVEL             1690
OPMOVEM             1A02
OPMOVEMLEA          19E6
OPMOVEW             178C
OPMULS              222A
OPNEG               1882
OPNEGB              18B0
OPNEGL              18F0
OPNEGW              1930
OPOR                1B0C
OPORB               1B4A
OPORI               1244
OPORIB              1272
OPORIL              133E
OPORIW              12D8
OPORL               1C00
OPORW               1BA4
OPPER               3CD6
OPROBI              2848
OPROBR              28AA
OPROL               25EA
OPROLBI             2888
OPROLBR             28EA
OPROLI              2D5C
OPROLLI             2D9C
OPROLLR             2DFE
OPROLR              2DBE
OPROLWI             2B12
OPROLWR             2B74
OPROR               2636
OPRORBI             2866
OPRORBR             28C8
OPRORLI             2D7A
OPRORLR             2DDC
OPRORWI             2AF0
OPRORWR             2B52
OPROWI              2AD2
OPROWR              2B34
OPRTS               19CA
OPRTSJSR            1970
OPSUB               1F4A
OPSUBB              1F94
OPSUBL              2048
OPSUBQ              21AA
OPSUBQB             21D6
OPSUBQL             220A
OPSUBQW             21F0
OPSUBW              1FEE
ORIMATCH            3CDE
ORMATCH             3D2B
OUTHEX              3A98
PADDRDEC            3368
PADDRDIR            30B0
PADDRPOST           31DC
PADDRREG            2FF0
PDATAREG            2F30
PHEX                34A0
PRINTEA             2EF8
PRINTINVALID        3C5E
PRINTMEM            3836
PRINTMEMNOW         383A
PRINTREGMEM         35EA
PRINTSTACK          35D6
PRNTIMM             2E20
PRNTREG             2E7C
REG0CONT            3696
REG1CONT            36D6
REG2CONT            3716
REG3CONT            3756
REG4CONT            3796
REG5CONT            37D6
REG6CONT            3816
REGSHIFTS           1228
RETRY               3B06
ROLMATCH            3D5C
RORMATCH            3D58
RTSMATCH            3CFB
SECNIB              F
SEVEN               7
SIX                 6
SKIPPRINTEA         1A7C
SLASH               3D60
SPACE               3CCD
STACK               3D62
START               1000
STARTINGMESSAGE     3C68
SUBLOOP             3B1E
SUBMATCH            3D2E
SUBQMATCH           3D0D
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
