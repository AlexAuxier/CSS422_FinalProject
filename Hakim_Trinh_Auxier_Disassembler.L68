00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 12/11/2014 1:00:29 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9       
00000000  =00000000                 10  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 11  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 12  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 13  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 14  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 15  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 16  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 17  seven       EQU     $07
00000000  =00000008                 18  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 19  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 20  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 21  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 22  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 23  fourteen    EQU     $0E         ; defined hex value 14
00000000                            24  
00000000  =00000000                 25  mask0       EQU     %00000000
00000000  =00000001                 26  mask1       EQU     %00000001
00000000  =00000002                 27  mask2       EQU     %00000010
00000000  =00000004                 28  mask3       EQU     %00000100
00000000  =00000008                 29  mask4       EQU     %00001000
00000000  =00000010                 30  mask5       EQU     %00010000
00000000  =00000020                 31  mask6       EQU     %00100000
00000000  =00000040                 32  mask7       EQU     %01000000
00000000  =00000080                 33  mask8       EQU     %10000000
00000000                            34  
00000000  =00000005                 35  maskA       EQU     %00000101
00000000  =0000000A                 36  maskB       EQU     %00001010
00000000  =00000014                 37  maskC       EQU     %00010100
00000000  =00000028                 38  maskD       EQU     %00101000
00000000  =00000050                 39  maskE       EQU     %01010000
00000000  =000000A0                 40  maskF       EQU     %10100000
00000000                            41  
00000000  =000000F0                 42  firstNib    EQU     $F0
00000000  =0000000F                 43  secNib      EQU     $0F
00000000                            44               
00001000                            45              ORG    $1000
00001000                            46  START:                                  ; first instruction of program
00001000                            47        
00001000  43F9 00003C62             48          LEA     startingMessage, A1
00001006  103C 000E                 49          MOVE.B  #14, D0
0000100A  4E4F                      50          TRAP    #15    
0000100C                            51      
0000100C  103C 0002                 52          MOVE.B  #2, D0
00001010  4E4F                      53          TRAP    #15
00001012                            54      
00001012  4EB9 00003B02             55          JSR     Address
00001018  2042                      56          MOVEA.L D2, A0
0000101A                            57          
0000101A  43F9 00003C84             58          LEA     endingMessage, A1
00001020  103C 000E                 59          MOVE.B  #14, D0
00001024  4E4F                      60          TRAP    #15    
00001026                            61      
00001026  103C 0002                 62          MOVE.B  #2, D0
0000102A  4E4F                      63          TRAP    #15
0000102C                            64      
0000102C  4EB9 00003B02             65          JSR     Address
00001032  2442                      66          MOVEA.L D2, A2
00001034                            67          
00001034  43F9 00003CC3             68          LEA     newline, A1
0000103A  103C 000E                 69          MOVE.B  #14, D0
0000103E  4E4F                      70          TRAP    #15 
00001040                            71            
00001040  4241                      72  LOOP    CLR         D1                  ; clear out D1
00001042  4242                      73          CLR         D2                  ; clear out D2
00001044  B1CA                      74          CMPA.L      A2, A0              ; compare starting and ending addresses
00001046  6E00 2C16                 75          BGT         endProg             ; if A0 > A1, we've finished, end program
0000104A  1218                      76          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
0000104C  1401                      77          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000104E  E882                      78          ASR.L       #four, D2           ; get first nibble in D2
00001050                            79          
00001050  B43C 0000                 80          CMP.B       #zero, D2           ; compare with 0
00001054  6700 0064                 81          BEQ         braZero             ; branch out to zero method
00001058  B43C 0001                 82          CMP.B       #one, D2            ; compare with 1
0000105C  6700 008C                 83          BEQ         braOne              ; branch out to one method
00001060  B43C 0002                 84          CMP.B       #two, D2            ; compare with 2    
00001064  6700 0088                 85          BEQ         braTwo              ; branch out to two method
00001068  B43C 0003                 86          CMP.B       #three, D2          ; compare with 3
0000106C  6700 0084                 87          BEQ         braThree            ; branch out to three method
00001070  B43C 0004                 88          CMP.B       #four, D2           ; compare with 4
00001074  6700 0080                 89          BEQ         braFour             ; branch out to four method
00001078  B43C 0005                 90          CMP.B       #five, D2           ; compare with 5
0000107C  6700 0094                 91          BEQ         braFive             ; branch out to five method
00001080  B43C 0006                 92          CMP.B       #six, D2            ; compare with 6
00001084  6700 0090                 93          BEQ         braSix              ; branch out to six method
00001088  B43C 0008                 94          CMP.B       #eight, D2          ; compare with 8
0000108C  6700 00B4                 95          BEQ         braEight            ; branch out to eight method
00001090  B43C 0009                 96          CMP.B       #nine, D2           ; compare with 9
00001094  6700 00C6                 97          BEQ         braNine             ; branch out to nine method
00001098  B43C 000B                 98          CMP.B       #eleven, D2         ; compare with 11
0000109C  6700 00C2                 99          BEQ         braEleven           ; branch out to eleven method
000010A0  B43C 000C                100          CMP.B       #twelve, D2         ; compare with 12
000010A4  6700 00D4                101          BEQ         braTwelve           ; branch out to twelve method
000010A8  B43C 000D                102          CMP.B       #thirteen, D2       ; compare with 13
000010AC  6700 00D0                103          BEQ         braThirteen         ; branch out to thirteen method
000010B0  B43C 000E                104          CMP.B       #fourteen, D2       ; compare with 14
000010B4  6700 011A                105          BEQ         braFourteen         ; branch out to fourteen method
000010B8  6086                     106          BRA         loop
000010BA                           107  
000010BA  4242                     108  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
000010BC  1401                     109          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010BE  C43C 000F                110          AND.B       #secNib, D2             ; set first nibble to 0
000010C2                           111   
000010C2  B43C 0000                112          CMP.B       #zero, D2           ; compare second nibble to 0
000010C6  6700 017C                113          BEQ         opORI               ; branch to ORI method
000010CA  B43C 000C                114          CMP.B       #twelve, D2         ; compare second nibble to 12
000010CE  6700 02DC                115          BEQ         opCMPI              ; branch to CMPI method
000010D2  B43C 0008                116          CMP.B       #eight,D2           ; Test for static BCLR
000010D6  6700 0462                117          BEQ         opBCLR
000010DA  C47C 0001                118          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010DE  B43C 0001                119          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010E2  6700 04BA                120          BEQ         opDynBCLR
000010E6  6000 2B76                121          BRA         printInvalid
000010EA                           122          
000010EA                           123          
000010EA  6000 0520                124  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010EE                           125  
000010EE  6000 05A0                126  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010F2                           127  
000010F2                           128  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010F2                           129  
000010F2  6000 0698                130          BRA         opMOVEW
000010F6                           131  
000010F6  4242                     132  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010F8  1401                     133          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010FA  C43C 000F                134          AND.B       #secNib, D2             ; set first nibble to 0
000010FE                           135   
000010FE  B43C 0004                136          CMP.B       #four, D2           ; compare second nibble to 4
00001102  6700 077E                137          BEQ         opNEG               ; branch to NEG method
00001106  B43C 000E                138          CMP.B       #fourteen, D2       ; compare second nibble to E
0000110A  6700 0864                139          BEQ         opRTSJSR            ; branch to JSR or RTS method
0000110E  6000 08D6                140          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
00001112                           141  
00001112  6000 1096                142  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
00001116                           143  
00001116  4242                     144  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
00001118  1401                     145          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000111A  C43C 000F                146          AND.B       #$0F, D2             ; set first nibble to 0
0000111E                           147   
0000111E  B43C 0000                148          CMP.B       #zero, D2           ; compare second nibble to 0
00001122  6700 0F7E                149          BEQ         opBRA               ; branch to BRA method
00001126  B43C 0005                150          CMP.B       #five, D2           ; compare second nibble to 5
0000112A  6700 0FAE                151          BEQ         opBCS               ; branch to BCS method
0000112E  B43C 0008                152          CMP.B       #eight, D2          ; compare second nibble to 8
00001132  6700 0FDA                153          BEQ         opBVC               ; branch to BCS method
00001136  B43C 000C                154          CMP.B       #twelve, D2         ; compare second nibble to 12
0000113A  6700 1006                155          BEQ         opBGE               ; branch to BGE method
0000113E  6000 1036                156          BRA         opBLT               ; otherwise, branch to BLT method
00001142                           157  
00001142                           158  braEight                                ; there are two opCodes available DIVS, or OR
00001142  4242                     159              CLR     D2
00001144  E141                     160              ASL     #8,D1
00001146  1218                     161              MOVE.B  (A0)+,D1
00001148  3401                     162              MOVE.W  D1,D2
0000114A  EC42                     163              ASR     #six,D2
0000114C  C47C 0007                164              AND     #$07,D2
00001150  B43C 0007                165              CMP.B   #seven,D2
00001154  6700 0B08                166              BEQ     opDIVS              ; If bits 8 - 6 are equal to 7, we have DIVS
00001158  6000 09B2                167              BRA     opOR                ; else opcode is OR
0000115C                           168  
0000115C  6000 0DEC                169  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
00001160                           170  
00001160                           171  braEleven                               ; there are two opCodes available EOR, or CMP
00001160  4242                     172              CLR     D2
00001162  E141                     173              ASL     #8,D1
00001164  1218                     174              MOVE.B  (A0)+,D1
00001166  3401                     175              MOVE.W  D1,D2
00001168  EC42                     176              ASR     #six,D2
0000116A  C47C 0007                177              AND     #$07,D2
0000116E  B43C 0003                178              CMP.B   #three,D2
00001172  6D00 0C96                179              BLT     opCMP               ; If opmode bits are less than 3, we have CMP
00001176  6000 0B44                180              BRA     opEOR               ; Else its EOR
0000117A                           181  
0000117A  6000 10AE                182  braTwelve   BRA         opMULS              ; we know that there is only one opcode that is MULS    
0000117E                           183    
0000117E  E141                     184  braThirteen ASL         #eight, D1          ; we need the whole word to compare between add and adda, so move over the current byte 
00001180  1218                     185              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
00001182                           186              
00001182  4242                     187              CLR         D2                  ; clear D2
00001184  3401                     188              MOVE.W      D1, D2              ; copy opcode to D2
00001186  EC42                     189              ASR         #six, D2            ; shift the bits right to get size and type
00001188  C47C 0007                190              AND         #seven,D2           ; clear out all but first 3 bits
0000118C                           191              
0000118C  B43C 0000                192              CMP.B       #zero,D2            ; compare 0 to D2
00001190  6700 10FC                193              BEQ         opADDB              ; we know its ADDB
00001194  B43C 0001                194              CMP.B       #one, D2            ; compare 1 to D2
00001198  6700 1160                195              BEQ         opADDW              ; we know its ADDW
0000119C  B43C 0002                196              CMP.B       #two, D2            ; compare 2 to D2
000011A0  6700 11C4                197              BEQ         opADDL              ; we know its ADDL
000011A4  B43C 0003                198              CMP.B       #three, D2          ; compare 3 to D2
000011A8  6700 1230                199              BEQ         opADDAW             ; we know its ADDAW
000011AC  B43C 0004                200              CMP.B       #four, D2           ; compare 4 to D2
000011B0  6700 10DC                201              BEQ         opADDB              ; we know its ADDB
000011B4  B43C 0005                202              CMP.B       #five, D2           ; compare 5 to D2
000011B8  6700 1140                203              BEQ         opADDW              ; we know its ADDW
000011BC  B43C 0006                204              CMP.B       #six, D2            ; compare 6 to D2
000011C0  6700 11A4                205              BEQ         opADDL              ; we know its ADDL
000011C4  B43C 0007                206              CMP.B       #seven, D2          ; compare 7 to D2
000011C8  6700 1280                207              BEQ         opADDAL             ; we know its ADDAL
000011CC  6000 2A90                208              BRA         printInvalid        ; invalid opcode
000011D0                           209               
000011D0  E141                     210  braFourteen ASL.W       #eight,D1           ; we need the whole word to compare between add and adda, so move over the current byte
000011D2  1218                     211              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
000011D4                           212              
000011D4  4242                     213              CLR         D2                  ; clear D2
000011D6  3401                     214              MOVE.W      D1, D2              ; copy opcode to D2
000011D8  EC42                     215              ASR         #six, D2            ; shift the bits right to get size
000011DA  C47C 0003                216              AND         #03,D2
000011DE                           217          
000011DE  B43C 0003                218              CMP.B       #three, D2          ; if the size is three, we are shifting memory
000011E2  6700 0006                219              BEQ         memShifts           ; go to memory shift
000011E6  6000 0040                220              BRA         regShifts           ; else go to register shift
000011EA                           221  
000011EA  4242                     222  memShifts   CLR         D2             
000011EC  3401                     223              MOVE.W      D1, D2              ; clear out D2 and copy D1 back in
000011EE  E082                     224              ASR.L       #eight,D2           ; move to get first byte back
000011F0  C47C 000F                225              AND         #secNib, D2         ; set first nibble to 0
000011F4                           226   
000011F4  B43C 0000                227              CMP.B       #zero, D2           ; compare second nibble to 0
000011F8  6700 130C                228              BEQ         opASR               ; branch to ASR method
000011FC  B43C 0001                229              CMP.B       #one, D2            ; compare second nibble to 1
00001200  6700 12B8                230              BEQ         opASL               ; branch to ASL method
00001204  B43C 0002                231              CMP.B       #two, D2            ; compare second nibble to 2
00001208  6700 1394                232              BEQ         opLSR               ; branch to LSR method
0000120C  B43C 0003                233              CMP.B       #three, D2          ; compare second nibble to 3
00001210  6700 1340                234              BEQ         opLSL               ; branch to LSL method
00001214  B43C 0006                235              CMP.B       #six, D2            ; compare second nibble to 6
00001218  6700 141C                236              BEQ         opROR               ; branch to ROR method
0000121C  B43C 0007                237              CMP.B       #seven, D2          ; compare second nibble to 7
00001220  6700 13C8                238              BEQ         opROL               ; branch to ROL method
00001224  6000 2A38                239              BRA         printInvalid        ; otherwise, invalid
00001228                           240              
00001228  B43C 0000                241  regShifts   CMP.B       #zero, D2           ; if size is 0, we are shifting a byte
0000122C  6700 1454                242              BEQ         memSB               ; branch to register shift byte
00001230  B43C 0001                243              CMP.B       #one, D2            ; if size is 1, we are shifting a word
00001234  6700 16D6                244              BEQ         memSW               ; branch to register shift word
00001238  B43C 0002                245              CMP.B       #two, D2            ; if size is 1, we are shifting a long
0000123C  6700 1958                246              BEQ         memSL               ; branch to register shift long
00001240  6000 2A1C                247              BRA         printInvalid        ; otherwise, invalid
00001244                           248  
00001244  43F9 00003CD8            249  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
0000124A  103C 000E                250          MOVE.B      #14, D0             ; command for trap call to display message
0000124E  4E4F                     251          TRAP        #15                 ; trap call
00001250                           252          
00001250  1218                     253          MOVE.B      (A0)+, D1
00001252  1401                     254          MOVE.B      D1,D2               ; copy data over
00001254  EC42                     255          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001256  B43C 0000                256          CMP.B       #zero,D2
0000125A  6700 0016                257          BEQ         opORIB
0000125E  B43C 0001                258          CMP.B       #one,D2
00001262  6700 0074                259          BEQ         opORIW
00001266  B43C 0002                260          CMP.B       #two,D2
0000126A  6700 00D2                261          BEQ         opORIL
0000126E                           262          
0000126E  6000 29EE                263          BRA         printInvalid
00001272                           264          
00001272  43F9 00003D61            265  opORIB  LEA         dispByte, A1        ; Display byte
00001278  103C 000E                266          MOVE.B      #14, D0             ; command for trap call to display message
0000127C  4E4F                     267          TRAP        #15                 ; trap call
0000127E                           268          
0000127E  43F9 00003CC7            269          LEA         space, A1           ; Display space
00001284  103C 000E                270          MOVE.B      #14, D0             ; command for trap call to display message
00001288  4E4F                     271          TRAP        #15                 ; trap call
0000128A                           272          
0000128A  4244                     273          CLR         D4
0000128C  1801                     274          MOVE.B      D1,D4
0000128E  E644                     275          ASR         #three,D4
00001290  C87C 0007                276          AND         #seven,D4
00001294  4245                     277          CLR         D5        
00001296  1A01                     278          MOVE.B      D1,D5
00001298  CA7C 0007                279          AND         #seven,D5
0000129C                           280          
0000129C  4243                     281          CLR         D3
0000129E  4242                     282          CLR         D2
000012A0  163C 0004                283          MOVE.B      #four,D3
000012A4  143C 0007                284          MOVE.B      #seven,D2
000012A8                           285  
000012A8  4EB9 00002EF8            286          JSR         printEA
000012AE                           287          
000012AE  43F9 00003CCE            288          LEA         comma, A1           ; Display space
000012B4  103C 000E                289          MOVE.B      #14, D0             ; command for trap call to display message
000012B8  4E4F                     290          TRAP        #15                 ; trap call
000012BA                           291          
000012BA  4242                     292          CLR         D2
000012BC  4243                     293          CLR         D3
000012BE  1404                     294          MOVE.B      D4,D2
000012C0  1605                     295          MOVE.B      D5,D3
000012C2                           296          
000012C2  4EB9 00002EF8            297          JSR         printEA
000012C8                           298          
000012C8  43F9 00003CC3            299          LEA         newLine, A1           ; Display space
000012CE  103C 000E                300          MOVE.B      #14, D0             ; command for trap call to display message
000012D2  4E4F                     301          TRAP        #15                 ; trap call
000012D4                           302          
000012D4  6000 FD6A                303          BRA         LOOP
000012D8                           304          
000012D8                           305          
000012D8  43F9 00003D64            306  opORIW  LEA         dispWord, A1        ; Display byte
000012DE  103C 000E                307          MOVE.B      #14, D0             ; command for trap call to display message
000012E2  4E4F                     308          TRAP        #15                 ; trap call
000012E4                           309          
000012E4  43F9 00003CC7            310          LEA         space, A1           ; Display space
000012EA  103C 000E                311          MOVE.B      #14, D0             ; command for trap call to display message
000012EE  4E4F                     312          TRAP        #15                 ; trap call
000012F0                           313          
000012F0  4244                     314          CLR         D4
000012F2  1801                     315          MOVE.B      D1,D4
000012F4  E644                     316          ASR         #three,D4
000012F6  C87C 0007                317          AND         #seven,D4
000012FA  4245                     318          CLR         D5        
000012FC  1A01                     319          MOVE.B      D1,D5
000012FE  CA7C 0007                320          AND         #seven,D5
00001302                           321          
00001302  4243                     322          CLR         D3
00001304  4242                     323          CLR         D2
00001306  163C 0004                324          MOVE.B      #four,D3
0000130A  143C 0007                325          MOVE.B      #seven,D2
0000130E                           326          
0000130E  4EB9 00002EF8            327          JSR         printEA
00001314                           328          
00001314  43F9 00003CCE            329          LEA         comma, A1           ; Display space
0000131A  103C 000E                330          MOVE.B      #14, D0             ; command for trap call to display message
0000131E  4E4F                     331          TRAP        #15                 ; trap call
00001320                           332          
00001320  4242                     333          CLR         D2
00001322  4243                     334          CLR         D3
00001324  1404                     335          MOVE.B      D4,D2
00001326  1605                     336          MOVE.B      D5,D3
00001328                           337                  
00001328  4EB9 00002EF8            338          JSR         printEA
0000132E                           339          
0000132E  43F9 00003CC3            340          LEA         newLine, A1           ; Display space
00001334  103C 000E                341          MOVE.B      #14, D0             ; command for trap call to display message
00001338  4E4F                     342          TRAP        #15                 ; trap call
0000133A                           343          
0000133A  6000 FD04                344          BRA         LOOP
0000133E                           345       
0000133E  43F9 00003D67            346  opORIL  LEA         dispLong, A1        ; Display byte
00001344  103C 000E                347          MOVE.B      #14, D0             ; command for trap call to display message
00001348  4E4F                     348          TRAP        #15                 ; trap call
0000134A                           349          
0000134A  43F9 00003CC7            350          LEA         space, A1           ; Display space
00001350  103C 000E                351          MOVE.B      #14, D0             ; command for trap call to display message
00001354  4E4F                     352          TRAP        #15                 ; trap call
00001356                           353          
00001356  4244                     354          CLR         D4
00001358  1801                     355          MOVE.B      D1,D4
0000135A  E644                     356          ASR         #three,D4
0000135C  C87C 0007                357          AND         #seven,D4
00001360  4245                     358          CLR         D5        
00001362  1A01                     359          MOVE.B      D1,D5
00001364  CA7C 0007                360          AND         #seven,D5
00001368  1C3C 0001                361          MOVE.B      #one,D6
0000136C                           362          
0000136C  4243                     363          CLR         D3
0000136E  4242                     364          CLR         D2
00001370  163C 0004                365          MOVE.B      #four,D3
00001374  143C 0007                366          MOVE.B      #seven,D2      
00001378                           367          
00001378  4EB9 00002EF8            368          JSR         printEA        
0000137E                           369          
0000137E  4243                     370          CLR         D3
00001380  4242                     371          CLR         D2
00001382  163C 0004                372          MOVE.B      #four,D3
00001386  143C 0007                373          MOVE.B      #seven,D2
0000138A                           374          
0000138A  43F9 00003CCE            375          LEA         comma, A1           ; Display space
00001390  103C 000E                376          MOVE.B      #14, D0             ; command for trap call to display message
00001394  4E4F                     377          TRAP        #15                 ; trap call
00001396                           378          
00001396  4EB9 00002EF8            379          JSR         printEA
0000139C                           380          
0000139C  43F9 00003CC3            381          LEA         newLine, A1           ; Display space
000013A2  103C 000E                382          MOVE.B      #14, D0             ; command for trap call to display message
000013A6  4E4F                     383          TRAP        #15                 ; trap call
000013A8                           384          
000013A8  6000 FC96                385          BRA         LOOP
000013AC                           386           
000013AC                           387  opCMPI  
000013AC                           388  
000013AC                           389                  
000013AC  1218                     390          MOVE.B      (A0)+, D1
000013AE  1401                     391          MOVE.B      D1,D2               ; copy data over
000013B0  EC42                     392          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000013B2  B43C 0000                393          CMP.B       #zero,D2
000013B6  6700 0016                394          BEQ         opCMPIB
000013BA  B43C 0001                395          CMP.B       #one,D2
000013BE  6700 0080                396          BEQ         opCMPIW
000013C2  B43C 0002                397          CMP.B       #two,D2
000013C6  6700 00FC                398          BEQ         opCMPIL
000013CA  6000 21A4                399          BRA         invalid
000013CE                           400  
000013CE                           401  opCMPIB 
000013CE                           402  
000013CE  43F9 00003CDC            403          LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000013D4  103C 000E                404          MOVE.B      #14, D0             ; command for trap call to display message
000013D8  4E4F                     405          TRAP        #15                 ; trap call
000013DA                           406          
000013DA  43F9 00003D61            407          LEA         dispByte, A1        ; Display byte
000013E0  103C 000E                408          MOVE.B      #14, D0             ; command for trap call to display message
000013E4  4E4F                     409          TRAP        #15                 ; trap call
000013E6                           410          
000013E6  43F9 00003CC7            411          LEA         space, A1           ; Display space
000013EC  103C 000E                412          MOVE.B      #14, D0             ; command for trap call to display message
000013F0  4E4F                     413          TRAP        #15                 ; trap call
000013F2                           414          
000013F2  4244                     415          CLR         D4
000013F4  1801                     416          MOVE.B      D1,D4
000013F6  E644                     417          ASR         #three,D4
000013F8  C87C 0007                418          AND         #seven,D4
000013FC  4245                     419          CLR         D5        
000013FE  1A01                     420          MOVE.B      D1,D5
00001400  CA7C 0007                421          AND         #seven,D5
00001404                           422          
00001404  4243                     423          CLR         D3
00001406  4242                     424          CLR         D2
00001408  163C 0004                425          MOVE.B      #four,D3
0000140C  143C 0007                426          MOVE.B      #seven,D2      
00001410                           427          
00001410  4EB9 00002EF8            428          JSR         printEA  
00001416                           429              
00001416  43F9 00003CCE            430          LEA         comma, A1           ; Display space
0000141C  103C 000E                431          MOVE.B      #14, D0             ; command for trap call to display message
00001420  4E4F                     432          TRAP        #15                 ; trap call
00001422                           433          
00001422  4242                     434          CLR         D2
00001424  4243                     435          CLR         D3
00001426  1404                     436          MOVE.B      D4,D2
00001428  1605                     437          MOVE.B      D5,D3        
0000142A                           438          
0000142A  4EB9 00002EF8            439          JSR         printEA
00001430                           440          
00001430  43F9 00003CC3            441          LEA         newLine, A1           ; Display space
00001436  103C 000E                442          MOVE.B      #14, D0             ; command for trap call to display message
0000143A  4E4F                     443          TRAP        #15                 ; trap call
0000143C                           444  
0000143C  6000 FC02                445          BRA         LOOP
00001440                           446  
00001440                           447  opCMPIW 
00001440  43F9 00003CDC            448          LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001446  103C 000E                449          MOVE.B      #14, D0             ; command for trap call to display message
0000144A  4E4F                     450          TRAP        #15                 ; trap call
0000144C                           451          
0000144C  43F9 00003D64            452          LEA         dispWord, A1        ; Display byte
00001452  103C 000E                453          MOVE.B      #14, D0             ; command for trap call to display message
00001456  4E4F                     454          TRAP        #15                 ; trap call
00001458                           455          
00001458  43F9 00003CC7            456          LEA         space, A1           ; Display space
0000145E  103C 000E                457          MOVE.B      #14, D0             ; command for trap call to display message
00001462  4E4F                     458          TRAP        #15                 ; trap call
00001464                           459          
00001464  4244                     460          CLR         D4
00001466  1801                     461          MOVE.B      D1,D4
00001468  E644                     462          ASR         #three,D4
0000146A  C87C 0007                463          AND         #seven,D4
0000146E  4245                     464          CLR         D5        
00001470  1A01                     465          MOVE.B      D1,D5
00001472  CA7C 0007                466          AND         #seven,D5
00001476                           467          
00001476  4243                     468          CLR         D3
00001478  4242                     469          CLR         D2
0000147A  163C 0004                470          MOVE.B      #four,D3
0000147E  143C 0007                471          MOVE.B      #seven,D2      
00001482                           472          
00001482  4EB9 00002EF8            473          JSR         printEA  
00001488                           474          
00001488  43F9 00003CCA            475          LEA         hashTag, A1           ; Display space
0000148E  103C 000E                476          MOVE.B      #14, D0             ; command for trap call to display message
00001492  4E4F                     477          TRAP        #15                 ; trap call
00001494                           478          
00001494  103C 0003                479          MOVE.B      #3, D0
00001498  4E4F                     480          TRAP        #15
0000149A                           481          
0000149A  43F9 00003CCE            482          LEA         comma, A1           ; Display space
000014A0  103C 000E                483          MOVE.B      #14, D0             ; command for trap call to display message
000014A4  4E4F                     484          TRAP        #15                 ; trap call
000014A6                           485  
000014A6  4242                     486          CLR         D2
000014A8  4243                     487          CLR         D3
000014AA  1404                     488          MOVE.B      D4,D2
000014AC  1605                     489          MOVE.B      D5,D3       
000014AE                           490          
000014AE  4EB9 00002EF8            491          JSR         printEA
000014B4                           492          
000014B4  43F9 00003CC3            493          LEA         newLine, A1           ; Display space
000014BA  103C 000E                494          MOVE.B      #14, D0             ; command for trap call to display message
000014BE  4E4F                     495          TRAP        #15                 ; trap call
000014C0  6000 FB7E                496          BRA         LOOP
000014C4                           497  
000014C4                           498  opCMPIL 
000014C4  43F9 00003CDC            499          LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000014CA  103C 000E                500          MOVE.B      #14, D0             ; command for trap call to display message
000014CE  4E4F                     501          TRAP        #15                 ; trap call
000014D0                           502          
000014D0  43F9 00003D67            503          LEA         dispLong, A1        ; Display byte
000014D6  103C 000E                504          MOVE.B      #14, D0             ; command for trap call to display message
000014DA  4E4F                     505          TRAP        #15                 ; trap call
000014DC                           506          
000014DC  43F9 00003CC7            507          LEA         space, A1           ; Display space
000014E2  103C 000E                508          MOVE.B      #14, D0             ; command for trap call to display message
000014E6  4E4F                     509          TRAP        #15                 ; trap call
000014E8                           510          
000014E8  4244                     511          CLR         D4
000014EA  1801                     512          MOVE.B      D1,D4
000014EC  E644                     513          ASR         #three,D4
000014EE  C87C 0007                514          AND         #seven,D4
000014F2  4245                     515          CLR         D5        
000014F4  1A01                     516          MOVE.B      D1,D5
000014F6  CA7C 0007                517          AND         #seven,D5
000014FA                           518          
000014FA  4243                     519          CLR         D3
000014FC  4242                     520          CLR         D2
000014FE  163C 0004                521          MOVE.B      #four,D3
00001502  143C 0007                522          MOVE.B      #seven,D2      
00001506  1C3C 0001                523          MOVE.B      #one,D6
0000150A                           524          
0000150A  4EB9 00002EF8            525          JSR         printEA  
00001510                           526          
00001510  43F9 00003CCE            527          LEA         comma, A1           ; Display space
00001516  103C 000E                528          MOVE.B      #14, D0             ; command for trap call to display message
0000151A  4E4F                     529          TRAP        #15                 ; trap call
0000151C                           530          
0000151C  4242                     531          CLR         D2
0000151E  4243                     532          CLR         D3
00001520  1404                     533          MOVE.B      D4,D2
00001522  1605                     534          MOVE.B      D5,D3              
00001524                           535          
00001524  4EB9 00002EF8            536          JSR         printEA
0000152A                           537          
0000152A  43F9 00003CC3            538          LEA         newLine, A1           ; Display space
00001530  103C 000E                539          MOVE.B      #14, D0             ; command for trap call to display message
00001534  4E4F                     540          TRAP        #15                 ; trap call
00001536                           541          
00001536  6000 FB08                542          BRA         LOOP
0000153A                           543  
0000153A  43F9 00003CE1            544  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001540  103C 000E                545                  MOVE.B      #14, D0             ; command for trap call to display message
00001544  4E4F                     546                  TRAP        #15                 ; trap call
00001546                           547  
00001546  43F9 00003CC7            548                  LEA         space, A1           ; Display space
0000154C  103C 000E                549                  MOVE.B      #14, D0             ; command for trap call to display message
00001550  4E4F                     550                  TRAP        #15                 ; trap call
00001552                           551                  
00001552  4242                     552                  CLR         D2
00001554  1218                     553                  MOVE.B      (A0)+, D1
00001556  1401                     554                  MOVE.B      D1,D2               ; copy data over
00001558  E642                     555                  ASR         #three,D2           ; Shift to the right to remove register
0000155A  C47C 0007                556                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
0000155E                           557                  
0000155E  4243                     558                  CLR         D3                  ; Clear D3 so we can move D1 in
00001560  1601                     559                  MOVE.B      D1,D3               ; Move othr byte in
00001562  C67C 0007                560                  AND         #seven,D3           ; Set everything besides register to 0
00001566                           561                  
00001566  4241                     562                  CLR         D1
00001568  3218                     563                  MOVE.W      (A0)+, D1
0000156A                           564                 
0000156A                           565                  
0000156A  43F9 00003CCA            566                  LEA         hashTag, A1           ; Display space
00001570  103C 000E                567                  MOVE.B      #14, D0             ; command for trap call to display message
00001574  4E4F                     568                  TRAP        #15                 ; trap call
00001576                           569          
00001576  103C 0003                570                  MOVE.B      #3, D0
0000157A  4E4F                     571                  TRAP        #15
0000157C                           572          
0000157C  43F9 00003CCE            573                  LEA         comma, A1           ; Display space
00001582  103C 000E                574                  MOVE.B      #14, D0             ; command for trap call to display message
00001586  4E4F                     575                  TRAP        #15                 ; trap call
00001588                           576                  
00001588  4EB9 00002EF8            577                  JSR         printEA
0000158E                           578          
0000158E  43F9 00003CC3            579                  LEA         newLine, A1           ; Display space
00001594  103C 000E                580                  MOVE.B      #14, D0             ; command for trap call to display message
00001598  4E4F                     581                  TRAP        #15                 ; trap call
0000159A                           582                  
0000159A                           583                  
0000159A  6000 FAA4                584                  BRA         LOOP                
0000159E                           585          
0000159E                           586  opDynBCLR       
0000159E  4241                     587                  CLR         D1
000015A0  1218                     588                  MOVE.B      (A0)+,D1            ; Copy second byte in
000015A2  1601                     589                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
000015A4  E243                     590                  ASR         #one,D3             ; Shift register over to the end
000015A6  C67C 0007                591                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
000015AA                           592                  
000015AA  1401                     593                  MOVE.B      D1,D2
000015AC  EC42                     594                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
000015AE  B47C 0002                595                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
000015B2  6600 26AA                596                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
000015B6                           597  
000015B6                           598                  
000015B6  43F9 00003CE1            599                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
000015BC  103C 000E                600                  MOVE.B      #14, D0             ; command for trap call to display message
000015C0  4E4F                     601                  TRAP        #15                 ; trap call  
000015C2                           602                  
000015C2  43F9 00003CC7            603                  LEA         space, A1           ; Display space
000015C8  103C 000E                604                  MOVE.B      #14, D0             ; command for trap call to display message
000015CC  4E4F                     605                  TRAP        #15                 ; trap call
000015CE                           606                  
000015CE  143C 0000                607                  MOVE.B      #zero,D2                
000015D2  4EB9 00002EF8            608                  JSR         printEA
000015D8                           609                  
000015D8  43F9 00003CCE            610                  LEA         comma, A1           ; Display space
000015DE  103C 000E                611                  MOVE.B      #14, D0             ; command for trap call to display message
000015E2  4E4F                     612                  TRAP        #15                 ; trap call
000015E4                           613                  
000015E4  4242                     614                  CLR         D2
000015E6  1401                     615                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000015E8  E642                     616                  ASR         #three,D2           ; Remove/shift the register out
000015EA  C47C 0007                617                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000015EE                           618                  
000015EE  4243                     619                  CLR         D3                  ; Clearing D3 to avoid mashing data
000015F0  1601                     620                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000015F2  C67C 0007                621                  AND         #seven,D3           ; Change all bits except for register bits to 0
000015F6                           622                  
000015F6                           623  
000015F6  4EB9 00002EF8            624                  JSR         printEA
000015FC                           625          
000015FC  43F9 00003CC3            626                  LEA         newLine, A1           ; Display space
00001602  103C 000E                627                  MOVE.B      #14, D0             ; command for trap call to display message
00001606  4E4F                     628                  TRAP        #15                 ; trap call            
00001608                           629  
00001608                           630  
00001608  6000 FA36                631                  BRA         LOOP                ; go back to the loop
0000160C                           632   
0000160C                           633  opMOVEB 
0000160C  43F9 00003CE6            634          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
00001612  103C 000E                635          MOVE.B      #14, D0             ; command for trap call to display message
00001616  4E4F                     636          TRAP        #15                 ; trap call
00001618  43F9 00003D61            637          LEA         dispByte, A1        ; display byte
0000161E  103C 000E                638          MOVE.B      #14, D0             ; command for trap call to display message
00001622  4E4F                     639          TRAP        #15                 ; trap call
00001624  43F9 00003CC7            640          LEA         space, A1           ; create spaces
0000162A  103C 000E                641          MOVE.B      #14, D0             ; command for trap call to display message
0000162E  4E4F                     642          TRAP        #15                 ; trap call
00001630                           643          
00001630                           644          
00001630  4245                     645          CLR         D5                  ; Clear D5
00001632  1A01                     646          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001634  E245                     647          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001636  CA7C 0007                648          AND         #seven,D5
0000163A                           649          
0000163A  4244                     650          CLR         D4                  ; Clear out D4
0000163C  1801                     651          MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000163E  C87C 0001                652          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001642                           653          
00001642  4241                     654          CLR          D1
00001644  4242                     655          CLR          D2
00001646  1218                     656          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001648  1401                     657          MOVE.B      D1,D2
0000164A  EC42                     658          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000164C  D842                     659          ADD         D2,D4               ; Adds the remaining bits to D4
0000164E                           660          
0000164E  4242                     661          CLR         D2
00001650  1401                     662          MOVE.B      D1,D2               ; Copy new byte over to D2
00001652  E642                     663          ASR         #three,D2           ; Shift source register out
00001654  C47C 0007                664          AND         #seven,D2           ; Set everything to 0 except for the mode
00001658                           665          
00001658  4243                     666          CLR         D3
0000165A  1601                     667          MOVE.B      D1,D3
0000165C  C67C 0007                668          AND         #seven,D3
00001660                           669          
00001660  4EB9 00002EF8            670          JSR         printEA
00001666                           671          
00001666  43F9 00003CCE            672          LEA         comma, A1           ; Display space
0000166C  103C 000E                673          MOVE.B      #14, D0             ; command for trap call to display message
00001670  4E4F                     674          TRAP        #15                 ; trap call
00001672                           675          
00001672  4242                     676          CLR         D2
00001674  4243                     677          CLR         D3
00001676  1404                     678          MOVE.B      D4,D2
00001678  1605                     679          MOVE.B      D5,D3
0000167A                           680          
0000167A  4EB9 00002EF8            681          JSR         printEA
00001680                           682          
00001680                           683          
00001680  43F9 00003CC3            684          LEA         newLine, A1           ; Display space
00001686  103C 000E                685          MOVE.B      #14, D0             ; command for trap call to display message
0000168A  4E4F                     686          TRAP        #15                 ; trap call            
0000168C                           687  
0000168C                           688  
0000168C  6000 F9B2                689          BRA         LOOP                ; go back to the loop
00001690                           690          
00001690                           691  opMOVEL     
00001690                           692          
00001690  4245                     693              CLR         D5                  ; Clear D5
00001692  1A01                     694              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001694  E245                     695              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001696  CA7C 0007                696              AND         #seven,D5
0000169A                           697          
0000169A  4244                     698              CLR         D4                  ; Clear out D4
0000169C  1801                     699              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000169E  C87C 0001                700              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
000016A2                           701          
000016A2  4241                     702              CLR          D1
000016A4  4242                     703              CLR          D2
000016A6  1218                     704              MOVE.B      (A0)+,D1            ; Copy byte into D1
000016A8  1401                     705              MOVE.B      D1,D2
000016AA  EC42                     706              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000016AC  D842                     707              ADD         D2,D4               ; Adds the remaining bits to D4
000016AE                           708          
000016AE  B87C 0001                709              CMP         #one,D4             ; Check if it is MOVEA
000016B2  6700 0070                710              BEQ         opMOVEAL            ; If it is, branch off
000016B6                           711              
000016B6  43F9 00003CE6            712              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000016BC  103C 000E                713              MOVE.B      #14, D0             ; command for trap call to display message
000016C0  4E4F                     714              TRAP        #15                 ; trap call  
000016C2                           715              
000016C2                           716              
000016C2  43F9 00003D67            717              LEA         dispLong,A1
000016C8  103C 000E                718              MOVE.B      #14, D0             ; command for trap call to display message
000016CC  4E4F                     719              TRAP        #15                 ; trap call
000016CE                           720              
000016CE  43F9 00003CC7            721              LEA         space, A1           ; create spaces
000016D4  103C 000E                722              MOVE.B      #14, D0             ; command for trap call to display message
000016D8  4E4F                     723              TRAP        #15                 ; trap call
000016DA                           724          
000016DA  4242                     725              CLR         D2
000016DC  1401                     726              MOVE.B      D1,D2               ; Copy new byte over to D2
000016DE  E642                     727              ASR         #three,D2           ; Shift source register out
000016E0  C47C 0007                728              AND         #seven,D2           ; Set everything to 0 except for the mode
000016E4                           729          
000016E4  4243                     730              CLR         D3
000016E6  1601                     731              MOVE.B      D1,D3
000016E8  C67C 0007                732              AND         #seven,D3
000016EC                           733              
000016EC  4246                     734              CLR         D6
000016EE  1C3C 0001                735              MOVE.B      #1,D6
000016F2  4EB9 00002EF8            736              JSR         printEA
000016F8  4246                     737              CLR         D6
000016FA                           738              
000016FA  43F9 00003CCE            739              LEA         comma, A1           ; Display comma
00001700  103C 000E                740              MOVE.B      #14, D0             ; command for trap call to display message
00001704  4E4F                     741              TRAP        #15                 ; trap call
00001706                           742          
00001706  4242                     743              CLR         D2
00001708  4243                     744              CLR         D3
0000170A  1404                     745              MOVE.B      D4,D2
0000170C  1605                     746              MOVE.B      D5,D3
0000170E                           747              
0000170E                           748  
0000170E                           749              
0000170E  4EB9 00002EF8            750              JSR         printEA
00001714                           751          
00001714                           752          
00001714  43F9 00003CC3            753              LEA         newLine, A1           ; Display space
0000171A  103C 000E                754              MOVE.B      #14, D0             ; command for trap call to display message
0000171E  4E4F                     755              TRAP        #15                 ; trap call            
00001720                           756  
00001720                           757  
00001720  6000 F91E                758              BRA         LOOP                ; go back to the loop
00001724                           759              
00001724                           760  opMOVEAL
00001724                           761  
00001724  43F9 00003CEB            762              LEA         MOVEAmatch,A1
0000172A  103C 000E                763              MOVE.B      #14, D0             ; command for trap call to display message
0000172E  4E4F                     764              TRAP        #15                 ; trap call
00001730                           765              
00001730  43F9 00003D67            766              LEA         dispLong,A1
00001736  103C 000E                767              MOVE.B      #14, D0             ; command for trap call to display message
0000173A  4E4F                     768              TRAP        #15                 ; trap call
0000173C                           769              
0000173C                           770  
0000173C  43F9 00003CC7            771              LEA         space, A1           ; create spaces
00001742  103C 000E                772              MOVE.B      #14, D0             ; command for trap call to display message
00001746  4E4F                     773              TRAP        #15                 ; trap call
00001748                           774              
00001748  4242                     775              CLR         D2
0000174A  1401                     776              MOVE.B      D1,D2               ; Copy new byte over to D2
0000174C  E642                     777              ASR         #three,D2           ; Shift source register out
0000174E  C47C 0007                778              AND         #seven,D2           ; Set everything to 0 except for the mode
00001752                           779          
00001752  4243                     780              CLR         D3
00001754  1601                     781              MOVE.B      D1,D3
00001756  C67C 0007                782              AND         #seven,D3
0000175A                           783              
0000175A  4241                     784              CLR         D1                  ; Clear D1
0000175C                           785              
0000175C                           786              
0000175C  4EB9 00002EF8            787              JSR         printEA
00001762                           788              
00001762  43F9 00003CCE            789              LEA         comma, A1           ; Display comma
00001768  103C 000E                790              MOVE.B      #14, D0             ; command for trap call to display message
0000176C  4E4F                     791              TRAP        #15                 ; trap call
0000176E                           792  
0000176E  4242                     793              CLR         D2
00001770  4243                     794              CLR         D3
00001772  1404                     795              MOVE.B      D4,D2
00001774  1605                     796              MOVE.B      D5,D3
00001776                           797          
00001776  4EB9 00002EF8            798              JSR         printEA
0000177C                           799          
0000177C                           800          
0000177C  43F9 00003CC3            801              LEA         newLine, A1           ; Display space
00001782  103C 000E                802              MOVE.B      #14, D0             ; command for trap call to display message
00001786  4E4F                     803              TRAP        #15                 ; trap call            
00001788                           804  
00001788                           805  
00001788  6000 F8B6                806              BRA         LOOP                ; go back to the loop
0000178C                           807  
0000178C                           808  opMOVEW
0000178C                           809          
0000178C  4245                     810              CLR         D5                  ; Clear D5
0000178E  1A01                     811              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001790  E245                     812              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001792  CA7C 0007                813              AND         #seven,D5
00001796                           814          
00001796  4244                     815              CLR         D4                  ; Clear out D4
00001798  1801                     816              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000179A  C87C 0001                817              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000179E                           818          
0000179E  4241                     819              CLR          D1
000017A0  4242                     820              CLR          D2
000017A2  1218                     821              MOVE.B      (A0)+,D1            ; Copy byte into D1
000017A4  1401                     822              MOVE.B      D1,D2
000017A6  EC42                     823              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000017A8  D842                     824              ADD         D2,D4               ; Adds the remaining bits to D4
000017AA                           825          
000017AA  B87C 0001                826              CMP         #one,D4             ; Check if it is MOVEA
000017AE  6700 006A                827              BEQ         opMOVEAW            ; If it is, branch off
000017B2                           828              
000017B2  43F9 00003CE6            829              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000017B8  103C 000E                830              MOVE.B      #14, D0             ; command for trap call to display message
000017BC  4E4F                     831              TRAP        #15                 ; trap call  
000017BE                           832              
000017BE  43F9 00003D64            833              LEA         dispWord,A1
000017C4  103C 000E                834              MOVE.B      #14, D0             ; command for trap call to display message
000017C8  4E4F                     835              TRAP        #15                 ; trap call
000017CA                           836              
000017CA  43F9 00003CC7            837              LEA         space, A1           ; create spaces
000017D0  103C 000E                838              MOVE.B      #14, D0             ; command for trap call to display message
000017D4  4E4F                     839              TRAP        #15                 ; trap call
000017D6                           840          
000017D6  4242                     841              CLR         D2
000017D8  1401                     842              MOVE.B      D1,D2               ; Copy new byte over to D2
000017DA  E642                     843              ASR         #three,D2           ; Shift source register out
000017DC  C47C 0007                844              AND         #seven,D2           ; Set everything to 0 except for the mode
000017E0                           845          
000017E0  4243                     846              CLR         D3
000017E2  1601                     847              MOVE.B      D1,D3
000017E4  C67C 0007                848              AND         #seven,D3
000017E8                           849              
000017E8  4241                     850              CLR         D1                  ; Clear D1
000017EA                           851              
000017EA  4EB9 00002EF8            852              JSR         printEA
000017F0                           853              
000017F0  43F9 00003CCE            854              LEA         comma, A1           ; Display comma
000017F6  103C 000E                855              MOVE.B      #14, D0             ; command for trap call to display message
000017FA  4E4F                     856              TRAP        #15                 ; trap call
000017FC                           857          
000017FC  4242                     858              CLR         D2
000017FE  4243                     859              CLR         D3
00001800  1404                     860              MOVE.B      D4,D2
00001802  1605                     861              MOVE.B      D5,D3
00001804                           862              
00001804                           863  
00001804                           864              
00001804  4EB9 00002EF8            865              JSR         printEA
0000180A                           866          
0000180A                           867          
0000180A  43F9 00003CC3            868              LEA         newLine, A1           ; Display space
00001810  103C 000E                869              MOVE.B      #14, D0             ; command for trap call to display message
00001814  4E4F                     870              TRAP        #15                 ; trap call            
00001816                           871  
00001816                           872  
00001816  6000 F828                873              BRA         LOOP                ; go back to the loop
0000181A                           874  opMOVEAW  
0000181A  43F9 00003CEB            875              LEA         MOVEAmatch,A1
00001820  103C 000E                876              MOVE.B      #14, D0             ; command for trap call to display message
00001824  4E4F                     877              TRAP        #15                 ; trap call
00001826                           878              
00001826  43F9 00003D64            879              LEA         dispWord,A1
0000182C  103C 000E                880              MOVE.B      #14, D0             ; command for trap call to display message
00001830  4E4F                     881              TRAP        #15                 ; trap call
00001832                           882              
00001832                           883  
00001832  43F9 00003CC7            884              LEA         space, A1           ; create spaces
00001838  103C 000E                885              MOVE.B      #14, D0             ; command for trap call to display message
0000183C  4E4F                     886              TRAP        #15                 ; trap call
0000183E                           887              
0000183E  4242                     888              CLR         D2
00001840  1401                     889              MOVE.B      D1,D2               ; Copy new byte over to D2
00001842  E642                     890              ASR         #three,D2           ; Shift source register out
00001844  C47C 0007                891              AND         #seven,D2           ; Set everything to 0 except for the mode
00001848                           892          
00001848  4243                     893              CLR         D3
0000184A  1601                     894              MOVE.B      D1,D3
0000184C  C67C 0007                895              AND         #seven,D3
00001850                           896              
00001850  4241                     897              CLR         D1                  ; Clear D1
00001852                           898              
00001852                           899              
00001852  4EB9 00002EF8            900              JSR         printEA
00001858                           901              
00001858  43F9 00003CCE            902              LEA         comma, A1           ; Display comma
0000185E  103C 000E                903              MOVE.B      #14, D0             ; command for trap call to display message
00001862  4E4F                     904              TRAP        #15                 ; trap call
00001864                           905  
00001864  4242                     906              CLR         D2
00001866  4243                     907              CLR         D3
00001868  1404                     908              MOVE.B      D4,D2
0000186A  1605                     909              MOVE.B      D5,D3
0000186C                           910          
0000186C  4EB9 00002EF8            911              JSR         printEA
00001872                           912          
00001872                           913          
00001872  43F9 00003CC3            914              LEA         newLine, A1           ; Display space
00001878  103C 000E                915              MOVE.B      #14, D0             ; command for trap call to display message
0000187C  4E4F                     916              TRAP        #15                 ; trap call            
0000187E                           917  
0000187E                           918  
0000187E  6000 F7C0                919              BRA         LOOP                ; go back to the loop
00001882                           920  
00001882                           921  opNEG   
00001882  43F9 00003CF1            922              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001888  103C 000E                923              MOVE.B      #14, D0             ; command for trap call to display message
0000188C  4E4F                     924              TRAP        #15                 ; trap call
0000188E                           925          
0000188E                           926          
0000188E  1218                     927              MOVE.B      (A0)+, D1
00001890  1401                     928              MOVE.B      D1,D2               ; copy data over
00001892  EC42                     929              ASR         #six,D2
00001894                           930              
00001894  B47C 0000                931              CMP         #zero,D2
00001898  6700 0016                932              BEQ         opNEGB
0000189C  B47C 0001                933              CMP         #one,D2
000018A0  6700 008E                934              BEQ         opNEGW
000018A4  B47C 0002                935              CMP         #two,D2
000018A8  6700 0046                936              BEQ         opNEGL
000018AC  6000 1CC2                937              BRA         invalid
000018B0                           938  opNEGB
000018B0                           939  
000018B0  43F9 00003D61            940              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
000018B6  103C 000E                941              MOVE.B      #14, D0             ; command for trap call to display message
000018BA  4E4F                     942              TRAP        #15                 ; trap call
000018BC                           943          
000018BC  43F9 00003CC7            944              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000018C2  103C 000E                945              MOVE.B      #14, D0             ; command for trap call to display message
000018C6  4E4F                     946              TRAP        #15                 ; trap call
000018C8                           947          
000018C8  4242                     948              CLR         D2                  ; Clear Data register 2
000018CA  3401                     949              MOVE        D1,D2               ; Move byte into D2
000018CC  E642                     950              ASR         #three,D2           ; Shift mode into place and moves mode into place
000018CE  C47C 0007                951              AND         #seven,D2           ; Stores mode
000018D2                           952              
000018D2  4243                     953              CLR         D3
000018D4  3601                     954              MOVE        D1,D3
000018D6  C67C 0007                955              AND         #seven,D3
000018DA                           956          
000018DA  4EB9 00002EF8            957              JSR         printEA
000018E0                           958                  
000018E0  43F9 00003CC3            959              LEA         newLine, A1           ; Display space
000018E6  103C 000E                960              MOVE.B      #14, D0             ; command for trap call to display message
000018EA  4E4F                     961              TRAP        #15                 ; trap call  
000018EC                           962          
000018EC  6000 F752                963              BRA         LOOP
000018F0                           964                  
000018F0                           965  
000018F0                           966  opNEGL
000018F0                           967  
000018F0  43F9 00003D67            968              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
000018F6  103C 000E                969              MOVE.B      #14, D0             ; command for trap call to display message
000018FA  4E4F                     970              TRAP        #15                 ; trap call
000018FC                           971  
000018FC  43F9 00003CC7            972              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001902  103C 000E                973              MOVE.B      #14, D0             ; command for trap call to display message
00001906  4E4F                     974              TRAP        #15                 ; trap call
00001908                           975                  
00001908  4242                     976              CLR         D2                  ; Clear Data register 2
0000190A  3401                     977              MOVE        D1,D2               ; Move byte into D2
0000190C  E642                     978              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000190E  C47C 0007                979              AND         #seven,D2           ; Stores mode
00001912                           980          
00001912  4243                     981              CLR         D3
00001914  3601                     982              MOVE        D1,D3
00001916  C67C 0007                983              AND         #seven,D3
0000191A                           984          
0000191A  4EB9 00002EF8            985              JSR         printEA
00001920                           986                      
00001920  43F9 00003CC3            987              LEA         newLine, A1         ; Display space
00001926  103C 000E                988              MOVE.B      #14, D0             ; command for trap call to display message
0000192A  4E4F                     989              TRAP        #15                 ; trap call  
0000192C                           990          
0000192C  6000 F712                991              BRA         LOOP
00001930                           992          
00001930                           993  
00001930                           994  opNEGW
00001930                           995  
00001930  43F9 00003D64            996              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001936  103C 000E                997              MOVE.B      #14, D0             ; command for trap call to display message
0000193A  4E4F                     998              TRAP        #15                 ; trap call
0000193C                           999          
0000193C  43F9 00003CC7           1000              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001942  103C 000E               1001              MOVE.B      #14, D0             ; command for trap call to display message
00001946  4E4F                    1002              TRAP        #15                 ; trap call        
00001948                          1003                  
00001948  4242                    1004              CLR         D2                  ; Clear Data register 2
0000194A  3401                    1005              MOVE        D1,D2               ; Move byte into D2
0000194C  E642                    1006              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000194E  C47C 0007               1007              AND         #seven,D2           ; Stores mode
00001952                          1008          
00001952  4243                    1009              CLR         D3
00001954  3601                    1010              MOVE        D1,D3
00001956  C67C 0007               1011              AND         #seven,D3
0000195A                          1012          
0000195A  4EB9 00002EF8           1013              JSR         printEA
00001960                          1014              
00001960  43F9 00003CC3           1015              LEA         newLine, A1           ; Display space
00001966  103C 000E               1016              MOVE.B      #14, D0             ; command for trap call to display message
0000196A  4E4F                    1017              TRAP        #15                 ; trap call  
0000196C                          1018          
0000196C  6000 F6D2               1019              BRA         LOOP
00001970                          1020  
00001970                          1021  opRTSJSR
00001970                          1022          
00001970  1218                    1023              MOVE.B      (A0)+, D1
00001972                          1024              
00001972  1401                    1025              MOVE.B      D1,D2               ; copy data over
00001974  B47C 0075               1026              CMP         #117,D2
00001978  6700 0050               1027              BEQ         opRTS
0000197C                          1028              
0000197C  EC42                    1029              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
0000197E  B47C 0002               1030              CMP         #two,D2             ; Checking if it is JSR
00001982  6700 0006               1031              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001986                          1032  
00001986  6000 1BE8               1033              BRA         invalid
0000198A                          1034  
0000198A                          1035  opJSR
0000198A                          1036                        
0000198A  43F9 00003CF9           1037              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001990  103C 000E               1038              MOVE.B      #14, D0             ; command for trap call to display message
00001994  4E4F                    1039              TRAP        #15                 ; trap call
00001996                          1040              
00001996  43F9 00003CC7           1041              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000199C  103C 000E               1042              MOVE.B      #14, D0             ; command for trap call to display message
000019A0  4E4F                    1043              TRAP        #15                 ; trap call
000019A2                          1044              
000019A2  4242                    1045              CLR         D2
000019A4  4243                    1046              CLR         D3
000019A6                          1047              
000019A6  1401                    1048              MOVE.B      D1,D2
000019A8  E642                    1049              ASR         #three,D2
000019AA  C47C 0007               1050              AND         #seven,D2
000019AE                          1051              
000019AE  1601                    1052              MOVE.B      D1,D3
000019B0  C67C 0007               1053              AND         #seven,D3
000019B4                          1054              
000019B4  4EB9 00002EF8           1055              JSR         printEA
000019BA                          1056              
000019BA  43F9 00003CC3           1057              LEA         newLine, A1           ; Display space
000019C0  103C 000E               1058              MOVE.B      #14, D0             ; command for trap call to display message
000019C4  4E4F                    1059              TRAP        #15                 ; trap call  
000019C6                          1060              
000019C6  6000 F678               1061              BRA         loop            
000019CA                          1062  opRTS
000019CA                          1063  
000019CA  43F9 00003CF5           1064              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
000019D0  103C 000E               1065              MOVE.B      #14, D0             ; command for trap call to display message
000019D4  4E4F                    1066              TRAP        #15                 ; trap call
000019D6                          1067              
000019D6  43F9 00003CC3           1068              LEA         newLine, A1           ; Display space
000019DC  103C 000E               1069              MOVE.B      #14, D0             ; command for trap call to display message
000019E0  4E4F                    1070              TRAP        #15                 ; trap call 
000019E2                          1071              
000019E2  6000 F65C               1072              BRA         loop
000019E6                          1073  
000019E6                          1074  opMOVEMLEA
000019E6  4242                    1075              CLR         D2                  ; Clear D2
000019E8  1401                    1076              MOVE.B      D1,D2               ; Copy byte over
000019EA  C47C 000F               1077              AND         #secNib,D2          ; Check only the second nibble
000019EE  B47C 000C               1078              CMP         #twelve,D2          ; Compare the second nibble to twelve
000019F2  6700 000E               1079              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
000019F6  B47C 0008               1080              CMP         #eight,D2           ; Compare the second nibble to eight
000019FA  6700 0006               1081              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
000019FE  6000 008C               1082              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
00001A02                          1083              
00001A02                          1084  opMOVEM            
00001A02  4246                    1085              CLR         D6                  ; Clearing D4 to store dr field
00001A04  1C01                    1086              MOVE.B      D1,D6               ; Moving byte to find dr field
00001A06  E446                    1087              ASR         #two,D6             ; Moving dr field to readable spot
00001A08  CC7C 0001               1088              AND         #one,D6             ; seting everything except dr to 0
00001A0C                          1089  
00001A0C  4241                    1090              CLR         D1  
00001A0E  1218                    1091              MOVE.B      (A0)+, D1           ; Taking in next byte
00001A10                          1092              
00001A10  4245                    1093              CLR         D5
00001A12  1A01                    1094              MOVE.B      D1,D5               ; Using D6 to check if this is indeed MOVEM
00001A14  EE45                    1095              ASR         #seven,D5
00001A16  CA7C 0001               1096              AND         #one,D5
00001A1A  BA7C 0001               1097              CMP         #one,D5             ; This bit should be one if this is MOVEM
00001A1E  6600 1B50               1098              BNE         invalid             ; If this is not 1 then this is not moveM
00001A22  4245                    1099              CLR         D5
00001A24                          1100              
00001A24  43F9 00003CFD           1101              LEA         MOVEMMatch, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001A2A  103C 000E               1102              MOVE.B      #14, D0             ; command for trap call to display message
00001A2E  4E4F                    1103              TRAP        #15                 ; trap call
00001A30                          1104              
00001A30  4245                    1105              CLR         D5                  ; Clearing D5 to store size
00001A32  1A01                    1106              MOVE.B      D1,D5               ; Moving byte that contains bit for size
00001A34  EC45                    1107              ASR         #six,D5            ; Moving size bit to the very right to read
00001A36  CA7C 0001               1108              AND         #one,D5             ; Isolating the one bit for size
00001A3A                          1109              
00001A3A  4242                    1110              CLR         D2                  ; Storing EA mode in D2
00001A3C  1401                    1111              MOVE.B      D1,D2
00001A3E  E642                    1112              ASR         #three,D2
00001A40  C47C 0007               1113              AND         #seven,D2
00001A44                          1114              
00001A44  4243                    1115              CLR         D3                  ; Storing EA register into D3
00001A46  1601                    1116              MOVE.B      D1,D3
00001A48  C67C 0007               1117              AND         #seven,D3
00001A4C                          1118              
00001A4C  4EB9 00003576           1119              JSR         MOVEMBRA
00001A52                          1120              
00001A52  B47C 0003               1121              CMP         #three,D2
00001A56  6700 0024               1122              BEQ         skipPrintEA
00001A5A                          1123              
00001A5A  43F9 00003CCE           1124              LEA         comma, A1           ; Display comma
00001A60  103C 000E               1125              MOVE.B      #14, D0             ; command for trap call to display message
00001A64  4E4F                    1126              TRAP        #15                 ; trap call
00001A66                          1127              
00001A66  4EB9 00002EF8           1128              JSR         printEA
00001A6C                          1129              
00001A6C  43F9 00003CC3           1130              LEA         newline, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001A72  103C 000E               1131              MOVE.B      #14, D0             ; command for trap call to display message
00001A76  4E4F                    1132              TRAP        #15                 ; trap call            
00001A78                          1133  
00001A78  6000 F5C6               1134              BRA         loop            
00001A7C                          1135  
00001A7C                          1136  skipPrintEA 
00001A7C                          1137  
00001A7C  43F9 00003CC3           1138              LEA         newline, A1        
00001A82  103C 000E               1139              MOVE.B      #14, D0             ; command for trap call to display message
00001A86  4E4F                    1140              TRAP        #15                 ; trap call            
00001A88                          1141  
00001A88  6000 F5B6               1142              BRA         loop 
00001A8C                          1143  opLEA
00001A8C  4244                    1144              CLR         D4                  ; Clearing space for source register
00001A8E  1801                    1145              MOVE.B      D1,D4               ; Moving byte to isolate register
00001A90  E244                    1146              ASR         #one,D4
00001A92  C87C 0007               1147              AND         #seven,D4           ; Isolated register
00001A96                          1148  
00001A96  4245                    1149              CLR         D5                  ; Clearing D5 to check if bits match LEA static bits
00001A98  1A01                    1150              MOVE.B      D1,D5
00001A9A  CA7C 0001               1151              AND         #one,D5
00001A9E  E545                    1152              ASL         #two,D5
00001AA0                          1153              
00001AA0  1218                    1154              MOVE.B      (A0)+, D1           ; Taking in next byte
00001AA2                          1155              
00001AA2  1C01                    1156              MOVE.B      D1,D6
00001AA4  EC46                    1157              ASR         #six,D6
00001AA6  DA46                    1158              ADD         D6,D5
00001AA8  4246                    1159              CLR         D6
00001AAA                          1160  
00001AAA  BA7C 0007               1161              CMP         #seven,D5
00001AAE  6600 1AC0               1162              BNE         invalid   
00001AB2                          1163              
00001AB2  43F9 00003D03           1164              LEA         LEAmatch, A1        ; we know that the opcode will be LEA, so load A1 to print message
00001AB8  103C 000E               1165              MOVE.B      #14, D0             ; command for trap call to display message
00001ABC  4E4F                    1166              TRAP        #15                 ; trap call            
00001ABE                          1167  
00001ABE  43F9 00003CC7           1168              LEA         space, A1         ; we know that the opcode will be MOVEM, so load A1 to print message
00001AC4  103C 000E               1169              MOVE.B      #14, D0             ; command for trap call to display message
00001AC8  4E4F                    1170              TRAP        #15                 ; trap call            
00001ACA                          1171              
00001ACA  4242                    1172              CLR         D2
00001ACC  1401                    1173              MOVE.B      D1,D2
00001ACE  E642                    1174              ASR         #three,D2
00001AD0  C47C 0007               1175              AND         #seven,D2
00001AD4                          1176              
00001AD4  4243                    1177              CLR         D3
00001AD6  1601                    1178              MOVE.B      D1,D3
00001AD8  C67C 0007               1179              AND         #seven,D3
00001ADC                          1180              
00001ADC  4EB9 00002EF8           1181              JSR         printEA
00001AE2                          1182              
00001AE2  43F9 00003CCE           1183              LEA         comma, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001AE8  103C 000E               1184              MOVE.B      #14, D0             ; command for trap call to display message
00001AEC  4E4F                    1185              TRAP        #15                 ; trap call            
00001AEE                          1186              
00001AEE                          1187              
00001AEE  4243                    1188              CLR         D3
00001AF0  1604                    1189              MOVE.B      D4,D3
00001AF2  143C 0001               1190              MOVE.B      #one,D2
00001AF6                          1191              
00001AF6  4EB9 00002EF8           1192              JSR         printEA             ; Prints out source address
00001AFC                          1193              
00001AFC  43F9 00003CC3           1194              LEA         newline, A1         ; Prints new line
00001B02  103C 000E               1195              MOVE.B      #14, D0             ; command for trap call to display message
00001B06  4E4F                    1196              TRAP        #15                 ; trap call
00001B08                          1197  
00001B08  6000 F536               1198              BRA         loop                        
00001B0C                          1199  
00001B0C  43F9 00003D25           1200  opOR        LEA         ORmatch,A1
00001B12  103C 000E               1201              MOVE.B      #14,D0
00001B16  4E4F                    1202              TRAP        #15
00001B18                          1203              
00001B18  4242                    1204              CLR         D2
00001B1A                          1205              ; These are for EA to Dn direction
00001B1A  B43C 0000               1206              CMP.B       #zero,D2
00001B1E  6700 002A               1207              BEQ         opORB               ; Byte in opmode
00001B22  B43C 0001               1208              CMP.B       #one,D2
00001B26  6700 007C               1209              BEQ         opORW               ; Word in opmode
00001B2A  B43C 0002               1210              CMP.B       #two,D2
00001B2E  6700 00D0               1211              BEQ         opORL               ; Long in opmode
00001B32                          1212              
00001B32                          1213              ; These are for Dn to EA direction
00001B32  B43C 0004               1214              CMP.B       #four,D2
00001B36  6700 0012               1215              BEQ         opORB               ; Byte in opmode
00001B3A  B43C 0005               1216              CMP.B       #five,D2
00001B3E  6700 0064               1217              BEQ         opORW               ; Word in opmode
00001B42  B43C 0006               1218              CMP.B       #six,D2
00001B46  6700 00B8               1219              BEQ         opORL               ; Long in opmode
00001B4A                          1220              
00001B4A  43F9 00003D61           1221  opORB       LEA         dispByte,A1
00001B50  103C 000E               1222              MOVE.B      #14,D0
00001B54  4E4F                    1223              TRAP        #15
00001B56                          1224              
00001B56  43F9 00003CC7           1225              LEA         space, A1           ; Display space
00001B5C  103C 000E               1226              MOVE.B      #14, D0             ; command for trap call to display message
00001B60  4E4F                    1227              TRAP        #15                 ; trap call
00001B62                          1228              
00001B62                          1229  
00001B62  1401                    1230              MOVE.B      D1,D2
00001B64  E642                    1231              ASR         #3,D2
00001B66  C47C 0007               1232              AND         #$07,D2
00001B6A  1601                    1233              MOVE.B      D1,D3
00001B6C  C67C 0007               1234              AND         #$07,D3
00001B70  4EB9 00002EF8           1235              JSR         printEA         ; Determines the "left" operand register
00001B76                          1236              
00001B76  43F9 00003CCE           1237              LEA         comma, A1           ; Display space
00001B7C  103C 000E               1238              MOVE.B      #14, D0             ; command for trap call to display message
00001B80  4E4F                    1239              TRAP        #15                 ; trap call
00001B82                          1240              
00001B82  4242                    1241              CLR         D2
00001B84  3601                    1242              MOVE.W      D1,D3
00001B86  E043                    1243              ASR         #eight,D3
00001B88  E243                    1244              ASR         #one,D3
00001B8A  C67C 0007               1245              AND         #$07,D3
00001B8E  4EB9 00002EF8           1246              JSR         printEA
00001B94                          1247              
00001B94  43F9 00003CC3           1248              LEA         newLine,A1
00001B9A  103C 000E               1249              MOVE.B      #14,D0
00001B9E  4E4F                    1250              TRAP        #15
00001BA0                          1251              
00001BA0  6000 F49E               1252              BRA         LOOP
00001BA4                          1253              
00001BA4                          1254              
00001BA4  43F9 00003D64           1255  opORW       LEA         dispWord,A1
00001BAA  103C 000E               1256              MOVE.B      #14,D0
00001BAE  4E4F                    1257              TRAP        #15
00001BB0                          1258              
00001BB0  43F9 00003CC7           1259              LEA         space, A1           ; Display space
00001BB6  103C 000E               1260              MOVE.B      #14, D0             ; command for trap call to display message
00001BBA  4E4F                    1261              TRAP        #15                 ; trap call
00001BBC                          1262              
00001BBC  4242                    1263              CLR         D2
00001BBE  1401                    1264              MOVE.B      D1,D2
00001BC0  E642                    1265              ASR         #3,D2
00001BC2  C47C 0007               1266              AND         #$07,D2
00001BC6  1601                    1267              MOVE.B      D1,D3
00001BC8  C67C 0007               1268              AND         #$07,D3
00001BCC  4EB9 00002EF8           1269              JSR         printEA         ; Determines the "left" operand register
00001BD2                          1270              
00001BD2  43F9 00003CCE           1271              LEA         comma, A1           ; Display space
00001BD8  103C 000E               1272              MOVE.B      #14, D0             ; command for trap call to display message
00001BDC  4E4F                    1273              TRAP        #15                 ; trap call
00001BDE                          1274              
00001BDE  4242                    1275              CLR         D2
00001BE0  3601                    1276              MOVE.W      D1,D3
00001BE2  E043                    1277              ASR         #eight,D3
00001BE4  E243                    1278              ASR         #one,D3
00001BE6  C67C 0007               1279              AND         #$07,D3
00001BEA  4EB9 00002EF8           1280              JSR         printEA
00001BF0                          1281              
00001BF0  43F9 00003CC3           1282              LEA         newLine,A1
00001BF6  103C 000E               1283              MOVE.B      #14,D0
00001BFA  4E4F                    1284              TRAP        #15
00001BFC                          1285              
00001BFC  6000 F442               1286              BRA         LOOP
00001C00                          1287              
00001C00  43F9 00003D67           1288  opORL       LEA         dispLong,A1
00001C06  103C 000E               1289              MOVE.B      #14,D0
00001C0A  4E4F                    1290              TRAP        #15
00001C0C                          1291              
00001C0C  43F9 00003CC7           1292              LEA         space, A1           ; Display space
00001C12  103C 000E               1293              MOVE.B      #14, D0             ; command for trap call to display message
00001C16  4E4F                    1294              TRAP        #15                 ; trap call
00001C18                          1295              
00001C18  1401                    1296              MOVE.B      D1,D2
00001C1A  E642                    1297              ASR         #3,D2
00001C1C  C47C 0007               1298              AND         #$07,D2
00001C20  1601                    1299              MOVE.B      D1,D3
00001C22  C67C 0007               1300              AND         #$07,D3
00001C26  4EB9 00002EF8           1301              JSR         printEA         ; Determines the "left" operand register
00001C2C                          1302              
00001C2C  43F9 00003CCE           1303              LEA         comma, A1           ; Display space
00001C32  103C 000E               1304              MOVE.B      #14, D0             ; command for trap call to display message
00001C36  4E4F                    1305              TRAP        #15                 ; trap call
00001C38                          1306              
00001C38  4242                    1307              CLR         D2
00001C3A  3601                    1308              MOVE.W      D1,D3
00001C3C  E043                    1309              ASR         #eight,D3
00001C3E  E243                    1310              ASR         #one,D3
00001C40  C67C 0007               1311              AND         #$07,D3
00001C44  4EB9 00002EF8           1312              JSR         printEA
00001C4A                          1313              
00001C4A  43F9 00003CC3           1314              LEA         newLine,A1
00001C50  103C 000E               1315              MOVE.B      #14,D0
00001C54  4E4F                    1316              TRAP        #15
00001C56                          1317              
00001C56  6000 F3E8               1318              BRA         LOOP            ; trap call
00001C5A                          1319              
00001C5A  6000 F3E4               1320              BRA         LOOP            ; DOUBLE CHECK THIS AGAIN AFTER MORE TESTING ALEX
00001C5E                          1321              
00001C5E                          1322  ***********************************************************************************************************
00001C5E                          1323  *
00001C5E                          1324  *               DIVS OPCODE
00001C5E                          1325  *
00001C5E                          1326  ***********************************************************************************************************
00001C5E                          1327  
00001C5E  43F9 00003D20           1328  opDIVS      LEA     DIVSmatch,A1
00001C64  103C 000E               1329              MOVE.B  #14,D0
00001C68  4E4F                    1330              TRAP    #15
00001C6A                          1331              
00001C6A  43F9 00003CC7           1332              LEA         space, A1           ; Display space
00001C70  103C 000E               1333              MOVE.B      #14, D0             ; command for trap call to display message
00001C74  4E4F                    1334              TRAP        #15                 ; trap call
00001C76                          1335              
00001C76  1401                    1336              MOVE.B      D1,D2
00001C78  E642                    1337              ASR         #3,D2
00001C7A  C47C 0007               1338              AND         #$07,D2
00001C7E  1601                    1339              MOVE.B      D1,D3
00001C80  C67C 0007               1340              AND         #$07,D3
00001C84  4EB9 00002EF8           1341              JSR         printEA
00001C8A                          1342              
00001C8A  43F9 00003CCE           1343              LEA         comma, A1           ; Display space
00001C90  103C 000E               1344              MOVE.B      #14, D0             ; command for trap call to display message
00001C94  4E4F                    1345              TRAP        #15                 ; trap call
00001C96                          1346              
00001C96  4242                    1347              CLR         D2
00001C98  3601                    1348              MOVE.W      D1,D3
00001C9A  E043                    1349              ASR         #eight,D3
00001C9C  E243                    1350              ASR         #one,D3
00001C9E  C67C 0007               1351              AND         #$07,D3
00001CA2  4EB9 00002EF8           1352              JSR         printEA
00001CA8                          1353              
00001CA8  43F9 00003CC3           1354              LEA         newLine,A1
00001CAE  103C 000E               1355              MOVE.B      #14,D0
00001CB2  4E4F                    1356              TRAP        #15
00001CB4                          1357              
00001CB4  6000 F38A               1358              BRA         LOOP
00001CB8                          1359      
00001CB8  6000 F386               1360              BRA     LOOP
00001CBC                          1361              
00001CBC                          1362  **********************************************************************************************************
00001CBC                          1363  *
00001CBC                          1364  *               EOR OPCODE
00001CBC                          1365  *
00001CBC                          1366  ***********************************************************************************************************
00001CBC                          1367  
00001CBC  43F9 00003D2C           1368  opEOR       LEA         EORmatch,A1
00001CC2  103C 000E               1369              MOVE.B      #14,D0
00001CC6  4E4F                    1370              TRAP        #15
00001CC8                          1371              
00001CC8  4242                    1372              CLR         D2
00001CCA                          1373              
00001CCA  1401                    1374              MOVE.B      D1,D2
00001CCC  EE42                    1375              ASR         #seven,D2           ; Move bits 7 places over to find opmode
00001CCE  C47C 0007               1376              AND         #$07,D2
00001CD2  B43C 0005               1377              CMP.B       #five,D2
00001CD6  6D00 0012               1378              BLT         opEORB              ; Byte in opmode
00001CDA  B43C 0005               1379              CMP.B       #five,D2
00001CDE  6700 006A               1380              BEQ         opEORW              ; Word in opmode
00001CE2  B43C 0005               1381              CMP.B       #five,D2
00001CE6  6E00 00C2               1382              BGT         opEORL              ; Long in opmode
00001CEA                          1383              
00001CEA  43F9 00003D61           1384  opEORB      LEA         dispByte,A1
00001CF0  103C 000E               1385              MOVE.B      #14,D0
00001CF4  4E4F                    1386              TRAP        #15
00001CF6                          1387              
00001CF6  43F9 00003CC7           1388              LEA         space, A1           ; Display space
00001CFC  103C 000E               1389              MOVE.B      #14, D0             ; command for trap call to display message
00001D00  4E4F                    1390              TRAP        #15                 ; trap call
00001D02                          1391              
00001D02  4242                    1392              CLR         D2
00001D04  4243                    1393              CLR         D3
00001D06  3601                    1394              MOVE.W      D1,D3
00001D08  E043                    1395              ASR         #eight,D3
00001D0A  E243                    1396              ASR         #one,D3
00001D0C  C67C 0007               1397              AND         #$07,D3
00001D10  4EB9 00002EF8           1398              JSR         printEA
00001D16                          1399              
00001D16  43F9 00003CCE           1400              LEA         comma, A1           ; Display space
00001D1C  103C 000E               1401              MOVE.B      #14, D0             ; command for trap call to display message
00001D20  4E4F                    1402              TRAP        #15                 ; trap call
00001D22                          1403              
00001D22  4242                    1404              CLR         D2
00001D24  4243                    1405              CLR         D3
00001D26  1401                    1406              MOVE.B      D1,D2
00001D28  E642                    1407              ASR         #three,D2
00001D2A  C47C 0007               1408              AND         #seven,D2
00001D2E  1601                    1409              MOVE.B      D1,D3
00001D30  C67C 0007               1410              AND         #$07,D3
00001D34  4EB9 00002EF8           1411              JSR         printEA         ; Determines the "left" operand register
00001D3A                          1412              
00001D3A  43F9 00003CC3           1413              LEA         newLine,A1
00001D40  103C 000E               1414              MOVE.B      #14,D0
00001D44  4E4F                    1415              TRAP        #15
00001D46                          1416              
00001D46  6000 F2F8               1417              BRA         LOOP
00001D4A                          1418              
00001D4A                          1419              
00001D4A  43F9 00003D64           1420  opEORW      LEA         dispWord,A1
00001D50  103C 000E               1421              MOVE.B      #14,D0
00001D54  4E4F                    1422              TRAP        #15
00001D56                          1423              
00001D56  43F9 00003CC7           1424              LEA         space, A1           ; Display space
00001D5C  103C 000E               1425              MOVE.B      #14, D0             ; command for trap call to display message
00001D60  4E4F                    1426              TRAP        #15                 ; trap call
00001D62                          1427              
00001D62  4242                    1428              CLR         D2
00001D64  4243                    1429              CLR         D3
00001D66  3601                    1430              MOVE.W      D1,D3
00001D68  E043                    1431              ASR         #eight,D3
00001D6A  E243                    1432              ASR         #one,D3
00001D6C  C67C 0007               1433              AND         #$07,D3
00001D70  4EB9 00002EF8           1434              JSR         printEA
00001D76                          1435              
00001D76  43F9 00003CCE           1436              LEA         comma, A1           ; Display space
00001D7C  103C 000E               1437              MOVE.B      #14, D0             ; command for trap call to display message
00001D80  4E4F                    1438              TRAP        #15                 ; trap call
00001D82                          1439              
00001D82  4242                    1440              CLR         D2
00001D84  4243                    1441              CLR         D3
00001D86  1401                    1442              MOVE.B      D1,D2
00001D88  E642                    1443              ASR         #three,D2
00001D8A  C47C 0007               1444              AND         #seven,D2
00001D8E  1601                    1445              MOVE.B      D1,D3
00001D90  C67C 0007               1446              AND         #$07,D3
00001D94  4EB9 00002EF8           1447              JSR         printEA         ; Determines the "left" operand register
00001D9A                          1448              
00001D9A  43F9 00003CC3           1449              LEA         newLine,A1
00001DA0  103C 000E               1450              MOVE.B      #14,D0
00001DA4  4E4F                    1451              TRAP        #15
00001DA6                          1452              
00001DA6  6000 F298               1453              BRA         LOOP
00001DAA                          1454              
00001DAA  43F9 00003D67           1455  opEORL      LEA         dispLong,A1
00001DB0  103C 000E               1456              MOVE.B      #14,D0
00001DB4  4E4F                    1457              TRAP        #15
00001DB6                          1458              
00001DB6  43F9 00003CC7           1459              LEA         space, A1           ; Display space
00001DBC  103C 000E               1460              MOVE.B      #14, D0             ; command for trap call to display message
00001DC0  4E4F                    1461              TRAP        #15                 ; trap call
00001DC2                          1462              
00001DC2  4242                    1463              CLR         D2
00001DC4  4243                    1464              CLR         D3
00001DC6  3601                    1465              MOVE.W      D1,D3
00001DC8  E043                    1466              ASR         #eight,D3
00001DCA  E243                    1467              ASR         #one,D3
00001DCC  C67C 0007               1468              AND         #$07,D3
00001DD0  4EB9 00002EF8           1469              JSR         printEA
00001DD6                          1470              
00001DD6  43F9 00003CCE           1471              LEA         comma, A1           ; Display space
00001DDC  103C 000E               1472              MOVE.B      #14, D0             ; command for trap call to display message
00001DE0  4E4F                    1473              TRAP        #15                 ; trap call
00001DE2                          1474              
00001DE2  4242                    1475              CLR         D2
00001DE4  4243                    1476              CLR         D3
00001DE6  1401                    1477              MOVE.B      D1,D2
00001DE8  E642                    1478              ASR         #three,D2
00001DEA  C47C 0007               1479              AND         #seven,D2
00001DEE  1601                    1480              MOVE.B      D1,D3
00001DF0  C67C 0007               1481              AND         #$07,D3
00001DF4  4EB9 00002EF8           1482              JSR         printEA         ; Determines the "left" operand register
00001DFA                          1483              
00001DFA  43F9 00003CC3           1484              LEA         newLine,A1
00001E00  103C 000E               1485              MOVE.B      #14,D0
00001E04  4E4F                    1486              TRAP        #15
00001E06                          1487              
00001E06  6000 F238               1488              BRA         LOOP            ; trap call
00001E0A                          1489              
00001E0A                          1490  
00001E0A                          1491  ***********************************************************************************************************
00001E0A                          1492  *
00001E0A                          1493  *               CMP OPCODE
00001E0A                          1494  *
00001E0A                          1495  ***********************************************************************************************************
00001E0A                          1496  
00001E0A  43F9 00003D30           1497  opCMP       LEA         CMPmatch,A1
00001E10  103C 000E               1498              MOVE.B      #14,D0
00001E14  4E4F                    1499              TRAP        #15
00001E16                          1500              
00001E16  4242                    1501              CLR         D2
00001E18                          1502              
00001E18  1401                    1503              MOVE.B      D1,D2
00001E1A  EC42                    1504              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001E1C  C47C 0007               1505              AND         #$07,D2
00001E20  B43C 0000               1506              CMP.B       #zero,D2
00001E24  6700 0016               1507              BEQ         opCMPB              ; Byte in opmode
00001E28  B43C 0001               1508              CMP.B       #one,D2
00001E2C  6700 0068               1509              BEQ         opCMPW              ; Word in opmode
00001E30  B43C 0002               1510              CMP.B       #two,D2
00001E34  6700 00BA               1511              BEQ         opCMPL              ; Long in opmode
00001E38                          1512              
00001E38  6000 1E24               1513              BRA         printInvalid        ; Incorrect input
00001E3C                          1514  
00001E3C  43F9 00003D61           1515  opCMPB      LEA         dispByte,A1
00001E42  103C 000E               1516              MOVE.B      #14,D0
00001E46  4E4F                    1517              TRAP        #15
00001E48                          1518              
00001E48  43F9 00003CC7           1519              LEA         space, A1           ; Display space
00001E4E  103C 000E               1520              MOVE.B      #14, D0             ; command for trap call to display message
00001E52  4E4F                    1521              TRAP        #15                 ; trap call
00001E54                          1522              
00001E54  1401                    1523              MOVE.B      D1,D2
00001E56  E642                    1524              ASR         #3,D2
00001E58  C47C 0007               1525              AND         #$07,D2
00001E5C  1601                    1526              MOVE.B      D1,D3
00001E5E  C67C 0007               1527              AND         #$07,D3
00001E62  4EB9 00002EF8           1528              JSR         printEA         ; Determines the "left" operand register
00001E68                          1529              
00001E68  43F9 00003CCE           1530              LEA         comma, A1           ; Display space
00001E6E  103C 000E               1531              MOVE.B      #14, D0             ; command for trap call to display message
00001E72  4E4F                    1532              TRAP        #15                 ; trap call
00001E74                          1533              
00001E74  4242                    1534              CLR         D2
00001E76  3601                    1535              MOVE.W      D1,D3
00001E78  E043                    1536              ASR         #eight,D3
00001E7A  E243                    1537              ASR         #one,D3
00001E7C  C67C 0007               1538              AND         #$07,D3
00001E80  4EB9 00002EF8           1539              JSR         printEA
00001E86                          1540              
00001E86  43F9 00003CC3           1541              LEA         newLine,A1
00001E8C  103C 000E               1542              MOVE.B      #14,D0
00001E90  4E4F                    1543              TRAP        #15
00001E92                          1544              
00001E92  6000 F1AC               1545              BRA         LOOP
00001E96                          1546              
00001E96  43F9 00003D64           1547  opCMPW      LEA         dispWord,A1
00001E9C  103C 000E               1548              MOVE.B      #14,D0
00001EA0  4E4F                    1549              TRAP        #15
00001EA2                          1550              
00001EA2  43F9 00003CC7           1551              LEA         space, A1           ; Display space
00001EA8  103C 000E               1552              MOVE.B      #14, D0             ; command for trap call to display message
00001EAC  4E4F                    1553              TRAP        #15                 ; trap call
00001EAE                          1554              
00001EAE  1401                    1555              MOVE.B      D1,D2
00001EB0  E642                    1556              ASR         #3,D2
00001EB2  C47C 0007               1557              AND         #$07,D2
00001EB6  1601                    1558              MOVE.B      D1,D3
00001EB8  C67C 0007               1559              AND         #$07,D3
00001EBC  4EB9 00002EF8           1560              JSR         printEA         ; Determines the "left" operand register
00001EC2                          1561              
00001EC2  43F9 00003CCE           1562              LEA         comma, A1           ; Display space
00001EC8  103C 000E               1563              MOVE.B      #14, D0             ; command for trap call to display message
00001ECC  4E4F                    1564              TRAP        #15                 ; trap call
00001ECE                          1565              
00001ECE  4242                    1566              CLR         D2
00001ED0  3601                    1567              MOVE.W      D1,D3
00001ED2  E043                    1568              ASR         #eight,D3
00001ED4  E243                    1569              ASR         #one,D3
00001ED6  C67C 0007               1570              AND         #$07,D3
00001EDA  4EB9 00002EF8           1571              JSR         printEA
00001EE0                          1572              
00001EE0  43F9 00003CC3           1573              LEA         newLine,A1
00001EE6  103C 000E               1574              MOVE.B      #14,D0
00001EEA  4E4F                    1575              TRAP        #15
00001EEC                          1576              
00001EEC  6000 F152               1577              BRA         LOOP
00001EF0                          1578  
00001EF0  43F9 00003D67           1579  opCMPL      LEA         dispLong,A1
00001EF6  103C 000E               1580              MOVE.B      #14,D0
00001EFA  4E4F                    1581              TRAP        #15
00001EFC                          1582              
00001EFC  43F9 00003CC7           1583              LEA         space, A1           ; Display space
00001F02  103C 000E               1584              MOVE.B      #14, D0             ; command for trap call to display message
00001F06  4E4F                    1585              TRAP        #15                 ; trap call
00001F08                          1586              
00001F08  1401                    1587              MOVE.B      D1,D2
00001F0A  E642                    1588              ASR         #3,D2
00001F0C  C47C 0007               1589              AND         #$07,D2
00001F10  1601                    1590              MOVE.B      D1,D3
00001F12  C67C 0007               1591              AND         #$07,D3
00001F16  4EB9 00002EF8           1592              JSR         printEA         ; Determines the "left" operand register
00001F1C                          1593              
00001F1C  43F9 00003CCE           1594              LEA         comma, A1           ; Display space
00001F22  103C 000E               1595              MOVE.B      #14, D0             ; command for trap call to display message
00001F26  4E4F                    1596              TRAP        #15                 ; trap call
00001F28                          1597              
00001F28  4242                    1598              CLR         D2
00001F2A  3601                    1599              MOVE.W      D1,D3
00001F2C  E043                    1600              ASR         #eight,D3
00001F2E  E243                    1601              ASR         #one,D3
00001F30  C67C 0007               1602              AND         #$07,D3
00001F34  4EB9 00002EF8           1603              JSR         printEA
00001F3A                          1604              
00001F3A  43F9 00003CC3           1605              LEA         newLine,A1
00001F40  103C 000E               1606              MOVE.B      #14,D0
00001F44  4E4F                    1607              TRAP        #15
00001F46                          1608              
00001F46  6000 F0F8               1609              BRA         LOOP
00001F4A                          1610  
00001F4A                          1611  ***********************************************************************************************************
00001F4A                          1612  *
00001F4A                          1613  *               SUB OPCODE
00001F4A                          1614  *
00001F4A                          1615  ***********************************************************************************************************
00001F4A                          1616  
00001F4A  43F9 00003D28           1617  opSUB       LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001F50  103C 000E               1618              MOVE.B      #14, D0             ; command for trap call to display message
00001F54  4E4F                    1619              TRAP        #15                 ; trap call
00001F56                          1620          
00001F56                          1621          
00001F56  E141                    1622              ASL         #eight,D1
00001F58  1218                    1623              MOVE.B      (A0)+,D1
00001F5A  4242                    1624              CLR         D2
00001F5C                          1625              
00001F5C  3401                    1626              MOVE.W      D1,D2
00001F5E  EC42                    1627              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001F60  C47C 0007               1628              AND         #seven,D2
00001F64                          1629              
00001F64                          1630              ; These are for DN - EA
00001F64  B43C 0000               1631              CMP.B       #zero,D2
00001F68  6700 002A               1632              BEQ         opSUBB              ; Byte in opmode
00001F6C  B43C 0001               1633              CMP.B       #one,D2
00001F70  6700 007C               1634              BEQ         opSUBW              ; Word in opmode
00001F74  B43C 0002               1635              CMP.B       #two,D2
00001F78  6700 00CE               1636              BEQ         opSUBL              ; Long in opmode
00001F7C                          1637              
00001F7C                          1638              ; These are for EA - DN
00001F7C  B43C 0004               1639              CMP.B       #four,D2
00001F80  6700 0012               1640              BEQ         opSUBB              ; Byte in opmode
00001F84  B43C 0005               1641              CMP.B       #five,D2
00001F88  6700 0064               1642              BEQ         opSUBW              ; Word in opmode
00001F8C  B43C 0006               1643              CMP.B       #six,D2
00001F90  6700 00B6               1644              BEQ         opSUBL              ; Long in opmode
00001F94                          1645              
00001F94  43F9 00003D61           1646  opSUBB      LEA         dispByte,A1
00001F9A  103C 000E               1647              MOVE.B      #14,D0
00001F9E  4E4F                    1648              TRAP        #15
00001FA0                          1649              
00001FA0  43F9 00003CC7           1650              LEA         space, A1           ; Display space
00001FA6  103C 000E               1651              MOVE.B      #14, D0             ; command for trap call to display message
00001FAA  4E4F                    1652              TRAP        #15                 ; trap call         
00001FAC                          1653              
00001FAC  1401                    1654              MOVE.B      D1,D2
00001FAE  E642                    1655              ASR         #3,D2
00001FB0  C47C 0007               1656              AND         #$07,D2
00001FB4  3601                    1657              MOVE.W      D1,D3
00001FB6  C67C 0007               1658              AND         #$07,D3
00001FBA  4EB9 00002EF8           1659              JSR         printEA         ; Determines the "left" operand register
00001FC0                          1660              
00001FC0  43F9 00003CCE           1661              LEA         comma, A1           ; Display space
00001FC6  103C 000E               1662              MOVE.B      #14, D0             ; command for trap call to display message
00001FCA  4E4F                    1663              TRAP        #15                 ; trap call
00001FCC                          1664              
00001FCC  4242                    1665              CLR         D2
00001FCE  3601                    1666              MOVE.W      D1,D3
00001FD0  E043                    1667              ASR         #eight,D3
00001FD2  E243                    1668              ASR         #one,D3
00001FD4  C67C 0007               1669              AND         #$07,D3
00001FD8  4EB9 00002EF8           1670              JSR         printEA
00001FDE                          1671              
00001FDE  43F9 00003CC3           1672              LEA         newLine,A1
00001FE4  103C 000E               1673              MOVE.B      #14,D0
00001FE8  4E4F                    1674              TRAP        #15
00001FEA                          1675              
00001FEA  6000 F054               1676              BRA         LOOP
00001FEE                          1677              
00001FEE                          1678              
00001FEE  43F9 00003D64           1679  opSUBW      LEA         dispWord,A1
00001FF4  103C 000E               1680              MOVE.B      #14,D0
00001FF8  4E4F                    1681              TRAP        #15
00001FFA                          1682              
00001FFA  43F9 00003CC7           1683              LEA         space, A1           ; Display space
00002000  103C 000E               1684              MOVE.B      #14, D0             ; command for trap call to display message
00002004  4E4F                    1685              TRAP        #15                 ; trap call         
00002006                          1686              
00002006  1401                    1687              MOVE.B      D1,D2
00002008  E642                    1688              ASR         #3,D2
0000200A  C47C 0007               1689              AND         #$07,D2
0000200E  3601                    1690              MOVE.W      D1,D3
00002010  C67C 0007               1691              AND         #$07,D3
00002014  4EB9 00002EF8           1692              JSR         printEA         ; Determines the "left" operand register
0000201A                          1693              
0000201A  43F9 00003CCE           1694              LEA         comma, A1           ; Display space
00002020  103C 000E               1695              MOVE.B      #14, D0             ; command for trap call to display message
00002024  4E4F                    1696              TRAP        #15                 ; trap call
00002026                          1697              
00002026  4242                    1698              CLR         D2
00002028  3601                    1699              MOVE.W      D1,D3
0000202A  E043                    1700              ASR         #eight,D3
0000202C  E243                    1701              ASR         #one,D3
0000202E  C67C 0007               1702              AND         #$07,D3
00002032  4EB9 00002EF8           1703              JSR         printEA
00002038                          1704              
00002038  43F9 00003CC3           1705              LEA         newLine,A1
0000203E  103C 000E               1706              MOVE.B      #14,D0
00002042  4E4F                    1707              TRAP        #15
00002044                          1708              
00002044  6000 EFFA               1709              BRA         LOOP
00002048                          1710              
00002048  43F9 00003D67           1711  opSUBL      LEA         dispLong,A1
0000204E  103C 000E               1712              MOVE.B      #14,D0
00002052  4E4F                    1713              TRAP        #15
00002054                          1714              
00002054  43F9 00003CC7           1715              LEA         space, A1           ; Display space
0000205A  103C 000E               1716              MOVE.B      #14, D0             ; command for trap call to display message
0000205E  4E4F                    1717              TRAP        #15                 ; trap call         
00002060                          1718              
00002060  1401                    1719              MOVE.B      D1,D2
00002062  E642                    1720              ASR         #3,D2
00002064  C47C 0007               1721              AND         #$07,D2
00002068  3601                    1722              MOVE.W      D1,D3
0000206A  C67C 0007               1723              AND         #$07,D3
0000206E  4EB9 00002EF8           1724              JSR         printEA         ; Determines the "left" operand register
00002074                          1725              
00002074  43F9 00003CCE           1726              LEA         comma, A1           ; Display space
0000207A  103C 000E               1727              MOVE.B      #14, D0             ; command for trap call to display message
0000207E  4E4F                    1728              TRAP        #15                 ; trap call
00002080                          1729              
00002080  4242                    1730              CLR         D2
00002082  3601                    1731              MOVE.W      D1,D3
00002084  E043                    1732              ASR         #eight,D3
00002086  E243                    1733              ASR         #one,D3
00002088  C67C 0007               1734              AND         #$07,D3
0000208C  4EB9 00002EF8           1735              JSR         printEA
00002092                          1736              
00002092  43F9 00003CC3           1737              LEA         newLine,A1
00002098  103C 000E               1738              MOVE.B      #14,D0
0000209C  4E4F                    1739              TRAP        #15
0000209E                          1740              
0000209E  6000 EFA0               1741              BRA         LOOP
000020A2                          1742              
000020A2                          1743              
000020A2                          1744              
000020A2                          1745  ***********************************************************************************************************
000020A2                          1746  *
000020A2                          1747  *               BRA OPCODE
000020A2                          1748  *
000020A2                          1749  ***********************************************************************************************************
000020A2                          1750              
000020A2  43F9 00003D0C           1751  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
000020A8  103C 000E               1752          MOVE.B      #14, D0             ; command for trap call to display message
000020AC  4E4F                    1753          TRAP        #15                 ; trap call
000020AE                          1754          
000020AE  4242                    1755          CLR         D2
000020B0  4243                    1756          CLR         D3      
000020B2                          1757  
000020B2  43F9 00003CC7           1758          LEA         space,A1
000020B8  103C 000E               1759          MOVE.B      #14,D0
000020BC  4E4F                    1760          TRAP        #15
000020BE                          1761          
000020BE  143C 0007               1762          MOVE.B      #seven,D2
000020C2  1218                    1763          MOVE.B      (A0)+,D1
000020C4  4EB9 00002EF8           1764          JSR         printEA
000020CA                          1765          
000020CA  43F9 00003CC3           1766          LEA         newLine, A1           ; create new line
000020D0  103C 000E               1767          MOVE.B      #14, D0             ; command for trap call to display message
000020D4  4E4F                    1768          TRAP        #15                 ; trap call
000020D6                          1769  
000020D6  6000 EF68               1770          BRA         LOOP
000020DA                          1771          
000020DA                          1772          
000020DA  43F9 00003D10           1773  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
000020E0  103C 000E               1774          MOVE.B      #14, D0             ; command for trap call to display message
000020E4  4E4F                    1775          TRAP        #15                 ; trap call
000020E6                          1776          
000020E6  4242                    1777          CLR         D2
000020E8  4243                    1778          CLR         D3      
000020EA                          1779  
000020EA  43F9 00003CC7           1780          LEA         space,A1
000020F0  103C 000E               1781          MOVE.B      #14,D0
000020F4  4E4F                    1782          TRAP        #15
000020F6                          1783          
000020F6  143C 0007               1784          MOVE.B      #seven,D2
000020FA  1218                    1785          MOVE.B      (A0)+,D1
000020FC  4EB9 00002EF8           1786          JSR         printEA
00002102                          1787          
00002102  43F9 00003CC3           1788          LEA         newLine, A1           ; create new line
00002108  103C 000E               1789          MOVE.B      #14, D0             ; command for trap call to display message
0000210C  4E4F                    1790          TRAP        #15                 ; trap call
0000210E                          1791  
0000210E  43F9 00003D14           1792  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00002114  103C 000E               1793          MOVE.B      #14, D0             ; command for trap call to display message
00002118  4E4F                    1794          TRAP        #15                 ; trap call
0000211A                          1795          
0000211A  4242                    1796          CLR         D2
0000211C  4243                    1797          CLR         D3      
0000211E                          1798  
0000211E  43F9 00003CC7           1799          LEA         space,A1
00002124  103C 000E               1800          MOVE.B      #14,D0
00002128  4E4F                    1801          TRAP        #15
0000212A                          1802          
0000212A  143C 0007               1803          MOVE.B      #seven,D2
0000212E  1218                    1804          MOVE.B      (A0)+,D1
00002130  4EB9 00002EF8           1805          JSR         printEA
00002136                          1806          
00002136  43F9 00003CC3           1807          LEA         newLine, A1           ; create new line
0000213C  103C 000E               1808          MOVE.B      #14, D0             ; command for trap call to display message
00002140  4E4F                    1809          TRAP        #15                 ; trap call
00002142                          1810  
00002142  43F9 00003D18           1811  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00002148  103C 000E               1812          MOVE.B      #14, D0             ; command for trap call to display message
0000214C  4E4F                    1813          TRAP        #15                 ; trap call
0000214E                          1814          
0000214E  4242                    1815          CLR         D2
00002150  4243                    1816          CLR         D3      
00002152                          1817  
00002152  43F9 00003CC7           1818          LEA         space,A1
00002158  103C 000E               1819          MOVE.B      #14,D0
0000215C  4E4F                    1820          TRAP        #15
0000215E                          1821          
0000215E  143C 0007               1822          MOVE.B      #seven,D2
00002162  1218                    1823          MOVE.B      (A0)+,D1
00002164  4EB9 00002EF8           1824          JSR         printEA
0000216A                          1825          
0000216A  43F9 00003CC3           1826          LEA         newLine, A1           ; create new line
00002170  103C 000E               1827          MOVE.B      #14, D0             ; command for trap call to display message
00002174  4E4F                    1828          TRAP        #15                 ; trap call
00002176                          1829  
00002176  43F9 00003D1C           1830  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
0000217C  103C 000E               1831          MOVE.B      #14, D0             ; command for trap call to display message
00002180  4E4F                    1832          TRAP        #15                 ; trap call
00002182                          1833          
00002182  4242                    1834          CLR         D2
00002184  4243                    1835          CLR         D3      
00002186                          1836  
00002186  43F9 00003CC7           1837          LEA         space,A1
0000218C  103C 000E               1838          MOVE.B      #14,D0
00002190  4E4F                    1839          TRAP        #15
00002192                          1840          
00002192  143C 0007               1841          MOVE.B      #seven,D2
00002196  1218                    1842          MOVE.B      (A0)+,D1
00002198  4EB9 00002EF8           1843          JSR         printEA
0000219E                          1844          
0000219E  43F9 00003CC3           1845          LEA         newLine, A1           ; create new line
000021A4  103C 000E               1846          MOVE.B      #14, D0             ; command for trap call to display message
000021A8  4E4F                    1847          TRAP        #15                 ; trap call
000021AA                          1848          
000021AA                          1849          
000021AA                          1850          ***********************************************************************************************************
000021AA                          1851  *
000021AA                          1852  *               SUBQ OPCODE
000021AA                          1853  *
000021AA                          1854  ***********************************************************************************************************
000021AA                          1855  
000021AA                          1856  opSUBQ      
000021AA  43F9 00003D07           1857              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
000021B0  103C 000E               1858              MOVE.B      #14, D0             ; command for trap call to display message
000021B4  4E4F                    1859              TRAP        #15                 ; trap call
000021B6                          1860              
000021B6  1401                    1861              MOVE.B      D1,D2
000021B8  EE42                    1862              ASR         #seven,D2           ; Move bits 7 places over to find size
000021BA  C47C 0007               1863              AND         #$07,D2
000021BE                          1864              
000021BE                          1865              ; Find size bits
000021BE  B43C 0000               1866              CMP.B       #zero,D2
000021C2  6700 0012               1867              BEQ         opSUBQB             ; Byte in size
000021C6  B43C 0001               1868              CMP.B       #one,D2
000021CA  6700 0024               1869              BEQ         opSUBQW             ; Word in size
000021CE  B43C 0002               1870              CMP.B       #two,D2
000021D2  6700 0036               1871              BEQ         opSUBQL             ; Long in size
000021D6                          1872              
000021D6                          1873              
000021D6  43F9 00003D61           1874  opSUBQB     LEA         dispByte,A1
000021DC  103C 000E               1875              MOVE.B      #14,D0
000021E0  4E4F                    1876              TRAP        #15 
000021E2                          1877              
000021E2  E141                    1878              ASL         #eight,D1
000021E4  1218                    1879              MOVE.B      (A0)+,D1
000021E6  4EB9 00002E20           1880              JSR         PrntImm
000021EC                          1881              
000021EC  6000 EE52               1882              BRA         LOOP
000021F0                          1883              
000021F0  43F9 00003D64           1884  opSUBQW     LEA         dispWord,A1
000021F6  103C 000E               1885              MOVE.B      #14,D0
000021FA  4E4F                    1886              TRAP        #15
000021FC                          1887              
000021FC  E141                    1888              ASL         #eight,D1
000021FE  1218                    1889              MOVE.B      (A0)+,D1
00002200  4EB9 00002E20           1890              JSR         PrntImm
00002206                          1891              
00002206  6000 EE38               1892              BRA         LOOP
0000220A                          1893              
0000220A  43F9 00003D67           1894  opSUBQL     LEA         dispLong,A1
00002210  103C 000E               1895              MOVE.B      #14,D0
00002214  4E4F                    1896              TRAP        #15
00002216                          1897              
00002216  E141                    1898              ASL         #eight,D1
00002218  1218                    1899              MOVE.B      (A0)+,D1
0000221A                          1900              
0000221A  4246                    1901              CLR         D6
0000221C  1C3C 0001               1902              MOVE.B      #1,D6
00002220                          1903              
00002220  4EB9 00002E20           1904              JSR         PrntImm         
00002226                          1905              
00002226  6000 EE18               1906              BRA         LOOP            ; trap call
0000222A                          1907  
0000222A  43F9 00003D34           1908  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002230  103C 000E               1909          MOVE.B      #14, D0             ; command for trap call to display message
00002234  4E4F                    1910          TRAP        #15                 ; trap call
00002236  43F9 00003CC7           1911          LEA         space, A1           ; create spaces
0000223C  103C 000E               1912          MOVE.B      #14, D0             ; command for trap call to display message
00002240  4E4F                    1913          TRAP        #15                 ; trap call
00002242                          1914          
00002242  E141                    1915          ASL         #eight, D1
00002244  1218                    1916          MOVE.B      (A0)+, D1
00002246                          1917          
00002246  4242                    1918          CLR         D2
00002248  4243                    1919          CLR         D3
0000224A  1401                    1920          MOVE.B      D1, D2
0000224C  E642                    1921          ASR         #three, D2
0000224E  C47C 0007               1922          AND         #seven, D2
00002252  1601                    1923          MOVE.B      D1, D3
00002254  C67C 0007               1924          AND         #seven, D3
00002258                          1925          
00002258  4EB9 00002EF8           1926          JSR         printEA
0000225E                          1927          
0000225E  43F9 00003CCE           1928          LEA         comma, A1           ; create comma
00002264  103C 000E               1929          MOVE.B      #14, D0             ; command for trap call to display message
00002268  4E4F                    1930          TRAP        #15                 ; trap call
0000226A                          1931  
0000226A  4242                    1932          CLR         D2
0000226C  4243                    1933          CLR         D3
0000226E  3601                    1934          MOVE.W      D1, D3
00002270  E043                    1935          ASR         #eight, D3
00002272  E243                    1936          ASR         #one, D3
00002274  C67C 0007               1937          AND         #seven, D3
00002278                          1938  
00002278  4EB9 00002EF8           1939          JSR         printEA
0000227E                          1940          
0000227E  43F9 00003CC3           1941          LEA         newLine, A1           ; create new line
00002284  103C 000E               1942          MOVE.B      #14, D0             ; command for trap call to display message
00002288  4E4F                    1943          TRAP        #15                 ; trap call
0000228A                          1944          
0000228A  6000 EDB4               1945          BRA         LOOP
0000228E                          1946          
0000228E  43F9 00003D39           1947  opADDB  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002294  103C 000E               1948          MOVE.B      #14, D0             ; command for trap call to display message
00002298  4E4F                    1949          TRAP        #15                 ; trap call
0000229A                          1950          
0000229A  43F9 00003D61           1951          LEA         dispByte, A1        ; display byte
000022A0  103C 000E               1952          MOVE.B      #14, D0             ; command for trap call to display message
000022A4  4E4F                    1953          TRAP        #15                 ; trap call
000022A6  43F9 00003CC7           1954          LEA         space, A1           ; create spaces
000022AC  103C 000E               1955          MOVE.B      #14, D0             ; command for trap call to display message
000022B0  4E4F                    1956          TRAP        #15                 ; trap call
000022B2                          1957          
000022B2  4242                    1958          CLR         D2
000022B4  4243                    1959          CLR         D3
000022B6  1401                    1960          MOVE.B      D1, D2
000022B8  E642                    1961          ASR         #three, D2
000022BA  C47C 0007               1962          AND         #seven, D2
000022BE  1601                    1963          MOVE.B      D1, D3
000022C0  C67C 0007               1964          AND         #seven, D3
000022C4                          1965          
000022C4  4EB9 00002EF8           1966          JSR         printEA
000022CA                          1967          
000022CA  43F9 00003CCE           1968          LEA         comma, A1           ; create comma
000022D0  103C 000E               1969          MOVE.B      #14, D0             ; command for trap call to display message
000022D4  4E4F                    1970          TRAP        #15                 ; trap call
000022D6                          1971  
000022D6  4242                    1972          CLR         D2
000022D8  4243                    1973          CLR         D3
000022DA  3601                    1974          MOVE.W      D1, D3
000022DC  E043                    1975          ASR         #eight, D3
000022DE  E243                    1976          ASR         #one, D3
000022E0  C67C 0007               1977          AND         #seven, D3
000022E4                          1978  
000022E4  4EB9 00002EF8           1979          JSR         printEA
000022EA                          1980          
000022EA  43F9 00003CC3           1981          LEA         newLine, A1           ; create new line
000022F0  103C 000E               1982          MOVE.B      #14, D0             ; command for trap call to display message
000022F4  4E4F                    1983          TRAP        #15                 ; trap call
000022F6                          1984          
000022F6  6000 ED48               1985          BRA         LOOP
000022FA                          1986          
000022FA  43F9 00003D39           1987  opADDW  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002300  103C 000E               1988          MOVE.B      #14, D0             ; command for trap call to display message
00002304  4E4F                    1989          TRAP        #15                 ; trap call
00002306                          1990  
00002306  43F9 00003D64           1991          LEA         dispWord, A1        ; display word
0000230C  103C 000E               1992          MOVE.B      #14, D0             ; command for trap call to display message
00002310  4E4F                    1993          TRAP        #15                 ; trap call
00002312  43F9 00003CC7           1994          LEA         space, A1           ; create spaces
00002318  103C 000E               1995          MOVE.B      #14, D0             ; command for trap call to display message
0000231C  4E4F                    1996          TRAP        #15                 ; trap call
0000231E                          1997          
0000231E  4242                    1998          CLR         D2
00002320  4243                    1999          CLR         D3
00002322  1401                    2000          MOVE.B      D1, D2
00002324  E642                    2001          ASR         #three, D2
00002326  C47C 0007               2002          AND         #seven, D2
0000232A  1601                    2003          MOVE.B      D1, D3
0000232C  C67C 0007               2004          AND         #seven, D3
00002330                          2005          
00002330  4EB9 00002EF8           2006          JSR         printEA
00002336                          2007          
00002336  43F9 00003CCE           2008          LEA         comma, A1           ; create comma
0000233C  103C 000E               2009          MOVE.B      #14, D0             ; command for trap call to display message
00002340  4E4F                    2010          TRAP        #15                 ; trap call
00002342                          2011  
00002342  4242                    2012          CLR         D2
00002344  4243                    2013          CLR         D3
00002346  3601                    2014          MOVE.W      D1, D3
00002348  E043                    2015          ASR         #eight, D3
0000234A  E243                    2016          ASR         #one, D3
0000234C  C67C 0007               2017          AND         #seven, D3
00002350                          2018  
00002350  4EB9 00002EF8           2019          JSR         printEA
00002356                          2020          
00002356  43F9 00003CC3           2021          LEA         newLine, A1           ; create new line
0000235C  103C 000E               2022          MOVE.B      #14, D0             ; command for trap call to display message
00002360  4E4F                    2023          TRAP        #15                 ; trap call
00002362                          2024          
00002362  6000 ECDC               2025          BRA         LOOP
00002366                          2026          
00002366  43F9 00003D39           2027  opADDL  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
0000236C  103C 000E               2028          MOVE.B      #14, D0             ; command for trap call to display message
00002370  4E4F                    2029          TRAP        #15                 ; trap call
00002372                          2030          
00002372  43F9 00003D67           2031          LEA         dispLong, A1        ; display long
00002378  103C 000E               2032          MOVE.B      #14, D0             ; command for trap call to display message
0000237C  4E4F                    2033          TRAP        #15                 ; trap call
0000237E  43F9 00003CC7           2034          LEA         space, A1           ; create spaces
00002384  103C 000E               2035          MOVE.B      #14, D0             ; command for trap call to display message
00002388  4E4F                    2036          TRAP        #15                 ; trap call
0000238A                          2037          
0000238A  4242                    2038          CLR         D2
0000238C  4243                    2039          CLR         D3
0000238E  1401                    2040          MOVE.B      D1, D2
00002390  E642                    2041          ASR         #three, D2
00002392  C47C 0007               2042          AND         #seven, D2
00002396  1601                    2043          MOVE.B      D1, D3
00002398  C67C 0007               2044          AND         #seven, D3
0000239C                          2045          
0000239C  4246                    2046          CLR         D6
0000239E  1C3C 0001               2047          MOVE.B      #1, D6
000023A2                          2048          
000023A2  4EB9 00002EF8           2049          JSR         printEA
000023A8  4246                    2050          CLR         D6
000023AA                          2051          
000023AA  43F9 00003CCE           2052          LEA         comma, A1           ; create comma
000023B0  103C 000E               2053          MOVE.B      #14, D0             ; command for trap call to display message
000023B4  4E4F                    2054          TRAP        #15                 ; trap call
000023B6                          2055  
000023B6  4242                    2056          CLR         D2
000023B8  4243                    2057          CLR         D3
000023BA  3601                    2058          MOVE.W      D1, D3
000023BC  E043                    2059          ASR         #eight, D3
000023BE  E243                    2060          ASR         #one, D3
000023C0  C67C 0007               2061          AND         #seven, D3
000023C4                          2062  
000023C4  4EB9 00002EF8           2063          JSR         printEA
000023CA                          2064          
000023CA  43F9 00003CC3           2065          LEA         newLine, A1           ; create new line
000023D0  103C 000E               2066          MOVE.B      #14, D0             ; command for trap call to display message
000023D4  4E4F                    2067          TRAP        #15                 ; trap call
000023D6                          2068          
000023D6  6000 EC68               2069          BRA         LOOP
000023DA                          2070  
000023DA  43F9 00003D3D           2071  opADDAW LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
000023E0  103C 000E               2072          MOVE.B      #14, D0             ; command for trap call to display message
000023E4  4E4F                    2073          TRAP        #15                 ; trap call
000023E6                          2074          
000023E6  43F9 00003D64           2075          LEA         dispWord, A1        ; display word
000023EC  103C 000E               2076          MOVE.B      #14, D0             ; command for trap call to display message
000023F0  4E4F                    2077          TRAP        #15                 ; trap call
000023F2  43F9 00003CC7           2078          LEA         space, A1           ; create spaces
000023F8  103C 000E               2079          MOVE.B      #14, D0             ; command for trap call to display message
000023FC  4E4F                    2080          TRAP        #15                 ; trap call
000023FE                          2081          
000023FE  4242                    2082          CLR         D2
00002400  4243                    2083          CLR         D3
00002402  1401                    2084          MOVE.B      D1, D2
00002404  E642                    2085          ASR         #three, D2
00002406  C47C 0007               2086          AND         #seven, D2
0000240A  1601                    2087          MOVE.B      D1, D3
0000240C  C67C 0007               2088          AND         #seven, D3
00002410                          2089          
00002410  4EB9 00002EF8           2090          JSR         printEA
00002416                          2091          
00002416  43F9 00003CCE           2092          LEA         comma, A1           ; create comma
0000241C  103C 000E               2093          MOVE.B      #14, D0             ; command for trap call to display message
00002420  4E4F                    2094          TRAP        #15                 ; trap call
00002422                          2095  
00002422  4242                    2096          CLR         D2
00002424  4243                    2097          CLR         D3
00002426  143C 0001               2098          MOVE.B      #one, D2
0000242A  3601                    2099          MOVE.W      D1, D3
0000242C  E043                    2100          ASR         #eight, D3
0000242E  E243                    2101          ASR         #one, D3
00002430  C67C 0007               2102          AND         #seven, D3
00002434                          2103  
00002434  4EB9 00002EF8           2104          JSR         printEA
0000243A                          2105          
0000243A  43F9 00003CC3           2106          LEA         newLine, A1           ; create new line
00002440  103C 000E               2107          MOVE.B      #14, D0             ; command for trap call to display message
00002444  4E4F                    2108          TRAP        #15                 ; trap call
00002446                          2109          
00002446  6000 EBF8               2110          BRA         LOOP
0000244A                          2111  
0000244A  43F9 00003D3D           2112  opADDAL LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002450  103C 000E               2113          MOVE.B      #14, D0             ; command for trap call to display message
00002454  4E4F                    2114          TRAP        #15                 ; trap call
00002456                          2115  
00002456  43F9 00003D67           2116          LEA         dispLong, A1        ; display long
0000245C  103C 000E               2117          MOVE.B      #14, D0             ; command for trap call to display message
00002460  4E4F                    2118          TRAP        #15                 ; trap call
00002462  43F9 00003CC7           2119          LEA         space, A1           ; create spaces
00002468  103C 000E               2120          MOVE.B      #14, D0             ; command for trap call to display message
0000246C  4E4F                    2121          TRAP        #15                 ; trap call
0000246E                          2122          
0000246E  4242                    2123          CLR         D2
00002470  4243                    2124          CLR         D3
00002472  1401                    2125          MOVE.B      D1, D2
00002474  E642                    2126          ASR         #three, D2
00002476  C47C 0007               2127          AND         #seven, D2
0000247A  1601                    2128          MOVE.B      D1, D3
0000247C  C67C 0007               2129          AND         #seven, D3
00002480                          2130          
00002480  4EB9 00002EF8           2131          JSR         printEA
00002486                          2132          
00002486  43F9 00003CCE           2133          LEA         comma, A1           ; create comma
0000248C  103C 000E               2134          MOVE.B      #14, D0             ; command for trap call to display message
00002490  4E4F                    2135          TRAP        #15                 ; trap call
00002492                          2136  
00002492  4242                    2137          CLR         D2
00002494  4243                    2138          CLR         D3
00002496  143C 0001               2139          MOVE.B      #one, D2
0000249A  3601                    2140          MOVE.W      D1, D3
0000249C  E043                    2141          ASR         #eight, D3
0000249E  E243                    2142          ASR         #one, D3
000024A0  C67C 0007               2143          AND         #seven, D3
000024A4                          2144  
000024A4  4EB9 00002EF8           2145          JSR         printEA
000024AA                          2146          
000024AA  43F9 00003CC3           2147          LEA         newLine, A1           ; create new line
000024B0  103C 000E               2148          MOVE.B      #14, D0             ; command for trap call to display message
000024B4  4E4F                    2149          TRAP        #15                 ; trap call
000024B6                          2150          
000024B6  6000 EB88               2151          BRA         LOOP
000024BA                          2152          
000024BA  43F9 00003D4E           2153  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024C0  103C 000E               2154          MOVE.B      #14, D0             ; command for trap call to display message
000024C4  4E4F                    2155          TRAP        #15                 ; trap call
000024C6                          2156          
000024C6  43F9 00003D64           2157          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024CC  103C 000E               2158          MOVE.B      #14, D0             ; command for trap call to display message
000024D0  4E4F                    2159          TRAP        #15                 ; trap call
000024D2                          2160          
000024D2  43F9 00003CC7           2161          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024D8  103C 000E               2162          MOVE.B      #14, D0             ; command for trap call to display message
000024DC  4E4F                    2163          TRAP        #15                 ; trap call
000024DE                          2164          
000024DE  4242                    2165          CLR         D2
000024E0  4243                    2166          CLR         D3
000024E2  1401                    2167          MOVE.B      D1,D2
000024E4  1601                    2168          MOVE.B      D1,D3
000024E6                          2169          
000024E6  E602                    2170          ASR.B       #three, D2
000024E8  C47C 0007               2171          AND         #seven, D2
000024EC  C67C 0007               2172          AND         #seven, D3        
000024F0                          2173          
000024F0  4EB9 00002EF8           2174          JSR         printEA
000024F6                          2175          
000024F6  43F9 00003CC3           2176          LEA         newLine, A1           ; Display space
000024FC  103C 000E               2177          MOVE.B      #14, D0             ; command for trap call to display message
00002500  4E4F                    2178          TRAP        #15                 ; trap call
00002502                          2179          
00002502  6000 EB3C               2180          BRA         LOOP
00002506                          2181  
00002506  43F9 00003D4A           2182  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000250C  103C 000E               2183          MOVE.B      #14, D0             ; command for trap call to display message
00002510  4E4F                    2184          TRAP        #15                 ; trap call
00002512                          2185          
00002512  43F9 00003D64           2186          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002518  103C 000E               2187          MOVE.B      #14, D0             ; command for trap call to display message
0000251C  4E4F                    2188          TRAP        #15                 ; trap call
0000251E                          2189          
0000251E  43F9 00003CC7           2190          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002524  103C 000E               2191          MOVE.B      #14, D0             ; command for trap call to display message
00002528  4E4F                    2192          TRAP        #15                 ; trap call
0000252A                          2193          
0000252A  4242                    2194          CLR         D2
0000252C  4243                    2195          CLR         D3
0000252E  1401                    2196          MOVE.B      D1,D2
00002530  1601                    2197          MOVE.B      D1,D3
00002532                          2198          
00002532  E602                    2199          ASR.B       #three, D2
00002534  C47C 0007               2200          AND         #seven, D2
00002538  C67C 0007               2201          AND         #seven, D3        
0000253C                          2202          
0000253C  4EB9 00002EF8           2203          JSR         printEA
00002542                          2204          
00002542  43F9 00003CC3           2205          LEA         newLine, A1           ; Display space
00002548  103C 000E               2206          MOVE.B      #14, D0             ; command for trap call to display message
0000254C  4E4F                    2207          TRAP        #15                 ; trap call
0000254E                          2208          
0000254E  6000 EAF0               2209          BRA         LOOP
00002552                          2210  
00002552  43F9 00003D46           2211  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00002558  103C 000E               2212          MOVE.B      #14, D0             ; command for trap call to display message
0000255C  4E4F                    2213          TRAP        #15                 ; trap call
0000255E                          2214          
0000255E  43F9 00003D64           2215          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002564  103C 000E               2216          MOVE.B      #14, D0             ; command for trap call to display message
00002568  4E4F                    2217          TRAP        #15                 ; trap call
0000256A                          2218          
0000256A  43F9 00003CC7           2219          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002570  103C 000E               2220          MOVE.B      #14, D0             ; command for trap call to display message
00002574  4E4F                    2221          TRAP        #15                 ; trap call
00002576                          2222          
00002576  4242                    2223          CLR         D2
00002578  4243                    2224          CLR         D3
0000257A  1401                    2225          MOVE.B      D1,D2
0000257C  1601                    2226          MOVE.B      D1,D3
0000257E                          2227          
0000257E  E602                    2228          ASR.B       #three, D2
00002580  C47C 0007               2229          AND         #seven, D2
00002584  C67C 0007               2230          AND         #seven, D3        
00002588                          2231          
00002588  4EB9 00002EF8           2232          JSR         printEA
0000258E                          2233          
0000258E  43F9 00003CC3           2234          LEA         newLine, A1           ; Display space
00002594  103C 000E               2235          MOVE.B      #14, D0             ; command for trap call to display message
00002598  4E4F                    2236          TRAP        #15                 ; trap call
0000259A                          2237          
0000259A  6000 EAA4               2238          BRA         LOOP
0000259E                          2239  
0000259E  43F9 00003D42           2240  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
000025A4  103C 000E               2241          MOVE.B      #14, D0             ; command for trap call to display message
000025A8  4E4F                    2242          TRAP        #15                 ; trap call
000025AA                          2243          
000025AA  43F9 00003D64           2244          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000025B0  103C 000E               2245          MOVE.B      #14, D0             ; command for trap call to display message
000025B4  4E4F                    2246          TRAP        #15                 ; trap call
000025B6                          2247          
000025B6  43F9 00003CC7           2248          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
000025BC  103C 000E               2249          MOVE.B      #14, D0             ; command for trap call to display message
000025C0  4E4F                    2250          TRAP        #15                 ; trap call
000025C2                          2251          
000025C2  4242                    2252          CLR         D2
000025C4  4243                    2253          CLR         D3
000025C6  1401                    2254          MOVE.B      D1,D2
000025C8  1601                    2255          MOVE.B      D1,D3
000025CA                          2256          
000025CA  E602                    2257          ASR.B       #three, D2
000025CC  C47C 0007               2258          AND         #seven, D2
000025D0  C67C 0007               2259          AND         #seven, D3        
000025D4                          2260          
000025D4  4EB9 00002EF8           2261          JSR         printEA
000025DA                          2262          
000025DA  43F9 00003CC3           2263          LEA         newLine, A1           ; Display space
000025E0  103C 000E               2264          MOVE.B      #14, D0             ; command for trap call to display message
000025E4  4E4F                    2265          TRAP        #15                 ; trap call
000025E6                          2266          
000025E6  6000 EA58               2267          BRA         LOOP
000025EA                          2268  
000025EA  43F9 00003D56           2269  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
000025F0  103C 000E               2270          MOVE.B      #14, D0             ; command for trap call to display message
000025F4  4E4F                    2271          TRAP        #15                 ; trap call
000025F6                          2272          
000025F6  43F9 00003D64           2273          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000025FC  103C 000E               2274          MOVE.B      #14, D0             ; command for trap call to display message
00002600  4E4F                    2275          TRAP        #15                 ; trap call
00002602                          2276          
00002602  43F9 00003CC7           2277          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002608  103C 000E               2278          MOVE.B      #14, D0             ; command for trap call to display message
0000260C  4E4F                    2279          TRAP        #15                 ; trap call
0000260E                          2280          
0000260E  4242                    2281          CLR         D2
00002610  4243                    2282          CLR         D3
00002612  1401                    2283          MOVE.B      D1,D2
00002614  1601                    2284          MOVE.B      D1,D3
00002616                          2285          
00002616  E602                    2286          ASR.B       #three, D2
00002618  C47C 0007               2287          AND         #seven, D2
0000261C  C67C 0007               2288          AND         #seven, D3        
00002620                          2289          
00002620  4EB9 00002EF8           2290          JSR         printEA
00002626                          2291          
00002626  43F9 00003CC3           2292          LEA         newLine, A1           ; Display space
0000262C  103C 000E               2293          MOVE.B      #14, D0             ; command for trap call to display message
00002630  4E4F                    2294          TRAP        #15                 ; trap call
00002632                          2295          
00002632  6000 EA0C               2296          BRA         LOOP
00002636                          2297  
00002636  43F9 00003D52           2298  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
0000263C  103C 000E               2299          MOVE.B      #14, D0             ; command for trap call to display message
00002640  4E4F                    2300          TRAP        #15                 ; trap call
00002642                          2301          
00002642  43F9 00003D64           2302          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002648  103C 000E               2303          MOVE.B      #14, D0             ; command for trap call to display message
0000264C  4E4F                    2304          TRAP        #15                 ; trap call
0000264E                          2305          
0000264E  43F9 00003CC7           2306          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002654  103C 000E               2307          MOVE.B      #14, D0             ; command for trap call to display message
00002658  4E4F                    2308          TRAP        #15                 ; trap call
0000265A                          2309          
0000265A  4242                    2310          CLR         D2
0000265C  4243                    2311          CLR         D3
0000265E  1401                    2312          MOVE.B      D1,D2
00002660  1601                    2313          MOVE.B      D1,D3
00002662                          2314          
00002662  E602                    2315          ASR.B       #three, D2
00002664  C47C 0007               2316          AND         #seven, D2
00002668  C67C 0007               2317          AND         #seven, D3        
0000266C                          2318          
0000266C  4EB9 00002EF8           2319          JSR         printEA
00002672                          2320          
00002672  43F9 00003CC3           2321          LEA         newLine, A1           ; Display space
00002678  103C 000E               2322          MOVE.B      #14, D0             ; command for trap call to display message
0000267C  4E4F                    2323          TRAP        #15                 ; trap call
0000267E                          2324          
0000267E  6000 E9C0               2325          BRA         LOOP
00002682                          2326          
00002682  4242                    2327  memSB   CLR         D2
00002684  1401                    2328          MOVE.B      D1,D2
00002686  E642                    2329          ASR         #three, D2
00002688                          2330          
00002688  C47C 0007               2331          AND         #$07, D2
0000268C                          2332          
0000268C  B43C 0000               2333          CMP.B       #zero, D2
00002690  6700 002E               2334          BEQ         opASBI
00002694  B43C 0004               2335          CMP.B       #four, D2
00002698  6700 0088               2336          BEQ         opASBR
0000269C  B43C 0001               2337          CMP.B       #one, D2
000026A0  6700 00E2               2338          BEQ         opLSBI
000026A4  B43C 0005               2339          CMP.B       #five, D2
000026A8  6700 013C               2340          BEQ         opLSBR
000026AC  B43C 0003               2341          CMP.B       #three, D2
000026B0  6700 0196               2342          BEQ         opROBI
000026B4  B43C 0007               2343          CMP.B       #seven, D2
000026B8  6700 01F0               2344          BEQ         opROBR
000026BC  6000 15A0               2345          BRA         printInvalid
000026C0                          2346          
000026C0  4242                    2347  opASBI  CLR         D2
000026C2  3401                    2348          MOVE.W      D1, D2
000026C4  E042                    2349          ASR         #eight, D2
000026C6  C47C 0001               2350          AND         #$01, D2
000026CA                          2351      
000026CA  B43C 0000               2352          CMP.B       #zero, D2
000026CE  6700 000E               2353          BEQ         opASRBI
000026D2  B43C 0001               2354          CMP.B       #one, D2
000026D6  6700 0028               2355          BEQ         opASLBI
000026DA  6000 1582               2356          BRA         printInvalid
000026DE                          2357          
000026DE  43F9 00003D4A           2358  opASRBI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000026E4  103C 000E               2359          MOVE.B      #14, D0             ; command for trap call to display message
000026E8  4E4F                    2360          TRAP        #15                 ; trap call
000026EA                          2361  
000026EA  43F9 00003D61           2362          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000026F0  103C 000E               2363          MOVE.B      #14, D0             ; command for trap call to display message
000026F4  4E4F                    2364          TRAP        #15                 ; trap call
000026F6                          2365          
000026F6  4EB9 00002E20           2366          JSR         PrntImm
000026FC                          2367          
000026FC  6000 E942               2368          BRA         LOOP
00002700                          2369  
00002700  43F9 00003D4E           2370  opASLBI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002706  103C 000E               2371          MOVE.B      #14, D0             ; command for trap call to display message
0000270A  4E4F                    2372          TRAP        #15                 ; trap call
0000270C                          2373  
0000270C  43F9 00003D61           2374          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002712  103C 000E               2375          MOVE.B      #14, D0             ; command for trap call to display message
00002716  4E4F                    2376          TRAP        #15                 ; trap call
00002718                          2377          
00002718  4EB9 00002E20           2378          JSR         PrntImm
0000271E                          2379          
0000271E  6000 E920               2380          BRA         LOOP
00002722                          2381  
00002722  4242                    2382  opASBR  CLR         D2
00002724  3401                    2383          MOVE.W      D1, D2
00002726  E042                    2384          ASR         #eight, D2
00002728  C47C 0001               2385          AND         #$01, D2
0000272C                          2386      
0000272C  B43C 0000               2387          CMP.B       #zero, D2
00002730  6700 000E               2388          BEQ         opASRBR
00002734  B43C 0001               2389          CMP.B       #one, D2
00002738  6700 0028               2390          BEQ         opASLBR
0000273C  6000 1520               2391          BRA         printInvalid 
00002740                          2392          
00002740  43F9 00003D4A           2393  opASRBR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002746  103C 000E               2394          MOVE.B      #14, D0             ; command for trap call to display message
0000274A  4E4F                    2395          TRAP        #15                 ; trap call
0000274C                          2396  
0000274C  43F9 00003D61           2397          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002752  103C 000E               2398          MOVE.B      #14, D0             ; command for trap call to display message
00002756  4E4F                    2399          TRAP        #15                 ; trap call
00002758                          2400          
00002758  4EB9 00002E7C           2401          JSR         PrntReg
0000275E                          2402          
0000275E  6000 E8E0               2403          BRA         LOOP
00002762                          2404  
00002762  43F9 00003D4E           2405  opASLBR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002768  103C 000E               2406          MOVE.B      #14, D0             ; command for trap call to display message
0000276C  4E4F                    2407          TRAP        #15                 ; trap call
0000276E                          2408  
0000276E  43F9 00003D61           2409          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002774  103C 000E               2410          MOVE.B      #14, D0             ; command for trap call to display message
00002778  4E4F                    2411          TRAP        #15                 ; trap call
0000277A                          2412          
0000277A  4EB9 00002E7C           2413          JSR         PrntReg
00002780                          2414          
00002780  6000 E8BE               2415          BRA         LOOP
00002784                          2416  
00002784  4242                    2417  opLSBI  CLR         D2
00002786  3401                    2418          MOVE.W      D1, D2
00002788  E042                    2419          ASR         #eight, D2
0000278A  C47C 0001               2420          AND         #$01, D2
0000278E                          2421      
0000278E  B43C 0000               2422          CMP.B       #zero, D2
00002792  6700 000E               2423          BEQ         opLSRBI
00002796  B43C 0001               2424          CMP.B       #one, D2
0000279A  6700 0028               2425          BEQ         opLSLBI
0000279E  6000 14BE               2426          BRA         printInvalid 
000027A2                          2427          
000027A2  43F9 00003D42           2428  opLSRBI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027A8  103C 000E               2429          MOVE.B      #14, D0             ; command for trap call to display message
000027AC  4E4F                    2430          TRAP        #15                 ; trap call
000027AE                          2431  
000027AE  43F9 00003D61           2432          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027B4  103C 000E               2433          MOVE.B      #14, D0             ; command for trap call to display message
000027B8  4E4F                    2434          TRAP        #15                 ; trap call
000027BA                          2435          
000027BA  4EB9 00002E20           2436          JSR         PrntImm
000027C0                          2437          
000027C0  6000 E87E               2438          BRA         LOOP
000027C4                          2439  
000027C4                          2440  
000027C4  43F9 00003D46           2441  opLSLBI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027CA  103C 000E               2442          MOVE.B      #14, D0             ; command for trap call to display message
000027CE  4E4F                    2443          TRAP        #15                 ; trap call
000027D0                          2444  
000027D0  43F9 00003D61           2445          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027D6  103C 000E               2446          MOVE.B      #14, D0             ; command for trap call to display message
000027DA  4E4F                    2447          TRAP        #15                 ; trap call
000027DC                          2448          
000027DC  4EB9 00002E20           2449          JSR         PrntImm
000027E2                          2450          
000027E2  6000 E85C               2451          BRA         LOOP
000027E6                          2452  
000027E6                          2453  
000027E6  4242                    2454  opLSBR  CLR         D2
000027E8  3401                    2455          MOVE.W      D1, D2
000027EA  E042                    2456          ASR         #eight, D2
000027EC  C47C 0001               2457          AND         #$01, D2
000027F0                          2458      
000027F0  B43C 0000               2459          CMP.B       #zero, D2
000027F4  6700 000E               2460          BEQ         opLSRBR
000027F8  B43C 0001               2461          CMP.B       #one, D2
000027FC  6700 0028               2462          BEQ         opLSLBR
00002800  6000 145C               2463          BRA         printInvalid 
00002804                          2464          
00002804  43F9 00003D42           2465  opLSRBR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000280A  103C 000E               2466          MOVE.B      #14, D0             ; command for trap call to display message
0000280E  4E4F                    2467          TRAP        #15                 ; trap call
00002810                          2468  
00002810  43F9 00003D61           2469          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002816  103C 000E               2470          MOVE.B      #14, D0             ; command for trap call to display message
0000281A  4E4F                    2471          TRAP        #15                 ; trap call
0000281C                          2472          
0000281C  4EB9 00002E7C           2473          JSR         PrntReg
00002822                          2474          
00002822  6000 E81C               2475          BRA         LOOP
00002826                          2476          
00002826  43F9 00003D46           2477  opLSLBR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000282C  103C 000E               2478          MOVE.B      #14, D0             ; command for trap call to display message
00002830  4E4F                    2479          TRAP        #15                 ; trap call
00002832                          2480  
00002832  43F9 00003D61           2481          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002838  103C 000E               2482          MOVE.B      #14, D0             ; command for trap call to display message
0000283C  4E4F                    2483          TRAP        #15                 ; trap call
0000283E                          2484          
0000283E  4EB9 00002E7C           2485          JSR         PrntReg
00002844                          2486          
00002844  6000 E7FA               2487          BRA         LOOP
00002848                          2488  
00002848                          2489  
00002848                          2490  
00002848  4242                    2491  opROBI  CLR         D2
0000284A  3401                    2492          MOVE.W      D1, D2
0000284C  E042                    2493          ASR         #eight, D2
0000284E  C47C 0001               2494          AND         #$01, D2
00002852                          2495      
00002852  B43C 0000               2496          CMP.B       #zero, D2
00002856  6700 000E               2497          BEQ         opRORBI
0000285A  B43C 0001               2498          CMP.B       #one, D2
0000285E  6700 0028               2499          BEQ         opROLBI
00002862  6000 13FA               2500          BRA         printInvalid 
00002866                          2501          
00002866  43F9 00003D52           2502  opRORBI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000286C  103C 000E               2503          MOVE.B      #14, D0             ; command for trap call to display message
00002870  4E4F                    2504          TRAP        #15                 ; trap call
00002872                          2505  
00002872  43F9 00003D61           2506          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002878  103C 000E               2507          MOVE.B      #14, D0             ; command for trap call to display message
0000287C  4E4F                    2508          TRAP        #15                 ; trap call
0000287E                          2509          
0000287E  4EB9 00002E20           2510          JSR         PrntImm
00002884                          2511          
00002884  6000 E7BA               2512          BRA         LOOP
00002888                          2513  
00002888  43F9 00003D56           2514  opROLBI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000288E  103C 000E               2515          MOVE.B      #14, D0             ; command for trap call to display message
00002892  4E4F                    2516          TRAP        #15                 ; trap call
00002894                          2517  
00002894  43F9 00003D61           2518          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000289A  103C 000E               2519          MOVE.B      #14, D0             ; command for trap call to display message
0000289E  4E4F                    2520          TRAP        #15                 ; trap call
000028A0                          2521          
000028A0  4EB9 00002E20           2522          JSR         PrntImm
000028A6                          2523          
000028A6  6000 E798               2524          BRA         LOOP
000028AA                          2525  
000028AA  4242                    2526  opROBR  CLR         D2
000028AC  3401                    2527          MOVE.W      D1, D2
000028AE  E042                    2528          ASR         #eight, D2
000028B0  C47C 0001               2529          AND         #$01, D2
000028B4                          2530      
000028B4  B43C 0000               2531          CMP.B       #zero, D2
000028B8  6700 000E               2532          BEQ         opRORBR
000028BC  B43C 0001               2533          CMP.B       #one, D2
000028C0  6700 0028               2534          BEQ         opROLBR
000028C4  6000 1398               2535          BRA         printInvalid     
000028C8                          2536          
000028C8  43F9 00003D52           2537  opRORBR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028CE  103C 000E               2538          MOVE.B      #14, D0             ; command for trap call to display message
000028D2  4E4F                    2539          TRAP        #15                 ; trap call
000028D4                          2540  
000028D4  43F9 00003D61           2541          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028DA  103C 000E               2542          MOVE.B      #14, D0             ; command for trap call to display message
000028DE  4E4F                    2543          TRAP        #15                 ; trap call
000028E0                          2544          
000028E0  4EB9 00002E7C           2545          JSR         PrntReg
000028E6                          2546          
000028E6  6000 E758               2547          BRA         LOOP
000028EA                          2548  
000028EA  43F9 00003D56           2549  opROLBR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028F0  103C 000E               2550          MOVE.B      #14, D0             ; command for trap call to display message
000028F4  4E4F                    2551          TRAP        #15                 ; trap call
000028F6                          2552  
000028F6  43F9 00003D61           2553          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028FC  103C 000E               2554          MOVE.B      #14, D0             ; command for trap call to display message
00002900  4E4F                    2555          TRAP        #15                 ; trap call
00002902                          2556          
00002902  4EB9 00002E7C           2557          JSR         PrntReg
00002908                          2558          
00002908  6000 E736               2559          BRA         LOOP       
0000290C                          2560  
0000290C  4242                    2561  memSW   CLR         D2
0000290E  1401                    2562          MOVE.B      D1,D2
00002910  E642                    2563          ASR         #three, D2
00002912                          2564          
00002912  C47C 0007               2565          AND         #$07, D2
00002916                          2566          
00002916  B43C 0000               2567          CMP.B       #zero, D2
0000291A  6700 002E               2568          BEQ         opASWI
0000291E  B43C 0004               2569          CMP.B       #four, D2
00002922  6700 0088               2570          BEQ         opASWR
00002926  B43C 0001               2571          CMP.B       #one, D2
0000292A  6700 00E2               2572          BEQ         opLSWI
0000292E  B43C 0005               2573          CMP.B       #five, D2
00002932  6700 013C               2574          BEQ         opLSWR
00002936  B43C 0003               2575          CMP.B       #three, D2
0000293A  6700 0196               2576          BEQ         opROWI
0000293E  B43C 0007               2577          CMP.B       #seven, D2
00002942  6700 01F0               2578          BEQ         opROWR
00002946  6000 1316               2579          BRA         printInvalid
0000294A                          2580          
0000294A  4242                    2581  opASWI  CLR         D2
0000294C  3401                    2582          MOVE.W      D1, D2
0000294E  E042                    2583          ASR         #eight, D2
00002950  C47C 0001               2584          AND         #$01, D2
00002954                          2585      
00002954  B43C 0000               2586          CMP.B       #zero, D2
00002958  6700 000E               2587          BEQ         opASRWI
0000295C  B43C 0001               2588          CMP.B       #one, D2
00002960  6700 0028               2589          BEQ         opASLWI
00002964  6000 12F8               2590          BRA         printInvalid
00002968                          2591          
00002968  43F9 00003D4A           2592  opASRWI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000296E  103C 000E               2593          MOVE.B      #14, D0             ; command for trap call to display message
00002972  4E4F                    2594          TRAP        #15                 ; trap call
00002974                          2595  
00002974  43F9 00003D64           2596          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000297A  103C 000E               2597          MOVE.B      #14, D0             ; command for trap call to display message
0000297E  4E4F                    2598          TRAP        #15                 ; trap call
00002980                          2599          
00002980  4EB9 00002E20           2600          JSR         PrntImm
00002986                          2601          
00002986  6000 E6B8               2602          BRA         LOOP
0000298A                          2603  
0000298A  43F9 00003D4E           2604  opASLWI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002990  103C 000E               2605          MOVE.B      #14, D0             ; command for trap call to display message
00002994  4E4F                    2606          TRAP        #15                 ; trap call
00002996                          2607  
00002996  43F9 00003D64           2608          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000299C  103C 000E               2609          MOVE.B      #14, D0             ; command for trap call to display message
000029A0  4E4F                    2610          TRAP        #15                 ; trap call
000029A2                          2611          
000029A2  4EB9 00002E20           2612          JSR         PrntImm
000029A8                          2613          
000029A8  6000 E696               2614          BRA         LOOP
000029AC                          2615  
000029AC  4242                    2616  opASWR  CLR         D2
000029AE  3401                    2617          MOVE.W      D1, D2
000029B0  E042                    2618          ASR         #eight, D2
000029B2  C47C 0001               2619          AND         #$01, D2
000029B6                          2620      
000029B6  B43C 0000               2621          CMP.B       #zero, D2
000029BA  6700 000E               2622          BEQ         opASRWR
000029BE  B43C 0001               2623          CMP.B       #one, D2
000029C2  6700 0028               2624          BEQ         opASLWR
000029C6  6000 1296               2625          BRA         printInvalid 
000029CA                          2626          
000029CA  43F9 00003D4A           2627  opASRWR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000029D0  103C 000E               2628          MOVE.B      #14, D0             ; command for trap call to display message
000029D4  4E4F                    2629          TRAP        #15                 ; trap call
000029D6                          2630  
000029D6  43F9 00003D64           2631          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000029DC  103C 000E               2632          MOVE.B      #14, D0             ; command for trap call to display message
000029E0  4E4F                    2633          TRAP        #15                 ; trap call
000029E2                          2634          
000029E2  4EB9 00002E7C           2635          JSR         PrntReg
000029E8                          2636          
000029E8  6000 E656               2637          BRA         LOOP
000029EC                          2638  
000029EC  43F9 00003D4E           2639  opASLWR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000029F2  103C 000E               2640          MOVE.B      #14, D0             ; command for trap call to display message
000029F6  4E4F                    2641          TRAP        #15                 ; trap call
000029F8                          2642  
000029F8  43F9 00003D64           2643          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000029FE  103C 000E               2644          MOVE.B      #14, D0             ; command for trap call to display message
00002A02  4E4F                    2645          TRAP        #15                 ; trap call
00002A04                          2646          
00002A04  4EB9 00002E7C           2647          JSR         PrntReg
00002A0A                          2648          
00002A0A  6000 E634               2649          BRA         LOOP
00002A0E                          2650  
00002A0E  4242                    2651  opLSWI  CLR         D2
00002A10  3401                    2652          MOVE.W      D1, D2
00002A12  E042                    2653          ASR         #eight, D2
00002A14  C47C 0001               2654          AND         #$01, D2
00002A18                          2655      
00002A18  B43C 0000               2656          CMP.B       #zero, D2
00002A1C  6700 000E               2657          BEQ         opLSRWI
00002A20  B43C 0001               2658          CMP.B       #one, D2
00002A24  6700 0028               2659          BEQ         opLSLWI
00002A28  6000 1234               2660          BRA         printInvalid 
00002A2C                          2661          
00002A2C  43F9 00003D42           2662  opLSRWI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A32  103C 000E               2663          MOVE.B      #14, D0             ; command for trap call to display message
00002A36  4E4F                    2664          TRAP        #15                 ; trap call
00002A38                          2665  
00002A38  43F9 00003D64           2666          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A3E  103C 000E               2667          MOVE.B      #14, D0             ; command for trap call to display message
00002A42  4E4F                    2668          TRAP        #15                 ; trap call
00002A44                          2669          
00002A44  4EB9 00002E20           2670          JSR         PrntImm
00002A4A                          2671          
00002A4A  6000 E5F4               2672          BRA         LOOP
00002A4E                          2673  
00002A4E                          2674  
00002A4E  43F9 00003D46           2675  opLSLWI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A54  103C 000E               2676          MOVE.B      #14, D0             ; command for trap call to display message
00002A58  4E4F                    2677          TRAP        #15                 ; trap call
00002A5A                          2678  
00002A5A  43F9 00003D64           2679          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A60  103C 000E               2680          MOVE.B      #14, D0             ; command for trap call to display message
00002A64  4E4F                    2681          TRAP        #15                 ; trap call
00002A66                          2682          
00002A66  4EB9 00002E20           2683          JSR         PrntImm
00002A6C                          2684          
00002A6C  6000 E5D2               2685          BRA         LOOP
00002A70                          2686  
00002A70                          2687  
00002A70  4242                    2688  opLSWR  CLR         D2
00002A72  3401                    2689          MOVE.W      D1, D2
00002A74  E042                    2690          ASR         #eight, D2
00002A76  C47C 0001               2691          AND         #$01, D2
00002A7A                          2692      
00002A7A  B43C 0000               2693          CMP.B       #zero, D2
00002A7E  6700 000E               2694          BEQ         opLSRWR
00002A82  B43C 0001               2695          CMP.B       #one, D2
00002A86  6700 0028               2696          BEQ         opLSLWR
00002A8A  6000 11D2               2697          BRA         printInvalid 
00002A8E                          2698          
00002A8E  43F9 00003D42           2699  opLSRWR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002A94  103C 000E               2700          MOVE.B      #14, D0             ; command for trap call to display message
00002A98  4E4F                    2701          TRAP        #15                 ; trap call
00002A9A                          2702  
00002A9A  43F9 00003D64           2703          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002AA0  103C 000E               2704          MOVE.B      #14, D0             ; command for trap call to display message
00002AA4  4E4F                    2705          TRAP        #15                 ; trap call
00002AA6                          2706          
00002AA6  4EB9 00002E7C           2707          JSR         PrntReg
00002AAC                          2708          
00002AAC  6000 E592               2709          BRA         LOOP
00002AB0                          2710          
00002AB0  43F9 00003D46           2711  opLSLWR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002AB6  103C 000E               2712          MOVE.B      #14, D0             ; command for trap call to display message
00002ABA  4E4F                    2713          TRAP        #15                 ; trap call
00002ABC                          2714  
00002ABC  43F9 00003D64           2715          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002AC2  103C 000E               2716          MOVE.B      #14, D0             ; command for trap call to display message
00002AC6  4E4F                    2717          TRAP        #15                 ; trap call
00002AC8                          2718          
00002AC8  4EB9 00002E7C           2719          JSR         PrntReg
00002ACE                          2720          
00002ACE  6000 E570               2721          BRA         LOOP
00002AD2                          2722  
00002AD2                          2723  
00002AD2                          2724  
00002AD2  4242                    2725  opROWI  CLR         D2
00002AD4  3401                    2726          MOVE.W      D1, D2
00002AD6  E042                    2727          ASR         #eight, D2
00002AD8  C47C 0001               2728          AND         #$01, D2
00002ADC                          2729      
00002ADC  B43C 0000               2730          CMP.B       #zero, D2
00002AE0  6700 000E               2731          BEQ         opRORWI
00002AE4  B43C 0001               2732          CMP.B       #one, D2
00002AE8  6700 0028               2733          BEQ         opROLWI
00002AEC  6000 1170               2734          BRA         printInvalid 
00002AF0                          2735          
00002AF0  43F9 00003D52           2736  opRORWI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002AF6  103C 000E               2737          MOVE.B      #14, D0             ; command for trap call to display message
00002AFA  4E4F                    2738          TRAP        #15                 ; trap call
00002AFC                          2739  
00002AFC  43F9 00003D64           2740          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B02  103C 000E               2741          MOVE.B      #14, D0             ; command for trap call to display message
00002B06  4E4F                    2742          TRAP        #15                 ; trap call
00002B08                          2743          
00002B08  4EB9 00002E20           2744          JSR         PrntImm
00002B0E                          2745          
00002B0E  6000 E530               2746          BRA         LOOP
00002B12                          2747  
00002B12  43F9 00003D56           2748  opROLWI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B18  103C 000E               2749          MOVE.B      #14, D0             ; command for trap call to display message
00002B1C  4E4F                    2750          TRAP        #15                 ; trap call
00002B1E                          2751  
00002B1E  43F9 00003D64           2752          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B24  103C 000E               2753          MOVE.B      #14, D0             ; command for trap call to display message
00002B28  4E4F                    2754          TRAP        #15                 ; trap call
00002B2A                          2755          
00002B2A  4EB9 00002E20           2756          JSR         PrntImm
00002B30                          2757          
00002B30  6000 E50E               2758          BRA         LOOP
00002B34                          2759  
00002B34  4242                    2760  opROWR  CLR         D2
00002B36  3401                    2761          MOVE.W      D1, D2
00002B38  E042                    2762          ASR         #eight, D2
00002B3A  C47C 0001               2763          AND         #$01, D2
00002B3E                          2764      
00002B3E  B43C 0000               2765          CMP.B       #zero, D2
00002B42  6700 000E               2766          BEQ         opRORWR
00002B46  B43C 0001               2767          CMP.B       #one, D2
00002B4A  6700 0028               2768          BEQ         opROLWR
00002B4E  6000 110E               2769          BRA         printInvalid     
00002B52                          2770          
00002B52  43F9 00003D52           2771  opRORWR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B58  103C 000E               2772          MOVE.B      #14, D0             ; command for trap call to display message
00002B5C  4E4F                    2773          TRAP        #15                 ; trap call
00002B5E                          2774  
00002B5E  43F9 00003D64           2775          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B64  103C 000E               2776          MOVE.B      #14, D0             ; command for trap call to display message
00002B68  4E4F                    2777          TRAP        #15                 ; trap call
00002B6A                          2778          
00002B6A  4EB9 00002E7C           2779          JSR         PrntReg
00002B70                          2780          
00002B70  6000 E4CE               2781          BRA         LOOP
00002B74                          2782  
00002B74  43F9 00003D56           2783  opROLWR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B7A  103C 000E               2784          MOVE.B      #14, D0             ; command for trap call to display message
00002B7E  4E4F                    2785          TRAP        #15                 ; trap call
00002B80                          2786  
00002B80  43F9 00003D64           2787          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B86  103C 000E               2788          MOVE.B      #14, D0             ; command for trap call to display message
00002B8A  4E4F                    2789          TRAP        #15                 ; trap call
00002B8C                          2790          
00002B8C  4EB9 00002E7C           2791          JSR         PrntReg
00002B92                          2792          
00002B92  6000 E4AC               2793          BRA         LOOP
00002B96                          2794  
00002B96  4242                    2795  memSL   CLR         D2
00002B98  1401                    2796          MOVE.B      D1,D2
00002B9A  E642                    2797          ASR         #three, D2
00002B9C                          2798          
00002B9C  C47C 0007               2799          AND         #$07, D2
00002BA0                          2800          
00002BA0  B43C 0000               2801          CMP.B       #zero, D2
00002BA4  6700 002E               2802          BEQ         opASLI
00002BA8  B43C 0004               2803          CMP.B       #four, D2
00002BAC  6700 0088               2804          BEQ         opASLR
00002BB0  B43C 0001               2805          CMP.B       #one, D2
00002BB4  6700 00E2               2806          BEQ         opLSLI
00002BB8  B43C 0005               2807          CMP.B       #five, D2
00002BBC  6700 013C               2808          BEQ         opLSLR
00002BC0  B43C 0003               2809          CMP.B       #three, D2
00002BC4  6700 0196               2810          BEQ         opROLI
00002BC8  B43C 0007               2811          CMP.B       #seven, D2
00002BCC  6700 01F0               2812          BEQ         opROLR
00002BD0  6000 108C               2813          BRA         printInvalid
00002BD4                          2814          
00002BD4  4242                    2815  opASLI  CLR         D2
00002BD6  3401                    2816          MOVE.W      D1, D2
00002BD8  E042                    2817          ASR         #eight, D2
00002BDA  C47C 0001               2818          AND         #$01, D2
00002BDE                          2819      
00002BDE  B43C 0000               2820          CMP.B       #zero, D2
00002BE2  6700 000E               2821          BEQ         opASRLI
00002BE6  B43C 0001               2822          CMP.B       #one, D2
00002BEA  6700 0028               2823          BEQ         opASLLI
00002BEE  6000 106E               2824          BRA         printInvalid
00002BF2                          2825          
00002BF2  43F9 00003D4A           2826  opASRLI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002BF8  103C 000E               2827          MOVE.B      #14, D0             ; command for trap call to display message
00002BFC  4E4F                    2828          TRAP        #15                 ; trap call
00002BFE                          2829  
00002BFE  43F9 00003D67           2830          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C04  103C 000E               2831          MOVE.B      #14, D0             ; command for trap call to display message
00002C08  4E4F                    2832          TRAP        #15                 ; trap call
00002C0A                          2833          
00002C0A  4EB9 00002E20           2834          JSR         PrntImm
00002C10                          2835          
00002C10  6000 E42E               2836          BRA         LOOP
00002C14                          2837  
00002C14  43F9 00003D4E           2838  opASLLI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002C1A  103C 000E               2839          MOVE.B      #14, D0             ; command for trap call to display message
00002C1E  4E4F                    2840          TRAP        #15                 ; trap call
00002C20                          2841  
00002C20  43F9 00003D67           2842          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C26  103C 000E               2843          MOVE.B      #14, D0             ; command for trap call to display message
00002C2A  4E4F                    2844          TRAP        #15                 ; trap call
00002C2C                          2845          
00002C2C  4EB9 00002E20           2846          JSR         PrntImm
00002C32                          2847          
00002C32  6000 E40C               2848          BRA         LOOP
00002C36                          2849  
00002C36  4242                    2850  opASLR  CLR         D2
00002C38  3401                    2851          MOVE.W      D1, D2
00002C3A  E042                    2852          ASR         #eight, D2
00002C3C  C47C 0001               2853          AND         #$01, D2
00002C40                          2854      
00002C40  B43C 0000               2855          CMP.B       #zero, D2
00002C44  6700 000E               2856          BEQ         opASRLR
00002C48  B43C 0001               2857          CMP.B       #one, D2
00002C4C  6700 0028               2858          BEQ         opASLLR
00002C50  6000 100C               2859          BRA         printInvalid 
00002C54                          2860          
00002C54  43F9 00003D4A           2861  opASRLR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002C5A  103C 000E               2862          MOVE.B      #14, D0             ; command for trap call to display message
00002C5E  4E4F                    2863          TRAP        #15                 ; trap call
00002C60                          2864  
00002C60  43F9 00003D67           2865          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C66  103C 000E               2866          MOVE.B      #14, D0             ; command for trap call to display message
00002C6A  4E4F                    2867          TRAP        #15                 ; trap call
00002C6C                          2868          
00002C6C  4EB9 00002E7C           2869          JSR         PrntReg
00002C72                          2870          
00002C72  6000 E3CC               2871          BRA         LOOP
00002C76                          2872  
00002C76  43F9 00003D4E           2873  opASLLR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002C7C  103C 000E               2874          MOVE.B      #14, D0             ; command for trap call to display message
00002C80  4E4F                    2875          TRAP        #15                 ; trap call
00002C82                          2876  
00002C82  43F9 00003D67           2877          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C88  103C 000E               2878          MOVE.B      #14, D0             ; command for trap call to display message
00002C8C  4E4F                    2879          TRAP        #15                 ; trap call
00002C8E                          2880          
00002C8E  4EB9 00002E7C           2881          JSR         PrntReg
00002C94                          2882          
00002C94  6000 E3AA               2883          BRA         LOOP
00002C98                          2884  
00002C98  4242                    2885  opLSLI  CLR         D2
00002C9A  3401                    2886          MOVE.W      D1, D2
00002C9C  E042                    2887          ASR         #eight, D2
00002C9E  C47C 0001               2888          AND         #$01, D2
00002CA2                          2889      
00002CA2  B43C 0000               2890          CMP.B       #zero, D2
00002CA6  6700 000E               2891          BEQ         opLSRLI
00002CAA  B43C 0001               2892          CMP.B       #one, D2
00002CAE  6700 0028               2893          BEQ         opLSLLI
00002CB2  6000 0FAA               2894          BRA         printInvalid 
00002CB6                          2895          
00002CB6  43F9 00003D42           2896  opLSRLI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CBC  103C 000E               2897          MOVE.B      #14, D0             ; command for trap call to display message
00002CC0  4E4F                    2898          TRAP        #15                 ; trap call
00002CC2                          2899  
00002CC2  43F9 00003D67           2900          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CC8  103C 000E               2901          MOVE.B      #14, D0             ; command for trap call to display message
00002CCC  4E4F                    2902          TRAP        #15                 ; trap call
00002CCE                          2903          
00002CCE  4EB9 00002E20           2904          JSR         PrntImm
00002CD4                          2905          
00002CD4  6000 E36A               2906          BRA         LOOP
00002CD8                          2907  
00002CD8                          2908  
00002CD8  43F9 00003D46           2909  opLSLLI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CDE  103C 000E               2910          MOVE.B      #14, D0             ; command for trap call to display message
00002CE2  4E4F                    2911          TRAP        #15                 ; trap call
00002CE4                          2912  
00002CE4  43F9 00003D67           2913          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CEA  103C 000E               2914          MOVE.B      #14, D0             ; command for trap call to display message
00002CEE  4E4F                    2915          TRAP        #15                 ; trap call
00002CF0                          2916          
00002CF0  4EB9 00002E20           2917          JSR         PrntImm
00002CF6                          2918          
00002CF6  6000 E348               2919          BRA         LOOP
00002CFA                          2920  
00002CFA                          2921  
00002CFA  4242                    2922  opLSLR  CLR         D2
00002CFC  3401                    2923          MOVE.W      D1, D2
00002CFE  E042                    2924          ASR         #eight, D2
00002D00  C47C 0001               2925          AND         #$01, D2
00002D04                          2926      
00002D04  B43C 0000               2927          CMP.B       #zero, D2
00002D08  6700 000E               2928          BEQ         opLSRLR
00002D0C  B43C 0001               2929          CMP.B       #one, D2
00002D10  6700 0028               2930          BEQ         opLSLLR
00002D14  6000 0F48               2931          BRA         printInvalid 
00002D18                          2932          
00002D18  43F9 00003D42           2933  opLSRLR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002D1E  103C 000E               2934          MOVE.B      #14, D0             ; command for trap call to display message
00002D22  4E4F                    2935          TRAP        #15                 ; trap call
00002D24                          2936  
00002D24  43F9 00003D67           2937          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D2A  103C 000E               2938          MOVE.B      #14, D0             ; command for trap call to display message
00002D2E  4E4F                    2939          TRAP        #15                 ; trap call
00002D30                          2940          
00002D30  4EB9 00002E7C           2941          JSR         PrntReg
00002D36                          2942          
00002D36  6000 E308               2943          BRA         LOOP
00002D3A                          2944          
00002D3A  43F9 00003D46           2945  opLSLLR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002D40  103C 000E               2946          MOVE.B      #14, D0             ; command for trap call to display message
00002D44  4E4F                    2947          TRAP        #15                 ; trap call
00002D46                          2948  
00002D46  43F9 00003D67           2949          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D4C  103C 000E               2950          MOVE.B      #14, D0             ; command for trap call to display message
00002D50  4E4F                    2951          TRAP        #15                 ; trap call
00002D52                          2952          
00002D52  4EB9 00002E7C           2953          JSR         PrntReg
00002D58                          2954          
00002D58  6000 E2E6               2955          BRA         LOOP
00002D5C                          2956  
00002D5C                          2957  
00002D5C                          2958  
00002D5C  4242                    2959  opROLI  CLR         D2
00002D5E  3401                    2960          MOVE.W      D1, D2
00002D60  E042                    2961          ASR         #eight, D2
00002D62  C47C 0001               2962          AND         #$01, D2
00002D66                          2963      
00002D66  B43C 0000               2964          CMP.B       #zero, D2
00002D6A  6700 000E               2965          BEQ         opRORLI
00002D6E  B43C 0001               2966          CMP.B       #one, D2
00002D72  6700 0028               2967          BEQ         opROLLI
00002D76  6000 0EE6               2968          BRA         printInvalid 
00002D7A                          2969          
00002D7A  43F9 00003D52           2970  opRORLI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D80  103C 000E               2971          MOVE.B      #14, D0             ; command for trap call to display message
00002D84  4E4F                    2972          TRAP        #15                 ; trap call
00002D86                          2973  
00002D86  43F9 00003D67           2974          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D8C  103C 000E               2975          MOVE.B      #14, D0             ; command for trap call to display message
00002D90  4E4F                    2976          TRAP        #15                 ; trap call
00002D92                          2977          
00002D92  4EB9 00002E20           2978          JSR         PrntImm
00002D98                          2979          
00002D98  6000 E2A6               2980          BRA         LOOP
00002D9C                          2981  
00002D9C  43F9 00003D56           2982  opROLLI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DA2  103C 000E               2983          MOVE.B      #14, D0             ; command for trap call to display message
00002DA6  4E4F                    2984          TRAP        #15                 ; trap call
00002DA8                          2985  
00002DA8  43F9 00003D67           2986          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DAE  103C 000E               2987          MOVE.B      #14, D0             ; command for trap call to display message
00002DB2  4E4F                    2988          TRAP        #15                 ; trap call
00002DB4                          2989          
00002DB4  4EB9 00002E20           2990          JSR         PrntImm
00002DBA                          2991          
00002DBA  6000 E284               2992          BRA         LOOP
00002DBE                          2993  
00002DBE  4242                    2994  opROLR  CLR         D2
00002DC0  3401                    2995          MOVE.W      D1, D2
00002DC2  E042                    2996          ASR         #eight, D2
00002DC4  C47C 0001               2997          AND         #$01, D2
00002DC8                          2998      
00002DC8  B43C 0000               2999          CMP.B       #zero, D2
00002DCC  6700 000E               3000          BEQ         opRORLR
00002DD0  B43C 0001               3001          CMP.B       #one, D2
00002DD4  6700 0028               3002          BEQ         opROLLR
00002DD8  6000 0E84               3003          BRA         printInvalid     
00002DDC                          3004          
00002DDC  43F9 00003D52           3005  opRORLR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DE2  103C 000E               3006          MOVE.B      #14, D0             ; command for trap call to display message
00002DE6  4E4F                    3007          TRAP        #15                 ; trap call
00002DE8                          3008  
00002DE8  43F9 00003D67           3009          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DEE  103C 000E               3010          MOVE.B      #14, D0             ; command for trap call to display message
00002DF2  4E4F                    3011          TRAP        #15                 ; trap call
00002DF4                          3012          
00002DF4  4EB9 00002E7C           3013          JSR         PrntReg
00002DFA                          3014          
00002DFA  6000 E244               3015          BRA         LOOP
00002DFE                          3016  
00002DFE  43F9 00003D56           3017  opROLLR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E04  103C 000E               3018          MOVE.B      #14, D0             ; command for trap call to display message
00002E08  4E4F                    3019          TRAP        #15                 ; trap call
00002E0A                          3020  
00002E0A  43F9 00003D67           3021          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E10  103C 000E               3022          MOVE.B      #14, D0             ; command for trap call to display message
00002E14  4E4F                    3023          TRAP        #15                 ; trap call
00002E16                          3024          
00002E16  4EB9 00002E7C           3025          JSR         PrntReg
00002E1C                          3026          
00002E1C  6000 E222               3027          BRA         LOOP
00002E20                          3028  * The following subroutine displays the immediate number to shift and the data register that is being shifted. 
00002E20                          3029  * This subroutine calls two printing immediate subroutine first, the the ea print subroutine.        
00002E20  48E7 FF7E               3030  PrntImm MOVEM.L D0-D7/A1-A6, -(SP)
00002E24                          3031          
00002E24  43F9 00003CC7           3032          LEA         space, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E2A  103C 000E               3033          MOVE.B      #14, D0             ; command for trap call to display message
00002E2E  4E4F                    3034          TRAP        #15                 ; trap call
00002E30                          3035          
00002E30  43F9 00003CCA           3036          LEA         hashTag, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E36  103C 000E               3037          MOVE.B      #14, D0             ; command for trap call to display message
00002E3A  4E4F                    3038          TRAP        #15                 ; trap call
00002E3C                          3039          
00002E3C  4242                    3040          CLR         D2
00002E3E  3401                    3041          MOVE.W      D1, D2
00002E40  E042                    3042          ASR         #eight, D2
00002E42  E242                    3043          ASR         #one, D2
00002E44  C47C 0007               3044          AND         #$07, D2
00002E48                          3045          
00002E48  4EB9 00002ECE           3046          JSR         MemShiftImm
00002E4E                          3047          
00002E4E  43F9 00003CCE           3048          LEA         comma, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E54  103C 000E               3049          MOVE.B      #14, D0             ; command for trap call to display message
00002E58  4E4F                    3050          TRAP        #15                 ; trap call
00002E5A                          3051          
00002E5A  4242                    3052          CLR         D2
00002E5C  4243                    3053          CLR         D3
00002E5E  1601                    3054          MOVE.B      D1,D3
00002E60  C67C 0007               3055          AND         #$07, D3
00002E64                          3056          
00002E64  4EB9 00002EF8           3057          JSR         printEA
00002E6A                          3058          
00002E6A  43F9 00003CC3           3059          LEA         newLine, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E70  103C 000E               3060          MOVE.B      #14, D0             ; command for trap call to display message
00002E74  4E4F                    3061          TRAP        #15                 ; trap call
00002E76                          3062          
00002E76  4CDF 7EFF               3063          MOVEM.L  (SP)+, D0-D7/A1-A6
00002E7A  4E75                    3064          RTS
00002E7C                          3065  * The following subroutine determines the correct data register to display, and sets the values of D2 and D3 accordingly to display the data register.
00002E7C                          3066  * after setting the values, it calls another subroutine to actually display the data register.        
00002E7C  48E7 FF7E               3067  PrntReg MOVEM.L D0-D7/A1-A6, -(SP)
00002E80                          3068          
00002E80  43F9 00003CC7           3069          LEA         space, A1           ; display space
00002E86  103C 000E               3070          MOVE.B      #14, D0             ; command for trap call to display message
00002E8A  4E4F                    3071          TRAP        #15                 ; trap call
00002E8C                          3072          
00002E8C  4242                    3073          CLR         D2
00002E8E  4243                    3074          CLR         D3
00002E90  3601                    3075          MOVE.W      D1, D3
00002E92  E043                    3076          ASR         #eight, D3
00002E94  E243                    3077          ASR         #one, D3
00002E96  C67C 0007               3078          AND         #$07, D3
00002E9A                          3079          
00002E9A  4EB9 00002EF8           3080          JSR         printEA
00002EA0                          3081          
00002EA0  43F9 00003CCE           3082          LEA         comma, A1           ; display comma
00002EA6  103C 000E               3083          MOVE.B      #14, D0             ; command for trap call to display message
00002EAA  4E4F                    3084          TRAP        #15                 ; trap call
00002EAC                          3085          
00002EAC  4242                    3086          CLR         D2
00002EAE  4243                    3087          CLR         D3
00002EB0  1601                    3088          MOVE.B      D1,D3
00002EB2  C67C 0007               3089          AND         #$07, D3
00002EB6                          3090          
00002EB6  4EB9 00002EF8           3091          JSR         printEA
00002EBC                          3092          
00002EBC  43F9 00003CC3           3093          LEA         newLine, A1         ; newline
00002EC2  103C 000E               3094          MOVE.B      #14, D0             ; command for trap call to display message
00002EC6  4E4F                    3095          TRAP        #15                 ; trap call
00002EC8                          3096          
00002EC8  4CDF 7EFF               3097          MOVEM.L  (SP)+, D0-D7/A1-A6
00002ECC  4E75                    3098          RTS
00002ECE                          3099  * The following subroutine is used to display the number between 1-8 for the bit vount for the shift/rotate opcode
00002ECE                          3100  * It displays it by storing the appropriate number in D1 and running trap task 3.        
00002ECE  48E7 FF7E               3101  MemShiftImm     MOVEM.L D0-D7/A1-A6, -(SP)      ;caller saved data
00002ED2  4241                    3102                  CLR     D1
00002ED4                          3103                  
00002ED4  1202                    3104                  MOVE.B  D2, D1
00002ED6  B23C 0000               3105                  CMP.B   #zero, D1
00002EDA  6700 000C               3106                  BEQ     displayEight
00002EDE                          3107                  
00002EDE  103C 0003               3108                  MOVE.B  #3, D0
00002EE2  4E4F                    3109                  TRAP    #15
00002EE4  6000 000C               3110                  BRA     endSubroutine
00002EE8                          3111                  
00002EE8  123C 0008               3112  displayEight    MOVE.B  #$08, D1
00002EEC  103C 0003               3113                  MOVE.B  #3, D0
00002EF0  4E4F                    3114                  TRAP    #15                
00002EF2                          3115  endSubroutine
00002EF2  4CDF 7EFF               3116                  MOVEM.L  (SP)+, D0-D7/A1-A6     ; recall data
00002EF6  4E75                    3117                  RTS                             ; Return to main routine
00002EF8                          3118          
00002EF8                          3119  
00002EF8                          3120  ***********************************************************************************************************
00002EF8                          3121  *
00002EF8                          3122  *                                           EA Print Check
00002EF8                          3123  *
00002EF8                          3124  ***********************************************************************************************************
00002EF8  48E7 FF7E               3125  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00002EFC                          3126  
00002EFC  B43C 0000               3127              CMP.B       #zero, D2
00002F00  6700 002E               3128              BEQ         pDataReg
00002F04  B43C 0001               3129              CMP.B       #one, D2
00002F08  6700 00E6               3130              BEQ         pAddrReg
00002F0C  B43C 0002               3131              CMP.B       #two, D2
00002F10  6700 019E               3132              BEQ         pAddrDir
00002F14  B43C 0003               3133              CMP.B       #three, D2
00002F18  6700 02C2               3134              BEQ         pAddrPost
00002F1C  B43C 0004               3135              CMP.B       #four, D2
00002F20  6700 0446               3136              BEQ         pAddrDec
00002F24  B43C 0007               3137              CMP.B       #seven, D2
00002F28  6700 0576               3138              BEQ         pHex
00002F2C  6000 0642               3139              BRA         invalid
00002F30                          3140  
00002F30                          3141  ***********************************************************************************************************
00002F30                          3142  * Data Register        
00002F30  B63C 0000               3143  pDataReg    CMP.B   #zero,D3
00002F34  6700 003A               3144              BEQ     displayD0
00002F38  B63C 0001               3145              CMP.B   #one,D3
00002F3C  6700 0042               3146              BEQ     displayD1
00002F40  B63C 0002               3147              CMP.B   #two,D3
00002F44  6700 004A               3148              BEQ     displayD2
00002F48  B63C 0003               3149              CMP.B   #three,D3
00002F4C  6700 0052               3150              BEQ     displayD3
00002F50  B63C 0004               3151              CMP.B   #four,D3
00002F54  6700 005A               3152              BEQ     displayD4
00002F58  B63C 0005               3153              CMP.B   #five,D3
00002F5C  6700 0062               3154              BEQ     displayD5
00002F60  B63C 0006               3155              CMP.B   #six,D3
00002F64  6700 006A               3156              BEQ     displayD6
00002F68  B63C 0007               3157              CMP.B   #seven,D3
00002F6C  6700 0072               3158              BEQ     displayD7
00002F70                          3159              
00002F70  43F9 00003D84           3160  displayD0   LEA         dispD0, A1          ; Display space
00002F76  103C 000E               3161              MOVE.B      #14, D0             ; command for trap call to display message
00002F7A  4E4F                    3162              TRAP        #15                 ; trap call
00002F7C  6000 05F2               3163              BRA         endSUB              ; go to the end of the subroutine
00002F80                          3164              
00002F80  43F9 00003D87           3165  displayD1   LEA         dispD1, A1          ; Display space
00002F86  103C 000E               3166              MOVE.B      #14, D0             ; command for trap call to display message
00002F8A  4E4F                    3167              TRAP        #15                 ; trap call
00002F8C  6000 05E2               3168              BRA         endSUB              ; go to the end of the subroutine
00002F90                          3169  
00002F90  43F9 00003D8A           3170  displayD2   LEA         dispD2, A1          ; Display space
00002F96  103C 000E               3171              MOVE.B      #14, D0             ; command for trap call to display message
00002F9A  4E4F                    3172              TRAP        #15                 ; trap call
00002F9C  6000 05D2               3173              BRA         endSUB              ; go to the end of the subroutine
00002FA0                          3174  
00002FA0  43F9 00003D8D           3175  displayD3   LEA         dispD3, A1          ; Display space
00002FA6  103C 000E               3176              MOVE.B      #14, D0             ; command for trap call to display message
00002FAA  4E4F                    3177              TRAP        #15                 ; trap call
00002FAC  6000 05C2               3178              BRA         endSUB              ; go to the end of the subroutine
00002FB0                          3179  
00002FB0  43F9 00003D90           3180  displayD4   LEA         dispD4, A1          ; Display space
00002FB6  103C 000E               3181              MOVE.B      #14, D0             ; command for trap call to display message
00002FBA  4E4F                    3182              TRAP        #15                 ; trap call
00002FBC  6000 05B2               3183              BRA         endSUB              ; go to the end of the subroutine
00002FC0                          3184  
00002FC0  43F9 00003D93           3185  displayD5   LEA         dispD5, A1          ; Display space
00002FC6  103C 000E               3186              MOVE.B      #14, D0             ; command for trap call to display message
00002FCA  4E4F                    3187              TRAP        #15                 ; trap call
00002FCC  6000 05A2               3188              BRA         endSUB              ; go to the end of the subroutine
00002FD0                          3189  
00002FD0  43F9 00003D96           3190  displayD6   LEA         dispD6, A1          ; Display space
00002FD6  103C 000E               3191              MOVE.B      #14, D0             ; command for trap call to display message
00002FDA  4E4F                    3192              TRAP        #15                 ; trap call
00002FDC  6000 0592               3193              BRA         endSUB              ; go to the end of the subroutine
00002FE0                          3194  
00002FE0  43F9 00003D99           3195  displayD7   LEA         dispD7, A1          ; Display space
00002FE6  103C 000E               3196              MOVE.B      #14, D0             ; command for trap call to display message
00002FEA  4E4F                    3197              TRAP        #15                 ; trap call
00002FEC  6000 0582               3198              BRA         endSUB              ; go to the end of the subroutine
00002FF0                          3199  ***********************************************************************************************************
00002FF0                          3200  * Address Register
00002FF0  B63C 0000               3201  pAddrReg    CMP.B   #zero,D3
00002FF4  6700 003A               3202              BEQ     displayA0
00002FF8  B63C 0001               3203              CMP.B   #one,D3
00002FFC  6700 0042               3204              BEQ     displayA1
00003000  B63C 0002               3205              CMP.B   #two,D3
00003004  6700 004A               3206              BEQ     displayA2
00003008  B63C 0003               3207              CMP.B   #three,D3
0000300C  6700 0052               3208              BEQ     displayA3
00003010  B63C 0004               3209              CMP.B   #four,D3
00003014  6700 005A               3210              BEQ     displayA4
00003018  B63C 0005               3211              CMP.B   #five,D3
0000301C  6700 0062               3212              BEQ     displayA5
00003020  B63C 0006               3213              CMP.B   #six,D3
00003024  6700 006A               3214              BEQ     displayA6
00003028  B63C 0007               3215              CMP.B   #seven,D3
0000302C  6700 0072               3216              BEQ     displayA7
00003030                          3217              
00003030  43F9 00003D6A           3218  displayA0   LEA         dispA0, A1          ; Display space
00003036  103C 000E               3219              MOVE.B      #14, D0             ; command for trap call to display message
0000303A  4E4F                    3220              TRAP        #15                 ; trap call
0000303C  6000 0532               3221              BRA         endSUB              ; go to the end of the subroutine
00003040                          3222              
00003040  43F9 00003D6D           3223  displayA1   LEA         dispA1, A1          ; Display space
00003046  103C 000E               3224              MOVE.B      #14, D0             ; command for trap call to display message
0000304A  4E4F                    3225              TRAP        #15                 ; trap call
0000304C  6000 0522               3226              BRA         endSUB              ; go to the end of the subroutine
00003050                          3227  
00003050  43F9 00003D70           3228  displayA2   LEA         dispA2, A1          ; Display space
00003056  103C 000E               3229              MOVE.B      #14, D0             ; command for trap call to display message
0000305A  4E4F                    3230              TRAP        #15                 ; trap call
0000305C  6000 0512               3231              BRA         endSUB              ; go to the end of the subroutine
00003060                          3232  
00003060  43F9 00003D73           3233  displayA3   LEA         dispA3, A1          ; Display space
00003066  103C 000E               3234              MOVE.B      #14, D0             ; command for trap call to display message
0000306A  4E4F                    3235              TRAP        #15                 ; trap call
0000306C  6000 0502               3236              BRA         endSUB              ; go to the end of the subroutine
00003070                          3237  
00003070  43F9 00003D76           3238  displayA4   LEA         dispA4, A1          ; Display space
00003076  103C 000E               3239              MOVE.B      #14, D0             ; command for trap call to display message
0000307A  4E4F                    3240              TRAP        #15                 ; trap call
0000307C  6000 04F2               3241              BRA         endSUB              ; go to the end of the subroutine
00003080                          3242  
00003080  43F9 00003D79           3243  displayA5   LEA         dispA5, A1          ; Display space
00003086  103C 000E               3244              MOVE.B      #14, D0             ; command for trap call to display message
0000308A  4E4F                    3245              TRAP        #15                 ; trap call
0000308C  6000 04E2               3246              BRA         endSUB              ; go to the end of the subroutine
00003090                          3247  
00003090  43F9 00003D7C           3248  displayA6   LEA         dispA6, A1          ; Display space
00003096  103C 000E               3249              MOVE.B      #14, D0             ; command for trap call to display message
0000309A  4E4F                    3250              TRAP        #15                 ; trap call
0000309C  6000 04D2               3251              BRA         endSUB              ; go to the end of the subroutine
000030A0                          3252  
000030A0  43F9 00003D7F           3253  displayA7   LEA         dispA7, A1          ; Display space
000030A6  103C 000E               3254              MOVE.B      #14, D0             ; command for trap call to display message
000030AA  4E4F                    3255              TRAP        #15                 ; trap call
000030AC  6000 04C2               3256              BRA         endSUB              ; go to the end of the subroutine
000030B0                          3257  
000030B0                          3258  ***********************************************************************************************************
000030B0                          3259  * Address Register Direct
000030B0                          3260  
000030B0  43F9 00003CD0           3261  pAddrDir    LEA         opPer, A1           ; Display space
000030B6  103C 000E               3262              MOVE.B      #14, D0             ; command for trap call to display message
000030BA  4E4F                    3263              TRAP        #15                 ; trap call
000030BC                          3264              
000030BC  B63C 0000               3265              CMP.B   #zero,D3
000030C0  6700 003A               3266              BEQ     displayA0A
000030C4  B63C 0001               3267              CMP.B   #one,D3
000030C8  6700 004E               3268              BEQ     displayA1A
000030CC  B63C 0002               3269              CMP.B   #two,D3
000030D0  6700 0062               3270              BEQ     displayA2A
000030D4  B63C 0003               3271              CMP.B   #three,D3
000030D8  6700 0076               3272              BEQ     displayA3A
000030DC  B63C 0004               3273              CMP.B   #four,D3
000030E0  6700 008A               3274              BEQ     displayA4A
000030E4  B63C 0005               3275              CMP.B   #five,D3
000030E8  6700 009E               3276              BEQ     displayA5A
000030EC  B63C 0006               3277              CMP.B   #six,D3
000030F0  6700 00B2               3278              BEQ     displayA6A
000030F4  B63C 0007               3279              CMP.B   #seven,D3
000030F8  6700 00C6               3280              BEQ     displayA7A
000030FC                          3281              
000030FC  43F9 00003D6A           3282  displayA0A  LEA         dispA0, A1          ; Display space
00003102  103C 000E               3283              MOVE.B      #14, D0             ; command for trap call to display message
00003106  4E4F                    3284              TRAP        #15                 ; trap call
00003108  43F9 00003CD2           3285              LEA         clPer, A1           ; Display space
0000310E  103C 000E               3286              MOVE.B      #14, D0             ; command for trap call to display message
00003112  4E4F                    3287              TRAP        #15                 ; trap call
00003114  6000 045A               3288              BRA         endSUB              ; go to the end of the subroutine
00003118                          3289              
00003118  43F9 00003D6D           3290  displayA1A  LEA         dispA1, A1          ; Display space
0000311E  103C 000E               3291              MOVE.B      #14, D0             ; command for trap call to display message
00003122  4E4F                    3292              TRAP        #15                 ; trap call
00003124  43F9 00003CD2           3293              LEA         clPer, A1           ; Display space
0000312A  103C 000E               3294              MOVE.B      #14, D0             ; command for trap call to display message
0000312E  4E4F                    3295              TRAP        #15                 ; trap call
00003130  6000 043E               3296              BRA         endSUB              ; go to the end of the subroutine
00003134                          3297  
00003134  43F9 00003D70           3298  displayA2A  LEA         dispA2, A1          ; Display space
0000313A  103C 000E               3299              MOVE.B      #14, D0             ; command for trap call to display message
0000313E  4E4F                    3300              TRAP        #15                 ; trap call
00003140  43F9 00003CD2           3301              LEA         clPer, A1           ; Display space
00003146  103C 000E               3302              MOVE.B      #14, D0             ; command for trap call to display message
0000314A  4E4F                    3303              TRAP        #15                 ; trap call
0000314C  6000 0422               3304              BRA         endSUB              ; go to the end of the subroutine
00003150                          3305  
00003150  43F9 00003D73           3306  displayA3A  LEA         dispA3, A1          ; Display space
00003156  103C 000E               3307              MOVE.B      #14, D0             ; command for trap call to display message
0000315A  4E4F                    3308              TRAP        #15                 ; trap call
0000315C  43F9 00003CD2           3309              LEA         clPer, A1           ; Display space
00003162  103C 000E               3310              MOVE.B      #14, D0             ; command for trap call to display message
00003166  4E4F                    3311              TRAP        #15                 ; trap call
00003168  6000 0406               3312              BRA         endSUB              ; go to the end of the subroutine
0000316C                          3313  
0000316C  43F9 00003D76           3314  displayA4A  LEA         dispA4, A1          ; Display space
00003172  103C 000E               3315              MOVE.B      #14, D0             ; command for trap call to display message
00003176  4E4F                    3316              TRAP        #15                 ; trap call
00003178  43F9 00003CD2           3317              LEA         clPer, A1           ; Display space
0000317E  103C 000E               3318              MOVE.B      #14, D0             ; command for trap call to display message
00003182  4E4F                    3319              TRAP        #15                 ; trap call
00003184  6000 03EA               3320              BRA         endSUB              ; go to the end of the subroutine
00003188                          3321  
00003188  43F9 00003D79           3322  displayA5A  LEA         dispA5, A1          ; Display space
0000318E  103C 000E               3323              MOVE.B      #14, D0             ; command for trap call to display message
00003192  4E4F                    3324              TRAP        #15                 ; trap call
00003194  43F9 00003CD2           3325              LEA         clPer, A1           ; Display space
0000319A  103C 000E               3326              MOVE.B      #14, D0             ; command for trap call to display message
0000319E  4E4F                    3327              TRAP        #15                 ; trap call
000031A0  6000 03CE               3328              BRA         endSUB              ; go to the end of the subroutine
000031A4                          3329  
000031A4  43F9 00003D7C           3330  displayA6A  LEA         dispA6, A1          ; Display space
000031AA  103C 000E               3331              MOVE.B      #14, D0             ; command for trap call to display message
000031AE  4E4F                    3332              TRAP        #15                 ; trap call
000031B0  43F9 00003CD2           3333              LEA         clPer, A1           ; Display space
000031B6  103C 000E               3334              MOVE.B      #14, D0             ; command for trap call to display message
000031BA  4E4F                    3335              TRAP        #15                 ; trap call
000031BC  6000 03B2               3336              BRA         endSUB              ; go to the end of the subroutine
000031C0                          3337  
000031C0  43F9 00003D7F           3338  displayA7A  LEA         dispA7, A1          ; Display space
000031C6  103C 000E               3339              MOVE.B      #14, D0             ; command for trap call to display message
000031CA  4E4F                    3340              TRAP        #15                 ; trap call
000031CC  43F9 00003CD2           3341              LEA         clPer, A1           ; Display space
000031D2  103C 000E               3342              MOVE.B      #14, D0             ; command for trap call to display message
000031D6  4E4F                    3343              TRAP        #15                 ; trap call
000031D8  6000 0396               3344              BRA         endSUB              ; go to the end of the subroutine
000031DC                          3345              
000031DC                          3346  ***********************************************************************************************************
000031DC                          3347  * Addr Postincrement
000031DC                          3348              
000031DC  43F9 00003CD0           3349  pAddrPost   LEA         opPer, A1           ; Display space
000031E2  103C 000E               3350              MOVE.B      #14, D0             ; command for trap call to display message
000031E6  4E4F                    3351              TRAP        #15                 ; trap call
000031E8                          3352              
000031E8  B63C 0000               3353              CMP.B   #zero,D3
000031EC  6700 003A               3354              BEQ     displayA0P
000031F0  B63C 0001               3355              CMP.B   #one,D3
000031F4  6700 005A               3356              BEQ     displayA1P
000031F8  B63C 0002               3357              CMP.B   #two,D3
000031FC  6700 007A               3358              BEQ     displayA2P
00003200  B63C 0003               3359              CMP.B   #three,D3
00003204  6700 009A               3360              BEQ     displayA3P
00003208  B63C 0004               3361              CMP.B   #four,D3
0000320C  6700 00BA               3362              BEQ     displayA4P
00003210  B63C 0005               3363              CMP.B   #five,D3
00003214  6700 00DA               3364              BEQ     displayA5P
00003218  B63C 0006               3365              CMP.B   #six,D3
0000321C  6700 00FA               3366              BEQ     displayA6P
00003220  B63C 0007               3367              CMP.B   #seven,D3
00003224  6700 011A               3368              BEQ     displayA7P
00003228                          3369              
00003228  43F9 00003D6A           3370  displayA0P  LEA         dispA0, A1          ; Display space
0000322E  103C 000E               3371              MOVE.B      #14, D0             ; command for trap call to display message
00003232  4E4F                    3372              TRAP        #15                 ; trap call
00003234  43F9 00003CD2           3373              LEA         clPer, A1           ; Display space
0000323A  103C 000E               3374              MOVE.B      #14, D0             ; command for trap call to display message
0000323E  4E4F                    3375              TRAP        #15                 ; trap call
00003240  43F9 00003CD6           3376              LEA         inc, A1             ; Display space
00003246  103C 000E               3377              MOVE.B      #14, D0             ; command for trap call to display message
0000324A  4E4F                    3378              TRAP        #15                 ; trap call
0000324C  6000 0322               3379              BRA         endSUB              ; go to the end of the subroutine
00003250                          3380              
00003250  43F9 00003D6D           3381  displayA1P  LEA         dispA1, A1          ; Display space
00003256  103C 000E               3382              MOVE.B      #14, D0             ; command for trap call to display message
0000325A  4E4F                    3383              TRAP        #15                 ; trap call
0000325C  43F9 00003CD2           3384              LEA         clPer, A1           ; Display space
00003262  103C 000E               3385              MOVE.B      #14, D0             ; command for trap call to display message
00003266  4E4F                    3386              TRAP        #15                 ; trap call
00003268  43F9 00003CD6           3387              LEA         inc, A1             ; Display space
0000326E  103C 000E               3388              MOVE.B      #14, D0             ; command for trap call to display message
00003272  4E4F                    3389              TRAP        #15                 ; trap call
00003274  6000 02FA               3390              BRA         endSUB              ; go to the end of the subroutine
00003278                          3391  
00003278  43F9 00003D70           3392  displayA2P  LEA         dispA2, A1          ; Display space
0000327E  103C 000E               3393              MOVE.B      #14, D0             ; command for trap call to display message
00003282  4E4F                    3394              TRAP        #15                 ; trap call
00003284  43F9 00003CD2           3395              LEA         clPer, A1           ; Display space
0000328A  103C 000E               3396              MOVE.B      #14, D0             ; command for trap call to display message
0000328E  4E4F                    3397              TRAP        #15                 ; trap call
00003290  43F9 00003CD6           3398              LEA         inc, A1             ; Display space
00003296  103C 000E               3399              MOVE.B      #14, D0             ; command for trap call to display message
0000329A  4E4F                    3400              TRAP        #15                 ; trap call
0000329C  6000 02D2               3401              BRA         endSUB              ; go to the end of the subroutine
000032A0                          3402  
000032A0  43F9 00003D73           3403  displayA3P  LEA         dispA3, A1          ; Display space
000032A6  103C 000E               3404              MOVE.B      #14, D0             ; command for trap call to display message
000032AA  4E4F                    3405              TRAP        #15                 ; trap call
000032AC  43F9 00003CD2           3406              LEA         clPer, A1           ; Display space
000032B2  103C 000E               3407              MOVE.B      #14, D0             ; command for trap call to display message
000032B6  4E4F                    3408              TRAP        #15                 ; trap call
000032B8  43F9 00003CD6           3409              LEA         inc, A1             ; Display space
000032BE  103C 000E               3410              MOVE.B      #14, D0             ; command for trap call to display message
000032C2  4E4F                    3411              TRAP        #15                 ; trap call
000032C4  6000 02AA               3412              BRA         endSUB              ; go to the end of the subroutine
000032C8                          3413  
000032C8  43F9 00003D76           3414  displayA4P  LEA         dispA4, A1          ; Display space
000032CE  103C 000E               3415              MOVE.B      #14, D0             ; command for trap call to display message
000032D2  4E4F                    3416              TRAP        #15                 ; trap call
000032D4  43F9 00003CD2           3417              LEA         clPer, A1           ; Display space
000032DA  103C 000E               3418              MOVE.B      #14, D0             ; command for trap call to display message
000032DE  4E4F                    3419              TRAP        #15                 ; trap call
000032E0  43F9 00003CD6           3420              LEA         inc, A1             ; Display space
000032E6  103C 000E               3421              MOVE.B      #14, D0             ; command for trap call to display message
000032EA  4E4F                    3422              TRAP        #15                 ; trap call
000032EC  6000 0282               3423              BRA         endSUB              ; go to the end of the subroutine
000032F0                          3424  
000032F0  43F9 00003D79           3425  displayA5P  LEA         dispA5, A1          ; Display space
000032F6  103C 000E               3426              MOVE.B      #14, D0             ; command for trap call to display message
000032FA  4E4F                    3427              TRAP        #15                 ; trap call
000032FC  43F9 00003CD2           3428              LEA         clPer, A1           ; Display space
00003302  103C 000E               3429              MOVE.B      #14, D0             ; command for trap call to display message
00003306  4E4F                    3430              TRAP        #15                 ; trap call
00003308  43F9 00003CD6           3431              LEA         inc, A1             ; Display space
0000330E  103C 000E               3432              MOVE.B      #14, D0             ; command for trap call to display message
00003312  4E4F                    3433              TRAP        #15                 ; trap call
00003314  6000 025A               3434              BRA         endSUB              ; go to the end of the subroutine
00003318                          3435  
00003318  43F9 00003D7C           3436  displayA6P  LEA         dispA6, A1          ; Display space
0000331E  103C 000E               3437              MOVE.B      #14, D0             ; command for trap call to display message
00003322  4E4F                    3438              TRAP        #15                 ; trap call
00003324  43F9 00003CD2           3439              LEA         clPer, A1           ; Display space
0000332A  103C 000E               3440              MOVE.B      #14, D0             ; command for trap call to display message
0000332E  4E4F                    3441              TRAP        #15                 ; trap call
00003330  43F9 00003CD6           3442              LEA         inc, A1             ; Display space
00003336  103C 000E               3443              MOVE.B      #14, D0             ; command for trap call to display message
0000333A  4E4F                    3444              TRAP        #15                 ; trap call
0000333C  6000 0232               3445              BRA         endSUB              ; go to the end of the subroutine
00003340                          3446  
00003340  43F9 00003D7F           3447  displayA7P  LEA         dispA7, A1          ; Display space
00003346  103C 000E               3448              MOVE.B      #14, D0             ; command for trap call to display message
0000334A  4E4F                    3449              TRAP        #15                 ; trap call
0000334C  43F9 00003CD2           3450              LEA         clPer, A1           ; Display space
00003352  103C 000E               3451              MOVE.B      #14, D0             ; command for trap call to display message
00003356  4E4F                    3452              TRAP        #15                 ; trap call
00003358  43F9 00003CD6           3453              LEA         inc, A1             ; Display space
0000335E  103C 000E               3454              MOVE.B      #14, D0             ; command for trap call to display message
00003362  4E4F                    3455              TRAP        #15                 ; trap call
00003364  6000 020A               3456              BRA         endSUB              ; go to the end of the subroutine
00003368                          3457  
00003368                          3458  ***********************************************************************************************************
00003368                          3459  * Addr Postdecrement
00003368                          3460  
00003368  43F9 00003CD4           3461  pAddrDec    LEA         dec, A1             ; Display space
0000336E  103C 000E               3462              MOVE.B      #14, D0             ; command for trap call to display message
00003372  4E4F                    3463              TRAP        #15                 ; trap call
00003374                          3464              
00003374  43F9 00003CD0           3465              LEA         opPer, A1           ; Display space
0000337A  103C 000E               3466              MOVE.B      #14, D0             ; command for trap call to display message
0000337E  4E4F                    3467              TRAP        #15                 ; trap call
00003380                          3468              
00003380  B63C 0000               3469              CMP.B   #zero,D3
00003384  6700 003A               3470              BEQ     displayA0D
00003388  B63C 0001               3471              CMP.B   #one,D3
0000338C  6700 004E               3472              BEQ     displayA1D
00003390  B63C 0002               3473              CMP.B   #two,D3
00003394  6700 0062               3474              BEQ     displayA2D
00003398  B63C 0003               3475              CMP.B   #three,D3
0000339C  6700 0076               3476              BEQ     displayA3D
000033A0  B63C 0004               3477              CMP.B   #four,D3
000033A4  6700 008A               3478              BEQ     displayA4D
000033A8  B63C 0005               3479              CMP.B   #five,D3
000033AC  6700 009E               3480              BEQ     displayA5D
000033B0  B63C 0006               3481              CMP.B   #six,D3
000033B4  6700 00B2               3482              BEQ     displayA6D
000033B8  B63C 0007               3483              CMP.B   #seven,D3
000033BC  6700 00C6               3484              BEQ     displayA7D
000033C0                          3485              
000033C0  43F9 00003D6A           3486  displayA0D  LEA         dispA0, A1          ; Display space
000033C6  103C 000E               3487              MOVE.B      #14, D0             ; command for trap call to display message
000033CA  4E4F                    3488              TRAP        #15                 ; trap call
000033CC  43F9 00003CD2           3489              LEA         clPer, A1           ; Display space
000033D2  103C 000E               3490              MOVE.B      #14, D0             ; command for trap call to display message
000033D6  4E4F                    3491              TRAP        #15                 ; trap call
000033D8  6000 0196               3492              BRA         endSUB              ; go to the end of the subroutine
000033DC                          3493              
000033DC  43F9 00003D6D           3494  displayA1D  LEA         dispA1, A1          ; Display space
000033E2  103C 000E               3495              MOVE.B      #14, D0             ; command for trap call to display message
000033E6  4E4F                    3496              TRAP        #15                 ; trap call
000033E8  43F9 00003CD2           3497              LEA         clPer, A1           ; Display space
000033EE  103C 000E               3498              MOVE.B      #14, D0             ; command for trap call to display message
000033F2  4E4F                    3499              TRAP        #15                 ; trap call
000033F4  6000 017A               3500              BRA         endSUB              ; go to the end of the subroutine
000033F8                          3501  
000033F8  43F9 00003D70           3502  displayA2D  LEA         dispA2, A1          ; Display space
000033FE  103C 000E               3503              MOVE.B      #14, D0             ; command for trap call to display message
00003402  4E4F                    3504              TRAP        #15                 ; trap call
00003404  43F9 00003CD2           3505              LEA         clPer, A1           ; Display space
0000340A  103C 000E               3506              MOVE.B      #14, D0             ; command for trap call to display message
0000340E  4E4F                    3507              TRAP        #15                 ; trap call
00003410  6000 015E               3508              BRA         endSUB              ; go to the end of the subroutine
00003414                          3509  
00003414  43F9 00003D73           3510  displayA3D  LEA         dispA3, A1          ; Display space
0000341A  103C 000E               3511              MOVE.B      #14, D0             ; command for trap call to display message
0000341E  4E4F                    3512              TRAP        #15                 ; trap call
00003420  43F9 00003CD2           3513              LEA         clPer, A1           ; Display space
00003426  103C 000E               3514              MOVE.B      #14, D0             ; command for trap call to display message
0000342A  4E4F                    3515              TRAP        #15                 ; trap call
0000342C  6000 0142               3516              BRA         endSUB              ; go to the end of the subroutine
00003430                          3517  
00003430  43F9 00003D76           3518  displayA4D  LEA         dispA4, A1          ; Display space
00003436  103C 000E               3519              MOVE.B      #14, D0             ; command for trap call to display message
0000343A  4E4F                    3520              TRAP        #15                 ; trap call
0000343C  43F9 00003CD2           3521              LEA         clPer, A1           ; Display space
00003442  103C 000E               3522              MOVE.B      #14, D0             ; command for trap call to display message
00003446  4E4F                    3523              TRAP        #15                 ; trap call
00003448  6000 0126               3524              BRA         endSUB              ; go to the end of the subroutine
0000344C                          3525  
0000344C  43F9 00003D79           3526  displayA5D  LEA         dispA5, A1          ; Display space
00003452  103C 000E               3527              MOVE.B      #14, D0             ; command for trap call to display message
00003456  4E4F                    3528              TRAP        #15                 ; trap call
00003458  43F9 00003CD2           3529              LEA         clPer, A1           ; Display space
0000345E  103C 000E               3530              MOVE.B      #14, D0             ; command for trap call to display message
00003462  4E4F                    3531              TRAP        #15                 ; trap call
00003464  6000 010A               3532              BRA         endSUB              ; go to the end of the subroutine
00003468                          3533  
00003468  43F9 00003D7C           3534  displayA6D  LEA         dispA6, A1          ; Display space
0000346E  103C 000E               3535              MOVE.B      #14, D0             ; command for trap call to display message
00003472  4E4F                    3536              TRAP        #15                 ; trap call
00003474  43F9 00003CD2           3537              LEA         clPer, A1           ; Display space
0000347A  103C 000E               3538              MOVE.B      #14, D0             ; command for trap call to display message
0000347E  4E4F                    3539              TRAP        #15                 ; trap call
00003480  6000 00EE               3540              BRA         endSUB              ; go to the end of the subroutine
00003484                          3541  
00003484  43F9 00003D7F           3542  displayA7D  LEA         dispA7, A1          ; Display space
0000348A  103C 000E               3543              MOVE.B      #14, D0             ; command for trap call to display message
0000348E  4E4F                    3544              TRAP        #15                 ; trap call
00003490  43F9 00003CD2           3545              LEA         clPer, A1           ; Display space
00003496  103C 000E               3546              MOVE.B      #14, D0             ; command for trap call to display message
0000349A  4E4F                    3547              TRAP        #15                 ; trap call
0000349C  6000 00D2               3548              BRA         endSUB              ; go to the end of the subroutine
000034A0                          3549  ***********************************************************************************************************
000034A0                          3550  * Display Hex
000034A0                          3551  
000034A0  B63C 0000               3552  pHex        CMP.B       #zero, D3
000034A4  6700 0012               3553              BEQ         AbsShort
000034A8  B63C 0001               3554              CMP.B       #one, D3
000034AC  6700 0042               3555              BEQ         AbsLong
000034B0  B63C 0004               3556              CMP.B       #four, D3
000034B4  6700 0072               3557              BEQ         DispImm
000034B8                          3558              
000034B8  43F9 00003CD0           3559  AbsShort    LEA         opPer, A1           ; Display space
000034BE  103C 000E               3560              MOVE.B      #14, D0             ; command for trap call to display message
000034C2  4E4F                    3561              TRAP        #15                 ; trap call
000034C4                          3562              
000034C4  43F9 00003CCC           3563              LEA         dispHex, A1         ; Display space
000034CA  103C 000E               3564              MOVE.B      #14, D0             ; command for trap call to display message
000034CE  4E4F                    3565              TRAP        #15                 ; trap call
000034D0                          3566              
000034D0  4241                    3567              CLR         D1
000034D2  3218                    3568              MOVE.W      (A0)+, D1
000034D4  4240                    3569              CLR         D0
000034D6  103C 0004               3570              MOVE.B      #4, D0
000034DA                          3571              
000034DA  4EB9 00003A98           3572              JSR         outHex
000034E0                          3573              
000034E0  43F9 00003CD2           3574              LEA         clPer, A1           ; Display space
000034E6  103C 000E               3575              MOVE.B      #14, D0             ; command for trap call to display message
000034EA  4E4F                    3576              TRAP        #15                 ; trap call
000034EC                          3577              
000034EC  6000 0082               3578              BRA         endSub
000034F0                          3579              
000034F0  43F9 00003CD0           3580  AbsLong     LEA         opPer, A1           ; Display space
000034F6  103C 000E               3581              MOVE.B      #14, D0             ; command for trap call to display message
000034FA  4E4F                    3582              TRAP        #15                 ; trap call
000034FC                          3583              
000034FC  43F9 00003CCC           3584              LEA         dispHex, A1         ; Display space
00003502  103C 000E               3585              MOVE.B      #14, D0             ; command for trap call to display message
00003506  4E4F                    3586              TRAP        #15                 ; trap call
00003508                          3587              
00003508  4241                    3588              CLR         D1
0000350A  2218                    3589              MOVE.L      (A0)+, D1
0000350C  4240                    3590              CLR         D0
0000350E  103C 0008               3591              MOVE.B      #8, D0
00003512                          3592              
00003512  4EB9 00003A98           3593              JSR         outHex
00003518                          3594              
00003518  43F9 00003CD2           3595              LEA         clPer, A1           ; Display space
0000351E  103C 000E               3596              MOVE.B      #14, D0             ; command for trap call to display message
00003522  4E4F                    3597              TRAP        #15                 ; trap call
00003524                          3598              
00003524  6000 004A               3599              BRA         endSub
00003528                          3600  
00003528  43F9 00003CCA           3601  DispImm     LEA         hashTag, A1         ; Display space
0000352E  103C 000E               3602              MOVE.B      #14, D0             ; command for trap call to display message
00003532  4E4F                    3603              TRAP        #15                 ; trap call
00003534                          3604  
00003534  43F9 00003CCC           3605              LEA         dispHex, A1         ; Display space
0000353A  103C 000E               3606              MOVE.B      #14, D0             ; command for trap call to display message
0000353E  4E4F                    3607              TRAP        #15                 ; trap call
00003540                          3608              
00003540  BC3C 0001               3609              CMP.B       #1,D6
00003544  6700 0016               3610              BEQ         ImmLong
00003548                          3611              
00003548  4241                    3612              CLR         D1
0000354A  3218                    3613              MOVE.W      (A0)+, D1
0000354C  4240                    3614              CLR         D0
0000354E  103C 0004               3615              MOVE.B      #4, D0
00003552  4EB9 00003A98           3616              JSR         outHex
00003558  6000 0012               3617              BRA         LongSkip
0000355C                          3618              
0000355C  4241                    3619  ImmLong     CLR         D1
0000355E  2218                    3620              MOVE.L      (A0)+, D1
00003560  4240                    3621              CLR         D0
00003562  103C 0008               3622              MOVE.B      #8, D0
00003566  4EB9 00003A98           3623              JSR         outHex             
0000356C                          3624  
0000356C                          3625  LongSkip
0000356C  6000 0002               3626              BRA         endSub
00003570                          3627  invalid
00003570                          3628  
00003570                          3629  endSUB
00003570                          3630          
00003570  4CDF 7EFF               3631              MOVEM.L  (SP)+, D0-D7/A1-A6
00003574  4E75                    3632              RTS
00003576                          3633  
00003576                          3634  ***********************************************************************************************************
00003576                          3635  ***********************************************************************************************************
00003576                          3636  ***********************************************************************************************************
00003576                          3637  
00003576  48E7 FF7E               3638  MOVEMBRA    MOVEM.L  D0-D7/A1-A6, -(SP)     ; Branches off depending on size bit
0000357A  BA7C 0000               3639              CMP      #zero,D5
0000357E  6700 000A               3640              BEQ      MOVEMW
00003582  BA7C 0001               3641              CMP      #one, D5
00003586  6700 001E               3642              BEQ      MOVEML
0000358A                          3643              
0000358A                          3644  MOVEMW     
0000358A  43F9 00003D64           3645              LEA         dispWord, A1        ; we know that the opcode will be ROR, so load A1 to print message
00003590  103C 000E               3646              MOVE.B      #14, D0             ; command for trap call to display message
00003594  4E4F                    3647              TRAP        #15                 ; trap call
00003596                          3648  
00003596  43F9 00003CC7           3649              LEA         space, A1           ; we know that the opcode will be ROR, so load A1 to print message
0000359C  103C 000E               3650              MOVE.B      #14, D0             ; command for trap call to display message
000035A0  4E4F                    3651              TRAP        #15                 ; trap call
000035A2                          3652              
000035A2  6000 001E               3653              BRA         CheckDR
000035A6                          3654  
000035A6                          3655  MOVEML   
000035A6  43F9 00003D67           3656              LEA         dispLong, A1        ; we know that the opcode will be ROR, so load A1 to print message
000035AC  103C 000E               3657              MOVE.B      #14, D0             ; command for trap call to display message
000035B0  4E4F                    3658              TRAP        #15                 ; trap call
000035B2                          3659  
000035B2  43F9 00003CC7           3660              LEA         space, A1        ; we know that the opcode will be ROR, so load A1 to print message
000035B8  103C 000E               3661              MOVE.B      #14, D0             ; command for trap call to display message
000035BC  4E4F                    3662              TRAP        #15                 ; trap call
000035BE                          3663           
000035BE                          3664  
000035BE  6000 0002               3665              BRA         CheckDR
000035C2                          3666  
000035C2                          3667  CheckDR     
000035C2                          3668              
000035C2                          3669                
000035C2  3218                    3670              MOVE.W      (A0)+, D1           ; Taking in next word
000035C4  BC7C 0000               3671              CMP         #zero,D6
000035C8  6700 0020               3672              BEQ         printRegMem
000035CC  BC7C 0001               3673              CMP         #one,D6
000035D0  6700 0004               3674              BEQ         printStack
000035D4  609A                    3675              BRA         invalid
000035D6                          3676              
000035D6                          3677  printStack 
000035D6  4EB8 2EF8               3678              JSR         printEA
000035DA                          3679              
000035DA  43F9 00003CCE           3680              LEA         comma,A1
000035E0  103C 000E               3681              MOVE.B      #14, D0             ; command for trap call to display message
000035E4  4E4F                    3682              TRAP        #15                 ; trap call
000035E6                          3683              
000035E6                          3684              
000035E6  6000 0002               3685              BRA         printRegMem
000035EA                          3686             
000035EA                          3687  printRegMem 
000035EA  4244                    3688              CLR         D4                  ; Using D4 to store predecrement mode addresses
000035EC  1801                    3689              MOVE.B      D1,D4               ; Stores bits for D0-D7
000035EE                          3690              
000035EE  4245                    3691              CLR         D5
000035F0  1A01                    3692              MOVE.B      D1,D5
000035F2  CA7C 0001               3693              AND         #mask1,D5
000035F6  BA7C 0001               3694              CMP         #mask1,D5
000035FA  6700 007A               3695              BEQ         DataReg0
000035FE                          3696              
000035FE  4245                    3697              CLR         D5
00003600  1A01                    3698              MOVE.B      D1,D5
00003602  CA7C 0002               3699              AND         #mask2,D5
00003606  BA7C 0002               3700              CMP         #mask2,D5
0000360A  6700 009A               3701              BEQ         DataReg1
0000360E                          3702  
0000360E  4245                    3703              CLR         D5
00003610  1A01                    3704              MOVE.B      D1,D5
00003612  CA7C 0004               3705              AND         #mask3,D5
00003616  BA7C 0004               3706              CMP         #mask3,D5
0000361A  6700 00CA               3707              BEQ         DataReg2            
0000361E                          3708              
0000361E  4245                    3709              CLR         D5
00003620  1A01                    3710              MOVE.B      D1,D5
00003622  CA7C 0008               3711              AND         #mask4,D5
00003626  BA7C 0008               3712              CMP         #mask4,D5
0000362A  6700 00FA               3713              BEQ         DataReg3            
0000362E                          3714              
0000362E  4245                    3715              CLR         D5
00003630  1A01                    3716              MOVE.B      D1,D5
00003632  CA7C 0010               3717              AND         #mask5,D5
00003636  BA7C 0010               3718              CMP         #mask5,D5
0000363A  6700 012A               3719              BEQ         DataReg4
0000363E                          3720  
0000363E  4245                    3721              CLR         D5
00003640  1A01                    3722              MOVE.B      D1,D5
00003642  CA7C 0020               3723              AND         #mask6,D5
00003646  BA7C 0020               3724              CMP         #mask6,D5
0000364A  6700 015A               3725              BEQ         DataReg5
0000364E                          3726  
0000364E  4245                    3727              CLR         D5
00003650  1A01                    3728              MOVE.B      D1,D5
00003652  CA7C 0040               3729              AND         #mask7,D5
00003656  BA7C 0040               3730              CMP         #mask7,D5
0000365A  6700 018A               3731              BEQ         DataReg6
0000365E                          3732  
0000365E  4245                    3733              CLR         D5
00003660  1A01                    3734              MOVE.B      D1,D5
00003662  CA7C 0080               3735              AND         #mask8,D5
00003666  BA7C 0080               3736              CMP         #mask8,D5
0000366A  6700 01BA               3737              BEQ         DataReg7
0000366E                          3738              
0000366E  6000 FF00               3739              BRA         invalid
00003672  6000 FEFC               3740              BRA         invalid        
00003676                          3741              
00003676                          3742  DataReg0
00003676  43F9 00003D84           3743              LEA         dispD0, A1          ; Output string D0
0000367C  103C 000E               3744              MOVE.B      #14, D0             ; command for trap call to display message
00003680  4E4F                    3745              TRAP        #15                 ; trap call
00003682                          3746              
00003682  4245                    3747              CLR         D5
00003684  1A01                    3748              MOVE.B      D1,D5
00003686  CA7C 0002               3749              AND         #mask2,D5
0000368A  BA7C 0002               3750              CMP         #mask2,D5
0000368E  6700 0006               3751              BEQ         Reg0Cont
00003692  6000 01A2               3752              BRA         printMem
00003696                          3753  Reg0Cont        
00003696  43F9 00003CD4           3754              LEA         dec, A1             ; Output -
0000369C  103C 000E               3755              MOVE.B      #14, D0             ; command for trap call to display message
000036A0  4E4F                    3756              TRAP        #15                 ; trap call        
000036A2  6000 0002               3757              BRA         DataReg1
000036A6                          3758  
000036A6                          3759  DataReg1
000036A6  4245                    3760              CLR         D5
000036A8  1A01                    3761              MOVE.B      D1,D5
000036AA  CA7C 0005               3762              AND         #maskA,D5
000036AE  BA7C 0005               3763              CMP         #maskA,D5
000036B2  6700 0032               3764              BEQ         DataReg2
000036B6                          3765              
000036B6  43F9 00003D87           3766              LEA         dispD1, A1          ; Output string D0
000036BC  103C 000E               3767              MOVE.B      #14, D0             ; command for trap call to display message
000036C0  4E4F                    3768              TRAP        #15                 ; trap call
000036C2                          3769              
000036C2  4245                    3770              CLR         D5
000036C4  1A01                    3771              MOVE.B      D1,D5
000036C6  CA7C 0004               3772              AND         #mask3,D5
000036CA  BA7C 0004               3773              CMP         #mask3,D5
000036CE  6700 0006               3774              BEQ         Reg1Cont
000036D2  6000 0162               3775              BRA         printMem
000036D6                          3776  Reg1Cont        
000036D6  43F9 00003CD4           3777              LEA         dec, A1             ; Output -
000036DC  103C 000E               3778              MOVE.B      #14, D0             ; command for trap call to display message
000036E0  4E4F                    3779              TRAP        #15                 ; trap call        
000036E2  6000 0002               3780              BRA         DataReg2
000036E6                          3781  
000036E6                          3782  
000036E6                          3783  DataReg2
000036E6  4245                    3784              CLR         D5
000036E8  1A01                    3785              MOVE.B      D1,D5
000036EA  CA7C 000A               3786              AND         #maskB,D5
000036EE  BA7C 000A               3787              CMP         #maskB,D5
000036F2  6700 0032               3788              BEQ         DataReg3
000036F6                          3789              
000036F6                          3790              
000036F6  43F9 00003D8A           3791              LEA         dispD2, A1          ; Output string D0
000036FC  103C 000E               3792              MOVE.B      #14, D0             ; command for trap call to display message
00003700  4E4F                    3793              TRAP        #15                 ; trap call
00003702                          3794              
00003702  4245                    3795              CLR         D5
00003704  1A01                    3796              MOVE.B      D1,D5
00003706  CA7C 0008               3797              AND         #mask4,D5
0000370A  BA7C 0008               3798              CMP         #mask4,D5
0000370E  6700 0006               3799              BEQ         Reg2Cont
00003712  6000 0122               3800              BRA         printMem
00003716                          3801  Reg2Cont        
00003716  43F9 00003CD4           3802              LEA         dec, A1             ; Output -
0000371C  103C 000E               3803              MOVE.B      #14, D0             ; command for trap call to display message
00003720  4E4F                    3804              TRAP        #15                 ; trap call        
00003722  6000 0002               3805              BRA         DataReg3
00003726                          3806  
00003726                          3807  DataReg3
00003726  4245                    3808              CLR         D5
00003728  1A01                    3809              MOVE.B      D1,D5
0000372A  CA7C 0014               3810              AND         #maskC,D5
0000372E  BA7C 0014               3811              CMP         #maskC,D5
00003732  6700 0032               3812              BEQ         DataReg4
00003736                          3813              
00003736  43F9 00003D8D           3814              LEA         dispD3, A1          ; Output string D0
0000373C  103C 000E               3815              MOVE.B      #14, D0             ; command for trap call to display message
00003740  4E4F                    3816              TRAP        #15                 ; trap call
00003742                          3817              
00003742  4245                    3818              CLR         D5
00003744  1A01                    3819              MOVE.B      D1,D5
00003746  CA7C 0010               3820              AND         #mask5,D5
0000374A  BA7C 0010               3821              CMP         #mask5,D5
0000374E  6700 0006               3822              BEQ         Reg3Cont
00003752  6000 00E2               3823              BRA         printMem
00003756                          3824  Reg3Cont        
00003756  43F9 00003CD4           3825              LEA         dec, A1             ; Output -
0000375C  103C 000E               3826              MOVE.B      #14, D0             ; command for trap call to display message
00003760  4E4F                    3827              TRAP        #15                 ; trap call        
00003762  6000 0002               3828              BRA         DataReg4
00003766                          3829  
00003766                          3830  
00003766                          3831  DataReg4
00003766  4245                    3832              CLR         D5
00003768  1A01                    3833              MOVE.B      D1,D5
0000376A  CA7C 0028               3834              AND         #maskD,D5
0000376E  BA7C 0028               3835              CMP         #maskD,D5
00003772  6700 0032               3836              BEQ         DataReg5
00003776                          3837              
00003776  43F9 00003D90           3838              LEA         dispD4, A1          ; Output string D0
0000377C  103C 000E               3839              MOVE.B      #14, D0             ; command for trap call to display message
00003780  4E4F                    3840              TRAP        #15                 ; trap call
00003782                          3841              
00003782  4245                    3842              CLR         D5
00003784  1A01                    3843              MOVE.B      D1,D5
00003786  CA7C 0020               3844              AND         #mask6,D5
0000378A  BA7C 0020               3845              CMP         #mask6,D5
0000378E  6700 0006               3846              BEQ         Reg4Cont
00003792  6000 00A2               3847              BRA         printMem
00003796                          3848  Reg4Cont        
00003796  43F9 00003CD4           3849              LEA         dec, A1             ; Output -
0000379C  103C 000E               3850              MOVE.B      #14, D0             ; command for trap call to display message
000037A0  4E4F                    3851              TRAP        #15                 ; trap call        
000037A2  6000 0002               3852              BRA         DataReg5
000037A6                          3853  
000037A6                          3854  DataReg5
000037A6  4245                    3855              CLR         D5
000037A8  1A01                    3856              MOVE.B      D1,D5
000037AA  CA7C 0050               3857              AND         #maskE,D5
000037AE  BA7C 0050               3858              CMP         #maskE,D5
000037B2  6700 0032               3859              BEQ         DataReg6
000037B6                          3860              
000037B6  43F9 00003D93           3861              LEA         dispD5, A1          ; Output string D0
000037BC  103C 000E               3862              MOVE.B      #14, D0             ; command for trap call to display message
000037C0  4E4F                    3863              TRAP        #15                 ; trap call
000037C2                          3864              
000037C2  4245                    3865              CLR         D5
000037C4  1A01                    3866              MOVE.B      D1,D5
000037C6  CA7C 0040               3867              AND         #mask7,D5
000037CA  BA7C 0040               3868              CMP         #mask7,D5
000037CE  6700 0006               3869              BEQ         Reg5Cont
000037D2  6000 0062               3870              BRA         printMem
000037D6                          3871  Reg5Cont        
000037D6  43F9 00003CD4           3872              LEA         dec, A1             ; Output -
000037DC  103C 000E               3873              MOVE.B      #14, D0             ; command for trap call to display message
000037E0  4E4F                    3874              TRAP        #15                 ; trap call        
000037E2  6000 0042               3875              BRA         DataReg7
000037E6                          3876  
000037E6                          3877  DataReg6
000037E6  4245                    3878              CLR         D5
000037E8  1A01                    3879              MOVE.B      D1,D5
000037EA  CA7C 00A0               3880              AND         #maskF,D5
000037EE  BA7C 00A0               3881              CMP         #maskF,D5
000037F2  6700 0032               3882              BEQ         DataReg7
000037F6                          3883  
000037F6  43F9 00003D96           3884              LEA         dispD6, A1          ; Output string D0
000037FC  103C 000E               3885              MOVE.B      #14, D0             ; command for trap call to display message
00003800  4E4F                    3886              TRAP        #15                 ; trap call
00003802                          3887              
00003802  4245                    3888              CLR         D5
00003804  1A01                    3889              MOVE.B      D1,D5
00003806  CA7C 0080               3890              AND         #mask8,D5
0000380A  BA7C 0080               3891              CMP         #mask8,D5
0000380E  6700 0006               3892              BEQ         Reg6Cont
00003812  6000 0022               3893              BRA         printMem
00003816                          3894  Reg6Cont        
00003816  43F9 00003CD4           3895              LEA         dec, A1             ; Output -
0000381C  103C 000E               3896              MOVE.B      #14, D0             ; command for trap call to display message
00003820  4E4F                    3897              TRAP        #15                 ; trap call        
00003822  6000 0002               3898              BRA         DataReg7
00003826                          3899  
00003826                          3900  DataReg7    
00003826  43F9 00003D99           3901              LEA         dispD7, A1             ; Output -
0000382C  103C 000E               3902              MOVE.B      #14, D0             ; command for trap call to display message
00003830  4E4F                    3903              TRAP        #15                 ; trap call        
00003832  6000 0002               3904              BRA         printMem            
00003836                          3905  printMem                                    ; Made this function in order to reuse if DR is 1
00003836  6000 0002               3906              BRA         printMemNow
0000383A                          3907  printMemNow               
0000383A  43F9 00003D5A           3908              LEA         slash, A1           ; Display slash
00003840  103C 000E               3909              MOVE.B      #14, D0             ; command for trap call to display message
00003844  4E4F                    3910              TRAP        #15                 ; trap call
00003846                          3911           
00003846  4244                    3912              CLR         D4                  ; Using D4 to store predecrement mode addresses
00003848  3801                    3913              MOVE.W      D1,D4               ; Stores bits for D0-D7
0000384A  E044                    3914              ASR         #eight,D4
0000384C                          3915              
0000384C  4245                    3916              CLR         D5
0000384E  1A04                    3917              MOVE.B      D4,D5
00003850  CA7C 0001               3918              AND         #mask1,D5
00003854  BA7C 0001               3919              CMP         #mask1,D5
00003858  6700 0072               3920              BEQ         AddrReg0
0000385C                          3921              
0000385C  4245                    3922              CLR         D5
0000385E  1A04                    3923              MOVE.B      D4,D5
00003860  CA7C 0002               3924              AND         #mask2,D5
00003864  BA7C 0002               3925              CMP         #mask2,D5
00003868  6700 0092               3926              BEQ         AddrReg1
0000386C                          3927  
0000386C  4245                    3928              CLR         D5
0000386E  1A04                    3929              MOVE.B      D4,D5
00003870  CA7C 0004               3930              AND         #mask3,D5
00003874  BA7C 0004               3931              CMP         #mask3,D5
00003878  6700 00C2               3932              BEQ         AddrReg2            
0000387C                          3933              
0000387C  4245                    3934              CLR         D5
0000387E  1A04                    3935              MOVE.B      D4,D5
00003880  CA7C 0008               3936              AND         #mask4,D5
00003884  BA7C 0008               3937              CMP         #mask4,D5
00003888  6700 00F2               3938              BEQ         AddrReg3            
0000388C                          3939              
0000388C  4245                    3940              CLR         D5
0000388E  1A04                    3941              MOVE.B      D4,D5
00003890  CA7C 0010               3942              AND         #mask5,D5
00003894  BA7C 0010               3943              CMP         #mask5,D5
00003898  6700 0122               3944              BEQ         AddrReg4
0000389C                          3945  
0000389C  4245                    3946              CLR         D5
0000389E  1A04                    3947              MOVE.B      D4,D5
000038A0  CA7C 0020               3948              AND         #mask6,D5
000038A4  BA7C 0020               3949              CMP         #mask6,D5
000038A8  6700 0152               3950              BEQ         AddrReg5
000038AC                          3951  
000038AC  4245                    3952              CLR         D5
000038AE  1A04                    3953              MOVE.B      D4,D5
000038B0  CA7C 0040               3954              AND         #mask7,D5
000038B4  BA7C 0040               3955              CMP         #mask7,D5
000038B8  6700 0182               3956              BEQ         AddrReg6
000038BC                          3957  
000038BC  4245                    3958              CLR         D5
000038BE  1A04                    3959              MOVE.B      D4,D5
000038C0  CA7C 0080               3960              AND         #mask8,D5
000038C4  BA7C 0080               3961              CMP         #mask8,D5
000038C8  6700 01B2               3962              BEQ         AddrReg7
000038CC                          3963  AddrReg0
000038CC  43F9 00003D6A           3964              LEA         dispA0, A1          ; Output string D0
000038D2  103C 000E               3965              MOVE.B      #14, D0             ; command for trap call to display message
000038D6  4E4F                    3966              TRAP        #15                 ; trap call
000038D8                          3967              
000038D8  4245                    3968              CLR         D5
000038DA  1A01                    3969              MOVE.B      D1,D5
000038DC  CA7C 0002               3970              AND         #mask2,D5
000038E0  BA7C 0002               3971              CMP         #mask2,D5
000038E4  6700 0006               3972              BEQ         Addr0Cont
000038E8  6000 01A2               3973              BRA         endMOVE
000038EC                          3974  Addr0Cont        
000038EC  43F9 00003CD4           3975              LEA         dec, A1             ; Output -
000038F2  103C 000E               3976              MOVE.B      #14, D0             ; command for trap call to display message
000038F6  4E4F                    3977              TRAP        #15                 ; trap call        
000038F8  6000 0002               3978              BRA         AddrReg1
000038FC                          3979  
000038FC                          3980  AddrReg1
000038FC  4245                    3981              CLR         D5
000038FE  1A04                    3982              MOVE.B      D4,D5
00003900  CA7C 0005               3983              AND         #maskA,D5
00003904  BA7C 0005               3984              CMP         #maskA,D5
00003908  6700 0032               3985              BEQ         AddrReg2
0000390C                          3986              
0000390C  43F9 00003D6D           3987              LEA         dispA1, A1          ; Output string D0
00003912  103C 000E               3988              MOVE.B      #14, D0             ; command for trap call to display message
00003916  4E4F                    3989              TRAP        #15                 ; trap call
00003918                          3990              
00003918  4245                    3991              CLR         D5
0000391A  1A04                    3992              MOVE.B      D4,D5
0000391C  CA7C 0004               3993              AND         #mask3,D5
00003920  BA7C 0004               3994              CMP         #mask3,D5
00003924  6700 0006               3995              BEQ         Addr1Cont
00003928  6000 0162               3996              BRA         endMOVE
0000392C                          3997  Addr1Cont        
0000392C  43F9 00003CD4           3998              LEA         dec, A1             ; Output -
00003932  103C 000E               3999              MOVE.B      #14, D0             ; command for trap call to display message
00003936  4E4F                    4000              TRAP        #15                 ; trap call        
00003938  6000 0002               4001              BRA         AddrReg2
0000393C                          4002  
0000393C                          4003  
0000393C                          4004  AddrReg2
0000393C  4245                    4005              CLR         D5
0000393E  1A04                    4006              MOVE.B      D4,D5
00003940  CA7C 000A               4007              AND         #maskB,D5
00003944  BA7C 000A               4008              CMP         #maskB,D5
00003948  6700 0032               4009              BEQ         AddrReg3
0000394C                          4010              
0000394C                          4011              
0000394C  43F9 00003D70           4012              LEA         dispA2, A1          ; Output string D0
00003952  103C 000E               4013              MOVE.B      #14, D0             ; command for trap call to display message
00003956  4E4F                    4014              TRAP        #15                 ; trap call
00003958                          4015              
00003958  4245                    4016              CLR         D5
0000395A  1A04                    4017              MOVE.B      D4,D5
0000395C  CA7C 0008               4018              AND         #mask4,D5
00003960  BA7C 0008               4019              CMP         #mask4,D5
00003964  6700 0006               4020              BEQ         Addr2Cont
00003968  6000 0122               4021              BRA         endMOVE
0000396C                          4022  Addr2Cont        
0000396C  43F9 00003CD4           4023              LEA         dec, A1             ; Output -
00003972  103C 000E               4024              MOVE.B      #14, D0             ; command for trap call to display message
00003976  4E4F                    4025              TRAP        #15                 ; trap call        
00003978  6000 0002               4026              BRA         AddrReg3
0000397C                          4027  
0000397C                          4028  AddrReg3
0000397C  4245                    4029              CLR         D5
0000397E  1A04                    4030              MOVE.B      D4,D5
00003980  CA7C 0014               4031              AND         #maskC,D5
00003984  BA7C 0014               4032              CMP         #maskC,D5
00003988  6700 0032               4033              BEQ         AddrReg4
0000398C                          4034              
0000398C  43F9 00003D73           4035              LEA         dispA3, A1          ; Output string D0
00003992  103C 000E               4036              MOVE.B      #14, D0             ; command for trap call to display message
00003996  4E4F                    4037              TRAP        #15                 ; trap call
00003998                          4038              
00003998  4245                    4039              CLR         D5
0000399A  1A04                    4040              MOVE.B      D4,D5
0000399C  CA7C 0010               4041              AND         #mask5,D5
000039A0  BA7C 0010               4042              CMP         #mask5,D5
000039A4  6700 0006               4043              BEQ         Addr3Cont
000039A8  6000 00E2               4044              BRA         endMOVE
000039AC                          4045  Addr3Cont        
000039AC  43F9 00003CD4           4046              LEA         dec, A1             ; Output -
000039B2  103C 000E               4047              MOVE.B      #14, D0             ; command for trap call to display message
000039B6  4E4F                    4048              TRAP        #15                 ; trap call        
000039B8  6000 0002               4049              BRA         AddrReg4
000039BC                          4050  
000039BC                          4051  
000039BC                          4052  AddrReg4
000039BC  4245                    4053              CLR         D5
000039BE  1A04                    4054              MOVE.B      D4,D5
000039C0  CA7C 0028               4055              AND         #maskD,D5
000039C4  BA7C 0028               4056              CMP         #maskD,D5
000039C8  6700 0032               4057              BEQ         AddrReg5
000039CC                          4058              
000039CC  43F9 00003D76           4059              LEA         dispA4, A1          ; Output string D0
000039D2  103C 000E               4060              MOVE.B      #14, D0             ; command for trap call to display message
000039D6  4E4F                    4061              TRAP        #15                 ; trap call
000039D8                          4062              
000039D8  4245                    4063              CLR         D5
000039DA  1A04                    4064              MOVE.B      D4,D5
000039DC  CA7C 0020               4065              AND         #mask6,D5
000039E0  BA7C 0020               4066              CMP         #mask6,D5
000039E4  6700 0006               4067              BEQ         Addr4Cont
000039E8  6000 00A2               4068              BRA         endMOVE
000039EC                          4069  Addr4Cont        
000039EC  43F9 00003CD4           4070              LEA         dec, A1             ; Output -
000039F2  103C 000E               4071              MOVE.B      #14, D0             ; command for trap call to display message
000039F6  4E4F                    4072              TRAP        #15                 ; trap call        
000039F8  6000 0002               4073              BRA         AddrReg5
000039FC                          4074  AddrReg5
000039FC  4245                    4075              CLR         D5
000039FE  1A04                    4076              MOVE.B      D4,D5
00003A00  CA7C 0050               4077              AND         #maskE,D5
00003A04  BA7C 0050               4078              CMP         #maskE,D5
00003A08  6700 0032               4079              BEQ         AddrReg6
00003A0C                          4080              
00003A0C  43F9 00003D79           4081              LEA         dispA5, A1          ; Output string D0
00003A12  103C 000E               4082              MOVE.B      #14, D0             ; command for trap call to display message
00003A16  4E4F                    4083              TRAP        #15                 ; trap call
00003A18                          4084              
00003A18  4245                    4085              CLR         D5
00003A1A  1A04                    4086              MOVE.B      D4,D5
00003A1C  CA7C 0040               4087              AND         #mask7,D5
00003A20  BA7C 0040               4088              CMP         #mask7,D5
00003A24  6700 0006               4089              BEQ         Addr5Cont
00003A28  6000 0062               4090              BRA         endMOVE
00003A2C                          4091  Addr5Cont        
00003A2C  43F9 00003CD4           4092              LEA         dec, A1             ; Output -
00003A32  103C 000E               4093              MOVE.B      #14, D0             ; command for trap call to display message
00003A36  4E4F                    4094              TRAP        #15                 ; trap call        
00003A38  6000 0042               4095              BRA         AddrReg7
00003A3C                          4096  
00003A3C                          4097  AddrReg6
00003A3C  4245                    4098              CLR         D5
00003A3E  1A04                    4099              MOVE.B      D4,D5
00003A40  CA7C 00A0               4100              AND         #maskF,D5
00003A44  BA7C 00A0               4101              CMP         #maskF,D5
00003A48  6700 0032               4102              BEQ         AddrReg7
00003A4C                          4103  
00003A4C  43F9 00003D7C           4104              LEA         dispA6, A1          ; Output string D0
00003A52  103C 000E               4105              MOVE.B      #14, D0             ; command for trap call to display message
00003A56  4E4F                    4106              TRAP        #15                 ; trap call
00003A58                          4107              
00003A58  4245                    4108              CLR         D5
00003A5A  1A04                    4109              MOVE.B      D4,D5
00003A5C  CA7C 0080               4110              AND         #mask8,D5
00003A60  BA7C 0080               4111              CMP         #mask8,D5
00003A64  6700 0006               4112              BEQ         Addr6Cont
00003A68  6000 0022               4113              BRA         endMOVE
00003A6C                          4114  Addr6Cont        
00003A6C  43F9 00003CD4           4115              LEA         dec, A1             ; Output -
00003A72  103C 000E               4116              MOVE.B      #14, D0             ; command for trap call to display message
00003A76  4E4F                    4117              TRAP        #15                 ; trap call        
00003A78  6000 0002               4118              BRA         AddrReg7
00003A7C                          4119  
00003A7C                          4120  AddrReg7    
00003A7C  43F9 00003D7F           4121              LEA         dispA7, A1          ; Output -
00003A82  103C 000E               4122              MOVE.B      #14, D0             ; command for trap call to display message
00003A86  4E4F                    4123              TRAP        #15                 ; trap call        
00003A88  6000 0002               4124              BRA         endMOVE
00003A8C                          4125  
00003A8C                          4126  endMOVE
00003A8C  4CDF 7EFF               4127              MOVEM.L  (SP)+, D0-D7/A1-A6
00003A90  4E75                    4128              RTS
00003A92                          4129  endMove1                                    ; Used if MOVEM has DR is 1
00003A92  4CDF 7EFF               4130              MOVEM.L  (SP)+, D0-D7/A1-A6
00003A96  4E75                    4131              RTS
00003A98                          4132  
00003A98                          4133  *this subroutine displays hex code stored in D1. It displays based on the number of 
00003A98                          4134  *It displays based on the number of hex to display which is stored in D0. If it is a
00003A98                          4135  *long or word to display, it will figure out the ascii character and add $37 if it
00003A98                          4136  *is a letter, and $30 if its a number. It will then load the character into D1 and 
00003A98                          4137  *display it via trap task 6 and loop however many times is needed, 4 or 8. If a word
00003A98                          4138  *needs to be displayed, it will roll the bits over so that, the hex are shifted by a word.
00003A98  48E7 FF7E               4139  outHex      MOVEM.L D0-D7/A1-A6, -(SP)
00003A9C  4243                    4140              CLR     D3
00003A9E  4244                    4141              CLR     D4
00003AA0  1800                    4142              MOVE.B  D0, D4
00003AA2  2601                    4143              MOVE.L  D1, D3
00003AA4  B03C 0004               4144              CMP.B   #4, D0
00003AA8  6700 0006               4145              BEQ     moveOver
00003AAC  6000 0006               4146              BRA     dispLOOP
00003AB0                          4147              
00003AB0  E19B                    4148  moveOver    ROL.L   #8,D3
00003AB2  E19B                    4149              ROL.L   #8,D3
00003AB4                          4150              
00003AB4  B83C 0000               4151  dispLOOP    CMP.B   #0, D4
00003AB8  6700 0042               4152              BEQ     endDispSub
00003ABC  E99B                    4153              ROL.L   #4, D3
00003ABE  4245                    4154              CLR     D5
00003AC0  1A03                    4155              MOVE.B  D3, D5 
00003AC2  CABC 0000000F           4156              AND.L   #$0F, D5
00003AC8  BA3C 000A               4157              CMP.B   #10, D5
00003ACC  6D00 0006               4158              BLT     DLnine
00003AD0  6000 0016               4159              BRA     DLetters
00003AD4                          4160              
00003AD4  0645 0030               4161  DLnine      ADD     #$30, D5
00003AD8  4241                    4162              CLR     D1
00003ADA  1205                    4163              MOVE.B  D5, D1
00003ADC  4240                    4164              CLR     D0
00003ADE  103C 0006               4165              MOVE.B  #6, D0
00003AE2  4E4F                    4166              TRAP    #15
00003AE4  5344                    4167              SUB     #1, D4
00003AE6  60CC                    4168              BRA     dispLOOP  
00003AE8                          4169   
00003AE8  0645 0037               4170  DLetters    ADD     #$37, D5
00003AEC  4241                    4171              CLR     D1
00003AEE  1205                    4172              MOVE.B  D5, D1
00003AF0  4240                    4173              CLR     D0
00003AF2  103C 0006               4174              MOVE.B  #6, D0
00003AF6  4E4F                    4175              TRAP    #15
00003AF8  5344                    4176              SUB     #1, D4
00003AFA  60B8                    4177              BRA     dispLOOP        
00003AFC                          4178  
00003AFC  4CDF 7EFF               4179  endDispSub  MOVEM.L  (SP)+, D0-D7/A1-A6
00003B00  4E75                    4180              RTS
00003B02                          4181  
00003B02                          4182  *the following subroutine gets the string address from the user
00003B02                          4183  *and converts it to Hex for a starting/ending address. it is done 
00003B02                          4184  *by checking each byte at address A1, and converting it from ascii to 
00003B02                          4185  *hex number. If the user enters an invalid character string, the
00003B02                          4186  *program will have a simhalt.
00003B02  48E7 1F3E               4187  Address MOVEM.L D3-D7/A2-A6, -(SP)
00003B06  4242                    4188  Retry   CLR     D2
00003B08  4243                    4189          CLR     D3
00003B0A  B23C 0004               4190          CMP.B   #4, D1
00003B0E  6700 000E               4191          BEQ     subLOOP
00003B12  B23C 0008               4192          CMP.B   #8, D1
00003B16  6700 0006               4193          BEQ     subLOOP
00003B1A  6000 0126               4194          BRA     ADDinvalid        
00003B1E                          4195          
00003B1E  E85C                    4196  subLOOP ROR     #4, D4
00003B20  1404                    4197          MOVE.B  D4, D2
00003B22  4244                    4198          CLR     D4
00003B24  4245                    4199          CLR     D5
00003B26  B601                    4200          CMP.B   D1, D3
00003B28  6700 012E               4201          BEQ     endLOOP
00003B2C  5443                    4202          ADD.W   #2, D3
00003B2E  E19A                    4203          ROL.L   #8, D2
00003B30                          4204          
00003B30  E95C                    4205  bytLOOP ROL     #4, D4
00003B32                          4206          
00003B32  0C11 0030               4207          CMP.B   #$30, (A1)
00003B36  6700 007E               4208          BEQ     hZero 
00003B3A  0C11 0031               4209          CMP.B   #$31, (A1)
00003B3E  6700 007E               4210          BEQ     hOne
00003B42  0C11 0032               4211          CMP.B   #$32, (A1)
00003B46  6700 007E               4212          BEQ     hTwo
00003B4A  0C11 0033               4213          CMP.B   #$33, (A1)
00003B4E  6700 007E               4214          BEQ     hThree
00003B52  0C11 0034               4215          CMP.B   #$34, (A1)
00003B56  6700 007E               4216          BEQ     hFour
00003B5A  0C11 0035               4217          CMP.B   #$35, (A1)
00003B5E  6700 007E               4218          BEQ     hFive
00003B62  0C11 0036               4219          CMP.B   #$36, (A1)
00003B66  6700 007E               4220          BEQ     hSix
00003B6A  0C11 0037               4221          CMP.B   #$37, (A1)
00003B6E  6700 007E               4222          BEQ     hSeven
00003B72  0C11 0038               4223          CMP.B   #$38, (A1)
00003B76  6700 007E               4224          BEQ     hEight
00003B7A  0C11 0039               4225          CMP.B   #$39, (A1)
00003B7E  6700 007E               4226          BEQ     hNine
00003B82  0C11 0041               4227          CMP.B   #$41, (A1)
00003B86  6700 007E               4228          BEQ     hA
00003B8A  0C11 0042               4229          CMP.B   #$42, (A1)
00003B8E  6700 007E               4230          BEQ     hB
00003B92  0C11 0043               4231          CMP.B   #$43, (A1)
00003B96  6700 007E               4232          BEQ     hC
00003B9A  0C11 0044               4233          CMP.B   #$44, (A1)
00003B9E  6700 007E               4234          BEQ     hD
00003BA2  0C11 0045               4235          CMP.B   #$45, (A1)
00003BA6  6700 007E               4236          BEQ     hE
00003BAA  0C11 0046               4237          CMP.B   #$46, (A1)
00003BAE  6700 007E               4238          BEQ     hF 
00003BB2  6000 F9BC               4239          BRA     invalid      
00003BB6  183C 0000               4240  hZero   MOVE.B  #$00, D4
00003BBA  6000 0076               4241          BRA     nextH
00003BBE  183C 0010               4242  hOne    MOVE.B  #$10, D4
00003BC2  6000 006E               4243          BRA     nextH
00003BC6  183C 0020               4244  hTwo    MOVE.B  #$20, D4
00003BCA  6000 0066               4245          BRA     nextH
00003BCE  183C 0030               4246  hThree  MOVE.B  #$30, D4
00003BD2  6000 005E               4247          BRA     nextH
00003BD6  183C 0040               4248  hFour   MOVE.B  #$40, D4
00003BDA  6000 0056               4249          BRA     nextH
00003BDE  183C 0050               4250  hFive   MOVE.B  #$50, D4
00003BE2  6000 004E               4251          BRA     nextH
00003BE6  183C 0060               4252  hSix    MOVE.B  #$60, D4
00003BEA  6000 0046               4253          BRA     nextH
00003BEE  183C 0070               4254  hSeven  MOVE.B  #$70, D4
00003BF2  6000 003E               4255          BRA     nextH
00003BF6  183C 0080               4256  hEight  MOVE.B  #$80, D4
00003BFA  6000 0036               4257          BRA     nextH
00003BFE  183C 0090               4258  hNine   MOVE.B  #$90, D4
00003C02  6000 002E               4259          BRA     nextH
00003C06  183C 00A0               4260  hA      MOVE.B  #$A0, D4
00003C0A  6000 0026               4261          BRA     nextH
00003C0E  183C 00B0               4262  hB      MOVE.B  #$B0, D4
00003C12  6000 001E               4263          BRA     nextH
00003C16  183C 00C0               4264  hC      MOVE.B  #$C0, D4
00003C1A  6000 0016               4265          BRA     nextH
00003C1E  183C 00D0               4266  hD      MOVE.B  #$D0, D4
00003C22  6000 000E               4267          BRA     nextH
00003C26  183C 00E0               4268  hE      MOVE.B  #$E0, D4
00003C2A  6000 0006               4269          BRA     nextH
00003C2E  183C 00F0               4270  hF      MOVE.B  #$F0, D4
00003C32                          4271  
00003C32  1019                    4272  nextH   MOVE.B  (A1)+, D0
00003C34  5245                    4273          ADD     #1, D5
00003C36  BA3C 0002               4274          CMP.B   #2, D5
00003C3A  6700 FEE2               4275          BEQ     subLOOP
00003C3E  6000 FEF0               4276          BRA     bytLOOP
00003C42                          4277          
00003C42  43F9 00003CA4           4278  ADDinvalid  LEA     errorMessage, A1
00003C48  103C 000E               4279              MOVE.B  #14, D0
00003C4C  4E4F                    4280              TRAP    #15    
00003C4E                          4281      
00003C4E  103C 0002               4282              MOVE.B  #2, D0
00003C52  4E4F                    4283              TRAP    #15
00003C54                          4284  
00003C54  6000 FEB0               4285              BRA     Retry
00003C58                          4286     
00003C58  4CDF 7CF8               4287  endLOOP MOVEM.L  (SP)+, D3-D7/A2-A6
00003C5C  4E75                    4288          RTS
00003C5E                          4289  
00003C5E                          4290  printInvalid
00003C5E                          4291  endPROG    
00003C5E                          4292  
00003C5E  FFFF FFFF               4293      SIMHALT                             ; halt simulator
00003C62                          4294  
00003C62= 45 6E 74 65 72 20 ...   4295  startingMessage DC.B    'Enter Starting Address (in hex): ', 0
00003C84= 45 6E 74 65 72 20 ...   4296  endingMessage   DC.B    'Enter Ending Address (in hex): ', 0
00003CA4= 49 6E 63 6F 72 72 ...   4297  errorMessage    DC.B    'Incorrect Address, try again: ', 0
00003CC3                          4298  
00003CC3= 20 0D 0A 00             4299  newLine     DC.B    ' ', CR, LF, 0
00003CC7= 20 20 00                4300  space       DC.B    '  ', 0
00003CCA                          4301  
00003CCA= 23 00                   4302  hashTag     DC.B    '#', 0
00003CCC= 24 00                   4303  dispHex     DC.B    '$', 0
00003CCE= 2C 00                   4304  comma       DC.B    ',', 0
00003CD0                          4305  
00003CD0= 28 00                   4306  opPer       DC.B    '(', 0
00003CD2= 29 00                   4307  clPer       DC.B    ')', 0
00003CD4= 2D 00                   4308  dec         DC.B    '-', 0
00003CD6= 2B 00                   4309  inc         DC.B    '+', 0
00003CD8                          4310  
00003CD8= 4F 52 49 00             4311  ORImatch    DC.B    'ORI', 0
00003CDC= 43 4D 50 49 00          4312  CMPImatch   DC.B    'CMPI', 0
00003CE1= 42 43 4C 52 00          4313  BCLRmatch   DC.B    'BCLR', 0
00003CE6= 4D 4F 56 45 00          4314  MOVEmatch   DC.B    'MOVE', 0
00003CEB= 4D 4F 56 45 41 00       4315  MOVEAmatch  DC.B    'MOVEA', 0
00003CF1= 4E 45 47 00             4316  NEGmatch    DC.B    'NEG', 0
00003CF5= 52 54 53 00             4317  RTSmatch    DC.B    'RTS', 0
00003CF9= 4A 53 52 00             4318  JSRmatch    DC.B    'JSR', 0
00003CFD= 4D 4F 56 45 4D 00       4319  MOVEMmatch  DC.B    'MOVEM', 0
00003D03= 4C 45 41 00             4320  LEAmatch    DC.B    'LEA', 0
00003D07= 53 55 42 51 00          4321  SUBQmatch   DC.B    'SUBQ', 0
00003D0C= 42 52 41 00             4322  BRAmatch    DC.B    'BRA', 0
00003D10= 42 43 53 00             4323  BCSmatch    DC.B    'BCS', 0
00003D14= 42 56 43 00             4324  BVCmatch    DC.B    'BVC', 0
00003D18= 42 47 45 00             4325  BGEmatch    DC.B    'BGE', 0
00003D1C= 42 4C 54 00             4326  BLTmatch    DC.B    'BLT', 0
00003D20= 44 49 56 53 00          4327  DIVSmatch   DC.B    'DIVS', 0
00003D25= 4F 52 00                4328  ORmatch     DC.B    'OR', 0
00003D28= 53 55 42 00             4329  SUBmatch    DC.B    'SUB', 0
00003D2C= 45 4F 52 00             4330  EORmatch    DC.B    'EOR', 0
00003D30= 43 4D 50 00             4331  CMPmatch    DC.B    'CMP', 0
00003D34= 4D 55 4C 53 00          4332  MULSmatch   DC.B    'MULS', 0
00003D39= 41 44 44 00             4333  ADDmatch    DC.B    'ADD', 0
00003D3D= 41 44 44 41 00          4334  ADDAmatch   DC.B    'ADDA', 0
00003D42= 4C 53 52 00             4335  LSRmatch    DC.B    'LSR', 0
00003D46= 4C 53 4C 00             4336  LSLmatch    DC.B    'LSL', 0
00003D4A= 41 53 52 00             4337  ASRmatch    DC.B    'ASR', 0
00003D4E= 41 53 4C 00             4338  ASLmatch    DC.B    'ASL', 0
00003D52= 52 4F 52 00             4339  RORmatch    DC.B    'ROR', 0
00003D56= 52 4F 4C 00             4340  ROLmatch    DC.B    'ROL', 0
00003D5A                          4341  
00003D5A= 2F 00                   4342  slash       DC.B    '/', 0
00003D5C= 28 53 50 29 00          4343  stack       DC.B    '(SP)', 0
00003D61                          4344   
00003D61= 2E 42 00                4345  dispByte    DC.B    '.B', 0
00003D64= 2E 57 00                4346  dispWord    DC.B    '.W', 0
00003D67= 2E 4C 00                4347  dispLong    DC.B    '.L', 0
00003D6A                          4348  
00003D6A= 41 30 00                4349  dispA0      DC.B    'A0', 0
00003D6D= 41 31 00                4350  dispA1      DC.B    'A1', 0
00003D70= 41 32 00                4351  dispA2      DC.B    'A2', 0
00003D73= 41 33 00                4352  dispA3      DC.B    'A3', 0
00003D76= 41 34 00                4353  dispA4      DC.B    'A4', 0
00003D79= 41 35 00                4354  dispA5      DC.B    'A5', 0
00003D7C= 41 36 00                4355  dispA6      DC.B    'A6', 0
00003D7F= 41 37 00                4356  dispA7      DC.B    'A7', 0
00003D82                          4357  
00003D82= 44 00                   4358  dispD       DC.B    'D',0
00003D84= 44 30 00                4359  dispD0      DC.B    'D0', 0
00003D87= 44 31 00                4360  dispD1      DC.B    'D1', 0
00003D8A= 44 32 00                4361  dispD2      DC.B    'D2', 0
00003D8D= 44 33 00                4362  dispD3      DC.B    'D3', 0
00003D90= 44 34 00                4363  dispD4      DC.B    'D4', 0
00003D93= 44 35 00                4364  dispD5      DC.B    'D5', 0
00003D96= 44 36 00                4365  dispD6      DC.B    'D6', 0
00003D99= 44 37 00                4366  dispD7      DC.B    'D7', 0 
00003D9C                          4367   
00003D9C                          4368             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             34F0
ABSSHORT            34B8
ADDAMATCH           3D3D
ADDINVALID          3C42
ADDMATCH            3D39
ADDR0CONT           38EC
ADDR1CONT           392C
ADDR2CONT           396C
ADDR3CONT           39AC
ADDR4CONT           39EC
ADDR5CONT           3A2C
ADDR6CONT           3A6C
ADDRESS             3B02
ADDRREG0            38CC
ADDRREG1            38FC
ADDRREG2            393C
ADDRREG3            397C
ADDRREG4            39BC
ADDRREG5            39FC
ADDRREG6            3A3C
ADDRREG7            3A7C
ASLMATCH            3D4E
ASRMATCH            3D4A
BCLRMATCH           3CE1
BCSMATCH            3D10
BGEMATCH            3D18
BLTMATCH            3D1C
BRAEIGHT            1142
BRAELEVEN           1160
BRAFIVE             1112
BRAFOUR             10F6
BRAFOURTEEN         11D0
BRAMATCH            3D0C
BRANINE             115C
BRAONE              10EA
BRASIX              1116
BRATHIRTEEN         117E
BRATHREE            10F2
BRATWELVE           117A
BRATWO              10EE
BRAZERO             10BA
BVCMATCH            3D14
BYTLOOP             3B30
CHECKDR             35C2
CLPER               3CD2
CMPIMATCH           3CDC
CMPMATCH            3D30
COMMA               3CCE
CR                  D
DATAREG0            3676
DATAREG1            36A6
DATAREG2            36E6
DATAREG3            3726
DATAREG4            3766
DATAREG5            37A6
DATAREG6            37E6
DATAREG7            3826
DEC                 3CD4
DISPA0              3D6A
DISPA1              3D6D
DISPA2              3D70
DISPA3              3D73
DISPA4              3D76
DISPA5              3D79
DISPA6              3D7C
DISPA7              3D7F
DISPBYTE            3D61
DISPD               3D82
DISPD0              3D84
DISPD1              3D87
DISPD2              3D8A
DISPD3              3D8D
DISPD4              3D90
DISPD5              3D93
DISPD6              3D96
DISPD7              3D99
DISPHEX             3CCC
DISPIMM             3528
DISPLAYA0           3030
DISPLAYA0A          30FC
DISPLAYA0D          33C0
DISPLAYA0P          3228
DISPLAYA1           3040
DISPLAYA1A          3118
DISPLAYA1D          33DC
DISPLAYA1P          3250
DISPLAYA2           3050
DISPLAYA2A          3134
DISPLAYA2D          33F8
DISPLAYA2P          3278
DISPLAYA3           3060
DISPLAYA3A          3150
DISPLAYA3D          3414
DISPLAYA3P          32A0
DISPLAYA4           3070
DISPLAYA4A          316C
DISPLAYA4D          3430
DISPLAYA4P          32C8
DISPLAYA5           3080
DISPLAYA5A          3188
DISPLAYA5D          344C
DISPLAYA5P          32F0
DISPLAYA6           3090
DISPLAYA6A          31A4
DISPLAYA6D          3468
DISPLAYA6P          3318
DISPLAYA7           30A0
DISPLAYA7A          31C0
DISPLAYA7D          3484
DISPLAYA7P          3340
DISPLAYD0           2F70
DISPLAYD1           2F80
DISPLAYD2           2F90
DISPLAYD3           2FA0
DISPLAYD4           2FB0
DISPLAYD5           2FC0
DISPLAYD6           2FD0
DISPLAYD7           2FE0
DISPLAYEIGHT        2EE8
DISPLONG            3D67
DISPLOOP            3AB4
DISPWORD            3D64
DIVSMATCH           3D20
DLETTERS            3AE8
DLNINE              3AD4
EIGHT               8
ELEVEN              B
ENDDISPSUB          3AFC
ENDINGMESSAGE       3C84
ENDLOOP             3C58
ENDMOVE             3A8C
ENDMOVE1            3A92
ENDPROG             3C5E
ENDSUB              3570
ENDSUBROUTINE       2EF2
EORMATCH            3D2C
ERRORMESSAGE        3CA4
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HA                  3C06
HASHTAG             3CCA
HB                  3C0E
HC                  3C16
HD                  3C1E
HE                  3C26
HEIGHT              3BF6
HF                  3C2E
HFIVE               3BDE
HFOUR               3BD6
HNINE               3BFE
HONE                3BBE
HSEVEN              3BEE
HSIX                3BE6
HTHREE              3BCE
HTWO                3BC6
HZERO               3BB6
IMMLONG             355C
INC                 3CD6
INVALID             3570
JSRMATCH            3CF9
LEAMATCH            3D03
LF                  A
LONGSKIP            356C
LOOP                1040
LSLMATCH            3D46
LSRMATCH            3D42
MASK0               0
MASK1               1
MASK2               2
MASK3               4
MASK4               8
MASK5               10
MASK6               20
MASK7               40
MASK8               80
MASKA               5
MASKB               A
MASKC               14
MASKD               28
MASKE               50
MASKF               A0
MEMSB               2682
MEMSHIFTIMM         2ECE
MEMSHIFTS           11EA
MEMSL               2B96
MEMSW               290C
MOVEAMATCH          3CEB
MOVEMATCH           3CE6
MOVEMBRA            3576
MOVEML              35A6
MOVEMMATCH          3CFD
MOVEMW              358A
MOVEOVER            3AB0
MULSMATCH           3D34
NEGMATCH            3CF1
NEWLINE             3CC3
NEXTH               3C32
NINE                9
ONE                 1
OPADDAL             244A
OPADDAW             23DA
OPADDB              228E
OPADDL              2366
OPADDW              22FA
OPASBI              26C0
OPASBR              2722
OPASL               24BA
OPASLBI             2700
OPASLBR             2762
OPASLI              2BD4
OPASLLI             2C14
OPASLLR             2C76
OPASLR              2C36
OPASLWI             298A
OPASLWR             29EC
OPASR               2506
OPASRBI             26DE
OPASRBR             2740
OPASRLI             2BF2
OPASRLR             2C54
OPASRWI             2968
OPASRWR             29CA
OPASWI              294A
OPASWR              29AC
OPBCLR              153A
OPBCS               20DA
OPBGE               2142
OPBLT               2176
OPBRA               20A2
OPBVC               210E
OPCMP               1E0A
OPCMPB              1E3C
OPCMPI              13AC
OPCMPIB             13CE
OPCMPIL             14C4
OPCMPIW             1440
OPCMPL              1EF0
OPCMPW              1E96
OPDIVS              1C5E
OPDYNBCLR           159E
OPEOR               1CBC
OPEORB              1CEA
OPEORL              1DAA
OPEORW              1D4A
OPJSR               198A
OPLEA               1A8C
OPLSBI              2784
OPLSBR              27E6
OPLSL               2552
OPLSLBI             27C4
OPLSLBR             2826
OPLSLI              2C98
OPLSLLI             2CD8
OPLSLLR             2D3A
OPLSLR              2CFA
OPLSLWI             2A4E
OPLSLWR             2AB0
OPLSR               259E
OPLSRBI             27A2
OPLSRBR             2804
OPLSRLI             2CB6
OPLSRLR             2D18
OPLSRWI             2A2C
OPLSRWR             2A8E
OPLSWI              2A0E
OPLSWR              2A70
OPMOVEAL            1724
OPMOVEAW            181A
OPMOVEB             160C
OPMOVEL             1690
OPMOVEM             1A02
OPMOVEMLEA          19E6
OPMOVEW             178C
OPMULS              222A
OPNEG               1882
OPNEGB              18B0
OPNEGL              18F0
OPNEGW              1930
OPOR                1B0C
OPORB               1B4A
OPORI               1244
OPORIB              1272
OPORIL              133E
OPORIW              12D8
OPORL               1C00
OPORW               1BA4
OPPER               3CD0
OPROBI              2848
OPROBR              28AA
OPROL               25EA
OPROLBI             2888
OPROLBR             28EA
OPROLI              2D5C
OPROLLI             2D9C
OPROLLR             2DFE
OPROLR              2DBE
OPROLWI             2B12
OPROLWR             2B74
OPROR               2636
OPRORBI             2866
OPRORBR             28C8
OPRORLI             2D7A
OPRORLR             2DDC
OPRORWI             2AF0
OPRORWR             2B52
OPROWI              2AD2
OPROWR              2B34
OPRTS               19CA
OPRTSJSR            1970
OPSUB               1F4A
OPSUBB              1F94
OPSUBL              2048
OPSUBQ              21AA
OPSUBQB             21D6
OPSUBQL             220A
OPSUBQW             21F0
OPSUBW              1FEE
ORIMATCH            3CD8
ORMATCH             3D25
OUTHEX              3A98
PADDRDEC            3368
PADDRDIR            30B0
PADDRPOST           31DC
PADDRREG            2FF0
PDATAREG            2F30
PHEX                34A0
PRINTEA             2EF8
PRINTINVALID        3C5E
PRINTMEM            3836
PRINTMEMNOW         383A
PRINTREGMEM         35EA
PRINTSTACK          35D6
PRNTIMM             2E20
PRNTREG             2E7C
REG0CONT            3696
REG1CONT            36D6
REG2CONT            3716
REG3CONT            3756
REG4CONT            3796
REG5CONT            37D6
REG6CONT            3816
REGSHIFTS           1228
RETRY               3B06
ROLMATCH            3D56
RORMATCH            3D52
RTSMATCH            3CF5
SECNIB              F
SEVEN               7
SIX                 6
SKIPPRINTEA         1A7C
SLASH               3D5A
SPACE               3CC7
STACK               3D5C
START               1000
STARTINGMESSAGE     3C62
SUBLOOP             3B1E
SUBMATCH            3D28
SUBQMATCH           3D07
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
