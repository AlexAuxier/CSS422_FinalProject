00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 12/9/2014 10:13:21 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9       
00000000  =00000000                 10  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 11  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 12  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 13  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 14  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 15  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 16  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 17  seven       EQU     $07
00000000  =00000008                 18  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 19  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 20  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 21  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 22  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 23  fourteen    EQU     $0E         ; defined hex value 14
00000000                            24  
00000000  =00000000                 25  mask0       EQU     %00000000
00000000  =00000001                 26  mask1       EQU     %00000001
00000000  =00000002                 27  mask2       EQU     %00000010
00000000  =00000004                 28  mask3       EQU     %00000100
00000000  =00000008                 29  mask4       EQU     %00001000
00000000  =00000010                 30  mask5       EQU     %00010000
00000000  =00000020                 31  mask6       EQU     %00100000
00000000  =00000040                 32  mask7       EQU     %01000000
00000000  =00000080                 33  mask8       EQU     %10000000
00000000                            34  
00000000  =00000005                 35  maskA       EQU     %00000101
00000000  =0000000A                 36  maskB       EQU     %00001010
00000000  =00000014                 37  maskC       EQU     %00010100
00000000  =00000028                 38  maskD       EQU     %00101000
00000000  =00000050                 39  maskE       EQU     %01010000
00000000  =000000A0                 40  maskF       EQU     %10100000
00000000                            41  
00000000  =000000F0                 42  firstNib    EQU     $F0
00000000  =0000000F                 43  secNib      EQU     $0F
00000000                            44               
00001000                            45              ORG    $1000
00001000                            46  START:                                  ; first instruction of program
00001000                            47        
00001000  43F9 00003C76             48          LEA     startingMessage, A1
00001006  103C 000E                 49          MOVE.B  #14, D0
0000100A  4E4F                      50          TRAP    #15    
0000100C                            51      
0000100C  103C 0002                 52          MOVE.B  #2, D0
00001010  4E4F                      53          TRAP    #15
00001012                            54      
00001012  4EB9 00003B16             55          JSR     Address
00001018  2042                      56          MOVEA.L D2, A0
0000101A                            57          
0000101A  43F9 00003C98             58          LEA     endingMessage, A1
00001020  103C 000E                 59          MOVE.B  #14, D0
00001024  4E4F                      60          TRAP    #15    
00001026                            61      
00001026  103C 0002                 62          MOVE.B  #2, D0
0000102A  4E4F                      63          TRAP    #15
0000102C                            64      
0000102C  4EB9 00003B16             65          JSR     Address
00001032  2442                      66          MOVEA.L D2, A2
00001034                            67          
00001034  43F9 00003CD7             68          LEA     newline, A1
0000103A  103C 000E                 69          MOVE.B  #14, D0
0000103E  4E4F                      70          TRAP    #15 
00001040                            71            
00001040  4241                      72  LOOP    CLR         D1                  ; clear out D1
00001042  4242                      73          CLR         D2                  ; clear out D2
00001044  B1CA                      74          CMPA.L      A2, A0              ; compare starting and ending addresses
00001046  6E00 2C2A                 75          BGT         endProg             ; if A0 > A1, we've finished, end program
0000104A  1218                      76          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
0000104C  1401                      77          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000104E  E882                      78          ASR.L       #four, D2           ; get first nibble in D2
00001050                            79          
00001050  B43C 0000                 80          CMP.B       #zero, D2           ; compare with 0
00001054  6700 0064                 81          BEQ         braZero             ; branch out to zero method
00001058  B43C 0001                 82          CMP.B       #one, D2            ; compare with 1
0000105C  6700 008C                 83          BEQ         braOne              ; branch out to one method
00001060  B43C 0002                 84          CMP.B       #two, D2            ; compare with 2    
00001064  6700 0088                 85          BEQ         braTwo              ; branch out to two method
00001068  B43C 0003                 86          CMP.B       #three, D2          ; compare with 3
0000106C  6700 0084                 87          BEQ         braThree            ; branch out to three method
00001070  B43C 0004                 88          CMP.B       #four, D2           ; compare with 4
00001074  6700 0080                 89          BEQ         braFour             ; branch out to four method
00001078  B43C 0005                 90          CMP.B       #five, D2           ; compare with 5
0000107C  6700 0094                 91          BEQ         braFive             ; branch out to five method
00001080  B43C 0006                 92          CMP.B       #six, D2            ; compare with 6
00001084  6700 0090                 93          BEQ         braSix              ; branch out to six method
00001088  B43C 0008                 94          CMP.B       #eight, D2          ; compare with 8
0000108C  6700 00B4                 95          BEQ         braEight            ; branch out to eight method
00001090  B43C 0009                 96          CMP.B       #nine, D2           ; compare with 9
00001094  6700 00C6                 97          BEQ         braNine             ; branch out to nine method
00001098  B43C 000B                 98          CMP.B       #eleven, D2         ; compare with 11
0000109C  6700 00C2                 99          BEQ         braEleven           ; branch out to eleven method
000010A0  B43C 000C                100          CMP.B       #twelve, D2         ; compare with 12
000010A4  6700 00D4                101          BEQ         braTwelve           ; branch out to twelve method
000010A8  B43C 000D                102          CMP.B       #thirteen, D2       ; compare with 13
000010AC  6700 00D0                103          BEQ         braThirteen         ; branch out to thirteen method
000010B0  B43C 000E                104          CMP.B       #fourteen, D2       ; compare with 14
000010B4  6700 011A                105          BEQ         braFourteen         ; branch out to fourteen method
000010B8  6086                     106          BRA         loop
000010BA                           107  
000010BA  4242                     108  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
000010BC  1401                     109          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010BE  C43C 000F                110          AND.B       #secNib, D2             ; set first nibble to 0
000010C2                           111   
000010C2  B43C 0000                112          CMP.B       #zero, D2           ; compare second nibble to 0
000010C6  6700 017C                113          BEQ         opORI               ; branch to ORI method
000010CA  B43C 000C                114          CMP.B       #twelve, D2         ; compare second nibble to 12
000010CE  6700 02DC                115          BEQ         opCMPI              ; branch to CMPI method
000010D2  B43C 0008                116          CMP.B       #eight,D2           ; Test for static BCLR
000010D6  6700 0462                117          BEQ         opBCLR
000010DA  C47C 0001                118          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010DE  B43C 0001                119          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010E2  6700 04BA                120          BEQ         opDynBCLR
000010E6  6000 2B8A                121          BRA         printInvalid
000010EA                           122          
000010EA                           123          
000010EA  6000 0520                124  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010EE                           125  
000010EE  6000 05A0                126  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010F2                           127  
000010F2                           128  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010F2                           129  
000010F2  6000 0698                130          BRA         opMOVEW
000010F6                           131  
000010F6  4242                     132  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010F8  1401                     133          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010FA  C43C 000F                134          AND.B       #secNib, D2             ; set first nibble to 0
000010FE                           135   
000010FE  B43C 0004                136          CMP.B       #four, D2           ; compare second nibble to 4
00001102  6700 077E                137          BEQ         opNEG               ; branch to NEG method
00001106  B43C 000E                138          CMP.B       #fourteen, D2       ; compare second nibble to E
0000110A  6700 0864                139          BEQ         opRTSJSR            ; branch to JSR or RTS method
0000110E  6000 08D6                140          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
00001112                           141  
00001112  6000 1096                142  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
00001116                           143  
00001116  4242                     144  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
00001118  1401                     145          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000111A  C43C 000F                146          AND.B       #$0F, D2             ; set first nibble to 0
0000111E                           147   
0000111E  B43C 0000                148          CMP.B       #zero, D2           ; compare second nibble to 0
00001122  6700 0F7E                149          BEQ         opBRA               ; branch to BRA method
00001126  B43C 0005                150          CMP.B       #five, D2           ; compare second nibble to 5
0000112A  6700 0FAE                151          BEQ         opBCS               ; branch to BCS method
0000112E  B43C 0008                152          CMP.B       #eight, D2          ; compare second nibble to 8
00001132  6700 0FDA                153          BEQ         opBVC               ; branch to BCS method
00001136  B43C 000C                154          CMP.B       #twelve, D2         ; compare second nibble to 12
0000113A  6700 1006                155          BEQ         opBGE               ; branch to BGE method
0000113E  6000 1036                156          BRA         opBLT               ; otherwise, branch to BLT method
00001142                           157  
00001142                           158  braEight                                ; there are two opCodes available DIVS, or OR
00001142  4242                     159              CLR     D2
00001144  E141                     160              ASL     #8,D1
00001146  1218                     161              MOVE.B  (A0)+,D1
00001148  3401                     162              MOVE.W  D1,D2
0000114A  EC42                     163              ASR     #six,D2
0000114C  C47C 0007                164              AND     #$07,D2
00001150  B43C 0007                165              CMP.B   #seven,D2
00001154  6700 0B08                166              BEQ     opDIVS              ; If bits 8 - 6 are equal to 7, we have DIVS
00001158  6000 09B2                167              BRA     opOR                ; else opcode is OR
0000115C                           168  
0000115C  6000 0DEC                169  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
00001160                           170  
00001160                           171  braEleven                               ; there are two opCodes available EOR, or CMP
00001160  4242                     172              CLR     D2
00001162  E141                     173              ASL     #8,D1
00001164  1218                     174              MOVE.B  (A0)+,D1
00001166  3401                     175              MOVE.W  D1,D2
00001168  EC42                     176              ASR     #six,D2
0000116A  C47C 0007                177              AND     #$07,D2
0000116E  B43C 0003                178              CMP.B   #three,D2
00001172  6D00 0C96                179              BLT     opCMP               ; If opmode bits are less than 3, we have CMP
00001176  6000 0B44                180              BRA     opEOR               ; Else its EOR
0000117A                           181  
0000117A  6000 10AE                182  braTwelve   BRA         opMULS              ; we know that there is only one opcode that is MULS    
0000117E                           183    
0000117E  E141                     184  braThirteen ASL         #eight, D1          ; we need the whole word to compare between add and adda, so move over the current byte 
00001180  1218                     185              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
00001182                           186              
00001182  4242                     187              CLR         D2                  ; clear D2
00001184  3401                     188              MOVE.W      D1, D2              ; copy opcode to D2
00001186  EC42                     189              ASR         #six, D2            ; shift the bits right to get size and type
00001188  C47C 0007                190              AND         #seven,D2           ; clear out all but first 3 bits
0000118C                           191              
0000118C  B43C 0000                192              CMP.B       #zero,D2            ; compare 0 to D2
00001190  6700 10FC                193              BEQ         opADDB              ; we know its ADDB
00001194  B43C 0001                194              CMP.B       #one, D2            ; compare 1 to D2
00001198  6700 1160                195              BEQ         opADDW              ; we know its ADDW
0000119C  B43C 0002                196              CMP.B       #two, D2            ; compare 2 to D2
000011A0  6700 11C4                197              BEQ         opADDL              ; we know its ADDL
000011A4  B43C 0003                198              CMP.B       #three, D2          ; compare 3 to D2
000011A8  6700 1230                199              BEQ         opADDAW             ; we know its ADDAW
000011AC  B43C 0004                200              CMP.B       #four, D2           ; compare 4 to D2
000011B0  6700 10DC                201              BEQ         opADDB              ; we know its ADDB
000011B4  B43C 0005                202              CMP.B       #five, D2           ; compare 5 to D2
000011B8  6700 1140                203              BEQ         opADDW              ; we know its ADDW
000011BC  B43C 0006                204              CMP.B       #six, D2            ; compare 6 to D2
000011C0  6700 11A4                205              BEQ         opADDL              ; we know its ADDL
000011C4  B43C 0007                206              CMP.B       #seven, D2          ; compare 7 to D2
000011C8  6700 1280                207              BEQ         opADDAL             ; we know its ADDAL
000011CC  6000 2AA4                208              BRA         printInvalid        ; invalid opcode
000011D0                           209               
000011D0  E141                     210  braFourteen ASL.W       #eight,D1           ; we need the whole word to compare between add and adda, so move over the current byte
000011D2  1218                     211              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
000011D4                           212              
000011D4  4242                     213              CLR         D2                  ; clear D2
000011D6  3401                     214              MOVE.W      D1, D2              ; copy opcode to D2
000011D8  EC42                     215              ASR         #six, D2            ; shift the bits right to get size
000011DA  C47C 0003                216              AND         #03,D2
000011DE                           217          
000011DE  B43C 0003                218              CMP.B       #three, D2          ; if the size is three, we are shifting memory
000011E2  6700 0006                219              BEQ         memShifts           ; go to memory shift
000011E6  6000 0040                220              BRA         regShifts           ; else go to register shift
000011EA                           221  
000011EA  4242                     222  memShifts   CLR         D2             
000011EC  3401                     223              MOVE.W      D1, D2              ; clear out D2 and copy D1 back in
000011EE  E082                     224              ASR.L       #eight,D2           ; move to get first byte back
000011F0  C47C 000F                225              AND         #secNib, D2         ; set first nibble to 0
000011F4                           226   
000011F4  B43C 0000                227              CMP.B       #zero, D2           ; compare second nibble to 0
000011F8  6700 130C                228              BEQ         opASR               ; branch to ASR method
000011FC  B43C 0001                229              CMP.B       #one, D2            ; compare second nibble to 1
00001200  6700 12B8                230              BEQ         opASL               ; branch to ASL method
00001204  B43C 0002                231              CMP.B       #two, D2            ; compare second nibble to 2
00001208  6700 1394                232              BEQ         opLSR               ; branch to LSR method
0000120C  B43C 0003                233              CMP.B       #three, D2          ; compare second nibble to 3
00001210  6700 1340                234              BEQ         opLSL               ; branch to LSL method
00001214  B43C 0006                235              CMP.B       #six, D2            ; compare second nibble to 6
00001218  6700 141C                236              BEQ         opROR               ; branch to ROR method
0000121C  B43C 0007                237              CMP.B       #seven, D2          ; compare second nibble to 7
00001220  6700 13C8                238              BEQ         opROL               ; branch to ROL method
00001224  6000 2A4C                239              BRA         printInvalid        ; otherwise, invalid
00001228                           240              
00001228  B43C 0000                241  regShifts   CMP.B       #zero, D2           ; if size is 0, we are shifting a byte
0000122C  6700 1454                242              BEQ         memSB               ; branch to register shift byte
00001230  B43C 0001                243              CMP.B       #one, D2            ; if size is 1, we are shifting a word
00001234  6700 16D6                244              BEQ         memSW               ; branch to register shift word
00001238  B43C 0002                245              CMP.B       #two, D2            ; if size is 1, we are shifting a long
0000123C  6700 1958                246              BEQ         memSL               ; branch to register shift long
00001240  6000 2A30                247              BRA         printInvalid        ; otherwise, invalid
00001244                           248  
00001244  43F9 00003CEC            249  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
0000124A  103C 000E                250          MOVE.B      #14, D0             ; command for trap call to display message
0000124E  4E4F                     251          TRAP        #15                 ; trap call
00001250                           252          
00001250  1218                     253          MOVE.B      (A0)+, D1
00001252  1401                     254          MOVE.B      D1,D2               ; copy data over
00001254  EC42                     255          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001256  B43C 0000                256          CMP.B       #zero,D2
0000125A  6700 0016                257          BEQ         opORIB
0000125E  B43C 0001                258          CMP.B       #one,D2
00001262  6700 0074                259          BEQ         opORIW
00001266  B43C 0002                260          CMP.B       #two,D2
0000126A  6700 00D2                261          BEQ         opORIL
0000126E                           262          
0000126E  6000 2A02                263          BRA         printInvalid
00001272                           264          
00001272  43F9 00003D75            265  opORIB  LEA         dispByte, A1        ; Display byte
00001278  103C 000E                266          MOVE.B      #14, D0             ; command for trap call to display message
0000127C  4E4F                     267          TRAP        #15                 ; trap call
0000127E                           268          
0000127E  43F9 00003CDB            269          LEA         space, A1           ; Display space
00001284  103C 000E                270          MOVE.B      #14, D0             ; command for trap call to display message
00001288  4E4F                     271          TRAP        #15                 ; trap call
0000128A                           272          
0000128A  4244                     273          CLR         D4
0000128C  1801                     274          MOVE.B      D1,D4
0000128E  E644                     275          ASR         #three,D4
00001290  C87C 0007                276          AND         #seven,D4
00001294  4245                     277          CLR         D5        
00001296  1A01                     278          MOVE.B      D1,D5
00001298  CA7C 0007                279          AND         #seven,D5
0000129C                           280          
0000129C  4243                     281          CLR         D3
0000129E  4242                     282          CLR         D2
000012A0  163C 0004                283          MOVE.B      #four,D3
000012A4  143C 0007                284          MOVE.B      #seven,D2
000012A8                           285  
000012A8  4EB9 00002EF8            286          JSR         printEA
000012AE                           287          
000012AE  43F9 00003CE2            288          LEA         comma, A1           ; Display space
000012B4  103C 000E                289          MOVE.B      #14, D0             ; command for trap call to display message
000012B8  4E4F                     290          TRAP        #15                 ; trap call
000012BA                           291          
000012BA  4242                     292          CLR         D2
000012BC  4243                     293          CLR         D3
000012BE  1404                     294          MOVE.B      D4,D2
000012C0  1605                     295          MOVE.B      D5,D3
000012C2                           296          
000012C2  4EB9 00002EF8            297          JSR         printEA
000012C8                           298          
000012C8  43F9 00003CD7            299          LEA         newLine, A1           ; Display space
000012CE  103C 000E                300          MOVE.B      #14, D0             ; command for trap call to display message
000012D2  4E4F                     301          TRAP        #15                 ; trap call
000012D4                           302          
000012D4  6000 FD6A                303          BRA         LOOP
000012D8                           304          
000012D8                           305          
000012D8  43F9 00003D78            306  opORIW  LEA         dispWord, A1        ; Display byte
000012DE  103C 000E                307          MOVE.B      #14, D0             ; command for trap call to display message
000012E2  4E4F                     308          TRAP        #15                 ; trap call
000012E4                           309          
000012E4  43F9 00003CDB            310          LEA         space, A1           ; Display space
000012EA  103C 000E                311          MOVE.B      #14, D0             ; command for trap call to display message
000012EE  4E4F                     312          TRAP        #15                 ; trap call
000012F0                           313          
000012F0  4244                     314          CLR         D4
000012F2  1801                     315          MOVE.B      D1,D4
000012F4  E644                     316          ASR         #three,D4
000012F6  C87C 0007                317          AND         #seven,D4
000012FA  4245                     318          CLR         D5        
000012FC  1A01                     319          MOVE.B      D1,D5
000012FE  CA7C 0007                320          AND         #seven,D5
00001302                           321          
00001302  4243                     322          CLR         D3
00001304  4242                     323          CLR         D2
00001306  163C 0004                324          MOVE.B      #four,D3
0000130A  143C 0007                325          MOVE.B      #seven,D2
0000130E                           326          
0000130E  4EB9 00002EF8            327          JSR         printEA
00001314                           328          
00001314  43F9 00003CE2            329          LEA         comma, A1           ; Display space
0000131A  103C 000E                330          MOVE.B      #14, D0             ; command for trap call to display message
0000131E  4E4F                     331          TRAP        #15                 ; trap call
00001320                           332          
00001320  4242                     333          CLR         D2
00001322  4243                     334          CLR         D3
00001324  1404                     335          MOVE.B      D4,D2
00001326  1605                     336          MOVE.B      D5,D3
00001328                           337                  
00001328  4EB9 00002EF8            338          JSR         printEA
0000132E                           339          
0000132E  43F9 00003CD7            340          LEA         newLine, A1           ; Display space
00001334  103C 000E                341          MOVE.B      #14, D0             ; command for trap call to display message
00001338  4E4F                     342          TRAP        #15                 ; trap call
0000133A                           343          
0000133A  6000 FD04                344          BRA         LOOP
0000133E                           345       
0000133E  43F9 00003D7B            346  opORIL  LEA         dispLong, A1        ; Display byte
00001344  103C 000E                347          MOVE.B      #14, D0             ; command for trap call to display message
00001348  4E4F                     348          TRAP        #15                 ; trap call
0000134A                           349          
0000134A  43F9 00003CDB            350          LEA         space, A1           ; Display space
00001350  103C 000E                351          MOVE.B      #14, D0             ; command for trap call to display message
00001354  4E4F                     352          TRAP        #15                 ; trap call
00001356                           353          
00001356  4244                     354          CLR         D4
00001358  1801                     355          MOVE.B      D1,D4
0000135A  E644                     356          ASR         #three,D4
0000135C  C87C 0007                357          AND         #seven,D4
00001360  4245                     358          CLR         D5        
00001362  1A01                     359          MOVE.B      D1,D5
00001364  CA7C 0007                360          AND         #seven,D5
00001368  1C3C 0001                361          MOVE.B      #one,D6
0000136C                           362          
0000136C  4243                     363          CLR         D3
0000136E  4242                     364          CLR         D2
00001370  163C 0004                365          MOVE.B      #four,D3
00001374  143C 0007                366          MOVE.B      #seven,D2      
00001378                           367          
00001378  4EB9 00002EF8            368          JSR         printEA        
0000137E                           369          
0000137E  4243                     370          CLR         D3
00001380  4242                     371          CLR         D2
00001382  163C 0004                372          MOVE.B      #four,D3
00001386  143C 0007                373          MOVE.B      #seven,D2
0000138A                           374          
0000138A  43F9 00003CE2            375          LEA         comma, A1           ; Display space
00001390  103C 000E                376          MOVE.B      #14, D0             ; command for trap call to display message
00001394  4E4F                     377          TRAP        #15                 ; trap call
00001396                           378          
00001396  4EB9 00002EF8            379          JSR         printEA
0000139C                           380          
0000139C  43F9 00003CD7            381          LEA         newLine, A1           ; Display space
000013A2  103C 000E                382          MOVE.B      #14, D0             ; command for trap call to display message
000013A6  4E4F                     383          TRAP        #15                 ; trap call
000013A8                           384          
000013A8  6000 FC96                385          BRA         LOOP
000013AC                           386           
000013AC                           387  opCMPI  
000013AC                           388  
000013AC                           389                  
000013AC  1218                     390          MOVE.B      (A0)+, D1
000013AE  1401                     391          MOVE.B      D1,D2               ; copy data over
000013B0  EC42                     392          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000013B2  B43C 0000                393          CMP.B       #zero,D2
000013B6  6700 0016                394          BEQ         opCMPIB
000013BA  B43C 0001                395          CMP.B       #one,D2
000013BE  6700 0080                396          BEQ         opCMPIW
000013C2  B43C 0002                397          CMP.B       #two,D2
000013C6  6700 00FC                398          BEQ         opCMPIL
000013CA  6000 21A4                399          BRA         invalid
000013CE                           400  
000013CE                           401  opCMPIB 
000013CE                           402  
000013CE  43F9 00003CF0            403          LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000013D4  103C 000E                404          MOVE.B      #14, D0             ; command for trap call to display message
000013D8  4E4F                     405          TRAP        #15                 ; trap call
000013DA                           406          
000013DA  43F9 00003D75            407          LEA         dispByte, A1        ; Display byte
000013E0  103C 000E                408          MOVE.B      #14, D0             ; command for trap call to display message
000013E4  4E4F                     409          TRAP        #15                 ; trap call
000013E6                           410          
000013E6  43F9 00003CDB            411          LEA         space, A1           ; Display space
000013EC  103C 000E                412          MOVE.B      #14, D0             ; command for trap call to display message
000013F0  4E4F                     413          TRAP        #15                 ; trap call
000013F2                           414          
000013F2  4244                     415          CLR         D4
000013F4  1801                     416          MOVE.B      D1,D4
000013F6  E644                     417          ASR         #three,D4
000013F8  C87C 0007                418          AND         #seven,D4
000013FC  4245                     419          CLR         D5        
000013FE  1A01                     420          MOVE.B      D1,D5
00001400  CA7C 0007                421          AND         #seven,D5
00001404                           422          
00001404  4243                     423          CLR         D3
00001406  4242                     424          CLR         D2
00001408  163C 0004                425          MOVE.B      #four,D3
0000140C  143C 0007                426          MOVE.B      #seven,D2      
00001410                           427          
00001410  4EB9 00002EF8            428          JSR         printEA  
00001416                           429              
00001416  43F9 00003CE2            430          LEA         comma, A1           ; Display space
0000141C  103C 000E                431          MOVE.B      #14, D0             ; command for trap call to display message
00001420  4E4F                     432          TRAP        #15                 ; trap call
00001422                           433          
00001422  4242                     434          CLR         D2
00001424  4243                     435          CLR         D3
00001426  1404                     436          MOVE.B      D4,D2
00001428  1605                     437          MOVE.B      D5,D3        
0000142A                           438          
0000142A  4EB9 00002EF8            439          JSR         printEA
00001430                           440          
00001430  43F9 00003CD7            441          LEA         newLine, A1           ; Display space
00001436  103C 000E                442          MOVE.B      #14, D0             ; command for trap call to display message
0000143A  4E4F                     443          TRAP        #15                 ; trap call
0000143C                           444  
0000143C  6000 FC02                445          BRA         LOOP
00001440                           446  
00001440                           447  opCMPIW 
00001440  43F9 00003CF0            448          LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001446  103C 000E                449          MOVE.B      #14, D0             ; command for trap call to display message
0000144A  4E4F                     450          TRAP        #15                 ; trap call
0000144C                           451          
0000144C  43F9 00003D78            452          LEA         dispWord, A1        ; Display byte
00001452  103C 000E                453          MOVE.B      #14, D0             ; command for trap call to display message
00001456  4E4F                     454          TRAP        #15                 ; trap call
00001458                           455          
00001458  43F9 00003CDB            456          LEA         space, A1           ; Display space
0000145E  103C 000E                457          MOVE.B      #14, D0             ; command for trap call to display message
00001462  4E4F                     458          TRAP        #15                 ; trap call
00001464                           459          
00001464  4244                     460          CLR         D4
00001466  1801                     461          MOVE.B      D1,D4
00001468  E644                     462          ASR         #three,D4
0000146A  C87C 0007                463          AND         #seven,D4
0000146E  4245                     464          CLR         D5        
00001470  1A01                     465          MOVE.B      D1,D5
00001472  CA7C 0007                466          AND         #seven,D5
00001476                           467          
00001476  4243                     468          CLR         D3
00001478  4242                     469          CLR         D2
0000147A  163C 0004                470          MOVE.B      #four,D3
0000147E  143C 0007                471          MOVE.B      #seven,D2      
00001482                           472          
00001482  4EB9 00002EF8            473          JSR         printEA  
00001488                           474          
00001488  43F9 00003CDE            475          LEA         hashTag, A1           ; Display space
0000148E  103C 000E                476          MOVE.B      #14, D0             ; command for trap call to display message
00001492  4E4F                     477          TRAP        #15                 ; trap call
00001494                           478          
00001494  103C 0003                479          MOVE.B      #3, D0
00001498  4E4F                     480          TRAP        #15
0000149A                           481          
0000149A  43F9 00003CE2            482          LEA         comma, A1           ; Display space
000014A0  103C 000E                483          MOVE.B      #14, D0             ; command for trap call to display message
000014A4  4E4F                     484          TRAP        #15                 ; trap call
000014A6                           485  
000014A6  4242                     486          CLR         D2
000014A8  4243                     487          CLR         D3
000014AA  1404                     488          MOVE.B      D4,D2
000014AC  1605                     489          MOVE.B      D5,D3       
000014AE                           490          
000014AE  4EB9 00002EF8            491          JSR         printEA
000014B4                           492          
000014B4  43F9 00003CD7            493          LEA         newLine, A1           ; Display space
000014BA  103C 000E                494          MOVE.B      #14, D0             ; command for trap call to display message
000014BE  4E4F                     495          TRAP        #15                 ; trap call
000014C0  6000 FB7E                496          BRA         LOOP
000014C4                           497  
000014C4                           498  opCMPIL 
000014C4  43F9 00003CF0            499          LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000014CA  103C 000E                500          MOVE.B      #14, D0             ; command for trap call to display message
000014CE  4E4F                     501          TRAP        #15                 ; trap call
000014D0                           502          
000014D0  43F9 00003D7B            503          LEA         dispLong, A1        ; Display byte
000014D6  103C 000E                504          MOVE.B      #14, D0             ; command for trap call to display message
000014DA  4E4F                     505          TRAP        #15                 ; trap call
000014DC                           506          
000014DC  43F9 00003CDB            507          LEA         space, A1           ; Display space
000014E2  103C 000E                508          MOVE.B      #14, D0             ; command for trap call to display message
000014E6  4E4F                     509          TRAP        #15                 ; trap call
000014E8                           510          
000014E8  4244                     511          CLR         D4
000014EA  1801                     512          MOVE.B      D1,D4
000014EC  E644                     513          ASR         #three,D4
000014EE  C87C 0007                514          AND         #seven,D4
000014F2  4245                     515          CLR         D5        
000014F4  1A01                     516          MOVE.B      D1,D5
000014F6  CA7C 0007                517          AND         #seven,D5
000014FA                           518          
000014FA  4243                     519          CLR         D3
000014FC  4242                     520          CLR         D2
000014FE  163C 0004                521          MOVE.B      #four,D3
00001502  143C 0007                522          MOVE.B      #seven,D2      
00001506  1C3C 0001                523          MOVE.B      #one,D6
0000150A                           524          
0000150A  4EB9 00002EF8            525          JSR         printEA  
00001510                           526          
00001510  43F9 00003CE2            527          LEA         comma, A1           ; Display space
00001516  103C 000E                528          MOVE.B      #14, D0             ; command for trap call to display message
0000151A  4E4F                     529          TRAP        #15                 ; trap call
0000151C                           530          
0000151C  4242                     531          CLR         D2
0000151E  4243                     532          CLR         D3
00001520  1404                     533          MOVE.B      D4,D2
00001522  1605                     534          MOVE.B      D5,D3              
00001524                           535          
00001524  4EB9 00002EF8            536          JSR         printEA
0000152A                           537          
0000152A  43F9 00003CD7            538          LEA         newLine, A1           ; Display space
00001530  103C 000E                539          MOVE.B      #14, D0             ; command for trap call to display message
00001534  4E4F                     540          TRAP        #15                 ; trap call
00001536                           541          
00001536  6000 FB08                542          BRA         LOOP
0000153A                           543  
0000153A  43F9 00003CF5            544  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001540  103C 000E                545                  MOVE.B      #14, D0             ; command for trap call to display message
00001544  4E4F                     546                  TRAP        #15                 ; trap call
00001546                           547  
00001546  43F9 00003CDB            548                  LEA         space, A1           ; Display space
0000154C  103C 000E                549                  MOVE.B      #14, D0             ; command for trap call to display message
00001550  4E4F                     550                  TRAP        #15                 ; trap call
00001552                           551                  
00001552  4242                     552                  CLR         D2
00001554  1218                     553                  MOVE.B      (A0)+, D1
00001556  1401                     554                  MOVE.B      D1,D2               ; copy data over
00001558  E642                     555                  ASR         #three,D2           ; Shift to the right to remove register
0000155A  C47C 0007                556                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
0000155E                           557                  
0000155E  4243                     558                  CLR         D3                  ; Clear D3 so we can move D1 in
00001560  1601                     559                  MOVE.B      D1,D3               ; Move othr byte in
00001562  C67C 0007                560                  AND         #seven,D3           ; Set everything besides register to 0
00001566                           561                  
00001566  4241                     562                  CLR         D1
00001568  3218                     563                  MOVE.W      (A0)+, D1
0000156A                           564                 
0000156A                           565                  
0000156A  43F9 00003CDE            566                  LEA         hashTag, A1           ; Display space
00001570  103C 000E                567                  MOVE.B      #14, D0             ; command for trap call to display message
00001574  4E4F                     568                  TRAP        #15                 ; trap call
00001576                           569          
00001576  103C 0003                570                  MOVE.B      #3, D0
0000157A  4E4F                     571                  TRAP        #15
0000157C                           572          
0000157C  43F9 00003CE2            573                  LEA         comma, A1           ; Display space
00001582  103C 000E                574                  MOVE.B      #14, D0             ; command for trap call to display message
00001586  4E4F                     575                  TRAP        #15                 ; trap call
00001588                           576                  
00001588  4EB9 00002EF8            577                  JSR         printEA
0000158E                           578          
0000158E  43F9 00003CD7            579                  LEA         newLine, A1           ; Display space
00001594  103C 000E                580                  MOVE.B      #14, D0             ; command for trap call to display message
00001598  4E4F                     581                  TRAP        #15                 ; trap call
0000159A                           582                  
0000159A                           583                  
0000159A  6000 FAA4                584                  BRA         LOOP                
0000159E                           585          
0000159E                           586  opDynBCLR       
0000159E  4241                     587                  CLR         D1
000015A0  1218                     588                  MOVE.B      (A0)+,D1            ; Copy second byte in
000015A2  1601                     589                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
000015A4  E243                     590                  ASR         #one,D3             ; Shift register over to the end
000015A6  C67C 0007                591                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
000015AA                           592                  
000015AA  1401                     593                  MOVE.B      D1,D2
000015AC  EC42                     594                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
000015AE  B47C 0002                595                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
000015B2  6600 26BE                596                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
000015B6                           597  
000015B6                           598                  
000015B6  43F9 00003CF5            599                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
000015BC  103C 000E                600                  MOVE.B      #14, D0             ; command for trap call to display message
000015C0  4E4F                     601                  TRAP        #15                 ; trap call  
000015C2                           602                  
000015C2  43F9 00003CDB            603                  LEA         space, A1           ; Display space
000015C8  103C 000E                604                  MOVE.B      #14, D0             ; command for trap call to display message
000015CC  4E4F                     605                  TRAP        #15                 ; trap call
000015CE                           606                  
000015CE  143C 0000                607                  MOVE.B      #zero,D2                
000015D2  4EB9 00002EF8            608                  JSR         printEA
000015D8                           609                  
000015D8  43F9 00003CE2            610                  LEA         comma, A1           ; Display space
000015DE  103C 000E                611                  MOVE.B      #14, D0             ; command for trap call to display message
000015E2  4E4F                     612                  TRAP        #15                 ; trap call
000015E4                           613                  
000015E4  4242                     614                  CLR         D2
000015E6  1401                     615                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000015E8  E642                     616                  ASR         #three,D2           ; Remove/shift the register out
000015EA  C47C 0007                617                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000015EE                           618                  
000015EE  4243                     619                  CLR         D3                  ; Clearing D3 to avoid mashing data
000015F0  1601                     620                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000015F2  C67C 0007                621                  AND         #seven,D3           ; Change all bits except for register bits to 0
000015F6                           622                  
000015F6                           623  
000015F6  4EB9 00002EF8            624                  JSR         printEA
000015FC                           625          
000015FC  43F9 00003CD7            626                  LEA         newLine, A1           ; Display space
00001602  103C 000E                627                  MOVE.B      #14, D0             ; command for trap call to display message
00001606  4E4F                     628                  TRAP        #15                 ; trap call            
00001608                           629  
00001608                           630  
00001608  6000 FA36                631                  BRA         LOOP                ; go back to the loop
0000160C                           632   
0000160C                           633  opMOVEB 
0000160C  43F9 00003CFA            634          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
00001612  103C 000E                635          MOVE.B      #14, D0             ; command for trap call to display message
00001616  4E4F                     636          TRAP        #15                 ; trap call
00001618  43F9 00003D75            637          LEA         dispByte, A1        ; display byte
0000161E  103C 000E                638          MOVE.B      #14, D0             ; command for trap call to display message
00001622  4E4F                     639          TRAP        #15                 ; trap call
00001624  43F9 00003CDB            640          LEA         space, A1           ; create spaces
0000162A  103C 000E                641          MOVE.B      #14, D0             ; command for trap call to display message
0000162E  4E4F                     642          TRAP        #15                 ; trap call
00001630                           643          
00001630                           644          
00001630  4245                     645          CLR         D5                  ; Clear D5
00001632  1A01                     646          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001634  E245                     647          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001636  CA7C 0007                648          AND         #seven,D5
0000163A                           649          
0000163A  4244                     650          CLR         D4                  ; Clear out D4
0000163C  1801                     651          MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000163E  C87C 0001                652          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001642                           653          
00001642  4241                     654          CLR          D1
00001644  4242                     655          CLR          D2
00001646  1218                     656          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001648  1401                     657          MOVE.B      D1,D2
0000164A  EC42                     658          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000164C  D842                     659          ADD         D2,D4               ; Adds the remaining bits to D4
0000164E                           660          
0000164E  4242                     661          CLR         D2
00001650  1401                     662          MOVE.B      D1,D2               ; Copy new byte over to D2
00001652  E642                     663          ASR         #three,D2           ; Shift source register out
00001654  C47C 0007                664          AND         #seven,D2           ; Set everything to 0 except for the mode
00001658                           665          
00001658  4243                     666          CLR         D3
0000165A  1601                     667          MOVE.B      D1,D3
0000165C  C67C 0007                668          AND         #seven,D3
00001660                           669          
00001660  4EB9 00002EF8            670          JSR         printEA
00001666                           671          
00001666  43F9 00003CE2            672          LEA         comma, A1           ; Display space
0000166C  103C 000E                673          MOVE.B      #14, D0             ; command for trap call to display message
00001670  4E4F                     674          TRAP        #15                 ; trap call
00001672                           675          
00001672  4242                     676          CLR         D2
00001674  4243                     677          CLR         D3
00001676  1404                     678          MOVE.B      D4,D2
00001678  1605                     679          MOVE.B      D5,D3
0000167A                           680          
0000167A  4EB9 00002EF8            681          JSR         printEA
00001680                           682          
00001680                           683          
00001680  43F9 00003CD7            684          LEA         newLine, A1           ; Display space
00001686  103C 000E                685          MOVE.B      #14, D0             ; command for trap call to display message
0000168A  4E4F                     686          TRAP        #15                 ; trap call            
0000168C                           687  
0000168C                           688  
0000168C  6000 F9B2                689          BRA         LOOP                ; go back to the loop
00001690                           690          
00001690                           691  opMOVEL     
00001690                           692          
00001690  4245                     693              CLR         D5                  ; Clear D5
00001692  1A01                     694              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001694  E245                     695              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001696  CA7C 0007                696              AND         #seven,D5
0000169A                           697          
0000169A  4244                     698              CLR         D4                  ; Clear out D4
0000169C  1801                     699              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000169E  C87C 0001                700              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
000016A2                           701          
000016A2  4241                     702              CLR          D1
000016A4  4242                     703              CLR          D2
000016A6  1218                     704              MOVE.B      (A0)+,D1            ; Copy byte into D1
000016A8  1401                     705              MOVE.B      D1,D2
000016AA  EC42                     706              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000016AC  D842                     707              ADD         D2,D4               ; Adds the remaining bits to D4
000016AE                           708          
000016AE  B87C 0001                709              CMP         #one,D4             ; Check if it is MOVEA
000016B2  6700 0070                710              BEQ         opMOVEAL            ; If it is, branch off
000016B6                           711              
000016B6  43F9 00003CFA            712              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000016BC  103C 000E                713              MOVE.B      #14, D0             ; command for trap call to display message
000016C0  4E4F                     714              TRAP        #15                 ; trap call  
000016C2                           715              
000016C2                           716              
000016C2  43F9 00003D7B            717              LEA         dispLong,A1
000016C8  103C 000E                718              MOVE.B      #14, D0             ; command for trap call to display message
000016CC  4E4F                     719              TRAP        #15                 ; trap call
000016CE                           720              
000016CE  43F9 00003CDB            721              LEA         space, A1           ; create spaces
000016D4  103C 000E                722              MOVE.B      #14, D0             ; command for trap call to display message
000016D8  4E4F                     723              TRAP        #15                 ; trap call
000016DA                           724          
000016DA  4242                     725              CLR         D2
000016DC  1401                     726              MOVE.B      D1,D2               ; Copy new byte over to D2
000016DE  E642                     727              ASR         #three,D2           ; Shift source register out
000016E0  C47C 0007                728              AND         #seven,D2           ; Set everything to 0 except for the mode
000016E4                           729          
000016E4  4243                     730              CLR         D3
000016E6  1601                     731              MOVE.B      D1,D3
000016E8  C67C 0007                732              AND         #seven,D3
000016EC                           733              
000016EC  4246                     734              CLR         D6
000016EE  1C3C 0001                735              MOVE.B      #1,D6
000016F2  4EB9 00002EF8            736              JSR         printEA
000016F8  4246                     737              CLR         D6
000016FA                           738              
000016FA  43F9 00003CE2            739              LEA         comma, A1           ; Display comma
00001700  103C 000E                740              MOVE.B      #14, D0             ; command for trap call to display message
00001704  4E4F                     741              TRAP        #15                 ; trap call
00001706                           742          
00001706  4242                     743              CLR         D2
00001708  4243                     744              CLR         D3
0000170A  1404                     745              MOVE.B      D4,D2
0000170C  1605                     746              MOVE.B      D5,D3
0000170E                           747              
0000170E                           748  
0000170E                           749              
0000170E  4EB9 00002EF8            750              JSR         printEA
00001714                           751          
00001714                           752          
00001714  43F9 00003CD7            753              LEA         newLine, A1           ; Display space
0000171A  103C 000E                754              MOVE.B      #14, D0             ; command for trap call to display message
0000171E  4E4F                     755              TRAP        #15                 ; trap call            
00001720                           756  
00001720                           757  
00001720  6000 F91E                758              BRA         LOOP                ; go back to the loop
00001724                           759              
00001724                           760  opMOVEAL
00001724                           761  
00001724  43F9 00003CFF            762              LEA         MOVEAmatch,A1
0000172A  103C 000E                763              MOVE.B      #14, D0             ; command for trap call to display message
0000172E  4E4F                     764              TRAP        #15                 ; trap call
00001730                           765              
00001730  43F9 00003D7B            766              LEA         dispLong,A1
00001736  103C 000E                767              MOVE.B      #14, D0             ; command for trap call to display message
0000173A  4E4F                     768              TRAP        #15                 ; trap call
0000173C                           769              
0000173C                           770  
0000173C  43F9 00003CDB            771              LEA         space, A1           ; create spaces
00001742  103C 000E                772              MOVE.B      #14, D0             ; command for trap call to display message
00001746  4E4F                     773              TRAP        #15                 ; trap call
00001748                           774              
00001748  4242                     775              CLR         D2
0000174A  1401                     776              MOVE.B      D1,D2               ; Copy new byte over to D2
0000174C  E642                     777              ASR         #three,D2           ; Shift source register out
0000174E  C47C 0007                778              AND         #seven,D2           ; Set everything to 0 except for the mode
00001752                           779          
00001752  4243                     780              CLR         D3
00001754  1601                     781              MOVE.B      D1,D3
00001756  C67C 0007                782              AND         #seven,D3
0000175A                           783              
0000175A  4241                     784              CLR         D1                  ; Clear D1
0000175C                           785              
0000175C                           786              
0000175C  4EB9 00002EF8            787              JSR         printEA
00001762                           788              
00001762  43F9 00003CE2            789              LEA         comma, A1           ; Display comma
00001768  103C 000E                790              MOVE.B      #14, D0             ; command for trap call to display message
0000176C  4E4F                     791              TRAP        #15                 ; trap call
0000176E                           792  
0000176E  4242                     793              CLR         D2
00001770  4243                     794              CLR         D3
00001772  1404                     795              MOVE.B      D4,D2
00001774  1605                     796              MOVE.B      D5,D3
00001776                           797          
00001776  4EB9 00002EF8            798              JSR         printEA
0000177C                           799          
0000177C                           800          
0000177C  43F9 00003CD7            801              LEA         newLine, A1           ; Display space
00001782  103C 000E                802              MOVE.B      #14, D0             ; command for trap call to display message
00001786  4E4F                     803              TRAP        #15                 ; trap call            
00001788                           804  
00001788                           805  
00001788  6000 F8B6                806              BRA         LOOP                ; go back to the loop
0000178C                           807  
0000178C                           808  opMOVEW
0000178C                           809          
0000178C  4245                     810              CLR         D5                  ; Clear D5
0000178E  1A01                     811              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001790  E245                     812              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001792  CA7C 0007                813              AND         #seven,D5
00001796                           814          
00001796  4244                     815              CLR         D4                  ; Clear out D4
00001798  1801                     816              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000179A  C87C 0001                817              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000179E                           818          
0000179E  4241                     819              CLR          D1
000017A0  4242                     820              CLR          D2
000017A2  1218                     821              MOVE.B      (A0)+,D1            ; Copy byte into D1
000017A4  1401                     822              MOVE.B      D1,D2
000017A6  EC42                     823              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000017A8  D842                     824              ADD         D2,D4               ; Adds the remaining bits to D4
000017AA                           825          
000017AA  B87C 0001                826              CMP         #one,D4             ; Check if it is MOVEA
000017AE  6700 006A                827              BEQ         opMOVEAW            ; If it is, branch off
000017B2                           828              
000017B2  43F9 00003CFA            829              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000017B8  103C 000E                830              MOVE.B      #14, D0             ; command for trap call to display message
000017BC  4E4F                     831              TRAP        #15                 ; trap call  
000017BE                           832              
000017BE  43F9 00003D78            833              LEA         dispWord,A1
000017C4  103C 000E                834              MOVE.B      #14, D0             ; command for trap call to display message
000017C8  4E4F                     835              TRAP        #15                 ; trap call
000017CA                           836              
000017CA  43F9 00003CDB            837              LEA         space, A1           ; create spaces
000017D0  103C 000E                838              MOVE.B      #14, D0             ; command for trap call to display message
000017D4  4E4F                     839              TRAP        #15                 ; trap call
000017D6                           840          
000017D6  4242                     841              CLR         D2
000017D8  1401                     842              MOVE.B      D1,D2               ; Copy new byte over to D2
000017DA  E642                     843              ASR         #three,D2           ; Shift source register out
000017DC  C47C 0007                844              AND         #seven,D2           ; Set everything to 0 except for the mode
000017E0                           845          
000017E0  4243                     846              CLR         D3
000017E2  1601                     847              MOVE.B      D1,D3
000017E4  C67C 0007                848              AND         #seven,D3
000017E8                           849              
000017E8  4241                     850              CLR         D1                  ; Clear D1
000017EA                           851              
000017EA  4EB9 00002EF8            852              JSR         printEA
000017F0                           853              
000017F0  43F9 00003CE2            854              LEA         comma, A1           ; Display comma
000017F6  103C 000E                855              MOVE.B      #14, D0             ; command for trap call to display message
000017FA  4E4F                     856              TRAP        #15                 ; trap call
000017FC                           857          
000017FC  4242                     858              CLR         D2
000017FE  4243                     859              CLR         D3
00001800  1404                     860              MOVE.B      D4,D2
00001802  1605                     861              MOVE.B      D5,D3
00001804                           862              
00001804                           863  
00001804                           864              
00001804  4EB9 00002EF8            865              JSR         printEA
0000180A                           866          
0000180A                           867          
0000180A  43F9 00003CD7            868              LEA         newLine, A1           ; Display space
00001810  103C 000E                869              MOVE.B      #14, D0             ; command for trap call to display message
00001814  4E4F                     870              TRAP        #15                 ; trap call            
00001816                           871  
00001816                           872  
00001816  6000 F828                873              BRA         LOOP                ; go back to the loop
0000181A                           874  opMOVEAW  
0000181A  43F9 00003CFF            875              LEA         MOVEAmatch,A1
00001820  103C 000E                876              MOVE.B      #14, D0             ; command for trap call to display message
00001824  4E4F                     877              TRAP        #15                 ; trap call
00001826                           878              
00001826  43F9 00003D78            879              LEA         dispWord,A1
0000182C  103C 000E                880              MOVE.B      #14, D0             ; command for trap call to display message
00001830  4E4F                     881              TRAP        #15                 ; trap call
00001832                           882              
00001832                           883  
00001832  43F9 00003CDB            884              LEA         space, A1           ; create spaces
00001838  103C 000E                885              MOVE.B      #14, D0             ; command for trap call to display message
0000183C  4E4F                     886              TRAP        #15                 ; trap call
0000183E                           887              
0000183E  4242                     888              CLR         D2
00001840  1401                     889              MOVE.B      D1,D2               ; Copy new byte over to D2
00001842  E642                     890              ASR         #three,D2           ; Shift source register out
00001844  C47C 0007                891              AND         #seven,D2           ; Set everything to 0 except for the mode
00001848                           892          
00001848  4243                     893              CLR         D3
0000184A  1601                     894              MOVE.B      D1,D3
0000184C  C67C 0007                895              AND         #seven,D3
00001850                           896              
00001850  4241                     897              CLR         D1                  ; Clear D1
00001852                           898              
00001852                           899              
00001852  4EB9 00002EF8            900              JSR         printEA
00001858                           901              
00001858  43F9 00003CE2            902              LEA         comma, A1           ; Display comma
0000185E  103C 000E                903              MOVE.B      #14, D0             ; command for trap call to display message
00001862  4E4F                     904              TRAP        #15                 ; trap call
00001864                           905  
00001864  4242                     906              CLR         D2
00001866  4243                     907              CLR         D3
00001868  1404                     908              MOVE.B      D4,D2
0000186A  1605                     909              MOVE.B      D5,D3
0000186C                           910          
0000186C  4EB9 00002EF8            911              JSR         printEA
00001872                           912          
00001872                           913          
00001872  43F9 00003CD7            914              LEA         newLine, A1           ; Display space
00001878  103C 000E                915              MOVE.B      #14, D0             ; command for trap call to display message
0000187C  4E4F                     916              TRAP        #15                 ; trap call            
0000187E                           917  
0000187E                           918  
0000187E  6000 F7C0                919              BRA         LOOP                ; go back to the loop
00001882                           920  
00001882                           921  opNEG   
00001882  43F9 00003D05            922              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001888  103C 000E                923              MOVE.B      #14, D0             ; command for trap call to display message
0000188C  4E4F                     924              TRAP        #15                 ; trap call
0000188E                           925          
0000188E                           926          
0000188E  1218                     927              MOVE.B      (A0)+, D1
00001890  1401                     928              MOVE.B      D1,D2               ; copy data over
00001892  EC42                     929              ASR         #six,D2
00001894                           930              
00001894  B47C 0000                931              CMP         #zero,D2
00001898  6700 0016                932              BEQ         opNEGB
0000189C  B47C 0001                933              CMP         #one,D2
000018A0  6700 008E                934              BEQ         opNEGW
000018A4  B47C 0002                935              CMP         #two,D2
000018A8  6700 0046                936              BEQ         opNEGL
000018AC  6000 1CC2                937              BRA         invalid
000018B0                           938  opNEGB
000018B0                           939  
000018B0  43F9 00003D75            940              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
000018B6  103C 000E                941              MOVE.B      #14, D0             ; command for trap call to display message
000018BA  4E4F                     942              TRAP        #15                 ; trap call
000018BC                           943          
000018BC  43F9 00003CDB            944              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000018C2  103C 000E                945              MOVE.B      #14, D0             ; command for trap call to display message
000018C6  4E4F                     946              TRAP        #15                 ; trap call
000018C8                           947          
000018C8  4242                     948              CLR         D2                  ; Clear Data register 2
000018CA  3401                     949              MOVE        D1,D2               ; Move byte into D2
000018CC  E642                     950              ASR         #three,D2           ; Shift mode into place and moves mode into place
000018CE  C47C 0007                951              AND         #seven,D2           ; Stores mode
000018D2                           952              
000018D2  4243                     953              CLR         D3
000018D4  3601                     954              MOVE        D1,D3
000018D6  C67C 0007                955              AND         #seven,D3
000018DA                           956          
000018DA  4EB9 00002EF8            957              JSR         printEA
000018E0                           958                  
000018E0  43F9 00003CD7            959              LEA         newLine, A1           ; Display space
000018E6  103C 000E                960              MOVE.B      #14, D0             ; command for trap call to display message
000018EA  4E4F                     961              TRAP        #15                 ; trap call  
000018EC                           962          
000018EC  6000 F752                963              BRA         LOOP
000018F0                           964                  
000018F0                           965  
000018F0                           966  opNEGL
000018F0                           967  
000018F0  43F9 00003D7B            968              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
000018F6  103C 000E                969              MOVE.B      #14, D0             ; command for trap call to display message
000018FA  4E4F                     970              TRAP        #15                 ; trap call
000018FC                           971  
000018FC  43F9 00003CDB            972              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001902  103C 000E                973              MOVE.B      #14, D0             ; command for trap call to display message
00001906  4E4F                     974              TRAP        #15                 ; trap call
00001908                           975                  
00001908  4242                     976              CLR         D2                  ; Clear Data register 2
0000190A  3401                     977              MOVE        D1,D2               ; Move byte into D2
0000190C  E642                     978              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000190E  C47C 0007                979              AND         #seven,D2           ; Stores mode
00001912                           980          
00001912  4243                     981              CLR         D3
00001914  3601                     982              MOVE        D1,D3
00001916  C67C 0007                983              AND         #seven,D3
0000191A                           984          
0000191A  4EB9 00002EF8            985              JSR         printEA
00001920                           986                      
00001920  43F9 00003CD7            987              LEA         newLine, A1         ; Display space
00001926  103C 000E                988              MOVE.B      #14, D0             ; command for trap call to display message
0000192A  4E4F                     989              TRAP        #15                 ; trap call  
0000192C                           990          
0000192C  6000 F712                991              BRA         LOOP
00001930                           992          
00001930                           993  
00001930                           994  opNEGW
00001930                           995  
00001930  43F9 00003D78            996              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001936  103C 000E                997              MOVE.B      #14, D0             ; command for trap call to display message
0000193A  4E4F                     998              TRAP        #15                 ; trap call
0000193C                           999          
0000193C  43F9 00003CDB           1000              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001942  103C 000E               1001              MOVE.B      #14, D0             ; command for trap call to display message
00001946  4E4F                    1002              TRAP        #15                 ; trap call        
00001948                          1003                  
00001948  4242                    1004              CLR         D2                  ; Clear Data register 2
0000194A  3401                    1005              MOVE        D1,D2               ; Move byte into D2
0000194C  E642                    1006              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000194E  C47C 0007               1007              AND         #seven,D2           ; Stores mode
00001952                          1008          
00001952  4243                    1009              CLR         D3
00001954  3601                    1010              MOVE        D1,D3
00001956  C67C 0007               1011              AND         #seven,D3
0000195A                          1012          
0000195A  4EB9 00002EF8           1013              JSR         printEA
00001960                          1014              
00001960  43F9 00003CD7           1015              LEA         newLine, A1           ; Display space
00001966  103C 000E               1016              MOVE.B      #14, D0             ; command for trap call to display message
0000196A  4E4F                    1017              TRAP        #15                 ; trap call  
0000196C                          1018          
0000196C  6000 F6D2               1019              BRA         LOOP
00001970                          1020  
00001970                          1021  opRTSJSR
00001970                          1022          
00001970  1218                    1023              MOVE.B      (A0)+, D1
00001972                          1024              
00001972  1401                    1025              MOVE.B      D1,D2               ; copy data over
00001974  B47C 0075               1026              CMP         #117,D2
00001978  6700 0050               1027              BEQ         opRTS
0000197C                          1028              
0000197C  EC42                    1029              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
0000197E  B47C 0002               1030              CMP         #two,D2             ; Checking if it is JSR
00001982  6700 0006               1031              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001986                          1032  
00001986  6000 1BE8               1033              BRA         invalid
0000198A                          1034  
0000198A                          1035  opJSR
0000198A                          1036                        
0000198A  43F9 00003D0D           1037              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001990  103C 000E               1038              MOVE.B      #14, D0             ; command for trap call to display message
00001994  4E4F                    1039              TRAP        #15                 ; trap call
00001996                          1040              
00001996  43F9 00003CDB           1041              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000199C  103C 000E               1042              MOVE.B      #14, D0             ; command for trap call to display message
000019A0  4E4F                    1043              TRAP        #15                 ; trap call
000019A2                          1044              
000019A2  4242                    1045              CLR         D2
000019A4  4243                    1046              CLR         D3
000019A6                          1047              
000019A6  1401                    1048              MOVE.B      D1,D2
000019A8  E642                    1049              ASR         #three,D2
000019AA  C47C 0007               1050              AND         #seven,D2
000019AE                          1051              
000019AE  1601                    1052              MOVE.B      D1,D3
000019B0  C67C 0007               1053              AND         #seven,D3
000019B4                          1054              
000019B4  4EB9 00002EF8           1055              JSR         printEA
000019BA                          1056              
000019BA  43F9 00003CD7           1057              LEA         newLine, A1           ; Display space
000019C0  103C 000E               1058              MOVE.B      #14, D0             ; command for trap call to display message
000019C4  4E4F                    1059              TRAP        #15                 ; trap call  
000019C6                          1060              
000019C6  6000 F678               1061              BRA         loop            
000019CA                          1062  opRTS
000019CA                          1063  
000019CA  43F9 00003D09           1064              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
000019D0  103C 000E               1065              MOVE.B      #14, D0             ; command for trap call to display message
000019D4  4E4F                    1066              TRAP        #15                 ; trap call
000019D6                          1067              
000019D6  43F9 00003CD7           1068              LEA         newLine, A1           ; Display space
000019DC  103C 000E               1069              MOVE.B      #14, D0             ; command for trap call to display message
000019E0  4E4F                    1070              TRAP        #15                 ; trap call 
000019E2                          1071              
000019E2  6000 F65C               1072              BRA         loop
000019E6                          1073  
000019E6                          1074  opMOVEMLEA
000019E6  4242                    1075              CLR         D2                  ; Clear D2
000019E8  1401                    1076              MOVE.B      D1,D2               ; Copy byte over
000019EA  C47C 000F               1077              AND         #secNib,D2          ; Check only the second nibble
000019EE  B47C 000C               1078              CMP         #twelve,D2          ; Compare the second nibble to twelve
000019F2  6700 000E               1079              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
000019F6  B47C 0008               1080              CMP         #eight,D2           ; Compare the second nibble to eight
000019FA  6700 0006               1081              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
000019FE  6000 008C               1082              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
00001A02                          1083              
00001A02                          1084  opMOVEM            
00001A02  4246                    1085              CLR         D6                  ; Clearing D4 to store dr field
00001A04  1C01                    1086              MOVE.B      D1,D6               ; Moving byte to find dr field
00001A06  E446                    1087              ASR         #two,D6             ; Moving dr field to readable spot
00001A08  CC7C 0001               1088              AND         #one,D6             ; seting everything except dr to 0
00001A0C                          1089  
00001A0C  4241                    1090              CLR         D1  
00001A0E  1218                    1091              MOVE.B      (A0)+, D1           ; Taking in next byte
00001A10                          1092              
00001A10  4245                    1093              CLR         D5
00001A12  1A01                    1094              MOVE.B      D1,D5               ; Using D6 to check if this is indeed MOVEM
00001A14  EE45                    1095              ASR         #seven,D5
00001A16  CA7C 0001               1096              AND         #one,D5
00001A1A  BA7C 0001               1097              CMP         #one,D5             ; This bit should be one if this is MOVEM
00001A1E  6600 1B50               1098              BNE         invalid             ; If this is not 1 then this is not moveM
00001A22  4245                    1099              CLR         D5
00001A24                          1100              
00001A24  43F9 00003D11           1101              LEA         MOVEMMatch, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001A2A  103C 000E               1102              MOVE.B      #14, D0             ; command for trap call to display message
00001A2E  4E4F                    1103              TRAP        #15                 ; trap call
00001A30                          1104              
00001A30  4245                    1105              CLR         D5                  ; Clearing D5 to store size
00001A32  1A01                    1106              MOVE.B      D1,D5               ; Moving byte that contains bit for size
00001A34  EC45                    1107              ASR         #six,D5            ; Moving size bit to the very right to read
00001A36  CA7C 0001               1108              AND         #one,D5             ; Isolating the one bit for size
00001A3A                          1109              
00001A3A  4242                    1110              CLR         D2                  ; Storing EA mode in D2
00001A3C  1401                    1111              MOVE.B      D1,D2
00001A3E  E642                    1112              ASR         #three,D2
00001A40  C47C 0007               1113              AND         #seven,D2
00001A44                          1114              
00001A44  4243                    1115              CLR         D3                  ; Storing EA register into D3
00001A46  1601                    1116              MOVE.B      D1,D3
00001A48  C67C 0007               1117              AND         #seven,D3
00001A4C                          1118              
00001A4C  4EB9 00003576           1119              JSR         MOVEMBRA
00001A52                          1120              
00001A52  B47C 0003               1121              CMP         #three,D2
00001A56  6700 0024               1122              BEQ         skipPrintEA
00001A5A                          1123              
00001A5A  43F9 00003CE2           1124              LEA         comma, A1           ; Display comma
00001A60  103C 000E               1125              MOVE.B      #14, D0             ; command for trap call to display message
00001A64  4E4F                    1126              TRAP        #15                 ; trap call
00001A66                          1127              
00001A66                          1128  
00001A66  4EB9 00002EF8           1129              JSR         printEA
00001A6C                          1130              
00001A6C  43F9 00003CD7           1131              LEA         newline, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001A72  103C 000E               1132              MOVE.B      #14, D0             ; command for trap call to display message
00001A76  4E4F                    1133              TRAP        #15                 ; trap call            
00001A78                          1134  
00001A78  6000 F5C6               1135              BRA         loop            
00001A7C                          1136  
00001A7C                          1137  skipPrintEA 
00001A7C                          1138  
00001A7C  43F9 00003CD7           1139              LEA         newline, A1        
00001A82  103C 000E               1140              MOVE.B      #14, D0             ; command for trap call to display message
00001A86  4E4F                    1141              TRAP        #15                 ; trap call            
00001A88                          1142  
00001A88  6000 F5B6               1143              BRA         loop 
00001A8C                          1144  opLEA
00001A8C  4244                    1145              CLR         D4                  ; Clearing space for source register
00001A8E  1801                    1146              MOVE.B      D1,D4               ; Moving byte to isolate register
00001A90  E244                    1147              ASR         #one,D4
00001A92  C87C 0007               1148              AND         #seven,D4           ; Isolated register
00001A96                          1149  
00001A96  4245                    1150              CLR         D5                  ; Clearing D5 to check if bits match LEA static bits
00001A98  1A01                    1151              MOVE.B      D1,D5
00001A9A  CA7C 0001               1152              AND         #one,D5
00001A9E  E545                    1153              ASL         #two,D5
00001AA0                          1154              
00001AA0  1218                    1155              MOVE.B      (A0)+, D1           ; Taking in next byte
00001AA2                          1156              
00001AA2  1C01                    1157              MOVE.B      D1,D6
00001AA4  EC46                    1158              ASR         #six,D6
00001AA6  DA46                    1159              ADD         D6,D5
00001AA8  4246                    1160              CLR         D6
00001AAA                          1161  
00001AAA  BA7C 0007               1162              CMP         #seven,D5
00001AAE  6600 1AC0               1163              BNE         invalid   
00001AB2                          1164              
00001AB2  43F9 00003D17           1165              LEA         LEAmatch, A1        ; we know that the opcode will be LEA, so load A1 to print message
00001AB8  103C 000E               1166              MOVE.B      #14, D0             ; command for trap call to display message
00001ABC  4E4F                    1167              TRAP        #15                 ; trap call            
00001ABE                          1168  
00001ABE  43F9 00003CDB           1169              LEA         space, A1         ; we know that the opcode will be MOVEM, so load A1 to print message
00001AC4  103C 000E               1170              MOVE.B      #14, D0             ; command for trap call to display message
00001AC8  4E4F                    1171              TRAP        #15                 ; trap call            
00001ACA                          1172              
00001ACA  4242                    1173              CLR         D2
00001ACC  1401                    1174              MOVE.B      D1,D2
00001ACE  E642                    1175              ASR         #three,D2
00001AD0  C47C 0007               1176              AND         #seven,D2
00001AD4                          1177              
00001AD4  4243                    1178              CLR         D3
00001AD6  1601                    1179              MOVE.B      D1,D3
00001AD8  C67C 0007               1180              AND         #seven,D3
00001ADC                          1181              
00001ADC  4EB9 00002EF8           1182              JSR         printEA
00001AE2                          1183              
00001AE2  43F9 00003CE2           1184              LEA         comma, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001AE8  103C 000E               1185              MOVE.B      #14, D0             ; command for trap call to display message
00001AEC  4E4F                    1186              TRAP        #15                 ; trap call            
00001AEE                          1187              
00001AEE                          1188              
00001AEE  4243                    1189              CLR         D3
00001AF0  1604                    1190              MOVE.B      D4,D3
00001AF2  143C 0001               1191              MOVE.B      #one,D2
00001AF6                          1192              
00001AF6  4EB9 00002EF8           1193              JSR         printEA             ; Prints out source address
00001AFC                          1194              
00001AFC  43F9 00003CD7           1195              LEA         newline, A1         ; Prints new line
00001B02  103C 000E               1196              MOVE.B      #14, D0             ; command for trap call to display message
00001B06  4E4F                    1197              TRAP        #15                 ; trap call
00001B08                          1198  
00001B08  6000 F536               1199              BRA         loop                        
00001B0C                          1200  
00001B0C  43F9 00003D39           1201  opOR        LEA         ORmatch,A1
00001B12  103C 000E               1202              MOVE.B      #14,D0
00001B16  4E4F                    1203              TRAP        #15
00001B18                          1204              
00001B18  4242                    1205              CLR         D2
00001B1A                          1206              ; These are for EA to Dn direction
00001B1A  B43C 0000               1207              CMP.B       #zero,D2
00001B1E  6700 002A               1208              BEQ         opORB               ; Byte in opmode
00001B22  B43C 0001               1209              CMP.B       #one,D2
00001B26  6700 007C               1210              BEQ         opORW               ; Word in opmode
00001B2A  B43C 0002               1211              CMP.B       #two,D2
00001B2E  6700 00D0               1212              BEQ         opORL               ; Long in opmode
00001B32                          1213              
00001B32                          1214              ; These are for Dn to EA direction
00001B32  B43C 0004               1215              CMP.B       #four,D2
00001B36  6700 0012               1216              BEQ         opORB               ; Byte in opmode
00001B3A  B43C 0005               1217              CMP.B       #five,D2
00001B3E  6700 0064               1218              BEQ         opORW               ; Word in opmode
00001B42  B43C 0006               1219              CMP.B       #six,D2
00001B46  6700 00B8               1220              BEQ         opORL               ; Long in opmode
00001B4A                          1221              
00001B4A  43F9 00003D75           1222  opORB       LEA         dispByte,A1
00001B50  103C 000E               1223              MOVE.B      #14,D0
00001B54  4E4F                    1224              TRAP        #15
00001B56                          1225              
00001B56  43F9 00003CDB           1226              LEA         space, A1           ; Display space
00001B5C  103C 000E               1227              MOVE.B      #14, D0             ; command for trap call to display message
00001B60  4E4F                    1228              TRAP        #15                 ; trap call
00001B62                          1229              
00001B62                          1230  
00001B62  1401                    1231              MOVE.B      D1,D2
00001B64  E642                    1232              ASR         #3,D2
00001B66  C47C 0007               1233              AND         #$07,D2
00001B6A  1601                    1234              MOVE.B      D1,D3
00001B6C  C67C 0007               1235              AND         #$07,D3
00001B70  4EB9 00002EF8           1236              JSR         printEA         ; Determines the "left" operand register
00001B76                          1237              
00001B76  43F9 00003CE2           1238              LEA         comma, A1           ; Display space
00001B7C  103C 000E               1239              MOVE.B      #14, D0             ; command for trap call to display message
00001B80  4E4F                    1240              TRAP        #15                 ; trap call
00001B82                          1241              
00001B82  4242                    1242              CLR         D2
00001B84  3601                    1243              MOVE.W      D1,D3
00001B86  E043                    1244              ASR         #eight,D3
00001B88  E243                    1245              ASR         #one,D3
00001B8A  C67C 0007               1246              AND         #$07,D3
00001B8E  4EB9 00002EF8           1247              JSR         printEA
00001B94                          1248              
00001B94  43F9 00003CD7           1249              LEA         newLine,A1
00001B9A  103C 000E               1250              MOVE.B      #14,D0
00001B9E  4E4F                    1251              TRAP        #15
00001BA0                          1252              
00001BA0  6000 F49E               1253              BRA         LOOP
00001BA4                          1254              
00001BA4                          1255              
00001BA4  43F9 00003D78           1256  opORW       LEA         dispWord,A1
00001BAA  103C 000E               1257              MOVE.B      #14,D0
00001BAE  4E4F                    1258              TRAP        #15
00001BB0                          1259              
00001BB0  43F9 00003CDB           1260              LEA         space, A1           ; Display space
00001BB6  103C 000E               1261              MOVE.B      #14, D0             ; command for trap call to display message
00001BBA  4E4F                    1262              TRAP        #15                 ; trap call
00001BBC                          1263              
00001BBC  4242                    1264              CLR         D2
00001BBE  1401                    1265              MOVE.B      D1,D2
00001BC0  E642                    1266              ASR         #3,D2
00001BC2  C47C 0007               1267              AND         #$07,D2
00001BC6  1601                    1268              MOVE.B      D1,D3
00001BC8  C67C 0007               1269              AND         #$07,D3
00001BCC  4EB9 00002EF8           1270              JSR         printEA         ; Determines the "left" operand register
00001BD2                          1271              
00001BD2  43F9 00003CE2           1272              LEA         comma, A1           ; Display space
00001BD8  103C 000E               1273              MOVE.B      #14, D0             ; command for trap call to display message
00001BDC  4E4F                    1274              TRAP        #15                 ; trap call
00001BDE                          1275              
00001BDE  4242                    1276              CLR         D2
00001BE0  3601                    1277              MOVE.W      D1,D3
00001BE2  E043                    1278              ASR         #eight,D3
00001BE4  E243                    1279              ASR         #one,D3
00001BE6  C67C 0007               1280              AND         #$07,D3
00001BEA  4EB9 00002EF8           1281              JSR         printEA
00001BF0                          1282              
00001BF0  43F9 00003CD7           1283              LEA         newLine,A1
00001BF6  103C 000E               1284              MOVE.B      #14,D0
00001BFA  4E4F                    1285              TRAP        #15
00001BFC                          1286              
00001BFC  6000 F442               1287              BRA         LOOP
00001C00                          1288              
00001C00  43F9 00003D7B           1289  opORL       LEA         dispLong,A1
00001C06  103C 000E               1290              MOVE.B      #14,D0
00001C0A  4E4F                    1291              TRAP        #15
00001C0C                          1292              
00001C0C  43F9 00003CDB           1293              LEA         space, A1           ; Display space
00001C12  103C 000E               1294              MOVE.B      #14, D0             ; command for trap call to display message
00001C16  4E4F                    1295              TRAP        #15                 ; trap call
00001C18                          1296              
00001C18  1401                    1297              MOVE.B      D1,D2
00001C1A  E642                    1298              ASR         #3,D2
00001C1C  C47C 0007               1299              AND         #$07,D2
00001C20  1601                    1300              MOVE.B      D1,D3
00001C22  C67C 0007               1301              AND         #$07,D3
00001C26  4EB9 00002EF8           1302              JSR         printEA         ; Determines the "left" operand register
00001C2C                          1303              
00001C2C  43F9 00003CE2           1304              LEA         comma, A1           ; Display space
00001C32  103C 000E               1305              MOVE.B      #14, D0             ; command for trap call to display message
00001C36  4E4F                    1306              TRAP        #15                 ; trap call
00001C38                          1307              
00001C38  4242                    1308              CLR         D2
00001C3A  3601                    1309              MOVE.W      D1,D3
00001C3C  E043                    1310              ASR         #eight,D3
00001C3E  E243                    1311              ASR         #one,D3
00001C40  C67C 0007               1312              AND         #$07,D3
00001C44  4EB9 00002EF8           1313              JSR         printEA
00001C4A                          1314              
00001C4A  43F9 00003CD7           1315              LEA         newLine,A1
00001C50  103C 000E               1316              MOVE.B      #14,D0
00001C54  4E4F                    1317              TRAP        #15
00001C56                          1318              
00001C56  6000 F3E8               1319              BRA         LOOP            ; trap call
00001C5A                          1320              
00001C5A  6000 F3E4               1321              BRA         LOOP            ; DOUBLE CHECK THIS AGAIN AFTER MORE TESTING ALEX
00001C5E                          1322              
00001C5E                          1323  ***********************************************************************************************************
00001C5E                          1324  *
00001C5E                          1325  *               DIVS OPCODE
00001C5E                          1326  *
00001C5E                          1327  ***********************************************************************************************************
00001C5E                          1328  
00001C5E  43F9 00003D34           1329  opDIVS      LEA     DIVSmatch,A1
00001C64  103C 000E               1330              MOVE.B  #14,D0
00001C68  4E4F                    1331              TRAP    #15
00001C6A                          1332              
00001C6A  43F9 00003CDB           1333              LEA         space, A1           ; Display space
00001C70  103C 000E               1334              MOVE.B      #14, D0             ; command for trap call to display message
00001C74  4E4F                    1335              TRAP        #15                 ; trap call
00001C76                          1336              
00001C76  1401                    1337              MOVE.B      D1,D2
00001C78  E642                    1338              ASR         #3,D2
00001C7A  C47C 0007               1339              AND         #$07,D2
00001C7E  1601                    1340              MOVE.B      D1,D3
00001C80  C67C 0007               1341              AND         #$07,D3
00001C84  4EB9 00002EF8           1342              JSR         printEA
00001C8A                          1343              
00001C8A  43F9 00003CE2           1344              LEA         comma, A1           ; Display space
00001C90  103C 000E               1345              MOVE.B      #14, D0             ; command for trap call to display message
00001C94  4E4F                    1346              TRAP        #15                 ; trap call
00001C96                          1347              
00001C96  4242                    1348              CLR         D2
00001C98  3601                    1349              MOVE.W      D1,D3
00001C9A  E043                    1350              ASR         #eight,D3
00001C9C  E243                    1351              ASR         #one,D3
00001C9E  C67C 0007               1352              AND         #$07,D3
00001CA2  4EB9 00002EF8           1353              JSR         printEA
00001CA8                          1354              
00001CA8  43F9 00003CD7           1355              LEA         newLine,A1
00001CAE  103C 000E               1356              MOVE.B      #14,D0
00001CB2  4E4F                    1357              TRAP        #15
00001CB4                          1358              
00001CB4  6000 F38A               1359              BRA         LOOP
00001CB8                          1360      
00001CB8  6000 F386               1361              BRA     LOOP
00001CBC                          1362              
00001CBC                          1363  **********************************************************************************************************
00001CBC                          1364  *
00001CBC                          1365  *               EOR OPCODE
00001CBC                          1366  *
00001CBC                          1367  ***********************************************************************************************************
00001CBC                          1368  
00001CBC  43F9 00003D40           1369  opEOR       LEA         EORmatch,A1
00001CC2  103C 000E               1370              MOVE.B      #14,D0
00001CC6  4E4F                    1371              TRAP        #15
00001CC8                          1372              
00001CC8  4242                    1373              CLR         D2
00001CCA                          1374              
00001CCA  1401                    1375              MOVE.B      D1,D2
00001CCC  EE42                    1376              ASR         #seven,D2           ; Move bits 7 places over to find opmode
00001CCE  C47C 0007               1377              AND         #$07,D2
00001CD2  B43C 0005               1378              CMP.B       #five,D2
00001CD6  6D00 0012               1379              BLT         opEORB              ; Byte in opmode
00001CDA  B43C 0005               1380              CMP.B       #five,D2
00001CDE  6700 006A               1381              BEQ         opEORW              ; Word in opmode
00001CE2  B43C 0005               1382              CMP.B       #five,D2
00001CE6  6E00 00C2               1383              BGT         opEORL              ; Long in opmode
00001CEA                          1384              
00001CEA  43F9 00003D75           1385  opEORB      LEA         dispByte,A1
00001CF0  103C 000E               1386              MOVE.B      #14,D0
00001CF4  4E4F                    1387              TRAP        #15
00001CF6                          1388              
00001CF6  43F9 00003CDB           1389              LEA         space, A1           ; Display space
00001CFC  103C 000E               1390              MOVE.B      #14, D0             ; command for trap call to display message
00001D00  4E4F                    1391              TRAP        #15                 ; trap call
00001D02                          1392              
00001D02  4242                    1393              CLR         D2
00001D04  4243                    1394              CLR         D3
00001D06  3601                    1395              MOVE.W      D1,D3
00001D08  E043                    1396              ASR         #eight,D3
00001D0A  E243                    1397              ASR         #one,D3
00001D0C  C67C 0007               1398              AND         #$07,D3
00001D10  4EB9 00002EF8           1399              JSR         printEA
00001D16                          1400              
00001D16  43F9 00003CE2           1401              LEA         comma, A1           ; Display space
00001D1C  103C 000E               1402              MOVE.B      #14, D0             ; command for trap call to display message
00001D20  4E4F                    1403              TRAP        #15                 ; trap call
00001D22                          1404              
00001D22  4242                    1405              CLR         D2
00001D24  4243                    1406              CLR         D3
00001D26  1401                    1407              MOVE.B      D1,D2
00001D28  E642                    1408              ASR         #three,D2
00001D2A  C47C 0007               1409              AND         #seven,D2
00001D2E  1601                    1410              MOVE.B      D1,D3
00001D30  C67C 0007               1411              AND         #$07,D3
00001D34  4EB9 00002EF8           1412              JSR         printEA         ; Determines the "left" operand register
00001D3A                          1413              
00001D3A  43F9 00003CD7           1414              LEA         newLine,A1
00001D40  103C 000E               1415              MOVE.B      #14,D0
00001D44  4E4F                    1416              TRAP        #15
00001D46                          1417              
00001D46  6000 F2F8               1418              BRA         LOOP
00001D4A                          1419              
00001D4A                          1420              
00001D4A  43F9 00003D78           1421  opEORW      LEA         dispWord,A1
00001D50  103C 000E               1422              MOVE.B      #14,D0
00001D54  4E4F                    1423              TRAP        #15
00001D56                          1424              
00001D56  43F9 00003CDB           1425              LEA         space, A1           ; Display space
00001D5C  103C 000E               1426              MOVE.B      #14, D0             ; command for trap call to display message
00001D60  4E4F                    1427              TRAP        #15                 ; trap call
00001D62                          1428              
00001D62  4242                    1429              CLR         D2
00001D64  4243                    1430              CLR         D3
00001D66  3601                    1431              MOVE.W      D1,D3
00001D68  E043                    1432              ASR         #eight,D3
00001D6A  E243                    1433              ASR         #one,D3
00001D6C  C67C 0007               1434              AND         #$07,D3
00001D70  4EB9 00002EF8           1435              JSR         printEA
00001D76                          1436              
00001D76  43F9 00003CE2           1437              LEA         comma, A1           ; Display space
00001D7C  103C 000E               1438              MOVE.B      #14, D0             ; command for trap call to display message
00001D80  4E4F                    1439              TRAP        #15                 ; trap call
00001D82                          1440              
00001D82  4242                    1441              CLR         D2
00001D84  4243                    1442              CLR         D3
00001D86  1401                    1443              MOVE.B      D1,D2
00001D88  E642                    1444              ASR         #three,D2
00001D8A  C47C 0007               1445              AND         #seven,D2
00001D8E  1601                    1446              MOVE.B      D1,D3
00001D90  C67C 0007               1447              AND         #$07,D3
00001D94  4EB9 00002EF8           1448              JSR         printEA         ; Determines the "left" operand register
00001D9A                          1449              
00001D9A  43F9 00003CD7           1450              LEA         newLine,A1
00001DA0  103C 000E               1451              MOVE.B      #14,D0
00001DA4  4E4F                    1452              TRAP        #15
00001DA6                          1453              
00001DA6  6000 F298               1454              BRA         LOOP
00001DAA                          1455              
00001DAA  43F9 00003D7B           1456  opEORL      LEA         dispLong,A1
00001DB0  103C 000E               1457              MOVE.B      #14,D0
00001DB4  4E4F                    1458              TRAP        #15
00001DB6                          1459              
00001DB6  43F9 00003CDB           1460              LEA         space, A1           ; Display space
00001DBC  103C 000E               1461              MOVE.B      #14, D0             ; command for trap call to display message
00001DC0  4E4F                    1462              TRAP        #15                 ; trap call
00001DC2                          1463              
00001DC2  4242                    1464              CLR         D2
00001DC4  4243                    1465              CLR         D3
00001DC6  3601                    1466              MOVE.W      D1,D3
00001DC8  E043                    1467              ASR         #eight,D3
00001DCA  E243                    1468              ASR         #one,D3
00001DCC  C67C 0007               1469              AND         #$07,D3
00001DD0  4EB9 00002EF8           1470              JSR         printEA
00001DD6                          1471              
00001DD6  43F9 00003CE2           1472              LEA         comma, A1           ; Display space
00001DDC  103C 000E               1473              MOVE.B      #14, D0             ; command for trap call to display message
00001DE0  4E4F                    1474              TRAP        #15                 ; trap call
00001DE2                          1475              
00001DE2  4242                    1476              CLR         D2
00001DE4  4243                    1477              CLR         D3
00001DE6  1401                    1478              MOVE.B      D1,D2
00001DE8  E642                    1479              ASR         #three,D2
00001DEA  C47C 0007               1480              AND         #seven,D2
00001DEE  1601                    1481              MOVE.B      D1,D3
00001DF0  C67C 0007               1482              AND         #$07,D3
00001DF4  4EB9 00002EF8           1483              JSR         printEA         ; Determines the "left" operand register
00001DFA                          1484              
00001DFA  43F9 00003CD7           1485              LEA         newLine,A1
00001E00  103C 000E               1486              MOVE.B      #14,D0
00001E04  4E4F                    1487              TRAP        #15
00001E06                          1488              
00001E06  6000 F238               1489              BRA         LOOP            ; trap call
00001E0A                          1490              
00001E0A                          1491  
00001E0A                          1492  ***********************************************************************************************************
00001E0A                          1493  *
00001E0A                          1494  *               CMP OPCODE
00001E0A                          1495  *
00001E0A                          1496  ***********************************************************************************************************
00001E0A                          1497  
00001E0A  43F9 00003D44           1498  opCMP       LEA         CMPmatch,A1
00001E10  103C 000E               1499              MOVE.B      #14,D0
00001E14  4E4F                    1500              TRAP        #15
00001E16                          1501              
00001E16  4242                    1502              CLR         D2
00001E18                          1503              
00001E18  1401                    1504              MOVE.B      D1,D2
00001E1A  EC42                    1505              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001E1C  C47C 0007               1506              AND         #$07,D2
00001E20  B43C 0000               1507              CMP.B       #zero,D2
00001E24  6700 0016               1508              BEQ         opCMPB              ; Byte in opmode
00001E28  B43C 0001               1509              CMP.B       #one,D2
00001E2C  6700 0068               1510              BEQ         opCMPW              ; Word in opmode
00001E30  B43C 0002               1511              CMP.B       #two,D2
00001E34  6700 00BA               1512              BEQ         opCMPL              ; Long in opmode
00001E38                          1513              
00001E38  6000 1E38               1514              BRA         printInvalid        ; Incorrect input
00001E3C                          1515  
00001E3C  43F9 00003D75           1516  opCMPB      LEA         dispByte,A1
00001E42  103C 000E               1517              MOVE.B      #14,D0
00001E46  4E4F                    1518              TRAP        #15
00001E48                          1519              
00001E48  43F9 00003CDB           1520              LEA         space, A1           ; Display space
00001E4E  103C 000E               1521              MOVE.B      #14, D0             ; command for trap call to display message
00001E52  4E4F                    1522              TRAP        #15                 ; trap call
00001E54                          1523              
00001E54  1401                    1524              MOVE.B      D1,D2
00001E56  E642                    1525              ASR         #3,D2
00001E58  C47C 0007               1526              AND         #$07,D2
00001E5C  1601                    1527              MOVE.B      D1,D3
00001E5E  C67C 0007               1528              AND         #$07,D3
00001E62  4EB9 00002EF8           1529              JSR         printEA         ; Determines the "left" operand register
00001E68                          1530              
00001E68  43F9 00003CE2           1531              LEA         comma, A1           ; Display space
00001E6E  103C 000E               1532              MOVE.B      #14, D0             ; command for trap call to display message
00001E72  4E4F                    1533              TRAP        #15                 ; trap call
00001E74                          1534              
00001E74  4242                    1535              CLR         D2
00001E76  3601                    1536              MOVE.W      D1,D3
00001E78  E043                    1537              ASR         #eight,D3
00001E7A  E243                    1538              ASR         #one,D3
00001E7C  C67C 0007               1539              AND         #$07,D3
00001E80  4EB9 00002EF8           1540              JSR         printEA
00001E86                          1541              
00001E86  43F9 00003CD7           1542              LEA         newLine,A1
00001E8C  103C 000E               1543              MOVE.B      #14,D0
00001E90  4E4F                    1544              TRAP        #15
00001E92                          1545              
00001E92  6000 F1AC               1546              BRA         LOOP
00001E96                          1547              
00001E96  43F9 00003D78           1548  opCMPW      LEA         dispWord,A1
00001E9C  103C 000E               1549              MOVE.B      #14,D0
00001EA0  4E4F                    1550              TRAP        #15
00001EA2                          1551              
00001EA2  43F9 00003CDB           1552              LEA         space, A1           ; Display space
00001EA8  103C 000E               1553              MOVE.B      #14, D0             ; command for trap call to display message
00001EAC  4E4F                    1554              TRAP        #15                 ; trap call
00001EAE                          1555              
00001EAE  1401                    1556              MOVE.B      D1,D2
00001EB0  E642                    1557              ASR         #3,D2
00001EB2  C47C 0007               1558              AND         #$07,D2
00001EB6  1601                    1559              MOVE.B      D1,D3
00001EB8  C67C 0007               1560              AND         #$07,D3
00001EBC  4EB9 00002EF8           1561              JSR         printEA         ; Determines the "left" operand register
00001EC2                          1562              
00001EC2  43F9 00003CE2           1563              LEA         comma, A1           ; Display space
00001EC8  103C 000E               1564              MOVE.B      #14, D0             ; command for trap call to display message
00001ECC  4E4F                    1565              TRAP        #15                 ; trap call
00001ECE                          1566              
00001ECE  4242                    1567              CLR         D2
00001ED0  3601                    1568              MOVE.W      D1,D3
00001ED2  E043                    1569              ASR         #eight,D3
00001ED4  E243                    1570              ASR         #one,D3
00001ED6  C67C 0007               1571              AND         #$07,D3
00001EDA  4EB9 00002EF8           1572              JSR         printEA
00001EE0                          1573              
00001EE0  43F9 00003CD7           1574              LEA         newLine,A1
00001EE6  103C 000E               1575              MOVE.B      #14,D0
00001EEA  4E4F                    1576              TRAP        #15
00001EEC                          1577              
00001EEC  6000 F152               1578              BRA         LOOP
00001EF0                          1579  
00001EF0  43F9 00003D7B           1580  opCMPL      LEA         dispLong,A1
00001EF6  103C 000E               1581              MOVE.B      #14,D0
00001EFA  4E4F                    1582              TRAP        #15
00001EFC                          1583              
00001EFC  43F9 00003CDB           1584              LEA         space, A1           ; Display space
00001F02  103C 000E               1585              MOVE.B      #14, D0             ; command for trap call to display message
00001F06  4E4F                    1586              TRAP        #15                 ; trap call
00001F08                          1587              
00001F08  1401                    1588              MOVE.B      D1,D2
00001F0A  E642                    1589              ASR         #3,D2
00001F0C  C47C 0007               1590              AND         #$07,D2
00001F10  1601                    1591              MOVE.B      D1,D3
00001F12  C67C 0007               1592              AND         #$07,D3
00001F16  4EB9 00002EF8           1593              JSR         printEA         ; Determines the "left" operand register
00001F1C                          1594              
00001F1C  43F9 00003CE2           1595              LEA         comma, A1           ; Display space
00001F22  103C 000E               1596              MOVE.B      #14, D0             ; command for trap call to display message
00001F26  4E4F                    1597              TRAP        #15                 ; trap call
00001F28                          1598              
00001F28  4242                    1599              CLR         D2
00001F2A  3601                    1600              MOVE.W      D1,D3
00001F2C  E043                    1601              ASR         #eight,D3
00001F2E  E243                    1602              ASR         #one,D3
00001F30  C67C 0007               1603              AND         #$07,D3
00001F34  4EB9 00002EF8           1604              JSR         printEA
00001F3A                          1605              
00001F3A  43F9 00003CD7           1606              LEA         newLine,A1
00001F40  103C 000E               1607              MOVE.B      #14,D0
00001F44  4E4F                    1608              TRAP        #15
00001F46                          1609              
00001F46  6000 F0F8               1610              BRA         LOOP
00001F4A                          1611  
00001F4A                          1612  ***********************************************************************************************************
00001F4A                          1613  *
00001F4A                          1614  *               SUB OPCODE
00001F4A                          1615  *
00001F4A                          1616  ***********************************************************************************************************
00001F4A                          1617  
00001F4A  43F9 00003D3C           1618  opSUB       LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001F50  103C 000E               1619              MOVE.B      #14, D0             ; command for trap call to display message
00001F54  4E4F                    1620              TRAP        #15                 ; trap call
00001F56                          1621          
00001F56                          1622          
00001F56  E141                    1623              ASL         #eight,D1
00001F58  1218                    1624              MOVE.B      (A0)+,D1
00001F5A  4242                    1625              CLR         D2
00001F5C                          1626              
00001F5C  3401                    1627              MOVE.W      D1,D2
00001F5E  EC42                    1628              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001F60  C47C 0007               1629              AND         #seven,D2
00001F64                          1630              
00001F64                          1631              ; These are for DN - EA
00001F64  B43C 0000               1632              CMP.B       #zero,D2
00001F68  6700 002A               1633              BEQ         opSUBB              ; Byte in opmode
00001F6C  B43C 0001               1634              CMP.B       #one,D2
00001F70  6700 007C               1635              BEQ         opSUBW              ; Word in opmode
00001F74  B43C 0002               1636              CMP.B       #two,D2
00001F78  6700 00CE               1637              BEQ         opSUBL              ; Long in opmode
00001F7C                          1638              
00001F7C                          1639              ; These are for EA - DN
00001F7C  B43C 0004               1640              CMP.B       #four,D2
00001F80  6700 0012               1641              BEQ         opSUBB              ; Byte in opmode
00001F84  B43C 0005               1642              CMP.B       #five,D2
00001F88  6700 0064               1643              BEQ         opSUBW              ; Word in opmode
00001F8C  B43C 0006               1644              CMP.B       #six,D2
00001F90  6700 00B6               1645              BEQ         opSUBL              ; Long in opmode
00001F94                          1646              
00001F94  43F9 00003D75           1647  opSUBB      LEA         dispByte,A1
00001F9A  103C 000E               1648              MOVE.B      #14,D0
00001F9E  4E4F                    1649              TRAP        #15
00001FA0                          1650              
00001FA0  43F9 00003CDB           1651              LEA         space, A1           ; Display space
00001FA6  103C 000E               1652              MOVE.B      #14, D0             ; command for trap call to display message
00001FAA  4E4F                    1653              TRAP        #15                 ; trap call         
00001FAC                          1654              
00001FAC  1401                    1655              MOVE.B      D1,D2
00001FAE  E642                    1656              ASR         #3,D2
00001FB0  C47C 0007               1657              AND         #$07,D2
00001FB4  3601                    1658              MOVE.W      D1,D3
00001FB6  C67C 0007               1659              AND         #$07,D3
00001FBA  4EB9 00002EF8           1660              JSR         printEA         ; Determines the "left" operand register
00001FC0                          1661              
00001FC0  43F9 00003CE2           1662              LEA         comma, A1           ; Display space
00001FC6  103C 000E               1663              MOVE.B      #14, D0             ; command for trap call to display message
00001FCA  4E4F                    1664              TRAP        #15                 ; trap call
00001FCC                          1665              
00001FCC  4242                    1666              CLR         D2
00001FCE  3601                    1667              MOVE.W      D1,D3
00001FD0  E043                    1668              ASR         #eight,D3
00001FD2  E243                    1669              ASR         #one,D3
00001FD4  C67C 0007               1670              AND         #$07,D3
00001FD8  4EB9 00002EF8           1671              JSR         printEA
00001FDE                          1672              
00001FDE  43F9 00003CD7           1673              LEA         newLine,A1
00001FE4  103C 000E               1674              MOVE.B      #14,D0
00001FE8  4E4F                    1675              TRAP        #15
00001FEA                          1676              
00001FEA  6000 F054               1677              BRA         LOOP
00001FEE                          1678              
00001FEE                          1679              
00001FEE  43F9 00003D78           1680  opSUBW      LEA         dispWord,A1
00001FF4  103C 000E               1681              MOVE.B      #14,D0
00001FF8  4E4F                    1682              TRAP        #15
00001FFA                          1683              
00001FFA  43F9 00003CDB           1684              LEA         space, A1           ; Display space
00002000  103C 000E               1685              MOVE.B      #14, D0             ; command for trap call to display message
00002004  4E4F                    1686              TRAP        #15                 ; trap call         
00002006                          1687              
00002006  1401                    1688              MOVE.B      D1,D2
00002008  E642                    1689              ASR         #3,D2
0000200A  C47C 0007               1690              AND         #$07,D2
0000200E  3601                    1691              MOVE.W      D1,D3
00002010  C67C 0007               1692              AND         #$07,D3
00002014  4EB9 00002EF8           1693              JSR         printEA         ; Determines the "left" operand register
0000201A                          1694              
0000201A  43F9 00003CE2           1695              LEA         comma, A1           ; Display space
00002020  103C 000E               1696              MOVE.B      #14, D0             ; command for trap call to display message
00002024  4E4F                    1697              TRAP        #15                 ; trap call
00002026                          1698              
00002026  4242                    1699              CLR         D2
00002028  3601                    1700              MOVE.W      D1,D3
0000202A  E043                    1701              ASR         #eight,D3
0000202C  E243                    1702              ASR         #one,D3
0000202E  C67C 0007               1703              AND         #$07,D3
00002032  4EB9 00002EF8           1704              JSR         printEA
00002038                          1705              
00002038  43F9 00003CD7           1706              LEA         newLine,A1
0000203E  103C 000E               1707              MOVE.B      #14,D0
00002042  4E4F                    1708              TRAP        #15
00002044                          1709              
00002044  6000 EFFA               1710              BRA         LOOP
00002048                          1711              
00002048  43F9 00003D7B           1712  opSUBL      LEA         dispLong,A1
0000204E  103C 000E               1713              MOVE.B      #14,D0
00002052  4E4F                    1714              TRAP        #15
00002054                          1715              
00002054  43F9 00003CDB           1716              LEA         space, A1           ; Display space
0000205A  103C 000E               1717              MOVE.B      #14, D0             ; command for trap call to display message
0000205E  4E4F                    1718              TRAP        #15                 ; trap call         
00002060                          1719              
00002060  1401                    1720              MOVE.B      D1,D2
00002062  E642                    1721              ASR         #3,D2
00002064  C47C 0007               1722              AND         #$07,D2
00002068  3601                    1723              MOVE.W      D1,D3
0000206A  C67C 0007               1724              AND         #$07,D3
0000206E  4EB9 00002EF8           1725              JSR         printEA         ; Determines the "left" operand register
00002074                          1726              
00002074  43F9 00003CE2           1727              LEA         comma, A1           ; Display space
0000207A  103C 000E               1728              MOVE.B      #14, D0             ; command for trap call to display message
0000207E  4E4F                    1729              TRAP        #15                 ; trap call
00002080                          1730              
00002080  4242                    1731              CLR         D2
00002082  3601                    1732              MOVE.W      D1,D3
00002084  E043                    1733              ASR         #eight,D3
00002086  E243                    1734              ASR         #one,D3
00002088  C67C 0007               1735              AND         #$07,D3
0000208C  4EB9 00002EF8           1736              JSR         printEA
00002092                          1737              
00002092  43F9 00003CD7           1738              LEA         newLine,A1
00002098  103C 000E               1739              MOVE.B      #14,D0
0000209C  4E4F                    1740              TRAP        #15
0000209E                          1741              
0000209E  6000 EFA0               1742              BRA         LOOP
000020A2                          1743              
000020A2                          1744              
000020A2                          1745              
000020A2                          1746  ***********************************************************************************************************
000020A2                          1747  *
000020A2                          1748  *               BRA OPCODE
000020A2                          1749  *
000020A2                          1750  ***********************************************************************************************************
000020A2                          1751              
000020A2  43F9 00003D20           1752  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
000020A8  103C 000E               1753          MOVE.B      #14, D0             ; command for trap call to display message
000020AC  4E4F                    1754          TRAP        #15                 ; trap call
000020AE                          1755          
000020AE  4242                    1756          CLR         D2
000020B0  4243                    1757          CLR         D3      
000020B2                          1758  
000020B2  43F9 00003CDB           1759          LEA         space,A1
000020B8  103C 000E               1760          MOVE.B      #14,D0
000020BC  4E4F                    1761          TRAP        #15
000020BE                          1762          
000020BE  143C 0007               1763          MOVE.B      #seven,D2
000020C2  1218                    1764          MOVE.B      (A0)+,D1
000020C4  4EB9 00002EF8           1765          JSR         printEA
000020CA                          1766          
000020CA  43F9 00003CD7           1767          LEA         newLine, A1           ; create new line
000020D0  103C 000E               1768          MOVE.B      #14, D0             ; command for trap call to display message
000020D4  4E4F                    1769          TRAP        #15                 ; trap call
000020D6                          1770  
000020D6  6000 EF68               1771          BRA         LOOP
000020DA                          1772          
000020DA                          1773          
000020DA  43F9 00003D24           1774  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
000020E0  103C 000E               1775          MOVE.B      #14, D0             ; command for trap call to display message
000020E4  4E4F                    1776          TRAP        #15                 ; trap call
000020E6                          1777          
000020E6  4242                    1778          CLR         D2
000020E8  4243                    1779          CLR         D3      
000020EA                          1780  
000020EA  43F9 00003CDB           1781          LEA         space,A1
000020F0  103C 000E               1782          MOVE.B      #14,D0
000020F4  4E4F                    1783          TRAP        #15
000020F6                          1784          
000020F6  143C 0007               1785          MOVE.B      #seven,D2
000020FA  1218                    1786          MOVE.B      (A0)+,D1
000020FC  4EB9 00002EF8           1787          JSR         printEA
00002102                          1788          
00002102  43F9 00003CD7           1789          LEA         newLine, A1           ; create new line
00002108  103C 000E               1790          MOVE.B      #14, D0             ; command for trap call to display message
0000210C  4E4F                    1791          TRAP        #15                 ; trap call
0000210E                          1792  
0000210E  43F9 00003D28           1793  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00002114  103C 000E               1794          MOVE.B      #14, D0             ; command for trap call to display message
00002118  4E4F                    1795          TRAP        #15                 ; trap call
0000211A                          1796          
0000211A  4242                    1797          CLR         D2
0000211C  4243                    1798          CLR         D3      
0000211E                          1799  
0000211E  43F9 00003CDB           1800          LEA         space,A1
00002124  103C 000E               1801          MOVE.B      #14,D0
00002128  4E4F                    1802          TRAP        #15
0000212A                          1803          
0000212A  143C 0007               1804          MOVE.B      #seven,D2
0000212E  1218                    1805          MOVE.B      (A0)+,D1
00002130  4EB9 00002EF8           1806          JSR         printEA
00002136                          1807          
00002136  43F9 00003CD7           1808          LEA         newLine, A1           ; create new line
0000213C  103C 000E               1809          MOVE.B      #14, D0             ; command for trap call to display message
00002140  4E4F                    1810          TRAP        #15                 ; trap call
00002142                          1811  
00002142  43F9 00003D2C           1812  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00002148  103C 000E               1813          MOVE.B      #14, D0             ; command for trap call to display message
0000214C  4E4F                    1814          TRAP        #15                 ; trap call
0000214E                          1815          
0000214E  4242                    1816          CLR         D2
00002150  4243                    1817          CLR         D3      
00002152                          1818  
00002152  43F9 00003CDB           1819          LEA         space,A1
00002158  103C 000E               1820          MOVE.B      #14,D0
0000215C  4E4F                    1821          TRAP        #15
0000215E                          1822          
0000215E  143C 0007               1823          MOVE.B      #seven,D2
00002162  1218                    1824          MOVE.B      (A0)+,D1
00002164  4EB9 00002EF8           1825          JSR         printEA
0000216A                          1826          
0000216A  43F9 00003CD7           1827          LEA         newLine, A1           ; create new line
00002170  103C 000E               1828          MOVE.B      #14, D0             ; command for trap call to display message
00002174  4E4F                    1829          TRAP        #15                 ; trap call
00002176                          1830  
00002176  43F9 00003D30           1831  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
0000217C  103C 000E               1832          MOVE.B      #14, D0             ; command for trap call to display message
00002180  4E4F                    1833          TRAP        #15                 ; trap call
00002182                          1834          
00002182  4242                    1835          CLR         D2
00002184  4243                    1836          CLR         D3      
00002186                          1837  
00002186  43F9 00003CDB           1838          LEA         space,A1
0000218C  103C 000E               1839          MOVE.B      #14,D0
00002190  4E4F                    1840          TRAP        #15
00002192                          1841          
00002192  143C 0007               1842          MOVE.B      #seven,D2
00002196  1218                    1843          MOVE.B      (A0)+,D1
00002198  4EB9 00002EF8           1844          JSR         printEA
0000219E                          1845          
0000219E  43F9 00003CD7           1846          LEA         newLine, A1           ; create new line
000021A4  103C 000E               1847          MOVE.B      #14, D0             ; command for trap call to display message
000021A8  4E4F                    1848          TRAP        #15                 ; trap call
000021AA                          1849          
000021AA                          1850          
000021AA                          1851          ***********************************************************************************************************
000021AA                          1852  *
000021AA                          1853  *               SUBQ OPCODE
000021AA                          1854  *
000021AA                          1855  ***********************************************************************************************************
000021AA                          1856  
000021AA                          1857  opSUBQ      
000021AA  43F9 00003D1B           1858              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
000021B0  103C 000E               1859              MOVE.B      #14, D0             ; command for trap call to display message
000021B4  4E4F                    1860              TRAP        #15                 ; trap call
000021B6                          1861              
000021B6  1401                    1862              MOVE.B      D1,D2
000021B8  EE42                    1863              ASR         #seven,D2           ; Move bits 7 places over to find size
000021BA  C47C 0007               1864              AND         #$07,D2
000021BE                          1865              
000021BE                          1866              ; Find size bits
000021BE  B43C 0000               1867              CMP.B       #zero,D2
000021C2  6700 0012               1868              BEQ         opSUBQB             ; Byte in size
000021C6  B43C 0001               1869              CMP.B       #one,D2
000021CA  6700 0024               1870              BEQ         opSUBQW             ; Word in size
000021CE  B43C 0002               1871              CMP.B       #two,D2
000021D2  6700 0036               1872              BEQ         opSUBQL             ; Long in size
000021D6                          1873              
000021D6                          1874              
000021D6  43F9 00003D75           1875  opSUBQB     LEA         dispByte,A1
000021DC  103C 000E               1876              MOVE.B      #14,D0
000021E0  4E4F                    1877              TRAP        #15 
000021E2                          1878              
000021E2  E141                    1879              ASL         #eight,D1
000021E4  1218                    1880              MOVE.B      (A0)+,D1
000021E6  4EB9 00002E20           1881              JSR         PrntImm
000021EC                          1882              
000021EC  6000 EE52               1883              BRA         LOOP
000021F0                          1884              
000021F0  43F9 00003D78           1885  opSUBQW     LEA         dispWord,A1
000021F6  103C 000E               1886              MOVE.B      #14,D0
000021FA  4E4F                    1887              TRAP        #15
000021FC                          1888              
000021FC  E141                    1889              ASL         #eight,D1
000021FE  1218                    1890              MOVE.B      (A0)+,D1
00002200  4EB9 00002E20           1891              JSR         PrntImm
00002206                          1892              
00002206  6000 EE38               1893              BRA         LOOP
0000220A                          1894              
0000220A  43F9 00003D7B           1895  opSUBQL     LEA         dispLong,A1
00002210  103C 000E               1896              MOVE.B      #14,D0
00002214  4E4F                    1897              TRAP        #15
00002216                          1898              
00002216  E141                    1899              ASL         #eight,D1
00002218  1218                    1900              MOVE.B      (A0)+,D1
0000221A                          1901              
0000221A  4246                    1902              CLR         D6
0000221C  1C3C 0001               1903              MOVE.B      #1,D6
00002220                          1904              
00002220  4EB9 00002E20           1905              JSR         PrntImm         
00002226                          1906              
00002226  6000 EE18               1907              BRA         LOOP            ; trap call
0000222A                          1908  
0000222A  43F9 00003D48           1909  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002230  103C 000E               1910          MOVE.B      #14, D0             ; command for trap call to display message
00002234  4E4F                    1911          TRAP        #15                 ; trap call
00002236  43F9 00003CDB           1912          LEA         space, A1           ; create spaces
0000223C  103C 000E               1913          MOVE.B      #14, D0             ; command for trap call to display message
00002240  4E4F                    1914          TRAP        #15                 ; trap call
00002242                          1915          
00002242  E141                    1916          ASL         #eight, D1
00002244  1218                    1917          MOVE.B      (A0)+, D1
00002246                          1918          
00002246  4242                    1919          CLR         D2
00002248  4243                    1920          CLR         D3
0000224A  1401                    1921          MOVE.B      D1, D2
0000224C  E642                    1922          ASR         #three, D2
0000224E  C47C 0007               1923          AND         #seven, D2
00002252  1601                    1924          MOVE.B      D1, D3
00002254  C67C 0007               1925          AND         #seven, D3
00002258                          1926          
00002258  4EB9 00002EF8           1927          JSR         printEA
0000225E                          1928          
0000225E  43F9 00003CE2           1929          LEA         comma, A1           ; create comma
00002264  103C 000E               1930          MOVE.B      #14, D0             ; command for trap call to display message
00002268  4E4F                    1931          TRAP        #15                 ; trap call
0000226A                          1932  
0000226A  4242                    1933          CLR         D2
0000226C  4243                    1934          CLR         D3
0000226E  3601                    1935          MOVE.W      D1, D3
00002270  E043                    1936          ASR         #eight, D3
00002272  E243                    1937          ASR         #one, D3
00002274  C67C 0007               1938          AND         #seven, D3
00002278                          1939  
00002278  4EB9 00002EF8           1940          JSR         printEA
0000227E                          1941          
0000227E  43F9 00003CD7           1942          LEA         newLine, A1           ; create new line
00002284  103C 000E               1943          MOVE.B      #14, D0             ; command for trap call to display message
00002288  4E4F                    1944          TRAP        #15                 ; trap call
0000228A                          1945          
0000228A  6000 EDB4               1946          BRA         LOOP
0000228E                          1947          
0000228E  43F9 00003D4D           1948  opADDB  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002294  103C 000E               1949          MOVE.B      #14, D0             ; command for trap call to display message
00002298  4E4F                    1950          TRAP        #15                 ; trap call
0000229A                          1951          
0000229A  43F9 00003D75           1952          LEA         dispByte, A1        ; display byte
000022A0  103C 000E               1953          MOVE.B      #14, D0             ; command for trap call to display message
000022A4  4E4F                    1954          TRAP        #15                 ; trap call
000022A6  43F9 00003CDB           1955          LEA         space, A1           ; create spaces
000022AC  103C 000E               1956          MOVE.B      #14, D0             ; command for trap call to display message
000022B0  4E4F                    1957          TRAP        #15                 ; trap call
000022B2                          1958          
000022B2  4242                    1959          CLR         D2
000022B4  4243                    1960          CLR         D3
000022B6  1401                    1961          MOVE.B      D1, D2
000022B8  E642                    1962          ASR         #three, D2
000022BA  C47C 0007               1963          AND         #seven, D2
000022BE  1601                    1964          MOVE.B      D1, D3
000022C0  C67C 0007               1965          AND         #seven, D3
000022C4                          1966          
000022C4  4EB9 00002EF8           1967          JSR         printEA
000022CA                          1968          
000022CA  43F9 00003CE2           1969          LEA         comma, A1           ; create comma
000022D0  103C 000E               1970          MOVE.B      #14, D0             ; command for trap call to display message
000022D4  4E4F                    1971          TRAP        #15                 ; trap call
000022D6                          1972  
000022D6  4242                    1973          CLR         D2
000022D8  4243                    1974          CLR         D3
000022DA  3601                    1975          MOVE.W      D1, D3
000022DC  E043                    1976          ASR         #eight, D3
000022DE  E243                    1977          ASR         #one, D3
000022E0  C67C 0007               1978          AND         #seven, D3
000022E4                          1979  
000022E4  4EB9 00002EF8           1980          JSR         printEA
000022EA                          1981          
000022EA  43F9 00003CD7           1982          LEA         newLine, A1           ; create new line
000022F0  103C 000E               1983          MOVE.B      #14, D0             ; command for trap call to display message
000022F4  4E4F                    1984          TRAP        #15                 ; trap call
000022F6                          1985          
000022F6  6000 ED48               1986          BRA         LOOP
000022FA                          1987          
000022FA  43F9 00003D4D           1988  opADDW  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002300  103C 000E               1989          MOVE.B      #14, D0             ; command for trap call to display message
00002304  4E4F                    1990          TRAP        #15                 ; trap call
00002306                          1991  
00002306  43F9 00003D78           1992          LEA         dispWord, A1        ; display word
0000230C  103C 000E               1993          MOVE.B      #14, D0             ; command for trap call to display message
00002310  4E4F                    1994          TRAP        #15                 ; trap call
00002312  43F9 00003CDB           1995          LEA         space, A1           ; create spaces
00002318  103C 000E               1996          MOVE.B      #14, D0             ; command for trap call to display message
0000231C  4E4F                    1997          TRAP        #15                 ; trap call
0000231E                          1998          
0000231E  4242                    1999          CLR         D2
00002320  4243                    2000          CLR         D3
00002322  1401                    2001          MOVE.B      D1, D2
00002324  E642                    2002          ASR         #three, D2
00002326  C47C 0007               2003          AND         #seven, D2
0000232A  1601                    2004          MOVE.B      D1, D3
0000232C  C67C 0007               2005          AND         #seven, D3
00002330                          2006          
00002330  4EB9 00002EF8           2007          JSR         printEA
00002336                          2008          
00002336  43F9 00003CE2           2009          LEA         comma, A1           ; create comma
0000233C  103C 000E               2010          MOVE.B      #14, D0             ; command for trap call to display message
00002340  4E4F                    2011          TRAP        #15                 ; trap call
00002342                          2012  
00002342  4242                    2013          CLR         D2
00002344  4243                    2014          CLR         D3
00002346  3601                    2015          MOVE.W      D1, D3
00002348  E043                    2016          ASR         #eight, D3
0000234A  E243                    2017          ASR         #one, D3
0000234C  C67C 0007               2018          AND         #seven, D3
00002350                          2019  
00002350  4EB9 00002EF8           2020          JSR         printEA
00002356                          2021          
00002356  43F9 00003CD7           2022          LEA         newLine, A1           ; create new line
0000235C  103C 000E               2023          MOVE.B      #14, D0             ; command for trap call to display message
00002360  4E4F                    2024          TRAP        #15                 ; trap call
00002362                          2025          
00002362  6000 ECDC               2026          BRA         LOOP
00002366                          2027          
00002366  43F9 00003D4D           2028  opADDL  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
0000236C  103C 000E               2029          MOVE.B      #14, D0             ; command for trap call to display message
00002370  4E4F                    2030          TRAP        #15                 ; trap call
00002372                          2031          
00002372  43F9 00003D7B           2032          LEA         dispLong, A1        ; display long
00002378  103C 000E               2033          MOVE.B      #14, D0             ; command for trap call to display message
0000237C  4E4F                    2034          TRAP        #15                 ; trap call
0000237E  43F9 00003CDB           2035          LEA         space, A1           ; create spaces
00002384  103C 000E               2036          MOVE.B      #14, D0             ; command for trap call to display message
00002388  4E4F                    2037          TRAP        #15                 ; trap call
0000238A                          2038          
0000238A  4242                    2039          CLR         D2
0000238C  4243                    2040          CLR         D3
0000238E  1401                    2041          MOVE.B      D1, D2
00002390  E642                    2042          ASR         #three, D2
00002392  C47C 0007               2043          AND         #seven, D2
00002396  1601                    2044          MOVE.B      D1, D3
00002398  C67C 0007               2045          AND         #seven, D3
0000239C                          2046          
0000239C  4246                    2047          CLR         D6
0000239E  1C3C 0001               2048          MOVE.B      #1, D6
000023A2                          2049          
000023A2  4EB9 00002EF8           2050          JSR         printEA
000023A8  4246                    2051          CLR         D6
000023AA                          2052          
000023AA  43F9 00003CE2           2053          LEA         comma, A1           ; create comma
000023B0  103C 000E               2054          MOVE.B      #14, D0             ; command for trap call to display message
000023B4  4E4F                    2055          TRAP        #15                 ; trap call
000023B6                          2056  
000023B6  4242                    2057          CLR         D2
000023B8  4243                    2058          CLR         D3
000023BA  3601                    2059          MOVE.W      D1, D3
000023BC  E043                    2060          ASR         #eight, D3
000023BE  E243                    2061          ASR         #one, D3
000023C0  C67C 0007               2062          AND         #seven, D3
000023C4                          2063  
000023C4  4EB9 00002EF8           2064          JSR         printEA
000023CA                          2065          
000023CA  43F9 00003CD7           2066          LEA         newLine, A1           ; create new line
000023D0  103C 000E               2067          MOVE.B      #14, D0             ; command for trap call to display message
000023D4  4E4F                    2068          TRAP        #15                 ; trap call
000023D6                          2069          
000023D6  6000 EC68               2070          BRA         LOOP
000023DA                          2071  
000023DA  43F9 00003D51           2072  opADDAW LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
000023E0  103C 000E               2073          MOVE.B      #14, D0             ; command for trap call to display message
000023E4  4E4F                    2074          TRAP        #15                 ; trap call
000023E6                          2075          
000023E6  43F9 00003D78           2076          LEA         dispWord, A1        ; display word
000023EC  103C 000E               2077          MOVE.B      #14, D0             ; command for trap call to display message
000023F0  4E4F                    2078          TRAP        #15                 ; trap call
000023F2  43F9 00003CDB           2079          LEA         space, A1           ; create spaces
000023F8  103C 000E               2080          MOVE.B      #14, D0             ; command for trap call to display message
000023FC  4E4F                    2081          TRAP        #15                 ; trap call
000023FE                          2082          
000023FE  4242                    2083          CLR         D2
00002400  4243                    2084          CLR         D3
00002402  1401                    2085          MOVE.B      D1, D2
00002404  E642                    2086          ASR         #three, D2
00002406  C47C 0007               2087          AND         #seven, D2
0000240A  1601                    2088          MOVE.B      D1, D3
0000240C  C67C 0007               2089          AND         #seven, D3
00002410                          2090          
00002410  4EB9 00002EF8           2091          JSR         printEA
00002416                          2092          
00002416  43F9 00003CE2           2093          LEA         comma, A1           ; create comma
0000241C  103C 000E               2094          MOVE.B      #14, D0             ; command for trap call to display message
00002420  4E4F                    2095          TRAP        #15                 ; trap call
00002422                          2096  
00002422  4242                    2097          CLR         D2
00002424  4243                    2098          CLR         D3
00002426  143C 0001               2099          MOVE.B      #one, D2
0000242A  3601                    2100          MOVE.W      D1, D3
0000242C  E043                    2101          ASR         #eight, D3
0000242E  E243                    2102          ASR         #one, D3
00002430  C67C 0007               2103          AND         #seven, D3
00002434                          2104  
00002434  4EB9 00002EF8           2105          JSR         printEA
0000243A                          2106          
0000243A  43F9 00003CD7           2107          LEA         newLine, A1           ; create new line
00002440  103C 000E               2108          MOVE.B      #14, D0             ; command for trap call to display message
00002444  4E4F                    2109          TRAP        #15                 ; trap call
00002446                          2110          
00002446  6000 EBF8               2111          BRA         LOOP
0000244A                          2112  
0000244A  43F9 00003D51           2113  opADDAL LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002450  103C 000E               2114          MOVE.B      #14, D0             ; command for trap call to display message
00002454  4E4F                    2115          TRAP        #15                 ; trap call
00002456                          2116  
00002456  43F9 00003D7B           2117          LEA         dispLong, A1        ; display long
0000245C  103C 000E               2118          MOVE.B      #14, D0             ; command for trap call to display message
00002460  4E4F                    2119          TRAP        #15                 ; trap call
00002462  43F9 00003CDB           2120          LEA         space, A1           ; create spaces
00002468  103C 000E               2121          MOVE.B      #14, D0             ; command for trap call to display message
0000246C  4E4F                    2122          TRAP        #15                 ; trap call
0000246E                          2123          
0000246E  4242                    2124          CLR         D2
00002470  4243                    2125          CLR         D3
00002472  1401                    2126          MOVE.B      D1, D2
00002474  E642                    2127          ASR         #three, D2
00002476  C47C 0007               2128          AND         #seven, D2
0000247A  1601                    2129          MOVE.B      D1, D3
0000247C  C67C 0007               2130          AND         #seven, D3
00002480                          2131          
00002480  4EB9 00002EF8           2132          JSR         printEA
00002486                          2133          
00002486  43F9 00003CE2           2134          LEA         comma, A1           ; create comma
0000248C  103C 000E               2135          MOVE.B      #14, D0             ; command for trap call to display message
00002490  4E4F                    2136          TRAP        #15                 ; trap call
00002492                          2137  
00002492  4242                    2138          CLR         D2
00002494  4243                    2139          CLR         D3
00002496  143C 0001               2140          MOVE.B      #one, D2
0000249A  3601                    2141          MOVE.W      D1, D3
0000249C  E043                    2142          ASR         #eight, D3
0000249E  E243                    2143          ASR         #one, D3
000024A0  C67C 0007               2144          AND         #seven, D3
000024A4                          2145  
000024A4  4EB9 00002EF8           2146          JSR         printEA
000024AA                          2147          
000024AA  43F9 00003CD7           2148          LEA         newLine, A1           ; create new line
000024B0  103C 000E               2149          MOVE.B      #14, D0             ; command for trap call to display message
000024B4  4E4F                    2150          TRAP        #15                 ; trap call
000024B6                          2151          
000024B6  6000 EB88               2152          BRA         LOOP
000024BA                          2153          
000024BA  43F9 00003D62           2154  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024C0  103C 000E               2155          MOVE.B      #14, D0             ; command for trap call to display message
000024C4  4E4F                    2156          TRAP        #15                 ; trap call
000024C6                          2157          
000024C6  43F9 00003D78           2158          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024CC  103C 000E               2159          MOVE.B      #14, D0             ; command for trap call to display message
000024D0  4E4F                    2160          TRAP        #15                 ; trap call
000024D2                          2161          
000024D2  43F9 00003CDB           2162          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024D8  103C 000E               2163          MOVE.B      #14, D0             ; command for trap call to display message
000024DC  4E4F                    2164          TRAP        #15                 ; trap call
000024DE                          2165          
000024DE  4242                    2166          CLR         D2
000024E0  4243                    2167          CLR         D3
000024E2  1401                    2168          MOVE.B      D1,D2
000024E4  1601                    2169          MOVE.B      D1,D3
000024E6                          2170          
000024E6  E602                    2171          ASR.B       #three, D2
000024E8  C47C 0007               2172          AND         #seven, D2
000024EC  C67C 0007               2173          AND         #seven, D3        
000024F0                          2174          
000024F0  4EB9 00002EF8           2175          JSR         printEA
000024F6                          2176          
000024F6  43F9 00003CD7           2177          LEA         newLine, A1           ; Display space
000024FC  103C 000E               2178          MOVE.B      #14, D0             ; command for trap call to display message
00002500  4E4F                    2179          TRAP        #15                 ; trap call
00002502                          2180          
00002502  6000 EB3C               2181          BRA         LOOP
00002506                          2182  
00002506  43F9 00003D5E           2183  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000250C  103C 000E               2184          MOVE.B      #14, D0             ; command for trap call to display message
00002510  4E4F                    2185          TRAP        #15                 ; trap call
00002512                          2186          
00002512  43F9 00003D78           2187          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002518  103C 000E               2188          MOVE.B      #14, D0             ; command for trap call to display message
0000251C  4E4F                    2189          TRAP        #15                 ; trap call
0000251E                          2190          
0000251E  43F9 00003CDB           2191          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002524  103C 000E               2192          MOVE.B      #14, D0             ; command for trap call to display message
00002528  4E4F                    2193          TRAP        #15                 ; trap call
0000252A                          2194          
0000252A  4242                    2195          CLR         D2
0000252C  4243                    2196          CLR         D3
0000252E  1401                    2197          MOVE.B      D1,D2
00002530  1601                    2198          MOVE.B      D1,D3
00002532                          2199          
00002532  E602                    2200          ASR.B       #three, D2
00002534  C47C 0007               2201          AND         #seven, D2
00002538  C67C 0007               2202          AND         #seven, D3        
0000253C                          2203          
0000253C  4EB9 00002EF8           2204          JSR         printEA
00002542                          2205          
00002542  43F9 00003CD7           2206          LEA         newLine, A1           ; Display space
00002548  103C 000E               2207          MOVE.B      #14, D0             ; command for trap call to display message
0000254C  4E4F                    2208          TRAP        #15                 ; trap call
0000254E                          2209          
0000254E  6000 EAF0               2210          BRA         LOOP
00002552                          2211  
00002552  43F9 00003D5A           2212  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00002558  103C 000E               2213          MOVE.B      #14, D0             ; command for trap call to display message
0000255C  4E4F                    2214          TRAP        #15                 ; trap call
0000255E                          2215          
0000255E  43F9 00003D78           2216          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002564  103C 000E               2217          MOVE.B      #14, D0             ; command for trap call to display message
00002568  4E4F                    2218          TRAP        #15                 ; trap call
0000256A                          2219          
0000256A  43F9 00003CDB           2220          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002570  103C 000E               2221          MOVE.B      #14, D0             ; command for trap call to display message
00002574  4E4F                    2222          TRAP        #15                 ; trap call
00002576                          2223          
00002576  4242                    2224          CLR         D2
00002578  4243                    2225          CLR         D3
0000257A  1401                    2226          MOVE.B      D1,D2
0000257C  1601                    2227          MOVE.B      D1,D3
0000257E                          2228          
0000257E  E602                    2229          ASR.B       #three, D2
00002580  C47C 0007               2230          AND         #seven, D2
00002584  C67C 0007               2231          AND         #seven, D3        
00002588                          2232          
00002588  4EB9 00002EF8           2233          JSR         printEA
0000258E                          2234          
0000258E  43F9 00003CD7           2235          LEA         newLine, A1           ; Display space
00002594  103C 000E               2236          MOVE.B      #14, D0             ; command for trap call to display message
00002598  4E4F                    2237          TRAP        #15                 ; trap call
0000259A                          2238          
0000259A  6000 EAA4               2239          BRA         LOOP
0000259E                          2240  
0000259E  43F9 00003D56           2241  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
000025A4  103C 000E               2242          MOVE.B      #14, D0             ; command for trap call to display message
000025A8  4E4F                    2243          TRAP        #15                 ; trap call
000025AA                          2244          
000025AA  43F9 00003D78           2245          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000025B0  103C 000E               2246          MOVE.B      #14, D0             ; command for trap call to display message
000025B4  4E4F                    2247          TRAP        #15                 ; trap call
000025B6                          2248          
000025B6  43F9 00003CDB           2249          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
000025BC  103C 000E               2250          MOVE.B      #14, D0             ; command for trap call to display message
000025C0  4E4F                    2251          TRAP        #15                 ; trap call
000025C2                          2252          
000025C2  4242                    2253          CLR         D2
000025C4  4243                    2254          CLR         D3
000025C6  1401                    2255          MOVE.B      D1,D2
000025C8  1601                    2256          MOVE.B      D1,D3
000025CA                          2257          
000025CA  E602                    2258          ASR.B       #three, D2
000025CC  C47C 0007               2259          AND         #seven, D2
000025D0  C67C 0007               2260          AND         #seven, D3        
000025D4                          2261          
000025D4  4EB9 00002EF8           2262          JSR         printEA
000025DA                          2263          
000025DA  43F9 00003CD7           2264          LEA         newLine, A1           ; Display space
000025E0  103C 000E               2265          MOVE.B      #14, D0             ; command for trap call to display message
000025E4  4E4F                    2266          TRAP        #15                 ; trap call
000025E6                          2267          
000025E6  6000 EA58               2268          BRA         LOOP
000025EA                          2269  
000025EA  43F9 00003D6A           2270  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
000025F0  103C 000E               2271          MOVE.B      #14, D0             ; command for trap call to display message
000025F4  4E4F                    2272          TRAP        #15                 ; trap call
000025F6                          2273          
000025F6  43F9 00003D78           2274          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000025FC  103C 000E               2275          MOVE.B      #14, D0             ; command for trap call to display message
00002600  4E4F                    2276          TRAP        #15                 ; trap call
00002602                          2277          
00002602  43F9 00003CDB           2278          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002608  103C 000E               2279          MOVE.B      #14, D0             ; command for trap call to display message
0000260C  4E4F                    2280          TRAP        #15                 ; trap call
0000260E                          2281          
0000260E  4242                    2282          CLR         D2
00002610  4243                    2283          CLR         D3
00002612  1401                    2284          MOVE.B      D1,D2
00002614  1601                    2285          MOVE.B      D1,D3
00002616                          2286          
00002616  E602                    2287          ASR.B       #three, D2
00002618  C47C 0007               2288          AND         #seven, D2
0000261C  C67C 0007               2289          AND         #seven, D3        
00002620                          2290          
00002620  4EB9 00002EF8           2291          JSR         printEA
00002626                          2292          
00002626  43F9 00003CD7           2293          LEA         newLine, A1           ; Display space
0000262C  103C 000E               2294          MOVE.B      #14, D0             ; command for trap call to display message
00002630  4E4F                    2295          TRAP        #15                 ; trap call
00002632                          2296          
00002632  6000 EA0C               2297          BRA         LOOP
00002636                          2298  
00002636  43F9 00003D66           2299  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
0000263C  103C 000E               2300          MOVE.B      #14, D0             ; command for trap call to display message
00002640  4E4F                    2301          TRAP        #15                 ; trap call
00002642                          2302          
00002642  43F9 00003D78           2303          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002648  103C 000E               2304          MOVE.B      #14, D0             ; command for trap call to display message
0000264C  4E4F                    2305          TRAP        #15                 ; trap call
0000264E                          2306          
0000264E  43F9 00003CDB           2307          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002654  103C 000E               2308          MOVE.B      #14, D0             ; command for trap call to display message
00002658  4E4F                    2309          TRAP        #15                 ; trap call
0000265A                          2310          
0000265A  4242                    2311          CLR         D2
0000265C  4243                    2312          CLR         D3
0000265E  1401                    2313          MOVE.B      D1,D2
00002660  1601                    2314          MOVE.B      D1,D3
00002662                          2315          
00002662  E602                    2316          ASR.B       #three, D2
00002664  C47C 0007               2317          AND         #seven, D2
00002668  C67C 0007               2318          AND         #seven, D3        
0000266C                          2319          
0000266C  4EB9 00002EF8           2320          JSR         printEA
00002672                          2321          
00002672  43F9 00003CD7           2322          LEA         newLine, A1           ; Display space
00002678  103C 000E               2323          MOVE.B      #14, D0             ; command for trap call to display message
0000267C  4E4F                    2324          TRAP        #15                 ; trap call
0000267E                          2325          
0000267E  6000 E9C0               2326          BRA         LOOP
00002682                          2327          
00002682  4242                    2328  memSB   CLR         D2
00002684  1401                    2329          MOVE.B      D1,D2
00002686  E642                    2330          ASR         #three, D2
00002688                          2331          
00002688  C47C 0007               2332          AND         #$07, D2
0000268C                          2333          
0000268C  B43C 0000               2334          CMP.B       #zero, D2
00002690  6700 002E               2335          BEQ         opASBI
00002694  B43C 0004               2336          CMP.B       #four, D2
00002698  6700 0088               2337          BEQ         opASBR
0000269C  B43C 0001               2338          CMP.B       #one, D2
000026A0  6700 00E2               2339          BEQ         opLSBI
000026A4  B43C 0005               2340          CMP.B       #five, D2
000026A8  6700 013C               2341          BEQ         opLSBR
000026AC  B43C 0003               2342          CMP.B       #three, D2
000026B0  6700 0196               2343          BEQ         opROBI
000026B4  B43C 0007               2344          CMP.B       #seven, D2
000026B8  6700 01F0               2345          BEQ         opROBR
000026BC  6000 15B4               2346          BRA         printInvalid
000026C0                          2347          
000026C0  4242                    2348  opASBI  CLR         D2
000026C2  3401                    2349          MOVE.W      D1, D2
000026C4  E042                    2350          ASR         #eight, D2
000026C6  C47C 0001               2351          AND         #$01, D2
000026CA                          2352      
000026CA  B43C 0000               2353          CMP.B       #zero, D2
000026CE  6700 000E               2354          BEQ         opASRBI
000026D2  B43C 0001               2355          CMP.B       #one, D2
000026D6  6700 0028               2356          BEQ         opASLBI
000026DA  6000 1596               2357          BRA         printInvalid
000026DE                          2358          
000026DE  43F9 00003D5E           2359  opASRBI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000026E4  103C 000E               2360          MOVE.B      #14, D0             ; command for trap call to display message
000026E8  4E4F                    2361          TRAP        #15                 ; trap call
000026EA                          2362  
000026EA  43F9 00003D75           2363          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000026F0  103C 000E               2364          MOVE.B      #14, D0             ; command for trap call to display message
000026F4  4E4F                    2365          TRAP        #15                 ; trap call
000026F6                          2366          
000026F6  4EB9 00002E20           2367          JSR         PrntImm
000026FC                          2368          
000026FC  6000 E942               2369          BRA         LOOP
00002700                          2370  
00002700  43F9 00003D62           2371  opASLBI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002706  103C 000E               2372          MOVE.B      #14, D0             ; command for trap call to display message
0000270A  4E4F                    2373          TRAP        #15                 ; trap call
0000270C                          2374  
0000270C  43F9 00003D75           2375          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002712  103C 000E               2376          MOVE.B      #14, D0             ; command for trap call to display message
00002716  4E4F                    2377          TRAP        #15                 ; trap call
00002718                          2378          
00002718  4EB9 00002E20           2379          JSR         PrntImm
0000271E                          2380          
0000271E  6000 E920               2381          BRA         LOOP
00002722                          2382  
00002722  4242                    2383  opASBR  CLR         D2
00002724  3401                    2384          MOVE.W      D1, D2
00002726  E042                    2385          ASR         #eight, D2
00002728  C47C 0001               2386          AND         #$01, D2
0000272C                          2387      
0000272C  B43C 0000               2388          CMP.B       #zero, D2
00002730  6700 000E               2389          BEQ         opASRBR
00002734  B43C 0001               2390          CMP.B       #one, D2
00002738  6700 0028               2391          BEQ         opASLBR
0000273C  6000 1534               2392          BRA         printInvalid 
00002740                          2393          
00002740  43F9 00003D5E           2394  opASRBR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002746  103C 000E               2395          MOVE.B      #14, D0             ; command for trap call to display message
0000274A  4E4F                    2396          TRAP        #15                 ; trap call
0000274C                          2397  
0000274C  43F9 00003D75           2398          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002752  103C 000E               2399          MOVE.B      #14, D0             ; command for trap call to display message
00002756  4E4F                    2400          TRAP        #15                 ; trap call
00002758                          2401          
00002758  4EB9 00002E7C           2402          JSR         PrntReg
0000275E                          2403          
0000275E  6000 E8E0               2404          BRA         LOOP
00002762                          2405  
00002762  43F9 00003D62           2406  opASLBR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002768  103C 000E               2407          MOVE.B      #14, D0             ; command for trap call to display message
0000276C  4E4F                    2408          TRAP        #15                 ; trap call
0000276E                          2409  
0000276E  43F9 00003D75           2410          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002774  103C 000E               2411          MOVE.B      #14, D0             ; command for trap call to display message
00002778  4E4F                    2412          TRAP        #15                 ; trap call
0000277A                          2413          
0000277A  4EB9 00002E7C           2414          JSR         PrntReg
00002780                          2415          
00002780  6000 E8BE               2416          BRA         LOOP
00002784                          2417  
00002784  4242                    2418  opLSBI  CLR         D2
00002786  3401                    2419          MOVE.W      D1, D2
00002788  E042                    2420          ASR         #eight, D2
0000278A  C47C 0001               2421          AND         #$01, D2
0000278E                          2422      
0000278E  B43C 0000               2423          CMP.B       #zero, D2
00002792  6700 000E               2424          BEQ         opLSRBI
00002796  B43C 0001               2425          CMP.B       #one, D2
0000279A  6700 0028               2426          BEQ         opLSLBI
0000279E  6000 14D2               2427          BRA         printInvalid 
000027A2                          2428          
000027A2  43F9 00003D56           2429  opLSRBI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027A8  103C 000E               2430          MOVE.B      #14, D0             ; command for trap call to display message
000027AC  4E4F                    2431          TRAP        #15                 ; trap call
000027AE                          2432  
000027AE  43F9 00003D75           2433          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027B4  103C 000E               2434          MOVE.B      #14, D0             ; command for trap call to display message
000027B8  4E4F                    2435          TRAP        #15                 ; trap call
000027BA                          2436          
000027BA  4EB9 00002E20           2437          JSR         PrntImm
000027C0                          2438          
000027C0  6000 E87E               2439          BRA         LOOP
000027C4                          2440  
000027C4                          2441  
000027C4  43F9 00003D5A           2442  opLSLBI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027CA  103C 000E               2443          MOVE.B      #14, D0             ; command for trap call to display message
000027CE  4E4F                    2444          TRAP        #15                 ; trap call
000027D0                          2445  
000027D0  43F9 00003D75           2446          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027D6  103C 000E               2447          MOVE.B      #14, D0             ; command for trap call to display message
000027DA  4E4F                    2448          TRAP        #15                 ; trap call
000027DC                          2449          
000027DC  4EB9 00002E20           2450          JSR         PrntImm
000027E2                          2451          
000027E2  6000 E85C               2452          BRA         LOOP
000027E6                          2453  
000027E6                          2454  
000027E6  4242                    2455  opLSBR  CLR         D2
000027E8  3401                    2456          MOVE.W      D1, D2
000027EA  E042                    2457          ASR         #eight, D2
000027EC  C47C 0001               2458          AND         #$01, D2
000027F0                          2459      
000027F0  B43C 0000               2460          CMP.B       #zero, D2
000027F4  6700 000E               2461          BEQ         opLSRBR
000027F8  B43C 0001               2462          CMP.B       #one, D2
000027FC  6700 0028               2463          BEQ         opLSLBR
00002800  6000 1470               2464          BRA         printInvalid 
00002804                          2465          
00002804  43F9 00003D56           2466  opLSRBR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000280A  103C 000E               2467          MOVE.B      #14, D0             ; command for trap call to display message
0000280E  4E4F                    2468          TRAP        #15                 ; trap call
00002810                          2469  
00002810  43F9 00003D75           2470          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002816  103C 000E               2471          MOVE.B      #14, D0             ; command for trap call to display message
0000281A  4E4F                    2472          TRAP        #15                 ; trap call
0000281C                          2473          
0000281C  4EB9 00002E7C           2474          JSR         PrntReg
00002822                          2475          
00002822  6000 E81C               2476          BRA         LOOP
00002826                          2477          
00002826  43F9 00003D5A           2478  opLSLBR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000282C  103C 000E               2479          MOVE.B      #14, D0             ; command for trap call to display message
00002830  4E4F                    2480          TRAP        #15                 ; trap call
00002832                          2481  
00002832  43F9 00003D75           2482          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002838  103C 000E               2483          MOVE.B      #14, D0             ; command for trap call to display message
0000283C  4E4F                    2484          TRAP        #15                 ; trap call
0000283E                          2485          
0000283E  4EB9 00002E7C           2486          JSR         PrntReg
00002844                          2487          
00002844  6000 E7FA               2488          BRA         LOOP
00002848                          2489  
00002848                          2490  
00002848                          2491  
00002848  4242                    2492  opROBI  CLR         D2
0000284A  3401                    2493          MOVE.W      D1, D2
0000284C  E042                    2494          ASR         #eight, D2
0000284E  C47C 0001               2495          AND         #$01, D2
00002852                          2496      
00002852  B43C 0000               2497          CMP.B       #zero, D2
00002856  6700 000E               2498          BEQ         opRORBI
0000285A  B43C 0001               2499          CMP.B       #one, D2
0000285E  6700 0028               2500          BEQ         opROLBI
00002862  6000 140E               2501          BRA         printInvalid 
00002866                          2502          
00002866  43F9 00003D66           2503  opRORBI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000286C  103C 000E               2504          MOVE.B      #14, D0             ; command for trap call to display message
00002870  4E4F                    2505          TRAP        #15                 ; trap call
00002872                          2506  
00002872  43F9 00003D75           2507          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002878  103C 000E               2508          MOVE.B      #14, D0             ; command for trap call to display message
0000287C  4E4F                    2509          TRAP        #15                 ; trap call
0000287E                          2510          
0000287E  4EB9 00002E20           2511          JSR         PrntImm
00002884                          2512          
00002884  6000 E7BA               2513          BRA         LOOP
00002888                          2514  
00002888  43F9 00003D6A           2515  opROLBI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000288E  103C 000E               2516          MOVE.B      #14, D0             ; command for trap call to display message
00002892  4E4F                    2517          TRAP        #15                 ; trap call
00002894                          2518  
00002894  43F9 00003D75           2519          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000289A  103C 000E               2520          MOVE.B      #14, D0             ; command for trap call to display message
0000289E  4E4F                    2521          TRAP        #15                 ; trap call
000028A0                          2522          
000028A0  4EB9 00002E20           2523          JSR         PrntImm
000028A6                          2524          
000028A6  6000 E798               2525          BRA         LOOP
000028AA                          2526  
000028AA  4242                    2527  opROBR  CLR         D2
000028AC  3401                    2528          MOVE.W      D1, D2
000028AE  E042                    2529          ASR         #eight, D2
000028B0  C47C 0001               2530          AND         #$01, D2
000028B4                          2531      
000028B4  B43C 0000               2532          CMP.B       #zero, D2
000028B8  6700 000E               2533          BEQ         opRORBR
000028BC  B43C 0001               2534          CMP.B       #one, D2
000028C0  6700 0028               2535          BEQ         opROLBR
000028C4  6000 13AC               2536          BRA         printInvalid     
000028C8                          2537          
000028C8  43F9 00003D66           2538  opRORBR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028CE  103C 000E               2539          MOVE.B      #14, D0             ; command for trap call to display message
000028D2  4E4F                    2540          TRAP        #15                 ; trap call
000028D4                          2541  
000028D4  43F9 00003D75           2542          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028DA  103C 000E               2543          MOVE.B      #14, D0             ; command for trap call to display message
000028DE  4E4F                    2544          TRAP        #15                 ; trap call
000028E0                          2545          
000028E0  4EB9 00002E7C           2546          JSR         PrntReg
000028E6                          2547          
000028E6  6000 E758               2548          BRA         LOOP
000028EA                          2549  
000028EA  43F9 00003D6A           2550  opROLBR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028F0  103C 000E               2551          MOVE.B      #14, D0             ; command for trap call to display message
000028F4  4E4F                    2552          TRAP        #15                 ; trap call
000028F6                          2553  
000028F6  43F9 00003D75           2554          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028FC  103C 000E               2555          MOVE.B      #14, D0             ; command for trap call to display message
00002900  4E4F                    2556          TRAP        #15                 ; trap call
00002902                          2557          
00002902  4EB9 00002E7C           2558          JSR         PrntReg
00002908                          2559          
00002908  6000 E736               2560          BRA         LOOP       
0000290C                          2561  
0000290C  4242                    2562  memSW   CLR         D2
0000290E  1401                    2563          MOVE.B      D1,D2
00002910  E642                    2564          ASR         #three, D2
00002912                          2565          
00002912  C47C 0007               2566          AND         #$07, D2
00002916                          2567          
00002916  B43C 0000               2568          CMP.B       #zero, D2
0000291A  6700 002E               2569          BEQ         opASWI
0000291E  B43C 0004               2570          CMP.B       #four, D2
00002922  6700 0088               2571          BEQ         opASWR
00002926  B43C 0001               2572          CMP.B       #one, D2
0000292A  6700 00E2               2573          BEQ         opLSWI
0000292E  B43C 0005               2574          CMP.B       #five, D2
00002932  6700 013C               2575          BEQ         opLSWR
00002936  B43C 0003               2576          CMP.B       #three, D2
0000293A  6700 0196               2577          BEQ         opROWI
0000293E  B43C 0007               2578          CMP.B       #seven, D2
00002942  6700 01F0               2579          BEQ         opROWR
00002946  6000 132A               2580          BRA         printInvalid
0000294A                          2581          
0000294A  4242                    2582  opASWI  CLR         D2
0000294C  3401                    2583          MOVE.W      D1, D2
0000294E  E042                    2584          ASR         #eight, D2
00002950  C47C 0001               2585          AND         #$01, D2
00002954                          2586      
00002954  B43C 0000               2587          CMP.B       #zero, D2
00002958  6700 000E               2588          BEQ         opASRWI
0000295C  B43C 0001               2589          CMP.B       #one, D2
00002960  6700 0028               2590          BEQ         opASLWI
00002964  6000 130C               2591          BRA         printInvalid
00002968                          2592          
00002968  43F9 00003D5E           2593  opASRWI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000296E  103C 000E               2594          MOVE.B      #14, D0             ; command for trap call to display message
00002972  4E4F                    2595          TRAP        #15                 ; trap call
00002974                          2596  
00002974  43F9 00003D78           2597          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000297A  103C 000E               2598          MOVE.B      #14, D0             ; command for trap call to display message
0000297E  4E4F                    2599          TRAP        #15                 ; trap call
00002980                          2600          
00002980  4EB9 00002E20           2601          JSR         PrntImm
00002986                          2602          
00002986  6000 E6B8               2603          BRA         LOOP
0000298A                          2604  
0000298A  43F9 00003D62           2605  opASLWI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002990  103C 000E               2606          MOVE.B      #14, D0             ; command for trap call to display message
00002994  4E4F                    2607          TRAP        #15                 ; trap call
00002996                          2608  
00002996  43F9 00003D78           2609          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000299C  103C 000E               2610          MOVE.B      #14, D0             ; command for trap call to display message
000029A0  4E4F                    2611          TRAP        #15                 ; trap call
000029A2                          2612          
000029A2  4EB9 00002E20           2613          JSR         PrntImm
000029A8                          2614          
000029A8  6000 E696               2615          BRA         LOOP
000029AC                          2616  
000029AC  4242                    2617  opASWR  CLR         D2
000029AE  3401                    2618          MOVE.W      D1, D2
000029B0  E042                    2619          ASR         #eight, D2
000029B2  C47C 0001               2620          AND         #$01, D2
000029B6                          2621      
000029B6  B43C 0000               2622          CMP.B       #zero, D2
000029BA  6700 000E               2623          BEQ         opASRWR
000029BE  B43C 0001               2624          CMP.B       #one, D2
000029C2  6700 0028               2625          BEQ         opASLWR
000029C6  6000 12AA               2626          BRA         printInvalid 
000029CA                          2627          
000029CA  43F9 00003D5E           2628  opASRWR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000029D0  103C 000E               2629          MOVE.B      #14, D0             ; command for trap call to display message
000029D4  4E4F                    2630          TRAP        #15                 ; trap call
000029D6                          2631  
000029D6  43F9 00003D78           2632          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000029DC  103C 000E               2633          MOVE.B      #14, D0             ; command for trap call to display message
000029E0  4E4F                    2634          TRAP        #15                 ; trap call
000029E2                          2635          
000029E2  4EB9 00002E7C           2636          JSR         PrntReg
000029E8                          2637          
000029E8  6000 E656               2638          BRA         LOOP
000029EC                          2639  
000029EC  43F9 00003D62           2640  opASLWR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000029F2  103C 000E               2641          MOVE.B      #14, D0             ; command for trap call to display message
000029F6  4E4F                    2642          TRAP        #15                 ; trap call
000029F8                          2643  
000029F8  43F9 00003D78           2644          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000029FE  103C 000E               2645          MOVE.B      #14, D0             ; command for trap call to display message
00002A02  4E4F                    2646          TRAP        #15                 ; trap call
00002A04                          2647          
00002A04  4EB9 00002E7C           2648          JSR         PrntReg
00002A0A                          2649          
00002A0A  6000 E634               2650          BRA         LOOP
00002A0E                          2651  
00002A0E  4242                    2652  opLSWI  CLR         D2
00002A10  3401                    2653          MOVE.W      D1, D2
00002A12  E042                    2654          ASR         #eight, D2
00002A14  C47C 0001               2655          AND         #$01, D2
00002A18                          2656      
00002A18  B43C 0000               2657          CMP.B       #zero, D2
00002A1C  6700 000E               2658          BEQ         opLSRWI
00002A20  B43C 0001               2659          CMP.B       #one, D2
00002A24  6700 0028               2660          BEQ         opLSLWI
00002A28  6000 1248               2661          BRA         printInvalid 
00002A2C                          2662          
00002A2C  43F9 00003D56           2663  opLSRWI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A32  103C 000E               2664          MOVE.B      #14, D0             ; command for trap call to display message
00002A36  4E4F                    2665          TRAP        #15                 ; trap call
00002A38                          2666  
00002A38  43F9 00003D78           2667          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A3E  103C 000E               2668          MOVE.B      #14, D0             ; command for trap call to display message
00002A42  4E4F                    2669          TRAP        #15                 ; trap call
00002A44                          2670          
00002A44  4EB9 00002E20           2671          JSR         PrntImm
00002A4A                          2672          
00002A4A  6000 E5F4               2673          BRA         LOOP
00002A4E                          2674  
00002A4E                          2675  
00002A4E  43F9 00003D5A           2676  opLSLWI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A54  103C 000E               2677          MOVE.B      #14, D0             ; command for trap call to display message
00002A58  4E4F                    2678          TRAP        #15                 ; trap call
00002A5A                          2679  
00002A5A  43F9 00003D78           2680          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A60  103C 000E               2681          MOVE.B      #14, D0             ; command for trap call to display message
00002A64  4E4F                    2682          TRAP        #15                 ; trap call
00002A66                          2683          
00002A66  4EB9 00002E20           2684          JSR         PrntImm
00002A6C                          2685          
00002A6C  6000 E5D2               2686          BRA         LOOP
00002A70                          2687  
00002A70                          2688  
00002A70  4242                    2689  opLSWR  CLR         D2
00002A72  3401                    2690          MOVE.W      D1, D2
00002A74  E042                    2691          ASR         #eight, D2
00002A76  C47C 0001               2692          AND         #$01, D2
00002A7A                          2693      
00002A7A  B43C 0000               2694          CMP.B       #zero, D2
00002A7E  6700 000E               2695          BEQ         opLSRWR
00002A82  B43C 0001               2696          CMP.B       #one, D2
00002A86  6700 0028               2697          BEQ         opLSLWR
00002A8A  6000 11E6               2698          BRA         printInvalid 
00002A8E                          2699          
00002A8E  43F9 00003D56           2700  opLSRWR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002A94  103C 000E               2701          MOVE.B      #14, D0             ; command for trap call to display message
00002A98  4E4F                    2702          TRAP        #15                 ; trap call
00002A9A                          2703  
00002A9A  43F9 00003D78           2704          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002AA0  103C 000E               2705          MOVE.B      #14, D0             ; command for trap call to display message
00002AA4  4E4F                    2706          TRAP        #15                 ; trap call
00002AA6                          2707          
00002AA6  4EB9 00002E7C           2708          JSR         PrntReg
00002AAC                          2709          
00002AAC  6000 E592               2710          BRA         LOOP
00002AB0                          2711          
00002AB0  43F9 00003D5A           2712  opLSLWR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002AB6  103C 000E               2713          MOVE.B      #14, D0             ; command for trap call to display message
00002ABA  4E4F                    2714          TRAP        #15                 ; trap call
00002ABC                          2715  
00002ABC  43F9 00003D78           2716          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002AC2  103C 000E               2717          MOVE.B      #14, D0             ; command for trap call to display message
00002AC6  4E4F                    2718          TRAP        #15                 ; trap call
00002AC8                          2719          
00002AC8  4EB9 00002E7C           2720          JSR         PrntReg
00002ACE                          2721          
00002ACE  6000 E570               2722          BRA         LOOP
00002AD2                          2723  
00002AD2                          2724  
00002AD2                          2725  
00002AD2  4242                    2726  opROWI  CLR         D2
00002AD4  3401                    2727          MOVE.W      D1, D2
00002AD6  E042                    2728          ASR         #eight, D2
00002AD8  C47C 0001               2729          AND         #$01, D2
00002ADC                          2730      
00002ADC  B43C 0000               2731          CMP.B       #zero, D2
00002AE0  6700 000E               2732          BEQ         opRORWI
00002AE4  B43C 0001               2733          CMP.B       #one, D2
00002AE8  6700 0028               2734          BEQ         opROLWI
00002AEC  6000 1184               2735          BRA         printInvalid 
00002AF0                          2736          
00002AF0  43F9 00003D66           2737  opRORWI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002AF6  103C 000E               2738          MOVE.B      #14, D0             ; command for trap call to display message
00002AFA  4E4F                    2739          TRAP        #15                 ; trap call
00002AFC                          2740  
00002AFC  43F9 00003D78           2741          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B02  103C 000E               2742          MOVE.B      #14, D0             ; command for trap call to display message
00002B06  4E4F                    2743          TRAP        #15                 ; trap call
00002B08                          2744          
00002B08  4EB9 00002E20           2745          JSR         PrntImm
00002B0E                          2746          
00002B0E  6000 E530               2747          BRA         LOOP
00002B12                          2748  
00002B12  43F9 00003D6A           2749  opROLWI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B18  103C 000E               2750          MOVE.B      #14, D0             ; command for trap call to display message
00002B1C  4E4F                    2751          TRAP        #15                 ; trap call
00002B1E                          2752  
00002B1E  43F9 00003D78           2753          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B24  103C 000E               2754          MOVE.B      #14, D0             ; command for trap call to display message
00002B28  4E4F                    2755          TRAP        #15                 ; trap call
00002B2A                          2756          
00002B2A  4EB9 00002E20           2757          JSR         PrntImm
00002B30                          2758          
00002B30  6000 E50E               2759          BRA         LOOP
00002B34                          2760  
00002B34  4242                    2761  opROWR  CLR         D2
00002B36  3401                    2762          MOVE.W      D1, D2
00002B38  E042                    2763          ASR         #eight, D2
00002B3A  C47C 0001               2764          AND         #$01, D2
00002B3E                          2765      
00002B3E  B43C 0000               2766          CMP.B       #zero, D2
00002B42  6700 000E               2767          BEQ         opRORWR
00002B46  B43C 0001               2768          CMP.B       #one, D2
00002B4A  6700 0028               2769          BEQ         opROLWR
00002B4E  6000 1122               2770          BRA         printInvalid     
00002B52                          2771          
00002B52  43F9 00003D66           2772  opRORWR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B58  103C 000E               2773          MOVE.B      #14, D0             ; command for trap call to display message
00002B5C  4E4F                    2774          TRAP        #15                 ; trap call
00002B5E                          2775  
00002B5E  43F9 00003D78           2776          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B64  103C 000E               2777          MOVE.B      #14, D0             ; command for trap call to display message
00002B68  4E4F                    2778          TRAP        #15                 ; trap call
00002B6A                          2779          
00002B6A  4EB9 00002E7C           2780          JSR         PrntReg
00002B70                          2781          
00002B70  6000 E4CE               2782          BRA         LOOP
00002B74                          2783  
00002B74  43F9 00003D6A           2784  opROLWR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B7A  103C 000E               2785          MOVE.B      #14, D0             ; command for trap call to display message
00002B7E  4E4F                    2786          TRAP        #15                 ; trap call
00002B80                          2787  
00002B80  43F9 00003D78           2788          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B86  103C 000E               2789          MOVE.B      #14, D0             ; command for trap call to display message
00002B8A  4E4F                    2790          TRAP        #15                 ; trap call
00002B8C                          2791          
00002B8C  4EB9 00002E7C           2792          JSR         PrntReg
00002B92                          2793          
00002B92  6000 E4AC               2794          BRA         LOOP
00002B96                          2795  
00002B96  4242                    2796  memSL   CLR         D2
00002B98  1401                    2797          MOVE.B      D1,D2
00002B9A  E642                    2798          ASR         #three, D2
00002B9C                          2799          
00002B9C  C47C 0007               2800          AND         #$07, D2
00002BA0                          2801          
00002BA0  B43C 0000               2802          CMP.B       #zero, D2
00002BA4  6700 002E               2803          BEQ         opASLI
00002BA8  B43C 0004               2804          CMP.B       #four, D2
00002BAC  6700 0088               2805          BEQ         opASLR
00002BB0  B43C 0001               2806          CMP.B       #one, D2
00002BB4  6700 00E2               2807          BEQ         opLSLI
00002BB8  B43C 0005               2808          CMP.B       #five, D2
00002BBC  6700 013C               2809          BEQ         opLSLR
00002BC0  B43C 0003               2810          CMP.B       #three, D2
00002BC4  6700 0196               2811          BEQ         opROLI
00002BC8  B43C 0007               2812          CMP.B       #seven, D2
00002BCC  6700 01F0               2813          BEQ         opROLR
00002BD0  6000 10A0               2814          BRA         printInvalid
00002BD4                          2815          
00002BD4  4242                    2816  opASLI  CLR         D2
00002BD6  3401                    2817          MOVE.W      D1, D2
00002BD8  E042                    2818          ASR         #eight, D2
00002BDA  C47C 0001               2819          AND         #$01, D2
00002BDE                          2820      
00002BDE  B43C 0000               2821          CMP.B       #zero, D2
00002BE2  6700 000E               2822          BEQ         opASRLI
00002BE6  B43C 0001               2823          CMP.B       #one, D2
00002BEA  6700 0028               2824          BEQ         opASLLI
00002BEE  6000 1082               2825          BRA         printInvalid
00002BF2                          2826          
00002BF2  43F9 00003D5E           2827  opASRLI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002BF8  103C 000E               2828          MOVE.B      #14, D0             ; command for trap call to display message
00002BFC  4E4F                    2829          TRAP        #15                 ; trap call
00002BFE                          2830  
00002BFE  43F9 00003D7B           2831          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C04  103C 000E               2832          MOVE.B      #14, D0             ; command for trap call to display message
00002C08  4E4F                    2833          TRAP        #15                 ; trap call
00002C0A                          2834          
00002C0A  4EB9 00002E20           2835          JSR         PrntImm
00002C10                          2836          
00002C10  6000 E42E               2837          BRA         LOOP
00002C14                          2838  
00002C14  43F9 00003D62           2839  opASLLI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002C1A  103C 000E               2840          MOVE.B      #14, D0             ; command for trap call to display message
00002C1E  4E4F                    2841          TRAP        #15                 ; trap call
00002C20                          2842  
00002C20  43F9 00003D7B           2843          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C26  103C 000E               2844          MOVE.B      #14, D0             ; command for trap call to display message
00002C2A  4E4F                    2845          TRAP        #15                 ; trap call
00002C2C                          2846          
00002C2C  4EB9 00002E20           2847          JSR         PrntImm
00002C32                          2848          
00002C32  6000 E40C               2849          BRA         LOOP
00002C36                          2850  
00002C36  4242                    2851  opASLR  CLR         D2
00002C38  3401                    2852          MOVE.W      D1, D2
00002C3A  E042                    2853          ASR         #eight, D2
00002C3C  C47C 0001               2854          AND         #$01, D2
00002C40                          2855      
00002C40  B43C 0000               2856          CMP.B       #zero, D2
00002C44  6700 000E               2857          BEQ         opASRLR
00002C48  B43C 0001               2858          CMP.B       #one, D2
00002C4C  6700 0028               2859          BEQ         opASLLR
00002C50  6000 1020               2860          BRA         printInvalid 
00002C54                          2861          
00002C54  43F9 00003D5E           2862  opASRLR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002C5A  103C 000E               2863          MOVE.B      #14, D0             ; command for trap call to display message
00002C5E  4E4F                    2864          TRAP        #15                 ; trap call
00002C60                          2865  
00002C60  43F9 00003D7B           2866          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C66  103C 000E               2867          MOVE.B      #14, D0             ; command for trap call to display message
00002C6A  4E4F                    2868          TRAP        #15                 ; trap call
00002C6C                          2869          
00002C6C  4EB9 00002E7C           2870          JSR         PrntReg
00002C72                          2871          
00002C72  6000 E3CC               2872          BRA         LOOP
00002C76                          2873  
00002C76  43F9 00003D62           2874  opASLLR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002C7C  103C 000E               2875          MOVE.B      #14, D0             ; command for trap call to display message
00002C80  4E4F                    2876          TRAP        #15                 ; trap call
00002C82                          2877  
00002C82  43F9 00003D7B           2878          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C88  103C 000E               2879          MOVE.B      #14, D0             ; command for trap call to display message
00002C8C  4E4F                    2880          TRAP        #15                 ; trap call
00002C8E                          2881          
00002C8E  4EB9 00002E7C           2882          JSR         PrntReg
00002C94                          2883          
00002C94  6000 E3AA               2884          BRA         LOOP
00002C98                          2885  
00002C98  4242                    2886  opLSLI  CLR         D2
00002C9A  3401                    2887          MOVE.W      D1, D2
00002C9C  E042                    2888          ASR         #eight, D2
00002C9E  C47C 0001               2889          AND         #$01, D2
00002CA2                          2890      
00002CA2  B43C 0000               2891          CMP.B       #zero, D2
00002CA6  6700 000E               2892          BEQ         opLSRLI
00002CAA  B43C 0001               2893          CMP.B       #one, D2
00002CAE  6700 0028               2894          BEQ         opLSLLI
00002CB2  6000 0FBE               2895          BRA         printInvalid 
00002CB6                          2896          
00002CB6  43F9 00003D56           2897  opLSRLI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CBC  103C 000E               2898          MOVE.B      #14, D0             ; command for trap call to display message
00002CC0  4E4F                    2899          TRAP        #15                 ; trap call
00002CC2                          2900  
00002CC2  43F9 00003D7B           2901          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CC8  103C 000E               2902          MOVE.B      #14, D0             ; command for trap call to display message
00002CCC  4E4F                    2903          TRAP        #15                 ; trap call
00002CCE                          2904          
00002CCE  4EB9 00002E20           2905          JSR         PrntImm
00002CD4                          2906          
00002CD4  6000 E36A               2907          BRA         LOOP
00002CD8                          2908  
00002CD8                          2909  
00002CD8  43F9 00003D5A           2910  opLSLLI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CDE  103C 000E               2911          MOVE.B      #14, D0             ; command for trap call to display message
00002CE2  4E4F                    2912          TRAP        #15                 ; trap call
00002CE4                          2913  
00002CE4  43F9 00003D7B           2914          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CEA  103C 000E               2915          MOVE.B      #14, D0             ; command for trap call to display message
00002CEE  4E4F                    2916          TRAP        #15                 ; trap call
00002CF0                          2917          
00002CF0  4EB9 00002E20           2918          JSR         PrntImm
00002CF6                          2919          
00002CF6  6000 E348               2920          BRA         LOOP
00002CFA                          2921  
00002CFA                          2922  
00002CFA  4242                    2923  opLSLR  CLR         D2
00002CFC  3401                    2924          MOVE.W      D1, D2
00002CFE  E042                    2925          ASR         #eight, D2
00002D00  C47C 0001               2926          AND         #$01, D2
00002D04                          2927      
00002D04  B43C 0000               2928          CMP.B       #zero, D2
00002D08  6700 000E               2929          BEQ         opLSRLR
00002D0C  B43C 0001               2930          CMP.B       #one, D2
00002D10  6700 0028               2931          BEQ         opLSLLR
00002D14  6000 0F5C               2932          BRA         printInvalid 
00002D18                          2933          
00002D18  43F9 00003D56           2934  opLSRLR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002D1E  103C 000E               2935          MOVE.B      #14, D0             ; command for trap call to display message
00002D22  4E4F                    2936          TRAP        #15                 ; trap call
00002D24                          2937  
00002D24  43F9 00003D7B           2938          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D2A  103C 000E               2939          MOVE.B      #14, D0             ; command for trap call to display message
00002D2E  4E4F                    2940          TRAP        #15                 ; trap call
00002D30                          2941          
00002D30  4EB9 00002E7C           2942          JSR         PrntReg
00002D36                          2943          
00002D36  6000 E308               2944          BRA         LOOP
00002D3A                          2945          
00002D3A  43F9 00003D5A           2946  opLSLLR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002D40  103C 000E               2947          MOVE.B      #14, D0             ; command for trap call to display message
00002D44  4E4F                    2948          TRAP        #15                 ; trap call
00002D46                          2949  
00002D46  43F9 00003D7B           2950          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D4C  103C 000E               2951          MOVE.B      #14, D0             ; command for trap call to display message
00002D50  4E4F                    2952          TRAP        #15                 ; trap call
00002D52                          2953          
00002D52  4EB9 00002E7C           2954          JSR         PrntReg
00002D58                          2955          
00002D58  6000 E2E6               2956          BRA         LOOP
00002D5C                          2957  
00002D5C                          2958  
00002D5C                          2959  
00002D5C  4242                    2960  opROLI  CLR         D2
00002D5E  3401                    2961          MOVE.W      D1, D2
00002D60  E042                    2962          ASR         #eight, D2
00002D62  C47C 0001               2963          AND         #$01, D2
00002D66                          2964      
00002D66  B43C 0000               2965          CMP.B       #zero, D2
00002D6A  6700 000E               2966          BEQ         opRORLI
00002D6E  B43C 0001               2967          CMP.B       #one, D2
00002D72  6700 0028               2968          BEQ         opROLLI
00002D76  6000 0EFA               2969          BRA         printInvalid 
00002D7A                          2970          
00002D7A  43F9 00003D66           2971  opRORLI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D80  103C 000E               2972          MOVE.B      #14, D0             ; command for trap call to display message
00002D84  4E4F                    2973          TRAP        #15                 ; trap call
00002D86                          2974  
00002D86  43F9 00003D7B           2975          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D8C  103C 000E               2976          MOVE.B      #14, D0             ; command for trap call to display message
00002D90  4E4F                    2977          TRAP        #15                 ; trap call
00002D92                          2978          
00002D92  4EB9 00002E20           2979          JSR         PrntImm
00002D98                          2980          
00002D98  6000 E2A6               2981          BRA         LOOP
00002D9C                          2982  
00002D9C  43F9 00003D6A           2983  opROLLI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DA2  103C 000E               2984          MOVE.B      #14, D0             ; command for trap call to display message
00002DA6  4E4F                    2985          TRAP        #15                 ; trap call
00002DA8                          2986  
00002DA8  43F9 00003D7B           2987          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DAE  103C 000E               2988          MOVE.B      #14, D0             ; command for trap call to display message
00002DB2  4E4F                    2989          TRAP        #15                 ; trap call
00002DB4                          2990          
00002DB4  4EB9 00002E20           2991          JSR         PrntImm
00002DBA                          2992          
00002DBA  6000 E284               2993          BRA         LOOP
00002DBE                          2994  
00002DBE  4242                    2995  opROLR  CLR         D2
00002DC0  3401                    2996          MOVE.W      D1, D2
00002DC2  E042                    2997          ASR         #eight, D2
00002DC4  C47C 0001               2998          AND         #$01, D2
00002DC8                          2999      
00002DC8  B43C 0000               3000          CMP.B       #zero, D2
00002DCC  6700 000E               3001          BEQ         opRORLR
00002DD0  B43C 0001               3002          CMP.B       #one, D2
00002DD4  6700 0028               3003          BEQ         opROLLR
00002DD8  6000 0E98               3004          BRA         printInvalid     
00002DDC                          3005          
00002DDC  43F9 00003D66           3006  opRORLR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DE2  103C 000E               3007          MOVE.B      #14, D0             ; command for trap call to display message
00002DE6  4E4F                    3008          TRAP        #15                 ; trap call
00002DE8                          3009  
00002DE8  43F9 00003D7B           3010          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DEE  103C 000E               3011          MOVE.B      #14, D0             ; command for trap call to display message
00002DF2  4E4F                    3012          TRAP        #15                 ; trap call
00002DF4                          3013          
00002DF4  4EB9 00002E7C           3014          JSR         PrntReg
00002DFA                          3015          
00002DFA  6000 E244               3016          BRA         LOOP
00002DFE                          3017  
00002DFE  43F9 00003D6A           3018  opROLLR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E04  103C 000E               3019          MOVE.B      #14, D0             ; command for trap call to display message
00002E08  4E4F                    3020          TRAP        #15                 ; trap call
00002E0A                          3021  
00002E0A  43F9 00003D7B           3022          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E10  103C 000E               3023          MOVE.B      #14, D0             ; command for trap call to display message
00002E14  4E4F                    3024          TRAP        #15                 ; trap call
00002E16                          3025          
00002E16  4EB9 00002E7C           3026          JSR         PrntReg
00002E1C                          3027          
00002E1C  6000 E222               3028          BRA         LOOP
00002E20                          3029  * The following subroutine displays the immediate number to shift and the data register that is being shifted. 
00002E20                          3030  * This subroutine calls two printing immediate subroutine first, the the ea print subroutine.        
00002E20  48E7 FF7E               3031  PrntImm MOVEM.L D0-D7/A1-A6, -(SP)
00002E24                          3032          
00002E24  43F9 00003CDB           3033          LEA         space, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E2A  103C 000E               3034          MOVE.B      #14, D0             ; command for trap call to display message
00002E2E  4E4F                    3035          TRAP        #15                 ; trap call
00002E30                          3036          
00002E30  43F9 00003CDE           3037          LEA         hashTag, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E36  103C 000E               3038          MOVE.B      #14, D0             ; command for trap call to display message
00002E3A  4E4F                    3039          TRAP        #15                 ; trap call
00002E3C                          3040          
00002E3C  4242                    3041          CLR         D2
00002E3E  3401                    3042          MOVE.W      D1, D2
00002E40  E042                    3043          ASR         #eight, D2
00002E42  E242                    3044          ASR         #one, D2
00002E44  C47C 0007               3045          AND         #$07, D2
00002E48                          3046          
00002E48  4EB9 00002ECE           3047          JSR         MemShiftImm
00002E4E                          3048          
00002E4E  43F9 00003CE2           3049          LEA         comma, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E54  103C 000E               3050          MOVE.B      #14, D0             ; command for trap call to display message
00002E58  4E4F                    3051          TRAP        #15                 ; trap call
00002E5A                          3052          
00002E5A  4242                    3053          CLR         D2
00002E5C  4243                    3054          CLR         D3
00002E5E  1601                    3055          MOVE.B      D1,D3
00002E60  C67C 0007               3056          AND         #$07, D3
00002E64                          3057          
00002E64  4EB9 00002EF8           3058          JSR         printEA
00002E6A                          3059          
00002E6A  43F9 00003CD7           3060          LEA         newLine, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E70  103C 000E               3061          MOVE.B      #14, D0             ; command for trap call to display message
00002E74  4E4F                    3062          TRAP        #15                 ; trap call
00002E76                          3063          
00002E76  4CDF 7EFF               3064          MOVEM.L  (SP)+, D0-D7/A1-A6
00002E7A  4E75                    3065          RTS
00002E7C                          3066  * The following subroutine determines the correct data register to display, and sets the values of D2 and D3 accordingly to display the data register.
00002E7C                          3067  * after setting the values, it calls another subroutine to actually display the data register.        
00002E7C  48E7 FF7E               3068  PrntReg MOVEM.L D0-D7/A1-A6, -(SP)
00002E80                          3069          
00002E80  43F9 00003CDB           3070          LEA         space, A1           ; display space
00002E86  103C 000E               3071          MOVE.B      #14, D0             ; command for trap call to display message
00002E8A  4E4F                    3072          TRAP        #15                 ; trap call
00002E8C                          3073          
00002E8C  4242                    3074          CLR         D2
00002E8E  4243                    3075          CLR         D3
00002E90  3601                    3076          MOVE.W      D1, D3
00002E92  E043                    3077          ASR         #eight, D3
00002E94  E243                    3078          ASR         #one, D3
00002E96  C67C 0007               3079          AND         #$07, D3
00002E9A                          3080          
00002E9A  4EB9 00002EF8           3081          JSR         printEA
00002EA0                          3082          
00002EA0  43F9 00003CE2           3083          LEA         comma, A1           ; display comma
00002EA6  103C 000E               3084          MOVE.B      #14, D0             ; command for trap call to display message
00002EAA  4E4F                    3085          TRAP        #15                 ; trap call
00002EAC                          3086          
00002EAC  4242                    3087          CLR         D2
00002EAE  4243                    3088          CLR         D3
00002EB0  1601                    3089          MOVE.B      D1,D3
00002EB2  C67C 0007               3090          AND         #$07, D3
00002EB6                          3091          
00002EB6  4EB9 00002EF8           3092          JSR         printEA
00002EBC                          3093          
00002EBC  43F9 00003CD7           3094          LEA         newLine, A1         ; newline
00002EC2  103C 000E               3095          MOVE.B      #14, D0             ; command for trap call to display message
00002EC6  4E4F                    3096          TRAP        #15                 ; trap call
00002EC8                          3097          
00002EC8  4CDF 7EFF               3098          MOVEM.L  (SP)+, D0-D7/A1-A6
00002ECC  4E75                    3099          RTS
00002ECE                          3100  * The following subroutine is used to display the number between 1-8 for the bit vount for the shift/rotate opcode
00002ECE                          3101  * It displays it by storing the appropriate number in D1 and running trap task 3.        
00002ECE  48E7 FF7E               3102  MemShiftImm     MOVEM.L D0-D7/A1-A6, -(SP)      ;caller saved data
00002ED2  4241                    3103                  CLR     D1
00002ED4                          3104                  
00002ED4  1202                    3105                  MOVE.B  D2, D1
00002ED6  B23C 0000               3106                  CMP.B   #zero, D1
00002EDA  6700 000C               3107                  BEQ     displayEight
00002EDE                          3108                  
00002EDE  103C 0003               3109                  MOVE.B  #3, D0
00002EE2  4E4F                    3110                  TRAP    #15
00002EE4  6000 000C               3111                  BRA     endSubroutine
00002EE8                          3112                  
00002EE8  123C 0008               3113  displayEight    MOVE.B  #$08, D1
00002EEC  103C 0003               3114                  MOVE.B  #3, D0
00002EF0  4E4F                    3115                  TRAP    #15                
00002EF2                          3116  endSubroutine
00002EF2  4CDF 7EFF               3117                  MOVEM.L  (SP)+, D0-D7/A1-A6     ; recall data
00002EF6  4E75                    3118                  RTS                             ; Return to main routine
00002EF8                          3119          
00002EF8                          3120  
00002EF8                          3121  ***********************************************************************************************************
00002EF8                          3122  *
00002EF8                          3123  *                                           EA Print Check
00002EF8                          3124  *
00002EF8                          3125  ***********************************************************************************************************
00002EF8  48E7 FF7E               3126  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00002EFC                          3127  
00002EFC  B43C 0000               3128              CMP.B       #zero, D2
00002F00  6700 002E               3129              BEQ         pDataReg
00002F04  B43C 0001               3130              CMP.B       #one, D2
00002F08  6700 00E6               3131              BEQ         pAddrReg
00002F0C  B43C 0002               3132              CMP.B       #two, D2
00002F10  6700 019E               3133              BEQ         pAddrDir
00002F14  B43C 0003               3134              CMP.B       #three, D2
00002F18  6700 02C2               3135              BEQ         pAddrPost
00002F1C  B43C 0004               3136              CMP.B       #four, D2
00002F20  6700 0446               3137              BEQ         pAddrDec
00002F24  B43C 0007               3138              CMP.B       #seven, D2
00002F28  6700 0576               3139              BEQ         pHex
00002F2C  6000 0642               3140              BRA         invalid
00002F30                          3141  
00002F30                          3142  ***********************************************************************************************************
00002F30                          3143  * Data Register        
00002F30  B63C 0000               3144  pDataReg    CMP.B   #zero,D3
00002F34  6700 003A               3145              BEQ     displayD0
00002F38  B63C 0001               3146              CMP.B   #one,D3
00002F3C  6700 0042               3147              BEQ     displayD1
00002F40  B63C 0002               3148              CMP.B   #two,D3
00002F44  6700 004A               3149              BEQ     displayD2
00002F48  B63C 0003               3150              CMP.B   #three,D3
00002F4C  6700 0052               3151              BEQ     displayD3
00002F50  B63C 0004               3152              CMP.B   #four,D3
00002F54  6700 005A               3153              BEQ     displayD4
00002F58  B63C 0005               3154              CMP.B   #five,D3
00002F5C  6700 0062               3155              BEQ     displayD5
00002F60  B63C 0006               3156              CMP.B   #six,D3
00002F64  6700 006A               3157              BEQ     displayD6
00002F68  B63C 0007               3158              CMP.B   #seven,D3
00002F6C  6700 0072               3159              BEQ     displayD7
00002F70                          3160              
00002F70  43F9 00003D98           3161  displayD0   LEA         dispD0, A1          ; Display space
00002F76  103C 000E               3162              MOVE.B      #14, D0             ; command for trap call to display message
00002F7A  4E4F                    3163              TRAP        #15                 ; trap call
00002F7C  6000 05F2               3164              BRA         endSUB              ; go to the end of the subroutine
00002F80                          3165              
00002F80  43F9 00003D9B           3166  displayD1   LEA         dispD1, A1          ; Display space
00002F86  103C 000E               3167              MOVE.B      #14, D0             ; command for trap call to display message
00002F8A  4E4F                    3168              TRAP        #15                 ; trap call
00002F8C  6000 05E2               3169              BRA         endSUB              ; go to the end of the subroutine
00002F90                          3170  
00002F90  43F9 00003D9E           3171  displayD2   LEA         dispD2, A1          ; Display space
00002F96  103C 000E               3172              MOVE.B      #14, D0             ; command for trap call to display message
00002F9A  4E4F                    3173              TRAP        #15                 ; trap call
00002F9C  6000 05D2               3174              BRA         endSUB              ; go to the end of the subroutine
00002FA0                          3175  
00002FA0  43F9 00003DA1           3176  displayD3   LEA         dispD3, A1          ; Display space
00002FA6  103C 000E               3177              MOVE.B      #14, D0             ; command for trap call to display message
00002FAA  4E4F                    3178              TRAP        #15                 ; trap call
00002FAC  6000 05C2               3179              BRA         endSUB              ; go to the end of the subroutine
00002FB0                          3180  
00002FB0  43F9 00003DA4           3181  displayD4   LEA         dispD4, A1          ; Display space
00002FB6  103C 000E               3182              MOVE.B      #14, D0             ; command for trap call to display message
00002FBA  4E4F                    3183              TRAP        #15                 ; trap call
00002FBC  6000 05B2               3184              BRA         endSUB              ; go to the end of the subroutine
00002FC0                          3185  
00002FC0  43F9 00003DA7           3186  displayD5   LEA         dispD5, A1          ; Display space
00002FC6  103C 000E               3187              MOVE.B      #14, D0             ; command for trap call to display message
00002FCA  4E4F                    3188              TRAP        #15                 ; trap call
00002FCC  6000 05A2               3189              BRA         endSUB              ; go to the end of the subroutine
00002FD0                          3190  
00002FD0  43F9 00003DAA           3191  displayD6   LEA         dispD6, A1          ; Display space
00002FD6  103C 000E               3192              MOVE.B      #14, D0             ; command for trap call to display message
00002FDA  4E4F                    3193              TRAP        #15                 ; trap call
00002FDC  6000 0592               3194              BRA         endSUB              ; go to the end of the subroutine
00002FE0                          3195  
00002FE0  43F9 00003DAD           3196  displayD7   LEA         dispD7, A1          ; Display space
00002FE6  103C 000E               3197              MOVE.B      #14, D0             ; command for trap call to display message
00002FEA  4E4F                    3198              TRAP        #15                 ; trap call
00002FEC  6000 0582               3199              BRA         endSUB              ; go to the end of the subroutine
00002FF0                          3200  ***********************************************************************************************************
00002FF0                          3201  * Address Register
00002FF0  B63C 0000               3202  pAddrReg    CMP.B   #zero,D3
00002FF4  6700 003A               3203              BEQ     displayA0
00002FF8  B63C 0001               3204              CMP.B   #one,D3
00002FFC  6700 0042               3205              BEQ     displayA1
00003000  B63C 0002               3206              CMP.B   #two,D3
00003004  6700 004A               3207              BEQ     displayA2
00003008  B63C 0003               3208              CMP.B   #three,D3
0000300C  6700 0052               3209              BEQ     displayA3
00003010  B63C 0004               3210              CMP.B   #four,D3
00003014  6700 005A               3211              BEQ     displayA4
00003018  B63C 0005               3212              CMP.B   #five,D3
0000301C  6700 0062               3213              BEQ     displayA5
00003020  B63C 0006               3214              CMP.B   #six,D3
00003024  6700 006A               3215              BEQ     displayA6
00003028  B63C 0007               3216              CMP.B   #seven,D3
0000302C  6700 0072               3217              BEQ     displayA7
00003030                          3218              
00003030  43F9 00003D7E           3219  displayA0   LEA         dispA0, A1          ; Display space
00003036  103C 000E               3220              MOVE.B      #14, D0             ; command for trap call to display message
0000303A  4E4F                    3221              TRAP        #15                 ; trap call
0000303C  6000 0532               3222              BRA         endSUB              ; go to the end of the subroutine
00003040                          3223              
00003040  43F9 00003D81           3224  displayA1   LEA         dispA1, A1          ; Display space
00003046  103C 000E               3225              MOVE.B      #14, D0             ; command for trap call to display message
0000304A  4E4F                    3226              TRAP        #15                 ; trap call
0000304C  6000 0522               3227              BRA         endSUB              ; go to the end of the subroutine
00003050                          3228  
00003050  43F9 00003D84           3229  displayA2   LEA         dispA2, A1          ; Display space
00003056  103C 000E               3230              MOVE.B      #14, D0             ; command for trap call to display message
0000305A  4E4F                    3231              TRAP        #15                 ; trap call
0000305C  6000 0512               3232              BRA         endSUB              ; go to the end of the subroutine
00003060                          3233  
00003060  43F9 00003D87           3234  displayA3   LEA         dispA3, A1          ; Display space
00003066  103C 000E               3235              MOVE.B      #14, D0             ; command for trap call to display message
0000306A  4E4F                    3236              TRAP        #15                 ; trap call
0000306C  6000 0502               3237              BRA         endSUB              ; go to the end of the subroutine
00003070                          3238  
00003070  43F9 00003D8A           3239  displayA4   LEA         dispA4, A1          ; Display space
00003076  103C 000E               3240              MOVE.B      #14, D0             ; command for trap call to display message
0000307A  4E4F                    3241              TRAP        #15                 ; trap call
0000307C  6000 04F2               3242              BRA         endSUB              ; go to the end of the subroutine
00003080                          3243  
00003080  43F9 00003D8D           3244  displayA5   LEA         dispA5, A1          ; Display space
00003086  103C 000E               3245              MOVE.B      #14, D0             ; command for trap call to display message
0000308A  4E4F                    3246              TRAP        #15                 ; trap call
0000308C  6000 04E2               3247              BRA         endSUB              ; go to the end of the subroutine
00003090                          3248  
00003090  43F9 00003D90           3249  displayA6   LEA         dispA6, A1          ; Display space
00003096  103C 000E               3250              MOVE.B      #14, D0             ; command for trap call to display message
0000309A  4E4F                    3251              TRAP        #15                 ; trap call
0000309C  6000 04D2               3252              BRA         endSUB              ; go to the end of the subroutine
000030A0                          3253  
000030A0  43F9 00003D93           3254  displayA7   LEA         dispA7, A1          ; Display space
000030A6  103C 000E               3255              MOVE.B      #14, D0             ; command for trap call to display message
000030AA  4E4F                    3256              TRAP        #15                 ; trap call
000030AC  6000 04C2               3257              BRA         endSUB              ; go to the end of the subroutine
000030B0                          3258  
000030B0                          3259  ***********************************************************************************************************
000030B0                          3260  * Address Register Direct
000030B0                          3261  
000030B0  43F9 00003CE4           3262  pAddrDir    LEA         opPer, A1           ; Display space
000030B6  103C 000E               3263              MOVE.B      #14, D0             ; command for trap call to display message
000030BA  4E4F                    3264              TRAP        #15                 ; trap call
000030BC                          3265              
000030BC  B63C 0000               3266              CMP.B   #zero,D3
000030C0  6700 003A               3267              BEQ     displayA0A
000030C4  B63C 0001               3268              CMP.B   #one,D3
000030C8  6700 004E               3269              BEQ     displayA1A
000030CC  B63C 0002               3270              CMP.B   #two,D3
000030D0  6700 0062               3271              BEQ     displayA2A
000030D4  B63C 0003               3272              CMP.B   #three,D3
000030D8  6700 0076               3273              BEQ     displayA3A
000030DC  B63C 0004               3274              CMP.B   #four,D3
000030E0  6700 008A               3275              BEQ     displayA4A
000030E4  B63C 0005               3276              CMP.B   #five,D3
000030E8  6700 009E               3277              BEQ     displayA5A
000030EC  B63C 0006               3278              CMP.B   #six,D3
000030F0  6700 00B2               3279              BEQ     displayA6A
000030F4  B63C 0007               3280              CMP.B   #seven,D3
000030F8  6700 00C6               3281              BEQ     displayA7A
000030FC                          3282              
000030FC  43F9 00003D7E           3283  displayA0A  LEA         dispA0, A1          ; Display space
00003102  103C 000E               3284              MOVE.B      #14, D0             ; command for trap call to display message
00003106  4E4F                    3285              TRAP        #15                 ; trap call
00003108  43F9 00003CE6           3286              LEA         clPer, A1           ; Display space
0000310E  103C 000E               3287              MOVE.B      #14, D0             ; command for trap call to display message
00003112  4E4F                    3288              TRAP        #15                 ; trap call
00003114  6000 045A               3289              BRA         endSUB              ; go to the end of the subroutine
00003118                          3290              
00003118  43F9 00003D81           3291  displayA1A  LEA         dispA1, A1          ; Display space
0000311E  103C 000E               3292              MOVE.B      #14, D0             ; command for trap call to display message
00003122  4E4F                    3293              TRAP        #15                 ; trap call
00003124  43F9 00003CE6           3294              LEA         clPer, A1           ; Display space
0000312A  103C 000E               3295              MOVE.B      #14, D0             ; command for trap call to display message
0000312E  4E4F                    3296              TRAP        #15                 ; trap call
00003130  6000 043E               3297              BRA         endSUB              ; go to the end of the subroutine
00003134                          3298  
00003134  43F9 00003D84           3299  displayA2A  LEA         dispA2, A1          ; Display space
0000313A  103C 000E               3300              MOVE.B      #14, D0             ; command for trap call to display message
0000313E  4E4F                    3301              TRAP        #15                 ; trap call
00003140  43F9 00003CE6           3302              LEA         clPer, A1           ; Display space
00003146  103C 000E               3303              MOVE.B      #14, D0             ; command for trap call to display message
0000314A  4E4F                    3304              TRAP        #15                 ; trap call
0000314C  6000 0422               3305              BRA         endSUB              ; go to the end of the subroutine
00003150                          3306  
00003150  43F9 00003D87           3307  displayA3A  LEA         dispA3, A1          ; Display space
00003156  103C 000E               3308              MOVE.B      #14, D0             ; command for trap call to display message
0000315A  4E4F                    3309              TRAP        #15                 ; trap call
0000315C  43F9 00003CE6           3310              LEA         clPer, A1           ; Display space
00003162  103C 000E               3311              MOVE.B      #14, D0             ; command for trap call to display message
00003166  4E4F                    3312              TRAP        #15                 ; trap call
00003168  6000 0406               3313              BRA         endSUB              ; go to the end of the subroutine
0000316C                          3314  
0000316C  43F9 00003D8A           3315  displayA4A  LEA         dispA4, A1          ; Display space
00003172  103C 000E               3316              MOVE.B      #14, D0             ; command for trap call to display message
00003176  4E4F                    3317              TRAP        #15                 ; trap call
00003178  43F9 00003CE6           3318              LEA         clPer, A1           ; Display space
0000317E  103C 000E               3319              MOVE.B      #14, D0             ; command for trap call to display message
00003182  4E4F                    3320              TRAP        #15                 ; trap call
00003184  6000 03EA               3321              BRA         endSUB              ; go to the end of the subroutine
00003188                          3322  
00003188  43F9 00003D8D           3323  displayA5A  LEA         dispA5, A1          ; Display space
0000318E  103C 000E               3324              MOVE.B      #14, D0             ; command for trap call to display message
00003192  4E4F                    3325              TRAP        #15                 ; trap call
00003194  43F9 00003CE6           3326              LEA         clPer, A1           ; Display space
0000319A  103C 000E               3327              MOVE.B      #14, D0             ; command for trap call to display message
0000319E  4E4F                    3328              TRAP        #15                 ; trap call
000031A0  6000 03CE               3329              BRA         endSUB              ; go to the end of the subroutine
000031A4                          3330  
000031A4  43F9 00003D90           3331  displayA6A  LEA         dispA6, A1          ; Display space
000031AA  103C 000E               3332              MOVE.B      #14, D0             ; command for trap call to display message
000031AE  4E4F                    3333              TRAP        #15                 ; trap call
000031B0  43F9 00003CE6           3334              LEA         clPer, A1           ; Display space
000031B6  103C 000E               3335              MOVE.B      #14, D0             ; command for trap call to display message
000031BA  4E4F                    3336              TRAP        #15                 ; trap call
000031BC  6000 03B2               3337              BRA         endSUB              ; go to the end of the subroutine
000031C0                          3338  
000031C0  43F9 00003D93           3339  displayA7A  LEA         dispA7, A1          ; Display space
000031C6  103C 000E               3340              MOVE.B      #14, D0             ; command for trap call to display message
000031CA  4E4F                    3341              TRAP        #15                 ; trap call
000031CC  43F9 00003CE6           3342              LEA         clPer, A1           ; Display space
000031D2  103C 000E               3343              MOVE.B      #14, D0             ; command for trap call to display message
000031D6  4E4F                    3344              TRAP        #15                 ; trap call
000031D8  6000 0396               3345              BRA         endSUB              ; go to the end of the subroutine
000031DC                          3346              
000031DC                          3347  ***********************************************************************************************************
000031DC                          3348  * Addr Postincrement
000031DC                          3349              
000031DC  43F9 00003CE4           3350  pAddrPost   LEA         opPer, A1           ; Display space
000031E2  103C 000E               3351              MOVE.B      #14, D0             ; command for trap call to display message
000031E6  4E4F                    3352              TRAP        #15                 ; trap call
000031E8                          3353              
000031E8  B63C 0000               3354              CMP.B   #zero,D3
000031EC  6700 003A               3355              BEQ     displayA0P
000031F0  B63C 0001               3356              CMP.B   #one,D3
000031F4  6700 005A               3357              BEQ     displayA1P
000031F8  B63C 0002               3358              CMP.B   #two,D3
000031FC  6700 007A               3359              BEQ     displayA2P
00003200  B63C 0003               3360              CMP.B   #three,D3
00003204  6700 009A               3361              BEQ     displayA3P
00003208  B63C 0004               3362              CMP.B   #four,D3
0000320C  6700 00BA               3363              BEQ     displayA4P
00003210  B63C 0005               3364              CMP.B   #five,D3
00003214  6700 00DA               3365              BEQ     displayA5P
00003218  B63C 0006               3366              CMP.B   #six,D3
0000321C  6700 00FA               3367              BEQ     displayA6P
00003220  B63C 0007               3368              CMP.B   #seven,D3
00003224  6700 011A               3369              BEQ     displayA7P
00003228                          3370              
00003228  43F9 00003D7E           3371  displayA0P  LEA         dispA0, A1          ; Display space
0000322E  103C 000E               3372              MOVE.B      #14, D0             ; command for trap call to display message
00003232  4E4F                    3373              TRAP        #15                 ; trap call
00003234  43F9 00003CE6           3374              LEA         clPer, A1           ; Display space
0000323A  103C 000E               3375              MOVE.B      #14, D0             ; command for trap call to display message
0000323E  4E4F                    3376              TRAP        #15                 ; trap call
00003240  43F9 00003CEA           3377              LEA         inc, A1             ; Display space
00003246  103C 000E               3378              MOVE.B      #14, D0             ; command for trap call to display message
0000324A  4E4F                    3379              TRAP        #15                 ; trap call
0000324C  6000 0322               3380              BRA         endSUB              ; go to the end of the subroutine
00003250                          3381              
00003250  43F9 00003D81           3382  displayA1P  LEA         dispA1, A1          ; Display space
00003256  103C 000E               3383              MOVE.B      #14, D0             ; command for trap call to display message
0000325A  4E4F                    3384              TRAP        #15                 ; trap call
0000325C  43F9 00003CE6           3385              LEA         clPer, A1           ; Display space
00003262  103C 000E               3386              MOVE.B      #14, D0             ; command for trap call to display message
00003266  4E4F                    3387              TRAP        #15                 ; trap call
00003268  43F9 00003CEA           3388              LEA         inc, A1             ; Display space
0000326E  103C 000E               3389              MOVE.B      #14, D0             ; command for trap call to display message
00003272  4E4F                    3390              TRAP        #15                 ; trap call
00003274  6000 02FA               3391              BRA         endSUB              ; go to the end of the subroutine
00003278                          3392  
00003278  43F9 00003D84           3393  displayA2P  LEA         dispA2, A1          ; Display space
0000327E  103C 000E               3394              MOVE.B      #14, D0             ; command for trap call to display message
00003282  4E4F                    3395              TRAP        #15                 ; trap call
00003284  43F9 00003CE6           3396              LEA         clPer, A1           ; Display space
0000328A  103C 000E               3397              MOVE.B      #14, D0             ; command for trap call to display message
0000328E  4E4F                    3398              TRAP        #15                 ; trap call
00003290  43F9 00003CEA           3399              LEA         inc, A1             ; Display space
00003296  103C 000E               3400              MOVE.B      #14, D0             ; command for trap call to display message
0000329A  4E4F                    3401              TRAP        #15                 ; trap call
0000329C  6000 02D2               3402              BRA         endSUB              ; go to the end of the subroutine
000032A0                          3403  
000032A0  43F9 00003D87           3404  displayA3P  LEA         dispA3, A1          ; Display space
000032A6  103C 000E               3405              MOVE.B      #14, D0             ; command for trap call to display message
000032AA  4E4F                    3406              TRAP        #15                 ; trap call
000032AC  43F9 00003CE6           3407              LEA         clPer, A1           ; Display space
000032B2  103C 000E               3408              MOVE.B      #14, D0             ; command for trap call to display message
000032B6  4E4F                    3409              TRAP        #15                 ; trap call
000032B8  43F9 00003CEA           3410              LEA         inc, A1             ; Display space
000032BE  103C 000E               3411              MOVE.B      #14, D0             ; command for trap call to display message
000032C2  4E4F                    3412              TRAP        #15                 ; trap call
000032C4  6000 02AA               3413              BRA         endSUB              ; go to the end of the subroutine
000032C8                          3414  
000032C8  43F9 00003D8A           3415  displayA4P  LEA         dispA4, A1          ; Display space
000032CE  103C 000E               3416              MOVE.B      #14, D0             ; command for trap call to display message
000032D2  4E4F                    3417              TRAP        #15                 ; trap call
000032D4  43F9 00003CE6           3418              LEA         clPer, A1           ; Display space
000032DA  103C 000E               3419              MOVE.B      #14, D0             ; command for trap call to display message
000032DE  4E4F                    3420              TRAP        #15                 ; trap call
000032E0  43F9 00003CEA           3421              LEA         inc, A1             ; Display space
000032E6  103C 000E               3422              MOVE.B      #14, D0             ; command for trap call to display message
000032EA  4E4F                    3423              TRAP        #15                 ; trap call
000032EC  6000 0282               3424              BRA         endSUB              ; go to the end of the subroutine
000032F0                          3425  
000032F0  43F9 00003D8D           3426  displayA5P  LEA         dispA5, A1          ; Display space
000032F6  103C 000E               3427              MOVE.B      #14, D0             ; command for trap call to display message
000032FA  4E4F                    3428              TRAP        #15                 ; trap call
000032FC  43F9 00003CE6           3429              LEA         clPer, A1           ; Display space
00003302  103C 000E               3430              MOVE.B      #14, D0             ; command for trap call to display message
00003306  4E4F                    3431              TRAP        #15                 ; trap call
00003308  43F9 00003CEA           3432              LEA         inc, A1             ; Display space
0000330E  103C 000E               3433              MOVE.B      #14, D0             ; command for trap call to display message
00003312  4E4F                    3434              TRAP        #15                 ; trap call
00003314  6000 025A               3435              BRA         endSUB              ; go to the end of the subroutine
00003318                          3436  
00003318  43F9 00003D90           3437  displayA6P  LEA         dispA6, A1          ; Display space
0000331E  103C 000E               3438              MOVE.B      #14, D0             ; command for trap call to display message
00003322  4E4F                    3439              TRAP        #15                 ; trap call
00003324  43F9 00003CE6           3440              LEA         clPer, A1           ; Display space
0000332A  103C 000E               3441              MOVE.B      #14, D0             ; command for trap call to display message
0000332E  4E4F                    3442              TRAP        #15                 ; trap call
00003330  43F9 00003CEA           3443              LEA         inc, A1             ; Display space
00003336  103C 000E               3444              MOVE.B      #14, D0             ; command for trap call to display message
0000333A  4E4F                    3445              TRAP        #15                 ; trap call
0000333C  6000 0232               3446              BRA         endSUB              ; go to the end of the subroutine
00003340                          3447  
00003340  43F9 00003D93           3448  displayA7P  LEA         dispA7, A1          ; Display space
00003346  103C 000E               3449              MOVE.B      #14, D0             ; command for trap call to display message
0000334A  4E4F                    3450              TRAP        #15                 ; trap call
0000334C  43F9 00003CE6           3451              LEA         clPer, A1           ; Display space
00003352  103C 000E               3452              MOVE.B      #14, D0             ; command for trap call to display message
00003356  4E4F                    3453              TRAP        #15                 ; trap call
00003358  43F9 00003CEA           3454              LEA         inc, A1             ; Display space
0000335E  103C 000E               3455              MOVE.B      #14, D0             ; command for trap call to display message
00003362  4E4F                    3456              TRAP        #15                 ; trap call
00003364  6000 020A               3457              BRA         endSUB              ; go to the end of the subroutine
00003368                          3458  
00003368                          3459  ***********************************************************************************************************
00003368                          3460  * Addr Postdecrement
00003368                          3461  
00003368  43F9 00003CE8           3462  pAddrDec    LEA         dec, A1             ; Display space
0000336E  103C 000E               3463              MOVE.B      #14, D0             ; command for trap call to display message
00003372  4E4F                    3464              TRAP        #15                 ; trap call
00003374                          3465              
00003374  43F9 00003CE4           3466              LEA         opPer, A1           ; Display space
0000337A  103C 000E               3467              MOVE.B      #14, D0             ; command for trap call to display message
0000337E  4E4F                    3468              TRAP        #15                 ; trap call
00003380                          3469              
00003380  B63C 0000               3470              CMP.B   #zero,D3
00003384  6700 003A               3471              BEQ     displayA0D
00003388  B63C 0001               3472              CMP.B   #one,D3
0000338C  6700 004E               3473              BEQ     displayA1D
00003390  B63C 0002               3474              CMP.B   #two,D3
00003394  6700 0062               3475              BEQ     displayA2D
00003398  B63C 0003               3476              CMP.B   #three,D3
0000339C  6700 0076               3477              BEQ     displayA3D
000033A0  B63C 0004               3478              CMP.B   #four,D3
000033A4  6700 008A               3479              BEQ     displayA4D
000033A8  B63C 0005               3480              CMP.B   #five,D3
000033AC  6700 009E               3481              BEQ     displayA5D
000033B0  B63C 0006               3482              CMP.B   #six,D3
000033B4  6700 00B2               3483              BEQ     displayA6D
000033B8  B63C 0007               3484              CMP.B   #seven,D3
000033BC  6700 00C6               3485              BEQ     displayA7D
000033C0                          3486              
000033C0  43F9 00003D7E           3487  displayA0D  LEA         dispA0, A1          ; Display space
000033C6  103C 000E               3488              MOVE.B      #14, D0             ; command for trap call to display message
000033CA  4E4F                    3489              TRAP        #15                 ; trap call
000033CC  43F9 00003CE6           3490              LEA         clPer, A1           ; Display space
000033D2  103C 000E               3491              MOVE.B      #14, D0             ; command for trap call to display message
000033D6  4E4F                    3492              TRAP        #15                 ; trap call
000033D8  6000 0196               3493              BRA         endSUB              ; go to the end of the subroutine
000033DC                          3494              
000033DC  43F9 00003D81           3495  displayA1D  LEA         dispA1, A1          ; Display space
000033E2  103C 000E               3496              MOVE.B      #14, D0             ; command for trap call to display message
000033E6  4E4F                    3497              TRAP        #15                 ; trap call
000033E8  43F9 00003CE6           3498              LEA         clPer, A1           ; Display space
000033EE  103C 000E               3499              MOVE.B      #14, D0             ; command for trap call to display message
000033F2  4E4F                    3500              TRAP        #15                 ; trap call
000033F4  6000 017A               3501              BRA         endSUB              ; go to the end of the subroutine
000033F8                          3502  
000033F8  43F9 00003D84           3503  displayA2D  LEA         dispA2, A1          ; Display space
000033FE  103C 000E               3504              MOVE.B      #14, D0             ; command for trap call to display message
00003402  4E4F                    3505              TRAP        #15                 ; trap call
00003404  43F9 00003CE6           3506              LEA         clPer, A1           ; Display space
0000340A  103C 000E               3507              MOVE.B      #14, D0             ; command for trap call to display message
0000340E  4E4F                    3508              TRAP        #15                 ; trap call
00003410  6000 015E               3509              BRA         endSUB              ; go to the end of the subroutine
00003414                          3510  
00003414  43F9 00003D87           3511  displayA3D  LEA         dispA3, A1          ; Display space
0000341A  103C 000E               3512              MOVE.B      #14, D0             ; command for trap call to display message
0000341E  4E4F                    3513              TRAP        #15                 ; trap call
00003420  43F9 00003CE6           3514              LEA         clPer, A1           ; Display space
00003426  103C 000E               3515              MOVE.B      #14, D0             ; command for trap call to display message
0000342A  4E4F                    3516              TRAP        #15                 ; trap call
0000342C  6000 0142               3517              BRA         endSUB              ; go to the end of the subroutine
00003430                          3518  
00003430  43F9 00003D8A           3519  displayA4D  LEA         dispA4, A1          ; Display space
00003436  103C 000E               3520              MOVE.B      #14, D0             ; command for trap call to display message
0000343A  4E4F                    3521              TRAP        #15                 ; trap call
0000343C  43F9 00003CE6           3522              LEA         clPer, A1           ; Display space
00003442  103C 000E               3523              MOVE.B      #14, D0             ; command for trap call to display message
00003446  4E4F                    3524              TRAP        #15                 ; trap call
00003448  6000 0126               3525              BRA         endSUB              ; go to the end of the subroutine
0000344C                          3526  
0000344C  43F9 00003D8D           3527  displayA5D  LEA         dispA5, A1          ; Display space
00003452  103C 000E               3528              MOVE.B      #14, D0             ; command for trap call to display message
00003456  4E4F                    3529              TRAP        #15                 ; trap call
00003458  43F9 00003CE6           3530              LEA         clPer, A1           ; Display space
0000345E  103C 000E               3531              MOVE.B      #14, D0             ; command for trap call to display message
00003462  4E4F                    3532              TRAP        #15                 ; trap call
00003464  6000 010A               3533              BRA         endSUB              ; go to the end of the subroutine
00003468                          3534  
00003468  43F9 00003D90           3535  displayA6D  LEA         dispA6, A1          ; Display space
0000346E  103C 000E               3536              MOVE.B      #14, D0             ; command for trap call to display message
00003472  4E4F                    3537              TRAP        #15                 ; trap call
00003474  43F9 00003CE6           3538              LEA         clPer, A1           ; Display space
0000347A  103C 000E               3539              MOVE.B      #14, D0             ; command for trap call to display message
0000347E  4E4F                    3540              TRAP        #15                 ; trap call
00003480  6000 00EE               3541              BRA         endSUB              ; go to the end of the subroutine
00003484                          3542  
00003484  43F9 00003D93           3543  displayA7D  LEA         dispA7, A1          ; Display space
0000348A  103C 000E               3544              MOVE.B      #14, D0             ; command for trap call to display message
0000348E  4E4F                    3545              TRAP        #15                 ; trap call
00003490  43F9 00003CE6           3546              LEA         clPer, A1           ; Display space
00003496  103C 000E               3547              MOVE.B      #14, D0             ; command for trap call to display message
0000349A  4E4F                    3548              TRAP        #15                 ; trap call
0000349C  6000 00D2               3549              BRA         endSUB              ; go to the end of the subroutine
000034A0                          3550  ***********************************************************************************************************
000034A0                          3551  * Display Hex
000034A0                          3552  
000034A0  B63C 0000               3553  pHex        CMP.B       #zero, D3
000034A4  6700 0012               3554              BEQ         AbsShort
000034A8  B63C 0001               3555              CMP.B       #one, D3
000034AC  6700 0042               3556              BEQ         AbsLong
000034B0  B63C 0004               3557              CMP.B       #four, D3
000034B4  6700 0072               3558              BEQ         DispImm
000034B8                          3559              
000034B8  43F9 00003CE4           3560  AbsShort    LEA         opPer, A1           ; Display space
000034BE  103C 000E               3561              MOVE.B      #14, D0             ; command for trap call to display message
000034C2  4E4F                    3562              TRAP        #15                 ; trap call
000034C4                          3563              
000034C4  43F9 00003CE0           3564              LEA         dispHex, A1         ; Display space
000034CA  103C 000E               3565              MOVE.B      #14, D0             ; command for trap call to display message
000034CE  4E4F                    3566              TRAP        #15                 ; trap call
000034D0                          3567              
000034D0  4241                    3568              CLR         D1
000034D2  3218                    3569              MOVE.W      (A0)+, D1
000034D4  4240                    3570              CLR         D0
000034D6  103C 0004               3571              MOVE.B      #4, D0
000034DA                          3572              
000034DA  4EB9 00003AAC           3573              JSR         outHex
000034E0                          3574              
000034E0  43F9 00003CE6           3575              LEA         clPer, A1           ; Display space
000034E6  103C 000E               3576              MOVE.B      #14, D0             ; command for trap call to display message
000034EA  4E4F                    3577              TRAP        #15                 ; trap call
000034EC                          3578              
000034EC  6000 0082               3579              BRA         endSub
000034F0                          3580              
000034F0  43F9 00003CE4           3581  AbsLong     LEA         opPer, A1           ; Display space
000034F6  103C 000E               3582              MOVE.B      #14, D0             ; command for trap call to display message
000034FA  4E4F                    3583              TRAP        #15                 ; trap call
000034FC                          3584              
000034FC  43F9 00003CE0           3585              LEA         dispHex, A1         ; Display space
00003502  103C 000E               3586              MOVE.B      #14, D0             ; command for trap call to display message
00003506  4E4F                    3587              TRAP        #15                 ; trap call
00003508                          3588              
00003508  4241                    3589              CLR         D1
0000350A  2218                    3590              MOVE.L      (A0)+, D1
0000350C  4240                    3591              CLR         D0
0000350E  103C 0008               3592              MOVE.B      #8, D0
00003512                          3593              
00003512  4EB9 00003AAC           3594              JSR         outHex
00003518                          3595              
00003518  43F9 00003CE6           3596              LEA         clPer, A1           ; Display space
0000351E  103C 000E               3597              MOVE.B      #14, D0             ; command for trap call to display message
00003522  4E4F                    3598              TRAP        #15                 ; trap call
00003524                          3599              
00003524  6000 004A               3600              BRA         endSub
00003528                          3601  
00003528  43F9 00003CDE           3602  DispImm     LEA         hashTag, A1         ; Display space
0000352E  103C 000E               3603              MOVE.B      #14, D0             ; command for trap call to display message
00003532  4E4F                    3604              TRAP        #15                 ; trap call
00003534                          3605  
00003534  43F9 00003CE0           3606              LEA         dispHex, A1         ; Display space
0000353A  103C 000E               3607              MOVE.B      #14, D0             ; command for trap call to display message
0000353E  4E4F                    3608              TRAP        #15                 ; trap call
00003540                          3609              
00003540  BC3C 0001               3610              CMP.B       #1,D6
00003544  6700 0016               3611              BEQ         ImmLong
00003548                          3612              
00003548  4241                    3613              CLR         D1
0000354A  3218                    3614              MOVE.W      (A0)+, D1
0000354C  4240                    3615              CLR         D0
0000354E  103C 0004               3616              MOVE.B      #4, D0
00003552  4EB9 00003AAC           3617              JSR         outHex
00003558  6000 0012               3618              BRA         LongSkip
0000355C                          3619              
0000355C  4241                    3620  ImmLong     CLR         D1
0000355E  2218                    3621              MOVE.L      (A0)+, D1
00003560  4240                    3622              CLR         D0
00003562  103C 0008               3623              MOVE.B      #8, D0
00003566  4EB9 00003AAC           3624              JSR         outHex             
0000356C                          3625  
0000356C                          3626  LongSkip
0000356C  6000 0002               3627              BRA         endSub
00003570                          3628  invalid
00003570                          3629  
00003570                          3630  endSUB
00003570                          3631          
00003570  4CDF 7EFF               3632              MOVEM.L  (SP)+, D0-D7/A1-A6
00003574  4E75                    3633              RTS
00003576                          3634  
00003576                          3635  ***********************************************************************************************************
00003576                          3636  ***********************************************************************************************************
00003576                          3637  ***********************************************************************************************************
00003576                          3638  
00003576  48E7 FF7E               3639  MOVEMBRA    MOVEM.L  D0-D7/A1-A6, -(SP)     ; Branches off depending on size bit
0000357A  BA7C 0000               3640              CMP      #zero,D5
0000357E  6700 000A               3641              BEQ      MOVEMW
00003582  BA7C 0001               3642              CMP      #one, D5
00003586  6700 001E               3643              BEQ      MOVEML
0000358A                          3644              
0000358A                          3645  MOVEMW     
0000358A  43F9 00003D78           3646              LEA         dispWord, A1        ; we know that the opcode will be ROR, so load A1 to print message
00003590  103C 000E               3647              MOVE.B      #14, D0             ; command for trap call to display message
00003594  4E4F                    3648              TRAP        #15                 ; trap call
00003596                          3649  
00003596  43F9 00003CDB           3650              LEA         space, A1           ; we know that the opcode will be ROR, so load A1 to print message
0000359C  103C 000E               3651              MOVE.B      #14, D0             ; command for trap call to display message
000035A0  4E4F                    3652              TRAP        #15                 ; trap call
000035A2                          3653              
000035A2  6000 001E               3654              BRA         CheckDR
000035A6                          3655  
000035A6                          3656  MOVEML   
000035A6  43F9 00003D7B           3657              LEA         dispLong, A1        ; we know that the opcode will be ROR, so load A1 to print message
000035AC  103C 000E               3658              MOVE.B      #14, D0             ; command for trap call to display message
000035B0  4E4F                    3659              TRAP        #15                 ; trap call
000035B2                          3660  
000035B2  43F9 00003CDB           3661              LEA         space, A1        ; we know that the opcode will be ROR, so load A1 to print message
000035B8  103C 000E               3662              MOVE.B      #14, D0             ; command for trap call to display message
000035BC  4E4F                    3663              TRAP        #15                 ; trap call
000035BE                          3664           
000035BE                          3665  
000035BE  6000 0002               3666              BRA         CheckDR
000035C2                          3667  
000035C2                          3668  CheckDR     
000035C2                          3669              
000035C2                          3670                
000035C2  3218                    3671              MOVE.W      (A0)+, D1           ; Taking in next word
000035C4  BC7C 0000               3672              CMP         #zero,D6
000035C8  6700 0034               3673              BEQ         printRegMem
000035CC  BC7C 0001               3674              CMP         #one,D6
000035D0  6700 0004               3675              BEQ         printStack
000035D4  609A                    3676              BRA         invalid
000035D6                          3677              
000035D6                          3678  printStack 
000035D6  43F9 00003D70           3679              LEA         stack,A1
000035DC  103C 000E               3680              MOVE.B      #14, D0             ; command for trap call to display message
000035E0  4E4F                    3681              TRAP        #15                 ; trap call
000035E2                          3682  
000035E2  43F9 00003CEA           3683              LEA         inc,A1
000035E8  103C 000E               3684              MOVE.B      #14, D0             ; command for trap call to display message
000035EC  4E4F                    3685              TRAP        #15                 ; trap call
000035EE                          3686              
000035EE  43F9 00003CE2           3687              LEA         comma,A1
000035F4  103C 000E               3688              MOVE.B      #14, D0             ; command for trap call to display message
000035F8  4E4F                    3689              TRAP        #15                 ; trap call
000035FA                          3690              
000035FA                          3691              
000035FA  6000 0002               3692              BRA         printRegMem
000035FE                          3693             
000035FE                          3694  printRegMem 
000035FE  4244                    3695              CLR         D4                  ; Using D4 to store predecrement mode addresses
00003600  1801                    3696              MOVE.B      D1,D4               ; Stores bits for D0-D7
00003602                          3697              
00003602  4245                    3698              CLR         D5
00003604  1A01                    3699              MOVE.B      D1,D5
00003606  CA7C 0001               3700              AND         #mask1,D5
0000360A  BA7C 0001               3701              CMP         #mask1,D5
0000360E  6700 007A               3702              BEQ         DataReg0
00003612                          3703              
00003612  4245                    3704              CLR         D5
00003614  1A01                    3705              MOVE.B      D1,D5
00003616  CA7C 0002               3706              AND         #mask2,D5
0000361A  BA7C 0002               3707              CMP         #mask2,D5
0000361E  6700 009A               3708              BEQ         DataReg1
00003622                          3709  
00003622  4245                    3710              CLR         D5
00003624  1A01                    3711              MOVE.B      D1,D5
00003626  CA7C 0004               3712              AND         #mask3,D5
0000362A  BA7C 0004               3713              CMP         #mask3,D5
0000362E  6700 00CA               3714              BEQ         DataReg2            
00003632                          3715              
00003632  4245                    3716              CLR         D5
00003634  1A01                    3717              MOVE.B      D1,D5
00003636  CA7C 0008               3718              AND         #mask4,D5
0000363A  BA7C 0008               3719              CMP         #mask4,D5
0000363E  6700 00FA               3720              BEQ         DataReg3            
00003642                          3721              
00003642  4245                    3722              CLR         D5
00003644  1A01                    3723              MOVE.B      D1,D5
00003646  CA7C 0010               3724              AND         #mask5,D5
0000364A  BA7C 0010               3725              CMP         #mask5,D5
0000364E  6700 012A               3726              BEQ         DataReg4
00003652                          3727  
00003652  4245                    3728              CLR         D5
00003654  1A01                    3729              MOVE.B      D1,D5
00003656  CA7C 0020               3730              AND         #mask6,D5
0000365A  BA7C 0020               3731              CMP         #mask6,D5
0000365E  6700 015A               3732              BEQ         DataReg5
00003662                          3733  
00003662  4245                    3734              CLR         D5
00003664  1A01                    3735              MOVE.B      D1,D5
00003666  CA7C 0040               3736              AND         #mask7,D5
0000366A  BA7C 0040               3737              CMP         #mask7,D5
0000366E  6700 018A               3738              BEQ         DataReg6
00003672                          3739  
00003672  4245                    3740              CLR         D5
00003674  1A01                    3741              MOVE.B      D1,D5
00003676  CA7C 0080               3742              AND         #mask8,D5
0000367A  BA7C 0080               3743              CMP         #mask8,D5
0000367E  6700 01BA               3744              BEQ         DataReg7
00003682                          3745              
00003682  6000 FEEC               3746              BRA         invalid
00003686  6000 FEE8               3747              BRA         invalid        
0000368A                          3748              
0000368A                          3749  DataReg0
0000368A  43F9 00003D98           3750              LEA         dispD0, A1          ; Output string D0
00003690  103C 000E               3751              MOVE.B      #14, D0             ; command for trap call to display message
00003694  4E4F                    3752              TRAP        #15                 ; trap call
00003696                          3753              
00003696  4245                    3754              CLR         D5
00003698  1A01                    3755              MOVE.B      D1,D5
0000369A  CA7C 0002               3756              AND         #mask2,D5
0000369E  BA7C 0002               3757              CMP         #mask2,D5
000036A2  6700 0006               3758              BEQ         Reg0Cont
000036A6  6000 01A2               3759              BRA         printMem
000036AA                          3760  Reg0Cont        
000036AA  43F9 00003CE8           3761              LEA         dec, A1             ; Output -
000036B0  103C 000E               3762              MOVE.B      #14, D0             ; command for trap call to display message
000036B4  4E4F                    3763              TRAP        #15                 ; trap call        
000036B6  6000 0002               3764              BRA         DataReg1
000036BA                          3765  
000036BA                          3766  DataReg1
000036BA  4245                    3767              CLR         D5
000036BC  1A01                    3768              MOVE.B      D1,D5
000036BE  CA7C 0005               3769              AND         #maskA,D5
000036C2  BA7C 0005               3770              CMP         #maskA,D5
000036C6  6700 0032               3771              BEQ         DataReg2
000036CA                          3772              
000036CA  43F9 00003D9B           3773              LEA         dispD1, A1          ; Output string D0
000036D0  103C 000E               3774              MOVE.B      #14, D0             ; command for trap call to display message
000036D4  4E4F                    3775              TRAP        #15                 ; trap call
000036D6                          3776              
000036D6  4245                    3777              CLR         D5
000036D8  1A01                    3778              MOVE.B      D1,D5
000036DA  CA7C 0004               3779              AND         #mask3,D5
000036DE  BA7C 0004               3780              CMP         #mask3,D5
000036E2  6700 0006               3781              BEQ         Reg1Cont
000036E6  6000 0162               3782              BRA         printMem
000036EA                          3783  Reg1Cont        
000036EA  43F9 00003CE8           3784              LEA         dec, A1             ; Output -
000036F0  103C 000E               3785              MOVE.B      #14, D0             ; command for trap call to display message
000036F4  4E4F                    3786              TRAP        #15                 ; trap call        
000036F6  6000 0002               3787              BRA         DataReg2
000036FA                          3788  
000036FA                          3789  
000036FA                          3790  DataReg2
000036FA  4245                    3791              CLR         D5
000036FC  1A01                    3792              MOVE.B      D1,D5
000036FE  CA7C 000A               3793              AND         #maskB,D5
00003702  BA7C 000A               3794              CMP         #maskB,D5
00003706  6700 0032               3795              BEQ         DataReg3
0000370A                          3796              
0000370A                          3797              
0000370A  43F9 00003D9E           3798              LEA         dispD2, A1          ; Output string D0
00003710  103C 000E               3799              MOVE.B      #14, D0             ; command for trap call to display message
00003714  4E4F                    3800              TRAP        #15                 ; trap call
00003716                          3801              
00003716  4245                    3802              CLR         D5
00003718  1A01                    3803              MOVE.B      D1,D5
0000371A  CA7C 0008               3804              AND         #mask4,D5
0000371E  BA7C 0008               3805              CMP         #mask4,D5
00003722  6700 0006               3806              BEQ         Reg2Cont
00003726  6000 0122               3807              BRA         printMem
0000372A                          3808  Reg2Cont        
0000372A  43F9 00003CE8           3809              LEA         dec, A1             ; Output -
00003730  103C 000E               3810              MOVE.B      #14, D0             ; command for trap call to display message
00003734  4E4F                    3811              TRAP        #15                 ; trap call        
00003736  6000 0002               3812              BRA         DataReg3
0000373A                          3813  
0000373A                          3814  DataReg3
0000373A  4245                    3815              CLR         D5
0000373C  1A01                    3816              MOVE.B      D1,D5
0000373E  CA7C 0014               3817              AND         #maskC,D5
00003742  BA7C 0014               3818              CMP         #maskC,D5
00003746  6700 0032               3819              BEQ         DataReg4
0000374A                          3820              
0000374A  43F9 00003DA1           3821              LEA         dispD3, A1          ; Output string D0
00003750  103C 000E               3822              MOVE.B      #14, D0             ; command for trap call to display message
00003754  4E4F                    3823              TRAP        #15                 ; trap call
00003756                          3824              
00003756  4245                    3825              CLR         D5
00003758  1A01                    3826              MOVE.B      D1,D5
0000375A  CA7C 0010               3827              AND         #mask5,D5
0000375E  BA7C 0010               3828              CMP         #mask5,D5
00003762  6700 0006               3829              BEQ         Reg3Cont
00003766  6000 00E2               3830              BRA         printMem
0000376A                          3831  Reg3Cont        
0000376A  43F9 00003CE8           3832              LEA         dec, A1             ; Output -
00003770  103C 000E               3833              MOVE.B      #14, D0             ; command for trap call to display message
00003774  4E4F                    3834              TRAP        #15                 ; trap call        
00003776  6000 0002               3835              BRA         DataReg4
0000377A                          3836  
0000377A                          3837  
0000377A                          3838  DataReg4
0000377A  4245                    3839              CLR         D5
0000377C  1A01                    3840              MOVE.B      D1,D5
0000377E  CA7C 0028               3841              AND         #maskD,D5
00003782  BA7C 0028               3842              CMP         #maskD,D5
00003786  6700 0032               3843              BEQ         DataReg5
0000378A                          3844              
0000378A  43F9 00003DA4           3845              LEA         dispD4, A1          ; Output string D0
00003790  103C 000E               3846              MOVE.B      #14, D0             ; command for trap call to display message
00003794  4E4F                    3847              TRAP        #15                 ; trap call
00003796                          3848              
00003796  4245                    3849              CLR         D5
00003798  1A01                    3850              MOVE.B      D1,D5
0000379A  CA7C 0020               3851              AND         #mask6,D5
0000379E  BA7C 0020               3852              CMP         #mask6,D5
000037A2  6700 0006               3853              BEQ         Reg4Cont
000037A6  6000 00A2               3854              BRA         printMem
000037AA                          3855  Reg4Cont        
000037AA  43F9 00003CE8           3856              LEA         dec, A1             ; Output -
000037B0  103C 000E               3857              MOVE.B      #14, D0             ; command for trap call to display message
000037B4  4E4F                    3858              TRAP        #15                 ; trap call        
000037B6  6000 0002               3859              BRA         DataReg5
000037BA                          3860  
000037BA                          3861  DataReg5
000037BA  4245                    3862              CLR         D5
000037BC  1A01                    3863              MOVE.B      D1,D5
000037BE  CA7C 0050               3864              AND         #maskE,D5
000037C2  BA7C 0050               3865              CMP         #maskE,D5
000037C6  6700 0032               3866              BEQ         DataReg6
000037CA                          3867              
000037CA  43F9 00003DA7           3868              LEA         dispD5, A1          ; Output string D0
000037D0  103C 000E               3869              MOVE.B      #14, D0             ; command for trap call to display message
000037D4  4E4F                    3870              TRAP        #15                 ; trap call
000037D6                          3871              
000037D6  4245                    3872              CLR         D5
000037D8  1A01                    3873              MOVE.B      D1,D5
000037DA  CA7C 0040               3874              AND         #mask7,D5
000037DE  BA7C 0040               3875              CMP         #mask7,D5
000037E2  6700 0006               3876              BEQ         Reg5Cont
000037E6  6000 0062               3877              BRA         printMem
000037EA                          3878  Reg5Cont        
000037EA  43F9 00003CE8           3879              LEA         dec, A1             ; Output -
000037F0  103C 000E               3880              MOVE.B      #14, D0             ; command for trap call to display message
000037F4  4E4F                    3881              TRAP        #15                 ; trap call        
000037F6  6000 0042               3882              BRA         DataReg7
000037FA                          3883  
000037FA                          3884  DataReg6
000037FA  4245                    3885              CLR         D5
000037FC  1A01                    3886              MOVE.B      D1,D5
000037FE  CA7C 00A0               3887              AND         #maskF,D5
00003802  BA7C 00A0               3888              CMP         #maskF,D5
00003806  6700 0032               3889              BEQ         DataReg7
0000380A                          3890  
0000380A  43F9 00003DAA           3891              LEA         dispD6, A1          ; Output string D0
00003810  103C 000E               3892              MOVE.B      #14, D0             ; command for trap call to display message
00003814  4E4F                    3893              TRAP        #15                 ; trap call
00003816                          3894              
00003816  4245                    3895              CLR         D5
00003818  1A01                    3896              MOVE.B      D1,D5
0000381A  CA7C 0080               3897              AND         #mask8,D5
0000381E  BA7C 0080               3898              CMP         #mask8,D5
00003822  6700 0006               3899              BEQ         Reg6Cont
00003826  6000 0022               3900              BRA         printMem
0000382A                          3901  Reg6Cont        
0000382A  43F9 00003CE8           3902              LEA         dec, A1             ; Output -
00003830  103C 000E               3903              MOVE.B      #14, D0             ; command for trap call to display message
00003834  4E4F                    3904              TRAP        #15                 ; trap call        
00003836  6000 0002               3905              BRA         DataReg7
0000383A                          3906  
0000383A                          3907  DataReg7    
0000383A  43F9 00003DAD           3908              LEA         dispD7, A1             ; Output -
00003840  103C 000E               3909              MOVE.B      #14, D0             ; command for trap call to display message
00003844  4E4F                    3910              TRAP        #15                 ; trap call        
00003846  6000 0002               3911              BRA         printMem            
0000384A                          3912  printMem                                    ; Made this function in order to reuse if DR is 1
0000384A  6000 0002               3913              BRA         printMemNow
0000384E                          3914  printMemNow               
0000384E  43F9 00003D6E           3915              LEA         slash, A1           ; Display slash
00003854  103C 000E               3916              MOVE.B      #14, D0             ; command for trap call to display message
00003858  4E4F                    3917              TRAP        #15                 ; trap call
0000385A                          3918           
0000385A  4244                    3919              CLR         D4                  ; Using D4 to store predecrement mode addresses
0000385C  3801                    3920              MOVE.W      D1,D4               ; Stores bits for D0-D7
0000385E  E044                    3921              ASR         #eight,D4
00003860                          3922              
00003860  4245                    3923              CLR         D5
00003862  1A04                    3924              MOVE.B      D4,D5
00003864  CA7C 0001               3925              AND         #mask1,D5
00003868  BA7C 0001               3926              CMP         #mask1,D5
0000386C  6700 0072               3927              BEQ         AddrReg0
00003870                          3928              
00003870  4245                    3929              CLR         D5
00003872  1A04                    3930              MOVE.B      D4,D5
00003874  CA7C 0002               3931              AND         #mask2,D5
00003878  BA7C 0002               3932              CMP         #mask2,D5
0000387C  6700 0092               3933              BEQ         AddrReg1
00003880                          3934  
00003880  4245                    3935              CLR         D5
00003882  1A04                    3936              MOVE.B      D4,D5
00003884  CA7C 0004               3937              AND         #mask3,D5
00003888  BA7C 0004               3938              CMP         #mask3,D5
0000388C  6700 00C2               3939              BEQ         AddrReg2            
00003890                          3940              
00003890  4245                    3941              CLR         D5
00003892  1A04                    3942              MOVE.B      D4,D5
00003894  CA7C 0008               3943              AND         #mask4,D5
00003898  BA7C 0008               3944              CMP         #mask4,D5
0000389C  6700 00F2               3945              BEQ         AddrReg3            
000038A0                          3946              
000038A0  4245                    3947              CLR         D5
000038A2  1A04                    3948              MOVE.B      D4,D5
000038A4  CA7C 0010               3949              AND         #mask5,D5
000038A8  BA7C 0010               3950              CMP         #mask5,D5
000038AC  6700 0122               3951              BEQ         AddrReg4
000038B0                          3952  
000038B0  4245                    3953              CLR         D5
000038B2  1A04                    3954              MOVE.B      D4,D5
000038B4  CA7C 0020               3955              AND         #mask6,D5
000038B8  BA7C 0020               3956              CMP         #mask6,D5
000038BC  6700 0152               3957              BEQ         AddrReg5
000038C0                          3958  
000038C0  4245                    3959              CLR         D5
000038C2  1A04                    3960              MOVE.B      D4,D5
000038C4  CA7C 0040               3961              AND         #mask7,D5
000038C8  BA7C 0040               3962              CMP         #mask7,D5
000038CC  6700 0182               3963              BEQ         AddrReg6
000038D0                          3964  
000038D0  4245                    3965              CLR         D5
000038D2  1A04                    3966              MOVE.B      D4,D5
000038D4  CA7C 0080               3967              AND         #mask8,D5
000038D8  BA7C 0080               3968              CMP         #mask8,D5
000038DC  6700 01B2               3969              BEQ         AddrReg7
000038E0                          3970  AddrReg0
000038E0  43F9 00003D7E           3971              LEA         dispA0, A1          ; Output string D0
000038E6  103C 000E               3972              MOVE.B      #14, D0             ; command for trap call to display message
000038EA  4E4F                    3973              TRAP        #15                 ; trap call
000038EC                          3974              
000038EC  4245                    3975              CLR         D5
000038EE  1A01                    3976              MOVE.B      D1,D5
000038F0  CA7C 0002               3977              AND         #mask2,D5
000038F4  BA7C 0002               3978              CMP         #mask2,D5
000038F8  6700 0006               3979              BEQ         Addr0Cont
000038FC  6000 01A2               3980              BRA         endMOVE
00003900                          3981  Addr0Cont        
00003900  43F9 00003CE8           3982              LEA         dec, A1             ; Output -
00003906  103C 000E               3983              MOVE.B      #14, D0             ; command for trap call to display message
0000390A  4E4F                    3984              TRAP        #15                 ; trap call        
0000390C  6000 0002               3985              BRA         AddrReg1
00003910                          3986  
00003910                          3987  AddrReg1
00003910  4245                    3988              CLR         D5
00003912  1A04                    3989              MOVE.B      D4,D5
00003914  CA7C 0005               3990              AND         #maskA,D5
00003918  BA7C 0005               3991              CMP         #maskA,D5
0000391C  6700 0032               3992              BEQ         AddrReg2
00003920                          3993              
00003920  43F9 00003D81           3994              LEA         dispA1, A1          ; Output string D0
00003926  103C 000E               3995              MOVE.B      #14, D0             ; command for trap call to display message
0000392A  4E4F                    3996              TRAP        #15                 ; trap call
0000392C                          3997              
0000392C  4245                    3998              CLR         D5
0000392E  1A04                    3999              MOVE.B      D4,D5
00003930  CA7C 0004               4000              AND         #mask3,D5
00003934  BA7C 0004               4001              CMP         #mask3,D5
00003938  6700 0006               4002              BEQ         Addr1Cont
0000393C  6000 0162               4003              BRA         endMOVE
00003940                          4004  Addr1Cont        
00003940  43F9 00003CE8           4005              LEA         dec, A1             ; Output -
00003946  103C 000E               4006              MOVE.B      #14, D0             ; command for trap call to display message
0000394A  4E4F                    4007              TRAP        #15                 ; trap call        
0000394C  6000 0002               4008              BRA         AddrReg2
00003950                          4009  
00003950                          4010  
00003950                          4011  AddrReg2
00003950  4245                    4012              CLR         D5
00003952  1A04                    4013              MOVE.B      D4,D5
00003954  CA7C 000A               4014              AND         #maskB,D5
00003958  BA7C 000A               4015              CMP         #maskB,D5
0000395C  6700 0032               4016              BEQ         AddrReg3
00003960                          4017              
00003960                          4018              
00003960  43F9 00003D84           4019              LEA         dispA2, A1          ; Output string D0
00003966  103C 000E               4020              MOVE.B      #14, D0             ; command for trap call to display message
0000396A  4E4F                    4021              TRAP        #15                 ; trap call
0000396C                          4022              
0000396C  4245                    4023              CLR         D5
0000396E  1A04                    4024              MOVE.B      D4,D5
00003970  CA7C 0008               4025              AND         #mask4,D5
00003974  BA7C 0008               4026              CMP         #mask4,D5
00003978  6700 0006               4027              BEQ         Addr2Cont
0000397C  6000 0122               4028              BRA         endMOVE
00003980                          4029  Addr2Cont        
00003980  43F9 00003CE8           4030              LEA         dec, A1             ; Output -
00003986  103C 000E               4031              MOVE.B      #14, D0             ; command for trap call to display message
0000398A  4E4F                    4032              TRAP        #15                 ; trap call        
0000398C  6000 0002               4033              BRA         AddrReg3
00003990                          4034  
00003990                          4035  AddrReg3
00003990  4245                    4036              CLR         D5
00003992  1A04                    4037              MOVE.B      D4,D5
00003994  CA7C 0014               4038              AND         #maskC,D5
00003998  BA7C 0014               4039              CMP         #maskC,D5
0000399C  6700 0032               4040              BEQ         AddrReg4
000039A0                          4041              
000039A0  43F9 00003D87           4042              LEA         dispA3, A1          ; Output string D0
000039A6  103C 000E               4043              MOVE.B      #14, D0             ; command for trap call to display message
000039AA  4E4F                    4044              TRAP        #15                 ; trap call
000039AC                          4045              
000039AC  4245                    4046              CLR         D5
000039AE  1A04                    4047              MOVE.B      D4,D5
000039B0  CA7C 0010               4048              AND         #mask5,D5
000039B4  BA7C 0010               4049              CMP         #mask5,D5
000039B8  6700 0006               4050              BEQ         Addr3Cont
000039BC  6000 00E2               4051              BRA         endMOVE
000039C0                          4052  Addr3Cont        
000039C0  43F9 00003CE8           4053              LEA         dec, A1             ; Output -
000039C6  103C 000E               4054              MOVE.B      #14, D0             ; command for trap call to display message
000039CA  4E4F                    4055              TRAP        #15                 ; trap call        
000039CC  6000 0002               4056              BRA         AddrReg4
000039D0                          4057  
000039D0                          4058  
000039D0                          4059  AddrReg4
000039D0  4245                    4060              CLR         D5
000039D2  1A04                    4061              MOVE.B      D4,D5
000039D4  CA7C 0028               4062              AND         #maskD,D5
000039D8  BA7C 0028               4063              CMP         #maskD,D5
000039DC  6700 0032               4064              BEQ         AddrReg5
000039E0                          4065              
000039E0  43F9 00003D8A           4066              LEA         dispA4, A1          ; Output string D0
000039E6  103C 000E               4067              MOVE.B      #14, D0             ; command for trap call to display message
000039EA  4E4F                    4068              TRAP        #15                 ; trap call
000039EC                          4069              
000039EC  4245                    4070              CLR         D5
000039EE  1A04                    4071              MOVE.B      D4,D5
000039F0  CA7C 0020               4072              AND         #mask6,D5
000039F4  BA7C 0020               4073              CMP         #mask6,D5
000039F8  6700 0006               4074              BEQ         Addr4Cont
000039FC  6000 00A2               4075              BRA         endMOVE
00003A00                          4076  Addr4Cont        
00003A00  43F9 00003CE8           4077              LEA         dec, A1             ; Output -
00003A06  103C 000E               4078              MOVE.B      #14, D0             ; command for trap call to display message
00003A0A  4E4F                    4079              TRAP        #15                 ; trap call        
00003A0C  6000 0002               4080              BRA         AddrReg5
00003A10                          4081  AddrReg5
00003A10  4245                    4082              CLR         D5
00003A12  1A04                    4083              MOVE.B      D4,D5
00003A14  CA7C 0050               4084              AND         #maskE,D5
00003A18  BA7C 0050               4085              CMP         #maskE,D5
00003A1C  6700 0032               4086              BEQ         AddrReg6
00003A20                          4087              
00003A20  43F9 00003D8D           4088              LEA         dispA5, A1          ; Output string D0
00003A26  103C 000E               4089              MOVE.B      #14, D0             ; command for trap call to display message
00003A2A  4E4F                    4090              TRAP        #15                 ; trap call
00003A2C                          4091              
00003A2C  4245                    4092              CLR         D5
00003A2E  1A04                    4093              MOVE.B      D4,D5
00003A30  CA7C 0040               4094              AND         #mask7,D5
00003A34  BA7C 0040               4095              CMP         #mask7,D5
00003A38  6700 0006               4096              BEQ         Addr5Cont
00003A3C  6000 0062               4097              BRA         endMOVE
00003A40                          4098  Addr5Cont        
00003A40  43F9 00003CE8           4099              LEA         dec, A1             ; Output -
00003A46  103C 000E               4100              MOVE.B      #14, D0             ; command for trap call to display message
00003A4A  4E4F                    4101              TRAP        #15                 ; trap call        
00003A4C  6000 0042               4102              BRA         AddrReg7
00003A50                          4103  
00003A50                          4104  AddrReg6
00003A50  4245                    4105              CLR         D5
00003A52  1A04                    4106              MOVE.B      D4,D5
00003A54  CA7C 00A0               4107              AND         #maskF,D5
00003A58  BA7C 00A0               4108              CMP         #maskF,D5
00003A5C  6700 0032               4109              BEQ         AddrReg7
00003A60                          4110  
00003A60  43F9 00003D90           4111              LEA         dispA6, A1          ; Output string D0
00003A66  103C 000E               4112              MOVE.B      #14, D0             ; command for trap call to display message
00003A6A  4E4F                    4113              TRAP        #15                 ; trap call
00003A6C                          4114              
00003A6C  4245                    4115              CLR         D5
00003A6E  1A04                    4116              MOVE.B      D4,D5
00003A70  CA7C 0080               4117              AND         #mask8,D5
00003A74  BA7C 0080               4118              CMP         #mask8,D5
00003A78  6700 0006               4119              BEQ         Addr6Cont
00003A7C  6000 0022               4120              BRA         endMOVE
00003A80                          4121  Addr6Cont        
00003A80  43F9 00003CE8           4122              LEA         dec, A1             ; Output -
00003A86  103C 000E               4123              MOVE.B      #14, D0             ; command for trap call to display message
00003A8A  4E4F                    4124              TRAP        #15                 ; trap call        
00003A8C  6000 0002               4125              BRA         AddrReg7
00003A90                          4126  
00003A90                          4127  AddrReg7    
00003A90  43F9 00003D93           4128              LEA         dispA7, A1          ; Output -
00003A96  103C 000E               4129              MOVE.B      #14, D0             ; command for trap call to display message
00003A9A  4E4F                    4130              TRAP        #15                 ; trap call        
00003A9C  6000 0002               4131              BRA         endMOVE
00003AA0                          4132  
00003AA0                          4133  endMOVE
00003AA0  4CDF 7EFF               4134              MOVEM.L  (SP)+, D0-D7/A1-A6
00003AA4  4E75                    4135              RTS
00003AA6                          4136  endMove1                                    ; Used if MOVEM has DR is 1
00003AA6  4CDF 7EFF               4137              MOVEM.L  (SP)+, D0-D7/A1-A6
00003AAA  4E75                    4138              RTS
00003AAC                          4139  
00003AAC                          4140  *this subroutine displays hex code stored in D1. It displays based on the number of 
00003AAC                          4141  *It displays based on the number of hex to display which is stored in D0. If it is a
00003AAC                          4142  *long or word to display, it will figure out the ascii character and add $37 if it
00003AAC                          4143  *is a letter, and $30 if its a number. It will then load the character into D1 and 
00003AAC                          4144  *display it via trap task 6 and loop however many times is needed, 4 or 8. If a word
00003AAC                          4145  *needs to be displayed, it will roll the bits over so that, the hex are shifted by a word.
00003AAC  48E7 FF7E               4146  outHex      MOVEM.L D0-D7/A1-A6, -(SP)
00003AB0  4243                    4147              CLR     D3
00003AB2  4244                    4148              CLR     D4
00003AB4  1800                    4149              MOVE.B  D0, D4
00003AB6  2601                    4150              MOVE.L  D1, D3
00003AB8  B03C 0004               4151              CMP.B   #4, D0
00003ABC  6700 0006               4152              BEQ     moveOver
00003AC0  6000 0006               4153              BRA     dispLOOP
00003AC4                          4154              
00003AC4  E19B                    4155  moveOver    ROL.L   #8,D3
00003AC6  E19B                    4156              ROL.L   #8,D3
00003AC8                          4157              
00003AC8  B83C 0000               4158  dispLOOP    CMP.B   #0, D4
00003ACC  6700 0042               4159              BEQ     endDispSub
00003AD0  E99B                    4160              ROL.L   #4, D3
00003AD2  4245                    4161              CLR     D5
00003AD4  1A03                    4162              MOVE.B  D3, D5 
00003AD6  CABC 0000000F           4163              AND.L   #$0F, D5
00003ADC  BA3C 000A               4164              CMP.B   #10, D5
00003AE0  6D00 0006               4165              BLT     DLnine
00003AE4  6000 0016               4166              BRA     DLetters
00003AE8                          4167              
00003AE8  0645 0030               4168  DLnine      ADD     #$30, D5
00003AEC  4241                    4169              CLR     D1
00003AEE  1205                    4170              MOVE.B  D5, D1
00003AF0  4240                    4171              CLR     D0
00003AF2  103C 0006               4172              MOVE.B  #6, D0
00003AF6  4E4F                    4173              TRAP    #15
00003AF8  5344                    4174              SUB     #1, D4
00003AFA  60CC                    4175              BRA     dispLOOP  
00003AFC                          4176   
00003AFC  0645 0037               4177  DLetters    ADD     #$37, D5
00003B00  4241                    4178              CLR     D1
00003B02  1205                    4179              MOVE.B  D5, D1
00003B04  4240                    4180              CLR     D0
00003B06  103C 0006               4181              MOVE.B  #6, D0
00003B0A  4E4F                    4182              TRAP    #15
00003B0C  5344                    4183              SUB     #1, D4
00003B0E  60B8                    4184              BRA     dispLOOP        
00003B10                          4185  
00003B10  4CDF 7EFF               4186  endDispSub  MOVEM.L  (SP)+, D0-D7/A1-A6
00003B14  4E75                    4187              RTS
00003B16                          4188  
00003B16                          4189  *the following subroutine gets the string address from the user
00003B16                          4190  *and converts it to Hex for a starting/ending address. it is done 
00003B16                          4191  *by checking each byte at address A1, and converting it from ascii to 
00003B16                          4192  *hex number. If the user enters an invalid character string, the
00003B16                          4193  *program will have a simhalt.
00003B16  48E7 1F3E               4194  Address MOVEM.L D3-D7/A2-A6, -(SP)
00003B1A  4242                    4195  Retry   CLR     D2
00003B1C  4243                    4196          CLR     D3
00003B1E  B23C 0004               4197          CMP.B   #4, D1
00003B22  6700 000E               4198          BEQ     subLOOP
00003B26  B23C 0008               4199          CMP.B   #8, D1
00003B2A  6700 0006               4200          BEQ     subLOOP
00003B2E  6000 0126               4201          BRA     ADDinvalid        
00003B32                          4202          
00003B32  E85C                    4203  subLOOP ROR     #4, D4
00003B34  1404                    4204          MOVE.B  D4, D2
00003B36  4244                    4205          CLR     D4
00003B38  4245                    4206          CLR     D5
00003B3A  B601                    4207          CMP.B   D1, D3
00003B3C  6700 012E               4208          BEQ     endLOOP
00003B40  5443                    4209          ADD.W   #2, D3
00003B42  E19A                    4210          ROL.L   #8, D2
00003B44                          4211          
00003B44  E95C                    4212  bytLOOP ROL     #4, D4
00003B46                          4213          
00003B46  0C11 0030               4214          CMP.B   #$30, (A1)
00003B4A  6700 007E               4215          BEQ     hZero 
00003B4E  0C11 0031               4216          CMP.B   #$31, (A1)
00003B52  6700 007E               4217          BEQ     hOne
00003B56  0C11 0032               4218          CMP.B   #$32, (A1)
00003B5A  6700 007E               4219          BEQ     hTwo
00003B5E  0C11 0033               4220          CMP.B   #$33, (A1)
00003B62  6700 007E               4221          BEQ     hThree
00003B66  0C11 0034               4222          CMP.B   #$34, (A1)
00003B6A  6700 007E               4223          BEQ     hFour
00003B6E  0C11 0035               4224          CMP.B   #$35, (A1)
00003B72  6700 007E               4225          BEQ     hFive
00003B76  0C11 0036               4226          CMP.B   #$36, (A1)
00003B7A  6700 007E               4227          BEQ     hSix
00003B7E  0C11 0037               4228          CMP.B   #$37, (A1)
00003B82  6700 007E               4229          BEQ     hSeven
00003B86  0C11 0038               4230          CMP.B   #$38, (A1)
00003B8A  6700 007E               4231          BEQ     hEight
00003B8E  0C11 0039               4232          CMP.B   #$39, (A1)
00003B92  6700 007E               4233          BEQ     hNine
00003B96  0C11 0041               4234          CMP.B   #$41, (A1)
00003B9A  6700 007E               4235          BEQ     hA
00003B9E  0C11 0042               4236          CMP.B   #$42, (A1)
00003BA2  6700 007E               4237          BEQ     hB
00003BA6  0C11 0043               4238          CMP.B   #$43, (A1)
00003BAA  6700 007E               4239          BEQ     hC
00003BAE  0C11 0044               4240          CMP.B   #$44, (A1)
00003BB2  6700 007E               4241          BEQ     hD
00003BB6  0C11 0045               4242          CMP.B   #$45, (A1)
00003BBA  6700 007E               4243          BEQ     hE
00003BBE  0C11 0046               4244          CMP.B   #$46, (A1)
00003BC2  6700 007E               4245          BEQ     hF 
00003BC6  6000 F9A8               4246          BRA     invalid      
00003BCA  183C 0000               4247  hZero   MOVE.B  #$00, D4
00003BCE  6000 0076               4248          BRA     nextH
00003BD2  183C 0010               4249  hOne    MOVE.B  #$10, D4
00003BD6  6000 006E               4250          BRA     nextH
00003BDA  183C 0020               4251  hTwo    MOVE.B  #$20, D4
00003BDE  6000 0066               4252          BRA     nextH
00003BE2  183C 0030               4253  hThree  MOVE.B  #$30, D4
00003BE6  6000 005E               4254          BRA     nextH
00003BEA  183C 0040               4255  hFour   MOVE.B  #$40, D4
00003BEE  6000 0056               4256          BRA     nextH
00003BF2  183C 0050               4257  hFive   MOVE.B  #$50, D4
00003BF6  6000 004E               4258          BRA     nextH
00003BFA  183C 0060               4259  hSix    MOVE.B  #$60, D4
00003BFE  6000 0046               4260          BRA     nextH
00003C02  183C 0070               4261  hSeven  MOVE.B  #$70, D4
00003C06  6000 003E               4262          BRA     nextH
00003C0A  183C 0080               4263  hEight  MOVE.B  #$80, D4
00003C0E  6000 0036               4264          BRA     nextH
00003C12  183C 0090               4265  hNine   MOVE.B  #$90, D4
00003C16  6000 002E               4266          BRA     nextH
00003C1A  183C 00A0               4267  hA      MOVE.B  #$A0, D4
00003C1E  6000 0026               4268          BRA     nextH
00003C22  183C 00B0               4269  hB      MOVE.B  #$B0, D4
00003C26  6000 001E               4270          BRA     nextH
00003C2A  183C 00C0               4271  hC      MOVE.B  #$C0, D4
00003C2E  6000 0016               4272          BRA     nextH
00003C32  183C 00D0               4273  hD      MOVE.B  #$D0, D4
00003C36  6000 000E               4274          BRA     nextH
00003C3A  183C 00E0               4275  hE      MOVE.B  #$E0, D4
00003C3E  6000 0006               4276          BRA     nextH
00003C42  183C 00F0               4277  hF      MOVE.B  #$F0, D4
00003C46                          4278  
00003C46  1019                    4279  nextH   MOVE.B  (A1)+, D0
00003C48  5245                    4280          ADD     #1, D5
00003C4A  BA3C 0002               4281          CMP.B   #2, D5
00003C4E  6700 FEE2               4282          BEQ     subLOOP
00003C52  6000 FEF0               4283          BRA     bytLOOP
00003C56                          4284          
00003C56  43F9 00003CB8           4285  ADDinvalid  LEA     errorMessage, A1
00003C5C  103C 000E               4286              MOVE.B  #14, D0
00003C60  4E4F                    4287              TRAP    #15    
00003C62                          4288      
00003C62  103C 0002               4289              MOVE.B  #2, D0
00003C66  4E4F                    4290              TRAP    #15
00003C68                          4291  
00003C68  6000 FEB0               4292              BRA     Retry
00003C6C                          4293     
00003C6C  4CDF 7CF8               4294  endLOOP MOVEM.L  (SP)+, D3-D7/A2-A6
00003C70  4E75                    4295          RTS
00003C72                          4296  
00003C72                          4297  printInvalid
00003C72                          4298  endPROG    
00003C72                          4299  
00003C72  FFFF FFFF               4300      SIMHALT                             ; halt simulator
00003C76                          4301  
00003C76= 45 6E 74 65 72 20 ...   4302  startingMessage DC.B    'Enter Starting Address (in hex): ', 0
00003C98= 45 6E 74 65 72 20 ...   4303  endingMessage   DC.B    'Enter Ending Address (in hex): ', 0
00003CB8= 49 6E 63 6F 72 72 ...   4304  errorMessage    DC.B    'Incorrect Address, try again: ', 0
00003CD7                          4305  
00003CD7= 20 0D 0A 00             4306  newLine     DC.B    ' ', CR, LF, 0
00003CDB= 20 20 00                4307  space       DC.B    '  ', 0
00003CDE                          4308  
00003CDE= 23 00                   4309  hashTag     DC.B    '#', 0
00003CE0= 24 00                   4310  dispHex     DC.B    '$', 0
00003CE2= 2C 00                   4311  comma       DC.B    ',', 0
00003CE4                          4312  
00003CE4= 28 00                   4313  opPer       DC.B    '(', 0
00003CE6= 29 00                   4314  clPer       DC.B    ')', 0
00003CE8= 2D 00                   4315  dec         DC.B    '-', 0
00003CEA= 2B 00                   4316  inc         DC.B    '+', 0
00003CEC                          4317  
00003CEC= 4F 52 49 00             4318  ORImatch    DC.B    'ORI', 0
00003CF0= 43 4D 50 49 00          4319  CMPImatch   DC.B    'CMPI', 0
00003CF5= 42 43 4C 52 00          4320  BCLRmatch   DC.B    'BCLR', 0
00003CFA= 4D 4F 56 45 00          4321  MOVEmatch   DC.B    'MOVE', 0
00003CFF= 4D 4F 56 45 41 00       4322  MOVEAmatch  DC.B    'MOVEA', 0
00003D05= 4E 45 47 00             4323  NEGmatch    DC.B    'NEG', 0
00003D09= 52 54 53 00             4324  RTSmatch    DC.B    'RTS', 0
00003D0D= 4A 53 52 00             4325  JSRmatch    DC.B    'JSR', 0
00003D11= 4D 4F 56 45 4D 00       4326  MOVEMmatch  DC.B    'MOVEM', 0
00003D17= 4C 45 41 00             4327  LEAmatch    DC.B    'LEA', 0
00003D1B= 53 55 42 51 00          4328  SUBQmatch   DC.B    'SUBQ', 0
00003D20= 42 52 41 00             4329  BRAmatch    DC.B    'BRA', 0
00003D24= 42 43 53 00             4330  BCSmatch    DC.B    'BCS', 0
00003D28= 42 56 43 00             4331  BVCmatch    DC.B    'BVC', 0
00003D2C= 42 47 45 00             4332  BGEmatch    DC.B    'BGE', 0
00003D30= 42 4C 54 00             4333  BLTmatch    DC.B    'BLT', 0
00003D34= 44 49 56 53 00          4334  DIVSmatch   DC.B    'DIVS', 0
00003D39= 4F 52 00                4335  ORmatch     DC.B    'OR', 0
00003D3C= 53 55 42 00             4336  SUBmatch    DC.B    'SUB', 0
00003D40= 45 4F 52 00             4337  EORmatch    DC.B    'EOR', 0
00003D44= 43 4D 50 00             4338  CMPmatch    DC.B    'CMP', 0
00003D48= 4D 55 4C 53 00          4339  MULSmatch   DC.B    'MULS', 0
00003D4D= 41 44 44 00             4340  ADDmatch    DC.B    'ADD', 0
00003D51= 41 44 44 41 00          4341  ADDAmatch   DC.B    'ADDA', 0
00003D56= 4C 53 52 00             4342  LSRmatch    DC.B    'LSR', 0
00003D5A= 4C 53 4C 00             4343  LSLmatch    DC.B    'LSL', 0
00003D5E= 41 53 52 00             4344  ASRmatch    DC.B    'ASR', 0
00003D62= 41 53 4C 00             4345  ASLmatch    DC.B    'ASL', 0
00003D66= 52 4F 52 00             4346  RORmatch    DC.B    'ROR', 0
00003D6A= 52 4F 4C 00             4347  ROLmatch    DC.B    'ROL', 0
00003D6E                          4348  
00003D6E= 2F 00                   4349  slash       DC.B    '/', 0
00003D70= 28 53 50 29 00          4350  stack       DC.B    '(SP)', 0
00003D75                          4351   
00003D75= 2E 42 00                4352  dispByte    DC.B    '.B', 0
00003D78= 2E 57 00                4353  dispWord    DC.B    '.W', 0
00003D7B= 2E 4C 00                4354  dispLong    DC.B    '.L', 0
00003D7E                          4355  
00003D7E= 41 30 00                4356  dispA0      DC.B    'A0', 0
00003D81= 41 31 00                4357  dispA1      DC.B    'A1', 0
00003D84= 41 32 00                4358  dispA2      DC.B    'A2', 0
00003D87= 41 33 00                4359  dispA3      DC.B    'A3', 0
00003D8A= 41 34 00                4360  dispA4      DC.B    'A4', 0
00003D8D= 41 35 00                4361  dispA5      DC.B    'A5', 0
00003D90= 41 36 00                4362  dispA6      DC.B    'A6', 0
00003D93= 41 37 00                4363  dispA7      DC.B    'A7', 0
00003D96                          4364  
00003D96= 44 00                   4365  dispD       DC.B    'D',0
00003D98= 44 30 00                4366  dispD0      DC.B    'D0', 0
00003D9B= 44 31 00                4367  dispD1      DC.B    'D1', 0
00003D9E= 44 32 00                4368  dispD2      DC.B    'D2', 0
00003DA1= 44 33 00                4369  dispD3      DC.B    'D3', 0
00003DA4= 44 34 00                4370  dispD4      DC.B    'D4', 0
00003DA7= 44 35 00                4371  dispD5      DC.B    'D5', 0
00003DAA= 44 36 00                4372  dispD6      DC.B    'D6', 0
00003DAD= 44 37 00                4373  dispD7      DC.B    'D7', 0 
00003DB0                          4374   
00003DB0                          4375             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             34F0
ABSSHORT            34B8
ADDAMATCH           3D51
ADDINVALID          3C56
ADDMATCH            3D4D
ADDR0CONT           3900
ADDR1CONT           3940
ADDR2CONT           3980
ADDR3CONT           39C0
ADDR4CONT           3A00
ADDR5CONT           3A40
ADDR6CONT           3A80
ADDRESS             3B16
ADDRREG0            38E0
ADDRREG1            3910
ADDRREG2            3950
ADDRREG3            3990
ADDRREG4            39D0
ADDRREG5            3A10
ADDRREG6            3A50
ADDRREG7            3A90
ASLMATCH            3D62
ASRMATCH            3D5E
BCLRMATCH           3CF5
BCSMATCH            3D24
BGEMATCH            3D2C
BLTMATCH            3D30
BRAEIGHT            1142
BRAELEVEN           1160
BRAFIVE             1112
BRAFOUR             10F6
BRAFOURTEEN         11D0
BRAMATCH            3D20
BRANINE             115C
BRAONE              10EA
BRASIX              1116
BRATHIRTEEN         117E
BRATHREE            10F2
BRATWELVE           117A
BRATWO              10EE
BRAZERO             10BA
BVCMATCH            3D28
BYTLOOP             3B44
CHECKDR             35C2
CLPER               3CE6
CMPIMATCH           3CF0
CMPMATCH            3D44
COMMA               3CE2
CR                  D
DATAREG0            368A
DATAREG1            36BA
DATAREG2            36FA
DATAREG3            373A
DATAREG4            377A
DATAREG5            37BA
DATAREG6            37FA
DATAREG7            383A
DEC                 3CE8
DISPA0              3D7E
DISPA1              3D81
DISPA2              3D84
DISPA3              3D87
DISPA4              3D8A
DISPA5              3D8D
DISPA6              3D90
DISPA7              3D93
DISPBYTE            3D75
DISPD               3D96
DISPD0              3D98
DISPD1              3D9B
DISPD2              3D9E
DISPD3              3DA1
DISPD4              3DA4
DISPD5              3DA7
DISPD6              3DAA
DISPD7              3DAD
DISPHEX             3CE0
DISPIMM             3528
DISPLAYA0           3030
DISPLAYA0A          30FC
DISPLAYA0D          33C0
DISPLAYA0P          3228
DISPLAYA1           3040
DISPLAYA1A          3118
DISPLAYA1D          33DC
DISPLAYA1P          3250
DISPLAYA2           3050
DISPLAYA2A          3134
DISPLAYA2D          33F8
DISPLAYA2P          3278
DISPLAYA3           3060
DISPLAYA3A          3150
DISPLAYA3D          3414
DISPLAYA3P          32A0
DISPLAYA4           3070
DISPLAYA4A          316C
DISPLAYA4D          3430
DISPLAYA4P          32C8
DISPLAYA5           3080
DISPLAYA5A          3188
DISPLAYA5D          344C
DISPLAYA5P          32F0
DISPLAYA6           3090
DISPLAYA6A          31A4
DISPLAYA6D          3468
DISPLAYA6P          3318
DISPLAYA7           30A0
DISPLAYA7A          31C0
DISPLAYA7D          3484
DISPLAYA7P          3340
DISPLAYD0           2F70
DISPLAYD1           2F80
DISPLAYD2           2F90
DISPLAYD3           2FA0
DISPLAYD4           2FB0
DISPLAYD5           2FC0
DISPLAYD6           2FD0
DISPLAYD7           2FE0
DISPLAYEIGHT        2EE8
DISPLONG            3D7B
DISPLOOP            3AC8
DISPWORD            3D78
DIVSMATCH           3D34
DLETTERS            3AFC
DLNINE              3AE8
EIGHT               8
ELEVEN              B
ENDDISPSUB          3B10
ENDINGMESSAGE       3C98
ENDLOOP             3C6C
ENDMOVE             3AA0
ENDMOVE1            3AA6
ENDPROG             3C72
ENDSUB              3570
ENDSUBROUTINE       2EF2
EORMATCH            3D40
ERRORMESSAGE        3CB8
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HA                  3C1A
HASHTAG             3CDE
HB                  3C22
HC                  3C2A
HD                  3C32
HE                  3C3A
HEIGHT              3C0A
HF                  3C42
HFIVE               3BF2
HFOUR               3BEA
HNINE               3C12
HONE                3BD2
HSEVEN              3C02
HSIX                3BFA
HTHREE              3BE2
HTWO                3BDA
HZERO               3BCA
IMMLONG             355C
INC                 3CEA
INVALID             3570
JSRMATCH            3D0D
LEAMATCH            3D17
LF                  A
LONGSKIP            356C
LOOP                1040
LSLMATCH            3D5A
LSRMATCH            3D56
MASK0               0
MASK1               1
MASK2               2
MASK3               4
MASK4               8
MASK5               10
MASK6               20
MASK7               40
MASK8               80
MASKA               5
MASKB               A
MASKC               14
MASKD               28
MASKE               50
MASKF               A0
MEMSB               2682
MEMSHIFTIMM         2ECE
MEMSHIFTS           11EA
MEMSL               2B96
MEMSW               290C
MOVEAMATCH          3CFF
MOVEMATCH           3CFA
MOVEMBRA            3576
MOVEML              35A6
MOVEMMATCH          3D11
MOVEMW              358A
MOVEOVER            3AC4
MULSMATCH           3D48
NEGMATCH            3D05
NEWLINE             3CD7
NEXTH               3C46
NINE                9
ONE                 1
OPADDAL             244A
OPADDAW             23DA
OPADDB              228E
OPADDL              2366
OPADDW              22FA
OPASBI              26C0
OPASBR              2722
OPASL               24BA
OPASLBI             2700
OPASLBR             2762
OPASLI              2BD4
OPASLLI             2C14
OPASLLR             2C76
OPASLR              2C36
OPASLWI             298A
OPASLWR             29EC
OPASR               2506
OPASRBI             26DE
OPASRBR             2740
OPASRLI             2BF2
OPASRLR             2C54
OPASRWI             2968
OPASRWR             29CA
OPASWI              294A
OPASWR              29AC
OPBCLR              153A
OPBCS               20DA
OPBGE               2142
OPBLT               2176
OPBRA               20A2
OPBVC               210E
OPCMP               1E0A
OPCMPB              1E3C
OPCMPI              13AC
OPCMPIB             13CE
OPCMPIL             14C4
OPCMPIW             1440
OPCMPL              1EF0
OPCMPW              1E96
OPDIVS              1C5E
OPDYNBCLR           159E
OPEOR               1CBC
OPEORB              1CEA
OPEORL              1DAA
OPEORW              1D4A
OPJSR               198A
OPLEA               1A8C
OPLSBI              2784
OPLSBR              27E6
OPLSL               2552
OPLSLBI             27C4
OPLSLBR             2826
OPLSLI              2C98
OPLSLLI             2CD8
OPLSLLR             2D3A
OPLSLR              2CFA
OPLSLWI             2A4E
OPLSLWR             2AB0
OPLSR               259E
OPLSRBI             27A2
OPLSRBR             2804
OPLSRLI             2CB6
OPLSRLR             2D18
OPLSRWI             2A2C
OPLSRWR             2A8E
OPLSWI              2A0E
OPLSWR              2A70
OPMOVEAL            1724
OPMOVEAW            181A
OPMOVEB             160C
OPMOVEL             1690
OPMOVEM             1A02
OPMOVEMLEA          19E6
OPMOVEW             178C
OPMULS              222A
OPNEG               1882
OPNEGB              18B0
OPNEGL              18F0
OPNEGW              1930
OPOR                1B0C
OPORB               1B4A
OPORI               1244
OPORIB              1272
OPORIL              133E
OPORIW              12D8
OPORL               1C00
OPORW               1BA4
OPPER               3CE4
OPROBI              2848
OPROBR              28AA
OPROL               25EA
OPROLBI             2888
OPROLBR             28EA
OPROLI              2D5C
OPROLLI             2D9C
OPROLLR             2DFE
OPROLR              2DBE
OPROLWI             2B12
OPROLWR             2B74
OPROR               2636
OPRORBI             2866
OPRORBR             28C8
OPRORLI             2D7A
OPRORLR             2DDC
OPRORWI             2AF0
OPRORWR             2B52
OPROWI              2AD2
OPROWR              2B34
OPRTS               19CA
OPRTSJSR            1970
OPSUB               1F4A
OPSUBB              1F94
OPSUBL              2048
OPSUBQ              21AA
OPSUBQB             21D6
OPSUBQL             220A
OPSUBQW             21F0
OPSUBW              1FEE
ORIMATCH            3CEC
ORMATCH             3D39
OUTHEX              3AAC
PADDRDEC            3368
PADDRDIR            30B0
PADDRPOST           31DC
PADDRREG            2FF0
PDATAREG            2F30
PHEX                34A0
PRINTEA             2EF8
PRINTINVALID        3C72
PRINTMEM            384A
PRINTMEMNOW         384E
PRINTREGMEM         35FE
PRINTSTACK          35D6
PRNTIMM             2E20
PRNTREG             2E7C
REG0CONT            36AA
REG1CONT            36EA
REG2CONT            372A
REG3CONT            376A
REG4CONT            37AA
REG5CONT            37EA
REG6CONT            382A
REGSHIFTS           1228
RETRY               3B1A
ROLMATCH            3D6A
RORMATCH            3D66
RTSMATCH            3D09
SECNIB              F
SEVEN               7
SIX                 6
SKIPPRINTEA         1A7C
SLASH               3D6E
SPACE               3CDB
STACK               3D70
START               1000
STARTINGMESSAGE     3C76
SUBLOOP             3B32
SUBMATCH            3D3C
SUBQMATCH           3D1B
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
