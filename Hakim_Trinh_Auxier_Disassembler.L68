00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 12/9/2014 9:39:08 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9       
00000000  =00000000                 10  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 11  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 12  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 13  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 14  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 15  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 16  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 17  seven       EQU     $07
00000000  =00000008                 18  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 19  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 20  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 21  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 22  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 23  fourteen    EQU     $0E         ; defined hex value 14
00000000                            24  
00000000  =00000000                 25  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 26  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 27  s1L         EQU     %0010       ; long size 1
00000000                            28  
00000000  =00000000                 29  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 30  s2L         EQU     %0001       ; long size 2
00000000                            31  
00000000  =00000001                 32  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 33  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 34  s3L         EQU     %0010       ; long size 3
00000000                            35  
00000000  =00000000                 36  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 37  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 38  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 39  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 40  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 41  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            42  
00000000  =00000000                 43  reg0        EQU     %0000       ; register 0
00000000  =00000001                 44  reg1        EQU     %0001       ; register 1
00000000  =00000002                 45  reg2        EQU     %0010       ; register 2
00000000  =00000003                 46  reg3        EQU     %0011       ; register 3
00000000  =00000004                 47  reg4        EQU     %0100       ; register 4
00000000  =00000005                 48  reg5        EQU     %0101       ; register 5
00000000  =00000006                 49  reg6        EQU     %0110       ; register 6
00000000  =00000007                 50  reg7        EQU     %0111       ; register 7
00000000                            51  
00000000  =00000000                 52  mask0       EQU     %00000000
00000000  =00000001                 53  mask1       EQU     %00000001
00000000  =00000002                 54  mask2       EQU     %00000010
00000000  =00000004                 55  mask3       EQU     %00000100
00000000  =00000008                 56  mask4       EQU     %00001000
00000000  =00000010                 57  mask5       EQU     %00010000
00000000  =00000020                 58  mask6       EQU     %00100000
00000000  =00000040                 59  mask7       EQU     %01000000
00000000  =00000080                 60  mask8       EQU     %10000000
00000000                            61  
00000000  =00000005                 62  maskA       EQU     %00000101
00000000  =0000000A                 63  maskB       EQU     %00001010
00000000  =00000014                 64  maskC       EQU     %00010100
00000000  =00000028                 65  maskD       EQU     %00101000
00000000  =00000050                 66  maskE       EQU     %01010000
00000000  =000000A0                 67  maskF       EQU     %10100000
00000000                            68  
00000000  =000000F0                 69  firstNib    EQU     $F0
00000000  =0000000F                 70  secNib      EQU     $0F
00000000                            71               
00001000                            72              ORG    $1000
00001000                            73  START:                                  ; first instruction of program
00001000                            74        
00001000  43F9 00003584             75          LEA     startingMessage, A1
00001006  103C 000E                 76          MOVE.B  #14, D0
0000100A  4E4F                      77          TRAP    #15    
0000100C                            78      
0000100C  103C 0002                 79          MOVE.B  #2, D0
00001010  4E4F                      80          TRAP    #15
00001012                            81      
00001012  4EB9 00003424             82          JSR     Address
00001018  2042                      83          MOVEA.L D2, A0
0000101A                            84          
0000101A  43F9 000035A6             85          LEA     endingMessage, A1
00001020  103C 000E                 86          MOVE.B  #14, D0
00001024  4E4F                      87          TRAP    #15    
00001026                            88      
00001026  103C 0002                 89          MOVE.B  #2, D0
0000102A  4E4F                      90          TRAP    #15
0000102C                            91      
0000102C  4EB9 00003424             92          JSR     Address
00001032  2442                      93          MOVEA.L D2, A2
00001034                            94          
00001034  43F9 000035E5             95          LEA     newline, A1
0000103A  103C 000E                 96          MOVE.B  #14, D0
0000103E  4E4F                      97          TRAP    #15 
00001040                            98            
00001040  4241                      99  LOOP    CLR         D1                  ; clear out D1
00001042  4242                     100          CLR         D2                  ; clear out D2
00001044  B1CA                     101          CMPA.L      A2, A0              ; compare starting and ending addresses
00001046  6E00 2538                102          BGT         endProg             ; if A0 > A1, we've finished, end program
0000104A  1218                     103          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
0000104C  1401                     104          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000104E  E882                     105          ASR.L       #four, D2           ; get first nibble in D2
00001050                           106          
00001050  B43C 0000                107          CMP.B       #zero, D2           ; compare with 0
00001054  6700 0064                108          BEQ         braZero             ; branch out to zero method
00001058  B43C 0001                109          CMP.B       #one, D2            ; compare with 1
0000105C  6700 008C                110          BEQ         braOne              ; branch out to one method
00001060  B43C 0002                111          CMP.B       #two, D2            ; compare with 2    
00001064  6700 0088                112          BEQ         braTwo              ; branch out to two method
00001068  B43C 0003                113          CMP.B       #three, D2          ; compare with 3
0000106C  6700 0084                114          BEQ         braThree            ; branch out to three method
00001070  B43C 0004                115          CMP.B       #four, D2           ; compare with 4
00001074  6700 0080                116          BEQ         braFour             ; branch out to four method
00001078  B43C 0005                117          CMP.B       #five, D2           ; compare with 5
0000107C  6700 0094                118          BEQ         braFive             ; branch out to five method
00001080  B43C 0006                119          CMP.B       #six, D2            ; compare with 6
00001084  6700 0090                120          BEQ         braSix              ; branch out to six method
00001088  B43C 0008                121          CMP.B       #eight, D2          ; compare with 8
0000108C  6700 00B4                122          BEQ         braEight            ; branch out to eight method
00001090  B43C 0009                123          CMP.B       #nine, D2           ; compare with 9
00001094  6700 00AC                124          BEQ         braNine             ; branch out to nine method
00001098  B43C 000B                125          CMP.B       #eleven, D2         ; compare with 11
0000109C  6700 00A8                126          BEQ         braEleven           ; branch out to eleven method
000010A0  B43C 000C                127          CMP.B       #twelve, D2         ; compare with 12
000010A4  6700 00A0                128          BEQ         braTwelve           ; branch out to twelve method
000010A8  B43C 000D                129          CMP.B       #thirteen, D2       ; compare with 13
000010AC  6700 009C                130          BEQ         braThirteen         ; branch out to thirteen method
000010B0  B43C 000E                131          CMP.B       #fourteen, D2       ; compare with 14
000010B4  6700 00E6                132          BEQ         braFourteen         ; branch out to fourteen method
000010B8  6086                     133          BRA         loop
000010BA                           134  
000010BA  4242                     135  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
000010BC  1401                     136          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010BE  C43C 000F                137          AND.B       #secNib, D2             ; set first nibble to 0
000010C2                           138   
000010C2  B43C 0000                139          CMP.B       #zero, D2           ; compare second nibble to 0
000010C6  6700 0148                140          BEQ         opORI               ; branch to ORI method
000010CA  B43C 000C                141          CMP.B       #twelve, D2         ; compare second nibble to 12
000010CE  6700 02A8                142          BEQ         opCMPI              ; branch to CMPI method
000010D2  B43C 0008                143          CMP.B       #eight,D2           ; Test for static BCLR
000010D6  6700 042E                144          BEQ         opBCLR
000010DA  C47C 0001                145          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010DE  B43C 0001                146          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010E2  6700 0486                147          BEQ         opDynBCLR
000010E6  6000 2498                148          BRA         printInvalid
000010EA                           149          
000010EA                           150          
000010EA  6000 04EC                151  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010EE                           152  
000010EE  6000 056C                153  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010F2                           154  
000010F2                           155  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010F2                           156  
000010F2  6000 0664                157          BRA         opMOVEW
000010F6                           158  
000010F6  4242                     159  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010F8  1401                     160          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010FA  C43C 000F                161          AND.B       #secNib, D2             ; set first nibble to 0
000010FE                           162   
000010FE  B43C 0004                163          CMP.B       #four, D2           ; compare second nibble to 4
00001102  6700 074A                164          BEQ         opNEG               ; branch to NEG method
00001106  B43C 000E                165          CMP.B       #fourteen, D2       ; compare second nibble to E
0000110A  6700 0830                166          BEQ         opRTSJSR            ; branch to JSR or RTS method
0000110E  6000 08A2                167          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
00001112                           168  
00001112  6000 09C4                169  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
00001116                           170  
00001116  4242                     171  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
00001118  1401                     172          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000111A  C438 000F                173          AND.B       $0F, D2             ; set first nibble to 0
0000111E                           174   
0000111E  B43C 0000                175          CMP.B       #zero, D2           ; compare second nibble to 0
00001122  6700 09C0                176          BEQ         opBRA               ; branch to BRA method
00001126  B43C 0005                177          CMP.B       #five, D2           ; compare second nibble to 5
0000112A  6700 09D0                178          BEQ         opBCS               ; branch to BCS method
0000112E  B43C 0008                179          CMP.B       #eight, D2          ; compare second nibble to 8
00001132  6700 09D4                180          BEQ         opBVC               ; branch to BCS method
00001136  B43C 000C                181          CMP.B       #twelve, D2         ; compare second nibble to 12
0000113A  6700 09D8                182          BEQ         opBGE               ; branch to BGE method
0000113E  6000 09E0                183          BRA         opBLT               ; otherwise, branch to BLT method
00001142                           184  
00001142                           185  braEight    ; there are two opCodes available DIVS, or OR
00001142                           186  
00001142  6000 09E8                187  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
00001146                           188  
00001146                           189  braEleven   ; there are two opCodes available EOR, or CMP
00001146                           190  
00001146  6000 09F0                191  braTwelve   BRA         opMULS              ; we know that there is only one opcode that is MULS    
0000114A                           192    
0000114A  E141                     193  braThirteen ASL         #eight, D1          ; we need the whole word to compare between add and adda, so move over the current byte 
0000114C  1218                     194              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
0000114E                           195              
0000114E  4242                     196              CLR         D2                  ; clear D2
00001150  3401                     197              MOVE.W      D1, D2              ; copy opcode to D2
00001152  EC42                     198              ASR         #six, D2            ; shift the bits right to get size and type
00001154  C47C 0007                199              AND         #seven,D2           ; clear out all but first 3 bits
00001158                           200              
00001158  B43C 0000                201              CMP.B       #zero,D2            ; compare 0 to D2
0000115C  6700 0A3E                202              BEQ         opADDB              ; we know its ADDB
00001160  B43C 0001                203              CMP.B       #one, D2            ; compare 1 to D2
00001164  6700 0AA2                204              BEQ         opADDW              ; we know its ADDW
00001168  B43C 0002                205              CMP.B       #two, D2            ; compare 2 to D2
0000116C  6700 0B06                206              BEQ         opADDL              ; we know its ADDL
00001170  B43C 0003                207              CMP.B       #three, D2          ; compare 3 to D2
00001174  6700 0B72                208              BEQ         opADDAW             ; we know its ADDAW
00001178  B43C 0004                209              CMP.B       #four, D2           ; compare 4 to D2
0000117C  6700 0A1E                210              BEQ         opADDB              ; we know its ADDB
00001180  B43C 0005                211              CMP.B       #five, D2           ; compare 5 to D2
00001184  6700 0A82                212              BEQ         opADDW              ; we know its ADDW
00001188  B43C 0006                213              CMP.B       #six, D2            ; compare 6 to D2
0000118C  6700 0AE6                214              BEQ         opADDL              ; we know its ADDL
00001190  B43C 0007                215              CMP.B       #seven, D2          ; compare 7 to D2
00001194  6700 0BC2                216              BEQ         opADDAL             ; we know its ADDAL
00001198  6000 23E6                217              BRA         printInvalid        ; invalid opcode
0000119C                           218               
0000119C  E141                     219  braFourteen ASL.W       #eight,D1           ; we need the whole word to compare between add and adda, so move over the current byte
0000119E  1218                     220              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
000011A0                           221              
000011A0  4242                     222              CLR         D2                  ; clear D2
000011A2  3401                     223              MOVE.W      D1, D2              ; copy opcode to D2
000011A4  EC42                     224              ASR         #six, D2            ; shift the bits right to get size
000011A6  C47C 0003                225              AND         #03,D2
000011AA                           226          
000011AA  B43C 0003                227              CMP.B       #three, D2          ; if the size is three, we are shifting memory
000011AE  6700 0006                228              BEQ         memShifts           ; go to memory shift
000011B2  6000 0040                229              BRA         regShifts           ; else go to register shift
000011B6                           230  
000011B6  4242                     231  memShifts   CLR         D2             
000011B8  3401                     232              MOVE.W      D1, D2              ; clear out D2 and copy D1 back in
000011BA  E082                     233              ASR.L       #eight,D2           ; move to get first byte back
000011BC  C47C 000F                234              AND         #secNib, D2         ; set first nibble to 0
000011C0                           235   
000011C0  B43C 0000                236              CMP.B       #zero, D2           ; compare second nibble to 0
000011C4  6700 0C4E                237              BEQ         opASR               ; branch to ASR method
000011C8  B43C 0001                238              CMP.B       #one, D2            ; compare second nibble to 1
000011CC  6700 0BFA                239              BEQ         opASL               ; branch to ASL method
000011D0  B43C 0002                240              CMP.B       #two, D2            ; compare second nibble to 2
000011D4  6700 0CD6                241              BEQ         opLSR               ; branch to LSR method
000011D8  B43C 0003                242              CMP.B       #three, D2          ; compare second nibble to 3
000011DC  6700 0C82                243              BEQ         opLSL               ; branch to LSL method
000011E0  B43C 0006                244              CMP.B       #six, D2            ; compare second nibble to 6
000011E4  6700 0D5E                245              BEQ         opROR               ; branch to ROR method
000011E8  B43C 0007                246              CMP.B       #seven, D2          ; compare second nibble to 7
000011EC  6700 0D0A                247              BEQ         opROL               ; branch to ROL method
000011F0  6000 238E                248              BRA         printInvalid        ; otherwise, invalid
000011F4                           249              
000011F4  B43C 0000                250  regShifts   CMP.B       #zero, D2           ; if size is 0, we are shifting a byte
000011F8  6700 0D96                251              BEQ         memSB               ; branch to register shift byte
000011FC  B43C 0001                252              CMP.B       #one, D2            ; if size is 1, we are shifting a word
00001200  6700 1018                253              BEQ         memSW               ; branch to register shift word
00001204  B43C 0002                254              CMP.B       #two, D2            ; if size is 1, we are shifting a long
00001208  6700 129A                255              BEQ         memSL               ; branch to register shift long
0000120C  6000 2372                256              BRA         printInvalid        ; otherwise, invalid
00001210                           257  
00001210  43F9 000035FA            258  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
00001216  103C 000E                259          MOVE.B      #14, D0             ; command for trap call to display message
0000121A  4E4F                     260          TRAP        #15                 ; trap call
0000121C                           261          
0000121C  1218                     262          MOVE.B      (A0)+, D1
0000121E  1401                     263          MOVE.B      D1,D2               ; copy data over
00001220  EC42                     264          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001222  B43C 0000                265          CMP.B       #zero,D2
00001226  6700 0016                266          BEQ         opORIB
0000122A  B43C 0001                267          CMP.B       #one,D2
0000122E  6700 0074                268          BEQ         opORIW
00001232  B43C 0002                269          CMP.B       #two,D2
00001236  6700 00D2                270          BEQ         opORIL
0000123A                           271          
0000123A  6000 2344                272          BRA         printInvalid
0000123E                           273          
0000123E  43F9 00003683            274  opORIB  LEA         dispByte, A1        ; Display byte
00001244  103C 000E                275          MOVE.B      #14, D0             ; command for trap call to display message
00001248  4E4F                     276          TRAP        #15                 ; trap call
0000124A                           277          
0000124A  43F9 000035E9            278          LEA         space, A1           ; Display space
00001250  103C 000E                279          MOVE.B      #14, D0             ; command for trap call to display message
00001254  4E4F                     280          TRAP        #15                 ; trap call
00001256                           281          
00001256  4244                     282          CLR         D4
00001258  1801                     283          MOVE.B      D1,D4
0000125A  E644                     284          ASR         #three,D4
0000125C  C87C 0007                285          AND         #seven,D4
00001260  4245                     286          CLR         D5        
00001262  1A01                     287          MOVE.B      D1,D5
00001264  CA7C 0007                288          AND         #seven,D5
00001268                           289          
00001268  4243                     290          CLR         D3
0000126A  4242                     291          CLR         D2
0000126C  163C 0004                292          MOVE.B      #four,D3
00001270  143C 0007                293          MOVE.B      #seven,D2
00001274                           294  
00001274  4EB9 00002806            295          JSR         printEA
0000127A                           296          
0000127A  43F9 000035F0            297          LEA         comma, A1           ; Display space
00001280  103C 000E                298          MOVE.B      #14, D0             ; command for trap call to display message
00001284  4E4F                     299          TRAP        #15                 ; trap call
00001286                           300          
00001286  4242                     301          CLR         D2
00001288  4243                     302          CLR         D3
0000128A  1404                     303          MOVE.B      D4,D2
0000128C  1605                     304          MOVE.B      D5,D3
0000128E                           305          
0000128E  4EB9 00002806            306          JSR         printEA
00001294                           307          
00001294  43F9 000035E5            308          LEA         newLine, A1           ; Display space
0000129A  103C 000E                309          MOVE.B      #14, D0             ; command for trap call to display message
0000129E  4E4F                     310          TRAP        #15                 ; trap call
000012A0                           311          
000012A0  6000 FD9E                312          BRA         LOOP
000012A4                           313          
000012A4                           314          
000012A4  43F9 00003686            315  opORIW  LEA         dispWord, A1        ; Display byte
000012AA  103C 000E                316          MOVE.B      #14, D0             ; command for trap call to display message
000012AE  4E4F                     317          TRAP        #15                 ; trap call
000012B0                           318          
000012B0  43F9 000035E9            319          LEA         space, A1           ; Display space
000012B6  103C 000E                320          MOVE.B      #14, D0             ; command for trap call to display message
000012BA  4E4F                     321          TRAP        #15                 ; trap call
000012BC                           322          
000012BC  4244                     323          CLR         D4
000012BE  1801                     324          MOVE.B      D1,D4
000012C0  E644                     325          ASR         #three,D4
000012C2  C87C 0007                326          AND         #seven,D4
000012C6  4245                     327          CLR         D5        
000012C8  1A01                     328          MOVE.B      D1,D5
000012CA  CA7C 0007                329          AND         #seven,D5
000012CE                           330          
000012CE  4243                     331          CLR         D3
000012D0  4242                     332          CLR         D2
000012D2  163C 0004                333          MOVE.B      #four,D3
000012D6  143C 0007                334          MOVE.B      #seven,D2
000012DA                           335          
000012DA  4EB9 00002806            336          JSR         printEA
000012E0                           337          
000012E0  43F9 000035F0            338          LEA         comma, A1           ; Display space
000012E6  103C 000E                339          MOVE.B      #14, D0             ; command for trap call to display message
000012EA  4E4F                     340          TRAP        #15                 ; trap call
000012EC                           341          
000012EC  4242                     342          CLR         D2
000012EE  4243                     343          CLR         D3
000012F0  1404                     344          MOVE.B      D4,D2
000012F2  1605                     345          MOVE.B      D5,D3
000012F4                           346                  
000012F4  4EB9 00002806            347          JSR         printEA
000012FA                           348          
000012FA  43F9 000035E5            349          LEA         newLine, A1           ; Display space
00001300  103C 000E                350          MOVE.B      #14, D0             ; command for trap call to display message
00001304  4E4F                     351          TRAP        #15                 ; trap call
00001306                           352          
00001306  6000 FD38                353          BRA         LOOP
0000130A                           354       
0000130A  43F9 00003689            355  opORIL  LEA         dispLong, A1        ; Display byte
00001310  103C 000E                356          MOVE.B      #14, D0             ; command for trap call to display message
00001314  4E4F                     357          TRAP        #15                 ; trap call
00001316                           358          
00001316  43F9 000035E9            359          LEA         space, A1           ; Display space
0000131C  103C 000E                360          MOVE.B      #14, D0             ; command for trap call to display message
00001320  4E4F                     361          TRAP        #15                 ; trap call
00001322                           362          
00001322  4244                     363          CLR         D4
00001324  1801                     364          MOVE.B      D1,D4
00001326  E644                     365          ASR         #three,D4
00001328  C87C 0007                366          AND         #seven,D4
0000132C  4245                     367          CLR         D5        
0000132E  1A01                     368          MOVE.B      D1,D5
00001330  CA7C 0007                369          AND         #seven,D5
00001334  1C3C 0001                370          MOVE.B      #one,D6
00001338                           371          
00001338  4243                     372          CLR         D3
0000133A  4242                     373          CLR         D2
0000133C  163C 0004                374          MOVE.B      #four,D3
00001340  143C 0007                375          MOVE.B      #seven,D2      
00001344                           376          
00001344  4EB9 00002806            377          JSR         printEA        
0000134A                           378          
0000134A  4243                     379          CLR         D3
0000134C  4242                     380          CLR         D2
0000134E  163C 0004                381          MOVE.B      #four,D3
00001352  143C 0007                382          MOVE.B      #seven,D2
00001356                           383          
00001356  43F9 000035F0            384          LEA         comma, A1           ; Display space
0000135C  103C 000E                385          MOVE.B      #14, D0             ; command for trap call to display message
00001360  4E4F                     386          TRAP        #15                 ; trap call
00001362                           387          
00001362  4EB9 00002806            388          JSR         printEA
00001368                           389          
00001368  43F9 000035E5            390          LEA         newLine, A1           ; Display space
0000136E  103C 000E                391          MOVE.B      #14, D0             ; command for trap call to display message
00001372  4E4F                     392          TRAP        #15                 ; trap call
00001374                           393          
00001374  6000 FCCA                394          BRA         LOOP
00001378                           395           
00001378                           396  opCMPI  
00001378                           397  
00001378                           398                  
00001378  1218                     399          MOVE.B      (A0)+, D1
0000137A  1401                     400          MOVE.B      D1,D2               ; copy data over
0000137C  EC42                     401          ASR         #6,D2               ; shifts 6 bits over to read just the size        
0000137E  B43C 0000                402          CMP.B       #zero,D2
00001382  6700 0016                403          BEQ         opCMPIB
00001386  B43C 0001                404          CMP.B       #one,D2
0000138A  6700 0080                405          BEQ         opCMPIW
0000138E  B43C 0002                406          CMP.B       #two,D2
00001392  6700 00FC                407          BEQ         opCMPIL
00001396  6000 1AE6                408          BRA         invalid
0000139A                           409  
0000139A                           410  opCMPIB 
0000139A                           411  
0000139A  43F9 000035FE            412          LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000013A0  103C 000E                413          MOVE.B      #14, D0             ; command for trap call to display message
000013A4  4E4F                     414          TRAP        #15                 ; trap call
000013A6                           415          
000013A6  43F9 00003683            416          LEA         dispByte, A1        ; Display byte
000013AC  103C 000E                417          MOVE.B      #14, D0             ; command for trap call to display message
000013B0  4E4F                     418          TRAP        #15                 ; trap call
000013B2                           419          
000013B2  43F9 000035E9            420          LEA         space, A1           ; Display space
000013B8  103C 000E                421          MOVE.B      #14, D0             ; command for trap call to display message
000013BC  4E4F                     422          TRAP        #15                 ; trap call
000013BE                           423          
000013BE  4244                     424          CLR         D4
000013C0  1801                     425          MOVE.B      D1,D4
000013C2  E644                     426          ASR         #three,D4
000013C4  C87C 0007                427          AND         #seven,D4
000013C8  4245                     428          CLR         D5        
000013CA  1A01                     429          MOVE.B      D1,D5
000013CC  CA7C 0007                430          AND         #seven,D5
000013D0                           431          
000013D0  4243                     432          CLR         D3
000013D2  4242                     433          CLR         D2
000013D4  163C 0004                434          MOVE.B      #four,D3
000013D8  143C 0007                435          MOVE.B      #seven,D2      
000013DC                           436          
000013DC  4EB9 00002806            437          JSR         printEA  
000013E2                           438              
000013E2  43F9 000035F0            439          LEA         comma, A1           ; Display space
000013E8  103C 000E                440          MOVE.B      #14, D0             ; command for trap call to display message
000013EC  4E4F                     441          TRAP        #15                 ; trap call
000013EE                           442          
000013EE  4242                     443          CLR         D2
000013F0  4243                     444          CLR         D3
000013F2  1404                     445          MOVE.B      D4,D2
000013F4  1605                     446          MOVE.B      D5,D3        
000013F6                           447          
000013F6  4EB9 00002806            448          JSR         printEA
000013FC                           449          
000013FC  43F9 000035E5            450          LEA         newLine, A1           ; Display space
00001402  103C 000E                451          MOVE.B      #14, D0             ; command for trap call to display message
00001406  4E4F                     452          TRAP        #15                 ; trap call
00001408                           453  
00001408  6000 FC36                454          BRA         LOOP
0000140C                           455  
0000140C                           456  opCMPIW 
0000140C  43F9 000035FE            457          LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001412  103C 000E                458          MOVE.B      #14, D0             ; command for trap call to display message
00001416  4E4F                     459          TRAP        #15                 ; trap call
00001418                           460          
00001418  43F9 00003686            461          LEA         dispWord, A1        ; Display byte
0000141E  103C 000E                462          MOVE.B      #14, D0             ; command for trap call to display message
00001422  4E4F                     463          TRAP        #15                 ; trap call
00001424                           464          
00001424  43F9 000035E9            465          LEA         space, A1           ; Display space
0000142A  103C 000E                466          MOVE.B      #14, D0             ; command for trap call to display message
0000142E  4E4F                     467          TRAP        #15                 ; trap call
00001430                           468          
00001430  4244                     469          CLR         D4
00001432  1801                     470          MOVE.B      D1,D4
00001434  E644                     471          ASR         #three,D4
00001436  C87C 0007                472          AND         #seven,D4
0000143A  4245                     473          CLR         D5        
0000143C  1A01                     474          MOVE.B      D1,D5
0000143E  CA7C 0007                475          AND         #seven,D5
00001442                           476          
00001442  4243                     477          CLR         D3
00001444  4242                     478          CLR         D2
00001446  163C 0004                479          MOVE.B      #four,D3
0000144A  143C 0007                480          MOVE.B      #seven,D2      
0000144E                           481          
0000144E  4EB9 00002806            482          JSR         printEA  
00001454                           483          
00001454  43F9 000035EC            484          LEA         hashTag, A1           ; Display space
0000145A  103C 000E                485          MOVE.B      #14, D0             ; command for trap call to display message
0000145E  4E4F                     486          TRAP        #15                 ; trap call
00001460                           487          
00001460  103C 0003                488          MOVE.B      #3, D0
00001464  4E4F                     489          TRAP        #15
00001466                           490          
00001466  43F9 000035F0            491          LEA         comma, A1           ; Display space
0000146C  103C 000E                492          MOVE.B      #14, D0             ; command for trap call to display message
00001470  4E4F                     493          TRAP        #15                 ; trap call
00001472                           494  
00001472  4242                     495          CLR         D2
00001474  4243                     496          CLR         D3
00001476  1404                     497          MOVE.B      D4,D2
00001478  1605                     498          MOVE.B      D5,D3       
0000147A                           499          
0000147A  4EB9 00002806            500          JSR         printEA
00001480                           501          
00001480  43F9 000035E5            502          LEA         newLine, A1           ; Display space
00001486  103C 000E                503          MOVE.B      #14, D0             ; command for trap call to display message
0000148A  4E4F                     504          TRAP        #15                 ; trap call
0000148C  6000 FBB2                505          BRA         LOOP
00001490                           506  
00001490                           507  opCMPIL 
00001490  43F9 000035FE            508          LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001496  103C 000E                509          MOVE.B      #14, D0             ; command for trap call to display message
0000149A  4E4F                     510          TRAP        #15                 ; trap call
0000149C                           511          
0000149C  43F9 00003689            512          LEA         dispLong, A1        ; Display byte
000014A2  103C 000E                513          MOVE.B      #14, D0             ; command for trap call to display message
000014A6  4E4F                     514          TRAP        #15                 ; trap call
000014A8                           515          
000014A8  43F9 000035E9            516          LEA         space, A1           ; Display space
000014AE  103C 000E                517          MOVE.B      #14, D0             ; command for trap call to display message
000014B2  4E4F                     518          TRAP        #15                 ; trap call
000014B4                           519          
000014B4  4244                     520          CLR         D4
000014B6  1801                     521          MOVE.B      D1,D4
000014B8  E644                     522          ASR         #three,D4
000014BA  C87C 0007                523          AND         #seven,D4
000014BE  4245                     524          CLR         D5        
000014C0  1A01                     525          MOVE.B      D1,D5
000014C2  CA7C 0007                526          AND         #seven,D5
000014C6                           527          
000014C6  4243                     528          CLR         D3
000014C8  4242                     529          CLR         D2
000014CA  163C 0004                530          MOVE.B      #four,D3
000014CE  143C 0007                531          MOVE.B      #seven,D2      
000014D2  1C3C 0001                532          MOVE.B      #one,D6
000014D6                           533          
000014D6  4EB9 00002806            534          JSR         printEA  
000014DC                           535          
000014DC  43F9 000035F0            536          LEA         comma, A1           ; Display space
000014E2  103C 000E                537          MOVE.B      #14, D0             ; command for trap call to display message
000014E6  4E4F                     538          TRAP        #15                 ; trap call
000014E8                           539          
000014E8  4242                     540          CLR         D2
000014EA  4243                     541          CLR         D3
000014EC  1404                     542          MOVE.B      D4,D2
000014EE  1605                     543          MOVE.B      D5,D3              
000014F0                           544          
000014F0  4EB9 00002806            545          JSR         printEA
000014F6                           546          
000014F6  43F9 000035E5            547          LEA         newLine, A1           ; Display space
000014FC  103C 000E                548          MOVE.B      #14, D0             ; command for trap call to display message
00001500  4E4F                     549          TRAP        #15                 ; trap call
00001502                           550          
00001502  6000 FB3C                551          BRA         LOOP
00001506                           552  
00001506  43F9 00003603            553  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000150C  103C 000E                554                  MOVE.B      #14, D0             ; command for trap call to display message
00001510  4E4F                     555                  TRAP        #15                 ; trap call
00001512                           556  
00001512  43F9 000035E9            557                  LEA         space, A1           ; Display space
00001518  103C 000E                558                  MOVE.B      #14, D0             ; command for trap call to display message
0000151C  4E4F                     559                  TRAP        #15                 ; trap call
0000151E                           560                  
0000151E  4242                     561                  CLR         D2
00001520  1218                     562                  MOVE.B      (A0)+, D1
00001522  1401                     563                  MOVE.B      D1,D2               ; copy data over
00001524  E642                     564                  ASR         #three,D2           ; Shift to the right to remove register
00001526  C47C 0007                565                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
0000152A                           566                  
0000152A  4243                     567                  CLR         D3                  ; Clear D3 so we can move D1 in
0000152C  1601                     568                  MOVE.B      D1,D3               ; Move othr byte in
0000152E  C67C 0007                569                  AND         #seven,D3           ; Set everything besides register to 0
00001532                           570                  
00001532  4241                     571                  CLR         D1
00001534  3218                     572                  MOVE.W      (A0)+, D1
00001536                           573                 
00001536                           574                  
00001536  43F9 000035EC            575                  LEA         hashTag, A1           ; Display space
0000153C  103C 000E                576                  MOVE.B      #14, D0             ; command for trap call to display message
00001540  4E4F                     577                  TRAP        #15                 ; trap call
00001542                           578          
00001542  103C 0003                579                  MOVE.B      #3, D0
00001546  4E4F                     580                  TRAP        #15
00001548                           581          
00001548  43F9 000035F0            582                  LEA         comma, A1           ; Display space
0000154E  103C 000E                583                  MOVE.B      #14, D0             ; command for trap call to display message
00001552  4E4F                     584                  TRAP        #15                 ; trap call
00001554                           585                  
00001554  4EB9 00002806            586                  JSR         printEA
0000155A                           587          
0000155A  43F9 000035E5            588                  LEA         newLine, A1           ; Display space
00001560  103C 000E                589                  MOVE.B      #14, D0             ; command for trap call to display message
00001564  4E4F                     590                  TRAP        #15                 ; trap call
00001566                           591                  
00001566                           592                  
00001566  6000 FAD8                593                  BRA         LOOP                
0000156A                           594          
0000156A                           595  opDynBCLR       
0000156A  4241                     596                  CLR         D1
0000156C  1218                     597                  MOVE.B      (A0)+,D1            ; Copy second byte in
0000156E  1601                     598                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
00001570  E243                     599                  ASR         #one,D3             ; Shift register over to the end
00001572  C67C 0007                600                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
00001576                           601                  
00001576  1401                     602                  MOVE.B      D1,D2
00001578  EC42                     603                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
0000157A  B47C 0002                604                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
0000157E  6600 2000                605                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
00001582                           606  
00001582                           607                  
00001582  43F9 00003603            608                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
00001588  103C 000E                609                  MOVE.B      #14, D0             ; command for trap call to display message
0000158C  4E4F                     610                  TRAP        #15                 ; trap call  
0000158E                           611                  
0000158E  43F9 000035E9            612                  LEA         space, A1           ; Display space
00001594  103C 000E                613                  MOVE.B      #14, D0             ; command for trap call to display message
00001598  4E4F                     614                  TRAP        #15                 ; trap call
0000159A                           615                  
0000159A  143C 0000                616                  MOVE.B      #zero,D2                
0000159E  4EB9 00002806            617                  JSR         printEA
000015A4                           618                  
000015A4  43F9 000035F0            619                  LEA         comma, A1           ; Display space
000015AA  103C 000E                620                  MOVE.B      #14, D0             ; command for trap call to display message
000015AE  4E4F                     621                  TRAP        #15                 ; trap call
000015B0                           622                  
000015B0  4242                     623                  CLR         D2
000015B2  1401                     624                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000015B4  E642                     625                  ASR         #three,D2           ; Remove/shift the register out
000015B6  C47C 0007                626                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000015BA                           627                  
000015BA  4243                     628                  CLR         D3                  ; Clearing D3 to avoid mashing data
000015BC  1601                     629                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000015BE  C67C 0007                630                  AND         #seven,D3           ; Change all bits except for register bits to 0
000015C2                           631                  
000015C2                           632  
000015C2  4EB9 00002806            633                  JSR         printEA
000015C8                           634          
000015C8  43F9 000035E5            635                  LEA         newLine, A1           ; Display space
000015CE  103C 000E                636                  MOVE.B      #14, D0             ; command for trap call to display message
000015D2  4E4F                     637                  TRAP        #15                 ; trap call            
000015D4                           638  
000015D4                           639  
000015D4  6000 FA6A                640                  BRA         LOOP                ; go back to the loop
000015D8                           641   
000015D8                           642  opMOVEB 
000015D8  43F9 00003608            643          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
000015DE  103C 000E                644          MOVE.B      #14, D0             ; command for trap call to display message
000015E2  4E4F                     645          TRAP        #15                 ; trap call
000015E4  43F9 00003683            646          LEA         dispByte, A1        ; display byte
000015EA  103C 000E                647          MOVE.B      #14, D0             ; command for trap call to display message
000015EE  4E4F                     648          TRAP        #15                 ; trap call
000015F0  43F9 000035E9            649          LEA         space, A1           ; create spaces
000015F6  103C 000E                650          MOVE.B      #14, D0             ; command for trap call to display message
000015FA  4E4F                     651          TRAP        #15                 ; trap call
000015FC                           652          
000015FC                           653          
000015FC  4245                     654          CLR         D5                  ; Clear D5
000015FE  1A01                     655          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001600  E245                     656          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001602  CA7C 0007                657          AND         #seven,D5
00001606                           658          
00001606  4244                     659          CLR         D4                  ; Clear out D4
00001608  1801                     660          MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000160A  C87C 0001                661          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000160E                           662          
0000160E  4241                     663          CLR          D1
00001610  4242                     664          CLR          D2
00001612  1218                     665          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001614  1401                     666          MOVE.B      D1,D2
00001616  EC42                     667          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001618  D842                     668          ADD         D2,D4               ; Adds the remaining bits to D4
0000161A                           669          
0000161A  4242                     670          CLR         D2
0000161C  1401                     671          MOVE.B      D1,D2               ; Copy new byte over to D2
0000161E  E642                     672          ASR         #three,D2           ; Shift source register out
00001620  C47C 0007                673          AND         #seven,D2           ; Set everything to 0 except for the mode
00001624                           674          
00001624  4243                     675          CLR         D3
00001626  1601                     676          MOVE.B      D1,D3
00001628  C67C 0007                677          AND         #seven,D3
0000162C                           678          
0000162C  4EB9 00002806            679          JSR         printEA
00001632                           680          
00001632  43F9 000035F0            681          LEA         comma, A1           ; Display space
00001638  103C 000E                682          MOVE.B      #14, D0             ; command for trap call to display message
0000163C  4E4F                     683          TRAP        #15                 ; trap call
0000163E                           684          
0000163E  4242                     685          CLR         D2
00001640  4243                     686          CLR         D3
00001642  1404                     687          MOVE.B      D4,D2
00001644  1605                     688          MOVE.B      D5,D3
00001646                           689          
00001646  4EB9 00002806            690          JSR         printEA
0000164C                           691          
0000164C                           692          
0000164C  43F9 000035E5            693          LEA         newLine, A1           ; Display space
00001652  103C 000E                694          MOVE.B      #14, D0             ; command for trap call to display message
00001656  4E4F                     695          TRAP        #15                 ; trap call            
00001658                           696  
00001658                           697  
00001658  6000 F9E6                698          BRA         LOOP                ; go back to the loop
0000165C                           699          
0000165C                           700  opMOVEL     
0000165C                           701          
0000165C  4245                     702              CLR         D5                  ; Clear D5
0000165E  1A01                     703              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001660  E245                     704              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001662  CA7C 0007                705              AND         #seven,D5
00001666                           706          
00001666  4244                     707              CLR         D4                  ; Clear out D4
00001668  1801                     708              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000166A  C87C 0001                709              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000166E                           710          
0000166E  4241                     711              CLR          D1
00001670  4242                     712              CLR          D2
00001672  1218                     713              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001674  1401                     714              MOVE.B      D1,D2
00001676  EC42                     715              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001678  D842                     716              ADD         D2,D4               ; Adds the remaining bits to D4
0000167A                           717          
0000167A  B87C 0001                718              CMP         #one,D4             ; Check if it is MOVEA
0000167E  6700 0070                719              BEQ         opMOVEAL            ; If it is, branch off
00001682                           720              
00001682  43F9 00003608            721              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001688  103C 000E                722              MOVE.B      #14, D0             ; command for trap call to display message
0000168C  4E4F                     723              TRAP        #15                 ; trap call  
0000168E                           724              
0000168E                           725              
0000168E  43F9 00003689            726              LEA         dispLong,A1
00001694  103C 000E                727              MOVE.B      #14, D0             ; command for trap call to display message
00001698  4E4F                     728              TRAP        #15                 ; trap call
0000169A                           729              
0000169A  43F9 000035E9            730              LEA         space, A1           ; create spaces
000016A0  103C 000E                731              MOVE.B      #14, D0             ; command for trap call to display message
000016A4  4E4F                     732              TRAP        #15                 ; trap call
000016A6                           733          
000016A6  4242                     734              CLR         D2
000016A8  1401                     735              MOVE.B      D1,D2               ; Copy new byte over to D2
000016AA  E642                     736              ASR         #three,D2           ; Shift source register out
000016AC  C47C 0007                737              AND         #seven,D2           ; Set everything to 0 except for the mode
000016B0                           738          
000016B0  4243                     739              CLR         D3
000016B2  1601                     740              MOVE.B      D1,D3
000016B4  C67C 0007                741              AND         #seven,D3
000016B8                           742              
000016B8  4246                     743              CLR         D6
000016BA  1C3C 0001                744              MOVE.B      #1,D6
000016BE  4EB9 00002806            745              JSR         printEA
000016C4  4246                     746              CLR         D6
000016C6                           747              
000016C6  43F9 000035F0            748              LEA         comma, A1           ; Display comma
000016CC  103C 000E                749              MOVE.B      #14, D0             ; command for trap call to display message
000016D0  4E4F                     750              TRAP        #15                 ; trap call
000016D2                           751          
000016D2  4242                     752              CLR         D2
000016D4  4243                     753              CLR         D3
000016D6  1404                     754              MOVE.B      D4,D2
000016D8  1605                     755              MOVE.B      D5,D3
000016DA                           756              
000016DA                           757  
000016DA                           758              
000016DA  4EB9 00002806            759              JSR         printEA
000016E0                           760          
000016E0                           761          
000016E0  43F9 000035E5            762              LEA         newLine, A1           ; Display space
000016E6  103C 000E                763              MOVE.B      #14, D0             ; command for trap call to display message
000016EA  4E4F                     764              TRAP        #15                 ; trap call            
000016EC                           765  
000016EC                           766  
000016EC  6000 F952                767              BRA         LOOP                ; go back to the loop
000016F0                           768              
000016F0                           769  opMOVEAL
000016F0                           770  
000016F0  43F9 0000360D            771              LEA         MOVEAmatch,A1
000016F6  103C 000E                772              MOVE.B      #14, D0             ; command for trap call to display message
000016FA  4E4F                     773              TRAP        #15                 ; trap call
000016FC                           774              
000016FC  43F9 00003689            775              LEA         dispLong,A1
00001702  103C 000E                776              MOVE.B      #14, D0             ; command for trap call to display message
00001706  4E4F                     777              TRAP        #15                 ; trap call
00001708                           778              
00001708                           779  
00001708  43F9 000035E9            780              LEA         space, A1           ; create spaces
0000170E  103C 000E                781              MOVE.B      #14, D0             ; command for trap call to display message
00001712  4E4F                     782              TRAP        #15                 ; trap call
00001714                           783              
00001714  4242                     784              CLR         D2
00001716  1401                     785              MOVE.B      D1,D2               ; Copy new byte over to D2
00001718  E642                     786              ASR         #three,D2           ; Shift source register out
0000171A  C47C 0007                787              AND         #seven,D2           ; Set everything to 0 except for the mode
0000171E                           788          
0000171E  4243                     789              CLR         D3
00001720  1601                     790              MOVE.B      D1,D3
00001722  C67C 0007                791              AND         #seven,D3
00001726                           792              
00001726  4241                     793              CLR         D1                  ; Clear D1
00001728                           794              
00001728                           795              
00001728  4EB9 00002806            796              JSR         printEA
0000172E                           797              
0000172E  43F9 000035F0            798              LEA         comma, A1           ; Display comma
00001734  103C 000E                799              MOVE.B      #14, D0             ; command for trap call to display message
00001738  4E4F                     800              TRAP        #15                 ; trap call
0000173A                           801  
0000173A  4242                     802              CLR         D2
0000173C  4243                     803              CLR         D3
0000173E  1404                     804              MOVE.B      D4,D2
00001740  1605                     805              MOVE.B      D5,D3
00001742                           806          
00001742  4EB9 00002806            807              JSR         printEA
00001748                           808          
00001748                           809          
00001748  43F9 000035E5            810              LEA         newLine, A1           ; Display space
0000174E  103C 000E                811              MOVE.B      #14, D0             ; command for trap call to display message
00001752  4E4F                     812              TRAP        #15                 ; trap call            
00001754                           813  
00001754                           814  
00001754  6000 F8EA                815              BRA         LOOP                ; go back to the loop
00001758                           816  
00001758                           817  opMOVEW
00001758                           818          
00001758  4245                     819              CLR         D5                  ; Clear D5
0000175A  1A01                     820              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000175C  E245                     821              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
0000175E  CA7C 0007                822              AND         #seven,D5
00001762                           823          
00001762  4244                     824              CLR         D4                  ; Clear out D4
00001764  1801                     825              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001766  C87C 0001                826              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000176A                           827          
0000176A  4241                     828              CLR          D1
0000176C  4242                     829              CLR          D2
0000176E  1218                     830              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001770  1401                     831              MOVE.B      D1,D2
00001772  EC42                     832              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001774  D842                     833              ADD         D2,D4               ; Adds the remaining bits to D4
00001776                           834          
00001776  B87C 0001                835              CMP         #one,D4             ; Check if it is MOVEA
0000177A  6700 006A                836              BEQ         opMOVEAW            ; If it is, branch off
0000177E                           837              
0000177E  43F9 00003608            838              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001784  103C 000E                839              MOVE.B      #14, D0             ; command for trap call to display message
00001788  4E4F                     840              TRAP        #15                 ; trap call  
0000178A                           841              
0000178A  43F9 00003686            842              LEA         dispWord,A1
00001790  103C 000E                843              MOVE.B      #14, D0             ; command for trap call to display message
00001794  4E4F                     844              TRAP        #15                 ; trap call
00001796                           845              
00001796  43F9 000035E9            846              LEA         space, A1           ; create spaces
0000179C  103C 000E                847              MOVE.B      #14, D0             ; command for trap call to display message
000017A0  4E4F                     848              TRAP        #15                 ; trap call
000017A2                           849          
000017A2  4242                     850              CLR         D2
000017A4  1401                     851              MOVE.B      D1,D2               ; Copy new byte over to D2
000017A6  E642                     852              ASR         #three,D2           ; Shift source register out
000017A8  C47C 0007                853              AND         #seven,D2           ; Set everything to 0 except for the mode
000017AC                           854          
000017AC  4243                     855              CLR         D3
000017AE  1601                     856              MOVE.B      D1,D3
000017B0  C67C 0007                857              AND         #seven,D3
000017B4                           858              
000017B4  4241                     859              CLR         D1                  ; Clear D1
000017B6                           860              
000017B6  4EB9 00002806            861              JSR         printEA
000017BC                           862              
000017BC  43F9 000035F0            863              LEA         comma, A1           ; Display comma
000017C2  103C 000E                864              MOVE.B      #14, D0             ; command for trap call to display message
000017C6  4E4F                     865              TRAP        #15                 ; trap call
000017C8                           866          
000017C8  4242                     867              CLR         D2
000017CA  4243                     868              CLR         D3
000017CC  1404                     869              MOVE.B      D4,D2
000017CE  1605                     870              MOVE.B      D5,D3
000017D0                           871              
000017D0                           872  
000017D0                           873              
000017D0  4EB9 00002806            874              JSR         printEA
000017D6                           875          
000017D6                           876          
000017D6  43F9 000035E5            877              LEA         newLine, A1           ; Display space
000017DC  103C 000E                878              MOVE.B      #14, D0             ; command for trap call to display message
000017E0  4E4F                     879              TRAP        #15                 ; trap call            
000017E2                           880  
000017E2                           881  
000017E2  6000 F85C                882              BRA         LOOP                ; go back to the loop
000017E6                           883  opMOVEAW  
000017E6  43F9 0000360D            884              LEA         MOVEAmatch,A1
000017EC  103C 000E                885              MOVE.B      #14, D0             ; command for trap call to display message
000017F0  4E4F                     886              TRAP        #15                 ; trap call
000017F2                           887              
000017F2  43F9 00003686            888              LEA         dispWord,A1
000017F8  103C 000E                889              MOVE.B      #14, D0             ; command for trap call to display message
000017FC  4E4F                     890              TRAP        #15                 ; trap call
000017FE                           891              
000017FE                           892  
000017FE  43F9 000035E9            893              LEA         space, A1           ; create spaces
00001804  103C 000E                894              MOVE.B      #14, D0             ; command for trap call to display message
00001808  4E4F                     895              TRAP        #15                 ; trap call
0000180A                           896              
0000180A  4242                     897              CLR         D2
0000180C  1401                     898              MOVE.B      D1,D2               ; Copy new byte over to D2
0000180E  E642                     899              ASR         #three,D2           ; Shift source register out
00001810  C47C 0007                900              AND         #seven,D2           ; Set everything to 0 except for the mode
00001814                           901          
00001814  4243                     902              CLR         D3
00001816  1601                     903              MOVE.B      D1,D3
00001818  C67C 0007                904              AND         #seven,D3
0000181C                           905              
0000181C  4241                     906              CLR         D1                  ; Clear D1
0000181E                           907              
0000181E                           908              
0000181E  4EB9 00002806            909              JSR         printEA
00001824                           910              
00001824  43F9 000035F0            911              LEA         comma, A1           ; Display comma
0000182A  103C 000E                912              MOVE.B      #14, D0             ; command for trap call to display message
0000182E  4E4F                     913              TRAP        #15                 ; trap call
00001830                           914  
00001830  4242                     915              CLR         D2
00001832  4243                     916              CLR         D3
00001834  1404                     917              MOVE.B      D4,D2
00001836  1605                     918              MOVE.B      D5,D3
00001838                           919          
00001838  4EB9 00002806            920              JSR         printEA
0000183E                           921          
0000183E                           922          
0000183E  43F9 000035E5            923              LEA         newLine, A1           ; Display space
00001844  103C 000E                924              MOVE.B      #14, D0             ; command for trap call to display message
00001848  4E4F                     925              TRAP        #15                 ; trap call            
0000184A                           926  
0000184A                           927  
0000184A  6000 F7F4                928              BRA         LOOP                ; go back to the loop
0000184E                           929  
0000184E                           930  opNEG   
0000184E  43F9 00003613            931              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001854  103C 000E                932              MOVE.B      #14, D0             ; command for trap call to display message
00001858  4E4F                     933              TRAP        #15                 ; trap call
0000185A                           934          
0000185A                           935          
0000185A  1218                     936              MOVE.B      (A0)+, D1
0000185C  1401                     937              MOVE.B      D1,D2               ; copy data over
0000185E  EC42                     938              ASR         #six,D2
00001860                           939              
00001860  B47C 0000                940              CMP         #zero,D2
00001864  6700 0016                941              BEQ         opNEGB
00001868  B47C 0001                942              CMP         #one,D2
0000186C  6700 008E                943              BEQ         opNEGW
00001870  B47C 0002                944              CMP         #two,D2
00001874  6700 0046                945              BEQ         opNEGL
00001878  6000 1604                946              BRA         invalid
0000187C                           947  opNEGB
0000187C                           948  
0000187C  43F9 00003683            949              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001882  103C 000E                950              MOVE.B      #14, D0             ; command for trap call to display message
00001886  4E4F                     951              TRAP        #15                 ; trap call
00001888                           952          
00001888  43F9 000035E9            953              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000188E  103C 000E                954              MOVE.B      #14, D0             ; command for trap call to display message
00001892  4E4F                     955              TRAP        #15                 ; trap call
00001894                           956          
00001894  4242                     957              CLR         D2                  ; Clear Data register 2
00001896  3401                     958              MOVE        D1,D2               ; Move byte into D2
00001898  E642                     959              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000189A  C47C 0007                960              AND         #seven,D2           ; Stores mode
0000189E                           961              
0000189E  4243                     962              CLR         D3
000018A0  3601                     963              MOVE        D1,D3
000018A2  C67C 0007                964              AND         #seven,D3
000018A6                           965          
000018A6  4EB9 00002806            966              JSR         printEA
000018AC                           967                  
000018AC  43F9 000035E5            968              LEA         newLine, A1           ; Display space
000018B2  103C 000E                969              MOVE.B      #14, D0             ; command for trap call to display message
000018B6  4E4F                     970              TRAP        #15                 ; trap call  
000018B8                           971          
000018B8  6000 F786                972              BRA         LOOP
000018BC                           973                  
000018BC                           974  
000018BC                           975  opNEGL
000018BC                           976  
000018BC  43F9 00003689            977              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
000018C2  103C 000E                978              MOVE.B      #14, D0             ; command for trap call to display message
000018C6  4E4F                     979              TRAP        #15                 ; trap call
000018C8                           980  
000018C8  43F9 000035E9            981              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000018CE  103C 000E                982              MOVE.B      #14, D0             ; command for trap call to display message
000018D2  4E4F                     983              TRAP        #15                 ; trap call
000018D4                           984                  
000018D4  4242                     985              CLR         D2                  ; Clear Data register 2
000018D6  3401                     986              MOVE        D1,D2               ; Move byte into D2
000018D8  E642                     987              ASR         #three,D2           ; Shift mode into place and moves mode into place
000018DA  C47C 0007                988              AND         #seven,D2           ; Stores mode
000018DE                           989          
000018DE  4243                     990              CLR         D3
000018E0  3601                     991              MOVE        D1,D3
000018E2  C67C 0007                992              AND         #seven,D3
000018E6                           993          
000018E6  4EB9 00002806            994              JSR         printEA
000018EC                           995                      
000018EC  43F9 000035E5            996              LEA         newLine, A1         ; Display space
000018F2  103C 000E                997              MOVE.B      #14, D0             ; command for trap call to display message
000018F6  4E4F                     998              TRAP        #15                 ; trap call  
000018F8                           999          
000018F8  6000 F746               1000              BRA         LOOP
000018FC                          1001          
000018FC                          1002  
000018FC                          1003  opNEGW
000018FC                          1004  
000018FC  43F9 00003686           1005              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001902  103C 000E               1006              MOVE.B      #14, D0             ; command for trap call to display message
00001906  4E4F                    1007              TRAP        #15                 ; trap call
00001908                          1008          
00001908  43F9 000035E9           1009              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000190E  103C 000E               1010              MOVE.B      #14, D0             ; command for trap call to display message
00001912  4E4F                    1011              TRAP        #15                 ; trap call        
00001914                          1012                  
00001914  4242                    1013              CLR         D2                  ; Clear Data register 2
00001916  3401                    1014              MOVE        D1,D2               ; Move byte into D2
00001918  E642                    1015              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000191A  C47C 0007               1016              AND         #seven,D2           ; Stores mode
0000191E                          1017          
0000191E  4243                    1018              CLR         D3
00001920  3601                    1019              MOVE        D1,D3
00001922  C67C 0007               1020              AND         #seven,D3
00001926                          1021          
00001926  4EB9 00002806           1022              JSR         printEA
0000192C                          1023              
0000192C  43F9 000035E5           1024              LEA         newLine, A1           ; Display space
00001932  103C 000E               1025              MOVE.B      #14, D0             ; command for trap call to display message
00001936  4E4F                    1026              TRAP        #15                 ; trap call  
00001938                          1027          
00001938  6000 F706               1028              BRA         LOOP
0000193C                          1029  
0000193C                          1030  opRTSJSR
0000193C                          1031          
0000193C  1218                    1032              MOVE.B      (A0)+, D1
0000193E                          1033              
0000193E  1401                    1034              MOVE.B      D1,D2               ; copy data over
00001940  B47C 0075               1035              CMP         #117,D2
00001944  6700 0050               1036              BEQ         opRTS
00001948                          1037              
00001948  EC42                    1038              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
0000194A  B47C 0002               1039              CMP         #two,D2             ; Checking if it is JSR
0000194E  6700 0006               1040              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001952                          1041  
00001952  6000 152A               1042              BRA         invalid
00001956                          1043  
00001956                          1044  opJSR
00001956                          1045                        
00001956  43F9 0000361B           1046              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
0000195C  103C 000E               1047              MOVE.B      #14, D0             ; command for trap call to display message
00001960  4E4F                    1048              TRAP        #15                 ; trap call
00001962                          1049              
00001962  43F9 000035E9           1050              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001968  103C 000E               1051              MOVE.B      #14, D0             ; command for trap call to display message
0000196C  4E4F                    1052              TRAP        #15                 ; trap call
0000196E                          1053              
0000196E  4242                    1054              CLR         D2
00001970  4243                    1055              CLR         D3
00001972                          1056              
00001972  1401                    1057              MOVE.B      D1,D2
00001974  E642                    1058              ASR         #three,D2
00001976  C47C 0007               1059              AND         #seven,D2
0000197A                          1060              
0000197A  1601                    1061              MOVE.B      D1,D3
0000197C  C67C 0007               1062              AND         #seven,D3
00001980                          1063              
00001980  4EB9 00002806           1064              JSR         printEA
00001986                          1065              
00001986  43F9 000035E5           1066              LEA         newLine, A1           ; Display space
0000198C  103C 000E               1067              MOVE.B      #14, D0             ; command for trap call to display message
00001990  4E4F                    1068              TRAP        #15                 ; trap call  
00001992                          1069              
00001992  6000 F6AC               1070              BRA         loop            
00001996                          1071  opRTS
00001996                          1072  
00001996  43F9 00003617           1073              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
0000199C  103C 000E               1074              MOVE.B      #14, D0             ; command for trap call to display message
000019A0  4E4F                    1075              TRAP        #15                 ; trap call
000019A2                          1076              
000019A2  43F9 000035E5           1077              LEA         newLine, A1           ; Display space
000019A8  103C 000E               1078              MOVE.B      #14, D0             ; command for trap call to display message
000019AC  4E4F                    1079              TRAP        #15                 ; trap call 
000019AE                          1080              
000019AE  6000 F690               1081              BRA         loop
000019B2                          1082  
000019B2                          1083  opMOVEMLEA
000019B2  4242                    1084              CLR         D2                  ; Clear D2
000019B4  1401                    1085              MOVE.B      D1,D2               ; Copy byte over
000019B6  C47C 000F               1086              AND         #secNib,D2          ; Check only the second nibble
000019BA  B47C 000C               1087              CMP         #twelve,D2          ; Compare the second nibble to twelve
000019BE  6700 000E               1088              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
000019C2  B47C 0008               1089              CMP         #eight,D2           ; Compare the second nibble to eight
000019C6  6700 0006               1090              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
000019CA  6000 008C               1091              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
000019CE                          1092              
000019CE                          1093  opMOVEM            
000019CE  4246                    1094              CLR         D6                  ; Clearing D4 to store dr field
000019D0  1C01                    1095              MOVE.B      D1,D6               ; Moving byte to find dr field
000019D2  E446                    1096              ASR         #two,D6             ; Moving dr field to readable spot
000019D4  CC7C 0001               1097              AND         #one,D6             ; seting everything except dr to 0
000019D8                          1098  
000019D8  4241                    1099              CLR         D1  
000019DA  1218                    1100              MOVE.B      (A0)+, D1           ; Taking in next byte
000019DC                          1101              
000019DC  4245                    1102              CLR         D5
000019DE  1A01                    1103              MOVE.B      D1,D5               ; Using D6 to check if this is indeed MOVEM
000019E0  EE45                    1104              ASR         #seven,D5
000019E2  CA7C 0001               1105              AND         #one,D5
000019E6  BA7C 0001               1106              CMP         #one,D5             ; This bit should be one if this is MOVEM
000019EA  6600 1492               1107              BNE         invalid             ; If this is not 1 then this is not moveM
000019EE  4245                    1108              CLR         D5
000019F0                          1109              
000019F0  43F9 0000361F           1110              LEA         MOVEMMatch, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
000019F6  103C 000E               1111              MOVE.B      #14, D0             ; command for trap call to display message
000019FA  4E4F                    1112              TRAP        #15                 ; trap call
000019FC                          1113              
000019FC  4245                    1114              CLR         D5                  ; Clearing D5 to store size
000019FE  1A01                    1115              MOVE.B      D1,D5               ; Moving byte that contains bit for size
00001A00  EC45                    1116              ASR         #six,D5            ; Moving size bit to the very right to read
00001A02  CA7C 0001               1117              AND         #one,D5             ; Isolating the one bit for size
00001A06                          1118              
00001A06  4242                    1119              CLR         D2                  ; Storing EA mode in D2
00001A08  1401                    1120              MOVE.B      D1,D2
00001A0A  E642                    1121              ASR         #three,D2
00001A0C  C47C 0007               1122              AND         #seven,D2
00001A10                          1123              
00001A10  4243                    1124              CLR         D3                  ; Storing EA register into D3
00001A12  1601                    1125              MOVE.B      D1,D3
00001A14  C67C 0007               1126              AND         #seven,D3
00001A18                          1127              
00001A18  4EB9 00002E84           1128              JSR         MOVEMBRA
00001A1E                          1129              
00001A1E  B47C 0003               1130              CMP         #three,D2
00001A22  6700 0024               1131              BEQ         skipPrintEA
00001A26                          1132              
00001A26  43F9 000035F0           1133              LEA         comma, A1           ; Display comma
00001A2C  103C 000E               1134              MOVE.B      #14, D0             ; command for trap call to display message
00001A30  4E4F                    1135              TRAP        #15                 ; trap call
00001A32                          1136              
00001A32                          1137  
00001A32  4EB9 00002806           1138              JSR         printEA
00001A38                          1139              
00001A38  43F9 000035E5           1140              LEA         newline, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001A3E  103C 000E               1141              MOVE.B      #14, D0             ; command for trap call to display message
00001A42  4E4F                    1142              TRAP        #15                 ; trap call            
00001A44                          1143  
00001A44  6000 F5FA               1144              BRA         loop            
00001A48                          1145  
00001A48                          1146  skipPrintEA 
00001A48                          1147  
00001A48  43F9 000035E5           1148              LEA         newline, A1        
00001A4E  103C 000E               1149              MOVE.B      #14, D0             ; command for trap call to display message
00001A52  4E4F                    1150              TRAP        #15                 ; trap call            
00001A54                          1151  
00001A54  6000 F5EA               1152              BRA         loop 
00001A58                          1153  opLEA
00001A58  4244                    1154              CLR         D4                  ; Clearing space for source register
00001A5A  1801                    1155              MOVE.B      D1,D4               ; Moving byte to isolate register
00001A5C  E244                    1156              ASR         #one,D4
00001A5E  C87C 0007               1157              AND         #seven,D4           ; Isolated register
00001A62                          1158  
00001A62  4245                    1159              CLR         D5                  ; Clearing D5 to check if bits match LEA static bits
00001A64  1A01                    1160              MOVE.B      D1,D5
00001A66  CA7C 0001               1161              AND         #one,D5
00001A6A  E545                    1162              ASL         #two,D5
00001A6C                          1163              
00001A6C  1218                    1164              MOVE.B      (A0)+, D1           ; Taking in next byte
00001A6E                          1165              
00001A6E  1C01                    1166              MOVE.B      D1,D6
00001A70  EC46                    1167              ASR         #six,D6
00001A72  DA46                    1168              ADD         D6,D5
00001A74  4246                    1169              CLR         D6
00001A76                          1170  
00001A76  BA7C 0007               1171              CMP         #seven,D5
00001A7A  6600 1402               1172              BNE         invalid   
00001A7E                          1173              
00001A7E  43F9 00003625           1174              LEA         LEAmatch, A1        ; we know that the opcode will be LEA, so load A1 to print message
00001A84  103C 000E               1175              MOVE.B      #14, D0             ; command for trap call to display message
00001A88  4E4F                    1176              TRAP        #15                 ; trap call            
00001A8A                          1177  
00001A8A  43F9 000035E9           1178              LEA         space, A1         ; we know that the opcode will be MOVEM, so load A1 to print message
00001A90  103C 000E               1179              MOVE.B      #14, D0             ; command for trap call to display message
00001A94  4E4F                    1180              TRAP        #15                 ; trap call            
00001A96                          1181              
00001A96  4242                    1182              CLR         D2
00001A98  1401                    1183              MOVE.B      D1,D2
00001A9A  E642                    1184              ASR         #three,D2
00001A9C  C47C 0007               1185              AND         #seven,D2
00001AA0                          1186              
00001AA0  4243                    1187              CLR         D3
00001AA2  1601                    1188              MOVE.B      D1,D3
00001AA4  C67C 0007               1189              AND         #seven,D3
00001AA8                          1190              
00001AA8  4EB9 00002806           1191              JSR         printEA
00001AAE                          1192              
00001AAE  43F9 000035F0           1193              LEA         comma, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001AB4  103C 000E               1194              MOVE.B      #14, D0             ; command for trap call to display message
00001AB8  4E4F                    1195              TRAP        #15                 ; trap call            
00001ABA                          1196              
00001ABA                          1197              
00001ABA  4243                    1198              CLR         D3
00001ABC  1604                    1199              MOVE.B      D4,D3
00001ABE  143C 0001               1200              MOVE.B      #one,D2
00001AC2                          1201              
00001AC2  4EB9 00002806           1202              JSR         printEA             ; Prints out source address
00001AC8                          1203              
00001AC8  43F9 000035E5           1204              LEA         newline, A1         ; Prints new line
00001ACE  103C 000E               1205              MOVE.B      #14, D0             ; command for trap call to display message
00001AD2  4E4F                    1206              TRAP        #15                 ; trap call
00001AD4                          1207  
00001AD4  6000 F56A               1208              BRA         loop                        
00001AD8                          1209  
00001AD8  43F9 00003629           1210  opSUBQ  LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
00001ADE  103C 000E               1211          MOVE.B      #14, D0             ; command for trap call to display message
00001AE2  4E4F                    1212          TRAP        #15                 ; trap call
00001AE4                          1213  
00001AE4  43F9 0000362E           1214  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001AEA  103C 000E               1215          MOVE.B      #14, D0             ; command for trap call to display message
00001AEE  4E4F                    1216          TRAP        #15                 ; trap call
00001AF0  43F9 000035E9           1217          LEA         space, A1           ; create spaces
00001AF6  103C 000E               1218          MOVE.B      #14, D0             ; command for trap call to display message
00001AFA  4E4F                    1219          TRAP        #15                 ; trap call
00001AFC                          1220  
00001AFC  43F9 00003632           1221  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001B02  103C 000E               1222          MOVE.B      #14, D0             ; command for trap call to display message
00001B06  4E4F                    1223          TRAP        #15                 ; trap call
00001B08                          1224  
00001B08  43F9 00003636           1225  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001B0E  103C 000E               1226          MOVE.B      #14, D0             ; command for trap call to display message
00001B12  4E4F                    1227          TRAP        #15                 ; trap call
00001B14                          1228  
00001B14  43F9 0000363A           1229  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001B1A  103C 000E               1230          MOVE.B      #14, D0             ; command for trap call to display message
00001B1E  4E4F                    1231          TRAP        #15                 ; trap call
00001B20                          1232  
00001B20  43F9 0000363E           1233  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001B26  103C 000E               1234          MOVE.B      #14, D0             ; command for trap call to display message
00001B2A  4E4F                    1235          TRAP        #15                 ; trap call
00001B2C                          1236  
00001B2C  43F9 0000364A           1237  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001B32  103C 000E               1238          MOVE.B      #14, D0             ; command for trap call to display message
00001B36  4E4F                    1239          TRAP        #15                 ; trap call
00001B38                          1240  
00001B38  43F9 00003656           1241  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001B3E  103C 000E               1242          MOVE.B      #14, D0             ; command for trap call to display message
00001B42  4E4F                    1243          TRAP        #15                 ; trap call
00001B44  43F9 000035E9           1244          LEA         space, A1           ; create spaces
00001B4A  103C 000E               1245          MOVE.B      #14, D0             ; command for trap call to display message
00001B4E  4E4F                    1246          TRAP        #15                 ; trap call
00001B50                          1247          
00001B50  E141                    1248          ASL         #eight, D1
00001B52  1218                    1249          MOVE.B      (A0)+, D1
00001B54                          1250          
00001B54  4242                    1251          CLR         D2
00001B56  4243                    1252          CLR         D3
00001B58  1401                    1253          MOVE.B      D1, D2
00001B5A  E642                    1254          ASR         #three, D2
00001B5C  C47C 0007               1255          AND         #seven, D2
00001B60  1601                    1256          MOVE.B      D1, D3
00001B62  C67C 0007               1257          AND         #seven, D3
00001B66                          1258          
00001B66  4EB9 00002806           1259          JSR         printEA
00001B6C                          1260          
00001B6C  43F9 000035F0           1261          LEA         comma, A1           ; create comma
00001B72  103C 000E               1262          MOVE.B      #14, D0             ; command for trap call to display message
00001B76  4E4F                    1263          TRAP        #15                 ; trap call
00001B78                          1264  
00001B78  4242                    1265          CLR         D2
00001B7A  4243                    1266          CLR         D3
00001B7C  3601                    1267          MOVE.W      D1, D3
00001B7E  E043                    1268          ASR         #eight, D3
00001B80  E243                    1269          ASR         #one, D3
00001B82  C67C 0007               1270          AND         #seven, D3
00001B86                          1271  
00001B86  4EB9 00002806           1272          JSR         printEA
00001B8C                          1273          
00001B8C  43F9 000035E5           1274          LEA         newLine, A1           ; create new line
00001B92  103C 000E               1275          MOVE.B      #14, D0             ; command for trap call to display message
00001B96  4E4F                    1276          TRAP        #15                 ; trap call
00001B98                          1277          
00001B98  6000 F4A6               1278          BRA         LOOP
00001B9C                          1279          
00001B9C  43F9 0000365B           1280  opADDB  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001BA2  103C 000E               1281          MOVE.B      #14, D0             ; command for trap call to display message
00001BA6  4E4F                    1282          TRAP        #15                 ; trap call
00001BA8                          1283          
00001BA8  43F9 00003683           1284          LEA         dispByte, A1        ; display byte
00001BAE  103C 000E               1285          MOVE.B      #14, D0             ; command for trap call to display message
00001BB2  4E4F                    1286          TRAP        #15                 ; trap call
00001BB4  43F9 000035E9           1287          LEA         space, A1           ; create spaces
00001BBA  103C 000E               1288          MOVE.B      #14, D0             ; command for trap call to display message
00001BBE  4E4F                    1289          TRAP        #15                 ; trap call
00001BC0                          1290          
00001BC0  4242                    1291          CLR         D2
00001BC2  4243                    1292          CLR         D3
00001BC4  1401                    1293          MOVE.B      D1, D2
00001BC6  E642                    1294          ASR         #three, D2
00001BC8  C47C 0007               1295          AND         #seven, D2
00001BCC  1601                    1296          MOVE.B      D1, D3
00001BCE  C67C 0007               1297          AND         #seven, D3
00001BD2                          1298          
00001BD2  4EB9 00002806           1299          JSR         printEA
00001BD8                          1300          
00001BD8  43F9 000035F0           1301          LEA         comma, A1           ; create comma
00001BDE  103C 000E               1302          MOVE.B      #14, D0             ; command for trap call to display message
00001BE2  4E4F                    1303          TRAP        #15                 ; trap call
00001BE4                          1304  
00001BE4  4242                    1305          CLR         D2
00001BE6  4243                    1306          CLR         D3
00001BE8  3601                    1307          MOVE.W      D1, D3
00001BEA  E043                    1308          ASR         #eight, D3
00001BEC  E243                    1309          ASR         #one, D3
00001BEE  C67C 0007               1310          AND         #seven, D3
00001BF2                          1311  
00001BF2  4EB9 00002806           1312          JSR         printEA
00001BF8                          1313          
00001BF8  43F9 000035E5           1314          LEA         newLine, A1           ; create new line
00001BFE  103C 000E               1315          MOVE.B      #14, D0             ; command for trap call to display message
00001C02  4E4F                    1316          TRAP        #15                 ; trap call
00001C04                          1317          
00001C04  6000 F43A               1318          BRA         LOOP
00001C08                          1319          
00001C08  43F9 0000365B           1320  opADDW  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001C0E  103C 000E               1321          MOVE.B      #14, D0             ; command for trap call to display message
00001C12  4E4F                    1322          TRAP        #15                 ; trap call
00001C14                          1323  
00001C14  43F9 00003686           1324          LEA         dispWord, A1        ; display word
00001C1A  103C 000E               1325          MOVE.B      #14, D0             ; command for trap call to display message
00001C1E  4E4F                    1326          TRAP        #15                 ; trap call
00001C20  43F9 000035E9           1327          LEA         space, A1           ; create spaces
00001C26  103C 000E               1328          MOVE.B      #14, D0             ; command for trap call to display message
00001C2A  4E4F                    1329          TRAP        #15                 ; trap call
00001C2C                          1330          
00001C2C  4242                    1331          CLR         D2
00001C2E  4243                    1332          CLR         D3
00001C30  1401                    1333          MOVE.B      D1, D2
00001C32  E642                    1334          ASR         #three, D2
00001C34  C47C 0007               1335          AND         #seven, D2
00001C38  1601                    1336          MOVE.B      D1, D3
00001C3A  C67C 0007               1337          AND         #seven, D3
00001C3E                          1338          
00001C3E  4EB9 00002806           1339          JSR         printEA
00001C44                          1340          
00001C44  43F9 000035F0           1341          LEA         comma, A1           ; create comma
00001C4A  103C 000E               1342          MOVE.B      #14, D0             ; command for trap call to display message
00001C4E  4E4F                    1343          TRAP        #15                 ; trap call
00001C50                          1344  
00001C50  4242                    1345          CLR         D2
00001C52  4243                    1346          CLR         D3
00001C54  3601                    1347          MOVE.W      D1, D3
00001C56  E043                    1348          ASR         #eight, D3
00001C58  E243                    1349          ASR         #one, D3
00001C5A  C67C 0007               1350          AND         #seven, D3
00001C5E                          1351  
00001C5E  4EB9 00002806           1352          JSR         printEA
00001C64                          1353          
00001C64  43F9 000035E5           1354          LEA         newLine, A1           ; create new line
00001C6A  103C 000E               1355          MOVE.B      #14, D0             ; command for trap call to display message
00001C6E  4E4F                    1356          TRAP        #15                 ; trap call
00001C70                          1357          
00001C70  6000 F3CE               1358          BRA         LOOP
00001C74                          1359          
00001C74  43F9 0000365B           1360  opADDL  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001C7A  103C 000E               1361          MOVE.B      #14, D0             ; command for trap call to display message
00001C7E  4E4F                    1362          TRAP        #15                 ; trap call
00001C80                          1363          
00001C80  43F9 00003689           1364          LEA         dispLong, A1        ; display long
00001C86  103C 000E               1365          MOVE.B      #14, D0             ; command for trap call to display message
00001C8A  4E4F                    1366          TRAP        #15                 ; trap call
00001C8C  43F9 000035E9           1367          LEA         space, A1           ; create spaces
00001C92  103C 000E               1368          MOVE.B      #14, D0             ; command for trap call to display message
00001C96  4E4F                    1369          TRAP        #15                 ; trap call
00001C98                          1370          
00001C98  4242                    1371          CLR         D2
00001C9A  4243                    1372          CLR         D3
00001C9C  1401                    1373          MOVE.B      D1, D2
00001C9E  E642                    1374          ASR         #three, D2
00001CA0  C47C 0007               1375          AND         #seven, D2
00001CA4  1601                    1376          MOVE.B      D1, D3
00001CA6  C67C 0007               1377          AND         #seven, D3
00001CAA                          1378          
00001CAA  4246                    1379          CLR         D6
00001CAC  1C3C 0001               1380          MOVE.B      #1, D6
00001CB0                          1381          
00001CB0  4EB9 00002806           1382          JSR         printEA
00001CB6  4246                    1383          CLR         D6
00001CB8                          1384          
00001CB8  43F9 000035F0           1385          LEA         comma, A1           ; create comma
00001CBE  103C 000E               1386          MOVE.B      #14, D0             ; command for trap call to display message
00001CC2  4E4F                    1387          TRAP        #15                 ; trap call
00001CC4                          1388  
00001CC4  4242                    1389          CLR         D2
00001CC6  4243                    1390          CLR         D3
00001CC8  3601                    1391          MOVE.W      D1, D3
00001CCA  E043                    1392          ASR         #eight, D3
00001CCC  E243                    1393          ASR         #one, D3
00001CCE  C67C 0007               1394          AND         #seven, D3
00001CD2                          1395  
00001CD2  4EB9 00002806           1396          JSR         printEA
00001CD8                          1397          
00001CD8  43F9 000035E5           1398          LEA         newLine, A1           ; create new line
00001CDE  103C 000E               1399          MOVE.B      #14, D0             ; command for trap call to display message
00001CE2  4E4F                    1400          TRAP        #15                 ; trap call
00001CE4                          1401          
00001CE4  6000 F35A               1402          BRA         LOOP
00001CE8                          1403  
00001CE8  43F9 0000365F           1404  opADDAW LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001CEE  103C 000E               1405          MOVE.B      #14, D0             ; command for trap call to display message
00001CF2  4E4F                    1406          TRAP        #15                 ; trap call
00001CF4                          1407          
00001CF4  43F9 00003686           1408          LEA         dispWord, A1        ; display word
00001CFA  103C 000E               1409          MOVE.B      #14, D0             ; command for trap call to display message
00001CFE  4E4F                    1410          TRAP        #15                 ; trap call
00001D00  43F9 000035E9           1411          LEA         space, A1           ; create spaces
00001D06  103C 000E               1412          MOVE.B      #14, D0             ; command for trap call to display message
00001D0A  4E4F                    1413          TRAP        #15                 ; trap call
00001D0C                          1414          
00001D0C  4242                    1415          CLR         D2
00001D0E  4243                    1416          CLR         D3
00001D10  1401                    1417          MOVE.B      D1, D2
00001D12  E642                    1418          ASR         #three, D2
00001D14  C47C 0007               1419          AND         #seven, D2
00001D18  1601                    1420          MOVE.B      D1, D3
00001D1A  C67C 0007               1421          AND         #seven, D3
00001D1E                          1422          
00001D1E  4EB9 00002806           1423          JSR         printEA
00001D24                          1424          
00001D24  43F9 000035F0           1425          LEA         comma, A1           ; create comma
00001D2A  103C 000E               1426          MOVE.B      #14, D0             ; command for trap call to display message
00001D2E  4E4F                    1427          TRAP        #15                 ; trap call
00001D30                          1428  
00001D30  4242                    1429          CLR         D2
00001D32  4243                    1430          CLR         D3
00001D34  143C 0001               1431          MOVE.B      #one, D2
00001D38  3601                    1432          MOVE.W      D1, D3
00001D3A  E043                    1433          ASR         #eight, D3
00001D3C  E243                    1434          ASR         #one, D3
00001D3E  C67C 0007               1435          AND         #seven, D3
00001D42                          1436  
00001D42  4EB9 00002806           1437          JSR         printEA
00001D48                          1438          
00001D48  43F9 000035E5           1439          LEA         newLine, A1           ; create new line
00001D4E  103C 000E               1440          MOVE.B      #14, D0             ; command for trap call to display message
00001D52  4E4F                    1441          TRAP        #15                 ; trap call
00001D54                          1442          
00001D54  6000 F2EA               1443          BRA         LOOP
00001D58                          1444  
00001D58  43F9 0000365F           1445  opADDAL LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001D5E  103C 000E               1446          MOVE.B      #14, D0             ; command for trap call to display message
00001D62  4E4F                    1447          TRAP        #15                 ; trap call
00001D64                          1448  
00001D64  43F9 00003689           1449          LEA         dispLong, A1        ; display long
00001D6A  103C 000E               1450          MOVE.B      #14, D0             ; command for trap call to display message
00001D6E  4E4F                    1451          TRAP        #15                 ; trap call
00001D70  43F9 000035E9           1452          LEA         space, A1           ; create spaces
00001D76  103C 000E               1453          MOVE.B      #14, D0             ; command for trap call to display message
00001D7A  4E4F                    1454          TRAP        #15                 ; trap call
00001D7C                          1455          
00001D7C  4242                    1456          CLR         D2
00001D7E  4243                    1457          CLR         D3
00001D80  1401                    1458          MOVE.B      D1, D2
00001D82  E642                    1459          ASR         #three, D2
00001D84  C47C 0007               1460          AND         #seven, D2
00001D88  1601                    1461          MOVE.B      D1, D3
00001D8A  C67C 0007               1462          AND         #seven, D3
00001D8E                          1463          
00001D8E  4EB9 00002806           1464          JSR         printEA
00001D94                          1465          
00001D94  43F9 000035F0           1466          LEA         comma, A1           ; create comma
00001D9A  103C 000E               1467          MOVE.B      #14, D0             ; command for trap call to display message
00001D9E  4E4F                    1468          TRAP        #15                 ; trap call
00001DA0                          1469  
00001DA0  4242                    1470          CLR         D2
00001DA2  4243                    1471          CLR         D3
00001DA4  143C 0001               1472          MOVE.B      #one, D2
00001DA8  3601                    1473          MOVE.W      D1, D3
00001DAA  E043                    1474          ASR         #eight, D3
00001DAC  E243                    1475          ASR         #one, D3
00001DAE  C67C 0007               1476          AND         #seven, D3
00001DB2                          1477  
00001DB2  4EB9 00002806           1478          JSR         printEA
00001DB8                          1479          
00001DB8  43F9 000035E5           1480          LEA         newLine, A1           ; create new line
00001DBE  103C 000E               1481          MOVE.B      #14, D0             ; command for trap call to display message
00001DC2  4E4F                    1482          TRAP        #15                 ; trap call
00001DC4                          1483          
00001DC4  6000 F27A               1484          BRA         LOOP
00001DC8                          1485          
00001DC8  43F9 00003670           1486  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001DCE  103C 000E               1487          MOVE.B      #14, D0             ; command for trap call to display message
00001DD2  4E4F                    1488          TRAP        #15                 ; trap call
00001DD4                          1489          
00001DD4  43F9 00003686           1490          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001DDA  103C 000E               1491          MOVE.B      #14, D0             ; command for trap call to display message
00001DDE  4E4F                    1492          TRAP        #15                 ; trap call
00001DE0                          1493          
00001DE0  43F9 000035E9           1494          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001DE6  103C 000E               1495          MOVE.B      #14, D0             ; command for trap call to display message
00001DEA  4E4F                    1496          TRAP        #15                 ; trap call
00001DEC                          1497          
00001DEC  4242                    1498          CLR         D2
00001DEE  4243                    1499          CLR         D3
00001DF0  1401                    1500          MOVE.B      D1,D2
00001DF2  1601                    1501          MOVE.B      D1,D3
00001DF4                          1502          
00001DF4  E602                    1503          ASR.B       #three, D2
00001DF6  C47C 0007               1504          AND         #seven, D2
00001DFA  C67C 0007               1505          AND         #seven, D3        
00001DFE                          1506          
00001DFE  4EB9 00002806           1507          JSR         printEA
00001E04                          1508          
00001E04  43F9 000035E5           1509          LEA         newLine, A1           ; Display space
00001E0A  103C 000E               1510          MOVE.B      #14, D0             ; command for trap call to display message
00001E0E  4E4F                    1511          TRAP        #15                 ; trap call
00001E10                          1512          
00001E10  6000 F22E               1513          BRA         LOOP
00001E14                          1514  
00001E14  43F9 0000366C           1515  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001E1A  103C 000E               1516          MOVE.B      #14, D0             ; command for trap call to display message
00001E1E  4E4F                    1517          TRAP        #15                 ; trap call
00001E20                          1518          
00001E20  43F9 00003686           1519          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001E26  103C 000E               1520          MOVE.B      #14, D0             ; command for trap call to display message
00001E2A  4E4F                    1521          TRAP        #15                 ; trap call
00001E2C                          1522          
00001E2C  43F9 000035E9           1523          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001E32  103C 000E               1524          MOVE.B      #14, D0             ; command for trap call to display message
00001E36  4E4F                    1525          TRAP        #15                 ; trap call
00001E38                          1526          
00001E38  4242                    1527          CLR         D2
00001E3A  4243                    1528          CLR         D3
00001E3C  1401                    1529          MOVE.B      D1,D2
00001E3E  1601                    1530          MOVE.B      D1,D3
00001E40                          1531          
00001E40  E602                    1532          ASR.B       #three, D2
00001E42  C47C 0007               1533          AND         #seven, D2
00001E46  C67C 0007               1534          AND         #seven, D3        
00001E4A                          1535          
00001E4A  4EB9 00002806           1536          JSR         printEA
00001E50                          1537          
00001E50  43F9 000035E5           1538          LEA         newLine, A1           ; Display space
00001E56  103C 000E               1539          MOVE.B      #14, D0             ; command for trap call to display message
00001E5A  4E4F                    1540          TRAP        #15                 ; trap call
00001E5C                          1541          
00001E5C  6000 F1E2               1542          BRA         LOOP
00001E60                          1543  
00001E60  43F9 00003668           1544  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00001E66  103C 000E               1545          MOVE.B      #14, D0             ; command for trap call to display message
00001E6A  4E4F                    1546          TRAP        #15                 ; trap call
00001E6C                          1547          
00001E6C  43F9 00003686           1548          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001E72  103C 000E               1549          MOVE.B      #14, D0             ; command for trap call to display message
00001E76  4E4F                    1550          TRAP        #15                 ; trap call
00001E78                          1551          
00001E78  43F9 000035E9           1552          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001E7E  103C 000E               1553          MOVE.B      #14, D0             ; command for trap call to display message
00001E82  4E4F                    1554          TRAP        #15                 ; trap call
00001E84                          1555          
00001E84  4242                    1556          CLR         D2
00001E86  4243                    1557          CLR         D3
00001E88  1401                    1558          MOVE.B      D1,D2
00001E8A  1601                    1559          MOVE.B      D1,D3
00001E8C                          1560          
00001E8C  E602                    1561          ASR.B       #three, D2
00001E8E  C47C 0007               1562          AND         #seven, D2
00001E92  C67C 0007               1563          AND         #seven, D3        
00001E96                          1564          
00001E96  4EB9 00002806           1565          JSR         printEA
00001E9C                          1566          
00001E9C  43F9 000035E5           1567          LEA         newLine, A1           ; Display space
00001EA2  103C 000E               1568          MOVE.B      #14, D0             ; command for trap call to display message
00001EA6  4E4F                    1569          TRAP        #15                 ; trap call
00001EA8                          1570          
00001EA8  6000 F196               1571          BRA         LOOP
00001EAC                          1572  
00001EAC  43F9 00003664           1573  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001EB2  103C 000E               1574          MOVE.B      #14, D0             ; command for trap call to display message
00001EB6  4E4F                    1575          TRAP        #15                 ; trap call
00001EB8                          1576          
00001EB8  43F9 00003686           1577          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001EBE  103C 000E               1578          MOVE.B      #14, D0             ; command for trap call to display message
00001EC2  4E4F                    1579          TRAP        #15                 ; trap call
00001EC4                          1580          
00001EC4  43F9 000035E9           1581          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001ECA  103C 000E               1582          MOVE.B      #14, D0             ; command for trap call to display message
00001ECE  4E4F                    1583          TRAP        #15                 ; trap call
00001ED0                          1584          
00001ED0  4242                    1585          CLR         D2
00001ED2  4243                    1586          CLR         D3
00001ED4  1401                    1587          MOVE.B      D1,D2
00001ED6  1601                    1588          MOVE.B      D1,D3
00001ED8                          1589          
00001ED8  E602                    1590          ASR.B       #three, D2
00001EDA  C47C 0007               1591          AND         #seven, D2
00001EDE  C67C 0007               1592          AND         #seven, D3        
00001EE2                          1593          
00001EE2  4EB9 00002806           1594          JSR         printEA
00001EE8                          1595          
00001EE8  43F9 000035E5           1596          LEA         newLine, A1           ; Display space
00001EEE  103C 000E               1597          MOVE.B      #14, D0             ; command for trap call to display message
00001EF2  4E4F                    1598          TRAP        #15                 ; trap call
00001EF4                          1599          
00001EF4  6000 F14A               1600          BRA         LOOP
00001EF8                          1601  
00001EF8  43F9 00003678           1602  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001EFE  103C 000E               1603          MOVE.B      #14, D0             ; command for trap call to display message
00001F02  4E4F                    1604          TRAP        #15                 ; trap call
00001F04                          1605          
00001F04  43F9 00003686           1606          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001F0A  103C 000E               1607          MOVE.B      #14, D0             ; command for trap call to display message
00001F0E  4E4F                    1608          TRAP        #15                 ; trap call
00001F10                          1609          
00001F10  43F9 000035E9           1610          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001F16  103C 000E               1611          MOVE.B      #14, D0             ; command for trap call to display message
00001F1A  4E4F                    1612          TRAP        #15                 ; trap call
00001F1C                          1613          
00001F1C  4242                    1614          CLR         D2
00001F1E  4243                    1615          CLR         D3
00001F20  1401                    1616          MOVE.B      D1,D2
00001F22  1601                    1617          MOVE.B      D1,D3
00001F24                          1618          
00001F24  E602                    1619          ASR.B       #three, D2
00001F26  C47C 0007               1620          AND         #seven, D2
00001F2A  C67C 0007               1621          AND         #seven, D3        
00001F2E                          1622          
00001F2E  4EB9 00002806           1623          JSR         printEA
00001F34                          1624          
00001F34  43F9 000035E5           1625          LEA         newLine, A1           ; Display space
00001F3A  103C 000E               1626          MOVE.B      #14, D0             ; command for trap call to display message
00001F3E  4E4F                    1627          TRAP        #15                 ; trap call
00001F40                          1628          
00001F40  6000 F0FE               1629          BRA         LOOP
00001F44                          1630  
00001F44  43F9 00003674           1631  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001F4A  103C 000E               1632          MOVE.B      #14, D0             ; command for trap call to display message
00001F4E  4E4F                    1633          TRAP        #15                 ; trap call
00001F50                          1634          
00001F50  43F9 00003686           1635          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001F56  103C 000E               1636          MOVE.B      #14, D0             ; command for trap call to display message
00001F5A  4E4F                    1637          TRAP        #15                 ; trap call
00001F5C                          1638          
00001F5C  43F9 000035E9           1639          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001F62  103C 000E               1640          MOVE.B      #14, D0             ; command for trap call to display message
00001F66  4E4F                    1641          TRAP        #15                 ; trap call
00001F68                          1642          
00001F68  4242                    1643          CLR         D2
00001F6A  4243                    1644          CLR         D3
00001F6C  1401                    1645          MOVE.B      D1,D2
00001F6E  1601                    1646          MOVE.B      D1,D3
00001F70                          1647          
00001F70  E602                    1648          ASR.B       #three, D2
00001F72  C47C 0007               1649          AND         #seven, D2
00001F76  C67C 0007               1650          AND         #seven, D3        
00001F7A                          1651          
00001F7A  4EB9 00002806           1652          JSR         printEA
00001F80                          1653          
00001F80  43F9 000035E5           1654          LEA         newLine, A1           ; Display space
00001F86  103C 000E               1655          MOVE.B      #14, D0             ; command for trap call to display message
00001F8A  4E4F                    1656          TRAP        #15                 ; trap call
00001F8C                          1657          
00001F8C  6000 F0B2               1658          BRA         LOOP
00001F90                          1659          
00001F90  4242                    1660  memSB   CLR         D2
00001F92  1401                    1661          MOVE.B      D1,D2
00001F94  E642                    1662          ASR         #three, D2
00001F96                          1663          
00001F96  C47C 0007               1664          AND         #$07, D2
00001F9A                          1665          
00001F9A  B43C 0000               1666          CMP.B       #zero, D2
00001F9E  6700 002E               1667          BEQ         opASBI
00001FA2  B43C 0004               1668          CMP.B       #four, D2
00001FA6  6700 0088               1669          BEQ         opASBR
00001FAA  B43C 0001               1670          CMP.B       #one, D2
00001FAE  6700 00E2               1671          BEQ         opLSBI
00001FB2  B43C 0005               1672          CMP.B       #five, D2
00001FB6  6700 013C               1673          BEQ         opLSBR
00001FBA  B43C 0003               1674          CMP.B       #three, D2
00001FBE  6700 0196               1675          BEQ         opROBI
00001FC2  B43C 0007               1676          CMP.B       #seven, D2
00001FC6  6700 01F0               1677          BEQ         opROBR
00001FCA  6000 15B4               1678          BRA         printInvalid
00001FCE                          1679          
00001FCE  4242                    1680  opASBI  CLR         D2
00001FD0  3401                    1681          MOVE.W      D1, D2
00001FD2  E042                    1682          ASR         #eight, D2
00001FD4  C47C 0001               1683          AND         #$01, D2
00001FD8                          1684      
00001FD8  B43C 0000               1685          CMP.B       #zero, D2
00001FDC  6700 000E               1686          BEQ         opASRBI
00001FE0  B43C 0001               1687          CMP.B       #one, D2
00001FE4  6700 0028               1688          BEQ         opASLBI
00001FE8  6000 1596               1689          BRA         printInvalid
00001FEC                          1690          
00001FEC  43F9 0000366C           1691  opASRBI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001FF2  103C 000E               1692          MOVE.B      #14, D0             ; command for trap call to display message
00001FF6  4E4F                    1693          TRAP        #15                 ; trap call
00001FF8                          1694  
00001FF8  43F9 00003683           1695          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001FFE  103C 000E               1696          MOVE.B      #14, D0             ; command for trap call to display message
00002002  4E4F                    1697          TRAP        #15                 ; trap call
00002004                          1698          
00002004  4EB9 0000272E           1699          JSR         PrntImm
0000200A                          1700          
0000200A  6000 F034               1701          BRA         LOOP
0000200E                          1702  
0000200E  43F9 00003670           1703  opASLBI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002014  103C 000E               1704          MOVE.B      #14, D0             ; command for trap call to display message
00002018  4E4F                    1705          TRAP        #15                 ; trap call
0000201A                          1706  
0000201A  43F9 00003683           1707          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002020  103C 000E               1708          MOVE.B      #14, D0             ; command for trap call to display message
00002024  4E4F                    1709          TRAP        #15                 ; trap call
00002026                          1710          
00002026  4EB9 0000272E           1711          JSR         PrntImm
0000202C                          1712          
0000202C  6000 F012               1713          BRA         LOOP
00002030                          1714  
00002030  4242                    1715  opASBR  CLR         D2
00002032  3401                    1716          MOVE.W      D1, D2
00002034  E042                    1717          ASR         #eight, D2
00002036  C47C 0001               1718          AND         #$01, D2
0000203A                          1719      
0000203A  B43C 0000               1720          CMP.B       #zero, D2
0000203E  6700 000E               1721          BEQ         opASRBR
00002042  B43C 0001               1722          CMP.B       #one, D2
00002046  6700 0028               1723          BEQ         opASLBR
0000204A  6000 1534               1724          BRA         printInvalid 
0000204E                          1725          
0000204E  43F9 0000366C           1726  opASRBR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002054  103C 000E               1727          MOVE.B      #14, D0             ; command for trap call to display message
00002058  4E4F                    1728          TRAP        #15                 ; trap call
0000205A                          1729  
0000205A  43F9 00003683           1730          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002060  103C 000E               1731          MOVE.B      #14, D0             ; command for trap call to display message
00002064  4E4F                    1732          TRAP        #15                 ; trap call
00002066                          1733          
00002066  4EB9 0000278A           1734          JSR         PrntReg
0000206C                          1735          
0000206C  6000 EFD2               1736          BRA         LOOP
00002070                          1737  
00002070  43F9 00003670           1738  opASLBR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002076  103C 000E               1739          MOVE.B      #14, D0             ; command for trap call to display message
0000207A  4E4F                    1740          TRAP        #15                 ; trap call
0000207C                          1741  
0000207C  43F9 00003683           1742          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002082  103C 000E               1743          MOVE.B      #14, D0             ; command for trap call to display message
00002086  4E4F                    1744          TRAP        #15                 ; trap call
00002088                          1745          
00002088  4EB9 0000278A           1746          JSR         PrntReg
0000208E                          1747          
0000208E  6000 EFB0               1748          BRA         LOOP
00002092                          1749  
00002092  4242                    1750  opLSBI  CLR         D2
00002094  3401                    1751          MOVE.W      D1, D2
00002096  E042                    1752          ASR         #eight, D2
00002098  C47C 0001               1753          AND         #$01, D2
0000209C                          1754      
0000209C  B43C 0000               1755          CMP.B       #zero, D2
000020A0  6700 000E               1756          BEQ         opLSRBI
000020A4  B43C 0001               1757          CMP.B       #one, D2
000020A8  6700 0028               1758          BEQ         opLSLBI
000020AC  6000 14D2               1759          BRA         printInvalid 
000020B0                          1760          
000020B0  43F9 00003664           1761  opLSRBI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000020B6  103C 000E               1762          MOVE.B      #14, D0             ; command for trap call to display message
000020BA  4E4F                    1763          TRAP        #15                 ; trap call
000020BC                          1764  
000020BC  43F9 00003683           1765          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000020C2  103C 000E               1766          MOVE.B      #14, D0             ; command for trap call to display message
000020C6  4E4F                    1767          TRAP        #15                 ; trap call
000020C8                          1768          
000020C8  4EB9 0000272E           1769          JSR         PrntImm
000020CE                          1770          
000020CE  6000 EF70               1771          BRA         LOOP
000020D2                          1772  
000020D2                          1773  
000020D2  43F9 00003668           1774  opLSLBI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000020D8  103C 000E               1775          MOVE.B      #14, D0             ; command for trap call to display message
000020DC  4E4F                    1776          TRAP        #15                 ; trap call
000020DE                          1777  
000020DE  43F9 00003683           1778          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000020E4  103C 000E               1779          MOVE.B      #14, D0             ; command for trap call to display message
000020E8  4E4F                    1780          TRAP        #15                 ; trap call
000020EA                          1781          
000020EA  4EB9 0000272E           1782          JSR         PrntImm
000020F0                          1783          
000020F0  6000 EF4E               1784          BRA         LOOP
000020F4                          1785  
000020F4                          1786  
000020F4  4242                    1787  opLSBR  CLR         D2
000020F6  3401                    1788          MOVE.W      D1, D2
000020F8  E042                    1789          ASR         #eight, D2
000020FA  C47C 0001               1790          AND         #$01, D2
000020FE                          1791      
000020FE  B43C 0000               1792          CMP.B       #zero, D2
00002102  6700 000E               1793          BEQ         opLSRBR
00002106  B43C 0001               1794          CMP.B       #one, D2
0000210A  6700 0028               1795          BEQ         opLSLBR
0000210E  6000 1470               1796          BRA         printInvalid 
00002112                          1797          
00002112  43F9 00003664           1798  opLSRBR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002118  103C 000E               1799          MOVE.B      #14, D0             ; command for trap call to display message
0000211C  4E4F                    1800          TRAP        #15                 ; trap call
0000211E                          1801  
0000211E  43F9 00003683           1802          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002124  103C 000E               1803          MOVE.B      #14, D0             ; command for trap call to display message
00002128  4E4F                    1804          TRAP        #15                 ; trap call
0000212A                          1805          
0000212A  4EB9 0000278A           1806          JSR         PrntReg
00002130                          1807          
00002130  6000 EF0E               1808          BRA         LOOP
00002134                          1809          
00002134  43F9 00003668           1810  opLSLBR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000213A  103C 000E               1811          MOVE.B      #14, D0             ; command for trap call to display message
0000213E  4E4F                    1812          TRAP        #15                 ; trap call
00002140                          1813  
00002140  43F9 00003683           1814          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002146  103C 000E               1815          MOVE.B      #14, D0             ; command for trap call to display message
0000214A  4E4F                    1816          TRAP        #15                 ; trap call
0000214C                          1817          
0000214C  4EB9 0000278A           1818          JSR         PrntReg
00002152                          1819          
00002152  6000 EEEC               1820          BRA         LOOP
00002156                          1821  
00002156                          1822  
00002156                          1823  
00002156  4242                    1824  opROBI  CLR         D2
00002158  3401                    1825          MOVE.W      D1, D2
0000215A  E042                    1826          ASR         #eight, D2
0000215C  C47C 0001               1827          AND         #$01, D2
00002160                          1828      
00002160  B43C 0000               1829          CMP.B       #zero, D2
00002164  6700 000E               1830          BEQ         opRORBI
00002168  B43C 0001               1831          CMP.B       #one, D2
0000216C  6700 0028               1832          BEQ         opROLBI
00002170  6000 140E               1833          BRA         printInvalid 
00002174                          1834          
00002174  43F9 00003674           1835  opRORBI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000217A  103C 000E               1836          MOVE.B      #14, D0             ; command for trap call to display message
0000217E  4E4F                    1837          TRAP        #15                 ; trap call
00002180                          1838  
00002180  43F9 00003683           1839          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002186  103C 000E               1840          MOVE.B      #14, D0             ; command for trap call to display message
0000218A  4E4F                    1841          TRAP        #15                 ; trap call
0000218C                          1842          
0000218C  4EB9 0000272E           1843          JSR         PrntImm
00002192                          1844          
00002192  6000 EEAC               1845          BRA         LOOP
00002196                          1846  
00002196  43F9 00003678           1847  opROLBI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000219C  103C 000E               1848          MOVE.B      #14, D0             ; command for trap call to display message
000021A0  4E4F                    1849          TRAP        #15                 ; trap call
000021A2                          1850  
000021A2  43F9 00003683           1851          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000021A8  103C 000E               1852          MOVE.B      #14, D0             ; command for trap call to display message
000021AC  4E4F                    1853          TRAP        #15                 ; trap call
000021AE                          1854          
000021AE  4EB9 0000272E           1855          JSR         PrntImm
000021B4                          1856          
000021B4  6000 EE8A               1857          BRA         LOOP
000021B8                          1858  
000021B8  4242                    1859  opROBR  CLR         D2
000021BA  3401                    1860          MOVE.W      D1, D2
000021BC  E042                    1861          ASR         #eight, D2
000021BE  C47C 0001               1862          AND         #$01, D2
000021C2                          1863      
000021C2  B43C 0000               1864          CMP.B       #zero, D2
000021C6  6700 000E               1865          BEQ         opRORBR
000021CA  B43C 0001               1866          CMP.B       #one, D2
000021CE  6700 0028               1867          BEQ         opROLBR
000021D2  6000 13AC               1868          BRA         printInvalid     
000021D6                          1869          
000021D6  43F9 00003674           1870  opRORBR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000021DC  103C 000E               1871          MOVE.B      #14, D0             ; command for trap call to display message
000021E0  4E4F                    1872          TRAP        #15                 ; trap call
000021E2                          1873  
000021E2  43F9 00003683           1874          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000021E8  103C 000E               1875          MOVE.B      #14, D0             ; command for trap call to display message
000021EC  4E4F                    1876          TRAP        #15                 ; trap call
000021EE                          1877          
000021EE  4EB9 0000278A           1878          JSR         PrntReg
000021F4                          1879          
000021F4  6000 EE4A               1880          BRA         LOOP
000021F8                          1881  
000021F8  43F9 00003678           1882  opROLBR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000021FE  103C 000E               1883          MOVE.B      #14, D0             ; command for trap call to display message
00002202  4E4F                    1884          TRAP        #15                 ; trap call
00002204                          1885  
00002204  43F9 00003683           1886          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000220A  103C 000E               1887          MOVE.B      #14, D0             ; command for trap call to display message
0000220E  4E4F                    1888          TRAP        #15                 ; trap call
00002210                          1889          
00002210  4EB9 0000278A           1890          JSR         PrntReg
00002216                          1891          
00002216  6000 EE28               1892          BRA         LOOP       
0000221A                          1893  
0000221A  4242                    1894  memSW   CLR         D2
0000221C  1401                    1895          MOVE.B      D1,D2
0000221E  E642                    1896          ASR         #three, D2
00002220                          1897          
00002220  C47C 0007               1898          AND         #$07, D2
00002224                          1899          
00002224  B43C 0000               1900          CMP.B       #zero, D2
00002228  6700 002E               1901          BEQ         opASWI
0000222C  B43C 0004               1902          CMP.B       #four, D2
00002230  6700 0088               1903          BEQ         opASWR
00002234  B43C 0001               1904          CMP.B       #one, D2
00002238  6700 00E2               1905          BEQ         opLSWI
0000223C  B43C 0005               1906          CMP.B       #five, D2
00002240  6700 013C               1907          BEQ         opLSWR
00002244  B43C 0003               1908          CMP.B       #three, D2
00002248  6700 0196               1909          BEQ         opROWI
0000224C  B43C 0007               1910          CMP.B       #seven, D2
00002250  6700 01F0               1911          BEQ         opROWR
00002254  6000 132A               1912          BRA         printInvalid
00002258                          1913          
00002258  4242                    1914  opASWI  CLR         D2
0000225A  3401                    1915          MOVE.W      D1, D2
0000225C  E042                    1916          ASR         #eight, D2
0000225E  C47C 0001               1917          AND         #$01, D2
00002262                          1918      
00002262  B43C 0000               1919          CMP.B       #zero, D2
00002266  6700 000E               1920          BEQ         opASRWI
0000226A  B43C 0001               1921          CMP.B       #one, D2
0000226E  6700 0028               1922          BEQ         opASLWI
00002272  6000 130C               1923          BRA         printInvalid
00002276                          1924          
00002276  43F9 0000366C           1925  opASRWI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000227C  103C 000E               1926          MOVE.B      #14, D0             ; command for trap call to display message
00002280  4E4F                    1927          TRAP        #15                 ; trap call
00002282                          1928  
00002282  43F9 00003686           1929          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002288  103C 000E               1930          MOVE.B      #14, D0             ; command for trap call to display message
0000228C  4E4F                    1931          TRAP        #15                 ; trap call
0000228E                          1932          
0000228E  4EB9 0000272E           1933          JSR         PrntImm
00002294                          1934          
00002294  6000 EDAA               1935          BRA         LOOP
00002298                          1936  
00002298  43F9 00003670           1937  opASLWI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000229E  103C 000E               1938          MOVE.B      #14, D0             ; command for trap call to display message
000022A2  4E4F                    1939          TRAP        #15                 ; trap call
000022A4                          1940  
000022A4  43F9 00003686           1941          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000022AA  103C 000E               1942          MOVE.B      #14, D0             ; command for trap call to display message
000022AE  4E4F                    1943          TRAP        #15                 ; trap call
000022B0                          1944          
000022B0  4EB9 0000272E           1945          JSR         PrntImm
000022B6                          1946          
000022B6  6000 ED88               1947          BRA         LOOP
000022BA                          1948  
000022BA  4242                    1949  opASWR  CLR         D2
000022BC  3401                    1950          MOVE.W      D1, D2
000022BE  E042                    1951          ASR         #eight, D2
000022C0  C47C 0001               1952          AND         #$01, D2
000022C4                          1953      
000022C4  B43C 0000               1954          CMP.B       #zero, D2
000022C8  6700 000E               1955          BEQ         opASRWR
000022CC  B43C 0001               1956          CMP.B       #one, D2
000022D0  6700 0028               1957          BEQ         opASLWR
000022D4  6000 12AA               1958          BRA         printInvalid 
000022D8                          1959          
000022D8  43F9 0000366C           1960  opASRWR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000022DE  103C 000E               1961          MOVE.B      #14, D0             ; command for trap call to display message
000022E2  4E4F                    1962          TRAP        #15                 ; trap call
000022E4                          1963  
000022E4  43F9 00003686           1964          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000022EA  103C 000E               1965          MOVE.B      #14, D0             ; command for trap call to display message
000022EE  4E4F                    1966          TRAP        #15                 ; trap call
000022F0                          1967          
000022F0  4EB9 0000278A           1968          JSR         PrntReg
000022F6                          1969          
000022F6  6000 ED48               1970          BRA         LOOP
000022FA                          1971  
000022FA  43F9 00003670           1972  opASLWR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002300  103C 000E               1973          MOVE.B      #14, D0             ; command for trap call to display message
00002304  4E4F                    1974          TRAP        #15                 ; trap call
00002306                          1975  
00002306  43F9 00003686           1976          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000230C  103C 000E               1977          MOVE.B      #14, D0             ; command for trap call to display message
00002310  4E4F                    1978          TRAP        #15                 ; trap call
00002312                          1979          
00002312  4EB9 0000278A           1980          JSR         PrntReg
00002318                          1981          
00002318  6000 ED26               1982          BRA         LOOP
0000231C                          1983  
0000231C  4242                    1984  opLSWI  CLR         D2
0000231E  3401                    1985          MOVE.W      D1, D2
00002320  E042                    1986          ASR         #eight, D2
00002322  C47C 0001               1987          AND         #$01, D2
00002326                          1988      
00002326  B43C 0000               1989          CMP.B       #zero, D2
0000232A  6700 000E               1990          BEQ         opLSRWI
0000232E  B43C 0001               1991          CMP.B       #one, D2
00002332  6700 0028               1992          BEQ         opLSLWI
00002336  6000 1248               1993          BRA         printInvalid 
0000233A                          1994          
0000233A  43F9 00003664           1995  opLSRWI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002340  103C 000E               1996          MOVE.B      #14, D0             ; command for trap call to display message
00002344  4E4F                    1997          TRAP        #15                 ; trap call
00002346                          1998  
00002346  43F9 00003686           1999          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000234C  103C 000E               2000          MOVE.B      #14, D0             ; command for trap call to display message
00002350  4E4F                    2001          TRAP        #15                 ; trap call
00002352                          2002          
00002352  4EB9 0000272E           2003          JSR         PrntImm
00002358                          2004          
00002358  6000 ECE6               2005          BRA         LOOP
0000235C                          2006  
0000235C                          2007  
0000235C  43F9 00003668           2008  opLSLWI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002362  103C 000E               2009          MOVE.B      #14, D0             ; command for trap call to display message
00002366  4E4F                    2010          TRAP        #15                 ; trap call
00002368                          2011  
00002368  43F9 00003686           2012          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000236E  103C 000E               2013          MOVE.B      #14, D0             ; command for trap call to display message
00002372  4E4F                    2014          TRAP        #15                 ; trap call
00002374                          2015          
00002374  4EB9 0000272E           2016          JSR         PrntImm
0000237A                          2017          
0000237A  6000 ECC4               2018          BRA         LOOP
0000237E                          2019  
0000237E                          2020  
0000237E  4242                    2021  opLSWR  CLR         D2
00002380  3401                    2022          MOVE.W      D1, D2
00002382  E042                    2023          ASR         #eight, D2
00002384  C47C 0001               2024          AND         #$01, D2
00002388                          2025      
00002388  B43C 0000               2026          CMP.B       #zero, D2
0000238C  6700 000E               2027          BEQ         opLSRWR
00002390  B43C 0001               2028          CMP.B       #one, D2
00002394  6700 0028               2029          BEQ         opLSLWR
00002398  6000 11E6               2030          BRA         printInvalid 
0000239C                          2031          
0000239C  43F9 00003664           2032  opLSRWR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000023A2  103C 000E               2033          MOVE.B      #14, D0             ; command for trap call to display message
000023A6  4E4F                    2034          TRAP        #15                 ; trap call
000023A8                          2035  
000023A8  43F9 00003686           2036          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000023AE  103C 000E               2037          MOVE.B      #14, D0             ; command for trap call to display message
000023B2  4E4F                    2038          TRAP        #15                 ; trap call
000023B4                          2039          
000023B4  4EB9 0000278A           2040          JSR         PrntReg
000023BA                          2041          
000023BA  6000 EC84               2042          BRA         LOOP
000023BE                          2043          
000023BE  43F9 00003668           2044  opLSLWR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000023C4  103C 000E               2045          MOVE.B      #14, D0             ; command for trap call to display message
000023C8  4E4F                    2046          TRAP        #15                 ; trap call
000023CA                          2047  
000023CA  43F9 00003686           2048          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000023D0  103C 000E               2049          MOVE.B      #14, D0             ; command for trap call to display message
000023D4  4E4F                    2050          TRAP        #15                 ; trap call
000023D6                          2051          
000023D6  4EB9 0000278A           2052          JSR         PrntReg
000023DC                          2053          
000023DC  6000 EC62               2054          BRA         LOOP
000023E0                          2055  
000023E0                          2056  
000023E0                          2057  
000023E0  4242                    2058  opROWI  CLR         D2
000023E2  3401                    2059          MOVE.W      D1, D2
000023E4  E042                    2060          ASR         #eight, D2
000023E6  C47C 0001               2061          AND         #$01, D2
000023EA                          2062      
000023EA  B43C 0000               2063          CMP.B       #zero, D2
000023EE  6700 000E               2064          BEQ         opRORWI
000023F2  B43C 0001               2065          CMP.B       #one, D2
000023F6  6700 0028               2066          BEQ         opROLWI
000023FA  6000 1184               2067          BRA         printInvalid 
000023FE                          2068          
000023FE  43F9 00003674           2069  opRORWI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002404  103C 000E               2070          MOVE.B      #14, D0             ; command for trap call to display message
00002408  4E4F                    2071          TRAP        #15                 ; trap call
0000240A                          2072  
0000240A  43F9 00003686           2073          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002410  103C 000E               2074          MOVE.B      #14, D0             ; command for trap call to display message
00002414  4E4F                    2075          TRAP        #15                 ; trap call
00002416                          2076          
00002416  4EB9 0000272E           2077          JSR         PrntImm
0000241C                          2078          
0000241C  6000 EC22               2079          BRA         LOOP
00002420                          2080  
00002420  43F9 00003678           2081  opROLWI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002426  103C 000E               2082          MOVE.B      #14, D0             ; command for trap call to display message
0000242A  4E4F                    2083          TRAP        #15                 ; trap call
0000242C                          2084  
0000242C  43F9 00003686           2085          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002432  103C 000E               2086          MOVE.B      #14, D0             ; command for trap call to display message
00002436  4E4F                    2087          TRAP        #15                 ; trap call
00002438                          2088          
00002438  4EB9 0000272E           2089          JSR         PrntImm
0000243E                          2090          
0000243E  6000 EC00               2091          BRA         LOOP
00002442                          2092  
00002442  4242                    2093  opROWR  CLR         D2
00002444  3401                    2094          MOVE.W      D1, D2
00002446  E042                    2095          ASR         #eight, D2
00002448  C47C 0001               2096          AND         #$01, D2
0000244C                          2097      
0000244C  B43C 0000               2098          CMP.B       #zero, D2
00002450  6700 000E               2099          BEQ         opRORWR
00002454  B43C 0001               2100          CMP.B       #one, D2
00002458  6700 0028               2101          BEQ         opROLWR
0000245C  6000 1122               2102          BRA         printInvalid     
00002460                          2103          
00002460  43F9 00003674           2104  opRORWR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002466  103C 000E               2105          MOVE.B      #14, D0             ; command for trap call to display message
0000246A  4E4F                    2106          TRAP        #15                 ; trap call
0000246C                          2107  
0000246C  43F9 00003686           2108          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002472  103C 000E               2109          MOVE.B      #14, D0             ; command for trap call to display message
00002476  4E4F                    2110          TRAP        #15                 ; trap call
00002478                          2111          
00002478  4EB9 0000278A           2112          JSR         PrntReg
0000247E                          2113          
0000247E  6000 EBC0               2114          BRA         LOOP
00002482                          2115  
00002482  43F9 00003678           2116  opROLWR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002488  103C 000E               2117          MOVE.B      #14, D0             ; command for trap call to display message
0000248C  4E4F                    2118          TRAP        #15                 ; trap call
0000248E                          2119  
0000248E  43F9 00003686           2120          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002494  103C 000E               2121          MOVE.B      #14, D0             ; command for trap call to display message
00002498  4E4F                    2122          TRAP        #15                 ; trap call
0000249A                          2123          
0000249A  4EB9 0000278A           2124          JSR         PrntReg
000024A0                          2125          
000024A0  6000 EB9E               2126          BRA         LOOP
000024A4                          2127  
000024A4  4242                    2128  memSL   CLR         D2
000024A6  1401                    2129          MOVE.B      D1,D2
000024A8  E642                    2130          ASR         #three, D2
000024AA                          2131          
000024AA  C47C 0007               2132          AND         #$07, D2
000024AE                          2133          
000024AE  B43C 0000               2134          CMP.B       #zero, D2
000024B2  6700 002E               2135          BEQ         opASLI
000024B6  B43C 0004               2136          CMP.B       #four, D2
000024BA  6700 0088               2137          BEQ         opASLR
000024BE  B43C 0001               2138          CMP.B       #one, D2
000024C2  6700 00E2               2139          BEQ         opLSLI
000024C6  B43C 0005               2140          CMP.B       #five, D2
000024CA  6700 013C               2141          BEQ         opLSLR
000024CE  B43C 0003               2142          CMP.B       #three, D2
000024D2  6700 0196               2143          BEQ         opROLI
000024D6  B43C 0007               2144          CMP.B       #seven, D2
000024DA  6700 01F0               2145          BEQ         opROLR
000024DE  6000 10A0               2146          BRA         printInvalid
000024E2                          2147          
000024E2  4242                    2148  opASLI  CLR         D2
000024E4  3401                    2149          MOVE.W      D1, D2
000024E6  E042                    2150          ASR         #eight, D2
000024E8  C47C 0001               2151          AND         #$01, D2
000024EC                          2152      
000024EC  B43C 0000               2153          CMP.B       #zero, D2
000024F0  6700 000E               2154          BEQ         opASRLI
000024F4  B43C 0001               2155          CMP.B       #one, D2
000024F8  6700 0028               2156          BEQ         opASLLI
000024FC  6000 1082               2157          BRA         printInvalid
00002500                          2158          
00002500  43F9 0000366C           2159  opASRLI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002506  103C 000E               2160          MOVE.B      #14, D0             ; command for trap call to display message
0000250A  4E4F                    2161          TRAP        #15                 ; trap call
0000250C                          2162  
0000250C  43F9 00003689           2163          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002512  103C 000E               2164          MOVE.B      #14, D0             ; command for trap call to display message
00002516  4E4F                    2165          TRAP        #15                 ; trap call
00002518                          2166          
00002518  4EB9 0000272E           2167          JSR         PrntImm
0000251E                          2168          
0000251E  6000 EB20               2169          BRA         LOOP
00002522                          2170  
00002522  43F9 00003670           2171  opASLLI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002528  103C 000E               2172          MOVE.B      #14, D0             ; command for trap call to display message
0000252C  4E4F                    2173          TRAP        #15                 ; trap call
0000252E                          2174  
0000252E  43F9 00003689           2175          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002534  103C 000E               2176          MOVE.B      #14, D0             ; command for trap call to display message
00002538  4E4F                    2177          TRAP        #15                 ; trap call
0000253A                          2178          
0000253A  4EB9 0000272E           2179          JSR         PrntImm
00002540                          2180          
00002540  6000 EAFE               2181          BRA         LOOP
00002544                          2182  
00002544  4242                    2183  opASLR  CLR         D2
00002546  3401                    2184          MOVE.W      D1, D2
00002548  E042                    2185          ASR         #eight, D2
0000254A  C47C 0001               2186          AND         #$01, D2
0000254E                          2187      
0000254E  B43C 0000               2188          CMP.B       #zero, D2
00002552  6700 000E               2189          BEQ         opASRLR
00002556  B43C 0001               2190          CMP.B       #one, D2
0000255A  6700 0028               2191          BEQ         opASLLR
0000255E  6000 1020               2192          BRA         printInvalid 
00002562                          2193          
00002562  43F9 0000366C           2194  opASRLR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002568  103C 000E               2195          MOVE.B      #14, D0             ; command for trap call to display message
0000256C  4E4F                    2196          TRAP        #15                 ; trap call
0000256E                          2197  
0000256E  43F9 00003689           2198          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002574  103C 000E               2199          MOVE.B      #14, D0             ; command for trap call to display message
00002578  4E4F                    2200          TRAP        #15                 ; trap call
0000257A                          2201          
0000257A  4EB9 0000278A           2202          JSR         PrntReg
00002580                          2203          
00002580  6000 EABE               2204          BRA         LOOP
00002584                          2205  
00002584  43F9 00003670           2206  opASLLR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000258A  103C 000E               2207          MOVE.B      #14, D0             ; command for trap call to display message
0000258E  4E4F                    2208          TRAP        #15                 ; trap call
00002590                          2209  
00002590  43F9 00003689           2210          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002596  103C 000E               2211          MOVE.B      #14, D0             ; command for trap call to display message
0000259A  4E4F                    2212          TRAP        #15                 ; trap call
0000259C                          2213          
0000259C  4EB9 0000278A           2214          JSR         PrntReg
000025A2                          2215          
000025A2  6000 EA9C               2216          BRA         LOOP
000025A6                          2217  
000025A6  4242                    2218  opLSLI  CLR         D2
000025A8  3401                    2219          MOVE.W      D1, D2
000025AA  E042                    2220          ASR         #eight, D2
000025AC  C47C 0001               2221          AND         #$01, D2
000025B0                          2222      
000025B0  B43C 0000               2223          CMP.B       #zero, D2
000025B4  6700 000E               2224          BEQ         opLSRLI
000025B8  B43C 0001               2225          CMP.B       #one, D2
000025BC  6700 0028               2226          BEQ         opLSLLI
000025C0  6000 0FBE               2227          BRA         printInvalid 
000025C4                          2228          
000025C4  43F9 00003664           2229  opLSRLI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000025CA  103C 000E               2230          MOVE.B      #14, D0             ; command for trap call to display message
000025CE  4E4F                    2231          TRAP        #15                 ; trap call
000025D0                          2232  
000025D0  43F9 00003689           2233          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
000025D6  103C 000E               2234          MOVE.B      #14, D0             ; command for trap call to display message
000025DA  4E4F                    2235          TRAP        #15                 ; trap call
000025DC                          2236          
000025DC  4EB9 0000272E           2237          JSR         PrntImm
000025E2                          2238          
000025E2  6000 EA5C               2239          BRA         LOOP
000025E6                          2240  
000025E6                          2241  
000025E6  43F9 00003668           2242  opLSLLI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000025EC  103C 000E               2243          MOVE.B      #14, D0             ; command for trap call to display message
000025F0  4E4F                    2244          TRAP        #15                 ; trap call
000025F2                          2245  
000025F2  43F9 00003689           2246          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
000025F8  103C 000E               2247          MOVE.B      #14, D0             ; command for trap call to display message
000025FC  4E4F                    2248          TRAP        #15                 ; trap call
000025FE                          2249          
000025FE  4EB9 0000272E           2250          JSR         PrntImm
00002604                          2251          
00002604  6000 EA3A               2252          BRA         LOOP
00002608                          2253  
00002608                          2254  
00002608  4242                    2255  opLSLR  CLR         D2
0000260A  3401                    2256          MOVE.W      D1, D2
0000260C  E042                    2257          ASR         #eight, D2
0000260E  C47C 0001               2258          AND         #$01, D2
00002612                          2259      
00002612  B43C 0000               2260          CMP.B       #zero, D2
00002616  6700 000E               2261          BEQ         opLSRLR
0000261A  B43C 0001               2262          CMP.B       #one, D2
0000261E  6700 0028               2263          BEQ         opLSLLR
00002622  6000 0F5C               2264          BRA         printInvalid 
00002626                          2265          
00002626  43F9 00003664           2266  opLSRLR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000262C  103C 000E               2267          MOVE.B      #14, D0             ; command for trap call to display message
00002630  4E4F                    2268          TRAP        #15                 ; trap call
00002632                          2269  
00002632  43F9 00003689           2270          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002638  103C 000E               2271          MOVE.B      #14, D0             ; command for trap call to display message
0000263C  4E4F                    2272          TRAP        #15                 ; trap call
0000263E                          2273          
0000263E  4EB9 0000278A           2274          JSR         PrntReg
00002644                          2275          
00002644  6000 E9FA               2276          BRA         LOOP
00002648                          2277          
00002648  43F9 00003668           2278  opLSLLR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000264E  103C 000E               2279          MOVE.B      #14, D0             ; command for trap call to display message
00002652  4E4F                    2280          TRAP        #15                 ; trap call
00002654                          2281  
00002654  43F9 00003689           2282          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000265A  103C 000E               2283          MOVE.B      #14, D0             ; command for trap call to display message
0000265E  4E4F                    2284          TRAP        #15                 ; trap call
00002660                          2285          
00002660  4EB9 0000278A           2286          JSR         PrntReg
00002666                          2287          
00002666  6000 E9D8               2288          BRA         LOOP
0000266A                          2289  
0000266A                          2290  
0000266A                          2291  
0000266A  4242                    2292  opROLI  CLR         D2
0000266C  3401                    2293          MOVE.W      D1, D2
0000266E  E042                    2294          ASR         #eight, D2
00002670  C47C 0001               2295          AND         #$01, D2
00002674                          2296      
00002674  B43C 0000               2297          CMP.B       #zero, D2
00002678  6700 000E               2298          BEQ         opRORLI
0000267C  B43C 0001               2299          CMP.B       #one, D2
00002680  6700 0028               2300          BEQ         opROLLI
00002684  6000 0EFA               2301          BRA         printInvalid 
00002688                          2302          
00002688  43F9 00003674           2303  opRORLI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000268E  103C 000E               2304          MOVE.B      #14, D0             ; command for trap call to display message
00002692  4E4F                    2305          TRAP        #15                 ; trap call
00002694                          2306  
00002694  43F9 00003689           2307          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000269A  103C 000E               2308          MOVE.B      #14, D0             ; command for trap call to display message
0000269E  4E4F                    2309          TRAP        #15                 ; trap call
000026A0                          2310          
000026A0  4EB9 0000272E           2311          JSR         PrntImm
000026A6                          2312          
000026A6  6000 E998               2313          BRA         LOOP
000026AA                          2314  
000026AA  43F9 00003678           2315  opROLLI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000026B0  103C 000E               2316          MOVE.B      #14, D0             ; command for trap call to display message
000026B4  4E4F                    2317          TRAP        #15                 ; trap call
000026B6                          2318  
000026B6  43F9 00003689           2319          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
000026BC  103C 000E               2320          MOVE.B      #14, D0             ; command for trap call to display message
000026C0  4E4F                    2321          TRAP        #15                 ; trap call
000026C2                          2322          
000026C2  4EB9 0000272E           2323          JSR         PrntImm
000026C8                          2324          
000026C8  6000 E976               2325          BRA         LOOP
000026CC                          2326  
000026CC  4242                    2327  opROLR  CLR         D2
000026CE  3401                    2328          MOVE.W      D1, D2
000026D0  E042                    2329          ASR         #eight, D2
000026D2  C47C 0001               2330          AND         #$01, D2
000026D6                          2331      
000026D6  B43C 0000               2332          CMP.B       #zero, D2
000026DA  6700 000E               2333          BEQ         opRORLR
000026DE  B43C 0001               2334          CMP.B       #one, D2
000026E2  6700 0028               2335          BEQ         opROLLR
000026E6  6000 0E98               2336          BRA         printInvalid     
000026EA                          2337          
000026EA  43F9 00003674           2338  opRORLR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000026F0  103C 000E               2339          MOVE.B      #14, D0             ; command for trap call to display message
000026F4  4E4F                    2340          TRAP        #15                 ; trap call
000026F6                          2341  
000026F6  43F9 00003689           2342          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
000026FC  103C 000E               2343          MOVE.B      #14, D0             ; command for trap call to display message
00002700  4E4F                    2344          TRAP        #15                 ; trap call
00002702                          2345          
00002702  4EB9 0000278A           2346          JSR         PrntReg
00002708                          2347          
00002708  6000 E936               2348          BRA         LOOP
0000270C                          2349  
0000270C  43F9 00003678           2350  opROLLR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002712  103C 000E               2351          MOVE.B      #14, D0             ; command for trap call to display message
00002716  4E4F                    2352          TRAP        #15                 ; trap call
00002718                          2353  
00002718  43F9 00003689           2354          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000271E  103C 000E               2355          MOVE.B      #14, D0             ; command for trap call to display message
00002722  4E4F                    2356          TRAP        #15                 ; trap call
00002724                          2357          
00002724  4EB9 0000278A           2358          JSR         PrntReg
0000272A                          2359          
0000272A  6000 E914               2360          BRA         LOOP
0000272E                          2361  * The following subroutine displays the immediate number to shift and the data register that is being shifted. 
0000272E                          2362  * This subroutine calls two printing immediate subroutine first, the the ea print subroutine.        
0000272E  48E7 FF7E               2363  PrntImm MOVEM.L D0-D7/A1-A6, -(SP)
00002732                          2364          
00002732  43F9 000035E9           2365          LEA         space, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002738  103C 000E               2366          MOVE.B      #14, D0             ; command for trap call to display message
0000273C  4E4F                    2367          TRAP        #15                 ; trap call
0000273E                          2368          
0000273E  43F9 000035EC           2369          LEA         hashTag, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002744  103C 000E               2370          MOVE.B      #14, D0             ; command for trap call to display message
00002748  4E4F                    2371          TRAP        #15                 ; trap call
0000274A                          2372          
0000274A  4242                    2373          CLR         D2
0000274C  3401                    2374          MOVE.W      D1, D2
0000274E  E042                    2375          ASR         #eight, D2
00002750  E242                    2376          ASR         #one, D2
00002752  C47C 0007               2377          AND         #$07, D2
00002756                          2378          
00002756  4EB9 000027DC           2379          JSR         MemShiftImm
0000275C                          2380          
0000275C  43F9 000035F0           2381          LEA         comma, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002762  103C 000E               2382          MOVE.B      #14, D0             ; command for trap call to display message
00002766  4E4F                    2383          TRAP        #15                 ; trap call
00002768                          2384          
00002768  4242                    2385          CLR         D2
0000276A  4243                    2386          CLR         D3
0000276C  1601                    2387          MOVE.B      D1,D3
0000276E  C67C 0007               2388          AND         #$07, D3
00002772                          2389          
00002772  4EB9 00002806           2390          JSR         printEA
00002778                          2391          
00002778  43F9 000035E5           2392          LEA         newLine, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000277E  103C 000E               2393          MOVE.B      #14, D0             ; command for trap call to display message
00002782  4E4F                    2394          TRAP        #15                 ; trap call
00002784                          2395          
00002784  4CDF 7EFF               2396          MOVEM.L  (SP)+, D0-D7/A1-A6
00002788  4E75                    2397          RTS
0000278A                          2398  * The following subroutine determines the correct data register to display, and sets the values of D2 and D3 accordingly to display the data register.
0000278A                          2399  * after setting the values, it calls another subroutine to actually display the data register.        
0000278A  48E7 FF7E               2400  PrntReg MOVEM.L D0-D7/A1-A6, -(SP)
0000278E                          2401          
0000278E  43F9 000035E9           2402          LEA         space, A1           ; display space
00002794  103C 000E               2403          MOVE.B      #14, D0             ; command for trap call to display message
00002798  4E4F                    2404          TRAP        #15                 ; trap call
0000279A                          2405          
0000279A  4242                    2406          CLR         D2
0000279C  4243                    2407          CLR         D3
0000279E  3601                    2408          MOVE.W      D1, D3
000027A0  E043                    2409          ASR         #eight, D3
000027A2  E243                    2410          ASR         #one, D3
000027A4  C67C 0007               2411          AND         #$07, D3
000027A8                          2412          
000027A8  4EB9 00002806           2413          JSR         printEA
000027AE                          2414          
000027AE  43F9 000035F0           2415          LEA         comma, A1           ; display comma
000027B4  103C 000E               2416          MOVE.B      #14, D0             ; command for trap call to display message
000027B8  4E4F                    2417          TRAP        #15                 ; trap call
000027BA                          2418          
000027BA  4242                    2419          CLR         D2
000027BC  4243                    2420          CLR         D3
000027BE  1601                    2421          MOVE.B      D1,D3
000027C0  C67C 0007               2422          AND         #$07, D3
000027C4                          2423          
000027C4  4EB9 00002806           2424          JSR         printEA
000027CA                          2425          
000027CA  43F9 000035E5           2426          LEA         newLine, A1         ; newline
000027D0  103C 000E               2427          MOVE.B      #14, D0             ; command for trap call to display message
000027D4  4E4F                    2428          TRAP        #15                 ; trap call
000027D6                          2429          
000027D6  4CDF 7EFF               2430          MOVEM.L  (SP)+, D0-D7/A1-A6
000027DA  4E75                    2431          RTS
000027DC                          2432  * The following subroutine is used to display the number between 1-8 for the bit vount for the shift/rotate opcode
000027DC                          2433  * It displays it by storing the appropriate number in D1 and running trap task 3.        
000027DC  48E7 FF7E               2434  MemShiftImm     MOVEM.L D0-D7/A1-A6, -(SP)      ;caller saved data
000027E0  4241                    2435                  CLR     D1
000027E2                          2436                  
000027E2  1202                    2437                  MOVE.B  D2, D1
000027E4  B23C 0000               2438                  CMP.B   #zero, D1
000027E8  6700 000C               2439                  BEQ     displayEight
000027EC                          2440                  
000027EC  103C 0003               2441                  MOVE.B  #3, D0
000027F0  4E4F                    2442                  TRAP    #15
000027F2  6000 000C               2443                  BRA     endSubroutine
000027F6                          2444                  
000027F6  123C 0008               2445  displayEight    MOVE.B  #$08, D1
000027FA  103C 0003               2446                  MOVE.B  #3, D0
000027FE  4E4F                    2447                  TRAP    #15                
00002800                          2448  endSubroutine
00002800  4CDF 7EFF               2449                  MOVEM.L  (SP)+, D0-D7/A1-A6     ; recall data
00002804  4E75                    2450                  RTS                             ; Return to main routine
00002806                          2451          
00002806                          2452  
00002806                          2453  ***********************************************************************************************************
00002806                          2454  *
00002806                          2455  *                                           EA Print Check
00002806                          2456  *
00002806                          2457  ***********************************************************************************************************
00002806  48E7 FF7E               2458  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
0000280A                          2459  
0000280A  B43C 0000               2460              CMP.B       #zero, D2
0000280E  6700 002E               2461              BEQ         pDataReg
00002812  B43C 0001               2462              CMP.B       #one, D2
00002816  6700 00E6               2463              BEQ         pAddrReg
0000281A  B43C 0002               2464              CMP.B       #two, D2
0000281E  6700 019E               2465              BEQ         pAddrDir
00002822  B43C 0003               2466              CMP.B       #three, D2
00002826  6700 02C2               2467              BEQ         pAddrPost
0000282A  B43C 0004               2468              CMP.B       #four, D2
0000282E  6700 0446               2469              BEQ         pAddrDec
00002832  B43C 0007               2470              CMP.B       #seven, D2
00002836  6700 0576               2471              BEQ         pHex
0000283A  6000 0642               2472              BRA         invalid
0000283E                          2473  
0000283E                          2474  ***********************************************************************************************************
0000283E                          2475  * Data Register        
0000283E  B63C 0000               2476  pDataReg    CMP.B   #zero,D3
00002842  6700 003A               2477              BEQ     displayD0
00002846  B63C 0001               2478              CMP.B   #one,D3
0000284A  6700 0042               2479              BEQ     displayD1
0000284E  B63C 0002               2480              CMP.B   #two,D3
00002852  6700 004A               2481              BEQ     displayD2
00002856  B63C 0003               2482              CMP.B   #three,D3
0000285A  6700 0052               2483              BEQ     displayD3
0000285E  B63C 0004               2484              CMP.B   #four,D3
00002862  6700 005A               2485              BEQ     displayD4
00002866  B63C 0005               2486              CMP.B   #five,D3
0000286A  6700 0062               2487              BEQ     displayD5
0000286E  B63C 0006               2488              CMP.B   #six,D3
00002872  6700 006A               2489              BEQ     displayD6
00002876  B63C 0007               2490              CMP.B   #seven,D3
0000287A  6700 0072               2491              BEQ     displayD7
0000287E                          2492              
0000287E  43F9 000036A6           2493  displayD0   LEA         dispD0, A1          ; Display space
00002884  103C 000E               2494              MOVE.B      #14, D0             ; command for trap call to display message
00002888  4E4F                    2495              TRAP        #15                 ; trap call
0000288A  6000 05F2               2496              BRA         endSUB              ; go to the end of the subroutine
0000288E                          2497              
0000288E  43F9 000036A9           2498  displayD1   LEA         dispD1, A1          ; Display space
00002894  103C 000E               2499              MOVE.B      #14, D0             ; command for trap call to display message
00002898  4E4F                    2500              TRAP        #15                 ; trap call
0000289A  6000 05E2               2501              BRA         endSUB              ; go to the end of the subroutine
0000289E                          2502  
0000289E  43F9 000036AC           2503  displayD2   LEA         dispD2, A1          ; Display space
000028A4  103C 000E               2504              MOVE.B      #14, D0             ; command for trap call to display message
000028A8  4E4F                    2505              TRAP        #15                 ; trap call
000028AA  6000 05D2               2506              BRA         endSUB              ; go to the end of the subroutine
000028AE                          2507  
000028AE  43F9 000036AF           2508  displayD3   LEA         dispD3, A1          ; Display space
000028B4  103C 000E               2509              MOVE.B      #14, D0             ; command for trap call to display message
000028B8  4E4F                    2510              TRAP        #15                 ; trap call
000028BA  6000 05C2               2511              BRA         endSUB              ; go to the end of the subroutine
000028BE                          2512  
000028BE  43F9 000036B2           2513  displayD4   LEA         dispD4, A1          ; Display space
000028C4  103C 000E               2514              MOVE.B      #14, D0             ; command for trap call to display message
000028C8  4E4F                    2515              TRAP        #15                 ; trap call
000028CA  6000 05B2               2516              BRA         endSUB              ; go to the end of the subroutine
000028CE                          2517  
000028CE  43F9 000036B5           2518  displayD5   LEA         dispD5, A1          ; Display space
000028D4  103C 000E               2519              MOVE.B      #14, D0             ; command for trap call to display message
000028D8  4E4F                    2520              TRAP        #15                 ; trap call
000028DA  6000 05A2               2521              BRA         endSUB              ; go to the end of the subroutine
000028DE                          2522  
000028DE  43F9 000036B8           2523  displayD6   LEA         dispD6, A1          ; Display space
000028E4  103C 000E               2524              MOVE.B      #14, D0             ; command for trap call to display message
000028E8  4E4F                    2525              TRAP        #15                 ; trap call
000028EA  6000 0592               2526              BRA         endSUB              ; go to the end of the subroutine
000028EE                          2527  
000028EE  43F9 000036BB           2528  displayD7   LEA         dispD7, A1          ; Display space
000028F4  103C 000E               2529              MOVE.B      #14, D0             ; command for trap call to display message
000028F8  4E4F                    2530              TRAP        #15                 ; trap call
000028FA  6000 0582               2531              BRA         endSUB              ; go to the end of the subroutine
000028FE                          2532  ***********************************************************************************************************
000028FE                          2533  * Address Register
000028FE  B63C 0000               2534  pAddrReg    CMP.B   #zero,D3
00002902  6700 003A               2535              BEQ     displayA0
00002906  B63C 0001               2536              CMP.B   #one,D3
0000290A  6700 0042               2537              BEQ     displayA1
0000290E  B63C 0002               2538              CMP.B   #two,D3
00002912  6700 004A               2539              BEQ     displayA2
00002916  B63C 0003               2540              CMP.B   #three,D3
0000291A  6700 0052               2541              BEQ     displayA3
0000291E  B63C 0004               2542              CMP.B   #four,D3
00002922  6700 005A               2543              BEQ     displayA4
00002926  B63C 0005               2544              CMP.B   #five,D3
0000292A  6700 0062               2545              BEQ     displayA5
0000292E  B63C 0006               2546              CMP.B   #six,D3
00002932  6700 006A               2547              BEQ     displayA6
00002936  B63C 0007               2548              CMP.B   #seven,D3
0000293A  6700 0072               2549              BEQ     displayA7
0000293E                          2550              
0000293E  43F9 0000368C           2551  displayA0   LEA         dispA0, A1          ; Display space
00002944  103C 000E               2552              MOVE.B      #14, D0             ; command for trap call to display message
00002948  4E4F                    2553              TRAP        #15                 ; trap call
0000294A  6000 0532               2554              BRA         endSUB              ; go to the end of the subroutine
0000294E                          2555              
0000294E  43F9 0000368F           2556  displayA1   LEA         dispA1, A1          ; Display space
00002954  103C 000E               2557              MOVE.B      #14, D0             ; command for trap call to display message
00002958  4E4F                    2558              TRAP        #15                 ; trap call
0000295A  6000 0522               2559              BRA         endSUB              ; go to the end of the subroutine
0000295E                          2560  
0000295E  43F9 00003692           2561  displayA2   LEA         dispA2, A1          ; Display space
00002964  103C 000E               2562              MOVE.B      #14, D0             ; command for trap call to display message
00002968  4E4F                    2563              TRAP        #15                 ; trap call
0000296A  6000 0512               2564              BRA         endSUB              ; go to the end of the subroutine
0000296E                          2565  
0000296E  43F9 00003695           2566  displayA3   LEA         dispA3, A1          ; Display space
00002974  103C 000E               2567              MOVE.B      #14, D0             ; command for trap call to display message
00002978  4E4F                    2568              TRAP        #15                 ; trap call
0000297A  6000 0502               2569              BRA         endSUB              ; go to the end of the subroutine
0000297E                          2570  
0000297E  43F9 00003698           2571  displayA4   LEA         dispA4, A1          ; Display space
00002984  103C 000E               2572              MOVE.B      #14, D0             ; command for trap call to display message
00002988  4E4F                    2573              TRAP        #15                 ; trap call
0000298A  6000 04F2               2574              BRA         endSUB              ; go to the end of the subroutine
0000298E                          2575  
0000298E  43F9 0000369B           2576  displayA5   LEA         dispA5, A1          ; Display space
00002994  103C 000E               2577              MOVE.B      #14, D0             ; command for trap call to display message
00002998  4E4F                    2578              TRAP        #15                 ; trap call
0000299A  6000 04E2               2579              BRA         endSUB              ; go to the end of the subroutine
0000299E                          2580  
0000299E  43F9 0000369E           2581  displayA6   LEA         dispA6, A1          ; Display space
000029A4  103C 000E               2582              MOVE.B      #14, D0             ; command for trap call to display message
000029A8  4E4F                    2583              TRAP        #15                 ; trap call
000029AA  6000 04D2               2584              BRA         endSUB              ; go to the end of the subroutine
000029AE                          2585  
000029AE  43F9 000036A1           2586  displayA7   LEA         dispA7, A1          ; Display space
000029B4  103C 000E               2587              MOVE.B      #14, D0             ; command for trap call to display message
000029B8  4E4F                    2588              TRAP        #15                 ; trap call
000029BA  6000 04C2               2589              BRA         endSUB              ; go to the end of the subroutine
000029BE                          2590  
000029BE                          2591  ***********************************************************************************************************
000029BE                          2592  * Address Register Direct
000029BE                          2593  
000029BE  43F9 000035F2           2594  pAddrDir    LEA         opPer, A1           ; Display space
000029C4  103C 000E               2595              MOVE.B      #14, D0             ; command for trap call to display message
000029C8  4E4F                    2596              TRAP        #15                 ; trap call
000029CA                          2597              
000029CA  B63C 0000               2598              CMP.B   #zero,D3
000029CE  6700 003A               2599              BEQ     displayA0A
000029D2  B63C 0001               2600              CMP.B   #one,D3
000029D6  6700 004E               2601              BEQ     displayA1A
000029DA  B63C 0002               2602              CMP.B   #two,D3
000029DE  6700 0062               2603              BEQ     displayA2A
000029E2  B63C 0003               2604              CMP.B   #three,D3
000029E6  6700 0076               2605              BEQ     displayA3A
000029EA  B63C 0004               2606              CMP.B   #four,D3
000029EE  6700 008A               2607              BEQ     displayA4A
000029F2  B63C 0005               2608              CMP.B   #five,D3
000029F6  6700 009E               2609              BEQ     displayA5A
000029FA  B63C 0006               2610              CMP.B   #six,D3
000029FE  6700 00B2               2611              BEQ     displayA6A
00002A02  B63C 0007               2612              CMP.B   #seven,D3
00002A06  6700 00C6               2613              BEQ     displayA7A
00002A0A                          2614              
00002A0A  43F9 0000368C           2615  displayA0A  LEA         dispA0, A1          ; Display space
00002A10  103C 000E               2616              MOVE.B      #14, D0             ; command for trap call to display message
00002A14  4E4F                    2617              TRAP        #15                 ; trap call
00002A16  43F9 000035F4           2618              LEA         clPer, A1           ; Display space
00002A1C  103C 000E               2619              MOVE.B      #14, D0             ; command for trap call to display message
00002A20  4E4F                    2620              TRAP        #15                 ; trap call
00002A22  6000 045A               2621              BRA         endSUB              ; go to the end of the subroutine
00002A26                          2622              
00002A26  43F9 0000368F           2623  displayA1A  LEA         dispA1, A1          ; Display space
00002A2C  103C 000E               2624              MOVE.B      #14, D0             ; command for trap call to display message
00002A30  4E4F                    2625              TRAP        #15                 ; trap call
00002A32  43F9 000035F4           2626              LEA         clPer, A1           ; Display space
00002A38  103C 000E               2627              MOVE.B      #14, D0             ; command for trap call to display message
00002A3C  4E4F                    2628              TRAP        #15                 ; trap call
00002A3E  6000 043E               2629              BRA         endSUB              ; go to the end of the subroutine
00002A42                          2630  
00002A42  43F9 00003692           2631  displayA2A  LEA         dispA2, A1          ; Display space
00002A48  103C 000E               2632              MOVE.B      #14, D0             ; command for trap call to display message
00002A4C  4E4F                    2633              TRAP        #15                 ; trap call
00002A4E  43F9 000035F4           2634              LEA         clPer, A1           ; Display space
00002A54  103C 000E               2635              MOVE.B      #14, D0             ; command for trap call to display message
00002A58  4E4F                    2636              TRAP        #15                 ; trap call
00002A5A  6000 0422               2637              BRA         endSUB              ; go to the end of the subroutine
00002A5E                          2638  
00002A5E  43F9 00003695           2639  displayA3A  LEA         dispA3, A1          ; Display space
00002A64  103C 000E               2640              MOVE.B      #14, D0             ; command for trap call to display message
00002A68  4E4F                    2641              TRAP        #15                 ; trap call
00002A6A  43F9 000035F4           2642              LEA         clPer, A1           ; Display space
00002A70  103C 000E               2643              MOVE.B      #14, D0             ; command for trap call to display message
00002A74  4E4F                    2644              TRAP        #15                 ; trap call
00002A76  6000 0406               2645              BRA         endSUB              ; go to the end of the subroutine
00002A7A                          2646  
00002A7A  43F9 00003698           2647  displayA4A  LEA         dispA4, A1          ; Display space
00002A80  103C 000E               2648              MOVE.B      #14, D0             ; command for trap call to display message
00002A84  4E4F                    2649              TRAP        #15                 ; trap call
00002A86  43F9 000035F4           2650              LEA         clPer, A1           ; Display space
00002A8C  103C 000E               2651              MOVE.B      #14, D0             ; command for trap call to display message
00002A90  4E4F                    2652              TRAP        #15                 ; trap call
00002A92  6000 03EA               2653              BRA         endSUB              ; go to the end of the subroutine
00002A96                          2654  
00002A96  43F9 0000369B           2655  displayA5A  LEA         dispA5, A1          ; Display space
00002A9C  103C 000E               2656              MOVE.B      #14, D0             ; command for trap call to display message
00002AA0  4E4F                    2657              TRAP        #15                 ; trap call
00002AA2  43F9 000035F4           2658              LEA         clPer, A1           ; Display space
00002AA8  103C 000E               2659              MOVE.B      #14, D0             ; command for trap call to display message
00002AAC  4E4F                    2660              TRAP        #15                 ; trap call
00002AAE  6000 03CE               2661              BRA         endSUB              ; go to the end of the subroutine
00002AB2                          2662  
00002AB2  43F9 0000369E           2663  displayA6A  LEA         dispA6, A1          ; Display space
00002AB8  103C 000E               2664              MOVE.B      #14, D0             ; command for trap call to display message
00002ABC  4E4F                    2665              TRAP        #15                 ; trap call
00002ABE  43F9 000035F4           2666              LEA         clPer, A1           ; Display space
00002AC4  103C 000E               2667              MOVE.B      #14, D0             ; command for trap call to display message
00002AC8  4E4F                    2668              TRAP        #15                 ; trap call
00002ACA  6000 03B2               2669              BRA         endSUB              ; go to the end of the subroutine
00002ACE                          2670  
00002ACE  43F9 000036A1           2671  displayA7A  LEA         dispA7, A1          ; Display space
00002AD4  103C 000E               2672              MOVE.B      #14, D0             ; command for trap call to display message
00002AD8  4E4F                    2673              TRAP        #15                 ; trap call
00002ADA  43F9 000035F4           2674              LEA         clPer, A1           ; Display space
00002AE0  103C 000E               2675              MOVE.B      #14, D0             ; command for trap call to display message
00002AE4  4E4F                    2676              TRAP        #15                 ; trap call
00002AE6  6000 0396               2677              BRA         endSUB              ; go to the end of the subroutine
00002AEA                          2678              
00002AEA                          2679  ***********************************************************************************************************
00002AEA                          2680  * Addr Postincrement
00002AEA                          2681              
00002AEA  43F9 000035F2           2682  pAddrPost   LEA         opPer, A1           ; Display space
00002AF0  103C 000E               2683              MOVE.B      #14, D0             ; command for trap call to display message
00002AF4  4E4F                    2684              TRAP        #15                 ; trap call
00002AF6                          2685              
00002AF6  B63C 0000               2686              CMP.B   #zero,D3
00002AFA  6700 003A               2687              BEQ     displayA0P
00002AFE  B63C 0001               2688              CMP.B   #one,D3
00002B02  6700 005A               2689              BEQ     displayA1P
00002B06  B63C 0002               2690              CMP.B   #two,D3
00002B0A  6700 007A               2691              BEQ     displayA2P
00002B0E  B63C 0003               2692              CMP.B   #three,D3
00002B12  6700 009A               2693              BEQ     displayA3P
00002B16  B63C 0004               2694              CMP.B   #four,D3
00002B1A  6700 00BA               2695              BEQ     displayA4P
00002B1E  B63C 0005               2696              CMP.B   #five,D3
00002B22  6700 00DA               2697              BEQ     displayA5P
00002B26  B63C 0006               2698              CMP.B   #six,D3
00002B2A  6700 00FA               2699              BEQ     displayA6P
00002B2E  B63C 0007               2700              CMP.B   #seven,D3
00002B32  6700 011A               2701              BEQ     displayA7P
00002B36                          2702              
00002B36  43F9 0000368C           2703  displayA0P  LEA         dispA0, A1          ; Display space
00002B3C  103C 000E               2704              MOVE.B      #14, D0             ; command for trap call to display message
00002B40  4E4F                    2705              TRAP        #15                 ; trap call
00002B42  43F9 000035F4           2706              LEA         clPer, A1           ; Display space
00002B48  103C 000E               2707              MOVE.B      #14, D0             ; command for trap call to display message
00002B4C  4E4F                    2708              TRAP        #15                 ; trap call
00002B4E  43F9 000035F8           2709              LEA         inc, A1             ; Display space
00002B54  103C 000E               2710              MOVE.B      #14, D0             ; command for trap call to display message
00002B58  4E4F                    2711              TRAP        #15                 ; trap call
00002B5A  6000 0322               2712              BRA         endSUB              ; go to the end of the subroutine
00002B5E                          2713              
00002B5E  43F9 0000368F           2714  displayA1P  LEA         dispA1, A1          ; Display space
00002B64  103C 000E               2715              MOVE.B      #14, D0             ; command for trap call to display message
00002B68  4E4F                    2716              TRAP        #15                 ; trap call
00002B6A  43F9 000035F4           2717              LEA         clPer, A1           ; Display space
00002B70  103C 000E               2718              MOVE.B      #14, D0             ; command for trap call to display message
00002B74  4E4F                    2719              TRAP        #15                 ; trap call
00002B76  43F9 000035F8           2720              LEA         inc, A1             ; Display space
00002B7C  103C 000E               2721              MOVE.B      #14, D0             ; command for trap call to display message
00002B80  4E4F                    2722              TRAP        #15                 ; trap call
00002B82  6000 02FA               2723              BRA         endSUB              ; go to the end of the subroutine
00002B86                          2724  
00002B86  43F9 00003692           2725  displayA2P  LEA         dispA2, A1          ; Display space
00002B8C  103C 000E               2726              MOVE.B      #14, D0             ; command for trap call to display message
00002B90  4E4F                    2727              TRAP        #15                 ; trap call
00002B92  43F9 000035F4           2728              LEA         clPer, A1           ; Display space
00002B98  103C 000E               2729              MOVE.B      #14, D0             ; command for trap call to display message
00002B9C  4E4F                    2730              TRAP        #15                 ; trap call
00002B9E  43F9 000035F8           2731              LEA         inc, A1             ; Display space
00002BA4  103C 000E               2732              MOVE.B      #14, D0             ; command for trap call to display message
00002BA8  4E4F                    2733              TRAP        #15                 ; trap call
00002BAA  6000 02D2               2734              BRA         endSUB              ; go to the end of the subroutine
00002BAE                          2735  
00002BAE  43F9 00003695           2736  displayA3P  LEA         dispA3, A1          ; Display space
00002BB4  103C 000E               2737              MOVE.B      #14, D0             ; command for trap call to display message
00002BB8  4E4F                    2738              TRAP        #15                 ; trap call
00002BBA  43F9 000035F4           2739              LEA         clPer, A1           ; Display space
00002BC0  103C 000E               2740              MOVE.B      #14, D0             ; command for trap call to display message
00002BC4  4E4F                    2741              TRAP        #15                 ; trap call
00002BC6  43F9 000035F8           2742              LEA         inc, A1             ; Display space
00002BCC  103C 000E               2743              MOVE.B      #14, D0             ; command for trap call to display message
00002BD0  4E4F                    2744              TRAP        #15                 ; trap call
00002BD2  6000 02AA               2745              BRA         endSUB              ; go to the end of the subroutine
00002BD6                          2746  
00002BD6  43F9 00003698           2747  displayA4P  LEA         dispA4, A1          ; Display space
00002BDC  103C 000E               2748              MOVE.B      #14, D0             ; command for trap call to display message
00002BE0  4E4F                    2749              TRAP        #15                 ; trap call
00002BE2  43F9 000035F4           2750              LEA         clPer, A1           ; Display space
00002BE8  103C 000E               2751              MOVE.B      #14, D0             ; command for trap call to display message
00002BEC  4E4F                    2752              TRAP        #15                 ; trap call
00002BEE  43F9 000035F8           2753              LEA         inc, A1             ; Display space
00002BF4  103C 000E               2754              MOVE.B      #14, D0             ; command for trap call to display message
00002BF8  4E4F                    2755              TRAP        #15                 ; trap call
00002BFA  6000 0282               2756              BRA         endSUB              ; go to the end of the subroutine
00002BFE                          2757  
00002BFE  43F9 0000369B           2758  displayA5P  LEA         dispA5, A1          ; Display space
00002C04  103C 000E               2759              MOVE.B      #14, D0             ; command for trap call to display message
00002C08  4E4F                    2760              TRAP        #15                 ; trap call
00002C0A  43F9 000035F4           2761              LEA         clPer, A1           ; Display space
00002C10  103C 000E               2762              MOVE.B      #14, D0             ; command for trap call to display message
00002C14  4E4F                    2763              TRAP        #15                 ; trap call
00002C16  43F9 000035F8           2764              LEA         inc, A1             ; Display space
00002C1C  103C 000E               2765              MOVE.B      #14, D0             ; command for trap call to display message
00002C20  4E4F                    2766              TRAP        #15                 ; trap call
00002C22  6000 025A               2767              BRA         endSUB              ; go to the end of the subroutine
00002C26                          2768  
00002C26  43F9 0000369E           2769  displayA6P  LEA         dispA6, A1          ; Display space
00002C2C  103C 000E               2770              MOVE.B      #14, D0             ; command for trap call to display message
00002C30  4E4F                    2771              TRAP        #15                 ; trap call
00002C32  43F9 000035F4           2772              LEA         clPer, A1           ; Display space
00002C38  103C 000E               2773              MOVE.B      #14, D0             ; command for trap call to display message
00002C3C  4E4F                    2774              TRAP        #15                 ; trap call
00002C3E  43F9 000035F8           2775              LEA         inc, A1             ; Display space
00002C44  103C 000E               2776              MOVE.B      #14, D0             ; command for trap call to display message
00002C48  4E4F                    2777              TRAP        #15                 ; trap call
00002C4A  6000 0232               2778              BRA         endSUB              ; go to the end of the subroutine
00002C4E                          2779  
00002C4E  43F9 000036A1           2780  displayA7P  LEA         dispA7, A1          ; Display space
00002C54  103C 000E               2781              MOVE.B      #14, D0             ; command for trap call to display message
00002C58  4E4F                    2782              TRAP        #15                 ; trap call
00002C5A  43F9 000035F4           2783              LEA         clPer, A1           ; Display space
00002C60  103C 000E               2784              MOVE.B      #14, D0             ; command for trap call to display message
00002C64  4E4F                    2785              TRAP        #15                 ; trap call
00002C66  43F9 000035F8           2786              LEA         inc, A1             ; Display space
00002C6C  103C 000E               2787              MOVE.B      #14, D0             ; command for trap call to display message
00002C70  4E4F                    2788              TRAP        #15                 ; trap call
00002C72  6000 020A               2789              BRA         endSUB              ; go to the end of the subroutine
00002C76                          2790  
00002C76                          2791  ***********************************************************************************************************
00002C76                          2792  * Addr Postdecrement
00002C76                          2793  
00002C76  43F9 000035F6           2794  pAddrDec    LEA         dec, A1             ; Display space
00002C7C  103C 000E               2795              MOVE.B      #14, D0             ; command for trap call to display message
00002C80  4E4F                    2796              TRAP        #15                 ; trap call
00002C82                          2797              
00002C82  43F9 000035F2           2798              LEA         opPer, A1           ; Display space
00002C88  103C 000E               2799              MOVE.B      #14, D0             ; command for trap call to display message
00002C8C  4E4F                    2800              TRAP        #15                 ; trap call
00002C8E                          2801              
00002C8E  B63C 0000               2802              CMP.B   #zero,D3
00002C92  6700 003A               2803              BEQ     displayA0D
00002C96  B63C 0001               2804              CMP.B   #one,D3
00002C9A  6700 004E               2805              BEQ     displayA1D
00002C9E  B63C 0002               2806              CMP.B   #two,D3
00002CA2  6700 0062               2807              BEQ     displayA2D
00002CA6  B63C 0003               2808              CMP.B   #three,D3
00002CAA  6700 0076               2809              BEQ     displayA3D
00002CAE  B63C 0004               2810              CMP.B   #four,D3
00002CB2  6700 008A               2811              BEQ     displayA4D
00002CB6  B63C 0005               2812              CMP.B   #five,D3
00002CBA  6700 009E               2813              BEQ     displayA5D
00002CBE  B63C 0006               2814              CMP.B   #six,D3
00002CC2  6700 00B2               2815              BEQ     displayA6D
00002CC6  B63C 0007               2816              CMP.B   #seven,D3
00002CCA  6700 00C6               2817              BEQ     displayA7D
00002CCE                          2818              
00002CCE  43F9 0000368C           2819  displayA0D  LEA         dispA0, A1          ; Display space
00002CD4  103C 000E               2820              MOVE.B      #14, D0             ; command for trap call to display message
00002CD8  4E4F                    2821              TRAP        #15                 ; trap call
00002CDA  43F9 000035F4           2822              LEA         clPer, A1           ; Display space
00002CE0  103C 000E               2823              MOVE.B      #14, D0             ; command for trap call to display message
00002CE4  4E4F                    2824              TRAP        #15                 ; trap call
00002CE6  6000 0196               2825              BRA         endSUB              ; go to the end of the subroutine
00002CEA                          2826              
00002CEA  43F9 0000368F           2827  displayA1D  LEA         dispA1, A1          ; Display space
00002CF0  103C 000E               2828              MOVE.B      #14, D0             ; command for trap call to display message
00002CF4  4E4F                    2829              TRAP        #15                 ; trap call
00002CF6  43F9 000035F4           2830              LEA         clPer, A1           ; Display space
00002CFC  103C 000E               2831              MOVE.B      #14, D0             ; command for trap call to display message
00002D00  4E4F                    2832              TRAP        #15                 ; trap call
00002D02  6000 017A               2833              BRA         endSUB              ; go to the end of the subroutine
00002D06                          2834  
00002D06  43F9 00003692           2835  displayA2D  LEA         dispA2, A1          ; Display space
00002D0C  103C 000E               2836              MOVE.B      #14, D0             ; command for trap call to display message
00002D10  4E4F                    2837              TRAP        #15                 ; trap call
00002D12  43F9 000035F4           2838              LEA         clPer, A1           ; Display space
00002D18  103C 000E               2839              MOVE.B      #14, D0             ; command for trap call to display message
00002D1C  4E4F                    2840              TRAP        #15                 ; trap call
00002D1E  6000 015E               2841              BRA         endSUB              ; go to the end of the subroutine
00002D22                          2842  
00002D22  43F9 00003695           2843  displayA3D  LEA         dispA3, A1          ; Display space
00002D28  103C 000E               2844              MOVE.B      #14, D0             ; command for trap call to display message
00002D2C  4E4F                    2845              TRAP        #15                 ; trap call
00002D2E  43F9 000035F4           2846              LEA         clPer, A1           ; Display space
00002D34  103C 000E               2847              MOVE.B      #14, D0             ; command for trap call to display message
00002D38  4E4F                    2848              TRAP        #15                 ; trap call
00002D3A  6000 0142               2849              BRA         endSUB              ; go to the end of the subroutine
00002D3E                          2850  
00002D3E  43F9 00003698           2851  displayA4D  LEA         dispA4, A1          ; Display space
00002D44  103C 000E               2852              MOVE.B      #14, D0             ; command for trap call to display message
00002D48  4E4F                    2853              TRAP        #15                 ; trap call
00002D4A  43F9 000035F4           2854              LEA         clPer, A1           ; Display space
00002D50  103C 000E               2855              MOVE.B      #14, D0             ; command for trap call to display message
00002D54  4E4F                    2856              TRAP        #15                 ; trap call
00002D56  6000 0126               2857              BRA         endSUB              ; go to the end of the subroutine
00002D5A                          2858  
00002D5A  43F9 0000369B           2859  displayA5D  LEA         dispA5, A1          ; Display space
00002D60  103C 000E               2860              MOVE.B      #14, D0             ; command for trap call to display message
00002D64  4E4F                    2861              TRAP        #15                 ; trap call
00002D66  43F9 000035F4           2862              LEA         clPer, A1           ; Display space
00002D6C  103C 000E               2863              MOVE.B      #14, D0             ; command for trap call to display message
00002D70  4E4F                    2864              TRAP        #15                 ; trap call
00002D72  6000 010A               2865              BRA         endSUB              ; go to the end of the subroutine
00002D76                          2866  
00002D76  43F9 0000369E           2867  displayA6D  LEA         dispA6, A1          ; Display space
00002D7C  103C 000E               2868              MOVE.B      #14, D0             ; command for trap call to display message
00002D80  4E4F                    2869              TRAP        #15                 ; trap call
00002D82  43F9 000035F4           2870              LEA         clPer, A1           ; Display space
00002D88  103C 000E               2871              MOVE.B      #14, D0             ; command for trap call to display message
00002D8C  4E4F                    2872              TRAP        #15                 ; trap call
00002D8E  6000 00EE               2873              BRA         endSUB              ; go to the end of the subroutine
00002D92                          2874  
00002D92  43F9 000036A1           2875  displayA7D  LEA         dispA7, A1          ; Display space
00002D98  103C 000E               2876              MOVE.B      #14, D0             ; command for trap call to display message
00002D9C  4E4F                    2877              TRAP        #15                 ; trap call
00002D9E  43F9 000035F4           2878              LEA         clPer, A1           ; Display space
00002DA4  103C 000E               2879              MOVE.B      #14, D0             ; command for trap call to display message
00002DA8  4E4F                    2880              TRAP        #15                 ; trap call
00002DAA  6000 00D2               2881              BRA         endSUB              ; go to the end of the subroutine
00002DAE                          2882  ***********************************************************************************************************
00002DAE                          2883  * Display Hex
00002DAE                          2884  
00002DAE  B63C 0000               2885  pHex        CMP.B       #zero, D3
00002DB2  6700 0012               2886              BEQ         AbsShort
00002DB6  B63C 0001               2887              CMP.B       #one, D3
00002DBA  6700 0042               2888              BEQ         AbsLong
00002DBE  B63C 0004               2889              CMP.B       #four, D3
00002DC2  6700 0072               2890              BEQ         DispImm
00002DC6                          2891              
00002DC6  43F9 000035F2           2892  AbsShort    LEA         opPer, A1           ; Display space
00002DCC  103C 000E               2893              MOVE.B      #14, D0             ; command for trap call to display message
00002DD0  4E4F                    2894              TRAP        #15                 ; trap call
00002DD2                          2895              
00002DD2  43F9 000035EE           2896              LEA         dispHex, A1         ; Display space
00002DD8  103C 000E               2897              MOVE.B      #14, D0             ; command for trap call to display message
00002DDC  4E4F                    2898              TRAP        #15                 ; trap call
00002DDE                          2899              
00002DDE  4241                    2900              CLR         D1
00002DE0  3218                    2901              MOVE.W      (A0)+, D1
00002DE2  4240                    2902              CLR         D0
00002DE4  103C 0004               2903              MOVE.B      #4, D0
00002DE8                          2904              
00002DE8  4EB9 000033BA           2905              JSR         outHex
00002DEE                          2906              
00002DEE  43F9 000035F4           2907              LEA         clPer, A1           ; Display space
00002DF4  103C 000E               2908              MOVE.B      #14, D0             ; command for trap call to display message
00002DF8  4E4F                    2909              TRAP        #15                 ; trap call
00002DFA                          2910              
00002DFA  6000 0082               2911              BRA         endSub
00002DFE                          2912              
00002DFE  43F9 000035F2           2913  AbsLong     LEA         opPer, A1           ; Display space
00002E04  103C 000E               2914              MOVE.B      #14, D0             ; command for trap call to display message
00002E08  4E4F                    2915              TRAP        #15                 ; trap call
00002E0A                          2916              
00002E0A  43F9 000035EE           2917              LEA         dispHex, A1         ; Display space
00002E10  103C 000E               2918              MOVE.B      #14, D0             ; command for trap call to display message
00002E14  4E4F                    2919              TRAP        #15                 ; trap call
00002E16                          2920              
00002E16  4241                    2921              CLR         D1
00002E18  2218                    2922              MOVE.L      (A0)+, D1
00002E1A  4240                    2923              CLR         D0
00002E1C  103C 0008               2924              MOVE.B      #8, D0
00002E20                          2925              
00002E20  4EB9 000033BA           2926              JSR         outHex
00002E26                          2927              
00002E26  43F9 000035F4           2928              LEA         clPer, A1           ; Display space
00002E2C  103C 000E               2929              MOVE.B      #14, D0             ; command for trap call to display message
00002E30  4E4F                    2930              TRAP        #15                 ; trap call
00002E32                          2931              
00002E32  6000 004A               2932              BRA         endSub
00002E36                          2933  
00002E36  43F9 000035EC           2934  DispImm     LEA         hashTag, A1         ; Display space
00002E3C  103C 000E               2935              MOVE.B      #14, D0             ; command for trap call to display message
00002E40  4E4F                    2936              TRAP        #15                 ; trap call
00002E42                          2937  
00002E42  43F9 000035EE           2938              LEA         dispHex, A1         ; Display space
00002E48  103C 000E               2939              MOVE.B      #14, D0             ; command for trap call to display message
00002E4C  4E4F                    2940              TRAP        #15                 ; trap call
00002E4E                          2941              
00002E4E  BC3C 0001               2942              CMP.B       #1,D6
00002E52  6700 0016               2943              BEQ         ImmLong
00002E56                          2944              
00002E56  4241                    2945              CLR         D1
00002E58  3218                    2946              MOVE.W      (A0)+, D1
00002E5A  4240                    2947              CLR         D0
00002E5C  103C 0004               2948              MOVE.B      #4, D0
00002E60  4EB9 000033BA           2949              JSR         outHex
00002E66  6000 0012               2950              BRA         LongSkip
00002E6A                          2951              
00002E6A  4241                    2952  ImmLong     CLR         D1
00002E6C  2218                    2953              MOVE.L      (A0)+, D1
00002E6E  4240                    2954              CLR         D0
00002E70  103C 0008               2955              MOVE.B      #8, D0
00002E74  4EB9 000033BA           2956              JSR         outHex             
00002E7A                          2957  
00002E7A                          2958  LongSkip
00002E7A  6000 0002               2959              BRA         endSub
00002E7E                          2960  invalid
00002E7E                          2961  
00002E7E                          2962  endSUB
00002E7E                          2963          
00002E7E  4CDF 7EFF               2964              MOVEM.L  (SP)+, D0-D7/A1-A6
00002E82  4E75                    2965              RTS
00002E84                          2966  
00002E84                          2967  ***********************************************************************************************************
00002E84                          2968  ***********************************************************************************************************
00002E84                          2969  ***********************************************************************************************************
00002E84                          2970  
00002E84  48E7 FF7E               2971  MOVEMBRA    MOVEM.L  D0-D7/A1-A6, -(SP)     ; Branches off depending on size bit
00002E88  BA7C 0000               2972              CMP      #zero,D5
00002E8C  6700 000A               2973              BEQ      MOVEMW
00002E90  BA7C 0001               2974              CMP      #one, D5
00002E94  6700 001E               2975              BEQ      MOVEML
00002E98                          2976              
00002E98                          2977  MOVEMW     
00002E98  43F9 00003686           2978              LEA         dispWord, A1        ; we know that the opcode will be ROR, so load A1 to print message
00002E9E  103C 000E               2979              MOVE.B      #14, D0             ; command for trap call to display message
00002EA2  4E4F                    2980              TRAP        #15                 ; trap call
00002EA4                          2981  
00002EA4  43F9 000035E9           2982              LEA         space, A1           ; we know that the opcode will be ROR, so load A1 to print message
00002EAA  103C 000E               2983              MOVE.B      #14, D0             ; command for trap call to display message
00002EAE  4E4F                    2984              TRAP        #15                 ; trap call
00002EB0                          2985              
00002EB0  6000 001E               2986              BRA         CheckDR
00002EB4                          2987  
00002EB4                          2988  MOVEML   
00002EB4  43F9 00003689           2989              LEA         dispLong, A1        ; we know that the opcode will be ROR, so load A1 to print message
00002EBA  103C 000E               2990              MOVE.B      #14, D0             ; command for trap call to display message
00002EBE  4E4F                    2991              TRAP        #15                 ; trap call
00002EC0                          2992  
00002EC0  43F9 000035E9           2993              LEA         space, A1        ; we know that the opcode will be ROR, so load A1 to print message
00002EC6  103C 000E               2994              MOVE.B      #14, D0             ; command for trap call to display message
00002ECA  4E4F                    2995              TRAP        #15                 ; trap call
00002ECC                          2996           
00002ECC                          2997  
00002ECC  6000 0002               2998              BRA         CheckDR
00002ED0                          2999  
00002ED0                          3000  CheckDR     
00002ED0                          3001              
00002ED0                          3002                
00002ED0  3218                    3003              MOVE.W      (A0)+, D1           ; Taking in next word
00002ED2  BC7C 0000               3004              CMP         #zero,D6
00002ED6  6700 0034               3005              BEQ         printRegMem
00002EDA  BC7C 0001               3006              CMP         #one,D6
00002EDE  6700 0004               3007              BEQ         printStack
00002EE2  609A                    3008              BRA         invalid
00002EE4                          3009              
00002EE4                          3010  printStack 
00002EE4  43F9 0000367E           3011              LEA         stack,A1
00002EEA  103C 000E               3012              MOVE.B      #14, D0             ; command for trap call to display message
00002EEE  4E4F                    3013              TRAP        #15                 ; trap call
00002EF0                          3014  
00002EF0  43F9 000035F8           3015              LEA         inc,A1
00002EF6  103C 000E               3016              MOVE.B      #14, D0             ; command for trap call to display message
00002EFA  4E4F                    3017              TRAP        #15                 ; trap call
00002EFC                          3018              
00002EFC  43F9 000035F0           3019              LEA         comma,A1
00002F02  103C 000E               3020              MOVE.B      #14, D0             ; command for trap call to display message
00002F06  4E4F                    3021              TRAP        #15                 ; trap call
00002F08                          3022              
00002F08                          3023              
00002F08  6000 0002               3024              BRA         printRegMem
00002F0C                          3025             
00002F0C                          3026  printRegMem 
00002F0C  4244                    3027              CLR         D4                  ; Using D4 to store predecrement mode addresses
00002F0E  1801                    3028              MOVE.B      D1,D4               ; Stores bits for D0-D7
00002F10                          3029              
00002F10  4245                    3030              CLR         D5
00002F12  1A01                    3031              MOVE.B      D1,D5
00002F14  CA7C 0001               3032              AND         #mask1,D5
00002F18  BA7C 0001               3033              CMP         #mask1,D5
00002F1C  6700 007A               3034              BEQ         DataReg0
00002F20                          3035              
00002F20  4245                    3036              CLR         D5
00002F22  1A01                    3037              MOVE.B      D1,D5
00002F24  CA7C 0002               3038              AND         #mask2,D5
00002F28  BA7C 0002               3039              CMP         #mask2,D5
00002F2C  6700 009A               3040              BEQ         DataReg1
00002F30                          3041  
00002F30  4245                    3042              CLR         D5
00002F32  1A01                    3043              MOVE.B      D1,D5
00002F34  CA7C 0004               3044              AND         #mask3,D5
00002F38  BA7C 0004               3045              CMP         #mask3,D5
00002F3C  6700 00CA               3046              BEQ         DataReg2            
00002F40                          3047              
00002F40  4245                    3048              CLR         D5
00002F42  1A01                    3049              MOVE.B      D1,D5
00002F44  CA7C 0008               3050              AND         #mask4,D5
00002F48  BA7C 0008               3051              CMP         #mask4,D5
00002F4C  6700 00FA               3052              BEQ         DataReg3            
00002F50                          3053              
00002F50  4245                    3054              CLR         D5
00002F52  1A01                    3055              MOVE.B      D1,D5
00002F54  CA7C 0010               3056              AND         #mask5,D5
00002F58  BA7C 0010               3057              CMP         #mask5,D5
00002F5C  6700 012A               3058              BEQ         DataReg4
00002F60                          3059  
00002F60  4245                    3060              CLR         D5
00002F62  1A01                    3061              MOVE.B      D1,D5
00002F64  CA7C 0020               3062              AND         #mask6,D5
00002F68  BA7C 0020               3063              CMP         #mask6,D5
00002F6C  6700 015A               3064              BEQ         DataReg5
00002F70                          3065  
00002F70  4245                    3066              CLR         D5
00002F72  1A01                    3067              MOVE.B      D1,D5
00002F74  CA7C 0040               3068              AND         #mask7,D5
00002F78  BA7C 0040               3069              CMP         #mask7,D5
00002F7C  6700 018A               3070              BEQ         DataReg6
00002F80                          3071  
00002F80  4245                    3072              CLR         D5
00002F82  1A01                    3073              MOVE.B      D1,D5
00002F84  CA7C 0080               3074              AND         #mask8,D5
00002F88  BA7C 0080               3075              CMP         #mask8,D5
00002F8C  6700 01BA               3076              BEQ         DataReg7
00002F90                          3077              
00002F90  6000 FEEC               3078              BRA         invalid
00002F94  6000 FEE8               3079              BRA         invalid        
00002F98                          3080              
00002F98                          3081  DataReg0
00002F98  43F9 000036A6           3082              LEA         dispD0, A1          ; Output string D0
00002F9E  103C 000E               3083              MOVE.B      #14, D0             ; command for trap call to display message
00002FA2  4E4F                    3084              TRAP        #15                 ; trap call
00002FA4                          3085              
00002FA4  4245                    3086              CLR         D5
00002FA6  1A01                    3087              MOVE.B      D1,D5
00002FA8  CA7C 0002               3088              AND         #mask2,D5
00002FAC  BA7C 0002               3089              CMP         #mask2,D5
00002FB0  6700 0006               3090              BEQ         Reg0Cont
00002FB4  6000 01A2               3091              BRA         printMem
00002FB8                          3092  Reg0Cont        
00002FB8  43F9 000035F6           3093              LEA         dec, A1             ; Output -
00002FBE  103C 000E               3094              MOVE.B      #14, D0             ; command for trap call to display message
00002FC2  4E4F                    3095              TRAP        #15                 ; trap call        
00002FC4  6000 0002               3096              BRA         DataReg1
00002FC8                          3097  
00002FC8                          3098  DataReg1
00002FC8  4245                    3099              CLR         D5
00002FCA  1A01                    3100              MOVE.B      D1,D5
00002FCC  CA7C 0005               3101              AND         #maskA,D5
00002FD0  BA7C 0005               3102              CMP         #maskA,D5
00002FD4  6700 0032               3103              BEQ         DataReg2
00002FD8                          3104              
00002FD8  43F9 000036A9           3105              LEA         dispD1, A1          ; Output string D0
00002FDE  103C 000E               3106              MOVE.B      #14, D0             ; command for trap call to display message
00002FE2  4E4F                    3107              TRAP        #15                 ; trap call
00002FE4                          3108              
00002FE4  4245                    3109              CLR         D5
00002FE6  1A01                    3110              MOVE.B      D1,D5
00002FE8  CA7C 0004               3111              AND         #mask3,D5
00002FEC  BA7C 0004               3112              CMP         #mask3,D5
00002FF0  6700 0006               3113              BEQ         Reg1Cont
00002FF4  6000 0162               3114              BRA         printMem
00002FF8                          3115  Reg1Cont        
00002FF8  43F9 000035F6           3116              LEA         dec, A1             ; Output -
00002FFE  103C 000E               3117              MOVE.B      #14, D0             ; command for trap call to display message
00003002  4E4F                    3118              TRAP        #15                 ; trap call        
00003004  6000 0002               3119              BRA         DataReg2
00003008                          3120  
00003008                          3121  
00003008                          3122  DataReg2
00003008  4245                    3123              CLR         D5
0000300A  1A01                    3124              MOVE.B      D1,D5
0000300C  CA7C 000A               3125              AND         #maskB,D5
00003010  BA7C 000A               3126              CMP         #maskB,D5
00003014  6700 0032               3127              BEQ         DataReg3
00003018                          3128              
00003018                          3129              
00003018  43F9 000036AC           3130              LEA         dispD2, A1          ; Output string D0
0000301E  103C 000E               3131              MOVE.B      #14, D0             ; command for trap call to display message
00003022  4E4F                    3132              TRAP        #15                 ; trap call
00003024                          3133              
00003024  4245                    3134              CLR         D5
00003026  1A01                    3135              MOVE.B      D1,D5
00003028  CA7C 0008               3136              AND         #mask4,D5
0000302C  BA7C 0008               3137              CMP         #mask4,D5
00003030  6700 0006               3138              BEQ         Reg2Cont
00003034  6000 0122               3139              BRA         printMem
00003038                          3140  Reg2Cont        
00003038  43F9 000035F6           3141              LEA         dec, A1             ; Output -
0000303E  103C 000E               3142              MOVE.B      #14, D0             ; command for trap call to display message
00003042  4E4F                    3143              TRAP        #15                 ; trap call        
00003044  6000 0002               3144              BRA         DataReg3
00003048                          3145  
00003048                          3146  DataReg3
00003048  4245                    3147              CLR         D5
0000304A  1A01                    3148              MOVE.B      D1,D5
0000304C  CA7C 0014               3149              AND         #maskC,D5
00003050  BA7C 0014               3150              CMP         #maskC,D5
00003054  6700 0032               3151              BEQ         DataReg4
00003058                          3152              
00003058  43F9 000036AF           3153              LEA         dispD3, A1          ; Output string D0
0000305E  103C 000E               3154              MOVE.B      #14, D0             ; command for trap call to display message
00003062  4E4F                    3155              TRAP        #15                 ; trap call
00003064                          3156              
00003064  4245                    3157              CLR         D5
00003066  1A01                    3158              MOVE.B      D1,D5
00003068  CA7C 0010               3159              AND         #mask5,D5
0000306C  BA7C 0010               3160              CMP         #mask5,D5
00003070  6700 0006               3161              BEQ         Reg3Cont
00003074  6000 00E2               3162              BRA         printMem
00003078                          3163  Reg3Cont        
00003078  43F9 000035F6           3164              LEA         dec, A1             ; Output -
0000307E  103C 000E               3165              MOVE.B      #14, D0             ; command for trap call to display message
00003082  4E4F                    3166              TRAP        #15                 ; trap call        
00003084  6000 0002               3167              BRA         DataReg4
00003088                          3168  
00003088                          3169  
00003088                          3170  DataReg4
00003088  4245                    3171              CLR         D5
0000308A  1A01                    3172              MOVE.B      D1,D5
0000308C  CA7C 0028               3173              AND         #maskD,D5
00003090  BA7C 0028               3174              CMP         #maskD,D5
00003094  6700 0032               3175              BEQ         DataReg5
00003098                          3176              
00003098  43F9 000036B2           3177              LEA         dispD4, A1          ; Output string D0
0000309E  103C 000E               3178              MOVE.B      #14, D0             ; command for trap call to display message
000030A2  4E4F                    3179              TRAP        #15                 ; trap call
000030A4                          3180              
000030A4  4245                    3181              CLR         D5
000030A6  1A01                    3182              MOVE.B      D1,D5
000030A8  CA7C 0020               3183              AND         #mask6,D5
000030AC  BA7C 0020               3184              CMP         #mask6,D5
000030B0  6700 0006               3185              BEQ         Reg4Cont
000030B4  6000 00A2               3186              BRA         printMem
000030B8                          3187  Reg4Cont        
000030B8  43F9 000035F6           3188              LEA         dec, A1             ; Output -
000030BE  103C 000E               3189              MOVE.B      #14, D0             ; command for trap call to display message
000030C2  4E4F                    3190              TRAP        #15                 ; trap call        
000030C4  6000 0002               3191              BRA         DataReg5
000030C8                          3192  
000030C8                          3193  DataReg5
000030C8  4245                    3194              CLR         D5
000030CA  1A01                    3195              MOVE.B      D1,D5
000030CC  CA7C 0050               3196              AND         #maskE,D5
000030D0  BA7C 0050               3197              CMP         #maskE,D5
000030D4  6700 0032               3198              BEQ         DataReg6
000030D8                          3199              
000030D8  43F9 000036B5           3200              LEA         dispD5, A1          ; Output string D0
000030DE  103C 000E               3201              MOVE.B      #14, D0             ; command for trap call to display message
000030E2  4E4F                    3202              TRAP        #15                 ; trap call
000030E4                          3203              
000030E4  4245                    3204              CLR         D5
000030E6  1A01                    3205              MOVE.B      D1,D5
000030E8  CA7C 0040               3206              AND         #mask7,D5
000030EC  BA7C 0040               3207              CMP         #mask7,D5
000030F0  6700 0006               3208              BEQ         Reg5Cont
000030F4  6000 0062               3209              BRA         printMem
000030F8                          3210  Reg5Cont        
000030F8  43F9 000035F6           3211              LEA         dec, A1             ; Output -
000030FE  103C 000E               3212              MOVE.B      #14, D0             ; command for trap call to display message
00003102  4E4F                    3213              TRAP        #15                 ; trap call        
00003104  6000 0042               3214              BRA         DataReg7
00003108                          3215  
00003108                          3216  DataReg6
00003108  4245                    3217              CLR         D5
0000310A  1A01                    3218              MOVE.B      D1,D5
0000310C  CA7C 00A0               3219              AND         #maskF,D5
00003110  BA7C 00A0               3220              CMP         #maskF,D5
00003114  6700 0032               3221              BEQ         DataReg7
00003118                          3222  
00003118  43F9 000036B8           3223              LEA         dispD6, A1          ; Output string D0
0000311E  103C 000E               3224              MOVE.B      #14, D0             ; command for trap call to display message
00003122  4E4F                    3225              TRAP        #15                 ; trap call
00003124                          3226              
00003124  4245                    3227              CLR         D5
00003126  1A01                    3228              MOVE.B      D1,D5
00003128  CA7C 0080               3229              AND         #mask8,D5
0000312C  BA7C 0080               3230              CMP         #mask8,D5
00003130  6700 0006               3231              BEQ         Reg6Cont
00003134  6000 0022               3232              BRA         printMem
00003138                          3233  Reg6Cont        
00003138  43F9 000035F6           3234              LEA         dec, A1             ; Output -
0000313E  103C 000E               3235              MOVE.B      #14, D0             ; command for trap call to display message
00003142  4E4F                    3236              TRAP        #15                 ; trap call        
00003144  6000 0002               3237              BRA         DataReg7
00003148                          3238  
00003148                          3239  DataReg7    
00003148  43F9 000036BB           3240              LEA         dispD7, A1             ; Output -
0000314E  103C 000E               3241              MOVE.B      #14, D0             ; command for trap call to display message
00003152  4E4F                    3242              TRAP        #15                 ; trap call        
00003154  6000 0002               3243              BRA         printMem            
00003158                          3244  printMem                                    ; Made this function in order to reuse if DR is 1
00003158  6000 0002               3245              BRA         printMemNow
0000315C                          3246  printMemNow               
0000315C  43F9 0000367C           3247              LEA         slash, A1           ; Display slash
00003162  103C 000E               3248              MOVE.B      #14, D0             ; command for trap call to display message
00003166  4E4F                    3249              TRAP        #15                 ; trap call
00003168                          3250           
00003168  4244                    3251              CLR         D4                  ; Using D4 to store predecrement mode addresses
0000316A  3801                    3252              MOVE.W      D1,D4               ; Stores bits for D0-D7
0000316C  E044                    3253              ASR         #eight,D4
0000316E                          3254              
0000316E  4245                    3255              CLR         D5
00003170  1A04                    3256              MOVE.B      D4,D5
00003172  CA7C 0001               3257              AND         #mask1,D5
00003176  BA7C 0001               3258              CMP         #mask1,D5
0000317A  6700 0072               3259              BEQ         AddrReg0
0000317E                          3260              
0000317E  4245                    3261              CLR         D5
00003180  1A04                    3262              MOVE.B      D4,D5
00003182  CA7C 0002               3263              AND         #mask2,D5
00003186  BA7C 0002               3264              CMP         #mask2,D5
0000318A  6700 0092               3265              BEQ         AddrReg1
0000318E                          3266  
0000318E  4245                    3267              CLR         D5
00003190  1A04                    3268              MOVE.B      D4,D5
00003192  CA7C 0004               3269              AND         #mask3,D5
00003196  BA7C 0004               3270              CMP         #mask3,D5
0000319A  6700 00C2               3271              BEQ         AddrReg2            
0000319E                          3272              
0000319E  4245                    3273              CLR         D5
000031A0  1A04                    3274              MOVE.B      D4,D5
000031A2  CA7C 0008               3275              AND         #mask4,D5
000031A6  BA7C 0008               3276              CMP         #mask4,D5
000031AA  6700 00F2               3277              BEQ         AddrReg3            
000031AE                          3278              
000031AE  4245                    3279              CLR         D5
000031B0  1A04                    3280              MOVE.B      D4,D5
000031B2  CA7C 0010               3281              AND         #mask5,D5
000031B6  BA7C 0010               3282              CMP         #mask5,D5
000031BA  6700 0122               3283              BEQ         AddrReg4
000031BE                          3284  
000031BE  4245                    3285              CLR         D5
000031C0  1A04                    3286              MOVE.B      D4,D5
000031C2  CA7C 0020               3287              AND         #mask6,D5
000031C6  BA7C 0020               3288              CMP         #mask6,D5
000031CA  6700 0152               3289              BEQ         AddrReg5
000031CE                          3290  
000031CE  4245                    3291              CLR         D5
000031D0  1A04                    3292              MOVE.B      D4,D5
000031D2  CA7C 0040               3293              AND         #mask7,D5
000031D6  BA7C 0040               3294              CMP         #mask7,D5
000031DA  6700 0182               3295              BEQ         AddrReg6
000031DE                          3296  
000031DE  4245                    3297              CLR         D5
000031E0  1A04                    3298              MOVE.B      D4,D5
000031E2  CA7C 0080               3299              AND         #mask8,D5
000031E6  BA7C 0080               3300              CMP         #mask8,D5
000031EA  6700 01B2               3301              BEQ         AddrReg7
000031EE                          3302  AddrReg0
000031EE  43F9 0000368C           3303              LEA         dispA0, A1          ; Output string D0
000031F4  103C 000E               3304              MOVE.B      #14, D0             ; command for trap call to display message
000031F8  4E4F                    3305              TRAP        #15                 ; trap call
000031FA                          3306              
000031FA  4245                    3307              CLR         D5
000031FC  1A01                    3308              MOVE.B      D1,D5
000031FE  CA7C 0002               3309              AND         #mask2,D5
00003202  BA7C 0002               3310              CMP         #mask2,D5
00003206  6700 0006               3311              BEQ         Addr0Cont
0000320A  6000 01A2               3312              BRA         endMOVE
0000320E                          3313  Addr0Cont        
0000320E  43F9 000035F6           3314              LEA         dec, A1             ; Output -
00003214  103C 000E               3315              MOVE.B      #14, D0             ; command for trap call to display message
00003218  4E4F                    3316              TRAP        #15                 ; trap call        
0000321A  6000 0002               3317              BRA         AddrReg1
0000321E                          3318  
0000321E                          3319  AddrReg1
0000321E  4245                    3320              CLR         D5
00003220  1A04                    3321              MOVE.B      D4,D5
00003222  CA7C 0005               3322              AND         #maskA,D5
00003226  BA7C 0005               3323              CMP         #maskA,D5
0000322A  6700 0032               3324              BEQ         AddrReg2
0000322E                          3325              
0000322E  43F9 0000368F           3326              LEA         dispA1, A1          ; Output string D0
00003234  103C 000E               3327              MOVE.B      #14, D0             ; command for trap call to display message
00003238  4E4F                    3328              TRAP        #15                 ; trap call
0000323A                          3329              
0000323A  4245                    3330              CLR         D5
0000323C  1A04                    3331              MOVE.B      D4,D5
0000323E  CA7C 0004               3332              AND         #mask3,D5
00003242  BA7C 0004               3333              CMP         #mask3,D5
00003246  6700 0006               3334              BEQ         Addr1Cont
0000324A  6000 0162               3335              BRA         endMOVE
0000324E                          3336  Addr1Cont        
0000324E  43F9 000035F6           3337              LEA         dec, A1             ; Output -
00003254  103C 000E               3338              MOVE.B      #14, D0             ; command for trap call to display message
00003258  4E4F                    3339              TRAP        #15                 ; trap call        
0000325A  6000 0002               3340              BRA         AddrReg2
0000325E                          3341  
0000325E                          3342  
0000325E                          3343  AddrReg2
0000325E  4245                    3344              CLR         D5
00003260  1A04                    3345              MOVE.B      D4,D5
00003262  CA7C 000A               3346              AND         #maskB,D5
00003266  BA7C 000A               3347              CMP         #maskB,D5
0000326A  6700 0032               3348              BEQ         AddrReg3
0000326E                          3349              
0000326E                          3350              
0000326E  43F9 00003692           3351              LEA         dispA2, A1          ; Output string D0
00003274  103C 000E               3352              MOVE.B      #14, D0             ; command for trap call to display message
00003278  4E4F                    3353              TRAP        #15                 ; trap call
0000327A                          3354              
0000327A  4245                    3355              CLR         D5
0000327C  1A04                    3356              MOVE.B      D4,D5
0000327E  CA7C 0008               3357              AND         #mask4,D5
00003282  BA7C 0008               3358              CMP         #mask4,D5
00003286  6700 0006               3359              BEQ         Addr2Cont
0000328A  6000 0122               3360              BRA         endMOVE
0000328E                          3361  Addr2Cont        
0000328E  43F9 000035F6           3362              LEA         dec, A1             ; Output -
00003294  103C 000E               3363              MOVE.B      #14, D0             ; command for trap call to display message
00003298  4E4F                    3364              TRAP        #15                 ; trap call        
0000329A  6000 0002               3365              BRA         AddrReg3
0000329E                          3366  
0000329E                          3367  AddrReg3
0000329E  4245                    3368              CLR         D5
000032A0  1A04                    3369              MOVE.B      D4,D5
000032A2  CA7C 0014               3370              AND         #maskC,D5
000032A6  BA7C 0014               3371              CMP         #maskC,D5
000032AA  6700 0032               3372              BEQ         AddrReg4
000032AE                          3373              
000032AE  43F9 00003695           3374              LEA         dispA3, A1          ; Output string D0
000032B4  103C 000E               3375              MOVE.B      #14, D0             ; command for trap call to display message
000032B8  4E4F                    3376              TRAP        #15                 ; trap call
000032BA                          3377              
000032BA  4245                    3378              CLR         D5
000032BC  1A04                    3379              MOVE.B      D4,D5
000032BE  CA7C 0010               3380              AND         #mask5,D5
000032C2  BA7C 0010               3381              CMP         #mask5,D5
000032C6  6700 0006               3382              BEQ         Addr3Cont
000032CA  6000 00E2               3383              BRA         endMOVE
000032CE                          3384  Addr3Cont        
000032CE  43F9 000035F6           3385              LEA         dec, A1             ; Output -
000032D4  103C 000E               3386              MOVE.B      #14, D0             ; command for trap call to display message
000032D8  4E4F                    3387              TRAP        #15                 ; trap call        
000032DA  6000 0002               3388              BRA         AddrReg4
000032DE                          3389  
000032DE                          3390  
000032DE                          3391  AddrReg4
000032DE  4245                    3392              CLR         D5
000032E0  1A04                    3393              MOVE.B      D4,D5
000032E2  CA7C 0028               3394              AND         #maskD,D5
000032E6  BA7C 0028               3395              CMP         #maskD,D5
000032EA  6700 0032               3396              BEQ         AddrReg5
000032EE                          3397              
000032EE  43F9 00003698           3398              LEA         dispA4, A1          ; Output string D0
000032F4  103C 000E               3399              MOVE.B      #14, D0             ; command for trap call to display message
000032F8  4E4F                    3400              TRAP        #15                 ; trap call
000032FA                          3401              
000032FA  4245                    3402              CLR         D5
000032FC  1A04                    3403              MOVE.B      D4,D5
000032FE  CA7C 0020               3404              AND         #mask6,D5
00003302  BA7C 0020               3405              CMP         #mask6,D5
00003306  6700 0006               3406              BEQ         Addr4Cont
0000330A  6000 00A2               3407              BRA         endMOVE
0000330E                          3408  Addr4Cont        
0000330E  43F9 000035F6           3409              LEA         dec, A1             ; Output -
00003314  103C 000E               3410              MOVE.B      #14, D0             ; command for trap call to display message
00003318  4E4F                    3411              TRAP        #15                 ; trap call        
0000331A  6000 0002               3412              BRA         AddrReg5
0000331E                          3413  AddrReg5
0000331E  4245                    3414              CLR         D5
00003320  1A04                    3415              MOVE.B      D4,D5
00003322  CA7C 0050               3416              AND         #maskE,D5
00003326  BA7C 0050               3417              CMP         #maskE,D5
0000332A  6700 0032               3418              BEQ         AddrReg6
0000332E                          3419              
0000332E  43F9 0000369B           3420              LEA         dispA5, A1          ; Output string D0
00003334  103C 000E               3421              MOVE.B      #14, D0             ; command for trap call to display message
00003338  4E4F                    3422              TRAP        #15                 ; trap call
0000333A                          3423              
0000333A  4245                    3424              CLR         D5
0000333C  1A04                    3425              MOVE.B      D4,D5
0000333E  CA7C 0040               3426              AND         #mask7,D5
00003342  BA7C 0040               3427              CMP         #mask7,D5
00003346  6700 0006               3428              BEQ         Addr5Cont
0000334A  6000 0062               3429              BRA         endMOVE
0000334E                          3430  Addr5Cont        
0000334E  43F9 000035F6           3431              LEA         dec, A1             ; Output -
00003354  103C 000E               3432              MOVE.B      #14, D0             ; command for trap call to display message
00003358  4E4F                    3433              TRAP        #15                 ; trap call        
0000335A  6000 0042               3434              BRA         AddrReg7
0000335E                          3435  
0000335E                          3436  AddrReg6
0000335E  4245                    3437              CLR         D5
00003360  1A04                    3438              MOVE.B      D4,D5
00003362  CA7C 00A0               3439              AND         #maskF,D5
00003366  BA7C 00A0               3440              CMP         #maskF,D5
0000336A  6700 0032               3441              BEQ         AddrReg7
0000336E                          3442  
0000336E  43F9 0000369E           3443              LEA         dispA6, A1          ; Output string D0
00003374  103C 000E               3444              MOVE.B      #14, D0             ; command for trap call to display message
00003378  4E4F                    3445              TRAP        #15                 ; trap call
0000337A                          3446              
0000337A  4245                    3447              CLR         D5
0000337C  1A04                    3448              MOVE.B      D4,D5
0000337E  CA7C 0080               3449              AND         #mask8,D5
00003382  BA7C 0080               3450              CMP         #mask8,D5
00003386  6700 0006               3451              BEQ         Addr6Cont
0000338A  6000 0022               3452              BRA         endMOVE
0000338E                          3453  Addr6Cont        
0000338E  43F9 000035F6           3454              LEA         dec, A1             ; Output -
00003394  103C 000E               3455              MOVE.B      #14, D0             ; command for trap call to display message
00003398  4E4F                    3456              TRAP        #15                 ; trap call        
0000339A  6000 0002               3457              BRA         AddrReg7
0000339E                          3458  
0000339E                          3459  AddrReg7    
0000339E  43F9 000036A1           3460              LEA         dispA7, A1          ; Output -
000033A4  103C 000E               3461              MOVE.B      #14, D0             ; command for trap call to display message
000033A8  4E4F                    3462              TRAP        #15                 ; trap call        
000033AA  6000 0002               3463              BRA         endMOVE
000033AE                          3464  
000033AE                          3465  endMOVE
000033AE  4CDF 7EFF               3466              MOVEM.L  (SP)+, D0-D7/A1-A6
000033B2  4E75                    3467              RTS
000033B4                          3468  endMove1                                    ; Used if MOVEM has DR is 1
000033B4  4CDF 7EFF               3469              MOVEM.L  (SP)+, D0-D7/A1-A6
000033B8  4E75                    3470              RTS
000033BA                          3471  
000033BA                          3472  *this subroutine displays hex code stored in D1. It displays based on the number of 
000033BA                          3473  *It displays based on the number of hex to display which is stored in D0. If it is a
000033BA                          3474  *long or word to display, it will figure out the ascii character and add $37 if it
000033BA                          3475  *is a letter, and $30 if its a number. It will then load the character into D1 and 
000033BA                          3476  *display it via trap task 6 and loop however many times is needed, 4 or 8. If a word
000033BA                          3477  *needs to be displayed, it will roll the bits over so that, the hex are shifted by a word.
000033BA  48E7 FF7E               3478  outHex      MOVEM.L D0-D7/A1-A6, -(SP)
000033BE  4243                    3479              CLR     D3
000033C0  4244                    3480              CLR     D4
000033C2  1800                    3481              MOVE.B  D0, D4
000033C4  2601                    3482              MOVE.L  D1, D3
000033C6  B03C 0004               3483              CMP.B   #4, D0
000033CA  6700 0006               3484              BEQ     moveOver
000033CE  6000 0006               3485              BRA     dispLOOP
000033D2                          3486              
000033D2  E19B                    3487  moveOver    ROL.L   #8,D3
000033D4  E19B                    3488              ROL.L   #8,D3
000033D6                          3489              
000033D6  B83C 0000               3490  dispLOOP    CMP.B   #0, D4
000033DA  6700 0042               3491              BEQ     endDispSub
000033DE  E99B                    3492              ROL.L   #4, D3
000033E0  4245                    3493              CLR     D5
000033E2  1A03                    3494              MOVE.B  D3, D5 
000033E4  CABC 0000000F           3495              AND.L   #$0F, D5
000033EA  BA3C 000A               3496              CMP.B   #10, D5
000033EE  6D00 0006               3497              BLT     DLnine
000033F2  6000 0016               3498              BRA     DLetters
000033F6                          3499              
000033F6  0645 0030               3500  DLnine      ADD     #$30, D5
000033FA  4241                    3501              CLR     D1
000033FC  1205                    3502              MOVE.B  D5, D1
000033FE  4240                    3503              CLR     D0
00003400  103C 0006               3504              MOVE.B  #6, D0
00003404  4E4F                    3505              TRAP    #15
00003406  5344                    3506              SUB     #1, D4
00003408  60CC                    3507              BRA     dispLOOP  
0000340A                          3508   
0000340A  0645 0037               3509  DLetters    ADD     #$37, D5
0000340E  4241                    3510              CLR     D1
00003410  1205                    3511              MOVE.B  D5, D1
00003412  4240                    3512              CLR     D0
00003414  103C 0006               3513              MOVE.B  #6, D0
00003418  4E4F                    3514              TRAP    #15
0000341A  5344                    3515              SUB     #1, D4
0000341C  60B8                    3516              BRA     dispLOOP        
0000341E                          3517  
0000341E  4CDF 7EFF               3518  endDispSub  MOVEM.L  (SP)+, D0-D7/A1-A6
00003422  4E75                    3519              RTS
00003424                          3520  
00003424                          3521  *the following subroutine gets the string address from the user
00003424                          3522  *and converts it to Hex for a starting/ending address. it is done 
00003424                          3523  *by checking each byte at address A1, and converting it from ascii to 
00003424                          3524  *hex number. If the user enters an invalid character string, the
00003424                          3525  *program will have a simhalt.
00003424  48E7 1F3E               3526  Address MOVEM.L D3-D7/A2-A6, -(SP)
00003428  4242                    3527  Retry   CLR     D2
0000342A  4243                    3528          CLR     D3
0000342C  B23C 0004               3529          CMP.B   #4, D1
00003430  6700 000E               3530          BEQ     subLOOP
00003434  B23C 0008               3531          CMP.B   #8, D1
00003438  6700 0006               3532          BEQ     subLOOP
0000343C  6000 0126               3533          BRA     ADDinvalid        
00003440                          3534          
00003440  E85C                    3535  subLOOP ROR     #4, D4
00003442  1404                    3536          MOVE.B  D4, D2
00003444  4244                    3537          CLR     D4
00003446  4245                    3538          CLR     D5
00003448  B601                    3539          CMP.B   D1, D3
0000344A  6700 012E               3540          BEQ     endLOOP
0000344E  5443                    3541          ADD.W   #2, D3
00003450  E19A                    3542          ROL.L   #8, D2
00003452                          3543          
00003452  E95C                    3544  bytLOOP ROL     #4, D4
00003454                          3545          
00003454  0C11 0030               3546          CMP.B   #$30, (A1)
00003458  6700 007E               3547          BEQ     hZero 
0000345C  0C11 0031               3548          CMP.B   #$31, (A1)
00003460  6700 007E               3549          BEQ     hOne
00003464  0C11 0032               3550          CMP.B   #$32, (A1)
00003468  6700 007E               3551          BEQ     hTwo
0000346C  0C11 0033               3552          CMP.B   #$33, (A1)
00003470  6700 007E               3553          BEQ     hThree
00003474  0C11 0034               3554          CMP.B   #$34, (A1)
00003478  6700 007E               3555          BEQ     hFour
0000347C  0C11 0035               3556          CMP.B   #$35, (A1)
00003480  6700 007E               3557          BEQ     hFive
00003484  0C11 0036               3558          CMP.B   #$36, (A1)
00003488  6700 007E               3559          BEQ     hSix
0000348C  0C11 0037               3560          CMP.B   #$37, (A1)
00003490  6700 007E               3561          BEQ     hSeven
00003494  0C11 0038               3562          CMP.B   #$38, (A1)
00003498  6700 007E               3563          BEQ     hEight
0000349C  0C11 0039               3564          CMP.B   #$39, (A1)
000034A0  6700 007E               3565          BEQ     hNine
000034A4  0C11 0041               3566          CMP.B   #$41, (A1)
000034A8  6700 007E               3567          BEQ     hA
000034AC  0C11 0042               3568          CMP.B   #$42, (A1)
000034B0  6700 007E               3569          BEQ     hB
000034B4  0C11 0043               3570          CMP.B   #$43, (A1)
000034B8  6700 007E               3571          BEQ     hC
000034BC  0C11 0044               3572          CMP.B   #$44, (A1)
000034C0  6700 007E               3573          BEQ     hD
000034C4  0C11 0045               3574          CMP.B   #$45, (A1)
000034C8  6700 007E               3575          BEQ     hE
000034CC  0C11 0046               3576          CMP.B   #$46, (A1)
000034D0  6700 007E               3577          BEQ     hF 
000034D4  6000 F9A8               3578          BRA     invalid      
000034D8  183C 0000               3579  hZero   MOVE.B  #$00, D4
000034DC  6000 0076               3580          BRA     nextH
000034E0  183C 0010               3581  hOne    MOVE.B  #$10, D4
000034E4  6000 006E               3582          BRA     nextH
000034E8  183C 0020               3583  hTwo    MOVE.B  #$20, D4
000034EC  6000 0066               3584          BRA     nextH
000034F0  183C 0030               3585  hThree  MOVE.B  #$30, D4
000034F4  6000 005E               3586          BRA     nextH
000034F8  183C 0040               3587  hFour   MOVE.B  #$40, D4
000034FC  6000 0056               3588          BRA     nextH
00003500  183C 0050               3589  hFive   MOVE.B  #$50, D4
00003504  6000 004E               3590          BRA     nextH
00003508  183C 0060               3591  hSix    MOVE.B  #$60, D4
0000350C  6000 0046               3592          BRA     nextH
00003510  183C 0070               3593  hSeven  MOVE.B  #$70, D4
00003514  6000 003E               3594          BRA     nextH
00003518  183C 0080               3595  hEight  MOVE.B  #$80, D4
0000351C  6000 0036               3596          BRA     nextH
00003520  183C 0090               3597  hNine   MOVE.B  #$90, D4
00003524  6000 002E               3598          BRA     nextH
00003528  183C 00A0               3599  hA      MOVE.B  #$A0, D4
0000352C  6000 0026               3600          BRA     nextH
00003530  183C 00B0               3601  hB      MOVE.B  #$B0, D4
00003534  6000 001E               3602          BRA     nextH
00003538  183C 00C0               3603  hC      MOVE.B  #$C0, D4
0000353C  6000 0016               3604          BRA     nextH
00003540  183C 00D0               3605  hD      MOVE.B  #$D0, D4
00003544  6000 000E               3606          BRA     nextH
00003548  183C 00E0               3607  hE      MOVE.B  #$E0, D4
0000354C  6000 0006               3608          BRA     nextH
00003550  183C 00F0               3609  hF      MOVE.B  #$F0, D4
00003554                          3610  
00003554  1019                    3611  nextH   MOVE.B  (A1)+, D0
00003556  5245                    3612          ADD     #1, D5
00003558  BA3C 0002               3613          CMP.B   #2, D5
0000355C  6700 FEE2               3614          BEQ     subLOOP
00003560  6000 FEF0               3615          BRA     bytLOOP
00003564                          3616          
00003564  43F9 000035C6           3617  ADDinvalid  LEA     errorMessage, A1
0000356A  103C 000E               3618              MOVE.B  #14, D0
0000356E  4E4F                    3619              TRAP    #15    
00003570                          3620      
00003570  103C 0002               3621              MOVE.B  #2, D0
00003574  4E4F                    3622              TRAP    #15
00003576                          3623  
00003576  6000 FEB0               3624              BRA     Retry
0000357A                          3625     
0000357A  4CDF 7CF8               3626  endLOOP MOVEM.L  (SP)+, D3-D7/A2-A6
0000357E  4E75                    3627          RTS
00003580                          3628  
00003580                          3629  printInvalid
00003580                          3630  endPROG    
00003580                          3631  
00003580  FFFF FFFF               3632      SIMHALT                             ; halt simulator
00003584                          3633  
00003584= 45 6E 74 65 72 20 ...   3634  startingMessage DC.B    'Enter Starting Address (in hex): ', 0
000035A6= 45 6E 74 65 72 20 ...   3635  endingMessage   DC.B    'Enter Ending Address (in hex): ', 0
000035C6= 49 6E 63 6F 72 72 ...   3636  errorMessage    DC.B    'Incorrect Address, try again: ', 0
000035E5                          3637  
000035E5= 20 0D 0A 00             3638  newLine     DC.B    ' ', CR, LF, 0
000035E9= 20 20 00                3639  space       DC.B    '  ', 0
000035EC                          3640  
000035EC= 23 00                   3641  hashTag     DC.B    '#', 0
000035EE= 24 00                   3642  dispHex     DC.B    '$', 0
000035F0= 2C 00                   3643  comma       DC.B    ',', 0
000035F2                          3644  
000035F2= 28 00                   3645  opPer       DC.B    '(', 0
000035F4= 29 00                   3646  clPer       DC.B    ')', 0
000035F6= 2D 00                   3647  dec         DC.B    '-', 0
000035F8= 2B 00                   3648  inc         DC.B    '+', 0
000035FA                          3649  
000035FA= 4F 52 49 00             3650  ORImatch    DC.B    'ORI', 0
000035FE= 43 4D 50 49 00          3651  CMPImatch   DC.B    'CMPI', 0
00003603= 42 43 4C 52 00          3652  BCLRmatch   DC.B    'BCLR', 0
00003608= 4D 4F 56 45 00          3653  MOVEmatch   DC.B    'MOVE', 0
0000360D= 4D 4F 56 45 41 00       3654  MOVEAmatch  DC.B    'MOVEA', 0
00003613= 4E 45 47 00             3655  NEGmatch    DC.B    'NEG', 0
00003617= 52 54 53 00             3656  RTSmatch    DC.B    'RTS', 0
0000361B= 4A 53 52 00             3657  JSRmatch    DC.B    'JSR', 0
0000361F= 4D 4F 56 45 4D 00       3658  MOVEMmatch  DC.B    'MOVEM', 0
00003625= 4C 45 41 00             3659  LEAmatch    DC.B    'LEA', 0
00003629= 53 55 42 51 00          3660  SUBQmatch   DC.B    'SUBQ', 0
0000362E= 42 52 41 00             3661  BRAmatch    DC.B    'BRA', 0
00003632= 42 43 53 00             3662  BCSmatch    DC.B    'BCS', 0
00003636= 42 56 43 00             3663  BVCmatch    DC.B    'BVC', 0
0000363A= 42 47 45 00             3664  BGEmatch    DC.B    'BGE', 0
0000363E= 42 4C 54 00             3665  BLTmatch    DC.B    'BLT', 0
00003642= 44 49 56 53 00          3666  DIVSmatch   DC.B    'DIVS', 0
00003647= 4F 52 00                3667  ORmatch     DC.B    'OR', 0
0000364A= 53 55 42 00             3668  SUBmatch    DC.B    'SUB', 0
0000364E= 45 4F 52 00             3669  EORmatch    DC.B    'EOR', 0
00003652= 43 4D 50 00             3670  CMPmatch    DC.B    'CMP', 0
00003656= 4D 55 4C 53 00          3671  MULSmatch   DC.B    'MULS', 0
0000365B= 41 44 44 00             3672  ADDmatch    DC.B    'ADD', 0
0000365F= 41 44 44 41 00          3673  ADDAmatch   DC.B    'ADDA', 0
00003664= 4C 53 52 00             3674  LSRmatch    DC.B    'LSR', 0
00003668= 4C 53 4C 00             3675  LSLmatch    DC.B    'LSL', 0
0000366C= 41 53 52 00             3676  ASRmatch    DC.B    'ASR', 0
00003670= 41 53 4C 00             3677  ASLmatch    DC.B    'ASL', 0
00003674= 52 4F 52 00             3678  RORmatch    DC.B    'ROR', 0
00003678= 52 4F 4C 00             3679  ROLmatch    DC.B    'ROL', 0
0000367C                          3680  
0000367C= 2F 00                   3681  slash       DC.B    '/', 0
0000367E= 28 53 50 29 00          3682  stack       DC.B    '(SP)', 0
00003683                          3683   
00003683= 2E 42 00                3684  dispByte    DC.B    '.B', 0
00003686= 2E 57 00                3685  dispWord    DC.B    '.W', 0
00003689= 2E 4C 00                3686  dispLong    DC.B    '.L', 0
0000368C                          3687  
0000368C= 41 30 00                3688  dispA0      DC.B    'A0', 0
0000368F= 41 31 00                3689  dispA1      DC.B    'A1', 0
00003692= 41 32 00                3690  dispA2      DC.B    'A2', 0
00003695= 41 33 00                3691  dispA3      DC.B    'A3', 0
00003698= 41 34 00                3692  dispA4      DC.B    'A4', 0
0000369B= 41 35 00                3693  dispA5      DC.B    'A5', 0
0000369E= 41 36 00                3694  dispA6      DC.B    'A6', 0
000036A1= 41 37 00                3695  dispA7      DC.B    'A7', 0
000036A4                          3696  
000036A4= 44 00                   3697  dispD       DC.B    'D',0
000036A6= 44 30 00                3698  dispD0      DC.B    'D0', 0
000036A9= 44 31 00                3699  dispD1      DC.B    'D1', 0
000036AC= 44 32 00                3700  dispD2      DC.B    'D2', 0
000036AF= 44 33 00                3701  dispD3      DC.B    'D3', 0
000036B2= 44 34 00                3702  dispD4      DC.B    'D4', 0
000036B5= 44 35 00                3703  dispD5      DC.B    'D5', 0
000036B8= 44 36 00                3704  dispD6      DC.B    'D6', 0
000036BB= 44 37 00                3705  dispD7      DC.B    'D7', 0 
000036BE                          3706   
000036BE                          3707             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             2DFE
ABSSHORT            2DC6
ADDAMATCH           365F
ADDINVALID          3564
ADDMATCH            365B
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ADDR0CONT           320E
ADDR1CONT           324E
ADDR2CONT           328E
ADDR3CONT           32CE
ADDR4CONT           330E
ADDR5CONT           334E
ADDR6CONT           338E
ADDRESS             3424
ADDRREG0            31EE
ADDRREG1            321E
ADDRREG2            325E
ADDRREG3            329E
ADDRREG4            32DE
ADDRREG5            331E
ADDRREG6            335E
ADDRREG7            339E
ASLMATCH            3670
ASRMATCH            366C
BCLRMATCH           3603
BCSMATCH            3632
BGEMATCH            363A
BLTMATCH            363E
BRAEIGHT            1142
BRAELEVEN           1146
BRAFIVE             1112
BRAFOUR             10F6
BRAFOURTEEN         119C
BRAMATCH            362E
BRANINE             1142
BRAONE              10EA
BRASIX              1116
BRATHIRTEEN         114A
BRATHREE            10F2
BRATWELVE           1146
BRATWO              10EE
BRAZERO             10BA
BVCMATCH            3636
BYTLOOP             3452
CHECKDR             2ED0
CLPER               35F4
CMPIMATCH           35FE
CMPMATCH            3652
COMMA               35F0
CR                  D
DATAREG0            2F98
DATAREG1            2FC8
DATAREG2            3008
DATAREG3            3048
DATAREG4            3088
DATAREG5            30C8
DATAREG6            3108
DATAREG7            3148
DEC                 35F6
DISPA0              368C
DISPA1              368F
DISPA2              3692
DISPA3              3695
DISPA4              3698
DISPA5              369B
DISPA6              369E
DISPA7              36A1
DISPBYTE            3683
DISPD               36A4
DISPD0              36A6
DISPD1              36A9
DISPD2              36AC
DISPD3              36AF
DISPD4              36B2
DISPD5              36B5
DISPD6              36B8
DISPD7              36BB
DISPHEX             35EE
DISPIMM             2E36
DISPLAYA0           293E
DISPLAYA0A          2A0A
DISPLAYA0D          2CCE
DISPLAYA0P          2B36
DISPLAYA1           294E
DISPLAYA1A          2A26
DISPLAYA1D          2CEA
DISPLAYA1P          2B5E
DISPLAYA2           295E
DISPLAYA2A          2A42
DISPLAYA2D          2D06
DISPLAYA2P          2B86
DISPLAYA3           296E
DISPLAYA3A          2A5E
DISPLAYA3D          2D22
DISPLAYA3P          2BAE
DISPLAYA4           297E
DISPLAYA4A          2A7A
DISPLAYA4D          2D3E
DISPLAYA4P          2BD6
DISPLAYA5           298E
DISPLAYA5A          2A96
DISPLAYA5D          2D5A
DISPLAYA5P          2BFE
DISPLAYA6           299E
DISPLAYA6A          2AB2
DISPLAYA6D          2D76
DISPLAYA6P          2C26
DISPLAYA7           29AE
DISPLAYA7A          2ACE
DISPLAYA7D          2D92
DISPLAYA7P          2C4E
DISPLAYD0           287E
DISPLAYD1           288E
DISPLAYD2           289E
DISPLAYD3           28AE
DISPLAYD4           28BE
DISPLAYD5           28CE
DISPLAYD6           28DE
DISPLAYD7           28EE
DISPLAYEIGHT        27F6
DISPLONG            3689
DISPLOOP            33D6
DISPWORD            3686
DIVSMATCH           3642
DLETTERS            340A
DLNINE              33F6
EIGHT               8
ELEVEN              B
ENDDISPSUB          341E
ENDINGMESSAGE       35A6
ENDLOOP             357A
ENDMOVE             33AE
ENDMOVE1            33B4
ENDPROG             3580
ENDSUB              2E7E
ENDSUBROUTINE       2800
EORMATCH            364E
ERRORMESSAGE        35C6
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HA                  3528
HASHTAG             35EC
HB                  3530
HC                  3538
HD                  3540
HE                  3548
HEIGHT              3518
HF                  3550
HFIVE               3500
HFOUR               34F8
HNINE               3520
HONE                34E0
HSEVEN              3510
HSIX                3508
HTHREE              34F0
HTWO                34E8
HZERO               34D8
IMMLONG             2E6A
INC                 35F8
INVALID             2E7E
JSRMATCH            361B
LEAMATCH            3625
LF                  A
LONGSKIP            2E7A
LOOP                1040
LSLMATCH            3668
LSRMATCH            3664
MASK0               0
MASK1               1
MASK2               2
MASK3               4
MASK4               8
MASK5               10
MASK6               20
MASK7               40
MASK8               80
MASKA               5
MASKB               A
MASKC               14
MASKD               28
MASKE               50
MASKF               A0
MEMSB               1F90
MEMSHIFTIMM         27DC
MEMSHIFTS           11B6
MEMSL               24A4
MEMSW               221A
MOVEAMATCH          360D
MOVEMATCH           3608
MOVEMBRA            2E84
MOVEML              2EB4
MOVEMMATCH          361F
MOVEMW              2E98
MOVEOVER            33D2
MULSMATCH           3656
NEGMATCH            3613
NEWLINE             35E5
NEXTH               3554
NINE                9
ONE                 1
OPADDAL             1D58
OPADDAW             1CE8
OPADDB              1B9C
OPADDL              1C74
OPADDW              1C08
OPASBI              1FCE
OPASBR              2030
OPASL               1DC8
OPASLBI             200E
OPASLBR             2070
OPASLI              24E2
OPASLLI             2522
OPASLLR             2584
OPASLR              2544
OPASLWI             2298
OPASLWR             22FA
OPASR               1E14
OPASRBI             1FEC
OPASRBR             204E
OPASRLI             2500
OPASRLR             2562
OPASRWI             2276
OPASRWR             22D8
OPASWI              2258
OPASWR              22BA
OPBCLR              1506
OPBCS               1AFC
OPBGE               1B14
OPBLT               1B20
OPBRA               1AE4
OPBVC               1B08
OPCMPI              1378
OPCMPIB             139A
OPCMPIL             1490
OPCMPIW             140C
OPDYNBCLR           156A
OPJSR               1956
OPLEA               1A58
OPLSBI              2092
OPLSBR              20F4
OPLSL               1E60
OPLSLBI             20D2
OPLSLBR             2134
OPLSLI              25A6
OPLSLLI             25E6
OPLSLLR             2648
OPLSLR              2608
OPLSLWI             235C
OPLSLWR             23BE
OPLSR               1EAC
OPLSRBI             20B0
OPLSRBR             2112
OPLSRLI             25C4
OPLSRLR             2626
OPLSRWI             233A
OPLSRWR             239C
OPLSWI              231C
OPLSWR              237E
OPMOVEAL            16F0
OPMOVEAW            17E6
OPMOVEB             15D8
OPMOVEL             165C
OPMOVEM             19CE
OPMOVEMLEA          19B2
OPMOVEW             1758
OPMULS              1B38
OPNEG               184E
OPNEGB              187C
OPNEGL              18BC
OPNEGW              18FC
OPORI               1210
OPORIB              123E
OPORIL              130A
OPORIW              12A4
OPPER               35F2
OPROBI              2156
OPROBR              21B8
OPROL               1EF8
OPROLBI             2196
OPROLBR             21F8
OPROLI              266A
OPROLLI             26AA
OPROLLR             270C
OPROLR              26CC
OPROLWI             2420
OPROLWR             2482
OPROR               1F44
OPRORBI             2174
OPRORBR             21D6
OPRORLI             2688
OPRORLR             26EA
OPRORWI             23FE
OPRORWR             2460
OPROWI              23E0
OPROWR              2442
OPRTS               1996
OPRTSJSR            193C
OPSUB               1B2C
OPSUBQ              1AD8
ORIMATCH            35FA
ORMATCH             3647
OUTHEX              33BA
PADDRDEC            2C76
PADDRDIR            29BE
PADDRPOST           2AEA
PADDRREG            28FE
PDATAREG            283E
PHEX                2DAE
PRINTEA             2806
PRINTINVALID        3580
PRINTMEM            3158
PRINTMEMNOW         315C
PRINTREGMEM         2F0C
PRINTSTACK          2EE4
PRNTIMM             272E
PRNTREG             278A
REG0                0
REG0CONT            2FB8
REG1                1
REG1CONT            2FF8
REG2                2
REG2CONT            3038
REG3                3
REG3CONT            3078
REG4                4
REG4CONT            30B8
REG5                5
REG5CONT            30F8
REG6                6
REG6CONT            3138
REG7                7
REGSHIFTS           11F4
RETRY               3428
ROLMATCH            3678
RORMATCH            3674
RTSMATCH            3617
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SKIPPRINTEA         1A48
SLASH               367C
SPACE               35E9
STACK               367E
START               1000
STARTINGMESSAGE     3584
SUBLOOP             3440
SUBMATCH            364A
SUBQMATCH           3629
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
