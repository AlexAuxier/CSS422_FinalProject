00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 2014-12-11 18:03:50

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  68k Instruction Dissassembler
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :  2014-12-11
00000000                             5  * Description:  Stuff happens
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9       
00000000  =00000000                 10  zero        EQU     $00                     ; defined hex value 0
00000000  =00000001                 11  one         EQU     $01                     ; defined hex value 1 
00000000  =00000002                 12  two         EQU     $02                     ; defined hex value 2
00000000  =00000003                 13  three       EQU     $03                     ; defined hex value 3
00000000  =00000004                 14  four        EQU     $04                     ; defined hex value 4
00000000  =00000005                 15  five        EQU     $05                     ; defined hex value 5
00000000  =00000006                 16  six         EQU     $06                     ; defined hex value 6
00000000  =00000007                 17  seven       EQU     $07                     ; defined hex value 7
00000000  =00000008                 18  eight       EQU     $08                     ; defined hex value 8
00000000  =00000009                 19  nine        EQU     $09                     ; defined hex value 9
00000000  =0000000B                 20  eleven      EQU     $0B                     ; defined hex value 11
00000000  =0000000C                 21  twelve      EQU     $0C                     ; defined hex value 12
00000000  =0000000D                 22  thirteen    EQU     $0D                     ; defined hex value 13
00000000  =0000000E                 23  fourteen    EQU     $0E                     ; defined hex value 14
00000000                            24  
00000000  =00000000                 25  mask0       EQU     %00000000
00000000  =00000001                 26  mask1       EQU     %00000001
00000000  =00000002                 27  mask2       EQU     %00000010
00000000  =00000004                 28  mask3       EQU     %00000100
00000000  =00000008                 29  mask4       EQU     %00001000
00000000  =00000010                 30  mask5       EQU     %00010000
00000000  =00000020                 31  mask6       EQU     %00100000
00000000  =00000040                 32  mask7       EQU     %01000000
00000000  =00000080                 33  mask8       EQU     %10000000
00000000                            34  
00000000  =00000005                 35  maskA       EQU     %00000101
00000000  =0000000A                 36  maskB       EQU     %00001010
00000000  =00000014                 37  maskC       EQU     %00010100
00000000  =00000028                 38  maskD       EQU     %00101000
00000000  =00000050                 39  maskE       EQU     %01010000
00000000  =000000A0                 40  maskF       EQU     %10100000
00000000                            41  
00000000  =000000F0                 42  firstNib    EQU     $F0
00000000  =0000000F                 43  secNib      EQU     $0F
00000000                            44               
00001000                            45              ORG    $1000
00001000                            46  START: 
00001000                            47  ***********************************************************************************************************
00001000                            48  *
00001000                            49  *                   Dissassembler Start
00001000                            50  *
00001000                            51  ***********************************************************************************************************
00001000                            52              ; Dissassemble Start, obtain addr range
00001000  43F9 00003C84             53              LEA         startingMessage, A1
00001006  103C 000E                 54              MOVE.B      #14, D0
0000100A  4E4F                      55              TRAP        #15    
0000100C                            56          
0000100C  103C 0002                 57              MOVE.B      #2, D0
00001010  4E4F                      58              TRAP        #15
00001012                            59      
00001012  4EB9 00003B1A             60              JSR         Address
00001018  2042                      61              MOVEA.L     D2, A0
0000101A                            62          
0000101A  43F9 00003CA6             63              LEA         endingMessage, A1
00001020  103C 000E                 64              MOVE.B      #14, D0
00001024  4E4F                      65              TRAP        #15    
00001026                            66      
00001026  103C 0002                 67              MOVE.B      #2, D0
0000102A  4E4F                      68              TRAP        #15
0000102C                            69      
0000102C  4EB9 00003B1A             70              JSR         Address
00001032  2442                      71              MOVEA.L     D2, A2
00001034                            72          
00001034  43F9 00003CE5             73              LEA         newline, A1
0000103A  103C 000E                 74              MOVE.B      #14, D0
0000103E  4E4F                      75              TRAP        #15 
00001040                            76            
00001040                            77  ***********************************************************************************************************
00001040                            78  *
00001040                            79  *                   Control Loop
00001040                            80  *
00001040                            81  *       This loop cycles and branches our code by the first nibble of OPCODE binary
00001040                            82  *
00001040                            83  ***********************************************************************************************************
00001040                            84            
00001040  4241                      85  LOOP        CLR         D1                  ; clear out D1
00001042  4242                      86              CLR         D2                  ; clear out D2
00001044  B1CA                      87              CMPA.L      A2, A0              ; compare starting and ending addresses
00001046  6E00 2C38                 88              BGT         endProg             ; if A0 > A1, we've finished, end program
0000104A  1218                      89              MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
0000104C  1401                      90              MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000104E  E882                      91              ASR.L       #four, D2           ; get first nibble in D2
00001050                            92          
00001050  B43C 0000                 93              CMP.B       #zero, D2           ; compare with 0
00001054  6700 0064                 94              BEQ         braZero             ; branch out to zero method
00001058  B43C 0001                 95              CMP.B       #one, D2            ; compare with 1
0000105C  6700 008C                 96              BEQ         braOne              ; branch out to one method
00001060  B43C 0002                 97              CMP.B       #two, D2            ; compare with 2    
00001064  6700 0088                 98              BEQ         braTwo              ; branch out to two method
00001068  B43C 0003                 99              CMP.B       #three, D2          ; compare with 3
0000106C  6700 0084                100              BEQ         braThree            ; branch out to three method
00001070  B43C 0004                101              CMP.B       #four, D2           ; compare with 4
00001074  6700 0080                102              BEQ         braFour             ; branch out to four method
00001078  B43C 0005                103              CMP.B       #five, D2           ; compare with 5
0000107C  6700 0094                104              BEQ         braFive             ; branch out to five method
00001080  B43C 0006                105              CMP.B       #six, D2            ; compare with 6
00001084  6700 0090                106              BEQ         braSix              ; branch out to six method
00001088  B43C 0008                107              CMP.B       #eight, D2          ; compare with 8
0000108C  6700 00BC                108              BEQ         braEight            ; branch out to eight method
00001090  B43C 0009                109              CMP.B       #nine, D2           ; compare with 9
00001094  6700 00CE                110              BEQ         braNine             ; branch out to nine method
00001098  B43C 000B                111              CMP.B       #eleven, D2         ; compare with 11
0000109C  6700 00CA                112              BEQ         braEleven           ; branch out to eleven method
000010A0  B43C 000C                113              CMP.B       #twelve, D2         ; compare with 12
000010A4  6700 00DC                114              BEQ         braTwelve           ; branch out to twelve method
000010A8  B43C 000D                115              CMP.B       #thirteen, D2       ; compare with 13
000010AC  6700 00D8                116              BEQ         braThirteen         ; branch out to thirteen method
000010B0  B43C 000E                117              CMP.B       #fourteen, D2       ; compare with 14
000010B4  6700 0122                118              BEQ         braFourteen         ; branch out to fourteen method
000010B8  6086                     119              BRA         loop
000010BA                           120  
000010BA                           121  ***********************************************************************************************************
000010BA                           122  *
000010BA                           123  *                   Nibble Branch Section
000010BA                           124  *
000010BA                           125  *       This section decides which nibble goes to the corresponding opcode
000010BA                           126  *
000010BA                           127  *********************************************************************************************************** 
000010BA                           128          
000010BA                           129  braZero     
000010BA  4242                     130              CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
000010BC  1401                     131              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010BE  C43C 000F                132              AND.B       #secNib, D2         ; set first nibble to 0
000010C2                           133  
000010C2  B43C 0000                134              CMP.B       #zero, D2           ; compare second nibble to 0
000010C6  6700 0184                135              BEQ         opORI               ; branch to ORI method
000010CA  B43C 000C                136              CMP.B       #twelve, D2         ; compare second nibble to 12
000010CE  6700 02E4                137              BEQ         opCMPI              ; branch to CMPI method
000010D2  B43C 0008                138              CMP.B       #eight,D2           ; Test for static BCLR
000010D6  6700 046A                139              BEQ         opBCLR
000010DA  C47C 0001                140              AND         #one,D2             ; Sets all bits to 0 except for first bit if it is 1
000010DE  B43C 0001                141              CMP.B       #one,D2             ; if it is one then there is a chance it is dynamic BCLR
000010E2  6700 04C2                142              BEQ         opDynBCLR
000010E6  6000 2B92                143              BRA         printInvalid
000010EA                           144          
000010EA                           145  braOne      
000010EA  6000 0528                146              BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010EE                           147  
000010EE                           148  braTwo      
000010EE  6000 05A8                149              BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010F2                           150  
000010F2                           151  braThree                                    ; there are two opCodes available, MOVE.W, or MOVEA.W
000010F2  6000 06A0                152              BRA         opMOVEW
000010F6                           153  
000010F6  4242                     154  braFour     CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010F8  1401                     155              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010FA  C43C 000F                156              AND.B       #secNib, D2         ; set first nibble to 0
000010FE                           157   
000010FE  B43C 0004                158              CMP.B       #four, D2           ; compare second nibble to 4
00001102  6700 0786                159              BEQ         opNEG               ; branch to NEG method
00001106  B43C 000E                160              CMP.B       #fourteen, D2       ; compare second nibble to E
0000110A  6700 086C                161              BEQ         opRTSJSR            ; branch to JSR or RTS method
0000110E  6000 08DE                162              BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
00001112                           163  
00001112                           164  braFive     
00001112  6000 10B2                165              BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
00001116                           166  
00001116                           167  braSix      
00001116  4242                     168              CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
00001118  1401                     169              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000111A  C43C 000F                170              AND.B       #$0F, D2             ; set first nibble to 0
0000111E                           171   
0000111E  B43C 0000                172              CMP.B       #zero, D2           ; compare second nibble to 0
00001122  6700 0F8A                173              BEQ         opBRA               ; branch to BRA method
00001126  B43C 0005                174              CMP.B       #five, D2           ; compare second nibble to 5
0000112A  6700 0FBA                175              BEQ         opBCS               ; branch to BCS method
0000112E  B43C 0008                176              CMP.B       #eight, D2          ; compare second nibble to 8
00001132  6700 0FEA                177              BEQ         opBVC               ; branch to BCS method
00001136  B43C 000C                178              CMP.B       #twelve, D2         ; compare second nibble to 12
0000113A  6700 101A                179              BEQ         opBGE               ; branch to BGE method
0000113E  B43C 000D                180              CMP.B       #thirteen,D2        ; compare second nibble to 13
00001142  6700 104A                181              BEQ         opBLT               ; branch to BLT method
00001146  6000 2B32                182              BRA         printInvalid        ; found an un-supported opcode
0000114A                           183  
0000114A                           184  braEight                                    ; there are two opCodes available DIVS, or OR
0000114A  4242                     185              CLR         D2
0000114C  E141                     186              ASL         #8,D1
0000114E  1218                     187              MOVE.B      (A0)+,D1
00001150  3401                     188              MOVE.W      D1,D2
00001152  EC42                     189              ASR         #six,D2
00001154  C47C 0007                190              AND         #$07,D2
00001158  B43C 0007                191              CMP.B       #seven,D2
0000115C  6700 0B0C                192              BEQ         opDIVS              ; If bits 8 - 6 are equal to 7, we have DIVS
00001160  6000 09B2                193              BRA         opOR                ; else opcode is OR
00001164                           194  
00001164                           195  braNine     
00001164  6000 0DF0                196              BRA         opSUB               ; we know that there is only one opcode that is SUB
00001168                           197  
00001168                           198  braEleven                                   ; there are two opCodes available EOR, or CMP
00001168  4242                     199              CLR         D2
0000116A  E141                     200              ASL         #8,D1
0000116C  1218                     201              MOVE.B      (A0)+,D1
0000116E  3401                     202              MOVE.W      D1,D2
00001170  EC42                     203              ASR         #six,D2
00001172  C47C 0007                204              AND         #$07,D2
00001176  B43C 0003                205              CMP.B       #three,D2
0000117A  6D00 0C9A                206              BLT         opCMP               ; If opmode bits are less than 3, we have CMP
0000117E  6E00 0B48                207              BGT         opEOR               ; Else its EOR
00001182                           208  
00001182                           209  braTwelve   
00001182  6000 10BA                210              BRA         opMULS              ; we know that there is only one opcode that is MULS    
00001186                           211    
00001186                           212  braThirteen 
00001186  E141                     213              ASL         #eight, D1          ; we need the whole word to compare between add and adda, so move over the current byte 
00001188  1218                     214              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
0000118A                           215              
0000118A  4242                     216              CLR         D2                  ; clear D2
0000118C  3401                     217              MOVE.W      D1, D2              ; copy opcode to D2
0000118E  EC42                     218              ASR         #six, D2            ; shift the bits right to get size and type
00001190  C47C 0007                219              AND         #seven,D2           ; clear out all but first 3 bits
00001194                           220              
00001194  B43C 0000                221              CMP.B       #zero,D2            ; compare 0 to D2
00001198  6700 1108                222              BEQ         opADDB              ; we know its ADDB
0000119C  B43C 0001                223              CMP.B       #one, D2            ; compare 1 to D2
000011A0  6700 116C                224              BEQ         opADDW              ; we know its ADDW
000011A4  B43C 0002                225              CMP.B       #two, D2            ; compare 2 to D2
000011A8  6700 11D0                226              BEQ         opADDL              ; we know its ADDL
000011AC  B43C 0003                227              CMP.B       #three, D2          ; compare 3 to D2
000011B0  6700 123C                228              BEQ         opADDAW             ; we know its ADDAW
000011B4  B43C 0004                229              CMP.B       #four, D2           ; compare 4 to D2
000011B8  6700 10E8                230              BEQ         opADDB              ; we know its ADDB
000011BC  B43C 0005                231              CMP.B       #five, D2           ; compare 5 to D2
000011C0  6700 114C                232              BEQ         opADDW              ; we know its ADDW
000011C4  B43C 0006                233              CMP.B       #six, D2            ; compare 6 to D2
000011C8  6700 11B0                234              BEQ         opADDL              ; we know its ADDL
000011CC  B43C 0007                235              CMP.B       #seven, D2          ; compare 7 to D2
000011D0  6700 128C                236              BEQ         opADDAL             ; we know its ADDAL
000011D4  6000 2AA4                237              BRA         printInvalid        ; invalid opcode
000011D8                           238               
000011D8                           239  braFourteen 
000011D8  E141                     240              ASL.W       #eight,D1           ; we need the whole word to compare between add and adda, so move over the current byte
000011DA  1218                     241              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
000011DC                           242              
000011DC  4242                     243              CLR         D2                  ; clear D2
000011DE  3401                     244              MOVE.W      D1, D2              ; copy opcode to D2
000011E0  EC42                     245              ASR         #six, D2            ; shift the bits right to get size
000011E2  C47C 0003                246              AND         #03,D2
000011E6                           247          
000011E6  B43C 0003                248              CMP.B       #three, D2          ; if the size is three, we are shifting memory
000011EA  6700 0006                249              BEQ         memShifts           ; go to memory shift
000011EE  6000 0040                250              BRA         regShifts           ; else go to register shift
000011F2                           251  
000011F2                           252  memShifts   
000011F2  4242                     253              CLR         D2             
000011F4  3401                     254              MOVE.W      D1, D2              ; clear out D2 and copy D1 back in
000011F6  E082                     255              ASR.L       #eight,D2           ; move to get first byte back
000011F8  C47C 000F                256              AND         #secNib, D2         ; set first nibble to 0
000011FC                           257   
000011FC  B43C 0000                258              CMP.B       #zero, D2           ; compare second nibble to 0
00001200  6700 1318                259              BEQ         opASR               ; branch to ASR method
00001204  B43C 0001                260              CMP.B       #one, D2            ; compare second nibble to 1
00001208  6700 12C4                261              BEQ         opASL               ; branch to ASL method
0000120C  B43C 0002                262              CMP.B       #two, D2            ; compare second nibble to 2
00001210  6700 13A0                263              BEQ         opLSR               ; branch to LSR method
00001214  B43C 0003                264              CMP.B       #three, D2          ; compare second nibble to 3
00001218  6700 134C                265              BEQ         opLSL               ; branch to LSL method
0000121C  B43C 0006                266              CMP.B       #six, D2            ; compare second nibble to 6
00001220  6700 1428                267              BEQ         opROR               ; branch to ROR method
00001224  B43C 0007                268              CMP.B       #seven, D2          ; compare second nibble to 7
00001228  6700 13D4                269              BEQ         opROL               ; branch to ROL method
0000122C  6000 2A4C                270              BRA         printInvalid        ; otherwise, invalid
00001230                           271              
00001230                           272  regShifts   
00001230  B43C 0000                273              CMP.B       #zero, D2           ; if size is 0, we are shifting a byte
00001234  6700 1460                274              BEQ         memSB               ; branch to register shift byte
00001238  B43C 0001                275              CMP.B       #one, D2            ; if size is 1, we are shifting a word
0000123C  6700 16E2                276              BEQ         memSW               ; branch to register shift word
00001240  B43C 0002                277              CMP.B       #two, D2            ; if size is 1, we are shifting a long
00001244  6700 1964                278              BEQ         memSL               ; branch to register shift long
00001248  6000 2A30                279              BRA         printInvalid        ; otherwise, invalid
0000124C                           280              
0000124C                           281  ***********************************************************************************************************
0000124C                           282  *
0000124C                           283  *                   ORI OPCODE
0000124C                           284  *
0000124C                           285  ***********************************************************************************************************
0000124C                           286  
0000124C                           287  opORI       
0000124C  43F9 00003CFA            288              LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
00001252  103C 000E                289              MOVE.B      #14, D0             ; command for trap call to display message
00001256  4E4F                     290              TRAP        #15                 ; trap call
00001258                           291          
00001258  1218                     292              MOVE.B      (A0)+, D1
0000125A  1401                     293              MOVE.B      D1,D2               ; copy data over
0000125C  EC42                     294              ASR         #6,D2               ; shifts 6 bits over to read just the size        
0000125E  B43C 0000                295              CMP.B       #zero,D2
00001262  6700 0016                296              BEQ         opORIB
00001266  B43C 0001                297              CMP.B       #one,D2
0000126A  6700 0074                298              BEQ         opORIW
0000126E  B43C 0002                299              CMP.B       #two,D2
00001272  6700 00D2                300              BEQ         opORIL
00001276                           301          
00001276  6000 2A02                302              BRA         printInvalid
0000127A                           303          
0000127A                           304  opORIB      
0000127A  43F9 00003D83            305              LEA         dispByte, A1        ; Display byte
00001280  103C 000E                306              MOVE.B      #14, D0             ; command for trap call to display message
00001284  4E4F                     307              TRAP        #15                 ; trap call
00001286                           308          
00001286  43F9 00003CE9            309              LEA         space, A1           ; Display space
0000128C  103C 000E                310              MOVE.B      #14, D0             ; command for trap call to display message
00001290  4E4F                     311              TRAP        #15                 ; trap call
00001292                           312          
00001292  4244                     313              CLR         D4
00001294  1801                     314              MOVE.B      D1,D4
00001296  E644                     315              ASR         #three,D4
00001298  C87C 0007                316              AND         #seven,D4
0000129C  4245                     317              CLR         D5        
0000129E  1A01                     318              MOVE.B      D1,D5
000012A0  CA7C 0007                319              AND         #seven,D5
000012A4                           320          
000012A4  4243                     321              CLR         D3
000012A6  4242                     322              CLR         D2
000012A8  163C 0004                323              MOVE.B      #four,D3
000012AC  143C 0007                324              MOVE.B      #seven,D2
000012B0                           325  
000012B0  4EB9 00002F0C            326              JSR         printEA
000012B6                           327          
000012B6  43F9 00003CF0            328              LEA         comma, A1           ; Display space
000012BC  103C 000E                329              MOVE.B      #14, D0             ; command for trap call to display message
000012C0  4E4F                     330              TRAP        #15                 ; trap call
000012C2                           331          
000012C2  4242                     332              CLR         D2
000012C4  4243                     333              CLR         D3
000012C6  1404                     334              MOVE.B      D4,D2
000012C8  1605                     335              MOVE.B      D5,D3
000012CA                           336          
000012CA  4EB9 00002F0C            337              JSR         printEA
000012D0                           338          
000012D0  43F9 00003CE5            339              LEA         newLine, A1           ; Display space
000012D6  103C 000E                340              MOVE.B      #14, D0             ; command for trap call to display message
000012DA  4E4F                     341              TRAP        #15                 ; trap call
000012DC                           342          
000012DC  6000 FD62                343              BRA         LOOP
000012E0                           344          
000012E0                           345  opORIW      
000012E0  43F9 00003D86            346              LEA         dispWord, A1        ; Display byte
000012E6  103C 000E                347              MOVE.B      #14, D0             ; command for trap call to display message
000012EA  4E4F                     348              TRAP        #15                 ; trap call
000012EC                           349          
000012EC  43F9 00003CE9            350              LEA         space, A1           ; Display space
000012F2  103C 000E                351              MOVE.B      #14, D0             ; command for trap call to display message
000012F6  4E4F                     352              TRAP        #15                 ; trap call
000012F8                           353          
000012F8  4244                     354              CLR         D4
000012FA  1801                     355              MOVE.B      D1,D4
000012FC  E644                     356              ASR         #three,D4
000012FE  C87C 0007                357              AND         #seven,D4
00001302  4245                     358              CLR         D5        
00001304  1A01                     359              MOVE.B      D1,D5
00001306  CA7C 0007                360              AND         #seven,D5
0000130A                           361          
0000130A  4243                     362              CLR         D3
0000130C  4242                     363              CLR         D2
0000130E  163C 0004                364              MOVE.B      #four,D3
00001312  143C 0007                365              MOVE.B      #seven,D2
00001316                           366          
00001316  4EB9 00002F0C            367              JSR         printEA
0000131C                           368          
0000131C  43F9 00003CF0            369              LEA         comma, A1           ; Display space
00001322  103C 000E                370              MOVE.B      #14, D0             ; command for trap call to display message
00001326  4E4F                     371              TRAP        #15                 ; trap call
00001328                           372          
00001328  4242                     373              CLR         D2
0000132A  4243                     374              CLR         D3
0000132C  1404                     375              MOVE.B      D4,D2
0000132E  1605                     376              MOVE.B      D5,D3
00001330                           377                  
00001330  4EB9 00002F0C            378              JSR         printEA
00001336                           379          
00001336  43F9 00003CE5            380              LEA         newLine, A1           ; Display space
0000133C  103C 000E                381              MOVE.B      #14, D0             ; command for trap call to display message
00001340  4E4F                     382              TRAP        #15                 ; trap call
00001342                           383          
00001342  6000 FCFC                384              BRA         LOOP
00001346                           385       
00001346                           386  opORIL      
00001346  43F9 00003D89            387              LEA         dispLong, A1        ; Display byte
0000134C  103C 000E                388              MOVE.B      #14, D0             ; command for trap call to display message
00001350  4E4F                     389              TRAP        #15                 ; trap call
00001352                           390          
00001352  43F9 00003CE9            391              LEA         space, A1           ; Display space
00001358  103C 000E                392              MOVE.B      #14, D0             ; command for trap call to display message
0000135C  4E4F                     393              TRAP        #15                 ; trap call
0000135E                           394          
0000135E  4244                     395              CLR         D4
00001360  1801                     396              MOVE.B      D1,D4
00001362  E644                     397              ASR         #three,D4
00001364  C87C 0007                398              AND         #seven,D4
00001368  4245                     399              CLR         D5        
0000136A  1A01                     400              MOVE.B      D1,D5
0000136C  CA7C 0007                401              AND         #seven,D5
00001370  1C3C 0001                402              MOVE.B      #one,D6
00001374                           403          
00001374  4243                     404              CLR         D3
00001376  4242                     405              CLR         D2
00001378  163C 0004                406              MOVE.B      #four,D3
0000137C  143C 0007                407              MOVE.B      #seven,D2      
00001380                           408          
00001380  4EB9 00002F0C            409              JSR         printEA        
00001386                           410          
00001386  4243                     411              CLR         D3
00001388  4242                     412              CLR         D2
0000138A  163C 0004                413              MOVE.B      #four,D3
0000138E  143C 0007                414              MOVE.B      #seven,D2
00001392                           415          
00001392  43F9 00003CF0            416              LEA         comma, A1           ; Display space
00001398  103C 000E                417              MOVE.B      #14, D0             ; command for trap call to display message
0000139C  4E4F                     418              TRAP        #15                 ; trap call
0000139E                           419          
0000139E  4EB9 00002F0C            420              JSR         printEA
000013A4                           421          
000013A4  43F9 00003CE5            422              LEA         newLine, A1           ; Display space
000013AA  103C 000E                423              MOVE.B      #14, D0             ; command for trap call to display message
000013AE  4E4F                     424              TRAP        #15                 ; trap call
000013B0                           425          
000013B0  6000 FC8E                426              BRA         LOOP
000013B4                           427          
000013B4                           428  ***********************************************************************************************************
000013B4                           429  *
000013B4                           430  *                   CMPI OPCODE
000013B4                           431  *
000013B4                           432  ***********************************************************************************************************
000013B4                           433          
000013B4                           434  opCMPI           
000013B4  1218                     435              MOVE.B      (A0)+, D1
000013B6  1401                     436              MOVE.B      D1,D2               ; copy data over
000013B8  EC42                     437              ASR         #6,D2               ; shifts 6 bits over to read just the size        
000013BA  B43C 0000                438              CMP.B       #zero,D2
000013BE  6700 0016                439              BEQ         opCMPIB
000013C2  B43C 0001                440              CMP.B       #one,D2
000013C6  6700 0080                441              BEQ         opCMPIW
000013CA  B43C 0002                442              CMP.B       #two,D2
000013CE  6700 00FC                443              BEQ         opCMPIL
000013D2  6000 21B0                444              BRA         invalid
000013D6                           445  
000013D6                           446  opCMPIB 
000013D6  43F9 00003CFE            447              LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000013DC  103C 000E                448              MOVE.B      #14, D0             ; command for trap call to display message
000013E0  4E4F                     449              TRAP        #15                 ; trap call
000013E2                           450          
000013E2  43F9 00003D83            451              LEA         dispByte, A1        ; Display byte
000013E8  103C 000E                452              MOVE.B      #14, D0             ; command for trap call to display message
000013EC  4E4F                     453              TRAP        #15                 ; trap call
000013EE                           454          
000013EE  43F9 00003CE9            455              LEA         space, A1           ; Display space
000013F4  103C 000E                456              MOVE.B      #14, D0             ; command for trap call to display message
000013F8  4E4F                     457              TRAP        #15                 ; trap call
000013FA                           458          
000013FA  4244                     459              CLR         D4
000013FC  1801                     460              MOVE.B      D1,D4
000013FE  E644                     461              ASR         #three,D4
00001400  C87C 0007                462              AND         #seven,D4
00001404  4245                     463              CLR         D5        
00001406  1A01                     464              MOVE.B      D1,D5
00001408  CA7C 0007                465              AND         #seven,D5
0000140C                           466          
0000140C  4243                     467              CLR         D3
0000140E  4242                     468              CLR         D2
00001410  163C 0004                469              MOVE.B      #four,D3
00001414  143C 0007                470              MOVE.B      #seven,D2      
00001418                           471          
00001418  4EB9 00002F0C            472              JSR         printEA  
0000141E                           473              
0000141E  43F9 00003CF0            474              LEA         comma, A1           ; Display space
00001424  103C 000E                475              MOVE.B      #14, D0             ; command for trap call to display message
00001428  4E4F                     476              TRAP        #15                 ; trap call
0000142A                           477          
0000142A  4242                     478              CLR         D2
0000142C  4243                     479              CLR         D3
0000142E  1404                     480              MOVE.B      D4,D2
00001430  1605                     481              MOVE.B      D5,D3        
00001432                           482          
00001432  4EB9 00002F0C            483              JSR         printEA
00001438                           484          
00001438  43F9 00003CE5            485              LEA         newLine, A1           ; Display space
0000143E  103C 000E                486              MOVE.B      #14, D0             ; command for trap call to display message
00001442  4E4F                     487              TRAP        #15                 ; trap call
00001444                           488  
00001444  6000 FBFA                489              BRA         LOOP
00001448                           490  
00001448                           491  opCMPIW 
00001448  43F9 00003CFE            492              LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000144E  103C 000E                493              MOVE.B      #14, D0             ; command for trap call to display message
00001452  4E4F                     494              TRAP        #15                 ; trap call
00001454                           495          
00001454  43F9 00003D86            496              LEA         dispWord, A1        ; Display byte
0000145A  103C 000E                497              MOVE.B      #14, D0             ; command for trap call to display message
0000145E  4E4F                     498              TRAP        #15                 ; trap call
00001460                           499          
00001460  43F9 00003CE9            500              LEA         space, A1           ; Display space
00001466  103C 000E                501              MOVE.B      #14, D0             ; command for trap call to display message
0000146A  4E4F                     502              TRAP        #15                 ; trap call
0000146C                           503          
0000146C  4244                     504              CLR         D4
0000146E  1801                     505              MOVE.B      D1,D4
00001470  E644                     506              ASR         #three,D4
00001472  C87C 0007                507              AND         #seven,D4
00001476  4245                     508              CLR         D5        
00001478  1A01                     509              MOVE.B      D1,D5
0000147A  CA7C 0007                510              AND         #seven,D5
0000147E                           511          
0000147E  4243                     512              CLR         D3
00001480  4242                     513              CLR         D2
00001482  163C 0004                514              MOVE.B      #four,D3
00001486  143C 0007                515              MOVE.B      #seven,D2      
0000148A                           516          
0000148A  4EB9 00002F0C            517              JSR         printEA  
00001490                           518          
00001490  43F9 00003CEC            519              LEA         hashTag, A1           ; Display space
00001496  103C 000E                520              MOVE.B      #14, D0             ; command for trap call to display message
0000149A  4E4F                     521              TRAP        #15                 ; trap call
0000149C                           522          
0000149C  103C 0003                523              MOVE.B      #3, D0
000014A0  4E4F                     524              TRAP        #15
000014A2                           525          
000014A2  43F9 00003CF0            526              LEA         comma, A1           ; Display space
000014A8  103C 000E                527              MOVE.B      #14, D0             ; command for trap call to display message
000014AC  4E4F                     528              TRAP        #15                 ; trap call
000014AE                           529  
000014AE  4242                     530              CLR         D2
000014B0  4243                     531              CLR         D3
000014B2  1404                     532              MOVE.B      D4,D2
000014B4  1605                     533              MOVE.B      D5,D3       
000014B6                           534          
000014B6  4EB9 00002F0C            535              JSR         printEA
000014BC                           536          
000014BC  43F9 00003CE5            537              LEA         newLine, A1           ; Display space
000014C2  103C 000E                538              MOVE.B      #14, D0             ; command for trap call to display message
000014C6  4E4F                     539              TRAP        #15                 ; trap call
000014C8  6000 FB76                540              BRA         LOOP
000014CC                           541  
000014CC                           542  opCMPIL 
000014CC  43F9 00003CFE            543              LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000014D2  103C 000E                544              MOVE.B      #14, D0             ; command for trap call to display message
000014D6  4E4F                     545              TRAP        #15                 ; trap call
000014D8                           546          
000014D8  43F9 00003D89            547              LEA         dispLong, A1        ; Display byte
000014DE  103C 000E                548              MOVE.B      #14, D0             ; command for trap call to display message
000014E2  4E4F                     549              TRAP        #15                 ; trap call
000014E4                           550          
000014E4  43F9 00003CE9            551              LEA         space, A1           ; Display space
000014EA  103C 000E                552              MOVE.B      #14, D0             ; command for trap call to display message
000014EE  4E4F                     553              TRAP        #15                 ; trap call
000014F0                           554          
000014F0  4244                     555              CLR         D4
000014F2  1801                     556              MOVE.B      D1,D4
000014F4  E644                     557              ASR         #three,D4
000014F6  C87C 0007                558              AND         #seven,D4
000014FA  4245                     559              CLR         D5        
000014FC  1A01                     560              MOVE.B      D1,D5
000014FE  CA7C 0007                561              AND         #seven,D5
00001502                           562          
00001502  4243                     563              CLR         D3
00001504  4242                     564              CLR         D2
00001506  163C 0004                565              MOVE.B      #four,D3
0000150A  143C 0007                566              MOVE.B      #seven,D2      
0000150E  1C3C 0001                567              MOVE.B      #one,D6
00001512                           568          
00001512  4EB9 00002F0C            569              JSR         printEA  
00001518                           570          
00001518  43F9 00003CF0            571              LEA         comma, A1           ; Display space
0000151E  103C 000E                572              MOVE.B      #14, D0             ; command for trap call to display message
00001522  4E4F                     573              TRAP        #15                 ; trap call
00001524                           574          
00001524  4242                     575              CLR         D2
00001526  4243                     576              CLR         D3
00001528  1404                     577              MOVE.B      D4,D2
0000152A  1605                     578              MOVE.B      D5,D3              
0000152C                           579          
0000152C  4EB9 00002F0C            580              JSR         printEA
00001532                           581          
00001532  43F9 00003CE5            582              LEA         newLine, A1           ; Display space
00001538  103C 000E                583              MOVE.B      #14, D0             ; command for trap call to display message
0000153C  4E4F                     584              TRAP        #15                 ; trap call
0000153E                           585          
0000153E  6000 FB00                586              BRA         LOOP
00001542                           587          
00001542                           588  ***********************************************************************************************************
00001542                           589  *
00001542                           590  *                   BCLR OPCODE
00001542                           591  *
00001542                           592  ***********************************************************************************************************
00001542                           593  
00001542                           594  opBCLR      
00001542  43F9 00003D03            595              LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001548  103C 000E                596              MOVE.B      #14, D0             ; command for trap call to display message
0000154C  4E4F                     597              TRAP        #15                 ; trap call
0000154E                           598  
0000154E  43F9 00003CE9            599              LEA         space, A1           ; Display space
00001554  103C 000E                600              MOVE.B      #14, D0             ; command for trap call to display message
00001558  4E4F                     601              TRAP        #15                 ; trap call
0000155A                           602                  
0000155A  4242                     603              CLR         D2
0000155C  1218                     604              MOVE.B      (A0)+, D1
0000155E  1401                     605              MOVE.B      D1,D2               ; copy data over
00001560  E642                     606              ASR         #three,D2           ; Shift to the right to remove register
00001562  C47C 0007                607              AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
00001566                           608                  
00001566  4243                     609              CLR         D3                  ; Clear D3 so we can move D1 in
00001568  1601                     610              MOVE.B      D1,D3               ; Move othr byte in
0000156A  C67C 0007                611              AND         #seven,D3           ; Set everything besides register to 0
0000156E                           612                 
0000156E  4241                     613              CLR         D1
00001570  3218                     614              MOVE.W      (A0)+, D1
00001572                           615                 
00001572                           616                  
00001572  43F9 00003CEC            617              LEA         hashTag, A1           ; Display space
00001578  103C 000E                618              MOVE.B      #14, D0             ; command for trap call to display message
0000157C  4E4F                     619              TRAP        #15                 ; trap call
0000157E                           620          
0000157E  103C 0003                621              MOVE.B      #3, D0
00001582  4E4F                     622              TRAP        #15
00001584                           623          
00001584  43F9 00003CF0            624              LEA         comma, A1           ; Display space
0000158A  103C 000E                625              MOVE.B      #14, D0             ; command for trap call to display message
0000158E  4E4F                     626              TRAP        #15                 ; trap call
00001590                           627                  
00001590  4EB9 00002F0C            628              JSR         printEA
00001596                           629          
00001596  43F9 00003CE5            630              LEA         newLine, A1           ; Display space
0000159C  103C 000E                631              MOVE.B      #14, D0             ; command for trap call to display message
000015A0  4E4F                     632              TRAP        #15                 ; trap call
000015A2                           633                  
000015A2  6000 FA9C                634              BRA         LOOP                
000015A6                           635          
000015A6                           636  opDynBCLR       
000015A6  4241                     637              CLR         D1
000015A8  1218                     638              MOVE.B      (A0)+,D1            ; Copy second byte in
000015AA  1601                     639              MOVE.B      D1,D3               ; Will use D4 to store in the source register
000015AC  E243                     640              ASR         #one,D3             ; Shift register over to the end
000015AE  C67C 0007                641              AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
000015B2                           642                  
000015B2  1401                     643              MOVE.B      D1,D2
000015B4  EC42                     644              ASR         #six,D2             ; Removing mode and register to check BCLR bits
000015B6  B47C 0002                645              CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
000015BA  6600 26BE                646              BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
000015BE                           647  
000015BE                           648                  
000015BE  43F9 00003D03            649              LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
000015C4  103C 000E                650              MOVE.B      #14, D0             ; command for trap call to display message
000015C8  4E4F                     651              TRAP        #15                 ; trap call  
000015CA                           652                  
000015CA  43F9 00003CE9            653              LEA         space, A1           ; Display space
000015D0  103C 000E                654              MOVE.B      #14, D0             ; command for trap call to display message
000015D4  4E4F                     655              TRAP        #15                 ; trap call
000015D6                           656                  
000015D6  143C 0000                657              MOVE.B      #zero,D2                
000015DA  4EB9 00002F0C            658              JSR         printEA
000015E0                           659                  
000015E0  43F9 00003CF0            660              LEA         comma, A1           ; Display space
000015E6  103C 000E                661              MOVE.B      #14, D0             ; command for trap call to display message
000015EA  4E4F                     662              TRAP        #15                 ; trap call
000015EC                           663                
000015EC  4242                     664              CLR         D2
000015EE  1401                     665              MOVE.B      D1,D2               ; Using D2 to store EA mode
000015F0  E642                     666              ASR         #three,D2           ; Remove/shift the register out
000015F2  C47C 0007                667              AND         #seven,D2           ; Change all bits except for the mode bits to 0
000015F6                           668                  
000015F6  4243                     669              CLR         D3                  ; Clearing D3 to avoid mashing data
000015F8  1601                     670              MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000015FA  C67C 0007                671              AND         #seven,D3           ; Change all bits except for register bits to 0
000015FE                           672              
000015FE  4EB9 00002F0C            673              JSR         printEA
00001604                           674          
00001604  43F9 00003CE5            675              LEA         newLine, A1           ; Display space
0000160A  103C 000E                676              MOVE.B      #14, D0             ; command for trap call to display message
0000160E  4E4F                     677              TRAP        #15                 ; trap call            
00001610                           678  
00001610                           679  
00001610  6000 FA2E                680              BRA         LOOP                ; go back to the loop   
00001614                           681                  
00001614                           682  ***********************************************************************************************************
00001614                           683  *
00001614                           684  *                   MOVE OPCODE
00001614                           685  *                   MOVEA OPCODE
00001614                           686  *
00001614                           687  ***********************************************************************************************************
00001614                           688   
00001614                           689  opMOVEB 
00001614  43F9 00003D08            690              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
0000161A  103C 000E                691              MOVE.B      #14, D0             ; command for trap call to display message
0000161E  4E4F                     692              TRAP        #15                 ; trap call
00001620  43F9 00003D83            693              LEA         dispByte, A1        ; display byte
00001626  103C 000E                694              MOVE.B      #14, D0             ; command for trap call to display message
0000162A  4E4F                     695              TRAP        #15                 ; trap call
0000162C  43F9 00003CE9            696              LEA         space, A1           ; create spaces
00001632  103C 000E                697              MOVE.B      #14, D0             ; command for trap call to display message
00001636  4E4F                     698              TRAP        #15                 ; trap call
00001638                           699          
00001638                           700          
00001638  4245                     701              CLR         D5                  ; Clear D5
0000163A  1A01                     702              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000163C  E245                     703              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
0000163E  CA7C 0007                704              AND         #seven,D5
00001642                           705          
00001642  4244                     706              CLR         D4                  ; Clear out D4
00001644  1801                     707              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001646  C87C 0001                708              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000164A                           709          
0000164A  4241                     710              CLR          D1
0000164C  4242                     711              CLR          D2
0000164E  1218                     712              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001650  1401                     713              MOVE.B      D1,D2
00001652  EC42                     714              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001654  D842                     715              ADD         D2,D4               ; Adds the remaining bits to D4
00001656                           716          
00001656  4242                     717              CLR         D2
00001658  1401                     718              MOVE.B      D1,D2               ; Copy new byte over to D2
0000165A  E642                     719              ASR         #three,D2           ; Shift source register out
0000165C  C47C 0007                720              AND         #seven,D2           ; Set everything to 0 except for the mode
00001660                           721          
00001660  4243                     722              CLR         D3
00001662  1601                     723              MOVE.B      D1,D3
00001664  C67C 0007                724              AND         #seven,D3
00001668                           725          
00001668  4EB9 00002F0C            726              JSR         printEA
0000166E                           727          
0000166E  43F9 00003CF0            728              LEA         comma, A1           ; Display space
00001674  103C 000E                729              MOVE.B      #14, D0             ; command for trap call to display message
00001678  4E4F                     730              TRAP        #15                 ; trap call
0000167A                           731          
0000167A  4242                     732              CLR         D2
0000167C  4243                     733              CLR         D3
0000167E  1404                     734              MOVE.B      D4,D2
00001680  1605                     735              MOVE.B      D5,D3
00001682                           736          
00001682  4EB9 00002F0C            737              JSR         printEA
00001688                           738          
00001688  43F9 00003CE5            739              LEA         newLine, A1           ; Display space
0000168E  103C 000E                740              MOVE.B      #14, D0             ; command for trap call to display message
00001692  4E4F                     741              TRAP        #15                 ; trap call            
00001694                           742  
00001694  6000 F9AA                743              BRA         LOOP                ; go back to the loop
00001698                           744          
00001698                           745  opMOVEL     
00001698  4245                     746              CLR         D5                  ; Clear D5
0000169A  1A01                     747              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000169C  E245                     748              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
0000169E  CA7C 0007                749              AND         #seven,D5
000016A2                           750          
000016A2  4244                     751              CLR         D4                  ; Clear out D4
000016A4  1801                     752              MOVE.B      D1,D4               ; Copy byte over to store destination mode
000016A6  C87C 0001                753              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
000016AA                           754          
000016AA  4241                     755              CLR          D1
000016AC  4242                     756              CLR          D2
000016AE  1218                     757              MOVE.B      (A0)+,D1            ; Copy byte into D1
000016B0  1401                     758              MOVE.B      D1,D2
000016B2  EC42                     759              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000016B4  D842                     760              ADD         D2,D4               ; Adds the remaining bits to D4
000016B6                           761          
000016B6  B87C 0001                762              CMP         #one,D4             ; Check if it is MOVEA
000016BA  6700 0070                763              BEQ         opMOVEAL            ; If it is, branch off
000016BE                           764              
000016BE  43F9 00003D08            765              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000016C4  103C 000E                766              MOVE.B      #14, D0             ; command for trap call to display message
000016C8  4E4F                     767              TRAP        #15                 ; trap call  
000016CA                           768              
000016CA  43F9 00003D89            769              LEA         dispLong,A1
000016D0  103C 000E                770              MOVE.B      #14, D0             ; command for trap call to display message
000016D4  4E4F                     771              TRAP        #15                 ; trap call
000016D6                           772              
000016D6  43F9 00003CE9            773              LEA         space, A1           ; create spaces
000016DC  103C 000E                774              MOVE.B      #14, D0             ; command for trap call to display message
000016E0  4E4F                     775              TRAP        #15                 ; trap call
000016E2                           776          
000016E2  4242                     777              CLR         D2
000016E4  1401                     778              MOVE.B      D1,D2               ; Copy new byte over to D2
000016E6  E642                     779              ASR         #three,D2           ; Shift source register out
000016E8  C47C 0007                780              AND         #seven,D2           ; Set everything to 0 except for the mode
000016EC                           781          
000016EC  4243                     782              CLR         D3
000016EE  1601                     783              MOVE.B      D1,D3
000016F0  C67C 0007                784              AND         #seven,D3
000016F4                           785              
000016F4  4246                     786              CLR         D6
000016F6  1C3C 0001                787              MOVE.B      #1,D6
000016FA  4EB9 00002F0C            788              JSR         printEA
00001700  4246                     789              CLR         D6
00001702                           790              
00001702  43F9 00003CF0            791              LEA         comma, A1           ; Display comma
00001708  103C 000E                792              MOVE.B      #14, D0             ; command for trap call to display message
0000170C  4E4F                     793              TRAP        #15                 ; trap call
0000170E                           794          
0000170E  4242                     795              CLR         D2
00001710  4243                     796              CLR         D3
00001712  1404                     797              MOVE.B      D4,D2
00001714  1605                     798              MOVE.B      D5,D3
00001716                           799             
00001716  4EB9 00002F0C            800              JSR         printEA
0000171C                           801  
0000171C  43F9 00003CE5            802              LEA         newLine, A1           ; Display space
00001722  103C 000E                803              MOVE.B      #14, D0             ; command for trap call to display message
00001726  4E4F                     804              TRAP        #15                 ; trap call            
00001728                           805  
00001728  6000 F916                806              BRA         LOOP                ; go back to the loop
0000172C                           807              
0000172C                           808  opMOVEAL
0000172C  43F9 00003D0D            809              LEA         MOVEAmatch,A1
00001732  103C 000E                810              MOVE.B      #14, D0             ; command for trap call to display message
00001736  4E4F                     811              TRAP        #15                 ; trap call
00001738                           812              
00001738  43F9 00003D89            813              LEA         dispLong,A1
0000173E  103C 000E                814              MOVE.B      #14, D0             ; command for trap call to display message
00001742  4E4F                     815              TRAP        #15                 ; trap call
00001744                           816              
00001744                           817  
00001744  43F9 00003CE9            818              LEA         space, A1           ; create spaces
0000174A  103C 000E                819              MOVE.B      #14, D0             ; command for trap call to display message
0000174E  4E4F                     820              TRAP        #15                 ; trap call
00001750                           821              
00001750  4242                     822              CLR         D2
00001752  1401                     823              MOVE.B      D1,D2               ; Copy new byte over to D2
00001754  E642                     824              ASR         #three,D2           ; Shift source register out
00001756  C47C 0007                825              AND         #seven,D2           ; Set everything to 0 except for the mode
0000175A                           826          
0000175A  4243                     827              CLR         D3
0000175C  1601                     828              MOVE.B      D1,D3
0000175E  C67C 0007                829              AND         #seven,D3
00001762                           830              
00001762  4241                     831              CLR         D1                  ; Clear D1
00001764                           832              
00001764  4EB9 00002F0C            833              JSR         printEA
0000176A                           834              
0000176A  43F9 00003CF0            835              LEA         comma, A1           ; Display comma
00001770  103C 000E                836              MOVE.B      #14, D0             ; command for trap call to display message
00001774  4E4F                     837              TRAP        #15                 ; trap call
00001776                           838  
00001776  4242                     839              CLR         D2
00001778  4243                     840              CLR         D3
0000177A  1404                     841              MOVE.B      D4,D2
0000177C  1605                     842              MOVE.B      D5,D3
0000177E                           843          
0000177E  4EB9 00002F0C            844              JSR         printEA
00001784                           845          
00001784  43F9 00003CE5            846              LEA         newLine, A1           ; Display space
0000178A  103C 000E                847              MOVE.B      #14, D0             ; command for trap call to display message
0000178E  4E4F                     848              TRAP        #15                 ; trap call            
00001790                           849  
00001790  6000 F8AE                850              BRA         LOOP                ; go back to the loop
00001794                           851  
00001794                           852  opMOVEW
00001794  4245                     853              CLR         D5                  ; Clear D5
00001796  1A01                     854              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001798  E245                     855              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
0000179A  CA7C 0007                856              AND         #seven,D5
0000179E                           857          
0000179E  4244                     858              CLR         D4                  ; Clear out D4
000017A0  1801                     859              MOVE.B      D1,D4               ; Copy byte over to store destination mode
000017A2  C87C 0001                860              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
000017A6                           861          
000017A6  4241                     862              CLR          D1
000017A8  4242                     863              CLR          D2
000017AA  1218                     864              MOVE.B      (A0)+,D1            ; Copy byte into D1
000017AC  1401                     865              MOVE.B      D1,D2
000017AE  EC42                     866              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000017B0  D842                     867              ADD         D2,D4               ; Adds the remaining bits to D4
000017B2                           868          
000017B2  B87C 0001                869              CMP         #one,D4             ; Check if it is MOVEA
000017B6  6700 006A                870              BEQ         opMOVEAW            ; If it is, branch off
000017BA                           871              
000017BA  43F9 00003D08            872              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000017C0  103C 000E                873              MOVE.B      #14, D0             ; command for trap call to display message
000017C4  4E4F                     874              TRAP        #15                 ; trap call  
000017C6                           875              
000017C6  43F9 00003D86            876              LEA         dispWord,A1
000017CC  103C 000E                877              MOVE.B      #14, D0             ; command for trap call to display message
000017D0  4E4F                     878              TRAP        #15                 ; trap call
000017D2                           879              
000017D2  43F9 00003CE9            880              LEA         space, A1           ; create spaces
000017D8  103C 000E                881              MOVE.B      #14, D0             ; command for trap call to display message
000017DC  4E4F                     882              TRAP        #15                 ; trap call
000017DE                           883          
000017DE  4242                     884              CLR         D2
000017E0  1401                     885              MOVE.B      D1,D2               ; Copy new byte over to D2
000017E2  E642                     886              ASR         #three,D2           ; Shift source register out
000017E4  C47C 0007                887              AND         #seven,D2           ; Set everything to 0 except for the mode
000017E8                           888          
000017E8  4243                     889              CLR         D3
000017EA  1601                     890              MOVE.B      D1,D3
000017EC  C67C 0007                891              AND         #seven,D3
000017F0                           892              
000017F0  4241                     893              CLR         D1                  ; Clear D1
000017F2                           894              
000017F2  4EB9 00002F0C            895              JSR         printEA
000017F8                           896              
000017F8  43F9 00003CF0            897              LEA         comma, A1           ; Display comma
000017FE  103C 000E                898              MOVE.B      #14, D0             ; command for trap call to display message
00001802  4E4F                     899              TRAP        #15                 ; trap call
00001804                           900          
00001804  4242                     901              CLR         D2
00001806  4243                     902              CLR         D3
00001808  1404                     903              MOVE.B      D4,D2
0000180A  1605                     904              MOVE.B      D5,D3
0000180C                           905              
0000180C  4EB9 00002F0C            906              JSR         printEA
00001812                           907          
00001812  43F9 00003CE5            908              LEA         newLine, A1           ; Display space
00001818  103C 000E                909              MOVE.B      #14, D0             ; command for trap call to display message
0000181C  4E4F                     910              TRAP        #15                 ; trap call            
0000181E                           911  
0000181E  6000 F820                912              BRA         LOOP                ; go back to the loop
00001822                           913              
00001822                           914  opMOVEAW  
00001822  43F9 00003D0D            915              LEA         MOVEAmatch,A1
00001828  103C 000E                916              MOVE.B      #14, D0             ; command for trap call to display message
0000182C  4E4F                     917              TRAP        #15                 ; trap call
0000182E                           918              
0000182E  43F9 00003D86            919              LEA         dispWord,A1
00001834  103C 000E                920              MOVE.B      #14, D0             ; command for trap call to display message
00001838  4E4F                     921              TRAP        #15                 ; trap call
0000183A                           922              
0000183A  43F9 00003CE9            923              LEA         space, A1           ; create spaces
00001840  103C 000E                924              MOVE.B      #14, D0             ; command for trap call to display message
00001844  4E4F                     925              TRAP        #15                 ; trap call
00001846                           926              
00001846  4242                     927              CLR         D2
00001848  1401                     928              MOVE.B      D1,D2               ; Copy new byte over to D2
0000184A  E642                     929              ASR         #three,D2           ; Shift source register out
0000184C  C47C 0007                930              AND         #seven,D2           ; Set everything to 0 except for the mode
00001850                           931          
00001850  4243                     932              CLR         D3
00001852  1601                     933              MOVE.B      D1,D3
00001854  C67C 0007                934              AND         #seven,D3
00001858                           935              
00001858  4241                     936              CLR         D1                  ; Clear D1      
0000185A                           937              
0000185A  4EB9 00002F0C            938              JSR         printEA
00001860                           939              
00001860  43F9 00003CF0            940              LEA         comma, A1           ; Display comma
00001866  103C 000E                941              MOVE.B      #14, D0             ; command for trap call to display message
0000186A  4E4F                     942              TRAP        #15                 ; trap call
0000186C                           943  
0000186C  4242                     944              CLR         D2
0000186E  4243                     945              CLR         D3
00001870  1404                     946              MOVE.B      D4,D2
00001872  1605                     947              MOVE.B      D5,D3
00001874                           948          
00001874  4EB9 00002F0C            949              JSR         printEA
0000187A                           950          
0000187A  43F9 00003CE5            951              LEA         newLine, A1           ; Display space
00001880  103C 000E                952              MOVE.B      #14, D0             ; command for trap call to display message
00001884  4E4F                     953              TRAP        #15                 ; trap call            
00001886                           954  
00001886  6000 F7B8                955              BRA         LOOP                ; go back to the loop
0000188A                           956  
0000188A                           957  ***********************************************************************************************************
0000188A                           958  *
0000188A                           959  *                   NEG OPCODE
0000188A                           960  *
0000188A                           961  ***********************************************************************************************************
0000188A                           962  
0000188A                           963  opNEG   
0000188A  43F9 00003D13            964              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001890  103C 000E                965              MOVE.B      #14, D0             ; command for trap call to display message
00001894  4E4F                     966              TRAP        #15                 ; trap call
00001896                           967          
00001896                           968          
00001896  1218                     969              MOVE.B      (A0)+, D1
00001898  1401                     970              MOVE.B      D1,D2               ; copy data over
0000189A  EC42                     971              ASR         #six,D2
0000189C                           972              
0000189C  B47C 0000                973              CMP         #zero,D2
000018A0  6700 0016                974              BEQ         opNEGB
000018A4  B47C 0001                975              CMP         #one,D2
000018A8  6700 008E                976              BEQ         opNEGW
000018AC  B47C 0002                977              CMP         #two,D2
000018B0  6700 0046                978              BEQ         opNEGL
000018B4  6000 1CCE                979              BRA         invalid
000018B8                           980              
000018B8                           981  opNEGB
000018B8  43F9 00003D83            982              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
000018BE  103C 000E                983              MOVE.B      #14, D0             ; command for trap call to display message
000018C2  4E4F                     984              TRAP        #15                 ; trap call
000018C4                           985          
000018C4  43F9 00003CE9            986              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000018CA  103C 000E                987              MOVE.B      #14, D0             ; command for trap call to display message
000018CE  4E4F                     988              TRAP        #15                 ; trap call
000018D0                           989          
000018D0  4242                     990              CLR         D2                  ; Clear Data register 2
000018D2  3401                     991              MOVE        D1,D2               ; Move byte into D2
000018D4  E642                     992              ASR         #three,D2           ; Shift mode into place and moves mode into place
000018D6  C47C 0007                993              AND         #seven,D2           ; Stores mode
000018DA                           994              
000018DA  4243                     995              CLR         D3
000018DC  3601                     996              MOVE        D1,D3
000018DE  C67C 0007                997              AND         #seven,D3
000018E2                           998          
000018E2  4EB9 00002F0C            999              JSR         printEA
000018E8                          1000                  
000018E8  43F9 00003CE5           1001              LEA         newLine, A1           ; Display space
000018EE  103C 000E               1002              MOVE.B      #14, D0             ; command for trap call to display message
000018F2  4E4F                    1003              TRAP        #15                 ; trap call  
000018F4                          1004          
000018F4  6000 F74A               1005              BRA         LOOP
000018F8                          1006  
000018F8                          1007  opNEGL
000018F8  43F9 00003D89           1008              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
000018FE  103C 000E               1009              MOVE.B      #14, D0             ; command for trap call to display message
00001902  4E4F                    1010              TRAP        #15                 ; trap call
00001904                          1011  
00001904  43F9 00003CE9           1012              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000190A  103C 000E               1013              MOVE.B      #14, D0             ; command for trap call to display message
0000190E  4E4F                    1014              TRAP        #15                 ; trap call
00001910                          1015                  
00001910  4242                    1016              CLR         D2                  ; Clear Data register 2
00001912  3401                    1017              MOVE        D1,D2               ; Move byte into D2
00001914  E642                    1018              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001916  C47C 0007               1019              AND         #seven,D2           ; Stores mode
0000191A                          1020          
0000191A  4243                    1021              CLR         D3
0000191C  3601                    1022              MOVE        D1,D3
0000191E  C67C 0007               1023              AND         #seven,D3
00001922                          1024          
00001922  4EB9 00002F0C           1025              JSR         printEA
00001928                          1026                      
00001928  43F9 00003CE5           1027              LEA         newLine, A1         ; Display space
0000192E  103C 000E               1028              MOVE.B      #14, D0             ; command for trap call to display message
00001932  4E4F                    1029              TRAP        #15                 ; trap call  
00001934                          1030          
00001934  6000 F70A               1031              BRA         LOOP
00001938                          1032  
00001938                          1033  opNEGW
00001938  43F9 00003D86           1034              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
0000193E  103C 000E               1035              MOVE.B      #14, D0             ; command for trap call to display message
00001942  4E4F                    1036              TRAP        #15                 ; trap call
00001944                          1037          
00001944  43F9 00003CE9           1038              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000194A  103C 000E               1039              MOVE.B      #14, D0             ; command for trap call to display message
0000194E  4E4F                    1040              TRAP        #15                 ; trap call        
00001950                          1041                  
00001950  4242                    1042              CLR         D2                  ; Clear Data register 2
00001952  3401                    1043              MOVE        D1,D2               ; Move byte into D2
00001954  E642                    1044              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001956  C47C 0007               1045              AND         #seven,D2           ; Stores mode
0000195A                          1046          
0000195A  4243                    1047              CLR         D3
0000195C  3601                    1048              MOVE        D1,D3
0000195E  C67C 0007               1049              AND         #seven,D3
00001962                          1050          
00001962  4EB9 00002F0C           1051              JSR         printEA
00001968                          1052              
00001968  43F9 00003CE5           1053              LEA         newLine, A1           ; Display space
0000196E  103C 000E               1054              MOVE.B      #14, D0             ; command for trap call to display message
00001972  4E4F                    1055              TRAP        #15                 ; trap call  
00001974                          1056          
00001974  6000 F6CA               1057              BRA         LOOP
00001978                          1058              
00001978                          1059  ***********************************************************************************************************
00001978                          1060  *
00001978                          1061  *                   RTS_JSR Helper Function
00001978                          1062  *
00001978                          1063  ***********************************************************************************************************
00001978                          1064  
00001978                          1065  opRTSJSR
00001978  1218                    1066              MOVE.B      (A0)+, D1
0000197A                          1067              
0000197A  1401                    1068              MOVE.B      D1,D2               ; copy data over
0000197C  B47C 0075               1069              CMP         #117,D2
00001980  6700 0050               1070              BEQ         opRTS
00001984                          1071              
00001984  EC42                    1072              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
00001986  B47C 0002               1073              CMP         #two,D2             ; Checking if it is JSR
0000198A  6700 0006               1074              BEQ         opJSR               ; It is equal, so branch off to opJSR
0000198E                          1075  
0000198E  6000 1BF4               1076              BRA         invalid
00001992                          1077              
00001992                          1078  ***********************************************************************************************************
00001992                          1079  *
00001992                          1080  *                   JSR OPCODE
00001992                          1081  *
00001992                          1082  ***********************************************************************************************************
00001992                          1083  
00001992                          1084  opJSR
00001992  43F9 00003D1B           1085              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001998  103C 000E               1086              MOVE.B      #14, D0             ; command for trap call to display message
0000199C  4E4F                    1087              TRAP        #15                 ; trap call
0000199E                          1088              
0000199E  43F9 00003CE9           1089              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000019A4  103C 000E               1090              MOVE.B      #14, D0             ; command for trap call to display message
000019A8  4E4F                    1091              TRAP        #15                 ; trap call
000019AA                          1092              
000019AA  4242                    1093              CLR         D2
000019AC  4243                    1094              CLR         D3
000019AE                          1095              
000019AE  1401                    1096              MOVE.B      D1,D2
000019B0  E642                    1097              ASR         #three,D2
000019B2  C47C 0007               1098              AND         #seven,D2
000019B6                          1099              
000019B6  1601                    1100              MOVE.B      D1,D3
000019B8  C67C 0007               1101              AND         #seven,D3
000019BC                          1102              
000019BC  4EB9 00002F0C           1103              JSR         printEA
000019C2                          1104              
000019C2  43F9 00003CE5           1105              LEA         newLine, A1           ; Display space
000019C8  103C 000E               1106              MOVE.B      #14, D0             ; command for trap call to display message
000019CC  4E4F                    1107              TRAP        #15                 ; trap call  
000019CE                          1108              
000019CE  6000 F670               1109              BRA         loop   
000019D2                          1110  
000019D2                          1111  ***********************************************************************************************************
000019D2                          1112  *
000019D2                          1113  *                   RTS OPCODE
000019D2                          1114  *
000019D2                          1115  ***********************************************************************************************************
000019D2                          1116  
000019D2                          1117  opRTS
000019D2  43F9 00003D17           1118              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
000019D8  103C 000E               1119              MOVE.B      #14, D0             ; command for trap call to display message
000019DC  4E4F                    1120              TRAP        #15                 ; trap call
000019DE                          1121              
000019DE  43F9 00003CE5           1122              LEA         newLine, A1           ; Display space
000019E4  103C 000E               1123              MOVE.B      #14, D0             ; command for trap call to display message
000019E8  4E4F                    1124              TRAP        #15                 ; trap call 
000019EA                          1125              
000019EA  6000 F654               1126              BRA         loop
000019EE                          1127              
000019EE                          1128  ***********************************************************************************************************
000019EE                          1129  *
000019EE                          1130  *                   MOVEM_LEA OPCODE
000019EE                          1131  *
000019EE                          1132  ***********************************************************************************************************
000019EE                          1133  
000019EE                          1134  opMOVEMLEA
000019EE  4242                    1135              CLR         D2                  ; Clear D2
000019F0  1401                    1136              MOVE.B      D1,D2               ; Copy byte over
000019F2  C47C 000F               1137              AND         #secNib,D2          ; Check only the second nibble
000019F6  B47C 000C               1138              CMP         #twelve,D2          ; Compare the second nibble to twelve
000019FA  6700 000E               1139              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
000019FE  B47C 0008               1140              CMP         #eight,D2           ; Compare the second nibble to eight
00001A02  6700 0006               1141              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
00001A06  6000 008C               1142              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
00001A0A                          1143              
00001A0A                          1144  ***********************************************************************************************************
00001A0A                          1145  *
00001A0A                          1146  *                   MOVEM OPCODE
00001A0A                          1147  *
00001A0A                          1148  ***********************************************************************************************************
00001A0A                          1149  
00001A0A                          1150  opMOVEM            
00001A0A  4246                    1151              CLR         D6                  ; Clearing D4 to store dr field
00001A0C  1C01                    1152              MOVE.B      D1,D6               ; Moving byte to find dr field
00001A0E  E446                    1153              ASR         #two,D6             ; Moving dr field to readable spot
00001A10  CC7C 0001               1154              AND         #one,D6             ; seting everything except dr to 0
00001A14                          1155  
00001A14  4241                    1156              CLR         D1  
00001A16  1218                    1157              MOVE.B      (A0)+, D1           ; Taking in next byte
00001A18                          1158              
00001A18  4245                    1159              CLR         D5
00001A1A  1A01                    1160              MOVE.B      D1,D5               ; Using D6 to check if this is indeed MOVEM
00001A1C  EE45                    1161              ASR         #seven,D5
00001A1E  CA7C 0001               1162              AND         #one,D5
00001A22  BA7C 0001               1163              CMP         #one,D5             ; This bit should be one if this is MOVEM
00001A26  6600 1B5C               1164              BNE         invalid             ; If this is not 1 then this is not moveM
00001A2A  4245                    1165              CLR         D5
00001A2C                          1166              
00001A2C  43F9 00003D1F           1167              LEA         MOVEMMatch, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001A32  103C 000E               1168              MOVE.B      #14, D0             ; command for trap call to display message
00001A36  4E4F                    1169              TRAP        #15                 ; trap call
00001A38                          1170              
00001A38  4245                    1171              CLR         D5                  ; Clearing D5 to store size
00001A3A  1A01                    1172              MOVE.B      D1,D5               ; Moving byte that contains bit for size
00001A3C  EC45                    1173              ASR         #six,D5            ; Moving size bit to the very right to read
00001A3E  CA7C 0001               1174              AND         #one,D5             ; Isolating the one bit for size
00001A42                          1175              
00001A42  4242                    1176              CLR         D2                  ; Storing EA mode in D2
00001A44  1401                    1177              MOVE.B      D1,D2               
00001A46  E642                    1178              ASR         #three,D2
00001A48  C47C 0007               1179              AND         #seven,D2
00001A4C                          1180              
00001A4C  4243                    1181              CLR         D3                  ; Storing EA register into D3
00001A4E  1601                    1182              MOVE.B      D1,D3
00001A50  C67C 0007               1183              AND         #seven,D3
00001A54                          1184              
00001A54  4EB9 0000358E           1185              JSR         MOVEMBRA
00001A5A                          1186              
00001A5A  B47C 0003               1187              CMP         #three,D2           ; Checks if this is post increment
00001A5E  6700 0024               1188              BEQ         skipPrintEA         ; If it is, skipping printing EA again, because it is printed already in JSR
00001A62                          1189              
00001A62  43F9 00003CF0           1190              LEA         comma, A1           ; Display comma
00001A68  103C 000E               1191              MOVE.B      #14, D0             ; command for trap call to display message
00001A6C  4E4F                    1192              TRAP        #15                 ; trap call
00001A6E                          1193              
00001A6E  4EB9 00002F0C           1194              JSR         printEA
00001A74                          1195              
00001A74  43F9 00003CE5           1196              LEA         newline, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001A7A  103C 000E               1197              MOVE.B      #14, D0             ; command for trap call to display message
00001A7E  4E4F                    1198              TRAP        #15                 ; trap call            
00001A80                          1199  
00001A80  6000 F5BE               1200              BRA         loop            
00001A84                          1201  
00001A84                          1202  skipPrintEA 
00001A84  43F9 00003CE5           1203              LEA         newline, A1        
00001A8A  103C 000E               1204              MOVE.B      #14, D0             ; command for trap call to display message
00001A8E  4E4F                    1205              TRAP        #15                 ; trap call            
00001A90                          1206  
00001A90  6000 F5AE               1207              BRA         loop 
00001A94                          1208              
00001A94                          1209  ***********************************************************************************************************
00001A94                          1210  *
00001A94                          1211  *               LEA OPCODE
00001A94                          1212  *
00001A94                          1213  ***********************************************************************************************************
00001A94                          1214  
00001A94                          1215  opLEA
00001A94  4244                    1216              CLR         D4                  ; Clearing space for source register
00001A96  1801                    1217              MOVE.B      D1,D4               ; Moving byte to isolate register
00001A98  E244                    1218              ASR         #one,D4
00001A9A  C87C 0007               1219              AND         #seven,D4           ; Isolated register
00001A9E                          1220  
00001A9E  4245                    1221              CLR         D5                  ; Clearing D5 to check if bits match LEA static bits
00001AA0  1A01                    1222              MOVE.B      D1,D5
00001AA2  CA7C 0001               1223              AND         #one,D5
00001AA6  E545                    1224              ASL         #two,D5
00001AA8                          1225              
00001AA8  1218                    1226              MOVE.B      (A0)+, D1           ; Taking in next byte
00001AAA                          1227              
00001AAA  1C01                    1228              MOVE.B      D1,D6
00001AAC  EC46                    1229              ASR         #six,D6
00001AAE  DA46                    1230              ADD         D6,D5
00001AB0  4246                    1231              CLR         D6
00001AB2                          1232  
00001AB2  BA7C 0007               1233              CMP         #seven,D5
00001AB6  6600 1ACC               1234              BNE         invalid   
00001ABA                          1235              
00001ABA  43F9 00003D25           1236              LEA         LEAmatch, A1        ; we know that the opcode will be LEA, so load A1 to print message
00001AC0  103C 000E               1237              MOVE.B      #14, D0             ; command for trap call to display message
00001AC4  4E4F                    1238              TRAP        #15                 ; trap call            
00001AC6                          1239  
00001AC6  43F9 00003CE9           1240              LEA         space, A1         ; we know that the opcode will be MOVEM, so load A1 to print message
00001ACC  103C 000E               1241              MOVE.B      #14, D0             ; command for trap call to display message
00001AD0  4E4F                    1242              TRAP        #15                 ; trap call            
00001AD2                          1243              
00001AD2  4242                    1244              CLR         D2
00001AD4  1401                    1245              MOVE.B      D1,D2
00001AD6  E642                    1246              ASR         #three,D2
00001AD8  C47C 0007               1247              AND         #seven,D2
00001ADC                          1248              
00001ADC  4243                    1249              CLR         D3
00001ADE  1601                    1250              MOVE.B      D1,D3
00001AE0  C67C 0007               1251              AND         #seven,D3
00001AE4                          1252              
00001AE4  4EB9 00002F0C           1253              JSR         printEA
00001AEA                          1254              
00001AEA  43F9 00003CF0           1255              LEA         comma, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001AF0  103C 000E               1256              MOVE.B      #14, D0             ; command for trap call to display message
00001AF4  4E4F                    1257              TRAP        #15                 ; trap call            
00001AF6                          1258              
00001AF6                          1259              
00001AF6  4243                    1260              CLR         D3
00001AF8  1604                    1261              MOVE.B      D4,D3
00001AFA  143C 0001               1262              MOVE.B      #one,D2
00001AFE                          1263              
00001AFE  4EB9 00002F0C           1264              JSR         printEA             ; Prints out source address
00001B04                          1265              
00001B04  43F9 00003CE5           1266              LEA         newline, A1         ; Prints new line
00001B0A  103C 000E               1267              MOVE.B      #14, D0             ; command for trap call to display message
00001B0E  4E4F                    1268              TRAP        #15                 ; trap call
00001B10                          1269  
00001B10  6000 F52E               1270              BRA         loop                        
00001B14                          1271  
00001B14                          1272  ***********************************************************************************************************
00001B14                          1273  *
00001B14                          1274  *                   OR OPCODE
00001B14                          1275  *
00001B14                          1276  ***********************************************************************************************************
00001B14                          1277              
00001B14                          1278  opOR       
00001B14  43F9 00003D47           1279              LEA         ORmatch,A1
00001B1A  103C 000E               1280              MOVE.B      #14,D0
00001B1E  4E4F                    1281              TRAP        #15
00001B20                          1282              
00001B20  E141                    1283              ASL         #eight,D1
00001B22  1401                    1284              MOVE.B      D1,D2
00001B24                          1285              
00001B24  4242                    1286              CLR         D2
00001B26                          1287              ; These are for EA to Dn direction
00001B26  B43C 0000               1288              CMP.B       #zero,D2
00001B2A  6700 002A               1289              BEQ         opORB               ; Byte in opmode
00001B2E  B43C 0001               1290              CMP.B       #one,D2
00001B32  6700 007C               1291              BEQ         opORW               ; Word in opmode
00001B36  B43C 0002               1292              CMP.B       #two,D2
00001B3A  6700 00D0               1293              BEQ         opORL               ; Long in opmode
00001B3E                          1294              
00001B3E                          1295              ; These are for Dn to EA direction
00001B3E  B43C 0004               1296              CMP.B       #four,D2
00001B42  6700 0012               1297              BEQ         opORB               ; Byte in opmode
00001B46  B43C 0005               1298              CMP.B       #five,D2
00001B4A  6700 0064               1299              BEQ         opORW               ; Word in opmode
00001B4E  B43C 0006               1300              CMP.B       #six,D2
00001B52  6700 00B8               1301              BEQ         opORL               ; Long in opmode
00001B56                          1302              
00001B56  43F9 00003D83           1303  opORB       LEA         dispByte,A1
00001B5C  103C 000E               1304              MOVE.B      #14,D0
00001B60  4E4F                    1305              TRAP        #15
00001B62                          1306              
00001B62  43F9 00003CE9           1307              LEA         space, A1           ; Display space
00001B68  103C 000E               1308              MOVE.B      #14, D0             ; command for trap call to display message
00001B6C  4E4F                    1309              TRAP        #15                 ; trap call
00001B6E                          1310              
00001B6E                          1311  
00001B6E  1401                    1312              MOVE.B      D1,D2
00001B70  E642                    1313              ASR         #3,D2
00001B72  C47C 0007               1314              AND         #$07,D2
00001B76  1601                    1315              MOVE.B      D1,D3
00001B78  C67C 0007               1316              AND         #$07,D3
00001B7C  4EB9 00002F0C           1317              JSR         printEA         ; Determines the "left" operand register
00001B82                          1318              
00001B82  43F9 00003CF0           1319              LEA         comma, A1           ; Display space
00001B88  103C 000E               1320              MOVE.B      #14, D0             ; command for trap call to display message
00001B8C  4E4F                    1321              TRAP        #15                 ; trap call
00001B8E                          1322              
00001B8E  4242                    1323              CLR         D2
00001B90  3601                    1324              MOVE.W      D1,D3
00001B92  E043                    1325              ASR         #eight,D3
00001B94  E243                    1326              ASR         #one,D3
00001B96  C67C 0007               1327              AND         #$07,D3
00001B9A  4EB9 00002F0C           1328              JSR         printEA
00001BA0                          1329              
00001BA0  43F9 00003CE5           1330              LEA         newLine,A1
00001BA6  103C 000E               1331              MOVE.B      #14,D0
00001BAA  4E4F                    1332              TRAP        #15
00001BAC                          1333              
00001BAC  6000 F492               1334              BRA         LOOP
00001BB0                          1335              
00001BB0                          1336              
00001BB0  43F9 00003D86           1337  opORW       LEA         dispWord,A1
00001BB6  103C 000E               1338              MOVE.B      #14,D0
00001BBA  4E4F                    1339              TRAP        #15
00001BBC                          1340              
00001BBC  43F9 00003CE9           1341              LEA         space, A1           ; Display space
00001BC2  103C 000E               1342              MOVE.B      #14, D0             ; command for trap call to display message
00001BC6  4E4F                    1343              TRAP        #15                 ; trap call
00001BC8                          1344              
00001BC8  4242                    1345              CLR         D2
00001BCA  1401                    1346              MOVE.B      D1,D2
00001BCC  E642                    1347              ASR         #3,D2
00001BCE  C47C 0007               1348              AND         #$07,D2
00001BD2  1601                    1349              MOVE.B      D1,D3
00001BD4  C67C 0007               1350              AND         #$07,D3
00001BD8  4EB9 00002F0C           1351              JSR         printEA         ; Determines the "left" operand register
00001BDE                          1352              
00001BDE  43F9 00003CF0           1353              LEA         comma, A1           ; Display space
00001BE4  103C 000E               1354              MOVE.B      #14, D0             ; command for trap call to display message
00001BE8  4E4F                    1355              TRAP        #15                 ; trap call
00001BEA                          1356              
00001BEA  4242                    1357              CLR         D2
00001BEC  3601                    1358              MOVE.W      D1,D3
00001BEE  E043                    1359              ASR         #eight,D3
00001BF0  E243                    1360              ASR         #one,D3
00001BF2  C67C 0007               1361              AND         #$07,D3
00001BF6  4EB9 00002F0C           1362              JSR         printEA
00001BFC                          1363              
00001BFC  43F9 00003CE5           1364              LEA         newLine,A1
00001C02  103C 000E               1365              MOVE.B      #14,D0
00001C06  4E4F                    1366              TRAP        #15
00001C08                          1367              
00001C08  6000 F436               1368              BRA         LOOP
00001C0C                          1369              
00001C0C  43F9 00003D89           1370  opORL       LEA         dispLong,A1
00001C12  103C 000E               1371              MOVE.B      #14,D0
00001C16  4E4F                    1372              TRAP        #15
00001C18                          1373              
00001C18  43F9 00003CE9           1374              LEA         space, A1           ; Display space
00001C1E  103C 000E               1375              MOVE.B      #14, D0             ; command for trap call to display message
00001C22  4E4F                    1376              TRAP        #15                 ; trap call
00001C24                          1377              
00001C24  1401                    1378              MOVE.B      D1,D2
00001C26  E642                    1379              ASR         #3,D2
00001C28  C47C 0007               1380              AND         #$07,D2
00001C2C  1601                    1381              MOVE.B      D1,D3
00001C2E  C67C 0007               1382              AND         #$07,D3
00001C32  4EB9 00002F0C           1383              JSR         printEA         ; Determines the "left" operand register
00001C38                          1384              
00001C38  43F9 00003CF0           1385              LEA         comma, A1           ; Display space
00001C3E  103C 000E               1386              MOVE.B      #14, D0             ; command for trap call to display message
00001C42  4E4F                    1387              TRAP        #15                 ; trap call
00001C44                          1388              
00001C44  4242                    1389              CLR         D2
00001C46  3601                    1390              MOVE.W      D1,D3
00001C48  E043                    1391              ASR         #eight,D3
00001C4A  E243                    1392              ASR         #one,D3
00001C4C  C67C 0007               1393              AND         #$07,D3
00001C50  4EB9 00002F0C           1394              JSR         printEA
00001C56                          1395              
00001C56  43F9 00003CE5           1396              LEA         newLine,A1
00001C5C  103C 000E               1397              MOVE.B      #14,D0
00001C60  4E4F                    1398              TRAP        #15
00001C62                          1399              
00001C62  6000 F3DC               1400              BRA         LOOP            ; trap call
00001C66                          1401              
00001C66  6000 F3D8               1402              BRA         LOOP            ; DOUBLE CHECK THIS AGAIN AFTER MORE TESTING ALEX
00001C6A                          1403              
00001C6A                          1404  ***********************************************************************************************************
00001C6A                          1405  *
00001C6A                          1406  *                   DIVS OPCODE
00001C6A                          1407  *
00001C6A                          1408  ***********************************************************************************************************
00001C6A                          1409  
00001C6A                          1410  opDIVS      
00001C6A  43F9 00003D42           1411              LEA         DIVSmatch,A1
00001C70  103C 000E               1412              MOVE.B      #14,D0
00001C74  4E4F                    1413              TRAP        #15
00001C76                          1414              
00001C76  43F9 00003CE9           1415              LEA         space, A1           ; Display space
00001C7C  103C 000E               1416              MOVE.B      #14, D0             ; command for trap call to display message
00001C80  4E4F                    1417              TRAP        #15                 ; trap call
00001C82                          1418              
00001C82  1401                    1419              MOVE.B      D1,D2
00001C84  E642                    1420              ASR         #3,D2
00001C86  C47C 0007               1421              AND         #$07,D2
00001C8A  1601                    1422              MOVE.B      D1,D3
00001C8C  C67C 0007               1423              AND         #$07,D3
00001C90  4EB9 00002F0C           1424              JSR         printEA
00001C96                          1425              
00001C96  43F9 00003CF0           1426              LEA         comma, A1           ; Display space
00001C9C  103C 000E               1427              MOVE.B      #14, D0             ; command for trap call to display message
00001CA0  4E4F                    1428              TRAP        #15                 ; trap call
00001CA2                          1429              
00001CA2  4242                    1430              CLR         D2
00001CA4  3601                    1431              MOVE.W      D1,D3
00001CA6  E043                    1432              ASR         #eight,D3
00001CA8  E243                    1433              ASR         #one,D3
00001CAA  C67C 0007               1434              AND         #$07,D3
00001CAE  4EB9 00002F0C           1435              JSR         printEA
00001CB4                          1436              
00001CB4  43F9 00003CE5           1437              LEA         newLine,A1
00001CBA  103C 000E               1438              MOVE.B      #14,D0
00001CBE  4E4F                    1439              TRAP        #15
00001CC0                          1440              
00001CC0  6000 F37E               1441              BRA         LOOP
00001CC4                          1442      
00001CC4  6000 F37A               1443              BRA     LOOP
00001CC8                          1444              
00001CC8                          1445  **********************************************************************************************************
00001CC8                          1446  *
00001CC8                          1447  *                   EOR OPCODE
00001CC8                          1448  *
00001CC8                          1449  ***********************************************************************************************************
00001CC8                          1450  
00001CC8                          1451  opEOR       
00001CC8  43F9 00003D4E           1452              LEA         EORmatch,A1
00001CCE  103C 000E               1453              MOVE.B      #14,D0
00001CD2  4E4F                    1454              TRAP        #15
00001CD4                          1455              
00001CD4  4242                    1456              CLR         D2
00001CD6                          1457              
00001CD6  1401                    1458              MOVE.B      D1,D2
00001CD8  EE42                    1459              ASR         #seven,D2           ; Move bits 7 places over to find opmode
00001CDA  C47C 0007               1460              AND         #$07,D2
00001CDE  B43C 0005               1461              CMP.B       #five,D2
00001CE2  6D00 0012               1462              BLT         opEORB              ; Byte in opmode
00001CE6  B43C 0005               1463              CMP.B       #five,D2
00001CEA  6700 006A               1464              BEQ         opEORW              ; Word in opmode
00001CEE  B43C 0005               1465              CMP.B       #five,D2
00001CF2  6E00 00C2               1466              BGT         opEORL              ; Long in opmode
00001CF6                          1467              
00001CF6                          1468  opEORB      
00001CF6  43F9 00003D83           1469              LEA         dispByte,A1
00001CFC  103C 000E               1470              MOVE.B      #14,D0
00001D00  4E4F                    1471              TRAP        #15
00001D02                          1472              
00001D02  43F9 00003CE9           1473              LEA         space, A1           ; Display space
00001D08  103C 000E               1474              MOVE.B      #14, D0             ; command for trap call to display message
00001D0C  4E4F                    1475              TRAP        #15                 ; trap call
00001D0E                          1476              
00001D0E  4242                    1477              CLR         D2
00001D10  4243                    1478              CLR         D3
00001D12  3601                    1479              MOVE.W      D1,D3
00001D14  E043                    1480              ASR         #eight,D3
00001D16  E243                    1481              ASR         #one,D3
00001D18  C67C 0007               1482              AND         #$07,D3
00001D1C  4EB9 00002F0C           1483              JSR         printEA
00001D22                          1484              
00001D22  43F9 00003CF0           1485              LEA         comma, A1           ; Display space
00001D28  103C 000E               1486              MOVE.B      #14, D0             ; command for trap call to display message
00001D2C  4E4F                    1487              TRAP        #15                 ; trap call
00001D2E                          1488              
00001D2E  4242                    1489              CLR         D2
00001D30  4243                    1490              CLR         D3
00001D32  1401                    1491              MOVE.B      D1,D2
00001D34  E642                    1492              ASR         #three,D2
00001D36  C47C 0007               1493              AND         #seven,D2
00001D3A  1601                    1494              MOVE.B      D1,D3
00001D3C  C67C 0007               1495              AND         #$07,D3
00001D40  4EB9 00002F0C           1496              JSR         printEA         ; Determines the "left" operand register
00001D46                          1497              
00001D46  43F9 00003CE5           1498              LEA         newLine,A1
00001D4C  103C 000E               1499              MOVE.B      #14,D0
00001D50  4E4F                    1500              TRAP        #15
00001D52                          1501              
00001D52  6000 F2EC               1502              BRA         LOOP
00001D56                          1503              
00001D56                          1504              
00001D56                          1505  opEORW      
00001D56  43F9 00003D86           1506              LEA         dispWord,A1
00001D5C  103C 000E               1507              MOVE.B      #14,D0
00001D60  4E4F                    1508              TRAP        #15
00001D62                          1509              
00001D62  43F9 00003CE9           1510              LEA         space, A1           ; Display space
00001D68  103C 000E               1511              MOVE.B      #14, D0             ; command for trap call to display message
00001D6C  4E4F                    1512              TRAP        #15                 ; trap call
00001D6E                          1513              
00001D6E  4242                    1514              CLR         D2
00001D70  4243                    1515              CLR         D3
00001D72  3601                    1516              MOVE.W      D1,D3
00001D74  E043                    1517              ASR         #eight,D3
00001D76  E243                    1518              ASR         #one,D3
00001D78  C67C 0007               1519              AND         #$07,D3
00001D7C  4EB9 00002F0C           1520              JSR         printEA
00001D82                          1521              
00001D82  43F9 00003CF0           1522              LEA         comma, A1           ; Display space
00001D88  103C 000E               1523              MOVE.B      #14, D0             ; command for trap call to display message
00001D8C  4E4F                    1524              TRAP        #15                 ; trap call
00001D8E                          1525              
00001D8E  4242                    1526              CLR         D2
00001D90  4243                    1527              CLR         D3
00001D92  1401                    1528              MOVE.B      D1,D2
00001D94  E642                    1529              ASR         #three,D2
00001D96  C47C 0007               1530              AND         #seven,D2
00001D9A  1601                    1531              MOVE.B      D1,D3
00001D9C  C67C 0007               1532              AND         #$07,D3
00001DA0  4EB9 00002F0C           1533              JSR         printEA         ; Determines the "left" operand register
00001DA6                          1534              
00001DA6  43F9 00003CE5           1535              LEA         newLine,A1
00001DAC  103C 000E               1536              MOVE.B      #14,D0
00001DB0  4E4F                    1537              TRAP        #15
00001DB2                          1538              
00001DB2  6000 F28C               1539              BRA         LOOP
00001DB6                          1540              
00001DB6                          1541  opEORL     
00001DB6  43F9 00003D89           1542              LEA         dispLong,A1
00001DBC  103C 000E               1543              MOVE.B      #14,D0
00001DC0  4E4F                    1544              TRAP        #15
00001DC2                          1545              
00001DC2  43F9 00003CE9           1546              LEA         space, A1           ; Display space
00001DC8  103C 000E               1547              MOVE.B      #14, D0             ; command for trap call to display message
00001DCC  4E4F                    1548              TRAP        #15                 ; trap call
00001DCE                          1549              
00001DCE  4242                    1550              CLR         D2
00001DD0  4243                    1551              CLR         D3
00001DD2  3601                    1552              MOVE.W      D1,D3
00001DD4  E043                    1553              ASR         #eight,D3
00001DD6  E243                    1554              ASR         #one,D3
00001DD8  C67C 0007               1555              AND         #$07,D3
00001DDC  4EB9 00002F0C           1556              JSR         printEA
00001DE2                          1557              
00001DE2  43F9 00003CF0           1558              LEA         comma, A1           ; Display space
00001DE8  103C 000E               1559              MOVE.B      #14, D0             ; command for trap call to display message
00001DEC  4E4F                    1560              TRAP        #15                 ; trap call
00001DEE                          1561              
00001DEE  4242                    1562              CLR         D2
00001DF0  4243                    1563              CLR         D3
00001DF2  1401                    1564              MOVE.B      D1,D2
00001DF4  E642                    1565              ASR         #three,D2
00001DF6  C47C 0007               1566              AND         #seven,D2
00001DFA  1601                    1567              MOVE.B      D1,D3
00001DFC  C67C 0007               1568              AND         #$07,D3
00001E00  4EB9 00002F0C           1569              JSR         printEA         ; Determines the "left" operand register
00001E06                          1570              
00001E06  43F9 00003CE5           1571              LEA         newLine,A1
00001E0C  103C 000E               1572              MOVE.B      #14,D0
00001E10  4E4F                    1573              TRAP        #15
00001E12                          1574              
00001E12  6000 F22C               1575              BRA         LOOP            ; trap call 
00001E16                          1576  
00001E16                          1577  ***********************************************************************************************************
00001E16                          1578  *
00001E16                          1579  *                   CMP OPCODE
00001E16                          1580  *
00001E16                          1581  ***********************************************************************************************************
00001E16                          1582  
00001E16                          1583  opCMP       
00001E16  43F9 00003D52           1584              LEA         CMPmatch,A1
00001E1C  103C 000E               1585              MOVE.B      #14,D0
00001E20  4E4F                    1586              TRAP        #15
00001E22                          1587              
00001E22  4242                    1588              CLR         D2
00001E24                          1589              
00001E24  1401                    1590              MOVE.B      D1,D2
00001E26  EC42                    1591              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001E28  C47C 0007               1592              AND         #$07,D2
00001E2C  B43C 0000               1593              CMP.B       #zero,D2
00001E30  6700 0016               1594              BEQ         opCMPB              ; Byte in opmode
00001E34  B43C 0001               1595              CMP.B       #one,D2
00001E38  6700 0068               1596              BEQ         opCMPW              ; Word in opmode
00001E3C  B43C 0002               1597              CMP.B       #two,D2
00001E40  6700 00BA               1598              BEQ         opCMPL              ; Long in opmode
00001E44                          1599              
00001E44  6000 1E34               1600              BRA         printInvalid        ; Incorrect input
00001E48                          1601  
00001E48                          1602  opCMPB      
00001E48  43F9 00003D83           1603              LEA         dispByte,A1
00001E4E  103C 000E               1604              MOVE.B      #14,D0
00001E52  4E4F                    1605              TRAP        #15
00001E54                          1606              
00001E54  43F9 00003CE9           1607              LEA         space, A1           ; Display space
00001E5A  103C 000E               1608              MOVE.B      #14, D0             ; command for trap call to display message
00001E5E  4E4F                    1609              TRAP        #15                 ; trap call
00001E60                          1610              
00001E60  1401                    1611              MOVE.B      D1,D2
00001E62  E642                    1612              ASR         #3,D2
00001E64  C47C 0007               1613              AND         #$07,D2
00001E68  1601                    1614              MOVE.B      D1,D3
00001E6A  C67C 0007               1615              AND         #$07,D3
00001E6E  4EB9 00002F0C           1616              JSR         printEA         ; Determines the "left" operand register
00001E74                          1617              
00001E74  43F9 00003CF0           1618              LEA         comma, A1           ; Display space
00001E7A  103C 000E               1619              MOVE.B      #14, D0             ; command for trap call to display message
00001E7E  4E4F                    1620              TRAP        #15                 ; trap call
00001E80                          1621              
00001E80  4242                    1622              CLR         D2
00001E82  3601                    1623              MOVE.W      D1,D3
00001E84  E043                    1624              ASR         #eight,D3
00001E86  E243                    1625              ASR         #one,D3
00001E88  C67C 0007               1626              AND         #$07,D3
00001E8C  4EB9 00002F0C           1627              JSR         printEA
00001E92                          1628              
00001E92  43F9 00003CE5           1629              LEA         newLine,A1
00001E98  103C 000E               1630              MOVE.B      #14,D0
00001E9C  4E4F                    1631              TRAP        #15
00001E9E                          1632              
00001E9E  6000 F1A0               1633              BRA         LOOP
00001EA2                          1634              
00001EA2                          1635  opCMPW      
00001EA2  43F9 00003D86           1636              LEA         dispWord,A1
00001EA8  103C 000E               1637              MOVE.B      #14,D0
00001EAC  4E4F                    1638              TRAP        #15
00001EAE                          1639              
00001EAE  43F9 00003CE9           1640              LEA         space, A1           ; Display space
00001EB4  103C 000E               1641              MOVE.B      #14, D0             ; command for trap call to display message
00001EB8  4E4F                    1642              TRAP        #15                 ; trap call
00001EBA                          1643              
00001EBA  1401                    1644              MOVE.B      D1,D2
00001EBC  E642                    1645              ASR         #3,D2
00001EBE  C47C 0007               1646              AND         #$07,D2
00001EC2  1601                    1647              MOVE.B      D1,D3
00001EC4  C67C 0007               1648              AND         #$07,D3
00001EC8  4EB9 00002F0C           1649              JSR         printEA         ; Determines the "left" operand register
00001ECE                          1650              
00001ECE  43F9 00003CF0           1651              LEA         comma, A1           ; Display space
00001ED4  103C 000E               1652              MOVE.B      #14, D0             ; command for trap call to display message
00001ED8  4E4F                    1653              TRAP        #15                 ; trap call
00001EDA                          1654              
00001EDA  4242                    1655              CLR         D2
00001EDC  3601                    1656              MOVE.W      D1,D3
00001EDE  E043                    1657              ASR         #eight,D3
00001EE0  E243                    1658              ASR         #one,D3
00001EE2  C67C 0007               1659              AND         #$07,D3
00001EE6  4EB9 00002F0C           1660              JSR         printEA
00001EEC                          1661              
00001EEC  43F9 00003CE5           1662              LEA         newLine,A1
00001EF2  103C 000E               1663              MOVE.B      #14,D0
00001EF6  4E4F                    1664              TRAP        #15
00001EF8                          1665              
00001EF8  6000 F146               1666              BRA         LOOP
00001EFC                          1667  
00001EFC                          1668  opCMPL      
00001EFC  43F9 00003D89           1669              LEA         dispLong,A1
00001F02  103C 000E               1670              MOVE.B      #14,D0
00001F06  4E4F                    1671              TRAP        #15
00001F08                          1672              
00001F08  43F9 00003CE9           1673              LEA         space, A1           ; Display space
00001F0E  103C 000E               1674              MOVE.B      #14, D0             ; command for trap call to display message
00001F12  4E4F                    1675              TRAP        #15                 ; trap call
00001F14                          1676              
00001F14  1401                    1677              MOVE.B      D1,D2
00001F16  E642                    1678              ASR         #3,D2
00001F18  C47C 0007               1679              AND         #$07,D2
00001F1C  1601                    1680              MOVE.B      D1,D3
00001F1E  C67C 0007               1681              AND         #$07,D3
00001F22  4EB9 00002F0C           1682              JSR         printEA         ; Determines the "left" operand register
00001F28                          1683              
00001F28  43F9 00003CF0           1684              LEA         comma, A1           ; Display space
00001F2E  103C 000E               1685              MOVE.B      #14, D0             ; command for trap call to display message
00001F32  4E4F                    1686              TRAP        #15                 ; trap call
00001F34                          1687              
00001F34  4242                    1688              CLR         D2
00001F36  3601                    1689              MOVE.W      D1,D3
00001F38  E043                    1690              ASR         #eight,D3
00001F3A  E243                    1691              ASR         #one,D3
00001F3C  C67C 0007               1692              AND         #$07,D3
00001F40  4EB9 00002F0C           1693              JSR         printEA
00001F46                          1694              
00001F46  43F9 00003CE5           1695              LEA         newLine,A1
00001F4C  103C 000E               1696              MOVE.B      #14,D0
00001F50  4E4F                    1697              TRAP        #15
00001F52                          1698              
00001F52  6000 F0EC               1699              BRA         LOOP
00001F56                          1700  
00001F56                          1701  ***********************************************************************************************************
00001F56                          1702  *
00001F56                          1703  *                   SUB OPCODE
00001F56                          1704  *
00001F56                          1705  ***********************************************************************************************************
00001F56                          1706  
00001F56                          1707  opSUB       
00001F56  43F9 00003D4A           1708              LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001F5C  103C 000E               1709              MOVE.B      #14, D0             ; command for trap call to display message
00001F60  4E4F                    1710              TRAP        #15                 ; trap call
00001F62                          1711          
00001F62                          1712          
00001F62  E141                    1713              ASL         #eight,D1
00001F64  1218                    1714              MOVE.B      (A0)+,D1
00001F66  4242                    1715              CLR         D2
00001F68                          1716              
00001F68  3401                    1717              MOVE.W      D1,D2
00001F6A  EC42                    1718              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001F6C  C47C 0007               1719              AND         #seven,D2
00001F70                          1720              
00001F70                          1721              ; These are for DN - EA
00001F70  B43C 0000               1722              CMP.B       #zero,D2
00001F74  6700 002A               1723              BEQ         opSUBB              ; Byte in opmode
00001F78  B43C 0001               1724              CMP.B       #one,D2
00001F7C  6700 007C               1725              BEQ         opSUBW              ; Word in opmode
00001F80  B43C 0002               1726              CMP.B       #two,D2
00001F84  6700 00CE               1727              BEQ         opSUBL              ; Long in opmode
00001F88                          1728              
00001F88                          1729              ; These are for EA - DN
00001F88  B43C 0004               1730              CMP.B       #four,D2
00001F8C  6700 0012               1731              BEQ         opSUBB              ; Byte in opmode
00001F90  B43C 0005               1732              CMP.B       #five,D2
00001F94  6700 0064               1733              BEQ         opSUBW              ; Word in opmode
00001F98  B43C 0006               1734              CMP.B       #six,D2
00001F9C  6700 00B6               1735              BEQ         opSUBL              ; Long in opmode
00001FA0                          1736              
00001FA0                          1737  opSUBB      
00001FA0  43F9 00003D83           1738              LEA         dispByte,A1
00001FA6  103C 000E               1739              MOVE.B      #14,D0
00001FAA  4E4F                    1740              TRAP        #15
00001FAC                          1741              
00001FAC  43F9 00003CE9           1742              LEA         space, A1           ; Display space
00001FB2  103C 000E               1743              MOVE.B      #14, D0             ; command for trap call to display message
00001FB6  4E4F                    1744              TRAP        #15                 ; trap call         
00001FB8                          1745              
00001FB8  1401                    1746              MOVE.B      D1,D2
00001FBA  E642                    1747              ASR         #3,D2
00001FBC  C47C 0007               1748              AND         #$07,D2
00001FC0  3601                    1749              MOVE.W      D1,D3
00001FC2  C67C 0007               1750              AND         #$07,D3
00001FC6  4EB9 00002F0C           1751              JSR         printEA         ; Determines the "left" operand register
00001FCC                          1752              
00001FCC  43F9 00003CF0           1753              LEA         comma, A1           ; Display space
00001FD2  103C 000E               1754              MOVE.B      #14, D0             ; command for trap call to display message
00001FD6  4E4F                    1755              TRAP        #15                 ; trap call
00001FD8                          1756              
00001FD8  4242                    1757              CLR         D2
00001FDA  3601                    1758              MOVE.W      D1,D3
00001FDC  E043                    1759              ASR         #eight,D3
00001FDE  E243                    1760              ASR         #one,D3
00001FE0  C67C 0007               1761              AND         #$07,D3
00001FE4  4EB9 00002F0C           1762              JSR         printEA
00001FEA                          1763              
00001FEA  43F9 00003CE5           1764              LEA         newLine,A1
00001FF0  103C 000E               1765              MOVE.B      #14,D0
00001FF4  4E4F                    1766              TRAP        #15
00001FF6                          1767              
00001FF6  6000 F048               1768              BRA         LOOP
00001FFA                          1769              
00001FFA                          1770              
00001FFA                          1771  opSUBW      
00001FFA  43F9 00003D86           1772              LEA         dispWord,A1
00002000  103C 000E               1773              MOVE.B      #14,D0
00002004  4E4F                    1774              TRAP        #15
00002006                          1775              
00002006  43F9 00003CE9           1776              LEA         space, A1           ; Display space
0000200C  103C 000E               1777              MOVE.B      #14, D0             ; command for trap call to display message
00002010  4E4F                    1778              TRAP        #15                 ; trap call         
00002012                          1779              
00002012  1401                    1780              MOVE.B      D1,D2
00002014  E642                    1781              ASR         #3,D2
00002016  C47C 0007               1782              AND         #$07,D2
0000201A  3601                    1783              MOVE.W      D1,D3
0000201C  C67C 0007               1784              AND         #$07,D3
00002020  4EB9 00002F0C           1785              JSR         printEA         ; Determines the "left" operand register
00002026                          1786              
00002026  43F9 00003CF0           1787              LEA         comma, A1           ; Display space
0000202C  103C 000E               1788              MOVE.B      #14, D0             ; command for trap call to display message
00002030  4E4F                    1789              TRAP        #15                 ; trap call
00002032                          1790              
00002032  4242                    1791              CLR         D2
00002034  3601                    1792              MOVE.W      D1,D3
00002036  E043                    1793              ASR         #eight,D3
00002038  E243                    1794              ASR         #one,D3
0000203A  C67C 0007               1795              AND         #$07,D3
0000203E  4EB9 00002F0C           1796              JSR         printEA
00002044                          1797              
00002044  43F9 00003CE5           1798              LEA         newLine,A1
0000204A  103C 000E               1799              MOVE.B      #14,D0
0000204E  4E4F                    1800              TRAP        #15
00002050                          1801              
00002050  6000 EFEE               1802              BRA         LOOP
00002054                          1803              
00002054                          1804  opSUBL      
00002054  43F9 00003D89           1805              LEA         dispLong,A1
0000205A  103C 000E               1806              MOVE.B      #14,D0
0000205E  4E4F                    1807              TRAP        #15
00002060                          1808              
00002060  43F9 00003CE9           1809              LEA         space, A1           ; Display space
00002066  103C 000E               1810              MOVE.B      #14, D0             ; command for trap call to display message
0000206A  4E4F                    1811              TRAP        #15                 ; trap call         
0000206C                          1812              
0000206C  1401                    1813              MOVE.B      D1,D2
0000206E  E642                    1814              ASR         #3,D2
00002070  C47C 0007               1815              AND         #$07,D2
00002074  3601                    1816              MOVE.W      D1,D3
00002076  C67C 0007               1817              AND         #$07,D3
0000207A  4EB9 00002F0C           1818              JSR         printEA         ; Determines the "left" operand register
00002080                          1819              
00002080  43F9 00003CF0           1820              LEA         comma, A1           ; Display space
00002086  103C 000E               1821              MOVE.B      #14, D0             ; command for trap call to display message
0000208A  4E4F                    1822              TRAP        #15                 ; trap call
0000208C                          1823              
0000208C  4242                    1824              CLR         D2
0000208E  3601                    1825              MOVE.W      D1,D3
00002090  E043                    1826              ASR         #eight,D3
00002092  E243                    1827              ASR         #one,D3
00002094  C67C 0007               1828              AND         #$07,D3
00002098  4EB9 00002F0C           1829              JSR         printEA
0000209E                          1830              
0000209E  43F9 00003CE5           1831              LEA         newLine,A1
000020A4  103C 000E               1832              MOVE.B      #14,D0
000020A8  4E4F                    1833              TRAP        #15
000020AA                          1834              
000020AA  6000 EF94               1835              BRA         LOOP 
000020AE                          1836              
000020AE                          1837  ***********************************************************************************************************
000020AE                          1838  *
000020AE                          1839  *                   BRA OPCODE
000020AE                          1840  *       
000020AE                          1841  *       This section is dedicated to the BRA opcode, which is determine
000020AE                          1842  *
000020AE                          1843  ***********************************************************************************************************
000020AE                          1844              
000020AE                          1845  opBRA       
000020AE  43F9 00003D2E           1846              LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
000020B4  103C 000E               1847              MOVE.B      #14, D0             ; Prime trap task #14 for output
000020B8  4E4F                    1848              TRAP        #15                 ; trap call to output BRA
000020BA                          1849          
000020BA  4242                    1850              CLR         D2                  ; Data register to needs to be cleared for use again
000020BC  4243                    1851              CLR         D3                  ; 
000020BE                          1852  
000020BE  43F9 00003CE9           1853              LEA         space,A1
000020C4  103C 000E               1854              MOVE.B      #14,D0
000020C8  4E4F                    1855              TRAP        #15
000020CA                          1856          
000020CA  143C 0007               1857              MOVE.B      #seven,D2
000020CE  1218                    1858              MOVE.B      (A0)+,D1
000020D0  4EB9 00002F0C           1859              JSR         printEA
000020D6                          1860          
000020D6  43F9 00003CE5           1861              LEA         newLine, A1           ; create new line
000020DC  103C 000E               1862              MOVE.B      #14, D0             ; command for trap call to display message
000020E0  4E4F                    1863              TRAP        #15                 ; trap call
000020E2                          1864  
000020E2  6000 EF5C               1865              BRA         LOOP
000020E6                          1866          
000020E6                          1867  ***********************************************************************************************************
000020E6                          1868  *
000020E6                          1869  *                   Bcc OPCODES
000020E6                          1870  *
000020E6                          1871  *   Supported cc condition codes:
000020E6                          1872  *           >CS
000020E6                          1873  *           >VC
000020E6                          1874  *           >GE
000020E6                          1875  *           >LT
000020E6                          1876  *
000020E6                          1877  ***********************************************************************************************************
000020E6                          1878  * CS Conition Code
000020E6                          1879  
000020E6                          1880  opBCS       
000020E6  43F9 00003D32           1881              LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
000020EC  103C 000E               1882              MOVE.B      #14, D0             ; command for trap call to display message
000020F0  4E4F                    1883              TRAP        #15                 ; trap call
000020F2                          1884          
000020F2  4242                    1885              CLR         D2
000020F4  4243                    1886              CLR         D3      
000020F6                          1887  
000020F6  43F9 00003CE9           1888              LEA         space,A1
000020FC  103C 000E               1889              MOVE.B      #14,D0
00002100  4E4F                    1890              TRAP        #15
00002102                          1891          
00002102  143C 0007               1892              MOVE.B      #seven,D2
00002106  1218                    1893              MOVE.B      (A0)+,D1
00002108  4EB9 00002F0C           1894              JSR         printEA
0000210E                          1895          
0000210E  43F9 00003CE5           1896              LEA         newLine, A1           ; create new line
00002114  103C 000E               1897              MOVE.B      #14, D0             ; command for trap call to display message
00002118  4E4F                    1898              TRAP        #15                 ; trap call
0000211A                          1899              
0000211A  6000 EF24               1900              BRA         LOOP
0000211E                          1901  
0000211E                          1902  ***********************************************************************************************************
0000211E                          1903  * VC Condition Code
0000211E                          1904  
0000211E                          1905  opBVC       
0000211E  43F9 00003D36           1906              LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00002124  103C 000E               1907              MOVE.B      #14, D0             ; command for trap call to display message
00002128  4E4F                    1908              TRAP        #15                 ; trap call
0000212A                          1909          
0000212A  4242                    1910              CLR         D2
0000212C  4243                    1911              CLR         D3      
0000212E                          1912  
0000212E  43F9 00003CE9           1913              LEA         space,A1
00002134  103C 000E               1914              MOVE.B      #14,D0
00002138  4E4F                    1915              TRAP        #15
0000213A                          1916          
0000213A  143C 0007               1917              MOVE.B      #seven,D2
0000213E  1218                    1918              MOVE.B      (A0)+,D1
00002140  4EB9 00002F0C           1919              JSR         printEA
00002146                          1920          
00002146  43F9 00003CE5           1921              LEA         newLine, A1           ; create new line
0000214C  103C 000E               1922              MOVE.B      #14, D0             ; command for trap call to display message
00002150  4E4F                    1923              TRAP        #15                 ; trap call
00002152                          1924              
00002152  6000 EEEC               1925              BRA         LOOP
00002156                          1926  
00002156                          1927  ***********************************************************************************************************
00002156                          1928  * GE Conidtion Code     
00002156                          1929          
00002156                          1930  opBGE       
00002156  43F9 00003D3A           1931              LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
0000215C  103C 000E               1932              MOVE.B      #14, D0             ; command for trap call to display message
00002160  4E4F                    1933              TRAP        #15                 ; trap call
00002162                          1934          
00002162  4242                    1935              CLR         D2
00002164  4243                    1936              CLR         D3      
00002166                          1937  
00002166  43F9 00003CE9           1938              LEA         space,A1
0000216C  103C 000E               1939              MOVE.B      #14,D0
00002170  4E4F                    1940              TRAP        #15
00002172                          1941          
00002172  143C 0007               1942              MOVE.B      #seven,D2
00002176  1218                    1943              MOVE.B      (A0)+,D1
00002178  4EB9 00002F0C           1944              JSR         printEA
0000217E                          1945          
0000217E  43F9 00003CE5           1946              LEA         newLine, A1           ; create new line
00002184  103C 000E               1947              MOVE.B      #14, D0             ; command for trap call to display message
00002188  4E4F                    1948              TRAP        #15                 ; trap call
0000218A                          1949              
0000218A  6000 EEB4               1950              BRA         LOOP
0000218E                          1951  
0000218E                          1952  ***********************************************************************************************************
0000218E                          1953  * LT Conditions Code        
0000218E                          1954          
0000218E                          1955  opBLT   
0000218E  43F9 00003D3E           1956              LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00002194  103C 000E               1957              MOVE.B      #14, D0             ; command for trap call to display message
00002198  4E4F                    1958              TRAP        #15                 ; trap call
0000219A                          1959          
0000219A  4242                    1960              CLR         D2
0000219C  4243                    1961              CLR         D3      
0000219E                          1962  
0000219E  43F9 00003CE9           1963              LEA         space,A1
000021A4  103C 000E               1964              MOVE.B      #14,D0
000021A8  4E4F                    1965              TRAP        #15
000021AA                          1966          
000021AA  143C 0007               1967              MOVE.B      #seven,D2
000021AE  1218                    1968              MOVE.B      (A0)+,D1
000021B0  4EB9 00002F0C           1969              JSR         printEA
000021B6                          1970          
000021B6  43F9 00003CE5           1971              LEA         newLine, A1           ; create new line
000021BC  103C 000E               1972              MOVE.B      #14, D0             ; command for trap call to display message
000021C0  4E4F                    1973              TRAP        #15                 ; trap call
000021C2                          1974              
000021C2  6000 EE7C               1975              BRA         LOOP
000021C6                          1976          
000021C6                          1977  ***********************************************************************************************************
000021C6                          1978  *
000021C6                          1979  *               SUBQ OPCODE
000021C6                          1980  *
000021C6                          1981  ***********************************************************************************************************
000021C6                          1982  
000021C6                          1983  opSUBQ      
000021C6  43F9 00003D29           1984              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
000021CC  103C 000E               1985              MOVE.B      #14, D0             ; command for trap call to display message
000021D0  4E4F                    1986              TRAP        #15                 ; trap call
000021D2                          1987              
000021D2  E141                    1988              ASL         #eight,D1
000021D4  1218                    1989              MOVE.B      (A0)+,D1
000021D6  1401                    1990              MOVE.B      D1,D2
000021D8  EE42                    1991              ASR         #seven,D2           ; Move bits 7 places over to find size
000021DA  C47C 0007               1992              AND         #$07,D2
000021DE                          1993              
000021DE                          1994              ; Find size bits
000021DE  B43C 0000               1995              CMP.B       #zero,D2
000021E2  6700 0012               1996              BEQ         opSUBQB             ; Byte in size
000021E6  B43C 0001               1997              CMP.B       #one,D2
000021EA  6700 0020               1998              BEQ         opSUBQW             ; Word in size
000021EE  B43C 0002               1999              CMP.B       #two,D2
000021F2  6700 002E               2000              BEQ         opSUBQL             ; Long in size
000021F6                          2001              
000021F6                          2002              
000021F6                          2003  opSUBQB     
000021F6  43F9 00003D83           2004              LEA         dispByte,A1
000021FC  103C 000E               2005              MOVE.B      #14,D0
00002200  4E4F                    2006              TRAP        #15 
00002202                          2007              
00002202                          2008              *ASL         #eight,D1
00002202                          2009              *MOVE.B      (A0)+,D1
00002202  4EB9 00002E34           2010              JSR         PrntImm
00002208                          2011              
00002208  6000 EE36               2012              BRA         LOOP
0000220C                          2013              
0000220C                          2014  opSUBQW     
0000220C  43F9 00003D86           2015              LEA         dispWord,A1
00002212  103C 000E               2016              MOVE.B      #14,D0
00002216  4E4F                    2017              TRAP        #15
00002218                          2018              
00002218                          2019              *ASL         #eight,D1
00002218                          2020              *MOVE.B      (A0)+,D1
00002218  4EB9 00002E34           2021              JSR         PrntImm
0000221E                          2022              
0000221E  6000 EE20               2023              BRA         LOOP
00002222                          2024              
00002222                          2025  opSUBQL     
00002222  43F9 00003D89           2026              LEA         dispLong,A1
00002228  103C 000E               2027              MOVE.B      #14,D0
0000222C  4E4F                    2028              TRAP        #15
0000222E                          2029              
0000222E                          2030              *ASL         #eight,D1
0000222E                          2031              *MOVE.B      (A0)+,D1
0000222E                          2032              
0000222E  4246                    2033              CLR         D6
00002230  1C3C 0001               2034              MOVE.B      #1,D6
00002234                          2035              
00002234  4EB9 00002E34           2036              JSR         PrntImm         
0000223A                          2037              
0000223A  6000 EE04               2038              BRA         LOOP            ; trap call
0000223E                          2039              
0000223E                          2040  ***********************************************************************************************************
0000223E                          2041  *
0000223E                          2042  *                   MULS OPCODE
0000223E                          2043  *
0000223E                          2044  ***********************************************************************************************************
0000223E                          2045  
0000223E                          2046  opMULS  
0000223E  43F9 00003D56           2047              LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002244  103C 000E               2048              MOVE.B      #14, D0             ; command for trap call to display message
00002248  4E4F                    2049              TRAP        #15                 ; trap call
0000224A  43F9 00003CE9           2050              LEA         space, A1           ; create spaces
00002250  103C 000E               2051              MOVE.B      #14, D0             ; command for trap call to display message
00002254  4E4F                    2052              TRAP        #15                 ; trap call
00002256                          2053          
00002256  E141                    2054              ASL         #eight, D1
00002258  1218                    2055              MOVE.B      (A0)+, D1
0000225A                          2056          
0000225A  4242                    2057              CLR         D2
0000225C  4243                    2058              CLR         D3
0000225E  1401                    2059              MOVE.B      D1, D2
00002260  E642                    2060              ASR         #three, D2
00002262  C47C 0007               2061              AND         #seven, D2
00002266  1601                    2062              MOVE.B      D1, D3
00002268  C67C 0007               2063              AND         #seven, D3
0000226C                          2064          
0000226C  4EB9 00002F0C           2065              JSR         printEA
00002272                          2066          
00002272  43F9 00003CF0           2067              LEA         comma, A1           ; create comma
00002278  103C 000E               2068              MOVE.B      #14, D0             ; command for trap call to display message
0000227C  4E4F                    2069              TRAP        #15                 ; trap call
0000227E                          2070  
0000227E  4242                    2071              CLR         D2
00002280  4243                    2072              CLR         D3
00002282  3601                    2073              MOVE.W      D1, D3
00002284  E043                    2074              ASR         #eight, D3
00002286  E243                    2075              ASR         #one, D3
00002288  C67C 0007               2076              AND         #seven, D3
0000228C                          2077  
0000228C  4EB9 00002F0C           2078              JSR         printEA
00002292                          2079          
00002292  43F9 00003CE5           2080              LEA         newLine, A1           ; create new line
00002298  103C 000E               2081              MOVE.B      #14, D0             ; command for trap call to display message
0000229C  4E4F                    2082              TRAP        #15                 ; trap call
0000229E                          2083          
0000229E  6000 EDA0               2084              BRA         LOOP
000022A2                          2085  
000022A2                          2086  ***********************************************************************************************************
000022A2                          2087  *
000022A2                          2088  *                   ADD OPCODE
000022A2                          2089  *
000022A2                          2090  ***********************************************************************************************************   
000022A2                          2091  
000022A2                          2092  opADDB  
000022A2  43F9 00003D5B           2093              LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
000022A8  103C 000E               2094              MOVE.B      #14, D0             ; command for trap call to display message
000022AC  4E4F                    2095              TRAP        #15                 ; trap call
000022AE                          2096          
000022AE  43F9 00003D83           2097              LEA         dispByte, A1        ; display byte
000022B4  103C 000E               2098              MOVE.B      #14, D0             ; command for trap call to display message
000022B8  4E4F                    2099              TRAP        #15                 ; trap call
000022BA  43F9 00003CE9           2100              LEA         space, A1           ; create spaces
000022C0  103C 000E               2101              MOVE.B      #14, D0             ; command for trap call to display message
000022C4  4E4F                    2102              TRAP        #15                 ; trap call
000022C6                          2103          
000022C6  4242                    2104              CLR         D2
000022C8  4243                    2105              CLR         D3
000022CA  1401                    2106              MOVE.B      D1, D2
000022CC  E642                    2107              ASR         #three, D2
000022CE  C47C 0007               2108              AND         #seven, D2
000022D2  1601                    2109              MOVE.B      D1, D3
000022D4  C67C 0007               2110              AND         #seven, D3
000022D8                          2111          
000022D8  4EB9 00002F0C           2112              JSR         printEA
000022DE                          2113          
000022DE  43F9 00003CF0           2114              LEA         comma, A1           ; create comma
000022E4  103C 000E               2115              MOVE.B      #14, D0             ; command for trap call to display message
000022E8  4E4F                    2116              TRAP        #15                 ; trap call
000022EA                          2117  
000022EA  4242                    2118              CLR         D2
000022EC  4243                    2119              CLR         D3
000022EE  3601                    2120              MOVE.W      D1, D3
000022F0  E043                    2121              ASR         #eight, D3
000022F2  E243                    2122              ASR         #one, D3
000022F4  C67C 0007               2123              AND         #seven, D3
000022F8                          2124  
000022F8  4EB9 00002F0C           2125              JSR         printEA
000022FE                          2126          
000022FE  43F9 00003CE5           2127              LEA         newLine, A1           ; create new line
00002304  103C 000E               2128              MOVE.B      #14, D0             ; command for trap call to display message
00002308  4E4F                    2129              TRAP        #15                 ; trap call
0000230A                          2130          
0000230A  6000 ED34               2131              BRA         LOOP
0000230E                          2132          
0000230E                          2133  opADDW  
0000230E  43F9 00003D5B           2134              LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002314  103C 000E               2135              MOVE.B      #14, D0             ; command for trap call to display message
00002318  4E4F                    2136              TRAP        #15                 ; trap call
0000231A                          2137  
0000231A  43F9 00003D86           2138              LEA         dispWord, A1        ; display word
00002320  103C 000E               2139              MOVE.B      #14, D0             ; command for trap call to display message
00002324  4E4F                    2140              TRAP        #15                 ; trap call
00002326  43F9 00003CE9           2141              LEA         space, A1           ; create spaces
0000232C  103C 000E               2142              MOVE.B      #14, D0             ; command for trap call to display message
00002330  4E4F                    2143              TRAP        #15                 ; trap call
00002332                          2144          
00002332  4242                    2145              CLR         D2
00002334  4243                    2146              CLR         D3
00002336  1401                    2147              MOVE.B      D1, D2
00002338  E642                    2148              ASR         #three, D2
0000233A  C47C 0007               2149              AND         #seven, D2
0000233E  1601                    2150              MOVE.B      D1, D3
00002340  C67C 0007               2151              AND         #seven, D3
00002344                          2152          
00002344  4EB9 00002F0C           2153              JSR         printEA
0000234A                          2154          
0000234A  43F9 00003CF0           2155              LEA         comma, A1           ; create comma
00002350  103C 000E               2156              MOVE.B      #14, D0             ; command for trap call to display message
00002354  4E4F                    2157              TRAP        #15                 ; trap call
00002356                          2158  
00002356  4242                    2159              CLR         D2
00002358  4243                    2160              CLR         D3
0000235A  3601                    2161              MOVE.W      D1, D3
0000235C  E043                    2162              ASR         #eight, D3
0000235E  E243                    2163              ASR         #one, D3
00002360  C67C 0007               2164              AND         #seven, D3
00002364                          2165  
00002364  4EB9 00002F0C           2166              JSR         printEA
0000236A                          2167          
0000236A  43F9 00003CE5           2168              LEA         newLine, A1           ; create new line
00002370  103C 000E               2169              MOVE.B      #14, D0             ; command for trap call to display message
00002374  4E4F                    2170              TRAP        #15                 ; trap call
00002376                          2171          
00002376  6000 ECC8               2172              BRA         LOOP
0000237A                          2173          
0000237A                          2174  opADDL  
0000237A  43F9 00003D5B           2175              LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002380  103C 000E               2176              MOVE.B      #14, D0             ; command for trap call to display message
00002384  4E4F                    2177              TRAP        #15                 ; trap call
00002386                          2178          
00002386  43F9 00003D89           2179              LEA         dispLong, A1        ; display long
0000238C  103C 000E               2180              MOVE.B      #14, D0             ; command for trap call to display message
00002390  4E4F                    2181              TRAP        #15                 ; trap call
00002392  43F9 00003CE9           2182              LEA         space, A1           ; create spaces
00002398  103C 000E               2183              MOVE.B      #14, D0             ; command for trap call to display message
0000239C  4E4F                    2184              TRAP        #15                 ; trap call
0000239E                          2185          
0000239E  4242                    2186              CLR         D2
000023A0  4243                    2187              CLR         D3
000023A2  1401                    2188              MOVE.B      D1, D2
000023A4  E642                    2189              ASR         #three, D2
000023A6  C47C 0007               2190              AND         #seven, D2
000023AA  1601                    2191              MOVE.B      D1, D3
000023AC  C67C 0007               2192              AND         #seven, D3
000023B0                          2193          
000023B0  4246                    2194              CLR         D6
000023B2  1C3C 0001               2195              MOVE.B      #1, D6
000023B6                          2196          
000023B6  4EB9 00002F0C           2197              JSR         printEA
000023BC  4246                    2198              CLR         D6
000023BE                          2199          
000023BE  43F9 00003CF0           2200              LEA         comma, A1           ; create comma
000023C4  103C 000E               2201              MOVE.B      #14, D0             ; command for trap call to display message
000023C8  4E4F                    2202              TRAP        #15                 ; trap call
000023CA                          2203  
000023CA  4242                    2204              CLR         D2
000023CC  4243                    2205              CLR         D3
000023CE  3601                    2206              MOVE.W      D1, D3
000023D0  E043                    2207              ASR         #eight, D3
000023D2  E243                    2208              ASR         #one, D3
000023D4  C67C 0007               2209              AND         #seven, D3
000023D8                          2210  
000023D8  4EB9 00002F0C           2211              JSR         printEA
000023DE                          2212          
000023DE  43F9 00003CE5           2213              LEA         newLine, A1           ; create new line
000023E4  103C 000E               2214              MOVE.B      #14, D0             ; command for trap call to display message
000023E8  4E4F                    2215              TRAP        #15                 ; trap call
000023EA                          2216          
000023EA  6000 EC54               2217              BRA         LOOP
000023EE                          2218  
000023EE                          2219  opADDAW 
000023EE  43F9 00003D5F           2220              LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
000023F4  103C 000E               2221              MOVE.B      #14, D0             ; command for trap call to display message
000023F8  4E4F                    2222              TRAP        #15                 ; trap call
000023FA                          2223          
000023FA  43F9 00003D86           2224              LEA         dispWord, A1        ; display word
00002400  103C 000E               2225              MOVE.B      #14, D0             ; command for trap call to display message
00002404  4E4F                    2226              TRAP        #15                 ; trap call
00002406  43F9 00003CE9           2227              LEA         space, A1           ; create spaces
0000240C  103C 000E               2228              MOVE.B      #14, D0             ; command for trap call to display message
00002410  4E4F                    2229              TRAP        #15                 ; trap call
00002412                          2230          
00002412  4242                    2231              CLR         D2
00002414  4243                    2232              CLR         D3
00002416  1401                    2233              MOVE.B      D1, D2
00002418  E642                    2234              ASR         #three, D2
0000241A  C47C 0007               2235              AND         #seven, D2
0000241E  1601                    2236              MOVE.B      D1, D3
00002420  C67C 0007               2237              AND         #seven, D3
00002424                          2238          
00002424  4EB9 00002F0C           2239              JSR         printEA
0000242A                          2240          
0000242A  43F9 00003CF0           2241              LEA         comma, A1           ; create comma
00002430  103C 000E               2242              MOVE.B      #14, D0             ; command for trap call to display message
00002434  4E4F                    2243              TRAP        #15                 ; trap call
00002436                          2244  
00002436  4242                    2245              CLR         D2
00002438  4243                    2246              CLR         D3
0000243A  143C 0001               2247              MOVE.B      #one, D2
0000243E  3601                    2248              MOVE.W      D1, D3
00002440  E043                    2249              ASR         #eight, D3
00002442  E243                    2250              ASR         #one, D3
00002444  C67C 0007               2251              AND         #seven, D3
00002448                          2252      
00002448  4EB9 00002F0C           2253              JSR         printEA
0000244E                          2254          
0000244E  43F9 00003CE5           2255              LEA         newLine, A1           ; create new line
00002454  103C 000E               2256              MOVE.B      #14, D0             ; command for trap call to display message
00002458  4E4F                    2257              TRAP        #15                 ; trap call
0000245A                          2258          
0000245A  6000 EBE4               2259              BRA         LOOP
0000245E                          2260  
0000245E                          2261  opADDAL 
0000245E  43F9 00003D5F           2262              LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002464  103C 000E               2263              MOVE.B      #14, D0             ; command for trap call to display message
00002468  4E4F                    2264              TRAP        #15                 ; trap call
0000246A                          2265  
0000246A  43F9 00003D89           2266              LEA         dispLong, A1        ; display long
00002470  103C 000E               2267              MOVE.B      #14, D0             ; command for trap call to display message
00002474  4E4F                    2268              TRAP        #15                 ; trap call
00002476  43F9 00003CE9           2269              LEA         space, A1           ; create spaces
0000247C  103C 000E               2270              MOVE.B      #14, D0             ; command for trap call to display message
00002480  4E4F                    2271              TRAP        #15                 ; trap call
00002482                          2272          
00002482  4242                    2273              CLR         D2
00002484  4243                    2274              CLR         D3
00002486  1401                    2275              MOVE.B      D1, D2
00002488  E642                    2276              ASR         #three, D2
0000248A  C47C 0007               2277              AND         #seven, D2
0000248E  1601                    2278              MOVE.B      D1, D3
00002490  C67C 0007               2279              AND         #seven, D3
00002494                          2280          
00002494  4EB9 00002F0C           2281              JSR         printEA
0000249A                          2282          
0000249A  43F9 00003CF0           2283              LEA         comma, A1           ; create comma
000024A0  103C 000E               2284              MOVE.B      #14, D0             ; command for trap call to display message
000024A4  4E4F                    2285              TRAP        #15                 ; trap call
000024A6                          2286  
000024A6  4242                    2287              CLR         D2
000024A8  4243                    2288              CLR         D3
000024AA  143C 0001               2289              MOVE.B      #one, D2
000024AE  3601                    2290              MOVE.W      D1, D3
000024B0  E043                    2291              ASR         #eight, D3
000024B2  E243                    2292              ASR         #one, D3
000024B4  C67C 0007               2293              AND         #seven, D3
000024B8                          2294  
000024B8  4EB9 00002F0C           2295              JSR         printEA
000024BE                          2296          
000024BE  43F9 00003CE5           2297              LEA         newLine, A1           ; create new line
000024C4  103C 000E               2298              MOVE.B      #14, D0             ; command for trap call to display message
000024C8  4E4F                    2299              TRAP        #15                 ; trap call
000024CA                          2300          
000024CA  6000 EB74               2301              BRA         LOOP
000024CE                          2302          
000024CE                          2303  ***********************************************************************************************************
000024CE                          2304  *
000024CE                          2305  *                       Shifting OPCODES
000024CE                          2306  *
000024CE                          2307  ***********************************************************************************************************
000024CE                          2308  
000024CE                          2309  opASL       
000024CE  43F9 00003D70           2310              LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024D4  103C 000E               2311              MOVE.B      #14, D0             ; command for trap call to display message
000024D8  4E4F                    2312              TRAP        #15                 ; trap call
000024DA                          2313          
000024DA  43F9 00003D86           2314              LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024E0  103C 000E               2315              MOVE.B      #14, D0             ; command for trap call to display message
000024E4  4E4F                    2316              TRAP        #15                 ; trap call
000024E6                          2317          
000024E6  43F9 00003CE9           2318              LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
000024EC  103C 000E               2319              MOVE.B      #14, D0             ; command for trap call to display message
000024F0  4E4F                    2320              TRAP        #15                 ; trap call
000024F2                          2321          
000024F2  4242                    2322              CLR         D2
000024F4  4243                    2323              CLR         D3
000024F6  1401                    2324              MOVE.B      D1,D2
000024F8  1601                    2325              MOVE.B      D1,D3
000024FA                          2326          
000024FA  E602                    2327              ASR.B       #three, D2
000024FC  C47C 0007               2328              AND         #seven, D2
00002500  C67C 0007               2329              AND         #seven, D3        
00002504                          2330          
00002504  4EB9 00002F0C           2331              JSR         printEA
0000250A                          2332          
0000250A  43F9 00003CE5           2333              LEA         newLine, A1           ; Display space
00002510  103C 000E               2334              MOVE.B      #14, D0             ; command for trap call to display message
00002514  4E4F                    2335              TRAP        #15                 ; trap call
00002516                          2336          
00002516  6000 EB28               2337              BRA         LOOP
0000251A                          2338  
0000251A                          2339  opASR   
0000251A  43F9 00003D6C           2340              LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002520  103C 000E               2341              MOVE.B      #14, D0             ; command for trap call to display message
00002524  4E4F                    2342              TRAP        #15                 ; trap call
00002526                          2343          
00002526  43F9 00003D86           2344              LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000252C  103C 000E               2345              MOVE.B      #14, D0             ; command for trap call to display message
00002530  4E4F                    2346              TRAP        #15                 ; trap call
00002532                          2347          
00002532  43F9 00003CE9           2348              LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002538  103C 000E               2349              MOVE.B      #14, D0             ; command for trap call to display message
0000253C  4E4F                    2350              TRAP        #15                 ; trap call
0000253E                          2351              
0000253E  4242                    2352              CLR         D2
00002540  4243                    2353              CLR         D3
00002542  1401                    2354              MOVE.B      D1,D2
00002544  1601                    2355              MOVE.B      D1,D3
00002546                          2356          
00002546  E602                    2357              ASR.B       #three, D2
00002548  C47C 0007               2358              AND         #seven, D2
0000254C  C67C 0007               2359              AND         #seven, D3        
00002550                          2360          
00002550  4EB9 00002F0C           2361              JSR         printEA
00002556                          2362              
00002556  43F9 00003CE5           2363              LEA         newLine, A1           ; Display space
0000255C  103C 000E               2364              MOVE.B      #14, D0             ; command for trap call to display message
00002560  4E4F                    2365              TRAP        #15                 ; trap call
00002562                          2366          
00002562  6000 EADC               2367              BRA         LOOP
00002566                          2368  
00002566                          2369  opLSL       
00002566  43F9 00003D68           2370              LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
0000256C  103C 000E               2371              MOVE.B      #14, D0             ; command for trap call to display message
00002570  4E4F                    2372              TRAP        #15                 ; trap call
00002572                          2373              
00002572  43F9 00003D86           2374              LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002578  103C 000E               2375              MOVE.B      #14, D0             ; command for trap call to display message
0000257C  4E4F                    2376              TRAP        #15                 ; trap call
0000257E                          2377              
0000257E  43F9 00003CE9           2378              LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002584  103C 000E               2379              MOVE.B      #14, D0             ; command for trap call to display message
00002588  4E4F                    2380              TRAP        #15                 ; trap call
0000258A                          2381              
0000258A  4242                    2382              CLR         D2
0000258C  4243                    2383              CLR         D3
0000258E  1401                    2384              MOVE.B      D1,D2
00002590  1601                    2385              MOVE.B      D1,D3
00002592                          2386          
00002592  E602                    2387              ASR.B       #three, D2
00002594  C47C 0007               2388              AND         #seven, D2
00002598  C67C 0007               2389              AND         #seven, D3        
0000259C                          2390              
0000259C  4EB9 00002F0C           2391              JSR         printEA
000025A2                          2392          
000025A2  43F9 00003CE5           2393              LEA         newLine, A1           ; Display space
000025A8  103C 000E               2394              MOVE.B      #14, D0             ; command for trap call to display message
000025AC  4E4F                    2395              TRAP        #15                 ; trap call
000025AE                          2396          
000025AE  6000 EA90               2397              BRA         LOOP
000025B2                          2398  
000025B2                          2399  opLSR   
000025B2  43F9 00003D64           2400              LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
000025B8  103C 000E               2401              MOVE.B      #14, D0             ; command for trap call to display message
000025BC  4E4F                    2402              TRAP        #15                 ; trap call
000025BE                          2403          
000025BE  43F9 00003D86           2404              LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000025C4  103C 000E               2405              MOVE.B      #14, D0             ; command for trap call to display message
000025C8  4E4F                    2406              TRAP        #15                 ; trap call
000025CA                          2407          
000025CA  43F9 00003CE9           2408              LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
000025D0  103C 000E               2409              MOVE.B      #14, D0             ; command for trap call to display message
000025D4  4E4F                    2410              TRAP        #15                 ; trap call
000025D6                          2411          
000025D6  4242                    2412              CLR         D2
000025D8  4243                    2413              CLR         D3
000025DA  1401                    2414              MOVE.B      D1,D2
000025DC  1601                    2415              MOVE.B      D1,D3
000025DE                          2416          
000025DE  E602                    2417              ASR.B       #three, D2
000025E0  C47C 0007               2418              AND         #seven, D2
000025E4  C67C 0007               2419              AND         #seven, D3        
000025E8                          2420          
000025E8  4EB9 00002F0C           2421              JSR         printEA
000025EE                          2422          
000025EE  43F9 00003CE5           2423              LEA         newLine, A1           ; Display space
000025F4  103C 000E               2424              MOVE.B      #14, D0             ; command for trap call to display message
000025F8  4E4F                    2425              TRAP        #15                 ; trap call
000025FA                          2426          
000025FA  6000 EA44               2427              BRA         LOOP
000025FE                          2428  
000025FE                          2429  opROL   
000025FE  43F9 00003D78           2430              LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00002604  103C 000E               2431              MOVE.B      #14, D0             ; command for trap call to display message
00002608  4E4F                    2432              TRAP        #15                 ; trap call
0000260A                          2433          
0000260A  43F9 00003D86           2434              LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002610  103C 000E               2435              MOVE.B      #14, D0             ; command for trap call to display message
00002614  4E4F                    2436              TRAP        #15                 ; trap call
00002616                          2437          
00002616  43F9 00003CE9           2438              LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000261C  103C 000E               2439              MOVE.B      #14, D0             ; command for trap call to display message
00002620  4E4F                    2440              TRAP        #15                 ; trap call
00002622                          2441          
00002622  4242                    2442              CLR         D2
00002624  4243                    2443              CLR         D3
00002626  1401                    2444              MOVE.B      D1,D2
00002628  1601                    2445              MOVE.B      D1,D3
0000262A                          2446          
0000262A  E602                    2447              ASR.B       #three, D2
0000262C  C47C 0007               2448              AND         #seven, D2
00002630  C67C 0007               2449              AND         #seven, D3        
00002634                          2450          
00002634  4EB9 00002F0C           2451              JSR         printEA
0000263A                          2452          
0000263A  43F9 00003CE5           2453              LEA         newLine, A1           ; Display space
00002640  103C 000E               2454              MOVE.B      #14, D0             ; command for trap call to display message
00002644  4E4F                    2455              TRAP        #15                 ; trap call
00002646                          2456          
00002646  6000 E9F8               2457              BRA         LOOP
0000264A                          2458  
0000264A                          2459  opROR   
0000264A  43F9 00003D74           2460              LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00002650  103C 000E               2461              MOVE.B      #14, D0             ; command for trap call to display message
00002654  4E4F                    2462              TRAP        #15                 ; trap call
00002656                          2463          
00002656  43F9 00003D86           2464              LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000265C  103C 000E               2465              MOVE.B      #14, D0             ; command for trap call to display message
00002660  4E4F                    2466              TRAP        #15                 ; trap call
00002662                          2467          
00002662  43F9 00003CE9           2468              LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002668  103C 000E               2469              MOVE.B      #14, D0             ; command for trap call to display message
0000266C  4E4F                    2470              TRAP        #15                 ; trap call
0000266E                          2471          
0000266E  4242                    2472              CLR         D2
00002670  4243                    2473              CLR         D3
00002672  1401                    2474              MOVE.B      D1,D2
00002674  1601                    2475              MOVE.B      D1,D3
00002676                          2476          
00002676  E602                    2477              ASR.B       #three, D2
00002678  C47C 0007               2478              AND         #seven, D2
0000267C  C67C 0007               2479              AND         #seven, D3        
00002680                          2480          
00002680  4EB9 00002F0C           2481              JSR         printEA
00002686                          2482          
00002686  43F9 00003CE5           2483              LEA         newLine, A1           ; Display space
0000268C  103C 000E               2484              MOVE.B      #14, D0             ; command for trap call to display message
00002690  4E4F                    2485              TRAP        #15                 ; trap call
00002692                          2486              
00002692  6000 E9AC               2487              BRA         LOOP
00002696                          2488          
00002696                          2489  memSB       
00002696  4242                    2490              CLR         D2
00002698  1401                    2491              MOVE.B      D1,D2
0000269A  E642                    2492              ASR         #three, D2
0000269C                          2493              
0000269C  C47C 0007               2494              AND         #$07, D2
000026A0                          2495          
000026A0  B43C 0000               2496              CMP.B       #zero, D2
000026A4  6700 002E               2497              BEQ         opASBI
000026A8  B43C 0004               2498              CMP.B       #four, D2
000026AC  6700 0088               2499              BEQ         opASBR
000026B0  B43C 0001               2500              CMP.B       #one, D2
000026B4  6700 00E2               2501              BEQ         opLSBI
000026B8  B43C 0005               2502              CMP.B       #five, D2
000026BC  6700 013C               2503              BEQ         opLSBR
000026C0  B43C 0003               2504              CMP.B       #three, D2
000026C4  6700 0196               2505              BEQ         opROBI
000026C8  B43C 0007               2506              CMP.B       #seven, D2
000026CC  6700 01F0               2507              BEQ         opROBR
000026D0  6000 15A8               2508              BRA         printInvalid
000026D4                          2509          
000026D4                          2510  opASBI  
000026D4  4242                    2511              CLR         D2
000026D6  3401                    2512              MOVE.W      D1, D2
000026D8  E042                    2513              ASR         #eight, D2
000026DA  C47C 0001               2514              AND         #$01, D2
000026DE                          2515      
000026DE  B43C 0000               2516              CMP.B       #zero, D2
000026E2  6700 000E               2517              BEQ         opASRBI
000026E6  B43C 0001               2518              CMP.B       #one, D2
000026EA  6700 0028               2519              BEQ         opASLBI
000026EE  6000 158A               2520              BRA         printInvalid
000026F2                          2521          
000026F2                          2522  opASRBI 
000026F2  43F9 00003D6C           2523              LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000026F8  103C 000E               2524              MOVE.B      #14, D0             ; command for trap call to display message
000026FC  4E4F                    2525              TRAP        #15                 ; trap call
000026FE                          2526  
000026FE  43F9 00003D83           2527              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002704  103C 000E               2528              MOVE.B      #14, D0             ; command for trap call to display message
00002708  4E4F                    2529              TRAP        #15                 ; trap call
0000270A                          2530          
0000270A  4EB9 00002E34           2531              JSR         PrntImm
00002710                          2532          
00002710  6000 E92E               2533              BRA         LOOP
00002714                          2534  
00002714                          2535  opASLBI 
00002714  43F9 00003D70           2536              LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000271A  103C 000E               2537              MOVE.B      #14, D0             ; command for trap call to display message
0000271E  4E4F                    2538              TRAP        #15                 ; trap call
00002720                          2539  
00002720  43F9 00003D83           2540              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002726  103C 000E               2541              MOVE.B      #14, D0             ; command for trap call to display message
0000272A  4E4F                    2542              TRAP        #15                 ; trap call
0000272C                          2543          
0000272C  4EB9 00002E34           2544              JSR         PrntImm
00002732                          2545          
00002732  6000 E90C               2546              BRA         LOOP
00002736                          2547  
00002736                          2548  opASBR  
00002736  4242                    2549              CLR         D2
00002738  3401                    2550              MOVE.W      D1, D2
0000273A  E042                    2551              ASR         #eight, D2
0000273C  C47C 0001               2552              AND         #$01, D2
00002740                          2553      
00002740  B43C 0000               2554              CMP.B       #zero, D2
00002744  6700 000E               2555              BEQ         opASRBR
00002748  B43C 0001               2556              CMP.B       #one, D2
0000274C  6700 0028               2557              BEQ         opASLBR
00002750  6000 1528               2558              BRA         printInvalid 
00002754                          2559          
00002754                          2560  opASRBR 
00002754  43F9 00003D6C           2561              LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000275A  103C 000E               2562              MOVE.B      #14, D0             ; command for trap call to display message
0000275E  4E4F                    2563              TRAP        #15                 ; trap call
00002760                          2564  
00002760  43F9 00003D83           2565              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002766  103C 000E               2566              MOVE.B      #14, D0             ; command for trap call to display message
0000276A  4E4F                    2567              TRAP        #15                 ; trap call
0000276C                          2568          
0000276C  4EB9 00002E90           2569              JSR         PrntReg
00002772                          2570          
00002772  6000 E8CC               2571              BRA         LOOP
00002776                          2572  
00002776                          2573  opASLBR 
00002776  43F9 00003D70           2574              LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000277C  103C 000E               2575              MOVE.B      #14, D0             ; command for trap call to display message
00002780  4E4F                    2576              TRAP        #15                 ; trap call
00002782                          2577  
00002782  43F9 00003D83           2578              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002788  103C 000E               2579              MOVE.B      #14, D0             ; command for trap call to display message
0000278C  4E4F                    2580              TRAP        #15                 ; trap call
0000278E                          2581          
0000278E  4EB9 00002E90           2582              JSR         PrntReg
00002794                          2583          
00002794  6000 E8AA               2584              BRA         LOOP
00002798                          2585  
00002798                          2586  opLSBI      
00002798  4242                    2587              CLR         D2
0000279A  3401                    2588              MOVE.W      D1, D2
0000279C  E042                    2589              ASR         #eight, D2
0000279E  C47C 0001               2590              AND         #$01, D2
000027A2                          2591      
000027A2  B43C 0000               2592              CMP.B       #zero, D2
000027A6  6700 000E               2593              BEQ         opLSRBI
000027AA  B43C 0001               2594              CMP.B       #one, D2
000027AE  6700 0028               2595              BEQ         opLSLBI
000027B2  6000 14C6               2596              BRA         printInvalid 
000027B6                          2597          
000027B6                          2598  opLSRBI 
000027B6  43F9 00003D64           2599              LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027BC  103C 000E               2600              MOVE.B      #14, D0             ; command for trap call to display message
000027C0  4E4F                    2601              TRAP        #15                 ; trap call
000027C2                          2602  
000027C2  43F9 00003D83           2603              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027C8  103C 000E               2604              MOVE.B      #14, D0             ; command for trap call to display message
000027CC  4E4F                    2605              TRAP        #15                 ; trap call
000027CE                          2606          
000027CE  4EB9 00002E34           2607              JSR         PrntImm
000027D4                          2608          
000027D4  6000 E86A               2609              BRA         LOOP
000027D8                          2610              
000027D8                          2611  opLSLBI     
000027D8  43F9 00003D68           2612              LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027DE  103C 000E               2613              MOVE.B      #14, D0             ; command for trap call to display message
000027E2  4E4F                    2614              TRAP        #15                 ; trap call
000027E4                          2615  
000027E4  43F9 00003D83           2616              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027EA  103C 000E               2617              MOVE.B      #14, D0             ; command for trap call to display message
000027EE  4E4F                    2618              TRAP        #15                 ; trap call
000027F0                          2619          
000027F0  4EB9 00002E34           2620              JSR         PrntImm
000027F6                          2621          
000027F6  6000 E848               2622              BRA         LOOP
000027FA                          2623  
000027FA                          2624  opLSBR  
000027FA  4242                    2625              CLR         D2
000027FC  3401                    2626              MOVE.W      D1, D2
000027FE  E042                    2627              ASR         #eight, D2
00002800  C47C 0001               2628              AND         #$01, D2
00002804                          2629      
00002804  B43C 0000               2630              CMP.B       #zero, D2
00002808  6700 000E               2631              BEQ         opLSRBR
0000280C  B43C 0001               2632              CMP.B       #one, D2
00002810  6700 0028               2633              BEQ         opLSLBR
00002814  6000 1464               2634              BRA         printInvalid 
00002818                          2635          
00002818                          2636  opLSRBR 
00002818  43F9 00003D64           2637              LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000281E  103C 000E               2638              MOVE.B      #14, D0             ; command for trap call to display message
00002822  4E4F                    2639              TRAP        #15                 ; trap call
00002824                          2640  
00002824  43F9 00003D83           2641              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000282A  103C 000E               2642              MOVE.B      #14, D0             ; command for trap call to display message
0000282E  4E4F                    2643              TRAP        #15                 ; trap call
00002830                          2644          
00002830  4EB9 00002E90           2645              JSR         PrntReg
00002836                          2646          
00002836  6000 E808               2647              BRA         LOOP
0000283A                          2648          
0000283A                          2649  opLSLBR     
0000283A  43F9 00003D68           2650              LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002840  103C 000E               2651              MOVE.B      #14, D0             ; command for trap call to display message
00002844  4E4F                    2652              TRAP        #15                 ; trap call
00002846                          2653  
00002846  43F9 00003D83           2654              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000284C  103C 000E               2655              MOVE.B      #14, D0             ; command for trap call to display message
00002850  4E4F                    2656              TRAP        #15                 ; trap call
00002852                          2657          
00002852  4EB9 00002E90           2658              JSR         PrntReg
00002858                          2659          
00002858  6000 E7E6               2660              BRA         LOOP
0000285C                          2661              
0000285C                          2662  opROBI  
0000285C  4242                    2663              CLR         D2
0000285E  3401                    2664              MOVE.W      D1, D2
00002860  E042                    2665              ASR         #eight, D2
00002862  C47C 0001               2666              AND         #$01, D2
00002866                          2667      
00002866  B43C 0000               2668              CMP.B       #zero, D2
0000286A  6700 000E               2669              BEQ         opRORBI
0000286E  B43C 0001               2670              CMP.B       #one, D2
00002872  6700 0028               2671              BEQ         opROLBI
00002876  6000 1402               2672              BRA         printInvalid 
0000287A                          2673          
0000287A                          2674  opRORBI 
0000287A  43F9 00003D74           2675              LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002880  103C 000E               2676              MOVE.B      #14, D0             ; command for trap call to display message
00002884  4E4F                    2677              TRAP        #15                 ; trap call
00002886                          2678  
00002886  43F9 00003D83           2679              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000288C  103C 000E               2680              MOVE.B      #14, D0             ; command for trap call to display message
00002890  4E4F                    2681              TRAP        #15                 ; trap call
00002892                          2682          
00002892  4EB9 00002E34           2683              JSR         PrntImm
00002898                          2684          
00002898  6000 E7A6               2685              BRA         LOOP
0000289C                          2686  
0000289C                          2687  opROLBI 
0000289C  43F9 00003D78           2688              LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028A2  103C 000E               2689              MOVE.B      #14, D0             ; command for trap call to display message
000028A6  4E4F                    2690              TRAP        #15                 ; trap call
000028A8                          2691  
000028A8  43F9 00003D83           2692              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028AE  103C 000E               2693              MOVE.B      #14, D0             ; command for trap call to display message
000028B2  4E4F                    2694              TRAP        #15                 ; trap call
000028B4                          2695          
000028B4  4EB9 00002E34           2696              JSR         PrntImm
000028BA                          2697          
000028BA  6000 E784               2698              BRA         LOOP
000028BE                          2699  
000028BE                          2700  opROBR  
000028BE  4242                    2701              CLR         D2
000028C0  3401                    2702              MOVE.W      D1, D2
000028C2  E042                    2703              ASR         #eight, D2
000028C4  C47C 0001               2704              AND         #$01, D2
000028C8                          2705      
000028C8  B43C 0000               2706              CMP.B       #zero, D2
000028CC  6700 000E               2707              BEQ         opRORBR
000028D0  B43C 0001               2708              CMP.B       #one, D2
000028D4  6700 0028               2709              BEQ         opROLBR
000028D8  6000 13A0               2710              BRA         printInvalid     
000028DC                          2711          
000028DC                          2712  opRORBR 
000028DC  43F9 00003D74           2713              LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028E2  103C 000E               2714              MOVE.B      #14, D0             ; command for trap call to display message
000028E6  4E4F                    2715              TRAP        #15                 ; trap call
000028E8                          2716  
000028E8  43F9 00003D83           2717              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000028EE  103C 000E               2718              MOVE.B      #14, D0             ; command for trap call to display message
000028F2  4E4F                    2719              TRAP        #15                 ; trap call
000028F4                          2720          
000028F4  4EB9 00002E90           2721              JSR         PrntReg
000028FA                          2722          
000028FA  6000 E744               2723              BRA         LOOP
000028FE                          2724  
000028FE                          2725  opROLBR 
000028FE  43F9 00003D78           2726              LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002904  103C 000E               2727              MOVE.B      #14, D0             ; command for trap call to display message
00002908  4E4F                    2728              TRAP        #15                 ; trap call
0000290A                          2729  
0000290A  43F9 00003D83           2730              LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002910  103C 000E               2731              MOVE.B      #14, D0             ; command for trap call to display message
00002914  4E4F                    2732              TRAP        #15                 ; trap call
00002916                          2733          
00002916  4EB9 00002E90           2734              JSR         PrntReg
0000291C                          2735          
0000291C  6000 E722               2736              BRA         LOOP       
00002920                          2737  
00002920                          2738  memSW   
00002920  4242                    2739              CLR         D2
00002922  1401                    2740              MOVE.B      D1,D2
00002924  E642                    2741              ASR         #three, D2
00002926                          2742          
00002926  C47C 0007               2743              AND         #$07, D2
0000292A                          2744          
0000292A  B43C 0000               2745              CMP.B       #zero, D2
0000292E  6700 002E               2746              BEQ         opASWI
00002932  B43C 0004               2747              CMP.B       #four, D2
00002936  6700 0088               2748              BEQ         opASWR
0000293A  B43C 0001               2749              CMP.B       #one, D2
0000293E  6700 00E2               2750              BEQ         opLSWI
00002942  B43C 0005               2751              CMP.B       #five, D2
00002946  6700 013C               2752              BEQ         opLSWR
0000294A  B43C 0003               2753              CMP.B       #three, D2
0000294E  6700 0196               2754              BEQ         opROWI
00002952  B43C 0007               2755              CMP.B       #seven, D2
00002956  6700 01F0               2756              BEQ         opROWR
0000295A  6000 131E               2757              BRA         printInvalid
0000295E                          2758          
0000295E                          2759  opASWI  
0000295E  4242                    2760              CLR         D2
00002960  3401                    2761              MOVE.W      D1, D2
00002962  E042                    2762              ASR         #eight, D2
00002964  C47C 0001               2763              AND         #$01, D2
00002968                          2764      
00002968  B43C 0000               2765              CMP.B       #zero, D2
0000296C  6700 000E               2766              BEQ         opASRWI
00002970  B43C 0001               2767              CMP.B       #one, D2
00002974  6700 0028               2768              BEQ         opASLWI
00002978  6000 1300               2769              BRA         printInvalid
0000297C                          2770          
0000297C                          2771  opASRWI 
0000297C  43F9 00003D6C           2772              LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002982  103C 000E               2773              MOVE.B      #14, D0             ; command for trap call to display message
00002986  4E4F                    2774              TRAP        #15                 ; trap call
00002988                          2775  
00002988  43F9 00003D86           2776              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000298E  103C 000E               2777              MOVE.B      #14, D0             ; command for trap call to display message
00002992  4E4F                    2778              TRAP        #15                 ; trap call
00002994                          2779          
00002994  4EB9 00002E34           2780              JSR         PrntImm
0000299A                          2781          
0000299A  6000 E6A4               2782              BRA         LOOP
0000299E                          2783  
0000299E                          2784  opASLWI 
0000299E  43F9 00003D70           2785              LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000029A4  103C 000E               2786              MOVE.B      #14, D0             ; command for trap call to display message
000029A8  4E4F                    2787              TRAP        #15                 ; trap call
000029AA                          2788  
000029AA  43F9 00003D86           2789              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000029B0  103C 000E               2790              MOVE.B      #14, D0             ; command for trap call to display message
000029B4  4E4F                    2791              TRAP        #15                 ; trap call
000029B6                          2792              
000029B6  4EB9 00002E34           2793              JSR         PrntImm
000029BC                          2794              
000029BC  6000 E682               2795              BRA         LOOP
000029C0                          2796  
000029C0                          2797  opASWR  
000029C0  4242                    2798              CLR         D2
000029C2  3401                    2799              MOVE.W      D1, D2
000029C4  E042                    2800              ASR         #eight, D2
000029C6  C47C 0001               2801              AND         #$01, D2
000029CA                          2802      
000029CA  B43C 0000               2803              CMP.B       #zero, D2
000029CE  6700 000E               2804              BEQ         opASRWR
000029D2  B43C 0001               2805              CMP.B       #one, D2
000029D6  6700 0028               2806              BEQ         opASLWR
000029DA  6000 129E               2807              BRA         printInvalid 
000029DE                          2808          
000029DE                          2809  opASRWR     
000029DE  43F9 00003D6C           2810              LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000029E4  103C 000E               2811              MOVE.B      #14, D0             ; command for trap call to display message
000029E8  4E4F                    2812              TRAP        #15                 ; trap call
000029EA                          2813  
000029EA  43F9 00003D86           2814              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
000029F0  103C 000E               2815              MOVE.B      #14, D0             ; command for trap call to display message
000029F4  4E4F                    2816              TRAP        #15                 ; trap call
000029F6                          2817          
000029F6  4EB9 00002E90           2818              JSR         PrntReg
000029FC                          2819          
000029FC  6000 E642               2820              BRA         LOOP
00002A00                          2821  
00002A00                          2822  opASLWR     
00002A00  43F9 00003D70           2823              LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002A06  103C 000E               2824              MOVE.B      #14, D0             ; command for trap call to display message
00002A0A  4E4F                    2825              TRAP        #15                 ; trap call
00002A0C                          2826  
00002A0C  43F9 00003D86           2827              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A12  103C 000E               2828              MOVE.B      #14, D0             ; command for trap call to display message
00002A16  4E4F                    2829              TRAP        #15                 ; trap call
00002A18                          2830          
00002A18  4EB9 00002E90           2831              JSR         PrntReg
00002A1E                          2832          
00002A1E  6000 E620               2833              BRA         LOOP
00002A22                          2834  
00002A22                          2835  opLSWI      
00002A22  4242                    2836              CLR         D2
00002A24  3401                    2837              MOVE.W      D1, D2
00002A26  E042                    2838              ASR         #eight, D2
00002A28  C47C 0001               2839              AND         #$01, D2
00002A2C                          2840      
00002A2C  B43C 0000               2841              CMP.B       #zero, D2
00002A30  6700 000E               2842              BEQ         opLSRWI
00002A34  B43C 0001               2843              CMP.B       #one, D2
00002A38  6700 0028               2844              BEQ         opLSLWI
00002A3C  6000 123C               2845              BRA         printInvalid 
00002A40                          2846          
00002A40                          2847  opLSRWI 
00002A40  43F9 00003D64           2848              LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A46  103C 000E               2849              MOVE.B      #14, D0             ; command for trap call to display message
00002A4A  4E4F                    2850              TRAP        #15                 ; trap call
00002A4C                          2851      
00002A4C  43F9 00003D86           2852              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A52  103C 000E               2853              MOVE.B      #14, D0             ; command for trap call to display message
00002A56  4E4F                    2854              TRAP        #15                 ; trap call
00002A58                          2855          
00002A58  4EB9 00002E34           2856              JSR         PrntImm
00002A5E                          2857          
00002A5E  6000 E5E0               2858              BRA         LOOP
00002A62                          2859              
00002A62                          2860  opLSLWI 
00002A62  43F9 00003D68           2861              LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A68  103C 000E               2862              MOVE.B      #14, D0             ; command for trap call to display message
00002A6C  4E4F                    2863              TRAP        #15                 ; trap call
00002A6E                          2864  
00002A6E  43F9 00003D86           2865              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002A74  103C 000E               2866              MOVE.B      #14, D0             ; command for trap call to display message
00002A78  4E4F                    2867              TRAP        #15                 ; trap call
00002A7A                          2868          
00002A7A  4EB9 00002E34           2869              JSR         PrntImm
00002A80                          2870          
00002A80  6000 E5BE               2871              BRA         LOOP
00002A84                          2872              
00002A84                          2873  opLSWR  
00002A84  4242                    2874              CLR         D2
00002A86  3401                    2875              MOVE.W      D1, D2
00002A88  E042                    2876              ASR         #eight, D2
00002A8A  C47C 0001               2877              AND         #$01, D2
00002A8E                          2878      
00002A8E  B43C 0000               2879              CMP.B       #zero, D2
00002A92  6700 000E               2880              BEQ         opLSRWR
00002A96  B43C 0001               2881              CMP.B       #one, D2
00002A9A  6700 0028               2882              BEQ         opLSLWR
00002A9E  6000 11DA               2883              BRA         printInvalid 
00002AA2                          2884          
00002AA2                          2885  opLSRWR 
00002AA2  43F9 00003D64           2886              LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002AA8  103C 000E               2887              MOVE.B      #14, D0             ; command for trap call to display message
00002AAC  4E4F                    2888              TRAP        #15                 ; trap call
00002AAE                          2889  
00002AAE  43F9 00003D86           2890              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002AB4  103C 000E               2891              MOVE.B      #14, D0             ; command for trap call to display message
00002AB8  4E4F                    2892              TRAP        #15                 ; trap call
00002ABA                          2893          
00002ABA  4EB9 00002E90           2894              JSR         PrntReg
00002AC0                          2895          
00002AC0  6000 E57E               2896              BRA         LOOP
00002AC4                          2897          
00002AC4                          2898  opLSLWR 
00002AC4  43F9 00003D68           2899              LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002ACA  103C 000E               2900              MOVE.B      #14, D0             ; command for trap call to display message
00002ACE  4E4F                    2901              TRAP        #15                 ; trap call
00002AD0                          2902  
00002AD0  43F9 00003D86           2903              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002AD6  103C 000E               2904              MOVE.B      #14, D0             ; command for trap call to display message
00002ADA  4E4F                    2905              TRAP        #15                 ; trap call
00002ADC                          2906          
00002ADC  4EB9 00002E90           2907              JSR         PrntReg
00002AE2                          2908          
00002AE2  6000 E55C               2909              BRA         LOOP
00002AE6                          2910  
00002AE6                          2911  opROWI  
00002AE6  4242                    2912              CLR         D2
00002AE8  3401                    2913              MOVE.W      D1, D2
00002AEA  E042                    2914              ASR         #eight, D2
00002AEC  C47C 0001               2915              AND         #$01, D2
00002AF0                          2916      
00002AF0  B43C 0000               2917              CMP.B       #zero, D2
00002AF4  6700 000E               2918              BEQ         opRORWI
00002AF8  B43C 0001               2919              CMP.B       #one, D2
00002AFC  6700 0028               2920              BEQ         opROLWI
00002B00  6000 1178               2921              BRA         printInvalid 
00002B04                          2922          
00002B04                          2923  opRORWI 
00002B04  43F9 00003D74           2924              LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B0A  103C 000E               2925              MOVE.B      #14, D0             ; command for trap call to display message
00002B0E  4E4F                    2926              TRAP        #15                 ; trap call
00002B10                          2927  
00002B10  43F9 00003D86           2928              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B16  103C 000E               2929              MOVE.B      #14, D0             ; command for trap call to display message
00002B1A  4E4F                    2930              TRAP        #15                 ; trap call
00002B1C                          2931          
00002B1C  4EB9 00002E34           2932              JSR         PrntImm
00002B22                          2933          
00002B22  6000 E51C               2934              BRA         LOOP
00002B26                          2935  
00002B26                          2936  opROLWI     
00002B26  43F9 00003D78           2937              LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B2C                          2938          
00002B2C  103C 000E               2939              MOVE.B      #14, D0             ; command for trap call to display message
00002B30  4E4F                    2940              TRAP        #15                 ; trap call
00002B32                          2941  
00002B32  43F9 00003D86           2942              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B38  103C 000E               2943              MOVE.B      #14, D0             ; command for trap call to display message
00002B3C  4E4F                    2944              TRAP        #15                 ; trap call
00002B3E                          2945          
00002B3E  4EB9 00002E34           2946              JSR         PrntImm
00002B44                          2947          
00002B44  6000 E4FA               2948              BRA         LOOP
00002B48                          2949  
00002B48                          2950  opROWR      
00002B48  4242                    2951              CLR         D2
00002B4A  3401                    2952              MOVE.W      D1, D2
00002B4C  E042                    2953              ASR         #eight, D2
00002B4E  C47C 0001               2954              AND         #$01, D2
00002B52                          2955      
00002B52  B43C 0000               2956              CMP.B       #zero, D2
00002B56  6700 000E               2957              BEQ         opRORWR
00002B5A  B43C 0001               2958              CMP.B       #one, D2
00002B5E  6700 0028               2959              BEQ         opROLWR
00002B62  6000 1116               2960              BRA         printInvalid     
00002B66                          2961          
00002B66                          2962  opRORWR 
00002B66  43F9 00003D74           2963              LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B6C  103C 000E               2964              MOVE.B      #14, D0             ; command for trap call to display message
00002B70  4E4F                    2965              TRAP        #15                 ; trap call
00002B72                          2966      
00002B72  43F9 00003D86           2967              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B78  103C 000E               2968              MOVE.B      #14, D0             ; command for trap call to display message
00002B7C  4E4F                    2969              TRAP        #15                 ; trap call
00002B7E                          2970          
00002B7E  4EB9 00002E90           2971              JSR         PrntReg
00002B84                          2972          
00002B84  6000 E4BA               2973              BRA         LOOP
00002B88                          2974  
00002B88                          2975  opROLWR 
00002B88  43F9 00003D78           2976              LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B8E  103C 000E               2977              MOVE.B      #14, D0             ; command for trap call to display message
00002B92  4E4F                    2978              TRAP        #15                 ; trap call
00002B94                          2979  
00002B94  43F9 00003D86           2980              LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002B9A  103C 000E               2981              MOVE.B      #14, D0             ; command for trap call to display message
00002B9E  4E4F                    2982              TRAP        #15                 ; trap call
00002BA0                          2983          
00002BA0  4EB9 00002E90           2984              JSR         PrntReg
00002BA6                          2985          
00002BA6  6000 E498               2986              BRA         LOOP
00002BAA                          2987  
00002BAA                          2988  memSL   
00002BAA  4242                    2989              CLR         D2
00002BAC  1401                    2990              MOVE.B      D1,D2
00002BAE  E642                    2991              ASR         #three, D2
00002BB0                          2992          
00002BB0  C47C 0007               2993              AND         #$07, D2
00002BB4                          2994          
00002BB4  B43C 0000               2995              CMP.B       #zero, D2
00002BB8  6700 002E               2996              BEQ         opASLI
00002BBC  B43C 0004               2997              CMP.B       #four, D2
00002BC0  6700 0088               2998              BEQ         opASLR
00002BC4  B43C 0001               2999              CMP.B       #one, D2
00002BC8  6700 00E2               3000              BEQ         opLSLI
00002BCC  B43C 0005               3001              CMP.B       #five, D2
00002BD0  6700 013C               3002              BEQ         opLSLR
00002BD4  B43C 0003               3003              CMP.B       #three, D2
00002BD8  6700 0196               3004              BEQ         opROLI
00002BDC  B43C 0007               3005              CMP.B       #seven, D2
00002BE0  6700 01F0               3006              BEQ         opROLR
00002BE4  6000 1094               3007              BRA         printInvalid
00002BE8                          3008          
00002BE8                          3009  opASLI  
00002BE8  4242                    3010              CLR         D2
00002BEA  3401                    3011              MOVE.W      D1, D2
00002BEC  E042                    3012              ASR         #eight, D2
00002BEE  C47C 0001               3013              AND         #$01, D2
00002BF2                          3014      
00002BF2  B43C 0000               3015              CMP.B       #zero, D2
00002BF6  6700 000E               3016              BEQ         opASRLI
00002BFA  B43C 0001               3017              CMP.B       #one, D2
00002BFE  6700 0028               3018              BEQ         opASLLI
00002C02  6000 1076               3019              BRA         printInvalid
00002C06                          3020          
00002C06                          3021  opASRLI 
00002C06  43F9 00003D6C           3022              LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C0C  103C 000E               3023              MOVE.B      #14, D0             ; command for trap call to display message
00002C10  4E4F                    3024              TRAP        #15                 ; trap call
00002C12                          3025  
00002C12  43F9 00003D89           3026              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C18  103C 000E               3027              MOVE.B      #14, D0             ; command for trap call to display message
00002C1C  4E4F                    3028              TRAP        #15                 ; trap call
00002C1E                          3029          
00002C1E  4EB9 00002E34           3030              JSR         PrntImm
00002C24                          3031          
00002C24  6000 E41A               3032              BRA         LOOP
00002C28                          3033  
00002C28                          3034  opASLLI 
00002C28  43F9 00003D70           3035              LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002C2E  103C 000E               3036              MOVE.B      #14, D0             ; command for trap call to display message
00002C32  4E4F                    3037              TRAP        #15                 ; trap call
00002C34                          3038  
00002C34  43F9 00003D89           3039              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C3A  103C 000E               3040              MOVE.B      #14, D0             ; command for trap call to display message
00002C3E  4E4F                    3041              TRAP        #15                 ; trap call
00002C40                          3042          
00002C40  4EB9 00002E34           3043              JSR         PrntImm
00002C46                          3044          
00002C46  6000 E3F8               3045              BRA         LOOP
00002C4A                          3046  
00002C4A                          3047  opASLR  
00002C4A  4242                    3048              CLR         D2
00002C4C  3401                    3049              MOVE.W      D1, D2
00002C4E  E042                    3050              ASR         #eight, D2
00002C50  C47C 0001               3051              AND         #$01, D2
00002C54                          3052          
00002C54  B43C 0000               3053              CMP.B       #zero, D2
00002C58  6700 000E               3054              BEQ         opASRLR
00002C5C  B43C 0001               3055              CMP.B       #one, D2
00002C60  6700 0028               3056              BEQ         opASLLR
00002C64  6000 1014               3057              BRA         printInvalid 
00002C68                          3058          
00002C68                          3059  opASRLR 
00002C68  43F9 00003D6C           3060              LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002C6E  103C 000E               3061              MOVE.B      #14, D0             ; command for trap call to display message
00002C72  4E4F                    3062              TRAP        #15                 ; trap call
00002C74                          3063  
00002C74  43F9 00003D89           3064              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C7A  103C 000E               3065              MOVE.B      #14, D0             ; command for trap call to display message
00002C7E  4E4F                    3066              TRAP        #15                 ; trap call
00002C80                          3067          
00002C80  4EB9 00002E90           3068              JSR         PrntReg
00002C86                          3069          
00002C86  6000 E3B8               3070              BRA         LOOP
00002C8A                          3071  
00002C8A                          3072  opASLLR 
00002C8A  43F9 00003D70           3073              LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002C90  103C 000E               3074              MOVE.B      #14, D0             ; command for trap call to display message
00002C94  4E4F                    3075              TRAP        #15                 ; trap call
00002C96                          3076  
00002C96  43F9 00003D89           3077              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002C9C  103C 000E               3078              MOVE.B      #14, D0             ; command for trap call to display message
00002CA0  4E4F                    3079              TRAP        #15                 ; trap call
00002CA2                          3080          
00002CA2  4EB9 00002E90           3081              JSR         PrntReg
00002CA8                          3082          
00002CA8  6000 E396               3083              BRA         LOOP
00002CAC                          3084  
00002CAC                          3085  opLSLI  
00002CAC  4242                    3086              CLR         D2
00002CAE  3401                    3087              MOVE.W      D1, D2
00002CB0  E042                    3088              ASR         #eight, D2
00002CB2  C47C 0001               3089              AND         #$01, D2
00002CB6                          3090      
00002CB6  B43C 0000               3091              CMP.B       #zero, D2
00002CBA  6700 000E               3092              BEQ         opLSRLI
00002CBE  B43C 0001               3093              CMP.B       #one, D2
00002CC2  6700 0028               3094              BEQ         opLSLLI
00002CC6  6000 0FB2               3095              BRA         printInvalid 
00002CCA                          3096          
00002CCA                          3097  opLSRLI 
00002CCA  43F9 00003D64           3098              LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CD0  103C 000E               3099              MOVE.B      #14, D0             ; command for trap call to display message
00002CD4  4E4F                    3100              TRAP        #15                 ; trap call
00002CD6                          3101  
00002CD6  43F9 00003D89           3102              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CDC  103C 000E               3103              MOVE.B      #14, D0             ; command for trap call to display message
00002CE0  4E4F                    3104              TRAP        #15                 ; trap call
00002CE2                          3105          
00002CE2  4EB9 00002E34           3106              JSR         PrntImm
00002CE8                          3107          
00002CE8  6000 E356               3108              BRA         LOOP
00002CEC                          3109  
00002CEC                          3110  
00002CEC                          3111  opLSLLI 
00002CEC  43F9 00003D68           3112              LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CF2  103C 000E               3113              MOVE.B      #14, D0             ; command for trap call to display message
00002CF6  4E4F                    3114              TRAP        #15                 ; trap call
00002CF8                          3115  
00002CF8  43F9 00003D89           3116              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002CFE  103C 000E               3117              MOVE.B      #14, D0             ; command for trap call to display message
00002D02  4E4F                    3118              TRAP        #15                 ; trap call
00002D04                          3119              
00002D04  4EB9 00002E34           3120              JSR         PrntImm
00002D0A                          3121          
00002D0A  6000 E334               3122              BRA         LOOP
00002D0E                          3123  
00002D0E                          3124  opLSLR  
00002D0E  4242                    3125              CLR         D2
00002D10  3401                    3126              MOVE.W      D1, D2
00002D12  E042                    3127              ASR         #eight, D2
00002D14  C47C 0001               3128              AND         #$01, D2
00002D18                          3129      
00002D18  B43C 0000               3130              CMP.B       #zero, D2
00002D1C  6700 000E               3131              BEQ         opLSRLR
00002D20  B43C 0001               3132              CMP.B       #one, D2
00002D24  6700 0028               3133              BEQ         opLSLLR
00002D28  6000 0F50               3134              BRA         printInvalid 
00002D2C                          3135          
00002D2C                          3136  opLSRLR 
00002D2C  43F9 00003D64           3137              LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002D32  103C 000E               3138              MOVE.B      #14, D0             ; command for trap call to display message
00002D36  4E4F                    3139              TRAP        #15                 ; trap call
00002D38                          3140  
00002D38  43F9 00003D89           3141              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D3E  103C 000E               3142              MOVE.B      #14, D0             ; command for trap call to display message
00002D42  4E4F                    3143              TRAP        #15                 ; trap call
00002D44                          3144          
00002D44  4EB9 00002E90           3145              JSR         PrntReg
00002D4A                          3146          
00002D4A  6000 E2F4               3147              BRA         LOOP
00002D4E                          3148          
00002D4E                          3149  opLSLLR 
00002D4E  43F9 00003D68           3150              LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002D54  103C 000E               3151              MOVE.B      #14, D0             ; command for trap call to display message
00002D58  4E4F                    3152              TRAP        #15                 ; trap call
00002D5A                          3153  
00002D5A  43F9 00003D89           3154              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D60  103C 000E               3155              MOVE.B      #14, D0             ; command for trap call to display message
00002D64  4E4F                    3156              TRAP        #15                 ; trap call
00002D66                          3157          
00002D66  4EB9 00002E90           3158              JSR         PrntReg
00002D6C                          3159          
00002D6C  6000 E2D2               3160              BRA         LOOP
00002D70                          3161              
00002D70                          3162  opROLI  
00002D70  4242                    3163              CLR         D2
00002D72  3401                    3164              MOVE.W      D1, D2
00002D74  E042                    3165              ASR         #eight, D2
00002D76  C47C 0001               3166              AND         #$01, D2
00002D7A                          3167          
00002D7A  B43C 0000               3168              CMP.B       #zero, D2
00002D7E  6700 000E               3169              BEQ         opRORLI
00002D82  B43C 0001               3170              CMP.B       #one, D2
00002D86  6700 0028               3171              BEQ         opROLLI
00002D8A  6000 0EEE               3172              BRA         printInvalid 
00002D8E                          3173          
00002D8E                          3174  opRORLI 
00002D8E  43F9 00003D74           3175              LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002D94  103C 000E               3176              MOVE.B      #14, D0             ; command for trap call to display message
00002D98  4E4F                    3177              TRAP        #15                 ; trap call
00002D9A                          3178  
00002D9A  43F9 00003D89           3179              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DA0  103C 000E               3180              MOVE.B      #14, D0             ; command for trap call to display message
00002DA4  4E4F                    3181              TRAP        #15                 ; trap call
00002DA6                          3182          
00002DA6  4EB9 00002E34           3183              JSR         PrntImm
00002DAC                          3184          
00002DAC  6000 E292               3185              BRA         LOOP
00002DB0                          3186  
00002DB0                          3187  opROLLI 
00002DB0  43F9 00003D78           3188              LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DB6  103C 000E               3189              MOVE.B      #14, D0             ; command for trap call to display message
00002DBA  4E4F                    3190              TRAP        #15                 ; trap call
00002DBC                          3191  
00002DBC  43F9 00003D89           3192              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DC2  103C 000E               3193              MOVE.B      #14, D0             ; command for trap call to display message
00002DC6  4E4F                    3194              TRAP        #15                 ; trap call
00002DC8                          3195          
00002DC8  4EB9 00002E34           3196              JSR         PrntImm
00002DCE                          3197          
00002DCE  6000 E270               3198              BRA         LOOP
00002DD2                          3199  
00002DD2                          3200  opROLR  
00002DD2  4242                    3201              CLR         D2
00002DD4  3401                    3202              MOVE.W      D1, D2
00002DD6  E042                    3203              ASR         #eight, D2
00002DD8  C47C 0001               3204              AND         #$01, D2
00002DDC                          3205      
00002DDC  B43C 0000               3206              CMP.B       #zero, D2
00002DE0  6700 000E               3207              BEQ         opRORLR
00002DE4  B43C 0001               3208              CMP.B       #one, D2
00002DE8  6700 0028               3209              BEQ         opROLLR
00002DEC  6000 0E8C               3210              BRA         printInvalid     
00002DF0                          3211          
00002DF0                          3212  opRORLR 
00002DF0  43F9 00003D74           3213              LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002DF6  103C 000E               3214              MOVE.B      #14, D0             ; command for trap call to display message
00002DFA  4E4F                    3215              TRAP        #15                 ; trap call
00002DFC                          3216  
00002DFC  43F9 00003D89           3217              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E02  103C 000E               3218              MOVE.B      #14, D0             ; command for trap call to display message
00002E06  4E4F                    3219              TRAP        #15                 ; trap call
00002E08                          3220          
00002E08  4EB9 00002E90           3221              JSR         PrntReg
00002E0E                          3222              
00002E0E  6000 E230               3223              BRA         LOOP
00002E12                          3224  
00002E12                          3225  opROLLR     
00002E12  43F9 00003D78           3226              LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E18  103C 000E               3227              MOVE.B      #14, D0             ; command for trap call to display message
00002E1C  4E4F                    3228              TRAP        #15                 ; trap call
00002E1E                          3229      
00002E1E  43F9 00003D89           3230              LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E24  103C 000E               3231              MOVE.B      #14, D0             ; command for trap call to display message
00002E28  4E4F                    3232              TRAP        #15                 ; trap call
00002E2A                          3233          
00002E2A  4EB9 00002E90           3234              JSR         PrntReg
00002E30                          3235          
00002E30  6000 E20E               3236              BRA         LOOP
00002E34                          3237          
00002E34                          3238  ***********************************************************************************************************
00002E34                          3239  *                       Immediate Data Subroutine Part 1
00002E34                          3240  *
00002E34                          3241  * The following subroutine displays the immediate number to shift and the data register that is being shifted. 
00002E34                          3242  * This subroutine calls two printing immediate subroutine first, the the ea print subroutine.        
00002E34                          3243  *
00002E34                          3244  ***********************************************************************************************************
00002E34                          3245  
00002E34                          3246  PrntImm 
00002E34  48E7 FF7E               3247              MOVEM.L     D0-D7/A1-A6, -(SP)
00002E38                          3248              
00002E38  43F9 00003CE9           3249              LEA         space, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E3E  103C 000E               3250              MOVE.B      #14, D0             ; command for trap call to display message
00002E42  4E4F                    3251              TRAP        #15                 ; trap call
00002E44                          3252              
00002E44  43F9 00003CEC           3253              LEA         hashTag, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E4A  103C 000E               3254              MOVE.B      #14, D0             ; command for trap call to display message
00002E4E  4E4F                    3255              TRAP        #15                 ; trap call
00002E50                          3256              
00002E50  4242                    3257              CLR         D2
00002E52  3401                    3258              MOVE.W      D1, D2
00002E54  E042                    3259              ASR         #eight, D2
00002E56  E242                    3260              ASR         #one, D2
00002E58  C47C 0007               3261              AND         #$07, D2
00002E5C                          3262          
00002E5C  4EB9 00002EE2           3263              JSR         MemShiftImm
00002E62                          3264          
00002E62  43F9 00003CF0           3265              LEA         comma, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E68  103C 000E               3266              MOVE.B      #14, D0             ; command for trap call to display message
00002E6C  4E4F                    3267              TRAP        #15                 ; trap call
00002E6E                          3268          
00002E6E  4242                    3269              CLR         D2
00002E70  4243                    3270              CLR         D3
00002E72  1601                    3271              MOVE.B      D1,D3
00002E74  C67C 0007               3272              AND         #$07, D3
00002E78                          3273          
00002E78  4EB9 00002F0C           3274              JSR         printEA
00002E7E                          3275          
00002E7E  43F9 00003CE5           3276              LEA         newLine, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002E84  103C 000E               3277              MOVE.B      #14, D0             ; command for trap call to display message
00002E88  4E4F                    3278              TRAP        #15                 ; trap call
00002E8A                          3279          
00002E8A  4CDF 7EFF               3280              MOVEM.L     (SP)+, D0-D7/A1-A6
00002E8E  4E75                    3281              RTS
00002E90                          3282              
00002E90                          3283  ***********************************************************************************************************
00002E90                          3284  *
00002E90                          3285  *                       Shifting Helping Function
00002E90                          3286  *
00002E90                          3287  * The following subroutine determines the correct data register to display, and sets the values of D2 and 
00002E90                          3288  *       D3 accordingly to display the data register.
00002E90                          3289  * after setting the values, it calls another subroutine to actually display the data register.        
00002E90                          3290  *
00002E90                          3291  ***********************************************************************************************************
00002E90                          3292  
00002E90                          3293  PrntReg     
00002E90  48E7 FF7E               3294              MOVEM.L     D0-D7/A1-A6, -(SP)
00002E94                          3295          
00002E94  43F9 00003CE9           3296              LEA         space, A1           ; display space
00002E9A  103C 000E               3297              MOVE.B      #14, D0             ; command for trap call to display message
00002E9E  4E4F                    3298              TRAP        #15                 ; trap call
00002EA0                          3299          
00002EA0  4242                    3300              CLR         D2
00002EA2  4243                    3301              CLR         D3
00002EA4  3601                    3302              MOVE.W      D1, D3
00002EA6  E043                    3303              ASR         #eight, D3
00002EA8  E243                    3304              ASR         #one, D3
00002EAA  C67C 0007               3305              AND         #$07, D3
00002EAE                          3306          
00002EAE  4EB9 00002F0C           3307              JSR         printEA
00002EB4                          3308          
00002EB4  43F9 00003CF0           3309              LEA         comma, A1           ; display comma
00002EBA  103C 000E               3310              MOVE.B      #14, D0             ; command for trap call to display message
00002EBE  4E4F                    3311              TRAP        #15                 ; trap call
00002EC0                          3312          
00002EC0  4242                    3313              CLR        D2
00002EC2  4243                    3314              CLR         D3
00002EC4  1601                    3315              MOVE.B      D1,D3
00002EC6  C67C 0007               3316              AND         #$07, D3
00002ECA                          3317          
00002ECA  4EB9 00002F0C           3318              JSR         printEA
00002ED0                          3319          
00002ED0  43F9 00003CE5           3320              LEA         newLine, A1         ; newline
00002ED6  103C 000E               3321              MOVE.B      #14, D0             ; command for trap call to display message
00002EDA  4E4F                    3322              TRAP        #15                 ; trap call
00002EDC                          3323          
00002EDC  4CDF 7EFF               3324              MOVEM.L     (SP)+, D0-D7/A1-A6
00002EE0  4E75                    3325              RTS
00002EE2                          3326  
00002EE2                          3327  ***********************************************************************************************************
00002EE2                          3328  *
00002EE2                          3329  *                       Immediate Data Subroutine Part 2
00002EE2                          3330  *
00002EE2                          3331  * The following subroutine is used to display the number between 1-8 for the bit vount for the shift/rotate opcode
00002EE2                          3332  * It displays it by storing the appropriate number in D1 and running trap task 3.
00002EE2                          3333  *
00002EE2                          3334  ***********************************************************************************************************
00002EE2                          3335  
00002EE2                          3336  MemShiftImm     
00002EE2  48E7 FF7E               3337              MOVEM.L     D0-D7/A1-A6, -(SP)      ;caller saved data
00002EE6  4241                    3338              CLR         D1
00002EE8                          3339                 
00002EE8  1202                    3340              MOVE.B      D2, D1
00002EEA  B23C 0000               3341              CMP.B       #zero, D1
00002EEE  6700 000C               3342              BEQ         displayEight
00002EF2                          3343                  
00002EF2  103C 0003               3344              MOVE.B      #3, D0
00002EF6  4E4F                    3345              TRAP        #15
00002EF8  6000 000C               3346              BRA         endSubroutine
00002EFC                          3347                  
00002EFC                          3348  displayEight    
00002EFC  123C 0008               3349              MOVE.B      #$08, D1
00002F00  103C 0003               3350              MOVE.B      #3, D0
00002F04  4E4F                    3351              TRAP        #15                
00002F06                          3352              
00002F06                          3353  endSubroutine
00002F06  4CDF 7EFF               3354              MOVEM.L     (SP)+, D0-D7/A1-A6     ; recall data
00002F0A  4E75                    3355              RTS                             ; Return to main routine
00002F0C                          3356          
00002F0C                          3357  ***********************************************************************************************************
00002F0C                          3358  *
00002F0C                          3359  *                       EA Print Subroutine
00002F0C                          3360  *
00002F0C                          3361  ***********************************************************************************************************
00002F0C                          3362  
00002F0C                          3363  printEA     
00002F0C  48E7 FF7E               3364              MOVEM.L  D0-D7/A1-A6, -(SP)
00002F10                          3365  
00002F10  B43C 0000               3366              CMP.B       #zero, D2
00002F14  6700 002E               3367              BEQ         pDataReg
00002F18  B43C 0001               3368              CMP.B       #one, D2
00002F1C  6700 00E6               3369              BEQ         pAddrReg
00002F20  B43C 0002               3370              CMP.B       #two, D2
00002F24  6700 019E               3371              BEQ         pAddrDir
00002F28  B43C 0003               3372              CMP.B       #three, D2
00002F2C  6700 02C2               3373              BEQ         pAddrPost
00002F30  B43C 0004               3374              CMP.B       #four, D2
00002F34  6700 0446               3375              BEQ         pAddrDec
00002F38  B43C 0007               3376              CMP.B       #seven, D2
00002F3C  6700 0576               3377              BEQ         pHex
00002F40  6000 0642               3378              BRA         invalid
00002F44                          3379  
00002F44                          3380  ***********************************************************************************************************
00002F44                          3381  * Data Register        
00002F44                          3382  pDataReg    
00002F44  B63C 0000               3383              CMP.B       #zero,D3
00002F48  6700 003A               3384              BEQ         displayD0
00002F4C  B63C 0001               3385              CMP.B       #one,D3
00002F50  6700 0042               3386              BEQ         displayD1
00002F54  B63C 0002               3387              CMP.B       #two,D3
00002F58  6700 004A               3388              BEQ         displayD2
00002F5C  B63C 0003               3389              CMP.B       #three,D3
00002F60  6700 0052               3390              BEQ         displayD3
00002F64  B63C 0004               3391              CMP.B       #four,D3
00002F68  6700 005A               3392              BEQ         displayD4
00002F6C  B63C 0005               3393              CMP.B       #five,D3
00002F70  6700 0062               3394              BEQ         displayD5
00002F74  B63C 0006               3395              CMP.B       #six,D3
00002F78  6700 006A               3396              BEQ         displayD6
00002F7C  B63C 0007               3397              CMP.B       #seven,D3
00002F80  6700 0072               3398              BEQ         displayD7
00002F84                          3399              
00002F84  43F9 00003DA6           3400  displayD0   LEA         dispD0, A1          ; Display space
00002F8A  103C 000E               3401              MOVE.B      #14, D0             ; command for trap call to display message
00002F8E  4E4F                    3402              TRAP        #15                 ; trap call
00002F90  6000 05F6               3403              BRA         endSUB              ; go to the end of the subroutine
00002F94                          3404              
00002F94  43F9 00003DA9           3405  displayD1   LEA         dispD1, A1          ; Display space
00002F9A  103C 000E               3406              MOVE.B      #14, D0             ; command for trap call to display message
00002F9E  4E4F                    3407              TRAP        #15                 ; trap call
00002FA0  6000 05E6               3408              BRA         endSUB              ; go to the end of the subroutine
00002FA4                          3409  
00002FA4  43F9 00003DAC           3410  displayD2   LEA         dispD2, A1          ; Display space
00002FAA  103C 000E               3411              MOVE.B      #14, D0             ; command for trap call to display message
00002FAE  4E4F                    3412              TRAP        #15                 ; trap call
00002FB0  6000 05D6               3413              BRA         endSUB              ; go to the end of the subroutine
00002FB4                          3414  
00002FB4  43F9 00003DAF           3415  displayD3   LEA         dispD3, A1          ; Display space
00002FBA  103C 000E               3416              MOVE.B      #14, D0             ; command for trap call to display message
00002FBE  4E4F                    3417              TRAP        #15                 ; trap call
00002FC0  6000 05C6               3418              BRA         endSUB              ; go to the end of the subroutine
00002FC4                          3419  
00002FC4  43F9 00003DB2           3420  displayD4   LEA         dispD4, A1          ; Display space
00002FCA  103C 000E               3421              MOVE.B      #14, D0             ; command for trap call to display message
00002FCE  4E4F                    3422              TRAP        #15                 ; trap call
00002FD0  6000 05B6               3423              BRA         endSUB              ; go to the end of the subroutine
00002FD4                          3424  
00002FD4  43F9 00003DB5           3425  displayD5   LEA         dispD5, A1          ; Display space
00002FDA  103C 000E               3426              MOVE.B      #14, D0             ; command for trap call to display message
00002FDE  4E4F                    3427              TRAP        #15                 ; trap call
00002FE0  6000 05A6               3428              BRA         endSUB              ; go to the end of the subroutine
00002FE4                          3429  
00002FE4  43F9 00003DB8           3430  displayD6   LEA         dispD6, A1          ; Display space
00002FEA  103C 000E               3431              MOVE.B      #14, D0             ; command for trap call to display message
00002FEE  4E4F                    3432              TRAP        #15                 ; trap call
00002FF0  6000 0596               3433              BRA         endSUB              ; go to the end of the subroutine
00002FF4                          3434  
00002FF4  43F9 00003DBB           3435  displayD7   LEA         dispD7, A1          ; Display space
00002FFA  103C 000E               3436              MOVE.B      #14, D0             ; command for trap call to display message
00002FFE  4E4F                    3437              TRAP        #15                 ; trap call
00003000  6000 0586               3438              BRA         endSUB              ; go to the end of the subroutine
00003004                          3439              
00003004                          3440  ***********************************************************************************************************
00003004                          3441  * Address Register
00003004                          3442  
00003004  B63C 0000               3443  pAddrReg    CMP.B       #zero,D3
00003008  6700 003A               3444              BEQ         displayA0
0000300C  B63C 0001               3445              CMP.B       #one,D3
00003010  6700 0042               3446              BEQ         displayA1
00003014  B63C 0002               3447              CMP.B       #two,D3
00003018  6700 004A               3448              BEQ         displayA2
0000301C  B63C 0003               3449              CMP.B       #three,D3
00003020  6700 0052               3450              BEQ         displayA3
00003024  B63C 0004               3451              CMP.B       #four,D3
00003028  6700 005A               3452              BEQ         displayA4
0000302C  B63C 0005               3453              CMP.B       #five,D3
00003030  6700 0062               3454              BEQ         displayA5
00003034  B63C 0006               3455              CMP.B       #six,D3
00003038  6700 006A               3456              BEQ         displayA6
0000303C  B63C 0007               3457              CMP.B       #seven,D3
00003040  6700 0072               3458              BEQ         displayA7
00003044                          3459              
00003044  43F9 00003D8C           3460  displayA0   LEA         dispA0, A1          ; Display space
0000304A  103C 000E               3461              MOVE.B      #14, D0             ; command for trap call to display message
0000304E  4E4F                    3462              TRAP        #15                 ; trap call
00003050  6000 0536               3463              BRA         endSUB              ; go to the end of the subroutine
00003054                          3464              
00003054  43F9 00003D8F           3465  displayA1   LEA         dispA1, A1          ; Display space
0000305A  103C 000E               3466              MOVE.B      #14, D0             ; command for trap call to display message
0000305E  4E4F                    3467              TRAP        #15                 ; trap call
00003060  6000 0526               3468              BRA         endSUB              ; go to the end of the subroutine
00003064                          3469  
00003064  43F9 00003D92           3470  displayA2   LEA         dispA2, A1          ; Display space
0000306A  103C 000E               3471              MOVE.B      #14, D0             ; command for trap call to display message
0000306E  4E4F                    3472              TRAP        #15                 ; trap call
00003070  6000 0516               3473              BRA         endSUB              ; go to the end of the subroutine
00003074                          3474  
00003074  43F9 00003D95           3475  displayA3   LEA         dispA3, A1          ; Display space
0000307A  103C 000E               3476              MOVE.B      #14, D0             ; command for trap call to display message
0000307E  4E4F                    3477              TRAP        #15                 ; trap call
00003080  6000 0506               3478              BRA         endSUB              ; go to the end of the subroutine
00003084                          3479  
00003084  43F9 00003D98           3480  displayA4   LEA         dispA4, A1          ; Display space
0000308A  103C 000E               3481              MOVE.B      #14, D0             ; command for trap call to display message
0000308E  4E4F                    3482              TRAP        #15                 ; trap call
00003090  6000 04F6               3483              BRA         endSUB              ; go to the end of the subroutine
00003094                          3484  
00003094  43F9 00003D9B           3485  displayA5   LEA         dispA5, A1          ; Display space
0000309A  103C 000E               3486              MOVE.B      #14, D0             ; command for trap call to display message
0000309E  4E4F                    3487              TRAP        #15                 ; trap call
000030A0  6000 04E6               3488              BRA         endSUB              ; go to the end of the subroutine
000030A4                          3489  
000030A4  43F9 00003D9E           3490  displayA6   LEA         dispA6, A1          ; Display space
000030AA  103C 000E               3491              MOVE.B      #14, D0             ; command for trap call to display message
000030AE  4E4F                    3492              TRAP        #15                 ; trap call
000030B0  6000 04D6               3493              BRA         endSUB              ; go to the end of the subroutine
000030B4                          3494  
000030B4  43F9 00003DA1           3495  displayA7   LEA         dispA7, A1          ; Display space
000030BA  103C 000E               3496              MOVE.B      #14, D0             ; command for trap call to display message
000030BE  4E4F                    3497              TRAP        #15                 ; trap call
000030C0  6000 04C6               3498              BRA         endSUB              ; go to the end of the subroutine
000030C4                          3499  
000030C4                          3500  ***********************************************************************************************************
000030C4                          3501  * Address Register Direct
000030C4                          3502  
000030C4  43F9 00003CF2           3503  pAddrDir    LEA         opPer, A1           ; Display space
000030CA  103C 000E               3504              MOVE.B      #14, D0             ; command for trap call to display message
000030CE  4E4F                    3505              TRAP        #15                 ; trap call
000030D0                          3506              
000030D0  B63C 0000               3507              CMP.B       #zero,D3
000030D4  6700 003A               3508              BEQ         displayA0A
000030D8  B63C 0001               3509              CMP.B       #one,D3
000030DC  6700 004E               3510              BEQ         displayA1A
000030E0  B63C 0002               3511              CMP.B       #two,D3
000030E4  6700 0062               3512              BEQ         displayA2A
000030E8  B63C 0003               3513              CMP.B       #three,D3
000030EC  6700 0076               3514              BEQ         displayA3A
000030F0  B63C 0004               3515              CMP.B       #four,D3
000030F4  6700 008A               3516              BEQ         displayA4A
000030F8  B63C 0005               3517              CMP.B       #five,D3
000030FC  6700 009E               3518              BEQ         displayA5A
00003100  B63C 0006               3519              CMP.B       #six,D3
00003104  6700 00B2               3520              BEQ         displayA6A
00003108  B63C 0007               3521              CMP.B       #seven,D3
0000310C  6700 00C6               3522              BEQ         displayA7A
00003110                          3523              
00003110  43F9 00003D8C           3524  displayA0A  LEA         dispA0, A1          ; Display space
00003116  103C 000E               3525              MOVE.B      #14, D0             ; command for trap call to display message
0000311A  4E4F                    3526              TRAP        #15                 ; trap call
0000311C  43F9 00003CF4           3527              LEA         clPer, A1           ; Display space
00003122  103C 000E               3528              MOVE.B      #14, D0             ; command for trap call to display message
00003126  4E4F                    3529              TRAP        #15                 ; trap call
00003128  6000 045E               3530              BRA         endSUB              ; go to the end of the subroutine
0000312C                          3531              
0000312C  43F9 00003D8F           3532  displayA1A  LEA         dispA1, A1          ; Display space
00003132  103C 000E               3533              MOVE.B      #14, D0             ; command for trap call to display message
00003136  4E4F                    3534              TRAP        #15                 ; trap call
00003138  43F9 00003CF4           3535              LEA         clPer, A1           ; Display space
0000313E  103C 000E               3536              MOVE.B      #14, D0             ; command for trap call to display message
00003142  4E4F                    3537              TRAP        #15                 ; trap call
00003144  6000 0442               3538              BRA         endSUB              ; go to the end of the subroutine
00003148                          3539  
00003148  43F9 00003D92           3540  displayA2A  LEA         dispA2, A1          ; Display space
0000314E  103C 000E               3541              MOVE.B      #14, D0             ; command for trap call to display message
00003152  4E4F                    3542              TRAP        #15                 ; trap call
00003154  43F9 00003CF4           3543              LEA         clPer, A1           ; Display space
0000315A  103C 000E               3544              MOVE.B      #14, D0             ; command for trap call to display message
0000315E  4E4F                    3545              TRAP        #15                 ; trap call
00003160  6000 0426               3546              BRA         endSUB              ; go to the end of the subroutine
00003164                          3547  
00003164  43F9 00003D95           3548  displayA3A  LEA         dispA3, A1          ; Display space
0000316A  103C 000E               3549              MOVE.B      #14, D0             ; command for trap call to display message
0000316E  4E4F                    3550              TRAP        #15                 ; trap call
00003170  43F9 00003CF4           3551              LEA         clPer, A1           ; Display space
00003176  103C 000E               3552              MOVE.B      #14, D0             ; command for trap call to display message
0000317A  4E4F                    3553              TRAP        #15                 ; trap call
0000317C  6000 040A               3554              BRA         endSUB              ; go to the end of the subroutine
00003180                          3555  
00003180  43F9 00003D98           3556  displayA4A  LEA         dispA4, A1          ; Display space
00003186  103C 000E               3557              MOVE.B      #14, D0             ; command for trap call to display message
0000318A  4E4F                    3558              TRAP        #15                 ; trap call
0000318C  43F9 00003CF4           3559              LEA         clPer, A1           ; Display space
00003192  103C 000E               3560              MOVE.B      #14, D0             ; command for trap call to display message
00003196  4E4F                    3561              TRAP        #15                 ; trap call
00003198  6000 03EE               3562              BRA         endSUB              ; go to the end of the subroutine
0000319C                          3563  
0000319C  43F9 00003D9B           3564  displayA5A  LEA         dispA5, A1          ; Display space
000031A2  103C 000E               3565              MOVE.B      #14, D0             ; command for trap call to display message
000031A6  4E4F                    3566              TRAP        #15                 ; trap call
000031A8  43F9 00003CF4           3567              LEA         clPer, A1           ; Display space
000031AE  103C 000E               3568              MOVE.B      #14, D0             ; command for trap call to display message
000031B2  4E4F                    3569              TRAP        #15                 ; trap call
000031B4  6000 03D2               3570              BRA         endSUB              ; go to the end of the subroutine
000031B8                          3571  
000031B8  43F9 00003D9E           3572  displayA6A  LEA         dispA6, A1          ; Display space
000031BE  103C 000E               3573              MOVE.B      #14, D0             ; command for trap call to display message
000031C2  4E4F                    3574              TRAP        #15                 ; trap call
000031C4  43F9 00003CF4           3575              LEA         clPer, A1           ; Display space
000031CA  103C 000E               3576              MOVE.B      #14, D0             ; command for trap call to display message
000031CE  4E4F                    3577              TRAP        #15                 ; trap call
000031D0  6000 03B6               3578              BRA         endSUB              ; go to the end of the subroutine
000031D4                          3579  
000031D4  43F9 00003DA1           3580  displayA7A  LEA         dispA7, A1          ; Display space
000031DA  103C 000E               3581              MOVE.B      #14, D0             ; command for trap call to display message
000031DE  4E4F                    3582              TRAP        #15                 ; trap call
000031E0  43F9 00003CF4           3583              LEA         clPer, A1           ; Display space
000031E6  103C 000E               3584              MOVE.B      #14, D0             ; command for trap call to display message
000031EA  4E4F                    3585              TRAP        #15                 ; trap call
000031EC  6000 039A               3586              BRA         endSUB              ; go to the end of the subroutine
000031F0                          3587              
000031F0                          3588  ***********************************************************************************************************
000031F0                          3589  * Addr Postincrement
000031F0                          3590              
000031F0  43F9 00003CF2           3591  pAddrPost   LEA         opPer, A1           ; Display space
000031F6  103C 000E               3592              MOVE.B      #14, D0             ; command for trap call to display message
000031FA  4E4F                    3593              TRAP        #15                 ; trap call
000031FC                          3594              
000031FC  B63C 0000               3595              CMP.B       #zero,D3
00003200  6700 003A               3596              BEQ         displayA0P
00003204  B63C 0001               3597              CMP.B       #one,D3
00003208  6700 005A               3598              BEQ         displayA1P
0000320C  B63C 0002               3599              CMP.B       #two,D3
00003210  6700 007A               3600              BEQ         displayA2P
00003214  B63C 0003               3601              CMP.B       #three,D3
00003218  6700 009A               3602              BEQ         displayA3P
0000321C  B63C 0004               3603              CMP.B       #four,D3
00003220  6700 00BA               3604              BEQ         displayA4P
00003224  B63C 0005               3605              CMP.B       #five,D3
00003228  6700 00DA               3606              BEQ         displayA5P
0000322C  B63C 0006               3607              CMP.B       #six,D3
00003230  6700 00FA               3608              BEQ         displayA6P
00003234  B63C 0007               3609              CMP.B       #seven,D3
00003238  6700 011A               3610              BEQ         displayA7P
0000323C                          3611              
0000323C  43F9 00003D8C           3612  displayA0P  LEA         dispA0, A1          ; Display space
00003242  103C 000E               3613              MOVE.B      #14, D0             ; command for trap call to display message
00003246  4E4F                    3614              TRAP        #15                 ; trap call
00003248  43F9 00003CF4           3615              LEA         clPer, A1           ; Display space
0000324E  103C 000E               3616              MOVE.B      #14, D0             ; command for trap call to display message
00003252  4E4F                    3617              TRAP        #15                 ; trap call
00003254  43F9 00003CF8           3618              LEA         inc, A1             ; Display space
0000325A  103C 000E               3619              MOVE.B      #14, D0             ; command for trap call to display message
0000325E  4E4F                    3620              TRAP        #15                 ; trap call
00003260  6000 0326               3621              BRA         endSUB              ; go to the end of the subroutine
00003264                          3622              
00003264  43F9 00003D8F           3623  displayA1P  LEA         dispA1, A1          ; Display space
0000326A  103C 000E               3624              MOVE.B      #14, D0             ; command for trap call to display message
0000326E  4E4F                    3625              TRAP        #15                 ; trap call
00003270  43F9 00003CF4           3626              LEA         clPer, A1           ; Display space
00003276  103C 000E               3627              MOVE.B      #14, D0             ; command for trap call to display message
0000327A  4E4F                    3628              TRAP        #15                 ; trap call
0000327C  43F9 00003CF8           3629              LEA         inc, A1             ; Display space
00003282  103C 000E               3630              MOVE.B      #14, D0             ; command for trap call to display message
00003286  4E4F                    3631              TRAP        #15                 ; trap call
00003288  6000 02FE               3632              BRA         endSUB              ; go to the end of the subroutine
0000328C                          3633  
0000328C  43F9 00003D92           3634  displayA2P  LEA         dispA2, A1          ; Display space
00003292  103C 000E               3635              MOVE.B      #14, D0             ; command for trap call to display message
00003296  4E4F                    3636              TRAP        #15                 ; trap call
00003298  43F9 00003CF4           3637              LEA         clPer, A1           ; Display space
0000329E  103C 000E               3638              MOVE.B      #14, D0             ; command for trap call to display message
000032A2  4E4F                    3639              TRAP        #15                 ; trap call
000032A4  43F9 00003CF8           3640              LEA         inc, A1             ; Display space
000032AA  103C 000E               3641              MOVE.B      #14, D0             ; command for trap call to display message
000032AE  4E4F                    3642              TRAP        #15                 ; trap call
000032B0  6000 02D6               3643              BRA         endSUB              ; go to the end of the subroutine
000032B4                          3644  
000032B4  43F9 00003D95           3645  displayA3P  LEA         dispA3, A1          ; Display space
000032BA  103C 000E               3646              MOVE.B      #14, D0             ; command for trap call to display message
000032BE  4E4F                    3647              TRAP        #15                 ; trap call
000032C0  43F9 00003CF4           3648              LEA         clPer, A1           ; Display space
000032C6  103C 000E               3649              MOVE.B      #14, D0             ; command for trap call to display message
000032CA  4E4F                    3650              TRAP        #15                 ; trap call
000032CC  43F9 00003CF8           3651              LEA         inc, A1             ; Display space
000032D2  103C 000E               3652              MOVE.B      #14, D0             ; command for trap call to display message
000032D6  4E4F                    3653              TRAP        #15                 ; trap call
000032D8  6000 02AE               3654              BRA         endSUB              ; go to the end of the subroutine
000032DC                          3655  
000032DC  43F9 00003D98           3656  displayA4P  LEA         dispA4, A1          ; Display space
000032E2  103C 000E               3657              MOVE.B      #14, D0             ; command for trap call to display message
000032E6  4E4F                    3658              TRAP        #15                 ; trap call
000032E8  43F9 00003CF4           3659              LEA         clPer, A1           ; Display space
000032EE  103C 000E               3660              MOVE.B      #14, D0             ; command for trap call to display message
000032F2  4E4F                    3661              TRAP        #15                 ; trap call
000032F4  43F9 00003CF8           3662              LEA         inc, A1             ; Display space
000032FA  103C 000E               3663              MOVE.B      #14, D0             ; command for trap call to display message
000032FE  4E4F                    3664              TRAP        #15                 ; trap call
00003300  6000 0286               3665              BRA         endSUB              ; go to the end of the subroutine
00003304                          3666  
00003304  43F9 00003D9B           3667  displayA5P  LEA         dispA5, A1          ; Display space
0000330A  103C 000E               3668              MOVE.B      #14, D0             ; command for trap call to display message
0000330E  4E4F                    3669              TRAP        #15                 ; trap call
00003310  43F9 00003CF4           3670              LEA         clPer, A1           ; Display space
00003316  103C 000E               3671              MOVE.B      #14, D0             ; command for trap call to display message
0000331A  4E4F                    3672              TRAP        #15                 ; trap call
0000331C  43F9 00003CF8           3673              LEA         inc, A1             ; Display space
00003322  103C 000E               3674              MOVE.B      #14, D0             ; command for trap call to display message
00003326  4E4F                    3675              TRAP        #15                 ; trap call
00003328  6000 025E               3676              BRA         endSUB              ; go to the end of the subroutine
0000332C                          3677  
0000332C  43F9 00003D9E           3678  displayA6P  LEA         dispA6, A1          ; Display space
00003332  103C 000E               3679              MOVE.B      #14, D0             ; command for trap call to display message
00003336  4E4F                    3680              TRAP        #15                 ; trap call
00003338  43F9 00003CF4           3681              LEA         clPer, A1           ; Display space
0000333E  103C 000E               3682              MOVE.B      #14, D0             ; command for trap call to display message
00003342  4E4F                    3683              TRAP        #15                 ; trap call
00003344  43F9 00003CF8           3684              LEA         inc, A1             ; Display space
0000334A  103C 000E               3685              MOVE.B      #14, D0             ; command for trap call to display message
0000334E  4E4F                    3686              TRAP        #15                 ; trap call
00003350  6000 0236               3687              BRA         endSUB              ; go to the end of the subroutine
00003354                          3688  
00003354  43F9 00003DA1           3689  displayA7P  LEA         dispA7, A1          ; Display space
0000335A  103C 000E               3690              MOVE.B      #14, D0             ; command for trap call to display message
0000335E  4E4F                    3691              TRAP        #15                 ; trap call
00003360  43F9 00003CF4           3692              LEA         clPer, A1           ; Display space
00003366  103C 000E               3693              MOVE.B      #14, D0             ; command for trap call to display message
0000336A  4E4F                    3694              TRAP        #15                 ; trap call
0000336C  43F9 00003CF8           3695              LEA         inc, A1             ; Display space
00003372  103C 000E               3696              MOVE.B      #14, D0             ; command for trap call to display message
00003376  4E4F                    3697              TRAP        #15                 ; trap call
00003378  6000 020E               3698              BRA         endSUB              ; go to the end of the subroutine
0000337C                          3699  
0000337C                          3700  ***********************************************************************************************************
0000337C                          3701  * Addr Postdecrement
0000337C                          3702  
0000337C                          3703  pAddrDec    
0000337C  43F9 00003CF6           3704              LEA         dec, A1             ; Display space
00003382  103C 000E               3705              MOVE.B      #14, D0             ; command for trap call to display message
00003386  4E4F                    3706              TRAP        #15                 ; trap call
00003388                          3707              
00003388  43F9 00003CF2           3708              LEA         opPer, A1           ; Display space
0000338E  103C 000E               3709              MOVE.B      #14, D0             ; command for trap call to display message
00003392  4E4F                    3710              TRAP        #15                 ; trap call
00003394                          3711              
00003394  B63C 0000               3712              CMP.B       #zero,D3
00003398  6700 003A               3713              BEQ         displayA0D
0000339C  B63C 0001               3714              CMP.B       #one,D3
000033A0  6700 004E               3715              BEQ         displayA1D
000033A4  B63C 0002               3716              CMP.B       #two,D3
000033A8  6700 0062               3717              BEQ         displayA2D
000033AC  B63C 0003               3718              CMP.B       #three,D3
000033B0  6700 0076               3719              BEQ         displayA3D
000033B4  B63C 0004               3720              CMP.B       #four,D3
000033B8  6700 008A               3721              BEQ         displayA4D
000033BC  B63C 0005               3722              CMP.B       #five,D3
000033C0  6700 009E               3723              BEQ         displayA5D
000033C4  B63C 0006               3724              CMP.B       #six,D3
000033C8  6700 00B2               3725              BEQ         displayA6D
000033CC  B63C 0007               3726              CMP.B       #seven,D3
000033D0  6700 00C6               3727              BEQ         displayA7D
000033D4                          3728              
000033D4                          3729  displayA0D  
000033D4  43F9 00003D8C           3730              LEA         dispA0, A1          ; Display space
000033DA  103C 000E               3731              MOVE.B      #14, D0             ; command for trap call to display message
000033DE  4E4F                    3732              TRAP        #15                 ; trap call
000033E0  43F9 00003CF4           3733              LEA         clPer, A1           ; Display space
000033E6  103C 000E               3734              MOVE.B      #14, D0             ; command for trap call to display message
000033EA  4E4F                    3735              TRAP        #15                 ; trap call
000033EC  6000 019A               3736              BRA         endSUB              ; go to the end of the subroutine
000033F0                          3737              
000033F0                          3738  displayA1D  
000033F0  43F9 00003D8F           3739              LEA         dispA1, A1          ; Display space
000033F6  103C 000E               3740              MOVE.B      #14, D0             ; command for trap call to display message
000033FA  4E4F                    3741              TRAP        #15                 ; trap call
000033FC  43F9 00003CF4           3742              LEA         clPer, A1           ; Display space
00003402  103C 000E               3743              MOVE.B      #14, D0             ; command for trap call to display message
00003406  4E4F                    3744              TRAP        #15                 ; trap call
00003408  6000 017E               3745              BRA         endSUB              ; go to the end of the subroutine
0000340C                          3746  
0000340C                          3747  displayA2D  
0000340C  43F9 00003D92           3748              LEA         dispA2, A1          ; Display space
00003412  103C 000E               3749              MOVE.B      #14, D0             ; command for trap call to display message
00003416  4E4F                    3750              TRAP        #15                 ; trap call
00003418  43F9 00003CF4           3751              LEA         clPer, A1           ; Display space
0000341E  103C 000E               3752              MOVE.B      #14, D0             ; command for trap call to display message
00003422  4E4F                    3753              TRAP        #15                 ; trap call
00003424  6000 0162               3754              BRA         endSUB              ; go to the end of the subroutine
00003428                          3755  
00003428                          3756  displayA3D  
00003428  43F9 00003D95           3757              LEA         dispA3, A1          ; Display space
0000342E  103C 000E               3758              MOVE.B      #14, D0             ; command for trap call to display message
00003432  4E4F                    3759              TRAP        #15                 ; trap call
00003434  43F9 00003CF4           3760              LEA         clPer, A1           ; Display space
0000343A  103C 000E               3761              MOVE.B      #14, D0             ; command for trap call to display message
0000343E  4E4F                    3762              TRAP        #15                 ; trap call
00003440  6000 0146               3763              BRA         endSUB              ; go to the end of the subroutine
00003444                          3764  
00003444                          3765  displayA4D  
00003444  43F9 00003D98           3766              LEA         dispA4, A1          ; Display space
0000344A  103C 000E               3767              MOVE.B      #14, D0             ; command for trap call to display message
0000344E  4E4F                    3768              TRAP        #15                 ; trap call
00003450  43F9 00003CF4           3769              LEA         clPer, A1           ; Display space
00003456  103C 000E               3770              MOVE.B      #14, D0             ; command for trap call to display message
0000345A  4E4F                    3771              TRAP        #15                 ; trap call
0000345C  6000 012A               3772              BRA         endSUB              ; go to the end of the subroutine
00003460                          3773  
00003460                          3774  displayA5D  
00003460  43F9 00003D9B           3775              LEA         dispA5, A1          ; Display space
00003466  103C 000E               3776              MOVE.B      #14, D0             ; command for trap call to display message
0000346A  4E4F                    3777              TRAP        #15                 ; trap call
0000346C  43F9 00003CF4           3778              LEA         clPer, A1           ; Display space
00003472  103C 000E               3779              MOVE.B      #14, D0             ; command for trap call to display message
00003476  4E4F                    3780              TRAP        #15                 ; trap call
00003478  6000 010E               3781              BRA         endSUB              ; go to the end of the subroutine
0000347C                          3782  
0000347C                          3783  displayA6D  
0000347C  43F9 00003D9E           3784              LEA         dispA6, A1          ; Display space
00003482  103C 000E               3785              MOVE.B      #14, D0             ; command for trap call to display message
00003486  4E4F                    3786              TRAP        #15                 ; trap call
00003488  43F9 00003CF4           3787              LEA         clPer, A1           ; Display space
0000348E  103C 000E               3788              MOVE.B      #14, D0             ; command for trap call to display message
00003492  4E4F                    3789              TRAP        #15                 ; trap call
00003494  6000 00F2               3790              BRA         endSUB              ; go to the end of the subroutine
00003498                          3791  
00003498                          3792  displayA7D  
00003498  43F9 00003DA1           3793              LEA         dispA7, A1          ; Display space
0000349E  103C 000E               3794              MOVE.B      #14, D0             ; command for trap call to display message
000034A2  4E4F                    3795              TRAP        #15                 ; trap call
000034A4  43F9 00003CF4           3796              LEA         clPer, A1           ; Display space
000034AA  103C 000E               3797              MOVE.B      #14, D0             ; command for trap call to display message
000034AE  4E4F                    3798              TRAP        #15                 ; trap call
000034B0  6000 00D6               3799              BRA         endSUB              ; go to the end of the subroutine
000034B4                          3800  
000034B4                          3801  ***********************************************************************************************************
000034B4                          3802  * Display Hex
000034B4                          3803  
000034B4                          3804  pHex        
000034B4  B63C 0000               3805              CMP.B       #zero, D3
000034B8  6700 0012               3806              BEQ         AbsShort
000034BC  B63C 0001               3807              CMP.B       #one, D3
000034C0  6700 0042               3808              BEQ         AbsLong
000034C4  B63C 0004               3809              CMP.B       #four, D3
000034C8  6700 0072               3810              BEQ         DispImm
000034CC                          3811              
000034CC                          3812  AbsShort    
000034CC  43F9 00003CF2           3813              LEA         opPer, A1           ; Display space
000034D2  103C 000E               3814              MOVE.B      #14, D0             ; command for trap call to display message
000034D6  4E4F                    3815              TRAP        #15                 ; trap call
000034D8                          3816              
000034D8  43F9 00003CEE           3817              LEA         dispHex, A1         ; Display space
000034DE  103C 000E               3818              MOVE.B      #14, D0             ; command for trap call to display message
000034E2  4E4F                    3819              TRAP        #15                 ; trap call
000034E4                          3820              
000034E4  4241                    3821              CLR         D1
000034E6  3218                    3822              MOVE.W      (A0)+, D1
000034E8  4240                    3823              CLR         D0
000034EA  103C 0004               3824              MOVE.B      #4, D0
000034EE                          3825              
000034EE  4EB9 00003AB0           3826              JSR         outHex
000034F4                          3827              
000034F4  43F9 00003CF4           3828              LEA         clPer, A1           ; Display space
000034FA  103C 000E               3829              MOVE.B      #14, D0             ; command for trap call to display message
000034FE  4E4F                    3830              TRAP        #15                 ; trap call
00003500                          3831              
00003500  6000 0086               3832              BRA         endSub
00003504                          3833              
00003504                          3834  AbsLong     
00003504  43F9 00003CF2           3835              LEA         opPer, A1           ; Display space
0000350A  103C 000E               3836              MOVE.B      #14, D0             ; command for trap call to display message
0000350E  4E4F                    3837              TRAP        #15                 ; trap call
00003510                          3838              
00003510  43F9 00003CEE           3839              LEA         dispHex, A1         ; Display space
00003516  103C 000E               3840              MOVE.B      #14, D0             ; command for trap call to display message
0000351A  4E4F                    3841              TRAP        #15                 ; trap call
0000351C                          3842              
0000351C  4241                    3843              CLR         D1
0000351E  2218                    3844              MOVE.L      (A0)+, D1
00003520  4240                    3845              CLR         D0
00003522  103C 0008               3846              MOVE.B      #8, D0
00003526                          3847              
00003526  4EB9 00003AB0           3848              JSR         outHex
0000352C                          3849              
0000352C  43F9 00003CF4           3850              LEA         clPer, A1           ; Display space
00003532  103C 000E               3851              MOVE.B      #14, D0             ; command for trap call to display message
00003536  4E4F                    3852              TRAP        #15                 ; trap call
00003538                          3853              
00003538  6000 004E               3854              BRA         endSub
0000353C                          3855  
0000353C                          3856  DispImm     
0000353C  43F9 00003CEC           3857              LEA         hashTag, A1         ; Display space
00003542  103C 000E               3858              MOVE.B      #14, D0             ; command for trap call to display message
00003546  4E4F                    3859              TRAP        #15                 ; trap call
00003548                          3860  
00003548  43F9 00003CEE           3861              LEA         dispHex, A1         ; Display space
0000354E  103C 000E               3862              MOVE.B      #14, D0             ; command for trap call to display message
00003552  4E4F                    3863              TRAP        #15                 ; trap call
00003554                          3864              
00003554  BC3C 0001               3865              CMP.B       #1,D6
00003558  6700 0016               3866              BEQ         ImmLong
0000355C                          3867              
0000355C  4241                    3868              CLR         D1
0000355E  3218                    3869              MOVE.W      (A0)+, D1
00003560  4240                    3870              CLR         D0
00003562  103C 0004               3871              MOVE.B      #4, D0
00003566  4EB9 00003AB0           3872              JSR         outHex
0000356C  6000 0012               3873              BRA         LongSkip
00003570                          3874              
00003570                          3875  ImmLong     
00003570  4241                    3876              CLR         D1
00003572  2218                    3877              MOVE.L      (A0)+, D1
00003574  4240                    3878              CLR         D0
00003576  103C 0008               3879              MOVE.B      #8, D0
0000357A  4EB9 00003AB0           3880              JSR         outHex             
00003580                          3881  
00003580                          3882  LongSkip
00003580  6000 0006               3883              BRA         endSub
00003584                          3884  
00003584                          3885  invalid
00003584  6000 06F4               3886              BRA         printInvalid
00003588                          3887  
00003588                          3888  endSUB        
00003588  4CDF 7EFF               3889              MOVEM.L     (SP)+, D0-D7/A1-A6
0000358C  4E75                    3890              RTS
0000358E                          3891  
0000358E                          3892  ***********************************************************************************************************
0000358E                          3893  *
0000358E                          3894  *                       MOVEM Helper Function
0000358E                          3895  *
0000358E                          3896  ***********************************************************************************************************
0000358E                          3897  
0000358E                          3898  MOVEMBRA    
0000358E  48E7 FF7E               3899              MOVEM.L     D0-D7/A1-A6, -(SP)     ; Branches off depending on size bit
00003592  BA7C 0000               3900              CMP         #zero,D5
00003596  6700 000A               3901              BEQ         MOVEMW
0000359A  BA7C 0001               3902              CMP         #one, D5
0000359E  6700 001E               3903              BEQ         MOVEML
000035A2                          3904              
000035A2                          3905  MOVEMW     
000035A2  43F9 00003D86           3906              LEA         dispWord, A1        ; we know that the opcode will be ROR, so load A1 to print message
000035A8  103C 000E               3907              MOVE.B      #14, D0             ; command for trap call to display message
000035AC  4E4F                    3908              TRAP        #15                 ; trap call
000035AE                          3909  
000035AE  43F9 00003CE9           3910              LEA         space, A1           ; we know that the opcode will be ROR, so load A1 to print message
000035B4  103C 000E               3911              MOVE.B      #14, D0             ; command for trap call to display message
000035B8  4E4F                    3912              TRAP        #15                 ; trap call
000035BA                          3913              
000035BA  6000 001E               3914              BRA         CheckDR
000035BE                          3915  
000035BE                          3916  MOVEML   
000035BE  43F9 00003D89           3917              LEA         dispLong, A1        ; we know that the opcode will be ROR, so load A1 to print message
000035C4  103C 000E               3918              MOVE.B      #14, D0             ; command for trap call to display message
000035C8  4E4F                    3919              TRAP        #15                 ; trap call
000035CA                          3920  
000035CA  43F9 00003CE9           3921              LEA         space, A1        ; we know that the opcode will be ROR, so load A1 to print message
000035D0  103C 000E               3922              MOVE.B      #14, D0             ; command for trap call to display message
000035D4  4E4F                    3923              TRAP        #15                 ; trap call
000035D6                          3924           
000035D6                          3925  
000035D6  6000 0002               3926              BRA         CheckDR
000035DA                          3927  
000035DA                          3928  CheckDR     
000035DA  3218                    3929              MOVE.W      (A0)+, D1           ; Taking in next word
000035DC  BC7C 0000               3930              CMP         #zero,D6
000035E0  6700 0020               3931              BEQ         printRegMem
000035E4  BC7C 0001               3932              CMP         #one,D6
000035E8  6700 0004               3933              BEQ         printStack
000035EC  6096                    3934              BRA         invalid
000035EE                          3935              
000035EE                          3936  printStack 
000035EE  4EB8 2F0C               3937              JSR         printEA
000035F2                          3938              
000035F2  43F9 00003CF0           3939              LEA         comma,A1
000035F8  103C 000E               3940              MOVE.B      #14, D0             ; command for trap call to display message
000035FC  4E4F                    3941              TRAP        #15                 ; trap call
000035FE                          3942              
000035FE                          3943              
000035FE  6000 0002               3944              BRA         printRegMem
00003602                          3945             
00003602                          3946  printRegMem 
00003602  4244                    3947              CLR         D4                  ; Using D4 to store predecrement mode addresses
00003604  1801                    3948              MOVE.B      D1,D4               ; Stores bits for D0-D7
00003606                          3949              
00003606  4245                    3950              CLR         D5
00003608  1A01                    3951              MOVE.B      D1,D5
0000360A  CA7C 0001               3952              AND         #mask1,D5
0000360E  BA7C 0001               3953              CMP         #mask1,D5
00003612  6700 007A               3954              BEQ         DataReg0
00003616                          3955              
00003616  4245                    3956              CLR         D5
00003618  1A01                    3957              MOVE.B      D1,D5
0000361A  CA7C 0002               3958              AND         #mask2,D5
0000361E  BA7C 0002               3959              CMP         #mask2,D5
00003622  6700 009A               3960              BEQ         DataReg1
00003626                          3961  
00003626  4245                    3962              CLR         D5
00003628  1A01                    3963              MOVE.B      D1,D5
0000362A  CA7C 0004               3964              AND         #mask3,D5
0000362E  BA7C 0004               3965              CMP         #mask3,D5
00003632  6700 00CA               3966              BEQ         DataReg2            
00003636                          3967              
00003636  4245                    3968              CLR         D5
00003638  1A01                    3969              MOVE.B      D1,D5
0000363A  CA7C 0008               3970              AND         #mask4,D5
0000363E  BA7C 0008               3971              CMP         #mask4,D5
00003642  6700 00FA               3972              BEQ         DataReg3            
00003646                          3973              
00003646  4245                    3974              CLR         D5
00003648  1A01                    3975              MOVE.B      D1,D5
0000364A  CA7C 0010               3976              AND         #mask5,D5
0000364E  BA7C 0010               3977              CMP         #mask5,D5
00003652  6700 012A               3978              BEQ         DataReg4
00003656                          3979  
00003656  4245                    3980              CLR         D5
00003658  1A01                    3981              MOVE.B      D1,D5
0000365A  CA7C 0020               3982              AND         #mask6,D5
0000365E  BA7C 0020               3983              CMP         #mask6,D5
00003662  6700 015A               3984              BEQ         DataReg5
00003666                          3985  
00003666  4245                    3986              CLR         D5
00003668  1A01                    3987              MOVE.B      D1,D5
0000366A  CA7C 0040               3988              AND         #mask7,D5
0000366E  BA7C 0040               3989              CMP         #mask7,D5
00003672  6700 018A               3990              BEQ         DataReg6
00003676                          3991  
00003676  4245                    3992              CLR         D5
00003678  1A01                    3993              MOVE.B      D1,D5
0000367A  CA7C 0080               3994              AND         #mask8,D5
0000367E  BA7C 0080               3995              CMP         #mask8,D5
00003682  6700 01BA               3996              BEQ         DataReg7
00003686                          3997              
00003686  6000 FEFC               3998              BRA         invalid
0000368A  6000 FEF8               3999              BRA         invalid        
0000368E                          4000              
0000368E                          4001  DataReg0
0000368E  43F9 00003DA6           4002              LEA         dispD0, A1          ; Output string D0
00003694  103C 000E               4003              MOVE.B      #14, D0             ; command for trap call to display message
00003698  4E4F                    4004              TRAP        #15                 ; trap call
0000369A                          4005              
0000369A  4245                    4006              CLR         D5
0000369C  1A01                    4007              MOVE.B      D1,D5
0000369E  CA7C 0002               4008              AND         #mask2,D5
000036A2  BA7C 0002               4009              CMP         #mask2,D5
000036A6  6700 0006               4010              BEQ         Reg0Cont
000036AA  6000 01A2               4011              BRA         printMem
000036AE                          4012              
000036AE                          4013  Reg0Cont        
000036AE  43F9 00003CF6           4014              LEA         dec, A1             ; Output -
000036B4  103C 000E               4015              MOVE.B      #14, D0             ; command for trap call to display message
000036B8  4E4F                    4016              TRAP        #15                 ; trap call        
000036BA  6000 0002               4017              BRA         DataReg1
000036BE                          4018  
000036BE                          4019  DataReg1
000036BE  4245                    4020              CLR         D5
000036C0  1A01                    4021              MOVE.B      D1,D5
000036C2  CA7C 0005               4022              AND         #maskA,D5
000036C6  BA7C 0005               4023              CMP         #maskA,D5
000036CA  6700 0032               4024              BEQ         DataReg2
000036CE                          4025              
000036CE  43F9 00003DA9           4026              LEA         dispD1, A1          ; Output string D0
000036D4  103C 000E               4027              MOVE.B      #14, D0             ; command for trap call to display message
000036D8  4E4F                    4028              TRAP        #15                 ; trap call
000036DA                          4029              
000036DA  4245                    4030              CLR         D5
000036DC  1A01                    4031              MOVE.B      D1,D5
000036DE  CA7C 0004               4032              AND         #mask3,D5
000036E2  BA7C 0004               4033              CMP         #mask3,D5
000036E6  6700 0006               4034              BEQ         Reg1Cont
000036EA  6000 0162               4035              BRA         printMem
000036EE                          4036              
000036EE                          4037  Reg1Cont        
000036EE  43F9 00003CF6           4038              LEA         dec, A1             ; Output -
000036F4  103C 000E               4039              MOVE.B      #14, D0             ; command for trap call to display message
000036F8  4E4F                    4040              TRAP        #15                 ; trap call        
000036FA  6000 0002               4041              BRA         DataReg2
000036FE                          4042  
000036FE                          4043  DataReg2
000036FE  4245                    4044              CLR         D5
00003700  1A01                    4045              MOVE.B      D1,D5
00003702  CA7C 000A               4046              AND         #maskB,D5
00003706  BA7C 000A               4047              CMP         #maskB,D5
0000370A  6700 0032               4048              BEQ         DataReg3
0000370E                          4049              
0000370E                          4050              
0000370E  43F9 00003DAC           4051              LEA         dispD2, A1          ; Output string D0
00003714  103C 000E               4052              MOVE.B      #14, D0             ; command for trap call to display message
00003718  4E4F                    4053              TRAP        #15                 ; trap call
0000371A                          4054              
0000371A  4245                    4055              CLR         D5
0000371C  1A01                    4056              MOVE.B      D1,D5
0000371E  CA7C 0008               4057              AND         #mask4,D5
00003722  BA7C 0008               4058              CMP         #mask4,D5
00003726  6700 0006               4059              BEQ         Reg2Cont
0000372A  6000 0122               4060              BRA         printMem
0000372E                          4061              
0000372E                          4062  Reg2Cont        
0000372E  43F9 00003CF6           4063              LEA         dec, A1             ; Output -
00003734  103C 000E               4064              MOVE.B      #14, D0             ; command for trap call to display message
00003738  4E4F                    4065              TRAP        #15                 ; trap call        
0000373A  6000 0002               4066              BRA         DataReg3
0000373E                          4067  
0000373E                          4068  DataReg3
0000373E  4245                    4069              CLR         D5
00003740  1A01                    4070              MOVE.B      D1,D5
00003742  CA7C 0014               4071              AND         #maskC,D5
00003746  BA7C 0014               4072              CMP         #maskC,D5
0000374A  6700 0032               4073              BEQ         DataReg4
0000374E                          4074              
0000374E  43F9 00003DAF           4075              LEA         dispD3, A1          ; Output string D0
00003754  103C 000E               4076              MOVE.B      #14, D0             ; command for trap call to display message
00003758  4E4F                    4077              TRAP        #15                 ; trap call
0000375A                          4078              
0000375A  4245                    4079              CLR         D5
0000375C  1A01                    4080              MOVE.B      D1,D5
0000375E  CA7C 0010               4081              AND         #mask5,D5
00003762  BA7C 0010               4082              CMP         #mask5,D5
00003766  6700 0006               4083              BEQ         Reg3Cont
0000376A  6000 00E2               4084              BRA         printMem
0000376E                          4085              
0000376E                          4086  Reg3Cont        
0000376E  43F9 00003CF6           4087              LEA         dec, A1             ; Output -
00003774  103C 000E               4088              MOVE.B      #14, D0             ; command for trap call to display message
00003778  4E4F                    4089              TRAP        #15                 ; trap call        
0000377A  6000 0002               4090              BRA         DataReg4
0000377E                          4091  
0000377E                          4092  DataReg4
0000377E  4245                    4093              CLR         D5
00003780  1A01                    4094              MOVE.B      D1,D5
00003782  CA7C 0028               4095              AND         #maskD,D5
00003786  BA7C 0028               4096              CMP         #maskD,D5
0000378A  6700 0032               4097              BEQ         DataReg5
0000378E                          4098              
0000378E  43F9 00003DB2           4099              LEA         dispD4, A1          ; Output string D0
00003794  103C 000E               4100              MOVE.B      #14, D0             ; command for trap call to display message
00003798  4E4F                    4101              TRAP        #15                 ; trap call
0000379A                          4102              
0000379A  4245                    4103              CLR         D5
0000379C  1A01                    4104              MOVE.B      D1,D5
0000379E  CA7C 0020               4105              AND         #mask6,D5
000037A2  BA7C 0020               4106              CMP         #mask6,D5
000037A6  6700 0006               4107              BEQ         Reg4Cont
000037AA  6000 00A2               4108              BRA         printMem
000037AE                          4109              
000037AE                          4110  Reg4Cont        
000037AE  43F9 00003CF6           4111              LEA         dec, A1             ; Output -
000037B4  103C 000E               4112              MOVE.B      #14, D0             ; command for trap call to display message
000037B8  4E4F                    4113              TRAP        #15                 ; trap call        
000037BA  6000 0002               4114              BRA         DataReg5
000037BE                          4115  
000037BE                          4116  DataReg5
000037BE  4245                    4117              CLR         D5
000037C0  1A01                    4118              MOVE.B      D1,D5
000037C2  CA7C 0050               4119              AND         #maskE,D5
000037C6  BA7C 0050               4120              CMP         #maskE,D5
000037CA  6700 0032               4121              BEQ         DataReg6
000037CE                          4122              
000037CE  43F9 00003DB5           4123              LEA         dispD5, A1          ; Output string D0
000037D4  103C 000E               4124              MOVE.B      #14, D0             ; command for trap call to display message
000037D8  4E4F                    4125              TRAP        #15                 ; trap call
000037DA                          4126              
000037DA  4245                    4127              CLR         D5
000037DC  1A01                    4128              MOVE.B      D1,D5
000037DE  CA7C 0040               4129              AND         #mask7,D5
000037E2  BA7C 0040               4130              CMP         #mask7,D5
000037E6  6700 0006               4131              BEQ         Reg5Cont
000037EA  6000 0062               4132              BRA         printMem
000037EE                          4133              
000037EE                          4134  Reg5Cont        
000037EE  43F9 00003CF6           4135              LEA         dec, A1             ; Output -
000037F4  103C 000E               4136              MOVE.B      #14, D0             ; command for trap call to display message
000037F8  4E4F                    4137              TRAP        #15                 ; trap call        
000037FA  6000 0042               4138              BRA         DataReg7
000037FE                          4139  
000037FE                          4140  DataReg6
000037FE  4245                    4141              CLR         D5
00003800  1A01                    4142              MOVE.B      D1,D5
00003802  CA7C 00A0               4143              AND         #maskF,D5
00003806  BA7C 00A0               4144              CMP         #maskF,D5
0000380A  6700 0032               4145              BEQ         DataReg7
0000380E                          4146  
0000380E  43F9 00003DB8           4147              LEA         dispD6, A1          ; Output string D0
00003814  103C 000E               4148              MOVE.B      #14, D0             ; command for trap call to display message
00003818  4E4F                    4149              TRAP        #15                 ; trap call
0000381A                          4150              
0000381A  4245                    4151              CLR         D5
0000381C  1A01                    4152              MOVE.B      D1,D5
0000381E  CA7C 0080               4153              AND         #mask8,D5
00003822  BA7C 0080               4154              CMP         #mask8,D5
00003826  6700 0006               4155              BEQ         Reg6Cont
0000382A  6000 0022               4156              BRA         printMem
0000382E                          4157              
0000382E                          4158  Reg6Cont        
0000382E  43F9 00003CF6           4159              LEA         dec, A1             ; Output -
00003834  103C 000E               4160              MOVE.B      #14, D0             ; command for trap call to display message
00003838  4E4F                    4161              TRAP        #15                 ; trap call        
0000383A  6000 0002               4162              BRA         DataReg7
0000383E                          4163  
0000383E                          4164  DataReg7    
0000383E  43F9 00003DBB           4165              LEA         dispD7, A1             ; Output -
00003844  103C 000E               4166              MOVE.B      #14, D0             ; command for trap call to display message
00003848  4E4F                    4167              TRAP        #15                 ; trap call        
0000384A  6000 0002               4168              BRA         printMem            
0000384E                          4169              
0000384E                          4170  printMem                                    ; Made this function in order to reuse if DR is 1
0000384E  6000 0002               4171              BRA         printMemNow
00003852                          4172              
00003852                          4173  printMemNow               
00003852  43F9 00003D7C           4174              LEA         slash, A1           ; Display slash
00003858  103C 000E               4175              MOVE.B      #14, D0             ; command for trap call to display message
0000385C  4E4F                    4176              TRAP        #15                 ; trap call
0000385E                          4177           
0000385E  4244                    4178              CLR         D4                  ; Using D4 to store predecrement mode addresses
00003860  3801                    4179              MOVE.W      D1,D4               ; Stores bits for D0-D7
00003862  E044                    4180              ASR         #eight,D4
00003864                          4181              
00003864  4245                    4182              CLR         D5
00003866  1A04                    4183              MOVE.B      D4,D5
00003868  CA7C 0001               4184              AND         #mask1,D5
0000386C  BA7C 0001               4185              CMP         #mask1,D5
00003870  6700 0072               4186              BEQ         AddrReg0
00003874                          4187              
00003874  4245                    4188              CLR         D5
00003876  1A04                    4189              MOVE.B      D4,D5
00003878  CA7C 0002               4190              AND         #mask2,D5
0000387C  BA7C 0002               4191              CMP         #mask2,D5
00003880  6700 0092               4192              BEQ         AddrReg1
00003884                          4193  
00003884  4245                    4194              CLR         D5
00003886  1A04                    4195              MOVE.B      D4,D5
00003888  CA7C 0004               4196              AND         #mask3,D5
0000388C  BA7C 0004               4197              CMP         #mask3,D5
00003890  6700 00C2               4198              BEQ         AddrReg2            
00003894                          4199              
00003894  4245                    4200              CLR         D5
00003896  1A04                    4201              MOVE.B      D4,D5
00003898  CA7C 0008               4202              AND         #mask4,D5
0000389C  BA7C 0008               4203              CMP         #mask4,D5
000038A0  6700 00F2               4204              BEQ         AddrReg3            
000038A4                          4205              
000038A4  4245                    4206              CLR         D5
000038A6  1A04                    4207              MOVE.B      D4,D5
000038A8  CA7C 0010               4208              AND         #mask5,D5
000038AC  BA7C 0010               4209              CMP         #mask5,D5
000038B0  6700 0122               4210              BEQ         AddrReg4
000038B4                          4211  
000038B4  4245                    4212              CLR         D5
000038B6  1A04                    4213              MOVE.B      D4,D5
000038B8  CA7C 0020               4214              AND         #mask6,D5
000038BC  BA7C 0020               4215              CMP         #mask6,D5
000038C0  6700 0152               4216              BEQ         AddrReg5
000038C4                          4217  
000038C4  4245                    4218              CLR         D5
000038C6  1A04                    4219              MOVE.B      D4,D5
000038C8  CA7C 0040               4220              AND         #mask7,D5
000038CC  BA7C 0040               4221              CMP         #mask7,D5
000038D0  6700 0182               4222              BEQ         AddrReg6
000038D4                          4223  
000038D4  4245                    4224              CLR         D5
000038D6  1A04                    4225              MOVE.B      D4,D5
000038D8  CA7C 0080               4226              AND         #mask8,D5
000038DC  BA7C 0080               4227              CMP         #mask8,D5
000038E0  6700 01B2               4228              BEQ         AddrReg7
000038E4                          4229              
000038E4                          4230  AddrReg0
000038E4  43F9 00003D8C           4231              LEA         dispA0, A1          ; Output string D0
000038EA  103C 000E               4232              MOVE.B      #14, D0             ; command for trap call to display message
000038EE  4E4F                    4233              TRAP        #15                 ; trap call
000038F0                          4234              
000038F0  4245                    4235              CLR         D5
000038F2  1A01                    4236              MOVE.B      D1,D5
000038F4  CA7C 0002               4237              AND         #mask2,D5
000038F8  BA7C 0002               4238              CMP         #mask2,D5
000038FC  6700 0006               4239              BEQ         Addr0Cont
00003900  6000 01A2               4240              BRA         endMOVE
00003904                          4241              
00003904                          4242  Addr0Cont        
00003904  43F9 00003CF6           4243              LEA         dec, A1             ; Output -
0000390A  103C 000E               4244              MOVE.B      #14, D0             ; command for trap call to display message
0000390E  4E4F                    4245              TRAP        #15                 ; trap call        
00003910  6000 0002               4246              BRA         AddrReg1
00003914                          4247  
00003914                          4248  AddrReg1
00003914  4245                    4249              CLR         D5
00003916  1A04                    4250              MOVE.B      D4,D5
00003918  CA7C 0005               4251              AND         #maskA,D5
0000391C  BA7C 0005               4252              CMP         #maskA,D5
00003920  6700 0032               4253              BEQ         AddrReg2
00003924                          4254              
00003924  43F9 00003D8F           4255              LEA         dispA1, A1          ; Output string D0
0000392A  103C 000E               4256              MOVE.B      #14, D0             ; command for trap call to display message
0000392E  4E4F                    4257              TRAP        #15                 ; trap call
00003930                          4258              
00003930  4245                    4259              CLR         D5
00003932  1A04                    4260              MOVE.B      D4,D5
00003934  CA7C 0004               4261              AND         #mask3,D5
00003938  BA7C 0004               4262              CMP         #mask3,D5
0000393C  6700 0006               4263              BEQ         Addr1Cont
00003940  6000 0162               4264              BRA         endMOVE
00003944                          4265              
00003944                          4266  Addr1Cont        
00003944  43F9 00003CF6           4267              LEA         dec, A1             ; Output -
0000394A  103C 000E               4268              MOVE.B      #14, D0             ; command for trap call to display message
0000394E  4E4F                    4269              TRAP        #15                 ; trap call        
00003950  6000 0002               4270              BRA         AddrReg2
00003954                          4271  
00003954                          4272  AddrReg2
00003954  4245                    4273              CLR         D5
00003956  1A04                    4274              MOVE.B      D4,D5
00003958  CA7C 000A               4275              AND         #maskB,D5
0000395C  BA7C 000A               4276              CMP         #maskB,D5
00003960  6700 0032               4277              BEQ         AddrReg3
00003964                          4278              
00003964  43F9 00003D92           4279              LEA         dispA2, A1          ; Output string D0
0000396A  103C 000E               4280              MOVE.B      #14, D0             ; command for trap call to display message
0000396E  4E4F                    4281              TRAP        #15                 ; trap call
00003970                          4282              
00003970  4245                    4283              CLR         D5
00003972  1A04                    4284              MOVE.B      D4,D5
00003974  CA7C 0008               4285              AND         #mask4,D5
00003978  BA7C 0008               4286              CMP         #mask4,D5
0000397C  6700 0006               4287              BEQ         Addr2Cont
00003980  6000 0122               4288              BRA         endMOVE
00003984                          4289              
00003984                          4290  Addr2Cont        
00003984  43F9 00003CF6           4291              LEA         dec, A1             ; Output -
0000398A  103C 000E               4292              MOVE.B      #14, D0             ; command for trap call to display message
0000398E  4E4F                    4293              TRAP        #15                 ; trap call        
00003990  6000 0002               4294              BRA         AddrReg3
00003994                          4295  
00003994                          4296  AddrReg3
00003994  4245                    4297              CLR         D5
00003996  1A04                    4298              MOVE.B      D4,D5
00003998  CA7C 0014               4299              AND         #maskC,D5
0000399C  BA7C 0014               4300              CMP         #maskC,D5
000039A0  6700 0032               4301              BEQ         AddrReg4
000039A4                          4302              
000039A4  43F9 00003D95           4303              LEA         dispA3, A1          ; Output string D0
000039AA  103C 000E               4304              MOVE.B      #14, D0             ; command for trap call to display message
000039AE  4E4F                    4305              TRAP        #15                 ; trap call
000039B0                          4306              
000039B0  4245                    4307              CLR         D5
000039B2  1A04                    4308              MOVE.B      D4,D5
000039B4  CA7C 0010               4309              AND         #mask5,D5
000039B8  BA7C 0010               4310              CMP         #mask5,D5
000039BC  6700 0006               4311              BEQ         Addr3Cont
000039C0  6000 00E2               4312              BRA         endMOVE
000039C4                          4313              
000039C4                          4314  Addr3Cont        
000039C4  43F9 00003CF6           4315              LEA         dec, A1             ; Output -
000039CA  103C 000E               4316              MOVE.B      #14, D0             ; command for trap call to display message
000039CE  4E4F                    4317              TRAP        #15                 ; trap call        
000039D0  6000 0002               4318              BRA         AddrReg4
000039D4                          4319  
000039D4                          4320  AddrReg4
000039D4  4245                    4321              CLR         D5
000039D6  1A04                    4322              MOVE.B      D4,D5
000039D8  CA7C 0028               4323              AND         #maskD,D5
000039DC  BA7C 0028               4324              CMP         #maskD,D5
000039E0  6700 0032               4325              BEQ         AddrReg5
000039E4                          4326              
000039E4  43F9 00003D98           4327              LEA         dispA4, A1          ; Output string D0
000039EA  103C 000E               4328              MOVE.B      #14, D0             ; command for trap call to display message
000039EE  4E4F                    4329              TRAP        #15                 ; trap call
000039F0                          4330              
000039F0  4245                    4331              CLR         D5
000039F2  1A04                    4332              MOVE.B      D4,D5
000039F4  CA7C 0020               4333              AND         #mask6,D5
000039F8  BA7C 0020               4334              CMP         #mask6,D5
000039FC  6700 0006               4335              BEQ         Addr4Cont
00003A00  6000 00A2               4336              BRA         endMOVE
00003A04                          4337              
00003A04                          4338  Addr4Cont        
00003A04  43F9 00003CF6           4339              LEA         dec, A1             ; Output -
00003A0A  103C 000E               4340              MOVE.B      #14, D0             ; command for trap call to display message
00003A0E  4E4F                    4341              TRAP        #15                 ; trap call        
00003A10  6000 0002               4342              BRA         AddrReg5
00003A14                          4343  AddrReg5
00003A14  4245                    4344              CLR         D5
00003A16  1A04                    4345              MOVE.B      D4,D5
00003A18  CA7C 0050               4346              AND         #maskE,D5
00003A1C  BA7C 0050               4347              CMP         #maskE,D5
00003A20  6700 0032               4348              BEQ         AddrReg6
00003A24                          4349              
00003A24  43F9 00003D9B           4350              LEA         dispA5, A1          ; Output string D0
00003A2A  103C 000E               4351              MOVE.B      #14, D0             ; command for trap call to display message
00003A2E  4E4F                    4352              TRAP        #15                 ; trap call
00003A30                          4353              
00003A30  4245                    4354              CLR         D5
00003A32  1A04                    4355              MOVE.B      D4,D5
00003A34  CA7C 0040               4356              AND         #mask7,D5
00003A38  BA7C 0040               4357              CMP         #mask7,D5
00003A3C  6700 0006               4358              BEQ         Addr5Cont
00003A40  6000 0062               4359              BRA         endMOVE
00003A44                          4360              
00003A44                          4361  Addr5Cont        
00003A44  43F9 00003CF6           4362              LEA         dec, A1             ; Output -
00003A4A  103C 000E               4363              MOVE.B      #14, D0             ; command for trap call to display message
00003A4E  4E4F                    4364              TRAP        #15                 ; trap call        
00003A50  6000 0042               4365              BRA         AddrReg7
00003A54                          4366  
00003A54                          4367  AddrReg6
00003A54  4245                    4368              CLR         D5
00003A56  1A04                    4369              MOVE.B      D4,D5
00003A58  CA7C 00A0               4370              AND         #maskF,D5
00003A5C  BA7C 00A0               4371              CMP         #maskF,D5
00003A60  6700 0032               4372              BEQ         AddrReg7
00003A64                          4373  
00003A64  43F9 00003D9E           4374              LEA         dispA6, A1          ; Output string D0
00003A6A  103C 000E               4375              MOVE.B      #14, D0             ; command for trap call to display message
00003A6E  4E4F                    4376              TRAP        #15                 ; trap call
00003A70                          4377              
00003A70  4245                    4378              CLR         D5
00003A72  1A04                    4379              MOVE.B      D4,D5
00003A74  CA7C 0080               4380              AND         #mask8,D5
00003A78  BA7C 0080               4381              CMP         #mask8,D5
00003A7C  6700 0006               4382              BEQ         Addr6Cont
00003A80  6000 0022               4383              BRA         endMOVE
00003A84                          4384              
00003A84                          4385  Addr6Cont        
00003A84  43F9 00003CF6           4386              LEA         dec, A1             ; Output -
00003A8A  103C 000E               4387              MOVE.B      #14, D0             ; command for trap call to display message
00003A8E  4E4F                    4388              TRAP        #15                 ; trap call        
00003A90  6000 0002               4389              BRA         AddrReg7
00003A94                          4390  
00003A94                          4391  AddrReg7    
00003A94  43F9 00003DA1           4392              LEA         dispA7, A1          ; Output -
00003A9A  103C 000E               4393              MOVE.B      #14, D0             ; command for trap call to display message
00003A9E  4E4F                    4394              TRAP        #15                 ; trap call        
00003AA0  6000 0002               4395              BRA         endMOVE
00003AA4                          4396  
00003AA4                          4397  endMOVE
00003AA4  4CDF 7EFF               4398              MOVEM.L  (SP)+, D0-D7/A1-A6
00003AA8  4E75                    4399              RTS
00003AAA                          4400  endMove1                                    ; Used if MOVEM has DR is 1
00003AAA  4CDF 7EFF               4401              MOVEM.L  (SP)+, D0-D7/A1-A6
00003AAE  4E75                    4402              RTS
00003AB0                          4403  ***********************************************************************************************************
00003AB0                          4404  *
00003AB0                          4405  *                       Hex Decode
00003AB0                          4406  *
00003AB0                          4407  *this subroutine displays hex code stored in D1. It displays based on the number of 
00003AB0                          4408  *It displays based on the number of hex to display which is stored in D0. If it is a
00003AB0                          4409  *long or word to display, it will figure out the ascii character and add $37 if it
00003AB0                          4410  *is a letter, and $30 if its a number. It will then load the character into D1 and 
00003AB0                          4411  *display it via trap task 6 and loop however many times is needed, 4 or 8. If a word
00003AB0                          4412  *needs to be displayed, it will roll the bits over so that, the hex are shifted by a word.
00003AB0                          4413  *
00003AB0                          4414  ***********************************************************************************************************
00003AB0                          4415  
00003AB0                          4416  outHex      
00003AB0  48E7 FF7E               4417              MOVEM.L     D0-D7/A1-A6, -(SP)
00003AB4  4243                    4418              CLR         D3
00003AB6  4244                    4419              CLR         D4
00003AB8  1800                    4420              MOVE.B      D0, D4
00003ABA  2601                    4421              MOVE.L      D1, D3
00003ABC  B03C 0004               4422              CMP.B       #4, D0
00003AC0  6700 0006               4423              BEQ         moveOver
00003AC4  6000 0006               4424              BRA         dispLOOP
00003AC8                          4425              
00003AC8                          4426  moveOver    
00003AC8  E19B                    4427              ROL.L       #8,D3
00003ACA  E19B                    4428              ROL.L       #8,D3
00003ACC                          4429              
00003ACC                          4430  dispLOOP    
00003ACC  B83C 0000               4431              CMP.B       #0, D4
00003AD0  6700 0042               4432              BEQ         endDispSub
00003AD4  E99B                    4433              ROL.L       #4, D3
00003AD6  4245                    4434              CLR         D5
00003AD8  1A03                    4435              MOVE.B      D3, D5 
00003ADA  CABC 0000000F           4436              AND.L       #$0F, D5
00003AE0  BA3C 000A               4437              CMP.B       #10, D5
00003AE4  6D00 0006               4438              BLT         DLnine
00003AE8  6000 0016               4439              BRA         DLetters
00003AEC                          4440              
00003AEC                          4441  DLnine      
00003AEC  0645 0030               4442              ADD         #$30, D5
00003AF0  4241                    4443              CLR         D1
00003AF2  1205                    4444              MOVE.B      D5, D1
00003AF4  4240                    4445              CLR         D0
00003AF6  103C 0006               4446              MOVE.B      #6, D0
00003AFA  4E4F                    4447              TRAP        #15
00003AFC  5344                    4448              SUB         #1, D4
00003AFE  60CC                    4449              BRA         dispLOOP  
00003B00                          4450   
00003B00                          4451  DLetters    
00003B00  0645 0037               4452              ADD         #$37, D5
00003B04  4241                    4453              CLR         D1
00003B06  1205                    4454              MOVE.B      D5, D1
00003B08  4240                    4455              CLR         D0
00003B0A  103C 0006               4456              MOVE.B      #6, D0
00003B0E  4E4F                    4457              TRAP        #15
00003B10  5344                    4458              SUB         #1, D4
00003B12  60B8                    4459              BRA         dispLOOP        
00003B14                          4460  
00003B14                          4461  endDispSub  
00003B14  4CDF 7EFF               4462              MOVEM.L     (SP)+, D0-D7/A1-A6
00003B18  4E75                    4463              RTS
00003B1A                          4464  
00003B1A                          4465              
00003B1A                          4466  ***********************************************************************************************************
00003B1A                          4467  *
00003B1A                          4468  *                       IO Subroutine
00003B1A                          4469  *
00003B1A                          4470  *
00003B1A                          4471  *   the following subroutine gets the string address from the user
00003B1A                          4472  *   and converts it to Hex for a starting/ending address. it is done 
00003B1A                          4473  *   by checking each byte at address A1, and converting it from ascii to 
00003B1A                          4474  *   hex number. If the user enters an invalid character string, the
00003B1A                          4475  *   program will have a simhalt.
00003B1A                          4476  *
00003B1A                          4477  ***********************************************************************************************************
00003B1A                          4478  
00003B1A                          4479  Address     
00003B1A  48E7 1F3E               4480              MOVEM.L     D3-D7/A2-A6, -(SP)
00003B1E                          4481  
00003B1E                          4482  Retry       
00003B1E  4242                    4483              CLR         D2
00003B20  4243                    4484              CLR         D3
00003B22  B23C 0004               4485              CMP.B       #4, D1
00003B26  6700 000E               4486              BEQ         subLOOP
00003B2A  B23C 0008               4487              CMP.B       #8, D1
00003B2E  6700 0006               4488              BEQ         subLOOP
00003B32  6000 012A               4489              BRA         ADDinvalid        
00003B36                          4490          
00003B36                          4491  subLOOP     
00003B36  E85C                    4492              ROR         #4, D4
00003B38  1404                    4493              MOVE.B      D4, D2
00003B3A  4244                    4494              CLR         D4
00003B3C  4245                    4495              CLR         D5
00003B3E  B601                    4496              CMP.B       D1, D3
00003B40  6700 0132               4497              BEQ         endLOOP
00003B44  5443                    4498              ADD.W       #2, D3
00003B46  E19A                    4499              ROL.L       #8, D2
00003B48                          4500          
00003B48                          4501  bytLOOP     
00003B48  E95C                    4502              ROL         #4, D4
00003B4A                          4503          
00003B4A  0C11 0030               4504              CMP.B       #$30, (A1)
00003B4E  6700 007E               4505              BEQ         hZero 
00003B52  0C11 0031               4506              CMP.B       #$31, (A1)
00003B56  6700 007E               4507              BEQ         hOne
00003B5A  0C11 0032               4508              CMP.B       #$32, (A1)
00003B5E  6700 007E               4509              BEQ         hTwo
00003B62  0C11 0033               4510              CMP.B       #$33, (A1)
00003B66  6700 007E               4511              BEQ         hThree
00003B6A  0C11 0034               4512              CMP.B       #$34, (A1)
00003B6E  6700 007E               4513              BEQ         hFour
00003B72  0C11 0035               4514              CMP.B       #$35, (A1)
00003B76  6700 007E               4515              BEQ         hFive
00003B7A  0C11 0036               4516              CMP.B       #$36, (A1)
00003B7E  6700 007E               4517              BEQ         hSix
00003B82  0C11 0037               4518              CMP.B       #$37, (A1)
00003B86  6700 007E               4519              BEQ         hSeven
00003B8A  0C11 0038               4520              CMP.B       #$38, (A1)
00003B8E  6700 007E               4521              BEQ         hEight
00003B92  0C11 0039               4522              CMP.B       #$39, (A1)
00003B96  6700 007E               4523              BEQ         hNine
00003B9A  0C11 0041               4524              CMP.B       #$41, (A1)
00003B9E  6700 007E               4525              BEQ         hA
00003BA2  0C11 0042               4526              CMP.B       #$42, (A1)
00003BA6  6700 007E               4527              BEQ         hB
00003BAA  0C11 0043               4528              CMP.B       #$43, (A1)
00003BAE  6700 007E               4529              BEQ         hC
00003BB2  0C11 0044               4530              CMP.B       #$44, (A1)
00003BB6  6700 007E               4531              BEQ         hD
00003BBA  0C11 0045               4532              CMP.B       #$45, (A1)
00003BBE  6700 007E               4533              BEQ         hE
00003BC2  0C11 0046               4534              CMP.B       #$46, (A1)
00003BC6  6700 007E               4535              BEQ         hF 
00003BCA                          4536              
00003BCA  6000 F9B8               4537              BRA         invalid 
00003BCE                          4538              
00003BCE                          4539  hZero       
00003BCE  183C 0000               4540              MOVE.B      #$00, D4
00003BD2  6000 007A               4541              BRA         nextH
00003BD6                          4542              
00003BD6                          4543  hOne        
00003BD6  183C 0010               4544              MOVE.B      #$10, D4
00003BDA  6000 0072               4545              BRA         nextH
00003BDE                          4546  hTwo        
00003BDE  183C 0020               4547              MOVE.B      #$20, D4
00003BE2  6000 006A               4548              BRA         nextH
00003BE6                          4549              
00003BE6                          4550  hThree      
00003BE6  183C 0030               4551              MOVE.B      #$30, D4
00003BEA  6000 0062               4552              BRA         nextH
00003BEE                          4553              
00003BEE  183C 0040               4554  hFour       MOVE.B      #$40, D4
00003BF2  6000 005A               4555              BRA         nextH
00003BF6                          4556              
00003BF6                          4557  hFive       
00003BF6  183C 0050               4558              MOVE.B      #$50, D4
00003BFA  6000 0052               4559              BRA         nextH
00003BFE                          4560              
00003BFE                          4561  hSix        
00003BFE  183C 0060               4562              MOVE.B      #$60, D4
00003C02  6000 004A               4563              BRA         nextH
00003C06                          4564              
00003C06                          4565  hSeven      
00003C06  183C 0070               4566              MOVE.B      #$70, D4
00003C0A  6000 0042               4567              BRA         nextH
00003C0E                          4568              
00003C0E                          4569  hEight      
00003C0E  183C 0080               4570              MOVE.B      #$80, D4
00003C12  6000 003A               4571              BRA         nextH
00003C16                          4572              
00003C16                          4573  hNine       
00003C16  183C 0090               4574              MOVE.B      #$90, D4
00003C1A  6000 0032               4575              BRA         nextH
00003C1E                          4576          
00003C1E                          4577  hA          
00003C1E  183C 00A0               4578              MOVE.B      #$A0, D4
00003C22  6000 002A               4579              BRA         nextH
00003C26                          4580              
00003C26                          4581  hB          
00003C26  183C 00B0               4582              MOVE.B      #$B0, D4
00003C2A  6000 0022               4583              BRA         nextH
00003C2E                          4584              
00003C2E                          4585  hC          
00003C2E  183C 00C0               4586              MOVE.B      #$C0, D4
00003C32  6000 001A               4587              BRA         nextH
00003C36                          4588              
00003C36                          4589  hD          
00003C36  183C 00D0               4590              MOVE.B      #$D0, D4
00003C3A  6000 0012               4591              BRA         nextH
00003C3E                          4592              
00003C3E                          4593  hE          
00003C3E  183C 00E0               4594              MOVE.B      #$E0, D4
00003C42  6000 000A               4595              BRA         nextH
00003C46                          4596              
00003C46                          4597  hF          
00003C46  183C 00F0               4598              MOVE.B      #$F0, D4
00003C4A  6000 0002               4599              BRA         nextH
00003C4E                          4600  
00003C4E                          4601  nextH       
00003C4E  1019                    4602              MOVE.B      (A1)+, D0
00003C50  5245                    4603              ADD         #1, D5
00003C52  BA3C 0002               4604              CMP.B       #2, D5
00003C56  6700 FEDE               4605              BEQ         subLOOP
00003C5A  6000 FEEC               4606              BRA         bytLOOP
00003C5E                          4607          
00003C5E                          4608  ADDinvalid  
00003C5E  43F9 00003CC6           4609              LEA         errorMessage, A1
00003C64  103C 000E               4610              MOVE.B      #14, D0
00003C68  4E4F                    4611              TRAP        #15    
00003C6A                          4612      
00003C6A  103C 0002               4613              MOVE.B      #2, D0
00003C6E  4E4F                    4614              TRAP        #15
00003C70                          4615  
00003C70  6000 FEAC               4616              BRA         Retry
00003C74                          4617     
00003C74                          4618  endLOOP     
00003C74  4CDF 7CF8               4619              MOVEM.L     (SP)+, D3-D7/A2-A6
00003C78  4E75                    4620              RTS
00003C7A                          4621  
00003C7A                          4622  printInvalid
00003C7A  1218                    4623              MOVE.B      (A0)+,D1
00003C7C  6000 D3C2               4624              BRA         LOOP
00003C80                          4625  
00003C80                          4626  endPROG    
00003C80                          4627  
00003C80  FFFF FFFF               4628      SIMHALT                             ; halt simulator
00003C84                          4629  
00003C84                          4630  ***********************************************************************************************************
00003C84                          4631  *
00003C84                          4632  *                       IO Strings
00003C84                          4633  *           
00003C84                          4634  *       This section holds all of the various strings to output to the console.
00003C84                          4635  *
00003C84                          4636  ***********************************************************************************************************
00003C84                          4637  
00003C84= 45 6E 74 65 72 20 ...   4638  startingMessage DC.B    'Enter Starting Address (in hex): ', 0
00003CA6= 45 6E 74 65 72 20 ...   4639  endingMessage   DC.B    'Enter Ending Address (in hex): ', 0
00003CC6= 49 6E 63 6F 72 72 ...   4640  errorMessage    DC.B    'Incorrect Address, try again: ', 0
00003CE5                          4641  
00003CE5= 20 0D 0A 00             4642  newLine         DC.B    ' ', CR, LF, 0
00003CE9= 20 20 00                4643  space           DC.B    '  ', 0
00003CEC                          4644  
00003CEC= 23 00                   4645  hashTag         DC.B    '#', 0
00003CEE= 24 00                   4646  dispHex         DC.B    '$', 0
00003CF0= 2C 00                   4647  comma           DC.B    ',', 0
00003CF2                          4648  
00003CF2= 28 00                   4649  opPer           DC.B    '(', 0
00003CF4= 29 00                   4650  clPer           DC.B    ')', 0
00003CF6= 2D 00                   4651  dec             DC.B    '-', 0
00003CF8= 2B 00                   4652  inc             DC.B    '+', 0
00003CFA                          4653  
00003CFA= 4F 52 49 00             4654  ORImatch        DC.B    'ORI', 0
00003CFE= 43 4D 50 49 00          4655  CMPImatch       DC.B    'CMPI', 0
00003D03= 42 43 4C 52 00          4656  BCLRmatch       DC.B    'BCLR', 0
00003D08= 4D 4F 56 45 00          4657  MOVEmatch       DC.B    'MOVE', 0
00003D0D= 4D 4F 56 45 41 00       4658  MOVEAmatch      DC.B    'MOVEA', 0
00003D13= 4E 45 47 00             4659  NEGmatch        DC.B    'NEG', 0
00003D17= 52 54 53 00             4660  RTSmatch        DC.B    'RTS', 0
00003D1B= 4A 53 52 00             4661  JSRmatch        DC.B    'JSR', 0
00003D1F= 4D 4F 56 45 4D 00       4662  MOVEMmatch      DC.B    'MOVEM', 0
00003D25= 4C 45 41 00             4663  LEAmatch        DC.B    'LEA', 0
00003D29= 53 55 42 51 00          4664  SUBQmatch       DC.B    'SUBQ', 0
00003D2E= 42 52 41 00             4665  BRAmatch        DC.B    'BRA', 0
00003D32= 42 43 53 00             4666  BCSmatch        DC.B    'BCS', 0
00003D36= 42 56 43 00             4667  BVCmatch        DC.B    'BVC', 0
00003D3A= 42 47 45 00             4668  BGEmatch        DC.B    'BGE', 0
00003D3E= 42 4C 54 00             4669  BLTmatch        DC.B    'BLT', 0
00003D42= 44 49 56 53 00          4670  DIVSmatch       DC.B    'DIVS', 0
00003D47= 4F 52 00                4671  ORmatch         DC.B    'OR', 0
00003D4A= 53 55 42 00             4672  SUBmatch        DC.B    'SUB', 0
00003D4E= 45 4F 52 00             4673  EORmatch        DC.B    'EOR', 0
00003D52= 43 4D 50 00             4674  CMPmatch        DC.B    'CMP', 0
00003D56= 4D 55 4C 53 00          4675  MULSmatch       DC.B    'MULS', 0
00003D5B= 41 44 44 00             4676  ADDmatch        DC.B    'ADD', 0
00003D5F= 41 44 44 41 00          4677  ADDAmatch       DC.B    'ADDA', 0
00003D64= 4C 53 52 00             4678  LSRmatch        DC.B    'LSR', 0
00003D68= 4C 53 4C 00             4679  LSLmatch        DC.B    'LSL', 0
00003D6C= 41 53 52 00             4680  ASRmatch        DC.B    'ASR', 0
00003D70= 41 53 4C 00             4681  ASLmatch        DC.B    'ASL', 0
00003D74= 52 4F 52 00             4682  RORmatch        DC.B    'ROR', 0
00003D78= 52 4F 4C 00             4683  ROLmatch        DC.B    'ROL', 0
00003D7C                          4684  
00003D7C= 2F 00                   4685  slash           DC.B    '/', 0
00003D7E= 28 53 50 29 00          4686  stack           DC.B    '(SP)', 0
00003D83                          4687   
00003D83= 2E 42 00                4688  dispByte        DC.B    '.B', 0
00003D86= 2E 57 00                4689  dispWord        DC.B    '.W', 0
00003D89= 2E 4C 00                4690  dispLong        DC.B    '.L', 0
00003D8C                          4691  
00003D8C= 41 30 00                4692  dispA0          DC.B    'A0', 0
00003D8F= 41 31 00                4693  dispA1          DC.B    'A1', 0
00003D92= 41 32 00                4694  dispA2          DC.B    'A2', 0
00003D95= 41 33 00                4695  dispA3          DC.B    'A3', 0
00003D98= 41 34 00                4696  dispA4          DC.B    'A4', 0
00003D9B= 41 35 00                4697  dispA5          DC.B    'A5', 0
00003D9E= 41 36 00                4698  dispA6          DC.B    'A6', 0
00003DA1= 41 37 00                4699  dispA7          DC.B    'A7', 0
00003DA4                          4700  
00003DA4= 44 00                   4701  dispD           DC.B    'D',0
00003DA6= 44 30 00                4702  dispD0          DC.B    'D0', 0
00003DA9= 44 31 00                4703  dispD1          DC.B    'D1', 0
00003DAC= 44 32 00                4704  dispD2          DC.B    'D2', 0
00003DAF= 44 33 00                4705  dispD3          DC.B    'D3', 0
00003DB2= 44 34 00                4706  dispD4          DC.B    'D4', 0
00003DB5= 44 35 00                4707  dispD5          DC.B    'D5', 0
00003DB8= 44 36 00                4708  dispD6          DC.B    'D6', 0
00003DBB= 44 37 00                4709  dispD7          DC.B    'D7', 0 
00003DBE                          4710   
00003DBE                          4711             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             3504
ABSSHORT            34CC
ADDAMATCH           3D5F
ADDINVALID          3C5E
ADDMATCH            3D5B
ADDR0CONT           3904
ADDR1CONT           3944
ADDR2CONT           3984
ADDR3CONT           39C4
ADDR4CONT           3A04
ADDR5CONT           3A44
ADDR6CONT           3A84
ADDRESS             3B1A
ADDRREG0            38E4
ADDRREG1            3914
ADDRREG2            3954
ADDRREG3            3994
ADDRREG4            39D4
ADDRREG5            3A14
ADDRREG6            3A54
ADDRREG7            3A94
ASLMATCH            3D70
ASRMATCH            3D6C
BCLRMATCH           3D03
BCSMATCH            3D32
BGEMATCH            3D3A
BLTMATCH            3D3E
BRAEIGHT            114A
BRAELEVEN           1168
BRAFIVE             1112
BRAFOUR             10F6
BRAFOURTEEN         11D8
BRAMATCH            3D2E
BRANINE             1164
BRAONE              10EA
BRASIX              1116
BRATHIRTEEN         1186
BRATHREE            10F2
BRATWELVE           1182
BRATWO              10EE
BRAZERO             10BA
BVCMATCH            3D36
BYTLOOP             3B48
CHECKDR             35DA
CLPER               3CF4
CMPIMATCH           3CFE
CMPMATCH            3D52
COMMA               3CF0
CR                  D
DATAREG0            368E
DATAREG1            36BE
DATAREG2            36FE
DATAREG3            373E
DATAREG4            377E
DATAREG5            37BE
DATAREG6            37FE
DATAREG7            383E
DEC                 3CF6
DISPA0              3D8C
DISPA1              3D8F
DISPA2              3D92
DISPA3              3D95
DISPA4              3D98
DISPA5              3D9B
DISPA6              3D9E
DISPA7              3DA1
DISPBYTE            3D83
DISPD               3DA4
DISPD0              3DA6
DISPD1              3DA9
DISPD2              3DAC
DISPD3              3DAF
DISPD4              3DB2
DISPD5              3DB5
DISPD6              3DB8
DISPD7              3DBB
DISPHEX             3CEE
DISPIMM             353C
DISPLAYA0           3044
DISPLAYA0A          3110
DISPLAYA0D          33D4
DISPLAYA0P          323C
DISPLAYA1           3054
DISPLAYA1A          312C
DISPLAYA1D          33F0
DISPLAYA1P          3264
DISPLAYA2           3064
DISPLAYA2A          3148
DISPLAYA2D          340C
DISPLAYA2P          328C
DISPLAYA3           3074
DISPLAYA3A          3164
DISPLAYA3D          3428
DISPLAYA3P          32B4
DISPLAYA4           3084
DISPLAYA4A          3180
DISPLAYA4D          3444
DISPLAYA4P          32DC
DISPLAYA5           3094
DISPLAYA5A          319C
DISPLAYA5D          3460
DISPLAYA5P          3304
DISPLAYA6           30A4
DISPLAYA6A          31B8
DISPLAYA6D          347C
DISPLAYA6P          332C
DISPLAYA7           30B4
DISPLAYA7A          31D4
DISPLAYA7D          3498
DISPLAYA7P          3354
DISPLAYD0           2F84
DISPLAYD1           2F94
DISPLAYD2           2FA4
DISPLAYD3           2FB4
DISPLAYD4           2FC4
DISPLAYD5           2FD4
DISPLAYD6           2FE4
DISPLAYD7           2FF4
DISPLAYEIGHT        2EFC
DISPLONG            3D89
DISPLOOP            3ACC
DISPWORD            3D86
DIVSMATCH           3D42
DLETTERS            3B00
DLNINE              3AEC
EIGHT               8
ELEVEN              B
ENDDISPSUB          3B14
ENDINGMESSAGE       3CA6
ENDLOOP             3C74
ENDMOVE             3AA4
ENDMOVE1            3AAA
ENDPROG             3C80
ENDSUB              3588
ENDSUBROUTINE       2F06
EORMATCH            3D4E
ERRORMESSAGE        3CC6
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HA                  3C1E
HASHTAG             3CEC
HB                  3C26
HC                  3C2E
HD                  3C36
HE                  3C3E
HEIGHT              3C0E
HF                  3C46
HFIVE               3BF6
HFOUR               3BEE
HNINE               3C16
HONE                3BD6
HSEVEN              3C06
HSIX                3BFE
HTHREE              3BE6
HTWO                3BDE
HZERO               3BCE
IMMLONG             3570
INC                 3CF8
INVALID             3584
JSRMATCH            3D1B
LEAMATCH            3D25
LF                  A
LONGSKIP            3580
LOOP                1040
LSLMATCH            3D68
LSRMATCH            3D64
MASK0               0
MASK1               1
MASK2               2
MASK3               4
MASK4               8
MASK5               10
MASK6               20
MASK7               40
MASK8               80
MASKA               5
MASKB               A
MASKC               14
MASKD               28
MASKE               50
MASKF               A0
MEMSB               2696
MEMSHIFTIMM         2EE2
MEMSHIFTS           11F2
MEMSL               2BAA
MEMSW               2920
MOVEAMATCH          3D0D
MOVEMATCH           3D08
MOVEMBRA            358E
MOVEML              35BE
MOVEMMATCH          3D1F
MOVEMW              35A2
MOVEOVER            3AC8
MULSMATCH           3D56
NEGMATCH            3D13
NEWLINE             3CE5
NEXTH               3C4E
NINE                9
ONE                 1
OPADDAL             245E
OPADDAW             23EE
OPADDB              22A2
OPADDL              237A
OPADDW              230E
OPASBI              26D4
OPASBR              2736
OPASL               24CE
OPASLBI             2714
OPASLBR             2776
OPASLI              2BE8
OPASLLI             2C28
OPASLLR             2C8A
OPASLR              2C4A
OPASLWI             299E
OPASLWR             2A00
OPASR               251A
OPASRBI             26F2
OPASRBR             2754
OPASRLI             2C06
OPASRLR             2C68
OPASRWI             297C
OPASRWR             29DE
OPASWI              295E
OPASWR              29C0
OPBCLR              1542
OPBCS               20E6
OPBGE               2156
OPBLT               218E
OPBRA               20AE
OPBVC               211E
OPCMP               1E16
OPCMPB              1E48
OPCMPI              13B4
OPCMPIB             13D6
OPCMPIL             14CC
OPCMPIW             1448
OPCMPL              1EFC
OPCMPW              1EA2
OPDIVS              1C6A
OPDYNBCLR           15A6
OPEOR               1CC8
OPEORB              1CF6
OPEORL              1DB6
OPEORW              1D56
OPJSR               1992
OPLEA               1A94
OPLSBI              2798
OPLSBR              27FA
OPLSL               2566
OPLSLBI             27D8
OPLSLBR             283A
OPLSLI              2CAC
OPLSLLI             2CEC
OPLSLLR             2D4E
OPLSLR              2D0E
OPLSLWI             2A62
OPLSLWR             2AC4
OPLSR               25B2
OPLSRBI             27B6
OPLSRBR             2818
OPLSRLI             2CCA
OPLSRLR             2D2C
OPLSRWI             2A40
OPLSRWR             2AA2
OPLSWI              2A22
OPLSWR              2A84
OPMOVEAL            172C
OPMOVEAW            1822
OPMOVEB             1614
OPMOVEL             1698
OPMOVEM             1A0A
OPMOVEMLEA          19EE
OPMOVEW             1794
OPMULS              223E
OPNEG               188A
OPNEGB              18B8
OPNEGL              18F8
OPNEGW              1938
OPOR                1B14
OPORB               1B56
OPORI               124C
OPORIB              127A
OPORIL              1346
OPORIW              12E0
OPORL               1C0C
OPORW               1BB0
OPPER               3CF2
OPROBI              285C
OPROBR              28BE
OPROL               25FE
OPROLBI             289C
OPROLBR             28FE
OPROLI              2D70
OPROLLI             2DB0
OPROLLR             2E12
OPROLR              2DD2
OPROLWI             2B26
OPROLWR             2B88
OPROR               264A
OPRORBI             287A
OPRORBR             28DC
OPRORLI             2D8E
OPRORLR             2DF0
OPRORWI             2B04
OPRORWR             2B66
OPROWI              2AE6
OPROWR              2B48
OPRTS               19D2
OPRTSJSR            1978
OPSUB               1F56
OPSUBB              1FA0
OPSUBL              2054
OPSUBQ              21C6
OPSUBQB             21F6
OPSUBQL             2222
OPSUBQW             220C
OPSUBW              1FFA
ORIMATCH            3CFA
ORMATCH             3D47
OUTHEX              3AB0
PADDRDEC            337C
PADDRDIR            30C4
PADDRPOST           31F0
PADDRREG            3004
PDATAREG            2F44
PHEX                34B4
PRINTEA             2F0C
PRINTINVALID        3C7A
PRINTMEM            384E
PRINTMEMNOW         3852
PRINTREGMEM         3602
PRINTSTACK          35EE
PRNTIMM             2E34
PRNTREG             2E90
REG0CONT            36AE
REG1CONT            36EE
REG2CONT            372E
REG3CONT            376E
REG4CONT            37AE
REG5CONT            37EE
REG6CONT            382E
REGSHIFTS           1230
RETRY               3B1E
ROLMATCH            3D78
RORMATCH            3D74
RTSMATCH            3D17
SECNIB              F
SEVEN               7
SIX                 6
SKIPPRINTEA         1A84
SLASH               3D7C
SPACE               3CE9
STACK               3D7E
START               1000
STARTINGMESSAGE     3C84
SUBLOOP             3B36
SUBMATCH            3D4A
SUBQMATCH           3D29
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
