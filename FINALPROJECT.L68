00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 2014-12-09 20:42:12

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Motorola 68k Disassembler
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =00003009                 11  test_end    EQU     $00003009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00003000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00003009             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 181E                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 0084                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0080                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 0094                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0090                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00B4                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00C6                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00C2                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00D4                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 00D0                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 00C8                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                102          AND.B       #secNib, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 052E                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 067A                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                108          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 07E4                109          BEQ         opBCLR
000010A6  C47C 0001                110          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                111          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 083C                112          BEQ         opDynBCLR
000010B2  6000 177E                113          BRA         printInvalid
000010B6                           114          
000010B6                           115          
000010B6  6000 08A2                116  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           117  
000010BA  6000 0922                118  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BE                           119  
000010BE                           120  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BE                           121  
000010BE  6000 0A18                122          BRA         opMOVEW
000010C2                           123  
000010C2  4242                     124  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010C4  1401                     125          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010C6  C43C 000F                126          AND.B       #secNib, D2             ; set first nibble to 0
000010CA                           127   
000010CA  B43C 0004                128          CMP.B       #four, D2           ; compare second nibble to 4
000010CE  6700 0B02                129          BEQ         opNEG               ; branch to NEG method
000010D2  B43C 000E                130          CMP.B       #fourteen, D2       ; compare second nibble to E
000010D6  6700 0BE8                131          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010DA  6000 0C5A                132          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010DE                           133  
000010DE  6000 0C8A                134  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010E2                           135  
000010E2  4242                     136  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010E4  1401                     137          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010E6  C43C 000F                138          AND.B       #$0F, D2             ; set first nibble to 0
000010EA                           139   
000010EA  B43C 0000                140          CMP.B       #zero, D2           ; compare second nibble to 0
000010EE  6700 0DBA                141          BEQ         opBRA               ; branch to BRA method
000010F2  B43C 0005                142          CMP.B       #five, D2           ; compare second nibble to 5
000010F6  6700 0DEA                143          BEQ         opBCS               ; branch to BCS method
000010FA  B43C 0008                144          CMP.B       #eight, D2          ; compare second nibble to 8
000010FE  6700 0E16                145          BEQ         opBVC               ; branch to BCS method
00001102  B43C 000C                146          CMP.B       #twelve, D2         ; compare second nibble to 12
00001106  6700 0E42                147          BEQ         opBGE               ; branch to BGE method
0000110A  6000 0E72                148          BRA         opBLT               ; otherwise, branch to BLT method
0000110E                           149  
0000110E                           150  braEight                                ; there are two opCodes available DIVS, or OR
0000110E  4242                     151              CLR     D2
00001110  E141                     152              ASL     #8,D1
00001112  1218                     153              MOVE.B  (A0)+,D1
00001114  3401                     154              MOVE.W  D1,D2
00001116  EC42                     155              ASR     #six,D2
00001118  C47C 0007                156              AND     #$07,D2
0000111C  B43C 0007                157              CMP.B   #seven,D2
00001120  6700 01B4                158              BEQ     opDIVS              ; If bits 8 - 6 are equal to 7, we have DIVS
00001124  6000 005E                159              BRA     opOR                ; else opcode is OR
00001128                           160  
00001128  6000 0E88                161  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000112C                           162  
0000112C                           163  braEleven                               ; there are two opCodes available EOR, or CMP
0000112C  4242                     164              CLR     D2
0000112E  E141                     165              ASL     #8,D1
00001130  1218                     166              MOVE.B  (A0)+,D1
00001132  3401                     167              MOVE.W  D1,D2
00001134  EC42                     168              ASR     #six,D2
00001136  C47C 0007                169              AND     #$07,D2
0000113A  B43C 0003                170              CMP.B   #three,D2
0000113E  6D00 0342                171              BLT     opCMP               ; If opmode bits are less than 3, we have CMP
00001142  6000 01F0                172              BRA     opEOR               ; Else its EOR
00001146                           173              
00001146                           174  
00001146  6000 0FC2                175  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
0000114A                           176    
0000114A                           177  braThirteen ; there are two opCodes available ADD, or ADDA
0000114A                           178  
0000114A  4242                     179  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
0000114C  1401                     180              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000114E  C438 000F                181              AND.B       $0F, D2             ; set first nibble to 0
00001152                           182   
00001152  B43C 0000                183              CMP.B       #zero, D2           ; compare second nibble to 0
00001156  6700 0FCA                184              BEQ         opASR               ; branch to ASR method
0000115A  B43C 0001                185              CMP.B       #one, D2            ; compare second nibble to 1
0000115E  6700 0FB6                186              BEQ         opASL               ; branch to ASL method
00001162  B43C 0002                187              CMP.B       #two, D2            ; compare second nibble to 2
00001166  6700 0FD2                188              BEQ         opLSR               ; branch to LSR method
0000116A  B43C 0003                189              CMP.B       #three, D2          ; compare second nibble to 3
0000116E  6700 0FBE                190              BEQ         opLSL               ; branch to LSL method
00001172  B43C 0006                191              CMP.B       #six, D2            ; compare second nibble to 6
00001176  6700 0FDA                192              BEQ         opROR               ; branch to ROR method
0000117A  6000 0FCA                193              BRA         opROL               ; otherwise, branch to ROL method
0000117E                           194              
0000117E                           195  
0000117E                           196  
0000117E                           197  ***********************************************************************************************************
0000117E                           198  *
0000117E                           199  *               BCC OPCODE
0000117E                           200  *
0000117E                           201  ***********************************************************************************************************
0000117E                           202          
0000117E  4242                     203  opBCC       CLR     D2
00001180                           204              ; Determine Condition (4 bits)
00001180                           205              ; Determine Displacement AFTER condition (8 bits)
00001180  6000 FE8A                206              BRA     LOOP
00001184                           207              
00001184                           208              
00001184                           209  ***********************************************************************************************************
00001184                           210  *
00001184                           211  *               OR OPCODE
00001184                           212  *
00001184                           213  ***********************************************************************************************************
00001184                           214  
00001184  43F9 00002898            215  opOR        LEA         ORmatch,A1
0000118A  103C 000E                216              MOVE.B      #14,D0
0000118E  4E4F                     217              TRAP        #15
00001190                           218              
00001190  4242                     219              CLR         D2
00001192                           220              ; These are for EA to Dn direction
00001192  B43C 0000                221              CMP.B       #zero,D2
00001196  6700 002A                222              BEQ         opORB               ; Byte in opmode
0000119A  B43C 0001                223              CMP.B       #one,D2
0000119E  6700 007C                224              BEQ         opORW               ; Word in opmode
000011A2  B43C 0002                225              CMP.B       #two,D2
000011A6  6700 00D0                226              BEQ         opORL               ; Long in opmode
000011AA                           227              
000011AA                           228              ; These are for Dn to EA direction
000011AA  B43C 0004                229              CMP.B       #four,D2
000011AE  6700 0012                230              BEQ         opORB               ; Byte in opmode
000011B2  B43C 0005                231              CMP.B       #five,D2
000011B6  6700 0064                232              BEQ         opORW               ; Word in opmode
000011BA  B43C 0006                233              CMP.B       #six,D2
000011BE  6700 00B8                234              BEQ         opORL               ; Long in opmode
000011C2                           235              
000011C2  43F9 000028CD            236  opORB       LEA         dispByte,A1
000011C8  103C 000E                237              MOVE.B      #14,D0
000011CC  4E4F                     238              TRAP        #15
000011CE                           239              
000011CE  43F9 0000283A            240              LEA         space, A1           ; Display space
000011D4  103C 000E                241              MOVE.B      #14, D0             ; command for trap call to display message
000011D8  4E4F                     242              TRAP        #15                 ; trap call
000011DA                           243              
000011DA                           244  
000011DA  1401                     245              MOVE.B      D1,D2
000011DC  E642                     246              ASR         #3,D2
000011DE  C47C 0007                247              AND         #$07,D2
000011E2  1601                     248              MOVE.B      D1,D3
000011E4  C67C 0007                249              AND         #$07,D3
000011E8  4EB9 0000215E            250              JSR         printEA         ; Determines the "left" operand register
000011EE                           251              
000011EE  43F9 00002841            252              LEA         comma, A1           ; Display space
000011F4  103C 000E                253              MOVE.B      #14, D0             ; command for trap call to display message
000011F8  4E4F                     254              TRAP        #15                 ; trap call
000011FA                           255              
000011FA  4242                     256              CLR         D2
000011FC  3601                     257              MOVE.W      D1,D3
000011FE  E043                     258              ASR         #eight,D3
00001200  E243                     259              ASR         #one,D3
00001202  C67C 0007                260              AND         #$07,D3
00001206  4EB9 0000215E            261              JSR         printEA
0000120C                           262              
0000120C  43F9 00002836            263              LEA         newLine,A1
00001212  103C 000E                264              MOVE.B      #14,D0
00001216  4E4F                     265              TRAP        #15
00001218                           266              
00001218  6000 FDF2                267              BRA         LOOP
0000121C                           268              
0000121C                           269              
0000121C  43F9 000028D0            270  opORW       LEA         dispWord,A1
00001222  103C 000E                271              MOVE.B      #14,D0
00001226  4E4F                     272              TRAP        #15
00001228                           273              
00001228  43F9 0000283A            274              LEA         space, A1           ; Display space
0000122E  103C 000E                275              MOVE.B      #14, D0             ; command for trap call to display message
00001232  4E4F                     276              TRAP        #15                 ; trap call
00001234                           277              
00001234  4242                     278              CLR         D2
00001236  1401                     279              MOVE.B      D1,D2
00001238  E642                     280              ASR         #3,D2
0000123A  C47C 0007                281              AND         #$07,D2
0000123E  1601                     282              MOVE.B      D1,D3
00001240  C67C 0007                283              AND         #$07,D3
00001244  4EB9 0000215E            284              JSR         printEA         ; Determines the "left" operand register
0000124A                           285              
0000124A  43F9 00002841            286              LEA         comma, A1           ; Display space
00001250  103C 000E                287              MOVE.B      #14, D0             ; command for trap call to display message
00001254  4E4F                     288              TRAP        #15                 ; trap call
00001256                           289              
00001256  4242                     290              CLR         D2
00001258  3601                     291              MOVE.W      D1,D3
0000125A  E043                     292              ASR         #eight,D3
0000125C  E243                     293              ASR         #one,D3
0000125E  C67C 0007                294              AND         #$07,D3
00001262  4EB9 0000215E            295              JSR         printEA
00001268                           296              
00001268  43F9 00002836            297              LEA         newLine,A1
0000126E  103C 000E                298              MOVE.B      #14,D0
00001272  4E4F                     299              TRAP        #15
00001274                           300              
00001274  6000 FD96                301              BRA         LOOP
00001278                           302              
00001278  43F9 000028D3            303  opORL       LEA         dispLong,A1
0000127E  103C 000E                304              MOVE.B      #14,D0
00001282  4E4F                     305              TRAP        #15
00001284                           306              
00001284  43F9 0000283A            307              LEA         space, A1           ; Display space
0000128A  103C 000E                308              MOVE.B      #14, D0             ; command for trap call to display message
0000128E  4E4F                     309              TRAP        #15                 ; trap call
00001290                           310              
00001290  1401                     311              MOVE.B      D1,D2
00001292  E642                     312              ASR         #3,D2
00001294  C47C 0007                313              AND         #$07,D2
00001298  1601                     314              MOVE.B      D1,D3
0000129A  C67C 0007                315              AND         #$07,D3
0000129E  4EB9 0000215E            316              JSR         printEA         ; Determines the "left" operand register
000012A4                           317              
000012A4  43F9 00002841            318              LEA         comma, A1           ; Display space
000012AA  103C 000E                319              MOVE.B      #14, D0             ; command for trap call to display message
000012AE  4E4F                     320              TRAP        #15                 ; trap call
000012B0                           321              
000012B0  4242                     322              CLR         D2
000012B2  3601                     323              MOVE.W      D1,D3
000012B4  E043                     324              ASR         #eight,D3
000012B6  E243                     325              ASR         #one,D3
000012B8  C67C 0007                326              AND         #$07,D3
000012BC  4EB9 0000215E            327              JSR         printEA
000012C2                           328              
000012C2  43F9 00002836            329              LEA         newLine,A1
000012C8  103C 000E                330              MOVE.B      #14,D0
000012CC  4E4F                     331              TRAP        #15
000012CE                           332              
000012CE  6000 FD3C                333              BRA         LOOP            ; trap call
000012D2                           334              
000012D2  6000 FD38                335              BRA         LOOP            ; DOUBLE CHECK THIS AGAIN AFTER MORE TESTING ALEX
000012D6                           336              
000012D6                           337  ***********************************************************************************************************
000012D6                           338  *
000012D6                           339  *               DIVS OPCODE
000012D6                           340  *
000012D6                           341  ***********************************************************************************************************
000012D6                           342  
000012D6  43F9 00002893            343  opDIVS      LEA     DIVSmatch,A1
000012DC  103C 000E                344              MOVE.B  #14,D0
000012E0  4E4F                     345              TRAP    #15
000012E2                           346              
000012E2  43F9 0000283A            347              LEA         space, A1           ; Display space
000012E8  103C 000E                348              MOVE.B      #14, D0             ; command for trap call to display message
000012EC  4E4F                     349              TRAP        #15                 ; trap call
000012EE                           350              
000012EE  1401                     351              MOVE.B      D1,D2
000012F0  E642                     352              ASR         #3,D2
000012F2  C47C 0007                353              AND         #$07,D2
000012F6  1601                     354              MOVE.B      D1,D3
000012F8  C67C 0007                355              AND         #$07,D3
000012FC  4EB9 0000215E            356              JSR         printEA
00001302                           357              
00001302  43F9 00002841            358              LEA         comma, A1           ; Display space
00001308  103C 000E                359              MOVE.B      #14, D0             ; command for trap call to display message
0000130C  4E4F                     360              TRAP        #15                 ; trap call
0000130E                           361              
0000130E  4242                     362              CLR         D2
00001310  3601                     363              MOVE.W      D1,D3
00001312  E043                     364              ASR         #eight,D3
00001314  E243                     365              ASR         #one,D3
00001316  C67C 0007                366              AND         #$07,D3
0000131A  4EB9 0000215E            367              JSR         printEA
00001320                           368              
00001320  43F9 00002836            369              LEA         newLine,A1
00001326  103C 000E                370              MOVE.B      #14,D0
0000132A  4E4F                     371              TRAP        #15
0000132C                           372              
0000132C  6000 FCDE                373              BRA         LOOP
00001330                           374      
00001330  6000 FCDA                375              BRA     LOOP
00001334                           376              
00001334                           377  **********************************************************************************************************
00001334                           378  *
00001334                           379  *               EOR OPCODE
00001334                           380  *
00001334                           381  ***********************************************************************************************************
00001334                           382  
00001334  43F9 0000289F            383  opEOR       LEA         EORmatch,A1
0000133A  103C 000E                384              MOVE.B      #14,D0
0000133E  4E4F                     385              TRAP        #15
00001340                           386              
00001340  4242                     387              CLR         D2
00001342                           388              
00001342  1401                     389              MOVE.B      D1,D2
00001344  EE42                     390              ASR         #seven,D2           ; Move bits 7 places over to find opmode
00001346  C47C 0007                391              AND         #$07,D2
0000134A  B43C 0005                392              CMP.B       #five,D2
0000134E  6D00 0012                393              BLT         opEORB              ; Byte in opmode
00001352  B43C 0005                394              CMP.B       #five,D2
00001356  6700 006A                395              BEQ         opEORW              ; Word in opmode
0000135A  B43C 0005                396              CMP.B       #five,D2
0000135E  6E00 00C2                397              BGT         opEORL              ; Long in opmode
00001362                           398              
00001362  43F9 000028CD            399  opEORB      LEA         dispByte,A1
00001368  103C 000E                400              MOVE.B      #14,D0
0000136C  4E4F                     401              TRAP        #15
0000136E                           402              
0000136E  43F9 0000283A            403              LEA         space, A1           ; Display space
00001374  103C 000E                404              MOVE.B      #14, D0             ; command for trap call to display message
00001378  4E4F                     405              TRAP        #15                 ; trap call
0000137A                           406              
0000137A  4242                     407              CLR         D2
0000137C  4243                     408              CLR         D3
0000137E  3601                     409              MOVE.W      D1,D3
00001380  E043                     410              ASR         #eight,D3
00001382  E243                     411              ASR         #one,D3
00001384  C67C 0007                412              AND         #$07,D3
00001388  4EB9 0000215E            413              JSR         printEA
0000138E                           414              
0000138E  43F9 00002841            415              LEA         comma, A1           ; Display space
00001394  103C 000E                416              MOVE.B      #14, D0             ; command for trap call to display message
00001398  4E4F                     417              TRAP        #15                 ; trap call
0000139A                           418              
0000139A  4242                     419              CLR         D2
0000139C  4243                     420              CLR         D3
0000139E  1401                     421              MOVE.B      D1,D2
000013A0  E642                     422              ASR         #three,D2
000013A2  C47C 0007                423              AND         #seven,D2
000013A6  1601                     424              MOVE.B      D1,D3
000013A8  C67C 0007                425              AND         #$07,D3
000013AC  4EB9 0000215E            426              JSR         printEA         ; Determines the "left" operand register
000013B2                           427              
000013B2  43F9 00002836            428              LEA         newLine,A1
000013B8  103C 000E                429              MOVE.B      #14,D0
000013BC  4E4F                     430              TRAP        #15
000013BE                           431              
000013BE  6000 FC4C                432              BRA         LOOP
000013C2                           433              
000013C2                           434              
000013C2  43F9 000028D0            435  opEORW      LEA         dispWord,A1
000013C8  103C 000E                436              MOVE.B      #14,D0
000013CC  4E4F                     437              TRAP        #15
000013CE                           438              
000013CE  43F9 0000283A            439              LEA         space, A1           ; Display space
000013D4  103C 000E                440              MOVE.B      #14, D0             ; command for trap call to display message
000013D8  4E4F                     441              TRAP        #15                 ; trap call
000013DA                           442              
000013DA  4242                     443              CLR         D2
000013DC  4243                     444              CLR         D3
000013DE  3601                     445              MOVE.W      D1,D3
000013E0  E043                     446              ASR         #eight,D3
000013E2  E243                     447              ASR         #one,D3
000013E4  C67C 0007                448              AND         #$07,D3
000013E8  4EB9 0000215E            449              JSR         printEA
000013EE                           450              
000013EE  43F9 00002841            451              LEA         comma, A1           ; Display space
000013F4  103C 000E                452              MOVE.B      #14, D0             ; command for trap call to display message
000013F8  4E4F                     453              TRAP        #15                 ; trap call
000013FA                           454              
000013FA  4242                     455              CLR         D2
000013FC  4243                     456              CLR         D3
000013FE  1401                     457              MOVE.B      D1,D2
00001400  E642                     458              ASR         #three,D2
00001402  C47C 0007                459              AND         #seven,D2
00001406  1601                     460              MOVE.B      D1,D3
00001408  C67C 0007                461              AND         #$07,D3
0000140C  4EB9 0000215E            462              JSR         printEA         ; Determines the "left" operand register
00001412                           463              
00001412  43F9 00002836            464              LEA         newLine,A1
00001418  103C 000E                465              MOVE.B      #14,D0
0000141C  4E4F                     466              TRAP        #15
0000141E                           467              
0000141E  6000 FBEC                468              BRA         LOOP
00001422                           469              
00001422  43F9 000028D3            470  opEORL      LEA         dispLong,A1
00001428  103C 000E                471              MOVE.B      #14,D0
0000142C  4E4F                     472              TRAP        #15
0000142E                           473              
0000142E  43F9 0000283A            474              LEA         space, A1           ; Display space
00001434  103C 000E                475              MOVE.B      #14, D0             ; command for trap call to display message
00001438  4E4F                     476              TRAP        #15                 ; trap call
0000143A                           477              
0000143A  4242                     478              CLR         D2
0000143C  4243                     479              CLR         D3
0000143E  3601                     480              MOVE.W      D1,D3
00001440  E043                     481              ASR         #eight,D3
00001442  E243                     482              ASR         #one,D3
00001444  C67C 0007                483              AND         #$07,D3
00001448  4EB9 0000215E            484              JSR         printEA
0000144E                           485              
0000144E  43F9 00002841            486              LEA         comma, A1           ; Display space
00001454  103C 000E                487              MOVE.B      #14, D0             ; command for trap call to display message
00001458  4E4F                     488              TRAP        #15                 ; trap call
0000145A                           489              
0000145A  4242                     490              CLR         D2
0000145C  4243                     491              CLR         D3
0000145E  1401                     492              MOVE.B      D1,D2
00001460  E642                     493              ASR         #three,D2
00001462  C47C 0007                494              AND         #seven,D2
00001466  1601                     495              MOVE.B      D1,D3
00001468  C67C 0007                496              AND         #$07,D3
0000146C  4EB9 0000215E            497              JSR         printEA         ; Determines the "left" operand register
00001472                           498              
00001472  43F9 00002836            499              LEA         newLine,A1
00001478  103C 000E                500              MOVE.B      #14,D0
0000147C  4E4F                     501              TRAP        #15
0000147E                           502              
0000147E  6000 FB8C                503              BRA         LOOP            ; trap call
00001482                           504              
00001482                           505  
00001482                           506  ***********************************************************************************************************
00001482                           507  *
00001482                           508  *               CMP OPCODE
00001482                           509  *
00001482                           510  ***********************************************************************************************************
00001482                           511  
00001482  43F9 000028A3            512  opCMP       LEA         CMPmatch,A1
00001488  103C 000E                513              MOVE.B      #14,D0
0000148C  4E4F                     514              TRAP        #15
0000148E                           515              
0000148E  4242                     516              CLR         D2
00001490                           517              
00001490  1401                     518              MOVE.B      D1,D2
00001492  EC42                     519              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001494  C47C 0007                520              AND         #$07,D2
00001498  B43C 0000                521              CMP.B       #zero,D2
0000149C  6700 0016                522              BEQ         opCMPB              ; Byte in opmode
000014A0  B43C 0001                523              CMP.B       #one,D2
000014A4  6700 0068                524              BEQ         opCMPW              ; Word in opmode
000014A8  B43C 0002                525              CMP.B       #two,D2
000014AC  6700 00BA                526              BEQ         opCMPL              ; Long in opmode
000014B0                           527              
000014B0  6000 1380                528              BRA         printInvalid        ; Incorrect input
000014B4                           529  
000014B4  43F9 000028CD            530  opCMPB      LEA         dispByte,A1
000014BA  103C 000E                531              MOVE.B      #14,D0
000014BE  4E4F                     532              TRAP        #15
000014C0                           533              
000014C0  43F9 0000283A            534              LEA         space, A1           ; Display space
000014C6  103C 000E                535              MOVE.B      #14, D0             ; command for trap call to display message
000014CA  4E4F                     536              TRAP        #15                 ; trap call
000014CC                           537              
000014CC  1401                     538              MOVE.B      D1,D2
000014CE  E642                     539              ASR         #3,D2
000014D0  C47C 0007                540              AND         #$07,D2
000014D4  1601                     541              MOVE.B      D1,D3
000014D6  C67C 0007                542              AND         #$07,D3
000014DA  4EB9 0000215E            543              JSR         printEA         ; Determines the "left" operand register
000014E0                           544              
000014E0  43F9 00002841            545              LEA         comma, A1           ; Display space
000014E6  103C 000E                546              MOVE.B      #14, D0             ; command for trap call to display message
000014EA  4E4F                     547              TRAP        #15                 ; trap call
000014EC                           548              
000014EC  4242                     549              CLR         D2
000014EE  3601                     550              MOVE.W      D1,D3
000014F0  E043                     551              ASR         #eight,D3
000014F2  E243                     552              ASR         #one,D3
000014F4  C67C 0007                553              AND         #$07,D3
000014F8  4EB9 0000215E            554              JSR         printEA
000014FE                           555              
000014FE  43F9 00002836            556              LEA         newLine,A1
00001504  103C 000E                557              MOVE.B      #14,D0
00001508  4E4F                     558              TRAP        #15
0000150A                           559              
0000150A  6000 FB00                560              BRA         LOOP
0000150E                           561              
0000150E  43F9 000028D0            562  opCMPW      LEA         dispWord,A1
00001514  103C 000E                563              MOVE.B      #14,D0
00001518  4E4F                     564              TRAP        #15
0000151A                           565              
0000151A  43F9 0000283A            566              LEA         space, A1           ; Display space
00001520  103C 000E                567              MOVE.B      #14, D0             ; command for trap call to display message
00001524  4E4F                     568              TRAP        #15                 ; trap call
00001526                           569              
00001526  1401                     570              MOVE.B      D1,D2
00001528  E642                     571              ASR         #3,D2
0000152A  C47C 0007                572              AND         #$07,D2
0000152E  1601                     573              MOVE.B      D1,D3
00001530  C67C 0007                574              AND         #$07,D3
00001534  4EB9 0000215E            575              JSR         printEA         ; Determines the "left" operand register
0000153A                           576              
0000153A  43F9 00002841            577              LEA         comma, A1           ; Display space
00001540  103C 000E                578              MOVE.B      #14, D0             ; command for trap call to display message
00001544  4E4F                     579              TRAP        #15                 ; trap call
00001546                           580              
00001546  4242                     581              CLR         D2
00001548  3601                     582              MOVE.W      D1,D3
0000154A  E043                     583              ASR         #eight,D3
0000154C  E243                     584              ASR         #one,D3
0000154E  C67C 0007                585              AND         #$07,D3
00001552  4EB9 0000215E            586              JSR         printEA
00001558                           587              
00001558  43F9 00002836            588              LEA         newLine,A1
0000155E  103C 000E                589              MOVE.B      #14,D0
00001562  4E4F                     590              TRAP        #15
00001564                           591              
00001564  6000 FAA6                592              BRA         LOOP
00001568                           593  
00001568  43F9 000028D3            594  opCMPL      LEA         dispLong,A1
0000156E  103C 000E                595              MOVE.B      #14,D0
00001572  4E4F                     596              TRAP        #15
00001574                           597              
00001574  43F9 0000283A            598              LEA         space, A1           ; Display space
0000157A  103C 000E                599              MOVE.B      #14, D0             ; command for trap call to display message
0000157E  4E4F                     600              TRAP        #15                 ; trap call
00001580                           601              
00001580  1401                     602              MOVE.B      D1,D2
00001582  E642                     603              ASR         #3,D2
00001584  C47C 0007                604              AND         #$07,D2
00001588  1601                     605              MOVE.B      D1,D3
0000158A  C67C 0007                606              AND         #$07,D3
0000158E  4EB9 0000215E            607              JSR         printEA         ; Determines the "left" operand register
00001594                           608              
00001594  43F9 00002841            609              LEA         comma, A1           ; Display space
0000159A  103C 000E                610              MOVE.B      #14, D0             ; command for trap call to display message
0000159E  4E4F                     611              TRAP        #15                 ; trap call
000015A0                           612              
000015A0  4242                     613              CLR         D2
000015A2  3601                     614              MOVE.W      D1,D3
000015A4  E043                     615              ASR         #eight,D3
000015A6  E243                     616              ASR         #one,D3
000015A8  C67C 0007                617              AND         #$07,D3
000015AC  4EB9 0000215E            618              JSR         printEA
000015B2                           619              
000015B2  43F9 00002836            620              LEA         newLine,A1
000015B8  103C 000E                621              MOVE.B      #14,D0
000015BC  4E4F                     622              TRAP        #15
000015BE                           623              
000015BE  6000 FA4C                624              BRA         LOOP
000015C2                           625              
000015C2                           626  ***********************************************************************************************************
000015C2                           627  *
000015C2                           628  *               ORI OPCODE
000015C2                           629  *
000015C2                           630  ***********************************************************************************************************
000015C2                           631  
000015C2  43F9 0000284B            632  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
000015C8  103C 000E                633          MOVE.B      #14, D0             ; command for trap call to display message
000015CC  4E4F                     634          TRAP        #15                 ; trap call
000015CE                           635          
000015CE  1218                     636          MOVE.B      (A0)+, D1
000015D0  1401                     637          MOVE.B      D1,D2               ; copy data over
000015D2  EC42                     638          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000015D4  B43C 0000                639          CMP.B       #zero,D2
000015D8  6700 0016                640          BEQ         opORIB
000015DC  B43C 0001                641          CMP.B       #one,D2
000015E0  6700 0070                642          BEQ         opORIW
000015E4  B43C 0002                643          CMP.B       #two,D2
000015E8  6700 00CA                644          BEQ         opORIL
000015EC                           645          
000015EC  6000 1244                646          BRA         printInvalid
000015F0                           647          
000015F0  43F9 000028CD            648  opORIB  LEA         dispByte, A1        ; Display byte
000015F6  103C 000E                649          MOVE.B      #14, D0             ; command for trap call to display message
000015FA  4E4F                     650          TRAP        #15                 ; trap call
000015FC                           651          
000015FC  43F9 0000283A            652          LEA         space, A1           ; Display space
00001602  103C 000E                653          MOVE.B      #14, D0             ; command for trap call to display message
00001606  4E4F                     654          TRAP        #15                 ; trap call
00001608                           655          
00001608  4242                     656          CLR         D2
0000160A  1401                     657          MOVE.B      D1,D2
0000160C  E642                     658          ASR         #three,D2
0000160E  C47C 0007                659          AND         #seven,D2
00001612  4243                     660          CLR         D3        
00001614  1601                     661          MOVE.B      D1,D3
00001616  C67C 0007                662          AND         #seven,D3
0000161A                           663          
0000161A  4241                     664          CLR         D1
0000161C  3218                     665          MOVE.W      (A0)+, D1
0000161E                           666          
0000161E  43F9 0000283D            667          LEA         hashTag, A1           ; Display space
00001624  103C 000E                668          MOVE.B      #14, D0             ; command for trap call to display message
00001628  4E4F                     669          TRAP        #15                 ; trap call
0000162A                           670          
0000162A  103C 0003                671          MOVE.B      #3, D0
0000162E  4E4F                     672          TRAP        #15
00001630                           673          
00001630  43F9 00002841            674          LEA         comma, A1           ; Display space
00001636  103C 000E                675          MOVE.B      #14, D0             ; command for trap call to display message
0000163A  4E4F                     676          TRAP        #15                 ; trap call
0000163C                           677          
0000163C  4EB9 0000215E            678          JSR         printEA
00001642                           679          
00001642  43F9 00002836            680          LEA         newLine, A1           ; Display space
00001648  103C 000E                681          MOVE.B      #14, D0             ; command for trap call to display message
0000164C  4E4F                     682          TRAP        #15                 ; trap call
0000164E                           683          
0000164E  6000 F9BC                684          BRA         LOOP
00001652                           685          
00001652                           686          
00001652  43F9 000028D0            687  opORIW  LEA         dispWord, A1        ; Display byte
00001658  103C 000E                688          MOVE.B      #14, D0             ; command for trap call to display message
0000165C  4E4F                     689          TRAP        #15                 ; trap call
0000165E                           690          
0000165E  43F9 0000283A            691          LEA         space, A1           ; Display space
00001664  103C 000E                692          MOVE.B      #14, D0             ; command for trap call to display message
00001668  4E4F                     693          TRAP        #15                 ; trap call
0000166A                           694          
0000166A  4242                     695          CLR         D2
0000166C  1401                     696          MOVE.B      D1,D2
0000166E  E642                     697          ASR         #three,D2
00001670  C47C 0007                698          AND         #seven,D2
00001674  4243                     699          CLR         D3        
00001676  1601                     700          MOVE.B      D1,D3
00001678  C67C 0007                701          AND         #seven,D3
0000167C                           702          
0000167C  4241                     703          CLR         D1
0000167E  3218                     704          MOVE.W      (A0)+, D1
00001680                           705          
00001680  43F9 0000283D            706          LEA         hashTag, A1           ; Display space
00001686  103C 000E                707          MOVE.B      #14, D0             ; command for trap call to display message
0000168A  4E4F                     708          TRAP        #15                 ; trap call
0000168C                           709          
0000168C  103C 0003                710          MOVE.B      #3, D0
00001690  4E4F                     711          TRAP        #15
00001692                           712          
00001692  43F9 00002841            713          LEA         comma, A1           ; Display space
00001698  103C 000E                714          MOVE.B      #14, D0             ; command for trap call to display message
0000169C  4E4F                     715          TRAP        #15                 ; trap call
0000169E                           716          
0000169E  4EB9 0000215E            717          JSR         printEA
000016A4                           718          
000016A4  43F9 00002836            719          LEA         newLine, A1           ; Display space
000016AA  103C 000E                720          MOVE.B      #14, D0             ; command for trap call to display message
000016AE  4E4F                     721          TRAP        #15                 ; trap call
000016B0                           722          
000016B0  6000 F95A                723          BRA         LOOP
000016B4                           724       
000016B4  43F9 000028D3            725  opORIL  LEA         dispLong, A1        ; Display byte
000016BA  103C 000E                726          MOVE.B      #14, D0             ; command for trap call to display message
000016BE  4E4F                     727          TRAP        #15                 ; trap call
000016C0                           728          
000016C0  43F9 0000283A            729          LEA         space, A1           ; Display space
000016C6  103C 000E                730          MOVE.B      #14, D0             ; command for trap call to display message
000016CA  4E4F                     731          TRAP        #15                 ; trap call
000016CC                           732          
000016CC  4242                     733          CLR         D2
000016CE  1401                     734          MOVE.B      D1,D2
000016D0  E642                     735          ASR         #three,D2
000016D2  C47C 0007                736          AND         #seven,D2
000016D6  4243                     737          CLR         D3        
000016D8  1601                     738          MOVE.B      D1,D3
000016DA  C67C 0007                739          AND         #seven,D3
000016DE                           740          
000016DE  4241                     741          CLR         D1
000016E0  2218                     742          MOVE.L      (A0)+, D1
000016E2                           743          
000016E2  43F9 0000283D            744          LEA         hashTag, A1           ; Display space
000016E8  103C 000E                745          MOVE.B      #14, D0             ; command for trap call to display message
000016EC  4E4F                     746          TRAP        #15                 ; trap call
000016EE                           747          
000016EE  103C 0003                748          MOVE.B      #3, D0
000016F2  4E4F                     749          TRAP        #15
000016F4                           750          
000016F4  43F9 00002841            751          LEA         comma, A1           ; Display space
000016FA  103C 000E                752          MOVE.B      #14, D0             ; command for trap call to display message
000016FE  4E4F                     753          TRAP        #15                 ; trap call
00001700                           754          
00001700  4EB9 0000215E            755          JSR         printEA
00001706                           756          
00001706  43F9 00002836            757          LEA         newLine, A1           ; Display space
0000170C  103C 000E                758          MOVE.B      #14, D0             ; command for trap call to display message
00001710  4E4F                     759          TRAP        #15                 ; trap call
00001712                           760          
00001712  6000 F8F8                761          BRA         LOOP
00001716                           762           
00001716  43F9 0000284F            763  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000171C  103C 000E                764          MOVE.B      #14, D0             ; command for trap call to display message
00001720  4E4F                     765          TRAP        #15                 ; trap call
00001722                           766                  
00001722  1218                     767          MOVE.B      (A0)+, D1
00001724  1401                     768          MOVE.B      D1,D2               ; copy data over
00001726  EC42                     769          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001728  B43C 0000                770          CMP.B       #zero,D2
0000172C  6700 0034                771          BEQ         opCMPIB
00001730  B43C 0001                772          CMP.B       #one,D2
00001734  6700 008E                773          BEQ         opCMPIW
00001738  B43C 0002                774          CMP.B       #two,D2
0000173C  6700 00E8                775          BEQ         opCMPIL
00001740                           776          
00001740  1401                     777          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
00001742  E542                     778          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
00001744  1802                     779          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
00001746  4242                     780          CLR         D2                  ; Clear out data register
00001748  1404                     781          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
0000174A  EA42                     782          ASR         #five,D2            ; Shift the register out to get just the mode
0000174C  1802                     783          MOVE.B      D2,D4               ; Store mode into D4
0000174E  4242                     784          CLR         D2
00001750                           785          
00001750  1401                     786          MOVE.B      D1,D2               ; Getting the EA register
00001752  EB42                     787          ASL         #five,D2
00001754  1A02                     788          MOVE.B      D2,D5               ; Move just the register into D5
00001756  4242                     789          CLR         D2                  ; Clearing D2 to put data back
00001758  1405                     790          MOVE.B      D5,D2               ; Putting back the register
0000175A  EA42                     791          ASR         #five,D2            ; Shifting bits in order to read the register
0000175C  1A02                     792          MOVE.B      D2,D5               ; Store register into D5
0000175E                           793          
0000175E  6000 F8AC                794          BRA         LOOP                ; go back to the loop
00001762                           795  
00001762  43F9 000028CD            796  opCMPIB LEA         dispByte, A1        ; Display byte
00001768  103C 000E                797          MOVE.B      #14, D0             ; command for trap call to display message
0000176C  4E4F                     798          TRAP        #15                 ; trap call
0000176E                           799          
0000176E  43F9 0000283A            800          LEA         space, A1           ; Display space
00001774  103C 000E                801          MOVE.B      #14, D0             ; command for trap call to display message
00001778  4E4F                     802          TRAP        #15                 ; trap call
0000177A                           803          
0000177A  4242                     804          CLR         D2
0000177C  1401                     805          MOVE.B      D1,D2
0000177E  E642                     806          ASR         #three,D2
00001780  C47C 0007                807          AND         #seven,D2
00001784  4243                     808          CLR         D3        
00001786  1601                     809          MOVE.B      D1,D3
00001788  C67C 0007                810          AND         #seven,D3
0000178C                           811          
0000178C  4241                     812          CLR         D1
0000178E  3218                     813          MOVE.W      (A0)+, D1
00001790                           814          
00001790  43F9 0000283D            815          LEA         hashTag, A1           ; Display space
00001796  103C 000E                816          MOVE.B      #14, D0             ; command for trap call to display message
0000179A  4E4F                     817          TRAP        #15                 ; trap call
0000179C                           818          
0000179C  103C 0003                819          MOVE.B      #3, D0
000017A0  4E4F                     820          TRAP        #15
000017A2                           821          
000017A2  43F9 00002841            822          LEA         comma, A1           ; Display space
000017A8  103C 000E                823          MOVE.B      #14, D0             ; command for trap call to display message
000017AC  4E4F                     824          TRAP        #15                 ; trap call
000017AE                           825          
000017AE  4EB9 0000215E            826          JSR         printEA
000017B4                           827          
000017B4  43F9 00002836            828          LEA         newLine, A1           ; Display space
000017BA  103C 000E                829          MOVE.B      #14, D0             ; command for trap call to display message
000017BE  4E4F                     830          TRAP        #15                 ; trap call
000017C0                           831  
000017C0  6000 F84A                832          BRA         LOOP
000017C4                           833  
000017C4  43F9 000028D0            834  opCMPIW LEA         dispWord, A1        ; Display byte
000017CA  103C 000E                835          MOVE.B      #14, D0             ; command for trap call to display message
000017CE  4E4F                     836          TRAP        #15                 ; trap call
000017D0                           837          
000017D0  43F9 0000283A            838          LEA         space, A1           ; Display space
000017D6  103C 000E                839          MOVE.B      #14, D0             ; command for trap call to display message
000017DA  4E4F                     840          TRAP        #15                 ; trap call
000017DC                           841          
000017DC  4242                     842          CLR         D2
000017DE  1401                     843          MOVE.B      D1,D2
000017E0  E642                     844          ASR         #three,D2
000017E2  C47C 0007                845          AND         #seven,D2
000017E6  4243                     846          CLR         D3        
000017E8  1601                     847          MOVE.B      D1,D3
000017EA  C67C 0007                848          AND         #seven,D3
000017EE                           849          
000017EE  4241                     850          CLR         D1
000017F0  3218                     851          MOVE.W      (A0)+, D1
000017F2                           852          
000017F2  43F9 0000283D            853          LEA         hashTag, A1           ; Display space
000017F8  103C 000E                854          MOVE.B      #14, D0             ; command for trap call to display message
000017FC  4E4F                     855          TRAP        #15                 ; trap call
000017FE                           856          
000017FE  103C 0003                857          MOVE.B      #3, D0
00001802  4E4F                     858          TRAP        #15
00001804                           859          
00001804  43F9 00002841            860          LEA         comma, A1           ; Display space
0000180A  103C 000E                861          MOVE.B      #14, D0             ; command for trap call to display message
0000180E  4E4F                     862          TRAP        #15                 ; trap call
00001810                           863          
00001810  4EB9 0000215E            864          JSR         printEA
00001816                           865          
00001816  43F9 00002836            866          LEA         newLine, A1           ; Display space
0000181C  103C 000E                867          MOVE.B      #14, D0             ; command for trap call to display message
00001820  4E4F                     868          TRAP        #15                 ; trap call
00001822  6000 F7E8                869          BRA         LOOP
00001826                           870  
00001826  43F9 000028D3            871  opCMPIL LEA         dispLong, A1        ; Display byte
0000182C  103C 000E                872          MOVE.B      #14, D0             ; command for trap call to display message
00001830  4E4F                     873          TRAP        #15                 ; trap call
00001832                           874          
00001832  43F9 0000283A            875          LEA         space, A1           ; Display space
00001838  103C 000E                876          MOVE.B      #14, D0             ; command for trap call to display message
0000183C  4E4F                     877          TRAP        #15                 ; trap call
0000183E                           878          
0000183E  4242                     879          CLR         D2
00001840  1401                     880          MOVE.B      D1,D2
00001842  E642                     881          ASR         #three,D2
00001844  C47C 0007                882          AND         #seven,D2
00001848  4243                     883          CLR         D3        
0000184A  1601                     884          MOVE.B      D1,D3
0000184C  C67C 0007                885          AND         #seven,D3
00001850                           886          
00001850  4241                     887          CLR         D1
00001852  3218                     888          MOVE.W      (A0)+, D1
00001854                           889          
00001854  43F9 0000283D            890          LEA         hashTag, A1           ; Display space
0000185A  103C 000E                891          MOVE.B      #14, D0             ; command for trap call to display message
0000185E  4E4F                     892          TRAP        #15                 ; trap call
00001860                           893          
00001860  103C 0003                894          MOVE.B      #3, D0
00001864  4E4F                     895          TRAP        #15
00001866                           896          
00001866  43F9 00002841            897          LEA         comma, A1           ; Display space
0000186C  103C 000E                898          MOVE.B      #14, D0             ; command for trap call to display message
00001870  4E4F                     899          TRAP        #15                 ; trap call
00001872                           900          
00001872  4EB9 0000215E            901          JSR         printEA
00001878                           902          
00001878  43F9 00002836            903          LEA         newLine, A1           ; Display space
0000187E  103C 000E                904          MOVE.B      #14, D0             ; command for trap call to display message
00001882  4E4F                     905          TRAP        #15                 ; trap call
00001884                           906          
00001884  6000 F786                907          BRA         LOOP
00001888                           908  
00001888  43F9 00002854            909  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000188E  103C 000E                910                  MOVE.B      #14, D0             ; command for trap call to display message
00001892  4E4F                     911                  TRAP        #15                 ; trap call
00001894                           912  
00001894  43F9 0000283A            913                  LEA         space, A1           ; Display space
0000189A  103C 000E                914                  MOVE.B      #14, D0             ; command for trap call to display message
0000189E  4E4F                     915                  TRAP        #15                 ; trap call
000018A0                           916                  
000018A0  4242                     917                  CLR         D2
000018A2  1218                     918                  MOVE.B      (A0)+, D1
000018A4  1401                     919                  MOVE.B      D1,D2               ; copy data over
000018A6  E642                     920                  ASR         #three,D2           ; Shift to the right to remove register
000018A8  C47C 0007                921                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
000018AC                           922                  
000018AC  4243                     923                  CLR         D3                  ; Clear D3 so we can move D1 in
000018AE  1601                     924                  MOVE.B      D1,D3               ; Move othr byte in
000018B0  C67C 0007                925                  AND         #seven,D3           ; Set everything besides register to 0
000018B4                           926                  
000018B4  4241                     927                  CLR         D1
000018B6  3218                     928                  MOVE.W      (A0)+, D1
000018B8                           929                 
000018B8                           930                  
000018B8  43F9 0000283D            931                  LEA         hashTag, A1           ; Display space
000018BE  103C 000E                932                  MOVE.B      #14, D0             ; command for trap call to display message
000018C2  4E4F                     933                  TRAP        #15                 ; trap call
000018C4                           934          
000018C4  103C 0003                935                  MOVE.B      #3, D0
000018C8  4E4F                     936                  TRAP        #15
000018CA                           937          
000018CA  43F9 00002841            938                  LEA         comma, A1           ; Display space
000018D0  103C 000E                939                  MOVE.B      #14, D0             ; command for trap call to display message
000018D4  4E4F                     940                  TRAP        #15                 ; trap call
000018D6                           941                  
000018D6  4EB9 0000215E            942                  JSR         printEA
000018DC                           943          
000018DC  43F9 00002836            944                  LEA         newLine, A1           ; Display space
000018E2  103C 000E                945                  MOVE.B      #14, D0             ; command for trap call to display message
000018E6  4E4F                     946                  TRAP        #15                 ; trap call
000018E8                           947                  
000018E8                           948                  
000018E8  6000 F722                949                  BRA         LOOP                
000018EC                           950          
000018EC                           951  opDynBCLR       
000018EC  4241                     952                  CLR         D1
000018EE  1218                     953                  MOVE.B      (A0)+,D1            ; Copy second byte in
000018F0  1601                     954                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
000018F2  E243                     955                  ASR         #one,D3             ; Shift register over to the end
000018F4  C67C 0007                956                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
000018F8                           957                  
000018F8  1401                     958                  MOVE.B      D1,D2
000018FA  EC42                     959                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
000018FC  B47C 0002                960                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
00001900  6600 0F30                961                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
00001904                           962  
00001904                           963                  
00001904  43F9 00002854            964                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
0000190A  103C 000E                965                  MOVE.B      #14, D0             ; command for trap call to display message
0000190E  4E4F                     966                  TRAP        #15                 ; trap call  
00001910                           967                  
00001910  43F9 0000283A            968                  LEA         space, A1           ; Display space
00001916  103C 000E                969                  MOVE.B      #14, D0             ; command for trap call to display message
0000191A  4E4F                     970                  TRAP        #15                 ; trap call
0000191C                           971                  
0000191C  143C 0000                972                  MOVE.B      #zero,D2                
00001920  4EB9 0000215E            973                  JSR         printEA
00001926                           974                  
00001926  43F9 00002841            975                  LEA         comma, A1           ; Display space
0000192C  103C 000E                976                  MOVE.B      #14, D0             ; command for trap call to display message
00001930  4E4F                     977                  TRAP        #15                 ; trap call
00001932                           978                  
00001932  4242                     979                  CLR         D2
00001934  1401                     980                  MOVE.B      D1,D2               ; Using D2 to store EA mode
00001936  E642                     981                  ASR         #three,D2           ; Remove/shift the register out
00001938  C47C 0007                982                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
0000193C                           983                  
0000193C  4243                     984                  CLR         D3                  ; Clearing D3 to avoid mashing data
0000193E  1601                     985                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
00001940  C67C 0007                986                  AND         #seven,D3           ; Change all bits except for register bits to 0
00001944                           987                  
00001944                           988  
00001944  4EB9 0000215E            989                  JSR         printEA
0000194A                           990          
0000194A  43F9 00002836            991                  LEA         newLine, A1           ; Display space
00001950  103C 000E                992                  MOVE.B      #14, D0             ; command for trap call to display message
00001954  4E4F                     993                  TRAP        #15                 ; trap call            
00001956                           994  
00001956                           995  
00001956  6000 F6B4                996                  BRA         LOOP                ; go back to the loop
0000195A                           997   
0000195A                           998  opMOVEB 
0000195A  43F9 00002859            999          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
00001960  103C 000E               1000          MOVE.B      #14, D0             ; command for trap call to display message
00001964  4E4F                    1001          TRAP        #15                 ; trap call
00001966  43F9 000028CD           1002          LEA         dispByte, A1        ; display byte
0000196C  103C 000E               1003          MOVE.B      #14, D0             ; command for trap call to display message
00001970  4E4F                    1004          TRAP        #15                 ; trap call
00001972  43F9 0000283A           1005          LEA         space, A1           ; create spaces
00001978  103C 000E               1006          MOVE.B      #14, D0             ; command for trap call to display message
0000197C  4E4F                    1007          TRAP        #15                 ; trap call
0000197E                          1008          
0000197E                          1009          
0000197E  4245                    1010          CLR         D5                  ; Clear D5
00001980  1A01                    1011          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001982  E245                    1012          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001984  CA7C 0007               1013          AND         #seven,D5
00001988                          1014          
00001988  4244                    1015          CLR         D4                  ; Clear out D4
0000198A  1801                    1016          MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000198C  C87C 0001               1017          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001990                          1018          
00001990  4241                    1019          CLR          D1
00001992  4242                    1020          CLR          D2
00001994  1218                    1021          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001996  1401                    1022          MOVE.B      D1,D2
00001998  EC42                    1023          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000199A  D842                    1024          ADD         D2,D4               ; Adds the remaining bits to D4
0000199C                          1025          
0000199C  4242                    1026          CLR         D2
0000199E  1401                    1027          MOVE.B      D1,D2               ; Copy new byte over to D2
000019A0  E642                    1028          ASR         #three,D2           ; Shift source register out
000019A2  C47C 0007               1029          AND         #seven,D2           ; Set everything to 0 except for the mode
000019A6                          1030          
000019A6  4243                    1031          CLR         D3
000019A8  1601                    1032          MOVE.B      D1,D3
000019AA  C67C 0007               1033          AND         #seven,D3
000019AE                          1034          
000019AE  4EB9 0000215E           1035          JSR         printEA
000019B4                          1036          
000019B4  43F9 00002841           1037          LEA         comma, A1           ; Display space
000019BA  103C 000E               1038          MOVE.B      #14, D0             ; command for trap call to display message
000019BE  4E4F                    1039          TRAP        #15                 ; trap call
000019C0                          1040          
000019C0  4242                    1041          CLR         D2
000019C2  4243                    1042          CLR         D3
000019C4  1404                    1043          MOVE.B      D4,D2
000019C6  1605                    1044          MOVE.B      D5,D3
000019C8                          1045          
000019C8  4EB9 0000215E           1046          JSR         printEA
000019CE                          1047          
000019CE                          1048          
000019CE  43F9 00002836           1049          LEA         newLine, A1           ; Display space
000019D4  103C 000E               1050          MOVE.B      #14, D0             ; command for trap call to display message
000019D8  4E4F                    1051          TRAP        #15                 ; trap call            
000019DA                          1052  
000019DA                          1053  
000019DA  6000 F630               1054          BRA         LOOP                ; go back to the loop
000019DE                          1055          
000019DE                          1056  opMOVEL     
000019DE                          1057          
000019DE  4245                    1058              CLR         D5                  ; Clear D5
000019E0  1A01                    1059              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
000019E2  E245                    1060              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
000019E4  CA7C 0007               1061              AND         #seven,D5
000019E8                          1062          
000019E8  4244                    1063              CLR         D4                  ; Clear out D4
000019EA  1801                    1064              MOVE.B      D1,D4               ; Copy byte over to store destination mode
000019EC  C87C 0001               1065              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
000019F0                          1066          
000019F0  4241                    1067              CLR          D1
000019F2  4242                    1068              CLR          D2
000019F4  1218                    1069              MOVE.B      (A0)+,D1            ; Copy byte into D1
000019F6  1401                    1070              MOVE.B      D1,D2
000019F8  EC42                    1071              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000019FA  D842                    1072              ADD         D2,D4               ; Adds the remaining bits to D4
000019FC                          1073          
000019FC  B87C 0001               1074              CMP         #one,D4             ; Check if it is MOVEA
00001A00  6700 006C               1075              BEQ         opMOVEAL            ; If it is, branch off
00001A04                          1076              
00001A04  43F9 00002859           1077              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001A0A  103C 000E               1078              MOVE.B      #14, D0             ; command for trap call to display message
00001A0E  4E4F                    1079              TRAP        #15                 ; trap call  
00001A10                          1080              
00001A10                          1081              
00001A10  43F9 000028D3           1082              LEA         dispLong,A1
00001A16  103C 000E               1083              MOVE.B      #14, D0             ; command for trap call to display message
00001A1A  4E4F                    1084              TRAP        #15                 ; trap call
00001A1C                          1085              
00001A1C  43F9 0000283A           1086              LEA         space, A1           ; create spaces
00001A22  103C 000E               1087              MOVE.B      #14, D0             ; command for trap call to display message
00001A26  4E4F                    1088              TRAP        #15                 ; trap call
00001A28                          1089          
00001A28  4242                    1090              CLR         D2
00001A2A  1401                    1091              MOVE.B      D1,D2               ; Copy new byte over to D2
00001A2C  E642                    1092              ASR         #three,D2           ; Shift source register out
00001A2E  C47C 0007               1093              AND         #seven,D2           ; Set everything to 0 except for the mode
00001A32                          1094          
00001A32  4243                    1095              CLR         D3
00001A34  1601                    1096              MOVE.B      D1,D3
00001A36  C67C 0007               1097              AND         #seven,D3
00001A3A                          1098              
00001A3A  4241                    1099              CLR         D1                  ; Clear D1
00001A3C  2218                    1100              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
00001A3E                          1101              
00001A3E  4EB9 0000215E           1102              JSR         printEA
00001A44                          1103              
00001A44  43F9 00002841           1104              LEA         comma, A1           ; Display comma
00001A4A  103C 000E               1105              MOVE.B      #14, D0             ; command for trap call to display message
00001A4E  4E4F                    1106              TRAP        #15                 ; trap call
00001A50                          1107          
00001A50  4242                    1108              CLR         D2
00001A52  4243                    1109              CLR         D3
00001A54  1404                    1110              MOVE.B      D4,D2
00001A56  1605                    1111              MOVE.B      D5,D3
00001A58                          1112              
00001A58                          1113  
00001A58                          1114              
00001A58  4EB9 0000215E           1115              JSR         printEA
00001A5E                          1116          
00001A5E                          1117          
00001A5E  43F9 00002836           1118              LEA         newLine, A1           ; Display space
00001A64  103C 000E               1119              MOVE.B      #14, D0             ; command for trap call to display message
00001A68  4E4F                    1120              TRAP        #15                 ; trap call            
00001A6A                          1121  
00001A6A                          1122  
00001A6A  6000 F5A0               1123              BRA         LOOP                ; go back to the loop
00001A6E                          1124              
00001A6E                          1125  opMOVEAL
00001A6E                          1126  
00001A6E  43F9 0000285E           1127              LEA         MOVEAmatch,A1
00001A74  103C 000E               1128              MOVE.B      #14, D0             ; command for trap call to display message
00001A78  4E4F                    1129              TRAP        #15                 ; trap call
00001A7A                          1130              
00001A7A  43F9 000028D3           1131              LEA         dispLong,A1
00001A80  103C 000E               1132              MOVE.B      #14, D0             ; command for trap call to display message
00001A84  4E4F                    1133              TRAP        #15                 ; trap call
00001A86                          1134              
00001A86                          1135  
00001A86  43F9 0000283A           1136              LEA         space, A1           ; create spaces
00001A8C  103C 000E               1137              MOVE.B      #14, D0             ; command for trap call to display message
00001A90  4E4F                    1138              TRAP        #15                 ; trap call
00001A92                          1139              
00001A92  4242                    1140              CLR         D2
00001A94  1401                    1141              MOVE.B      D1,D2               ; Copy new byte over to D2
00001A96  E642                    1142              ASR         #three,D2           ; Shift source register out
00001A98  C47C 0007               1143              AND         #seven,D2           ; Set everything to 0 except for the mode
00001A9C                          1144          
00001A9C  4243                    1145              CLR         D3
00001A9E  1601                    1146              MOVE.B      D1,D3
00001AA0  C67C 0007               1147              AND         #seven,D3
00001AA4                          1148              
00001AA4  4241                    1149              CLR         D1                  ; Clear D1
00001AA6  3218                    1150              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001AA8                          1151              
00001AA8                          1152              
00001AA8  4EB9 0000215E           1153              JSR         printEA
00001AAE                          1154              
00001AAE  43F9 00002841           1155              LEA         comma, A1           ; Display comma
00001AB4  103C 000E               1156              MOVE.B      #14, D0             ; command for trap call to display message
00001AB8  4E4F                    1157              TRAP        #15                 ; trap call
00001ABA                          1158  
00001ABA  4242                    1159              CLR         D2
00001ABC  4243                    1160              CLR         D3
00001ABE  1404                    1161              MOVE.B      D4,D2
00001AC0  1605                    1162              MOVE.B      D5,D3
00001AC2                          1163          
00001AC2  4EB9 0000215E           1164              JSR         printEA
00001AC8                          1165          
00001AC8                          1166          
00001AC8  43F9 00002836           1167              LEA         newLine, A1           ; Display space
00001ACE  103C 000E               1168              MOVE.B      #14, D0             ; command for trap call to display message
00001AD2  4E4F                    1169              TRAP        #15                 ; trap call            
00001AD4                          1170  
00001AD4                          1171  
00001AD4  6000 F536               1172              BRA         LOOP                ; go back to the loop
00001AD8                          1173  
00001AD8                          1174  opMOVEW
00001AD8                          1175          
00001AD8  4245                    1176              CLR         D5                  ; Clear D5
00001ADA  1A01                    1177              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001ADC  E245                    1178              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001ADE  CA7C 0007               1179              AND         #seven,D5
00001AE2                          1180          
00001AE2  4244                    1181              CLR         D4                  ; Clear out D4
00001AE4  1801                    1182              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001AE6  C87C 0001               1183              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001AEA                          1184          
00001AEA  4241                    1185              CLR          D1
00001AEC  4242                    1186              CLR          D2
00001AEE  1218                    1187              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001AF0  1401                    1188              MOVE.B      D1,D2
00001AF2  EC42                    1189              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001AF4  D842                    1190              ADD         D2,D4               ; Adds the remaining bits to D4
00001AF6                          1191          
00001AF6  B87C 0001               1192              CMP         #one,D4             ; Check if it is MOVEA
00001AFA  6700 006C               1193              BEQ         opMOVEAW            ; If it is, branch off
00001AFE                          1194              
00001AFE  43F9 00002859           1195              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001B04  103C 000E               1196              MOVE.B      #14, D0             ; command for trap call to display message
00001B08  4E4F                    1197              TRAP        #15                 ; trap call  
00001B0A                          1198              
00001B0A  43F9 000028D0           1199              LEA         dispWord,A1
00001B10  103C 000E               1200              MOVE.B      #14, D0             ; command for trap call to display message
00001B14  4E4F                    1201              TRAP        #15                 ; trap call
00001B16                          1202              
00001B16  43F9 0000283A           1203              LEA         space, A1           ; create spaces
00001B1C  103C 000E               1204              MOVE.B      #14, D0             ; command for trap call to display message
00001B20  4E4F                    1205              TRAP        #15                 ; trap call
00001B22                          1206          
00001B22  4242                    1207              CLR         D2
00001B24  1401                    1208              MOVE.B      D1,D2               ; Copy new byte over to D2
00001B26  E642                    1209              ASR         #three,D2           ; Shift source register out
00001B28  C47C 0007               1210              AND         #seven,D2           ; Set everything to 0 except for the mode
00001B2C                          1211          
00001B2C  4243                    1212              CLR         D3
00001B2E  1601                    1213              MOVE.B      D1,D3
00001B30  C67C 0007               1214              AND         #seven,D3
00001B34                          1215              
00001B34  4241                    1216              CLR         D1                  ; Clear D1
00001B36  3218                    1217              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001B38                          1218              
00001B38  4EB9 0000215E           1219              JSR         printEA
00001B3E                          1220              
00001B3E  43F9 00002841           1221              LEA         comma, A1           ; Display comma
00001B44  103C 000E               1222              MOVE.B      #14, D0             ; command for trap call to display message
00001B48  4E4F                    1223              TRAP        #15                 ; trap call
00001B4A                          1224          
00001B4A  4242                    1225              CLR         D2
00001B4C  4243                    1226              CLR         D3
00001B4E  1404                    1227              MOVE.B      D4,D2
00001B50  1605                    1228              MOVE.B      D5,D3
00001B52                          1229              
00001B52                          1230  
00001B52                          1231              
00001B52  4EB9 0000215E           1232              JSR         printEA
00001B58                          1233          
00001B58                          1234          
00001B58  43F9 00002836           1235              LEA         newLine, A1           ; Display space
00001B5E  103C 000E               1236              MOVE.B      #14, D0             ; command for trap call to display message
00001B62  4E4F                    1237              TRAP        #15                 ; trap call            
00001B64                          1238  
00001B64                          1239  
00001B64  6000 F4A6               1240              BRA         LOOP                ; go back to the loop
00001B68                          1241  opMOVEAW  
00001B68  43F9 0000285E           1242              LEA         MOVEAmatch,A1
00001B6E  103C 000E               1243              MOVE.B      #14, D0             ; command for trap call to display message
00001B72  4E4F                    1244              TRAP        #15                 ; trap call
00001B74                          1245              
00001B74  43F9 000028D0           1246              LEA         dispWord,A1
00001B7A  103C 000E               1247              MOVE.B      #14, D0             ; command for trap call to display message
00001B7E  4E4F                    1248              TRAP        #15                 ; trap call
00001B80                          1249              
00001B80                          1250  
00001B80  43F9 0000283A           1251              LEA         space, A1           ; create spaces
00001B86  103C 000E               1252              MOVE.B      #14, D0             ; command for trap call to display message
00001B8A  4E4F                    1253              TRAP        #15                 ; trap call
00001B8C                          1254              
00001B8C  4242                    1255              CLR         D2
00001B8E  1401                    1256              MOVE.B      D1,D2               ; Copy new byte over to D2
00001B90  E642                    1257              ASR         #three,D2           ; Shift source register out
00001B92  C47C 0007               1258              AND         #seven,D2           ; Set everything to 0 except for the mode
00001B96                          1259          
00001B96  4243                    1260              CLR         D3
00001B98  1601                    1261              MOVE.B      D1,D3
00001B9A  C67C 0007               1262              AND         #seven,D3
00001B9E                          1263              
00001B9E  4241                    1264              CLR         D1                  ; Clear D1
00001BA0  3218                    1265              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001BA2                          1266              
00001BA2                          1267              
00001BA2  4EB9 0000215E           1268              JSR         printEA
00001BA8                          1269              
00001BA8  43F9 00002841           1270              LEA         comma, A1           ; Display comma
00001BAE  103C 000E               1271              MOVE.B      #14, D0             ; command for trap call to display message
00001BB2  4E4F                    1272              TRAP        #15                 ; trap call
00001BB4                          1273  
00001BB4  4242                    1274              CLR         D2
00001BB6  4243                    1275              CLR         D3
00001BB8  1404                    1276              MOVE.B      D4,D2
00001BBA  1605                    1277              MOVE.B      D5,D3
00001BBC                          1278          
00001BBC  4EB9 0000215E           1279              JSR         printEA
00001BC2                          1280          
00001BC2                          1281          
00001BC2  43F9 00002836           1282              LEA         newLine, A1           ; Display space
00001BC8  103C 000E               1283              MOVE.B      #14, D0             ; command for trap call to display message
00001BCC  4E4F                    1284              TRAP        #15                 ; trap call            
00001BCE                          1285  
00001BCE                          1286  
00001BCE  6000 F43C               1287              BRA         LOOP                ; go back to the loop
00001BD2                          1288  
00001BD2                          1289  opNEG   
00001BD2  43F9 00002864           1290              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001BD8  103C 000E               1291              MOVE.B      #14, D0             ; command for trap call to display message
00001BDC  4E4F                    1292              TRAP        #15                 ; trap call
00001BDE                          1293          
00001BDE                          1294          
00001BDE  1218                    1295              MOVE.B      (A0)+, D1
00001BE0  1401                    1296              MOVE.B      D1,D2               ; copy data over
00001BE2  EC42                    1297              ASR         #six,D2
00001BE4                          1298              
00001BE4  B47C 0000               1299              CMP         #zero,D2
00001BE8  6700 0016               1300              BEQ         opNEGB
00001BEC  B47C 0001               1301              CMP         #one,D2
00001BF0  6700 004E               1302              BEQ         opNEGL
00001BF4  B47C 0002               1303              CMP         #two,D2
00001BF8  6700 0086               1304              BEQ         opNEGW
00001BFC  6000 0BAA               1305              BRA         INVALID
00001C00                          1306  opNEGB
00001C00                          1307  
00001C00  43F9 000028CD           1308              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001C06  103C 000E               1309              MOVE.B      #14, D0             ; command for trap call to display message
00001C0A  4E4F                    1310              TRAP        #15                 ; trap call
00001C0C                          1311          
00001C0C  43F9 0000283A           1312              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001C12  103C 000E               1313              MOVE.B      #14, D0             ; command for trap call to display message
00001C16  4E4F                    1314              TRAP        #15                 ; trap call
00001C18                          1315          
00001C18  4242                    1316              CLR         D2                  ; Clear Data register 2
00001C1A  3401                    1317              MOVE        D1,D2               ; Move byte into D2
00001C1C  E642                    1318              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001C1E  C47C 0007               1319              AND         #seven,D2           ; Stores mode
00001C22                          1320              
00001C22  4243                    1321              CLR         D3
00001C24  3601                    1322              MOVE        D1,D3
00001C26  C67C 0007               1323              AND         #seven,D3
00001C2A                          1324          
00001C2A  4EB9 0000215E           1325              JSR         printEA
00001C30                          1326                  
00001C30  43F9 00002836           1327              LEA         newLine, A1           ; Display space
00001C36  103C 000E               1328              MOVE.B      #14, D0             ; command for trap call to display message
00001C3A  4E4F                    1329              TRAP        #15                 ; trap call  
00001C3C                          1330          
00001C3C  6000 F3CE               1331              BRA         LOOP
00001C40                          1332                  
00001C40                          1333  
00001C40                          1334  opNEGL
00001C40                          1335  
00001C40  43F9 000028D3           1336              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001C46  103C 000E               1337              MOVE.B      #14, D0             ; command for trap call to display message
00001C4A  4E4F                    1338              TRAP        #15                 ; trap call
00001C4C                          1339  
00001C4C  43F9 0000283A           1340              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001C52  103C 000E               1341              MOVE.B      #14, D0             ; command for trap call to display message
00001C56  4E4F                    1342              TRAP        #15                 ; trap call
00001C58                          1343                  
00001C58  4242                    1344              CLR         D2                  ; Clear Data register 2
00001C5A  3401                    1345              MOVE        D1,D2               ; Move byte into D2
00001C5C  E642                    1346              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001C5E  C47C 0007               1347              AND         #seven,D2           ; Stores mode
00001C62                          1348          
00001C62  4243                    1349              CLR         D3
00001C64  3601                    1350              MOVE        D1,D3
00001C66  C67C 0007               1351              AND         #seven,D3
00001C6A                          1352          
00001C6A  4EB9 0000215E           1353              JSR         printEA
00001C70                          1354                      
00001C70  43F9 00002836           1355              LEA         newLine, A1         ; Display space
00001C76  103C 000E               1356              MOVE.B      #14, D0             ; command for trap call to display message
00001C7A  4E4F                    1357              TRAP        #15                 ; trap call  
00001C7C                          1358          
00001C7C  6000 F38E               1359              BRA         LOOP
00001C80                          1360          
00001C80                          1361  
00001C80                          1362  opNEGW
00001C80                          1363  
00001C80  43F9 000028D0           1364              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001C86  103C 000E               1365              MOVE.B      #14, D0             ; command for trap call to display message
00001C8A  4E4F                    1366              TRAP        #15                 ; trap call
00001C8C                          1367          
00001C8C  43F9 0000283A           1368              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001C92  103C 000E               1369              MOVE.B      #14, D0             ; command for trap call to display message
00001C96  4E4F                    1370              TRAP        #15                 ; trap call        
00001C98                          1371                  
00001C98  4242                    1372              CLR         D2                  ; Clear Data register 2
00001C9A  3401                    1373              MOVE        D1,D2               ; Move byte into D2
00001C9C  E642                    1374              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001C9E  C47C 0007               1375              AND         #seven,D2           ; Stores mode
00001CA2                          1376          
00001CA2  4243                    1377              CLR         D3
00001CA4  3601                    1378              MOVE        D1,D3
00001CA6  C67C 0007               1379              AND         #seven,D3
00001CAA                          1380          
00001CAA  4EB9 0000215E           1381              JSR         printEA
00001CB0                          1382              
00001CB0  43F9 00002836           1383              LEA         newLine, A1           ; Display space
00001CB6  103C 000E               1384              MOVE.B      #14, D0             ; command for trap call to display message
00001CBA  4E4F                    1385              TRAP        #15                 ; trap call  
00001CBC                          1386          
00001CBC  6000 F34E               1387              BRA         LOOP
00001CC0                          1388  
00001CC0                          1389  opRTSJSR
00001CC0                          1390          
00001CC0  1218                    1391              MOVE.B      (A0)+, D1
00001CC2                          1392              
00001CC2  1401                    1393              MOVE.B      D1,D2               ; copy data over
00001CC4  B47C 0075               1394              CMP         #117,D2
00001CC8  6700 0050               1395              BEQ         opRTS
00001CCC                          1396              
00001CCC  EC42                    1397              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
00001CCE  B47C 0002               1398              CMP         #two,D2             ; Checking if it is JSR
00001CD2  6700 0006               1399              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001CD6                          1400  
00001CD6  6000 0AD0               1401              BRA         invalid
00001CDA                          1402  
00001CDA                          1403  opJSR
00001CDA                          1404                        
00001CDA  43F9 0000286C           1405              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001CE0  103C 000E               1406              MOVE.B      #14, D0             ; command for trap call to display message
00001CE4  4E4F                    1407              TRAP        #15                 ; trap call
00001CE6                          1408              
00001CE6  43F9 0000283A           1409              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001CEC  103C 000E               1410              MOVE.B      #14, D0             ; command for trap call to display message
00001CF0  4E4F                    1411              TRAP        #15                 ; trap call
00001CF2                          1412              
00001CF2  4242                    1413              CLR         D2
00001CF4  4243                    1414              CLR         D3
00001CF6                          1415              
00001CF6  1401                    1416              MOVE.B      D1,D2
00001CF8  E642                    1417              ASR         #three,D2
00001CFA  C47C 0007               1418              AND         #seven,D2
00001CFE                          1419              
00001CFE  1601                    1420              MOVE.B      D1,D3
00001D00  C67C 0007               1421              AND         #seven,D3
00001D04                          1422              
00001D04  4EB9 0000215E           1423              JSR         printEA
00001D0A                          1424              
00001D0A  43F9 00002836           1425              LEA         newLine, A1           ; Display space
00001D10  103C 000E               1426              MOVE.B      #14, D0             ; command for trap call to display message
00001D14  4E4F                    1427              TRAP        #15                 ; trap call  
00001D16                          1428              
00001D16  6000 F2F4               1429              BRA         loop            
00001D1A                          1430  opRTS
00001D1A                          1431  
00001D1A  43F9 00002868           1432              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
00001D20  103C 000E               1433              MOVE.B      #14, D0             ; command for trap call to display message
00001D24  4E4F                    1434              TRAP        #15                 ; trap call
00001D26                          1435              
00001D26  43F9 00002836           1436              LEA         newLine, A1           ; Display space
00001D2C  103C 000E               1437              MOVE.B      #14, D0             ; command for trap call to display message
00001D30  4E4F                    1438              TRAP        #15                 ; trap call 
00001D32                          1439              
00001D32  6000 F2D8               1440              BRA         loop
00001D36                          1441  
00001D36                          1442  opMOVEMLEA
00001D36  4242                    1443              CLR         D2                  ; Clear D2
00001D38  1401                    1444              MOVE.B      D1,D2               ; Copy byte over
00001D3A  C47C 000F               1445              AND         #secNib,D2          ; Check only the second nibble
00001D3E  B47C 000C               1446              CMP         #twelve,D2          ; Compare the second nibble to twelve
00001D42  6700 000E               1447              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
00001D46  B47C 0008               1448              CMP         #eight,D2           ; Compare the second nibble to eight
00001D4A  6700 0006               1449              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
00001D4E  6000 001A               1450              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
00001D52                          1451              
00001D52                          1452  opMOVEM
00001D52                          1453  
00001D52  43F9 00002868           1454              LEA         RTSMatch, A1       ; we know that the opcode will be MOVEM, so load A1 to print message
00001D58  103C 000E               1455              MOVE.B      #14, D0             ; command for trap call to display message
00001D5C  4E4F                    1456              TRAP        #15                 ; trap call
00001D5E                          1457              
00001D5E  4244                    1458              CLR         D4                  ; Clearing D4 to store dr field
00001D60  1801                    1459              MOVE.B      D1,D4               ; Moving byte to find dr field
00001D62  E444                    1460              ASR         #two,D4             ; Moving dr field to readable spot
00001D64  C87C 0001               1461              AND         #one,D4             ; seting everything except dr to 0
00001D68                          1462              
00001D68  1218                    1463              MOVE.B      (A0)+, D1
00001D6A                          1464              
00001D6A                          1465  
00001D6A                          1466  opLEA
00001D6A                          1467  
00001D6A                          1468  ***********************************************************************************************************
00001D6A                          1469  *
00001D6A                          1470  *               SUBQ OPCODE
00001D6A                          1471  *
00001D6A                          1472  ***********************************************************************************************************
00001D6A                          1473  
00001D6A                          1474  opSUBQ      
00001D6A  43F9 0000287A           1475              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
00001D70  103C 000E               1476              MOVE.B      #14, D0             ; command for trap call to display message
00001D74  4E4F                    1477              TRAP        #15                 ; trap call
00001D76                          1478              
00001D76  1401                    1479              MOVE.B      D1,D2
00001D78  EE42                    1480              ASR         #seven,D2           ; Move bits 7 places over to find opmode
00001D7A  C47C 0007               1481              AND         #$07,D2
00001D7E                          1482              
00001D7E  4242                    1483              CLR         D2
00001D80                          1484              ; These are for EA to Dn direction
00001D80  B43C 0000               1485              CMP.B       #zero,D2
00001D84  6700 0012               1486              BEQ         opSUBQB             ; Byte in size
00001D88  B43C 0001               1487              CMP.B       #one,D2
00001D8C  6700 0064               1488              BEQ         opSUBQW             ; Word in size
00001D90  B43C 0002               1489              CMP.B       #two,D2
00001D94  6700 00B6               1490              BEQ         opSUBQL             ; Long in size
00001D98                          1491              
00001D98                          1492              
00001D98  43F9 000028CD           1493  opSUBQB     LEA         dispByte,A1
00001D9E  103C 000E               1494              MOVE.B      #14,D0
00001DA2  4E4F                    1495              TRAP        #15
00001DA4                          1496              
00001DA4  43F9 0000283A           1497              LEA         space, A1           ; Display space
00001DAA  103C 000E               1498              MOVE.B      #14, D0             ; command for trap call to display message
00001DAE  4E4F                    1499              TRAP        #15                 ; trap call         
00001DB0                          1500              
00001DB0  1401                    1501              MOVE.B      D1,D2
00001DB2  E642                    1502              ASR         #3,D2
00001DB4  C47C 0007               1503              AND         #$07,D2
00001DB8  3601                    1504              MOVE.W      D1,D3
00001DBA  C67C 0007               1505              AND         #$07,D3
00001DBE  4EB9 0000215E           1506              JSR         printEA         ; Determines the "left" operand register
00001DC4                          1507              
00001DC4  43F9 00002841           1508              LEA         comma, A1           ; Display space
00001DCA  103C 000E               1509              MOVE.B      #14, D0             ; command for trap call to display message
00001DCE  4E4F                    1510              TRAP        #15                 ; trap call
00001DD0                          1511              
00001DD0  4242                    1512              CLR         D2
00001DD2  3601                    1513              MOVE.W      D1,D3
00001DD4  E043                    1514              ASR         #eight,D3
00001DD6  E243                    1515              ASR         #one,D3
00001DD8  C67C 0007               1516              AND         #$07,D3
00001DDC  4EB9 0000215E           1517              JSR         printEA
00001DE2                          1518              
00001DE2  43F9 00002836           1519              LEA         newLine,A1
00001DE8  103C 000E               1520              MOVE.B      #14,D0
00001DEC  4E4F                    1521              TRAP        #15
00001DEE                          1522              
00001DEE  6000 F21C               1523              BRA         LOOP
00001DF2                          1524              
00001DF2                          1525              
00001DF2  43F9 000028D0           1526  opSUBQW     LEA         dispWord,A1
00001DF8  103C 000E               1527              MOVE.B      #14,D0
00001DFC  4E4F                    1528              TRAP        #15
00001DFE                          1529              
00001DFE  43F9 0000283A           1530              LEA         space, A1           ; Display space
00001E04  103C 000E               1531              MOVE.B      #14, D0             ; command for trap call to display message
00001E08  4E4F                    1532              TRAP        #15                 ; trap call         
00001E0A                          1533              
00001E0A  1401                    1534              MOVE.B      D1,D2
00001E0C  E642                    1535              ASR         #3,D2
00001E0E  C47C 0007               1536              AND         #$07,D2
00001E12  3601                    1537              MOVE.W      D1,D3
00001E14  C67C 0007               1538              AND         #$07,D3
00001E18  4EB9 0000215E           1539              JSR         printEA         ; Determines the "left" operand register
00001E1E                          1540              
00001E1E  43F9 00002841           1541              LEA         comma, A1           ; Display space
00001E24  103C 000E               1542              MOVE.B      #14, D0             ; command for trap call to display message
00001E28  4E4F                    1543              TRAP        #15                 ; trap call
00001E2A                          1544              
00001E2A  4242                    1545              CLR         D2
00001E2C  3601                    1546              MOVE.W      D1,D3
00001E2E  E043                    1547              ASR         #eight,D3
00001E30  E243                    1548              ASR         #one,D3
00001E32  C67C 0007               1549              AND         #$07,D3
00001E36  4EB9 0000215E           1550              JSR         printEA
00001E3C                          1551              
00001E3C  43F9 00002836           1552              LEA         newLine,A1
00001E42  103C 000E               1553              MOVE.B      #14,D0
00001E46  4E4F                    1554              TRAP        #15
00001E48                          1555              
00001E48  6000 F1C2               1556              BRA         LOOP
00001E4C                          1557              
00001E4C  43F9 000028D3           1558  opSUBQL     LEA         dispLong,A1
00001E52  103C 000E               1559              MOVE.B      #14,D0
00001E56  4E4F                    1560              TRAP        #15
00001E58                          1561              
00001E58  43F9 0000283A           1562              LEA         space, A1           ; Display space
00001E5E  103C 000E               1563              MOVE.B      #14, D0             ; command for trap call to display message
00001E62  4E4F                    1564              TRAP        #15                 ; trap call         
00001E64                          1565              
00001E64  1401                    1566              MOVE.B      D1,D2
00001E66  E642                    1567              ASR         #3,D2
00001E68  C47C 0007               1568              AND         #$07,D2
00001E6C  3601                    1569              MOVE.W      D1,D3
00001E6E  C67C 0007               1570              AND         #$07,D3
00001E72  4EB9 0000215E           1571              JSR         printEA         ; Determines the "left" operand register
00001E78                          1572              
00001E78  43F9 00002841           1573              LEA         comma, A1           ; Display space
00001E7E  103C 000E               1574              MOVE.B      #14, D0             ; command for trap call to display message
00001E82  4E4F                    1575              TRAP        #15                 ; trap call
00001E84                          1576              
00001E84  4242                    1577              CLR         D2
00001E86  3601                    1578              MOVE.W      D1,D3
00001E88  E043                    1579              ASR         #eight,D3
00001E8A  E243                    1580              ASR         #one,D3
00001E8C  C67C 0007               1581              AND         #$07,D3
00001E90  4EB9 0000215E           1582              JSR         printEA
00001E96                          1583              
00001E96  43F9 00002836           1584              LEA         newLine,A1
00001E9C  103C 000E               1585              MOVE.B      #14,D0
00001EA0  4E4F                    1586              TRAP        #15
00001EA2                          1587              
00001EA2  6000 F168               1588              BRA         LOOP
00001EA6                          1589              
00001EA6                          1590              
00001EA6  6000 F164               1591              BRA         LOOP            ; trap call
00001EAA                          1592  
00001EAA                          1593  ***********************************************************************************************************
00001EAA                          1594  *
00001EAA                          1595  *               BRA OPCODE
00001EAA                          1596  *
00001EAA                          1597  ***********************************************************************************************************
00001EAA                          1598              
00001EAA  43F9 0000287F           1599  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001EB0  103C 000E               1600          MOVE.B      #14, D0             ; command for trap call to display message
00001EB4  4E4F                    1601          TRAP        #15                 ; trap call
00001EB6                          1602          
00001EB6  4242                    1603          CLR         D2
00001EB8  4243                    1604          CLR         D3      
00001EBA                          1605  
00001EBA  43F9 0000283A           1606          LEA         space,A1
00001EC0  103C 000E               1607          MOVE.B      #14,D0
00001EC4  4E4F                    1608          TRAP        #15
00001EC6                          1609          
00001EC6  143C 0007               1610          MOVE.B      #seven,D2
00001ECA  1218                    1611          MOVE.B      (A0)+,D1
00001ECC  4EB9 0000215E           1612          JSR         printEA
00001ED2                          1613          
00001ED2  43F9 00002836           1614          LEA         newLine, A1           ; create new line
00001ED8  103C 000E               1615          MOVE.B      #14, D0             ; command for trap call to display message
00001EDC  4E4F                    1616          TRAP        #15                 ; trap call
00001EDE                          1617  
00001EDE  6000 F12C               1618          BRA         LOOP
00001EE2                          1619          
00001EE2                          1620          
00001EE2  43F9 00002883           1621  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001EE8  103C 000E               1622          MOVE.B      #14, D0             ; command for trap call to display message
00001EEC  4E4F                    1623          TRAP        #15                 ; trap call
00001EEE                          1624          
00001EEE  4242                    1625          CLR         D2
00001EF0  4243                    1626          CLR         D3      
00001EF2                          1627  
00001EF2  43F9 0000283A           1628          LEA         space,A1
00001EF8  103C 000E               1629          MOVE.B      #14,D0
00001EFC  4E4F                    1630          TRAP        #15
00001EFE                          1631          
00001EFE  143C 0007               1632          MOVE.B      #seven,D2
00001F02  1218                    1633          MOVE.B      (A0)+,D1
00001F04  4EB9 0000215E           1634          JSR         printEA
00001F0A                          1635          
00001F0A  43F9 00002836           1636          LEA         newLine, A1           ; create new line
00001F10  103C 000E               1637          MOVE.B      #14, D0             ; command for trap call to display message
00001F14  4E4F                    1638          TRAP        #15                 ; trap call
00001F16                          1639  
00001F16  43F9 00002887           1640  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001F1C  103C 000E               1641          MOVE.B      #14, D0             ; command for trap call to display message
00001F20  4E4F                    1642          TRAP        #15                 ; trap call
00001F22                          1643          
00001F22  4242                    1644          CLR         D2
00001F24  4243                    1645          CLR         D3      
00001F26                          1646  
00001F26  43F9 0000283A           1647          LEA         space,A1
00001F2C  103C 000E               1648          MOVE.B      #14,D0
00001F30  4E4F                    1649          TRAP        #15
00001F32                          1650          
00001F32  143C 0007               1651          MOVE.B      #seven,D2
00001F36  1218                    1652          MOVE.B      (A0)+,D1
00001F38  4EB9 0000215E           1653          JSR         printEA
00001F3E                          1654          
00001F3E  43F9 00002836           1655          LEA         newLine, A1           ; create new line
00001F44  103C 000E               1656          MOVE.B      #14, D0             ; command for trap call to display message
00001F48  4E4F                    1657          TRAP        #15                 ; trap call
00001F4A                          1658  
00001F4A  43F9 0000288B           1659  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001F50  103C 000E               1660          MOVE.B      #14, D0             ; command for trap call to display message
00001F54  4E4F                    1661          TRAP        #15                 ; trap call
00001F56                          1662          
00001F56  4242                    1663          CLR         D2
00001F58  4243                    1664          CLR         D3      
00001F5A                          1665  
00001F5A  43F9 0000283A           1666          LEA         space,A1
00001F60  103C 000E               1667          MOVE.B      #14,D0
00001F64  4E4F                    1668          TRAP        #15
00001F66                          1669          
00001F66  143C 0007               1670          MOVE.B      #seven,D2
00001F6A  1218                    1671          MOVE.B      (A0)+,D1
00001F6C  4EB9 0000215E           1672          JSR         printEA
00001F72                          1673          
00001F72  43F9 00002836           1674          LEA         newLine, A1           ; create new line
00001F78  103C 000E               1675          MOVE.B      #14, D0             ; command for trap call to display message
00001F7C  4E4F                    1676          TRAP        #15                 ; trap call
00001F7E                          1677  
00001F7E  43F9 0000288F           1678  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001F84  103C 000E               1679          MOVE.B      #14, D0             ; command for trap call to display message
00001F88  4E4F                    1680          TRAP        #15                 ; trap call
00001F8A                          1681          
00001F8A  4242                    1682          CLR         D2
00001F8C  4243                    1683          CLR         D3      
00001F8E                          1684  
00001F8E  43F9 0000283A           1685          LEA         space,A1
00001F94  103C 000E               1686          MOVE.B      #14,D0
00001F98  4E4F                    1687          TRAP        #15
00001F9A                          1688          
00001F9A  143C 0007               1689          MOVE.B      #seven,D2
00001F9E  1218                    1690          MOVE.B      (A0)+,D1
00001FA0  4EB9 0000215E           1691          JSR         printEA
00001FA6                          1692          
00001FA6  43F9 00002836           1693          LEA         newLine, A1           ; create new line
00001FAC  103C 000E               1694          MOVE.B      #14, D0             ; command for trap call to display message
00001FB0  4E4F                    1695          TRAP        #15                 ; trap call
00001FB2                          1696  
00001FB2                          1697  ***********************************************************************************************************
00001FB2                          1698  *
00001FB2                          1699  *               SUB OPCODE
00001FB2                          1700  *
00001FB2                          1701  ***********************************************************************************************************
00001FB2                          1702  
00001FB2  43F9 0000289B           1703  opSUB       LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001FB8  103C 000E               1704              MOVE.B      #14, D0             ; command for trap call to display message
00001FBC  4E4F                    1705              TRAP        #15                 ; trap call
00001FBE                          1706          
00001FBE                          1707          
00001FBE  E141                    1708              ASL         #eight,D1
00001FC0  1218                    1709              MOVE.B      (A0)+,D1
00001FC2  4242                    1710              CLR         D2
00001FC4                          1711              
00001FC4  3401                    1712              MOVE.W      D1,D2
00001FC6  EC42                    1713              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001FC8  C47C 0007               1714              AND         #seven,D2
00001FCC                          1715              
00001FCC                          1716              ; These are for DN - EA
00001FCC  B43C 0000               1717              CMP.B       #zero,D2
00001FD0  6700 002A               1718              BEQ         opSUBB              ; Byte in opmode
00001FD4  B43C 0001               1719              CMP.B       #one,D2
00001FD8  6700 007C               1720              BEQ         opSUBW              ; Word in opmode
00001FDC  B43C 0002               1721              CMP.B       #two,D2
00001FE0  6700 00CE               1722              BEQ         opSUBL              ; Long in opmode
00001FE4                          1723              
00001FE4                          1724              ; These are for EA - DN
00001FE4  B43C 0004               1725              CMP.B       #four,D2
00001FE8  6700 0012               1726              BEQ         opSUBB              ; Byte in opmode
00001FEC  B43C 0005               1727              CMP.B       #five,D2
00001FF0  6700 0064               1728              BEQ         opSUBW              ; Word in opmode
00001FF4  B43C 0006               1729              CMP.B       #six,D2
00001FF8  6700 00B6               1730              BEQ         opSUBL              ; Long in opmode
00001FFC                          1731              
00001FFC  43F9 000028CD           1732  opSUBB      LEA         dispByte,A1
00002002  103C 000E               1733              MOVE.B      #14,D0
00002006  4E4F                    1734              TRAP        #15
00002008                          1735              
00002008  43F9 0000283A           1736              LEA         space, A1           ; Display space
0000200E  103C 000E               1737              MOVE.B      #14, D0             ; command for trap call to display message
00002012  4E4F                    1738              TRAP        #15                 ; trap call         
00002014                          1739              
00002014  1401                    1740              MOVE.B      D1,D2
00002016  E642                    1741              ASR         #3,D2
00002018  C47C 0007               1742              AND         #$07,D2
0000201C  3601                    1743              MOVE.W      D1,D3
0000201E  C67C 0007               1744              AND         #$07,D3
00002022  4EB9 0000215E           1745              JSR         printEA         ; Determines the "left" operand register
00002028                          1746              
00002028  43F9 00002841           1747              LEA         comma, A1           ; Display space
0000202E  103C 000E               1748              MOVE.B      #14, D0             ; command for trap call to display message
00002032  4E4F                    1749              TRAP        #15                 ; trap call
00002034                          1750              
00002034  4242                    1751              CLR         D2
00002036  3601                    1752              MOVE.W      D1,D3
00002038  E043                    1753              ASR         #eight,D3
0000203A  E243                    1754              ASR         #one,D3
0000203C  C67C 0007               1755              AND         #$07,D3
00002040  4EB9 0000215E           1756              JSR         printEA
00002046                          1757              
00002046  43F9 00002836           1758              LEA         newLine,A1
0000204C  103C 000E               1759              MOVE.B      #14,D0
00002050  4E4F                    1760              TRAP        #15
00002052                          1761              
00002052  6000 EFB8               1762              BRA         LOOP
00002056                          1763              
00002056                          1764              
00002056  43F9 000028D0           1765  opSUBW      LEA         dispWord,A1
0000205C  103C 000E               1766              MOVE.B      #14,D0
00002060  4E4F                    1767              TRAP        #15
00002062                          1768              
00002062  43F9 0000283A           1769              LEA         space, A1           ; Display space
00002068  103C 000E               1770              MOVE.B      #14, D0             ; command for trap call to display message
0000206C  4E4F                    1771              TRAP        #15                 ; trap call         
0000206E                          1772              
0000206E  1401                    1773              MOVE.B      D1,D2
00002070  E642                    1774              ASR         #3,D2
00002072  C47C 0007               1775              AND         #$07,D2
00002076  3601                    1776              MOVE.W      D1,D3
00002078  C67C 0007               1777              AND         #$07,D3
0000207C  4EB9 0000215E           1778              JSR         printEA         ; Determines the "left" operand register
00002082                          1779              
00002082  43F9 00002841           1780              LEA         comma, A1           ; Display space
00002088  103C 000E               1781              MOVE.B      #14, D0             ; command for trap call to display message
0000208C  4E4F                    1782              TRAP        #15                 ; trap call
0000208E                          1783              
0000208E  4242                    1784              CLR         D2
00002090  3601                    1785              MOVE.W      D1,D3
00002092  E043                    1786              ASR         #eight,D3
00002094  E243                    1787              ASR         #one,D3
00002096  C67C 0007               1788              AND         #$07,D3
0000209A  4EB9 0000215E           1789              JSR         printEA
000020A0                          1790              
000020A0  43F9 00002836           1791              LEA         newLine,A1
000020A6  103C 000E               1792              MOVE.B      #14,D0
000020AA  4E4F                    1793              TRAP        #15
000020AC                          1794              
000020AC  6000 EF5E               1795              BRA         LOOP
000020B0                          1796              
000020B0  43F9 000028D3           1797  opSUBL      LEA         dispLong,A1
000020B6  103C 000E               1798              MOVE.B      #14,D0
000020BA  4E4F                    1799              TRAP        #15
000020BC                          1800              
000020BC  43F9 0000283A           1801              LEA         space, A1           ; Display space
000020C2  103C 000E               1802              MOVE.B      #14, D0             ; command for trap call to display message
000020C6  4E4F                    1803              TRAP        #15                 ; trap call         
000020C8                          1804              
000020C8  1401                    1805              MOVE.B      D1,D2
000020CA  E642                    1806              ASR         #3,D2
000020CC  C47C 0007               1807              AND         #$07,D2
000020D0  3601                    1808              MOVE.W      D1,D3
000020D2  C67C 0007               1809              AND         #$07,D3
000020D6  4EB9 0000215E           1810              JSR         printEA         ; Determines the "left" operand register
000020DC                          1811              
000020DC  43F9 00002841           1812              LEA         comma, A1           ; Display space
000020E2  103C 000E               1813              MOVE.B      #14, D0             ; command for trap call to display message
000020E6  4E4F                    1814              TRAP        #15                 ; trap call
000020E8                          1815              
000020E8  4242                    1816              CLR         D2
000020EA  3601                    1817              MOVE.W      D1,D3
000020EC  E043                    1818              ASR         #eight,D3
000020EE  E243                    1819              ASR         #one,D3
000020F0  C67C 0007               1820              AND         #$07,D3
000020F4  4EB9 0000215E           1821              JSR         printEA
000020FA                          1822              
000020FA  43F9 00002836           1823              LEA         newLine,A1
00002100  103C 000E               1824              MOVE.B      #14,D0
00002104  4E4F                    1825              TRAP        #15
00002106                          1826              
00002106  6000 EF04               1827              BRA         LOOP
0000210A                          1828          
0000210A                          1829          
0000210A  43F9 000028A7           1830  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002110  103C 000E               1831          MOVE.B      #14, D0             ; command for trap call to display message
00002114  4E4F                    1832          TRAP        #15                 ; trap call
00002116                          1833  
00002116  43F9 000028C1           1834  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000211C  103C 000E               1835          MOVE.B      #14, D0             ; command for trap call to display message
00002120  4E4F                    1836          TRAP        #15                 ; trap call
00002122                          1837  
00002122  43F9 000028BD           1838  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002128  103C 000E               1839          MOVE.B      #14, D0             ; command for trap call to display message
0000212C  4E4F                    1840          TRAP        #15                 ; trap call
0000212E                          1841  
0000212E  43F9 000028B9           1842  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00002134  103C 000E               1843          MOVE.B      #14, D0             ; command for trap call to display message
00002138  4E4F                    1844          TRAP        #15                 ; trap call
0000213A                          1845  
0000213A  43F9 000028B5           1846  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00002140  103C 000E               1847          MOVE.B      #14, D0             ; command for trap call to display message
00002144  4E4F                    1848          TRAP        #15                 ; trap call
00002146                          1849  
00002146  43F9 000028C9           1850  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
0000214C  103C 000E               1851          MOVE.B      #14, D0             ; command for trap call to display message
00002150  4E4F                    1852          TRAP        #15                 ; trap call
00002152                          1853  
00002152  43F9 000028C5           1854  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00002158  103C 000E               1855          MOVE.B      #14, D0             ; command for trap call to display message
0000215C  4E4F                    1856          TRAP        #15                 ; trap call
0000215E                          1857  
0000215E                          1858  
0000215E                          1859          
0000215E                          1860  ***********************************************************************************************************
0000215E                          1861  *
0000215E                          1862  *                                           EA Print Check
0000215E                          1863  *
0000215E                          1864  ***********************************************************************************************************
0000215E  48E7 FF7E               1865  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00002162                          1866  
00002162  B43C 0000               1867              CMP.B       #zero, D2
00002166  6700 002E               1868              BEQ         pDataReg
0000216A  B43C 0001               1869              CMP.B       #one, D2
0000216E  6700 00E6               1870              BEQ         pAddrReg
00002172  B43C 0002               1871              CMP.B       #two, D2
00002176  6700 019E               1872              BEQ         pAddrDir
0000217A  B43C 0003               1873              CMP.B       #three, D2
0000217E  6700 02C2               1874              BEQ         pAddrPost
00002182  B43C 0004               1875              CMP.B       #four, D2
00002186  6700 0446               1876              BEQ         pAddrDec
0000218A  B43C 0007               1877              CMP.B       #seven, D2
0000218E  6700 0576               1878              BEQ         pHex
00002192  6000 0614               1879              BRA         invalid
00002196                          1880  
00002196                          1881  ***********************************************************************************************************
00002196                          1882  * Data Register        
00002196  B63C 0000               1883  pDataReg    CMP.B   #zero,D3
0000219A  6700 003A               1884              BEQ     displayD0
0000219E  B63C 0001               1885              CMP.B   #one,D3
000021A2  6700 0042               1886              BEQ     displayD1
000021A6  B63C 0002               1887              CMP.B   #two,D3
000021AA  6700 004A               1888              BEQ     displayD2
000021AE  B63C 0003               1889              CMP.B   #three,D3
000021B2  6700 0052               1890              BEQ     displayD3
000021B6  B63C 0004               1891              CMP.B   #four,D3
000021BA  6700 005A               1892              BEQ     displayD4
000021BE  B63C 0005               1893              CMP.B   #five,D3
000021C2  6700 0062               1894              BEQ     displayD5
000021C6  B63C 0006               1895              CMP.B   #six,D3
000021CA  6700 006A               1896              BEQ     displayD6
000021CE  B63C 0007               1897              CMP.B   #seven,D3
000021D2  6700 0072               1898              BEQ     displayD7
000021D6                          1899              
000021D6  43F9 000028F0           1900  displayD0   LEA         dispD0, A1          ; Display space
000021DC  103C 000E               1901              MOVE.B      #14, D0             ; command for trap call to display message
000021E0  4E4F                    1902              TRAP        #15                 ; trap call
000021E2  6000 05C4               1903              BRA         endSUB              ; go to the end of the subroutine
000021E6                          1904              
000021E6  43F9 000028F3           1905  displayD1   LEA         dispD1, A1          ; Display space
000021EC  103C 000E               1906              MOVE.B      #14, D0             ; command for trap call to display message
000021F0  4E4F                    1907              TRAP        #15                 ; trap call
000021F2  6000 05B4               1908              BRA         endSUB              ; go to the end of the subroutine
000021F6                          1909  
000021F6  43F9 000028F6           1910  displayD2   LEA         dispD2, A1          ; Display space
000021FC  103C 000E               1911              MOVE.B      #14, D0             ; command for trap call to display message
00002200  4E4F                    1912              TRAP        #15                 ; trap call
00002202  6000 05A4               1913              BRA         endSUB              ; go to the end of the subroutine
00002206                          1914  
00002206  43F9 000028F9           1915  displayD3   LEA         dispD3, A1          ; Display space
0000220C  103C 000E               1916              MOVE.B      #14, D0             ; command for trap call to display message
00002210  4E4F                    1917              TRAP        #15                 ; trap call
00002212  6000 0594               1918              BRA         endSUB              ; go to the end of the subroutine
00002216                          1919  
00002216  43F9 000028FC           1920  displayD4   LEA         dispD4, A1          ; Display space
0000221C  103C 000E               1921              MOVE.B      #14, D0             ; command for trap call to display message
00002220  4E4F                    1922              TRAP        #15                 ; trap call
00002222  6000 0584               1923              BRA         endSUB              ; go to the end of the subroutine
00002226                          1924  
00002226  43F9 000028FF           1925  displayD5   LEA         dispD5, A1          ; Display space
0000222C  103C 000E               1926              MOVE.B      #14, D0             ; command for trap call to display message
00002230  4E4F                    1927              TRAP        #15                 ; trap call
00002232  6000 0574               1928              BRA         endSUB              ; go to the end of the subroutine
00002236                          1929  
00002236  43F9 00002902           1930  displayD6   LEA         dispD6, A1          ; Display space
0000223C  103C 000E               1931              MOVE.B      #14, D0             ; command for trap call to display message
00002240  4E4F                    1932              TRAP        #15                 ; trap call
00002242  6000 0564               1933              BRA         endSUB              ; go to the end of the subroutine
00002246                          1934  
00002246  43F9 00002905           1935  displayD7   LEA         dispD7, A1          ; Display space
0000224C  103C 000E               1936              MOVE.B      #14, D0             ; command for trap call to display message
00002250  4E4F                    1937              TRAP        #15                 ; trap call
00002252  6000 0554               1938              BRA         endSUB              ; go to the end of the subroutine
00002256                          1939  ***********************************************************************************************************
00002256                          1940  * Address Register
00002256  B63C 0000               1941  pAddrReg    CMP.B   #zero,D3
0000225A  6700 003A               1942              BEQ     displayA0
0000225E  B63C 0001               1943              CMP.B   #one,D3
00002262  6700 0042               1944              BEQ     displayA1
00002266  B63C 0002               1945              CMP.B   #two,D3
0000226A  6700 004A               1946              BEQ     displayA2
0000226E  B63C 0003               1947              CMP.B   #three,D3
00002272  6700 0052               1948              BEQ     displayA3
00002276  B63C 0004               1949              CMP.B   #four,D3
0000227A  6700 005A               1950              BEQ     displayA4
0000227E  B63C 0005               1951              CMP.B   #five,D3
00002282  6700 0062               1952              BEQ     displayA5
00002286  B63C 0006               1953              CMP.B   #six,D3
0000228A  6700 006A               1954              BEQ     displayA6
0000228E  B63C 0007               1955              CMP.B   #seven,D3
00002292  6700 0072               1956              BEQ     displayA7
00002296                          1957              
00002296  43F9 000028D6           1958  displayA0   LEA         dispA0, A1          ; Display space
0000229C  103C 000E               1959              MOVE.B      #14, D0             ; command for trap call to display message
000022A0  4E4F                    1960              TRAP        #15                 ; trap call
000022A2  6000 0504               1961              BRA         endSUB              ; go to the end of the subroutine
000022A6                          1962              
000022A6  43F9 000028D9           1963  displayA1   LEA         dispA1, A1          ; Display space
000022AC  103C 000E               1964              MOVE.B      #14, D0             ; command for trap call to display message
000022B0  4E4F                    1965              TRAP        #15                 ; trap call
000022B2  6000 04F4               1966              BRA         endSUB              ; go to the end of the subroutine
000022B6                          1967  
000022B6  43F9 000028DC           1968  displayA2   LEA         dispA2, A1          ; Display space
000022BC  103C 000E               1969              MOVE.B      #14, D0             ; command for trap call to display message
000022C0  4E4F                    1970              TRAP        #15                 ; trap call
000022C2  6000 04E4               1971              BRA         endSUB              ; go to the end of the subroutine
000022C6                          1972  
000022C6  43F9 000028DF           1973  displayA3   LEA         dispA3, A1          ; Display space
000022CC  103C 000E               1974              MOVE.B      #14, D0             ; command for trap call to display message
000022D0  4E4F                    1975              TRAP        #15                 ; trap call
000022D2  6000 04D4               1976              BRA         endSUB              ; go to the end of the subroutine
000022D6                          1977  
000022D6  43F9 000028E2           1978  displayA4   LEA         dispA4, A1          ; Display space
000022DC  103C 000E               1979              MOVE.B      #14, D0             ; command for trap call to display message
000022E0  4E4F                    1980              TRAP        #15                 ; trap call
000022E2  6000 04C4               1981              BRA         endSUB              ; go to the end of the subroutine
000022E6                          1982  
000022E6  43F9 000028E5           1983  displayA5   LEA         dispA5, A1          ; Display space
000022EC  103C 000E               1984              MOVE.B      #14, D0             ; command for trap call to display message
000022F0  4E4F                    1985              TRAP        #15                 ; trap call
000022F2  6000 04B4               1986              BRA         endSUB              ; go to the end of the subroutine
000022F6                          1987  
000022F6  43F9 000028E8           1988  displayA6   LEA         dispA6, A1          ; Display space
000022FC  103C 000E               1989              MOVE.B      #14, D0             ; command for trap call to display message
00002300  4E4F                    1990              TRAP        #15                 ; trap call
00002302  6000 04A4               1991              BRA         endSUB              ; go to the end of the subroutine
00002306                          1992  
00002306  43F9 000028EB           1993  displayA7   LEA         dispA7, A1          ; Display space
0000230C  103C 000E               1994              MOVE.B      #14, D0             ; command for trap call to display message
00002310  4E4F                    1995              TRAP        #15                 ; trap call
00002312  6000 0494               1996              BRA         endSUB              ; go to the end of the subroutine
00002316                          1997  
00002316                          1998  ***********************************************************************************************************
00002316                          1999  * Address Register Direct
00002316                          2000  
00002316  43F9 00002843           2001  pAddrDir    LEA         opPer, A1           ; Display space
0000231C  103C 000E               2002              MOVE.B      #14, D0             ; command for trap call to display message
00002320  4E4F                    2003              TRAP        #15                 ; trap call
00002322                          2004              
00002322  B63C 0000               2005              CMP.B   #zero,D3
00002326  6700 003A               2006              BEQ     displayA0A
0000232A  B63C 0001               2007              CMP.B   #one,D3
0000232E  6700 004E               2008              BEQ     displayA1A
00002332  B63C 0002               2009              CMP.B   #two,D3
00002336  6700 0062               2010              BEQ     displayA2A
0000233A  B63C 0003               2011              CMP.B   #three,D3
0000233E  6700 0076               2012              BEQ     displayA3A
00002342  B63C 0004               2013              CMP.B   #four,D3
00002346  6700 008A               2014              BEQ     displayA4A
0000234A  B63C 0005               2015              CMP.B   #five,D3
0000234E  6700 009E               2016              BEQ     displayA5A
00002352  B63C 0006               2017              CMP.B   #six,D3
00002356  6700 00B2               2018              BEQ     displayA6A
0000235A  B63C 0007               2019              CMP.B   #seven,D3
0000235E  6700 00C6               2020              BEQ     displayA7A
00002362                          2021              
00002362  43F9 000028D6           2022  displayA0A  LEA         dispA0, A1          ; Display space
00002368  103C 000E               2023              MOVE.B      #14, D0             ; command for trap call to display message
0000236C  4E4F                    2024              TRAP        #15                 ; trap call
0000236E  43F9 00002845           2025              LEA         clPer, A1           ; Display space
00002374  103C 000E               2026              MOVE.B      #14, D0             ; command for trap call to display message
00002378  4E4F                    2027              TRAP        #15                 ; trap call
0000237A  6000 042C               2028              BRA         endSUB              ; go to the end of the subroutine
0000237E                          2029              
0000237E  43F9 000028D9           2030  displayA1A  LEA         dispA1, A1          ; Display space
00002384  103C 000E               2031              MOVE.B      #14, D0             ; command for trap call to display message
00002388  4E4F                    2032              TRAP        #15                 ; trap call
0000238A  43F9 00002845           2033              LEA         clPer, A1           ; Display space
00002390  103C 000E               2034              MOVE.B      #14, D0             ; command for trap call to display message
00002394  4E4F                    2035              TRAP        #15                 ; trap call
00002396  6000 0410               2036              BRA         endSUB              ; go to the end of the subroutine
0000239A                          2037  
0000239A  43F9 000028DC           2038  displayA2A  LEA         dispA2, A1          ; Display space
000023A0  103C 000E               2039              MOVE.B      #14, D0             ; command for trap call to display message
000023A4  4E4F                    2040              TRAP        #15                 ; trap call
000023A6  43F9 00002845           2041              LEA         clPer, A1           ; Display space
000023AC  103C 000E               2042              MOVE.B      #14, D0             ; command for trap call to display message
000023B0  4E4F                    2043              TRAP        #15                 ; trap call
000023B2  6000 03F4               2044              BRA         endSUB              ; go to the end of the subroutine
000023B6                          2045  
000023B6  43F9 000028DF           2046  displayA3A  LEA         dispA3, A1          ; Display space
000023BC  103C 000E               2047              MOVE.B      #14, D0             ; command for trap call to display message
000023C0  4E4F                    2048              TRAP        #15                 ; trap call
000023C2  43F9 00002845           2049              LEA         clPer, A1           ; Display space
000023C8  103C 000E               2050              MOVE.B      #14, D0             ; command for trap call to display message
000023CC  4E4F                    2051              TRAP        #15                 ; trap call
000023CE  6000 03D8               2052              BRA         endSUB              ; go to the end of the subroutine
000023D2                          2053  
000023D2  43F9 000028E2           2054  displayA4A  LEA         dispA4, A1          ; Display space
000023D8  103C 000E               2055              MOVE.B      #14, D0             ; command for trap call to display message
000023DC  4E4F                    2056              TRAP        #15                 ; trap call
000023DE  43F9 00002845           2057              LEA         clPer, A1           ; Display space
000023E4  103C 000E               2058              MOVE.B      #14, D0             ; command for trap call to display message
000023E8  4E4F                    2059              TRAP        #15                 ; trap call
000023EA  6000 03BC               2060              BRA         endSUB              ; go to the end of the subroutine
000023EE                          2061  
000023EE  43F9 000028E5           2062  displayA5A  LEA         dispA5, A1          ; Display space
000023F4  103C 000E               2063              MOVE.B      #14, D0             ; command for trap call to display message
000023F8  4E4F                    2064              TRAP        #15                 ; trap call
000023FA  43F9 00002845           2065              LEA         clPer, A1           ; Display space
00002400  103C 000E               2066              MOVE.B      #14, D0             ; command for trap call to display message
00002404  4E4F                    2067              TRAP        #15                 ; trap call
00002406  6000 03A0               2068              BRA         endSUB              ; go to the end of the subroutine
0000240A                          2069  
0000240A  43F9 000028E8           2070  displayA6A  LEA         dispA6, A1          ; Display space
00002410  103C 000E               2071              MOVE.B      #14, D0             ; command for trap call to display message
00002414  4E4F                    2072              TRAP        #15                 ; trap call
00002416  43F9 00002845           2073              LEA         clPer, A1           ; Display space
0000241C  103C 000E               2074              MOVE.B      #14, D0             ; command for trap call to display message
00002420  4E4F                    2075              TRAP        #15                 ; trap call
00002422  6000 0384               2076              BRA         endSUB              ; go to the end of the subroutine
00002426                          2077  
00002426  43F9 000028EB           2078  displayA7A  LEA         dispA7, A1          ; Display space
0000242C  103C 000E               2079              MOVE.B      #14, D0             ; command for trap call to display message
00002430  4E4F                    2080              TRAP        #15                 ; trap call
00002432  43F9 00002845           2081              LEA         clPer, A1           ; Display space
00002438  103C 000E               2082              MOVE.B      #14, D0             ; command for trap call to display message
0000243C  4E4F                    2083              TRAP        #15                 ; trap call
0000243E  6000 0368               2084              BRA         endSUB              ; go to the end of the subroutine
00002442                          2085              
00002442                          2086  ***********************************************************************************************************
00002442                          2087  * Addr Postincrement
00002442                          2088              
00002442  43F9 00002843           2089  pAddrPost   LEA         opPer, A1           ; Display space
00002448  103C 000E               2090              MOVE.B      #14, D0             ; command for trap call to display message
0000244C  4E4F                    2091              TRAP        #15                 ; trap call
0000244E                          2092              
0000244E  B63C 0000               2093              CMP.B   #zero,D3
00002452  6700 003A               2094              BEQ     displayA0P
00002456  B63C 0001               2095              CMP.B   #one,D3
0000245A  6700 005A               2096              BEQ     displayA1P
0000245E  B63C 0002               2097              CMP.B   #two,D3
00002462  6700 007A               2098              BEQ     displayA2P
00002466  B63C 0003               2099              CMP.B   #three,D3
0000246A  6700 009A               2100              BEQ     displayA3P
0000246E  B63C 0004               2101              CMP.B   #four,D3
00002472  6700 00BA               2102              BEQ     displayA4P
00002476  B63C 0005               2103              CMP.B   #five,D3
0000247A  6700 00DA               2104              BEQ     displayA5P
0000247E  B63C 0006               2105              CMP.B   #six,D3
00002482  6700 00FA               2106              BEQ     displayA6P
00002486  B63C 0007               2107              CMP.B   #seven,D3
0000248A  6700 011A               2108              BEQ     displayA7P
0000248E                          2109              
0000248E  43F9 000028D6           2110  displayA0P  LEA         dispA0, A1          ; Display space
00002494  103C 000E               2111              MOVE.B      #14, D0             ; command for trap call to display message
00002498  4E4F                    2112              TRAP        #15                 ; trap call
0000249A  43F9 00002845           2113              LEA         clPer, A1           ; Display space
000024A0  103C 000E               2114              MOVE.B      #14, D0             ; command for trap call to display message
000024A4  4E4F                    2115              TRAP        #15                 ; trap call
000024A6  43F9 00002849           2116              LEA         inc, A1             ; Display space
000024AC  103C 000E               2117              MOVE.B      #14, D0             ; command for trap call to display message
000024B0  4E4F                    2118              TRAP        #15                 ; trap call
000024B2  6000 02F4               2119              BRA         endSUB              ; go to the end of the subroutine
000024B6                          2120              
000024B6  43F9 000028D9           2121  displayA1P  LEA         dispA1, A1          ; Display space
000024BC  103C 000E               2122              MOVE.B      #14, D0             ; command for trap call to display message
000024C0  4E4F                    2123              TRAP        #15                 ; trap call
000024C2  43F9 00002845           2124              LEA         clPer, A1           ; Display space
000024C8  103C 000E               2125              MOVE.B      #14, D0             ; command for trap call to display message
000024CC  4E4F                    2126              TRAP        #15                 ; trap call
000024CE  43F9 00002849           2127              LEA         inc, A1             ; Display space
000024D4  103C 000E               2128              MOVE.B      #14, D0             ; command for trap call to display message
000024D8  4E4F                    2129              TRAP        #15                 ; trap call
000024DA  6000 02CC               2130              BRA         endSUB              ; go to the end of the subroutine
000024DE                          2131  
000024DE  43F9 000028DC           2132  displayA2P  LEA         dispA2, A1          ; Display space
000024E4  103C 000E               2133              MOVE.B      #14, D0             ; command for trap call to display message
000024E8  4E4F                    2134              TRAP        #15                 ; trap call
000024EA  43F9 00002845           2135              LEA         clPer, A1           ; Display space
000024F0  103C 000E               2136              MOVE.B      #14, D0             ; command for trap call to display message
000024F4  4E4F                    2137              TRAP        #15                 ; trap call
000024F6  43F9 00002849           2138              LEA         inc, A1             ; Display space
000024FC  103C 000E               2139              MOVE.B      #14, D0             ; command for trap call to display message
00002500  4E4F                    2140              TRAP        #15                 ; trap call
00002502  6000 02A4               2141              BRA         endSUB              ; go to the end of the subroutine
00002506                          2142  
00002506  43F9 000028DF           2143  displayA3P  LEA         dispA3, A1          ; Display space
0000250C  103C 000E               2144              MOVE.B      #14, D0             ; command for trap call to display message
00002510  4E4F                    2145              TRAP        #15                 ; trap call
00002512  43F9 00002845           2146              LEA         clPer, A1           ; Display space
00002518  103C 000E               2147              MOVE.B      #14, D0             ; command for trap call to display message
0000251C  4E4F                    2148              TRAP        #15                 ; trap call
0000251E  43F9 00002849           2149              LEA         inc, A1             ; Display space
00002524  103C 000E               2150              MOVE.B      #14, D0             ; command for trap call to display message
00002528  4E4F                    2151              TRAP        #15                 ; trap call
0000252A  6000 027C               2152              BRA         endSUB              ; go to the end of the subroutine
0000252E                          2153  
0000252E  43F9 000028E2           2154  displayA4P  LEA         dispA4, A1          ; Display space
00002534  103C 000E               2155              MOVE.B      #14, D0             ; command for trap call to display message
00002538  4E4F                    2156              TRAP        #15                 ; trap call
0000253A  43F9 00002845           2157              LEA         clPer, A1           ; Display space
00002540  103C 000E               2158              MOVE.B      #14, D0             ; command for trap call to display message
00002544  4E4F                    2159              TRAP        #15                 ; trap call
00002546  43F9 00002849           2160              LEA         inc, A1             ; Display space
0000254C  103C 000E               2161              MOVE.B      #14, D0             ; command for trap call to display message
00002550  4E4F                    2162              TRAP        #15                 ; trap call
00002552  6000 0254               2163              BRA         endSUB              ; go to the end of the subroutine
00002556                          2164  
00002556  43F9 000028E5           2165  displayA5P  LEA         dispA5, A1          ; Display space
0000255C  103C 000E               2166              MOVE.B      #14, D0             ; command for trap call to display message
00002560  4E4F                    2167              TRAP        #15                 ; trap call
00002562  43F9 00002845           2168              LEA         clPer, A1           ; Display space
00002568  103C 000E               2169              MOVE.B      #14, D0             ; command for trap call to display message
0000256C  4E4F                    2170              TRAP        #15                 ; trap call
0000256E  43F9 00002849           2171              LEA         inc, A1             ; Display space
00002574  103C 000E               2172              MOVE.B      #14, D0             ; command for trap call to display message
00002578  4E4F                    2173              TRAP        #15                 ; trap call
0000257A  6000 022C               2174              BRA         endSUB              ; go to the end of the subroutine
0000257E                          2175  
0000257E  43F9 000028E8           2176  displayA6P  LEA         dispA6, A1          ; Display space
00002584  103C 000E               2177              MOVE.B      #14, D0             ; command for trap call to display message
00002588  4E4F                    2178              TRAP        #15                 ; trap call
0000258A  43F9 00002845           2179              LEA         clPer, A1           ; Display space
00002590  103C 000E               2180              MOVE.B      #14, D0             ; command for trap call to display message
00002594  4E4F                    2181              TRAP        #15                 ; trap call
00002596  43F9 00002849           2182              LEA         inc, A1             ; Display space
0000259C  103C 000E               2183              MOVE.B      #14, D0             ; command for trap call to display message
000025A0  4E4F                    2184              TRAP        #15                 ; trap call
000025A2  6000 0204               2185              BRA         endSUB              ; go to the end of the subroutine
000025A6                          2186  
000025A6  43F9 000028EB           2187  displayA7P  LEA         dispA7, A1          ; Display space
000025AC  103C 000E               2188              MOVE.B      #14, D0             ; command for trap call to display message
000025B0  4E4F                    2189              TRAP        #15                 ; trap call
000025B2  43F9 00002845           2190              LEA         clPer, A1           ; Display space
000025B8  103C 000E               2191              MOVE.B      #14, D0             ; command for trap call to display message
000025BC  4E4F                    2192              TRAP        #15                 ; trap call
000025BE  43F9 00002849           2193              LEA         inc, A1             ; Display space
000025C4  103C 000E               2194              MOVE.B      #14, D0             ; command for trap call to display message
000025C8  4E4F                    2195              TRAP        #15                 ; trap call
000025CA  6000 01DC               2196              BRA         endSUB              ; go to the end of the subroutine
000025CE                          2197  
000025CE                          2198  ***********************************************************************************************************
000025CE                          2199  * Addr Postdecrement
000025CE                          2200  
000025CE  43F9 00002847           2201  pAddrDec    LEA         dec, A1             ; Display space
000025D4  103C 000E               2202              MOVE.B      #14, D0             ; command for trap call to display message
000025D8  4E4F                    2203              TRAP        #15                 ; trap call
000025DA                          2204              
000025DA  43F9 00002843           2205              LEA         opPer, A1           ; Display space
000025E0  103C 000E               2206              MOVE.B      #14, D0             ; command for trap call to display message
000025E4  4E4F                    2207              TRAP        #15                 ; trap call
000025E6                          2208              
000025E6  B63C 0000               2209              CMP.B   #zero,D3
000025EA  6700 003A               2210              BEQ     displayA0D
000025EE  B63C 0001               2211              CMP.B   #one,D3
000025F2  6700 004E               2212              BEQ     displayA1D
000025F6  B63C 0002               2213              CMP.B   #two,D3
000025FA  6700 0062               2214              BEQ     displayA2D
000025FE  B63C 0003               2215              CMP.B   #three,D3
00002602  6700 0076               2216              BEQ     displayA3D
00002606  B63C 0004               2217              CMP.B   #four,D3
0000260A  6700 008A               2218              BEQ     displayA4D
0000260E  B63C 0005               2219              CMP.B   #five,D3
00002612  6700 009E               2220              BEQ     displayA5D
00002616  B63C 0006               2221              CMP.B   #six,D3
0000261A  6700 00B2               2222              BEQ     displayA6D
0000261E  B63C 0007               2223              CMP.B   #seven,D3
00002622  6700 00C6               2224              BEQ     displayA7D
00002626                          2225              
00002626  43F9 000028D6           2226  displayA0D  LEA         dispA0, A1          ; Display space
0000262C  103C 000E               2227              MOVE.B      #14, D0             ; command for trap call to display message
00002630  4E4F                    2228              TRAP        #15                 ; trap call
00002632  43F9 00002845           2229              LEA         clPer, A1           ; Display space
00002638  103C 000E               2230              MOVE.B      #14, D0             ; command for trap call to display message
0000263C  4E4F                    2231              TRAP        #15                 ; trap call
0000263E  6000 0168               2232              BRA         endSUB              ; go to the end of the subroutine
00002642                          2233              
00002642  43F9 000028D9           2234  displayA1D  LEA         dispA1, A1          ; Display space
00002648  103C 000E               2235              MOVE.B      #14, D0             ; command for trap call to display message
0000264C  4E4F                    2236              TRAP        #15                 ; trap call
0000264E  43F9 00002845           2237              LEA         clPer, A1           ; Display space
00002654  103C 000E               2238              MOVE.B      #14, D0             ; command for trap call to display message
00002658  4E4F                    2239              TRAP        #15                 ; trap call
0000265A  6000 014C               2240              BRA         endSUB              ; go to the end of the subroutine
0000265E                          2241  
0000265E  43F9 000028DC           2242  displayA2D  LEA         dispA2, A1          ; Display space
00002664  103C 000E               2243              MOVE.B      #14, D0             ; command for trap call to display message
00002668  4E4F                    2244              TRAP        #15                 ; trap call
0000266A  43F9 00002845           2245              LEA         clPer, A1           ; Display space
00002670  103C 000E               2246              MOVE.B      #14, D0             ; command for trap call to display message
00002674  4E4F                    2247              TRAP        #15                 ; trap call
00002676  6000 0130               2248              BRA         endSUB              ; go to the end of the subroutine
0000267A                          2249  
0000267A  43F9 000028DF           2250  displayA3D  LEA         dispA3, A1          ; Display space
00002680  103C 000E               2251              MOVE.B      #14, D0             ; command for trap call to display message
00002684  4E4F                    2252              TRAP        #15                 ; trap call
00002686  43F9 00002845           2253              LEA         clPer, A1           ; Display space
0000268C  103C 000E               2254              MOVE.B      #14, D0             ; command for trap call to display message
00002690  4E4F                    2255              TRAP        #15                 ; trap call
00002692  6000 0114               2256              BRA         endSUB              ; go to the end of the subroutine
00002696                          2257  
00002696  43F9 000028E2           2258  displayA4D  LEA         dispA4, A1          ; Display space
0000269C  103C 000E               2259              MOVE.B      #14, D0             ; command for trap call to display message
000026A0  4E4F                    2260              TRAP        #15                 ; trap call
000026A2  43F9 00002845           2261              LEA         clPer, A1           ; Display space
000026A8  103C 000E               2262              MOVE.B      #14, D0             ; command for trap call to display message
000026AC  4E4F                    2263              TRAP        #15                 ; trap call
000026AE  6000 00F8               2264              BRA         endSUB              ; go to the end of the subroutine
000026B2                          2265  
000026B2  43F9 000028E5           2266  displayA5D  LEA         dispA5, A1          ; Display space
000026B8  103C 000E               2267              MOVE.B      #14, D0             ; command for trap call to display message
000026BC  4E4F                    2268              TRAP        #15                 ; trap call
000026BE  43F9 00002845           2269              LEA         clPer, A1           ; Display space
000026C4  103C 000E               2270              MOVE.B      #14, D0             ; command for trap call to display message
000026C8  4E4F                    2271              TRAP        #15                 ; trap call
000026CA  6000 00DC               2272              BRA         endSUB              ; go to the end of the subroutine
000026CE                          2273  
000026CE  43F9 000028E8           2274  displayA6D  LEA         dispA6, A1          ; Display space
000026D4  103C 000E               2275              MOVE.B      #14, D0             ; command for trap call to display message
000026D8  4E4F                    2276              TRAP        #15                 ; trap call
000026DA  43F9 00002845           2277              LEA         clPer, A1           ; Display space
000026E0  103C 000E               2278              MOVE.B      #14, D0             ; command for trap call to display message
000026E4  4E4F                    2279              TRAP        #15                 ; trap call
000026E6  6000 00C0               2280              BRA         endSUB              ; go to the end of the subroutine
000026EA                          2281  
000026EA  43F9 000028EB           2282  displayA7D  LEA         dispA7, A1          ; Display space
000026F0  103C 000E               2283              MOVE.B      #14, D0             ; command for trap call to display message
000026F4  4E4F                    2284              TRAP        #15                 ; trap call
000026F6  43F9 00002845           2285              LEA         clPer, A1           ; Display space
000026FC  103C 000E               2286              MOVE.B      #14, D0             ; command for trap call to display message
00002700  4E4F                    2287              TRAP        #15                 ; trap call
00002702  6000 00A4               2288              BRA         endSUB              ; go to the end of the subroutine
00002706                          2289  
00002706                          2290  
00002706                          2291  ***********************************************************************************************************
00002706                          2292  * Absolute Address
00002706  B63C 0000               2293  pHex        CMP.B       #zero, D3
0000270A  6700 0012               2294              BEQ         AbsShort
0000270E  B63C 0001               2295              CMP.B       #one, D3
00002712  6700 003C               2296              BEQ         AbsLong
00002716  B63C 0004               2297              CMP.B       #four, D3
0000271A  6700 0066               2298              BEQ         DispImm
0000271E                          2299              
0000271E  43F9 00002843           2300  AbsShort    LEA         opPer, A1           ; Display space
00002724  103C 000E               2301              MOVE.B      #14, D0             ; command for trap call to display message
00002728  4E4F                    2302              TRAP        #15                 ; trap call
0000272A                          2303              
0000272A  43F9 0000283F           2304              LEA         dispHex, A1         ; Display space
00002730  103C 000E               2305              MOVE.B      #14, D0             ; command for trap call to display message
00002734  4E4F                    2306              TRAP        #15                 ; trap call
00002736                          2307              
00002736  4241                    2308              CLR         D1
00002738  3218                    2309              MOVE.W      (A0)+, D1
0000273A                          2310              
0000273A  103C 0003               2311              MOVE.B      #3, D0
0000273E  4E4F                    2312              TRAP        #15
00002740                          2313              
00002740  43F9 00002845           2314              LEA         clPer, A1           ; Display space
00002746  103C 000E               2315              MOVE.B      #14, D0             ; command for trap call to display message
0000274A  4E4F                    2316              TRAP        #15                 ; trap call
0000274C                          2317              
0000274C  6000 005A               2318              BRA         endSub
00002750                          2319              
00002750  43F9 00002843           2320  AbsLong     LEA         opPer, A1           ; Display space
00002756  103C 000E               2321              MOVE.B      #14, D0             ; command for trap call to display message
0000275A  4E4F                    2322              TRAP        #15                 ; trap call
0000275C                          2323              
0000275C  43F9 0000283F           2324              LEA         dispHex, A1         ; Display space
00002762  103C 000E               2325              MOVE.B      #14, D0             ; command for trap call to display message
00002766  4E4F                    2326              TRAP        #15                 ; trap call
00002768                          2327              
00002768  4241                    2328              CLR         D1
0000276A  2218                    2329              MOVE.L      (A0)+, D1
0000276C                          2330              
0000276C  103C 0003               2331              MOVE.B      #3, D0
00002770  4E4F                    2332              TRAP        #15
00002772                          2333              
00002772  43F9 00002845           2334              LEA         clPer, A1           ; Display space
00002778  103C 000E               2335              MOVE.B      #14, D0             ; command for trap call to display message
0000277C  4E4F                    2336              TRAP        #15                 ; trap call
0000277E                          2337              
0000277E  6000 0028               2338              BRA         endSub
00002782                          2339  
00002782  43F9 0000283D           2340  DispImm     LEA         hashTag, A1         ; Display space
00002788  103C 000E               2341              MOVE.B      #14, D0             ; command for trap call to display message
0000278C  4E4F                    2342              TRAP        #15                 ; trap call
0000278E                          2343              
0000278E  4241                    2344              CLR         D1
00002790  3218                    2345              MOVE.W      (A0)+, D1
00002792                          2346  
00002792  43F9 0000283F           2347              LEA         dispHex, A1         ; Display space
00002798  103C 000E               2348              MOVE.B      #14, D0             ; command for trap call to display message
0000279C  4E4F                    2349              TRAP        #15                 ; trap call
0000279E                          2350              
0000279E  103C 0003               2351              MOVE.B      #3, D0
000027A2  4E4F                    2352              TRAP        #15
000027A4                          2353  
000027A4  6000 0002               2354              BRA         endSub
000027A8                          2355  
000027A8                          2356  invalid
000027A8                          2357  
000027A8                          2358  endSUB
000027A8                          2359          
000027A8  4CDF 7EFF               2360          MOVEM.L  (SP)+, D0-D7/A1-A6
000027AC  4E75                    2361          RTS
000027AE                          2362          
000027AE                          2363          
000027AE  48E7 FF7E               2364  PrntImm MOVEM.L D0-D7/A1-A6, -(SP)
000027B2                          2365          
000027B2  43F9 0000283A           2366          LEA         space, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027B8  103C 000E               2367          MOVE.B      #14, D0             ; command for trap call to display message
000027BC  4E4F                    2368          TRAP        #15                 ; trap call
000027BE                          2369          
000027BE  43F9 0000283D           2370          LEA         hashTag, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027C4  103C 000E               2371          MOVE.B      #14, D0             ; command for trap call to display message
000027C8  4E4F                    2372          TRAP        #15                 ; trap call
000027CA                          2373          
000027CA  4242                    2374          CLR         D2
000027CC  3401                    2375          MOVE.W      D1, D2
000027CE  E042                    2376          ASR         #eight, D2
000027D0  E242                    2377          ASR         #one, D2
000027D2  C47C 0007               2378          AND         #$07, D2
000027D6                          2379          
000027D6  4EB9 00002808           2380          JSR         MemShiftImm
000027DC                          2381          
000027DC  43F9 00002841           2382          LEA         comma, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027E2  103C 000E               2383          MOVE.B      #14, D0             ; command for trap call to display message
000027E6  4E4F                    2384          TRAP        #15                 ; trap call
000027E8                          2385          
000027E8  4242                    2386          CLR         D2
000027EA  4243                    2387          CLR         D3
000027EC  1601                    2388          MOVE.B      D1,D3
000027EE  C67C 0007               2389          AND         #$07, D3
000027F2                          2390          
000027F2  4EB8 215E               2391          JSR         printEA
000027F6                          2392          
000027F6  43F9 00002836           2393          LEA         newLine, A1        ; we know that the opcode will be ASR, so load A1 to print message
000027FC  103C 000E               2394          MOVE.B      #14, D0             ; command for trap call to display message
00002800  4E4F                    2395          TRAP        #15                 ; trap call
00002802                          2396          
00002802  4CDF 7EFF               2397          MOVEM.L  (SP)+, D0-D7/A1-A6
00002806  4E75                    2398          RTS
00002808                          2399          
00002808                          2400          
00002808  48E7 FF7E               2401  MemShiftImm     MOVEM.L D0-D7/A1-A6, -(SP)      ;caller saved data
0000280C  4241                    2402                  CLR     D1
0000280E                          2403                  
0000280E  1202                    2404                  MOVE.B  D2, D1
00002810  B23C 0000               2405                  CMP.B   #zero, D1
00002814  6700 000C               2406                  BEQ     displayEight
00002818                          2407                  
00002818  103C 0003               2408                  MOVE.B  #3, D0
0000281C  4E4F                    2409                  TRAP    #15
0000281E  6000 000C               2410                  BRA     endSubroutine
00002822                          2411                  
00002822  123C 0008               2412  displayEight    MOVE.B  #$08, D1
00002826  103C 0003               2413                  MOVE.B  #3, D0
0000282A  4E4F                    2414                  TRAP    #15                
0000282C                          2415  endSubroutine
0000282C  4CDF 7EFF               2416                  MOVEM.L  (SP)+, D0-D7/A1-A6     ; recall data
00002830  4E75                    2417                  RTS                             ; Return to main routine‏
00002832                          2418  
00002832                          2419  ***********************************************************************************************************
00002832                          2420  ***********************************************************************************************************
00002832                          2421  ***********************************************************************************************************
00002832                          2422  
00002832                          2423  printInvalid
00002832                          2424  endPROG    
00002832                          2425  
00002832  FFFF FFFF               2426      SIMHALT                             ; halt simulator
00002836                          2427  
00002836= 20 0D 0A 00             2428  newLine     DC.B    ' ', CR, LF, 0
0000283A= 20 20 00                2429  space       DC.B    '  ', 0
0000283D                          2430  
0000283D= 23 00                   2431  hashTag     DC.B    '#', 0
0000283F= 24 00                   2432  dispHex     DC.B    '$', 0
00002841= 2C 00                   2433  comma       DC.B    ',', 0
00002843                          2434  
00002843= 28 00                   2435  opPer       DC.B    '(', 0
00002845= 29 00                   2436  clPer       DC.B    ')', 0
00002847= 2D 00                   2437  dec         DC.B    '-', 0
00002849= 2B 00                   2438  inc         DC.B    '+', 0
0000284B                          2439  
0000284B= 4F 52 49 00             2440  ORImatch    DC.B    'ORI', 0
0000284F= 43 4D 50 49 00          2441  CMPImatch   DC.B    'CMPI', 0
00002854= 42 43 4C 52 00          2442  BCLRmatch   DC.B    'BCLR', 0
00002859= 4D 4F 56 45 00          2443  MOVEmatch   DC.B    'MOVE', 0
0000285E= 4D 4F 56 45 41 00       2444  MOVEAmatch  DC.B    'MOVEA', 0
00002864= 4E 45 47 00             2445  NEGmatch    DC.B    'NEG', 0
00002868= 52 54 53 00             2446  RTSmatch    DC.B    'RTS', 0
0000286C= 4A 53 52 00             2447  JSRmatch    DC.B    'JSR', 0
00002870= 4D 4F 56 45 4D 00       2448  MOVEMmatch  DC.B    'MOVEM', 0
00002876= 4C 45 41 00             2449  LEAmatch    DC.B    'LEA', 0
0000287A= 53 55 42 51 00          2450  SUBQmatch   DC.B    'SUBQ', 0
0000287F= 42 52 41 00             2451  BRAmatch    DC.B    'BRA', 0
00002883= 42 43 53 00             2452  BCSmatch    DC.B    'BCS', 0
00002887= 42 56 43 00             2453  BVCmatch    DC.B    'BVC', 0
0000288B= 42 47 45 00             2454  BGEmatch    DC.B    'BGE', 0
0000288F= 42 4C 54 00             2455  BLTmatch    DC.B    'BLT', 0
00002893= 44 49 56 53 00          2456  DIVSmatch   DC.B    'DIVS', 0
00002898= 4F 52 00                2457  ORmatch     DC.B    'OR', 0
0000289B= 53 55 42 00             2458  SUBmatch    DC.B    'SUB', 0
0000289F= 45 4F 52 00             2459  EORmatch    DC.B    'EOR', 0
000028A3= 43 4D 50 00             2460  CMPmatch    DC.B    'CMP', 0
000028A7= 4D 55 4C 53 00          2461  MULSmatch   DC.B    'MULS', 0
000028AC= 41 44 44 00             2462  ADDmatch    DC.B    'ADD', 0
000028B0= 41 44 44 41 00          2463  ADDAmatch   DC.B    'ADDA', 0
000028B5= 4C 53 52 00             2464  LSRmatch    DC.B    'LSR', 0
000028B9= 4C 53 4C 00             2465  LSLmatch    DC.B    'LSL', 0
000028BD= 41 53 52 00             2466  ASRmatch    DC.B    'ASR', 0
000028C1= 41 53 4C 00             2467  ASLmatch    DC.B    'ASL', 0
000028C5= 52 4F 52 00             2468  RORmatch    DC.B    'ROR', 0
000028C9= 52 4F 4C 00             2469  ROLmatch    DC.B    'ROL', 0
000028CD                          2470   
000028CD= 2E 42 00                2471  dispByte    DC.B    '.B', 0
000028D0= 2E 57 00                2472  dispWord    DC.B    '.W', 0
000028D3= 2E 4C 00                2473  dispLong    DC.B    '.L', 0
000028D6                          2474  
000028D6= 41 30 00                2475  dispA0      DC.B    'A0', 0
000028D9= 41 31 00                2476  dispA1      DC.B    'A1', 0
000028DC= 41 32 00                2477  dispA2      DC.B    'A2', 0
000028DF= 41 33 00                2478  dispA3      DC.B    'A3', 0
000028E2= 41 34 00                2479  dispA4      DC.B    'A4', 0
000028E5= 41 35 00                2480  dispA5      DC.B    'A5', 0
000028E8= 41 36 00                2481  dispA6      DC.B    'A6', 0
000028EB= 41 37 00                2482  dispA7      DC.B    'A7', 0
000028EE                          2483  
000028EE= 44 00                   2484  dispD       DC.B    'D',0
000028F0= 44 30 00                2485  dispD0      DC.B    'D0', 0
000028F3= 44 31 00                2486  dispD1      DC.B    'D1', 0
000028F6= 44 32 00                2487  dispD2      DC.B    'D2', 0
000028F9= 44 33 00                2488  dispD3      DC.B    'D3', 0
000028FC= 44 34 00                2489  dispD4      DC.B    'D4', 0
000028FF= 44 35 00                2490  dispD5      DC.B    'D5', 0
00002902= 44 36 00                2491  dispD6      DC.B    'D6', 0
00002905= 44 37 00                2492  dispD7      DC.B    'D7', 0  
00002908                          2493             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             2750
ABSSHORT            271E
ADDAMATCH           28B0
ADDMATCH            28AC
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            28C1
ASRMATCH            28BD
BCLRMATCH           2854
BCSMATCH            2883
BGEMATCH            288B
BLTMATCH            288F
BRAEIGHT            110E
BRAELEVEN           112C
BRAFIVE             10DE
BRAFOUR             10C2
BRAFOURTEEN         114A
BRAMATCH            287F
BRANINE             1128
BRAONE              10B6
BRASIX              10E2
BRATHIRTEEN         114A
BRATHREE            10BE
BRATWELVE           1146
BRATWO              10BA
BRAZERO             1086
BVCMATCH            2887
CLPER               2845
CMPIMATCH           284F
CMPMATCH            28A3
COMMA               2841
CR                  D
DEC                 2847
DISPA0              28D6
DISPA1              28D9
DISPA2              28DC
DISPA3              28DF
DISPA4              28E2
DISPA5              28E5
DISPA6              28E8
DISPA7              28EB
DISPBYTE            28CD
DISPD               28EE
DISPD0              28F0
DISPD1              28F3
DISPD2              28F6
DISPD3              28F9
DISPD4              28FC
DISPD5              28FF
DISPD6              2902
DISPD7              2905
DISPHEX             283F
DISPIMM             2782
DISPLAYA0           2296
DISPLAYA0A          2362
DISPLAYA0D          2626
DISPLAYA0P          248E
DISPLAYA1           22A6
DISPLAYA1A          237E
DISPLAYA1D          2642
DISPLAYA1P          24B6
DISPLAYA2           22B6
DISPLAYA2A          239A
DISPLAYA2D          265E
DISPLAYA2P          24DE
DISPLAYA3           22C6
DISPLAYA3A          23B6
DISPLAYA3D          267A
DISPLAYA3P          2506
DISPLAYA4           22D6
DISPLAYA4A          23D2
DISPLAYA4D          2696
DISPLAYA4P          252E
DISPLAYA5           22E6
DISPLAYA5A          23EE
DISPLAYA5D          26B2
DISPLAYA5P          2556
DISPLAYA6           22F6
DISPLAYA6A          240A
DISPLAYA6D          26CE
DISPLAYA6P          257E
DISPLAYA7           2306
DISPLAYA7A          2426
DISPLAYA7D          26EA
DISPLAYA7P          25A6
DISPLAYD0           21D6
DISPLAYD1           21E6
DISPLAYD2           21F6
DISPLAYD3           2206
DISPLAYD4           2216
DISPLAYD5           2226
DISPLAYD6           2236
DISPLAYD7           2246
DISPLAYEIGHT        2822
DISPLONG            28D3
DISPWORD            28D0
DIVSMATCH           2893
EIGHT               8
ELEVEN              B
ENDPROG             2832
ENDSUB              27A8
ENDSUBROUTINE       282C
EORMATCH            289F
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             283D
INC                 2849
INVALID             27A8
JSRMATCH            286C
LEAMATCH            2876
LF                  A
LOOP                100C
LSLMATCH            28B9
LSRMATCH            28B5
MEMSHIFTIMM         2808
MOVEAMATCH          285E
MOVEMATCH           2859
MOVEMMATCH          2870
MULSMATCH           28A7
NEGMATCH            2864
NEWLINE             2836
NINE                9
ONE                 1
OPASL               2116
OPASR               2122
OPBCC               117E
OPBCLR              1888
OPBCS               1EE2
OPBGE               1F4A
OPBLT               1F7E
OPBRA               1EAA
OPBVC               1F16
OPCMP               1482
OPCMPB              14B4
OPCMPI              1716
OPCMPIB             1762
OPCMPIL             1826
OPCMPIW             17C4
OPCMPL              1568
OPCMPW              150E
OPDIVS              12D6
OPDYNBCLR           18EC
OPEOR               1334
OPEORB              1362
OPEORL              1422
OPEORW              13C2
OPJSR               1CDA
OPLEA               1D6A
OPLSL               212E
OPLSR               213A
OPMOVEAL            1A6E
OPMOVEAW            1B68
OPMOVEB             195A
OPMOVEL             19DE
OPMOVEM             1D52
OPMOVEMLEA          1D36
OPMOVEW             1AD8
OPMULS              210A
OPNEG               1BD2
OPNEGB              1C00
OPNEGL              1C40
OPNEGW              1C80
OPOR                1184
OPORB               11C2
OPORI               15C2
OPORIB              15F0
OPORIL              16B4
OPORIW              1652
OPORL               1278
OPORW               121C
OPPER               2843
OPROL               2146
OPROR               2152
OPRTS               1D1A
OPRTSJSR            1CC0
OPSUB               1FB2
OPSUBB              1FFC
OPSUBL              20B0
OPSUBQ              1D6A
OPSUBQB             1D98
OPSUBQL             1E4C
OPSUBQW             1DF2
OPSUBW              2056
ORIMATCH            284B
ORMATCH             2898
PADDRDEC            25CE
PADDRDIR            2316
PADDRPOST           2442
PADDRREG            2256
PDATAREG            2196
PHEX                2706
PRINTEA             215E
PRINTINVALID        2832
PRNTIMM             27AE
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
ROLMATCH            28C9
RORMATCH            28C5
RTSMATCH            2868
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               283A
START               1000
SUBMATCH            289B
SUBQMATCH           287A
TEST_END            3009
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
