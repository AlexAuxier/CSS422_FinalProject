00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 2014-12-06 13:01:02

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Motorola 68k Disassembler
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =00003009                 11  test_end    EQU     $00003009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00003000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00003009             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 124C                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 0084                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0080                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 0094                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0090                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00B4                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00AC                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00A8                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00BA                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 00B6                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 00AE                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                102          AND.B       #secNib, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 02CA                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 0416                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                108          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 0580                109          BEQ         opBCLR
000010A6  C47C 0001                110          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                111          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 05D8                112          BEQ         opDynBCLR
000010B2  6000 11AC                113          BRA         printInvalid
000010B6                           114          
000010B6                           115          
000010B6  6000 063E                116  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           117  
000010BA  6000 06BE                118  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BE                           119  
000010BE                           120  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BE                           121  
000010BE  6000 07B4                122          BRA         opMOVEW
000010C2                           123  
000010C2  4242                     124  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010C4  1401                     125          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010C6  C43C 000F                126          AND.B       #secNib, D2             ; set first nibble to 0
000010CA                           127   
000010CA  B43C 0004                128          CMP.B       #four, D2           ; compare second nibble to 4
000010CE  6700 089E                129          BEQ         opNEG               ; branch to NEG method
000010D2  B43C 000E                130          CMP.B       #fourteen, D2       ; compare second nibble to E
000010D6  6700 0984                131          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010DA  6000 09F6                132          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010DE                           133  
000010DE  6000 0A26                134  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010E2                           135  
000010E2  4242                     136  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010E4  1401                     137          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010E6  C43C 000F                138          AND.B       #$0F, D2             ; set first nibble to 0
000010EA                           139   
000010EA  B43C 0000                140          CMP.B       #zero, D2           ; compare second nibble to 0
000010EE  6700 0A22                141          BEQ         opBRA               ; branch to BRA method
000010F2  B43C 0005                142          CMP.B       #five, D2           ; compare second nibble to 5
000010F6  6700 0A52                143          BEQ         opBCS               ; branch to BCS method
000010FA  B43C 0008                144          CMP.B       #eight, D2          ; compare second nibble to 8
000010FE  6700 0A56                145          BEQ         opBVC               ; branch to BCS method
00001102  B43C 000C                146          CMP.B       #twelve, D2         ; compare second nibble to 12
00001106  6700 0A5A                147          BEQ         opBGE               ; branch to BGE method
0000110A  6000 0A62                148          BRA         opBLT               ; otherwise, branch to BLT method
0000110E                           149  
0000110E                           150  braEight                ; there are two opCodes available DIVS, or OR
0000110E                           151  
0000110E                           152              
0000110E                           153  
0000110E  6000 0A6A                154  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
00001112                           155  
00001112                           156  braEleven                               ; there are two opCodes available EOR, or CMP
00001112  4242                     157              CLR     D2
00001114  1401                     158              MOVE.B  D1,D2
00001116  C438 000F                159              AND.B   $0F,D2
0000111A  EE42                     160              ASR     #seven,D2
0000111C  B43C 0003                161              CMP.B   #three,D2
00001120  6D00 014C                162              BLT     opCMP
00001124  B43C 0003                163              CMP.B   #three,D2
00001128  6E00 0058                164              BGT     opEOR
0000112C                           165              
0000112C                           166  
0000112C  6000 0A80                167  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
00001130                           168    
00001130                           169  braThirteen ; there are two opCodes available ADD, or ADDA
00001130                           170  
00001130  4242                     171  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
00001132  1401                     172              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001134  C438 000F                173              AND.B       $0F, D2             ; set first nibble to 0
00001138                           174   
00001138  B43C 0000                175              CMP.B       #zero, D2           ; compare second nibble to 0
0000113C  6700 0A88                176              BEQ         opASR               ; branch to ASR method
00001140  B43C 0001                177              CMP.B       #one, D2            ; compare second nibble to 1
00001144  6700 0A74                178              BEQ         opASL               ; branch to ASL method
00001148  B43C 0002                179              CMP.B       #two, D2            ; compare second nibble to 2
0000114C  6700 0A90                180              BEQ         opLSR               ; branch to LSR method
00001150  B43C 0003                181              CMP.B       #three, D2          ; compare second nibble to 3
00001154  6700 0A7C                182              BEQ         opLSL               ; branch to LSL method
00001158  B43C 0006                183              CMP.B       #six, D2            ; compare second nibble to 6
0000115C  6700 0A98                184              BEQ         opROR               ; branch to ROR method
00001160  6000 0A88                185              BRA         opROL               ; otherwise, branch to ROL method
00001164                           186              
00001164                           187  
00001164                           188  
00001164                           189  ***********************************************************************************************************
00001164                           190  *
00001164                           191  *               BCC OPCODE
00001164                           192  *
00001164                           193  ***********************************************************************************************************
00001164                           194          
00001164  4242                     195  opBCC       CLR     D2
00001166                           196              ; Determine Condition (4 bits)
00001166                           197              ; Determine Displacement AFTER condition (8 bits)
00001166  6000 FEA4                198              BRA     LOOP
0000116A                           199              
0000116A                           200              
0000116A                           201  ***********************************************************************************************************
0000116A                           202  *
0000116A                           203  *               OR OPCODE
0000116A                           204  *
0000116A                           205  ***********************************************************************************************************
0000116A                           206  
0000116A  43F9 000022C6            207  opOR        LEA     ORmatch,A1
00001170  103C 000E                208              MOVE.B  #14,D0
00001174  4E4F                     209              TRAP    #15
00001176                           210  
00001176                           211  ***********************************************************************************************************
00001176                           212  *
00001176                           213  *               DIVS OPCODE
00001176                           214  *
00001176                           215  ***********************************************************************************************************
00001176                           216  
00001176  43F9 000022C1            217  opDIVS      LEA     DIVSmatch,A1
0000117C  103C 000E                218              MOVE.B  #14,D0
00001180  4E4F                     219              TRAP    #15
00001182                           220      
00001182                           221      
00001182                           222  **********************************************************************************************************
00001182                           223  *
00001182                           224  *               EOR OPCODE
00001182                           225  *
00001182                           226  ***********************************************************************************************************
00001182                           227  
00001182  43F9 000022CD            228  opEOR       LEA         EORmatch,A1
00001188  103C 000E                229              MOVE.B      #14,D0
0000118C  4E4F                     230              TRAP        #15
0000118E                           231              
0000118E  4242                     232              CLR         D2
00001190                           233              
00001190  1218                     234              MOVE.B      (A0)+,D1
00001192  1401                     235              MOVE.B      D1,D2
00001194  EE42                     236              ASR         #seven,D2           ; Move bits 7 places over to find opmode
00001196  B43C 0004                237              CMP.B       #four,D2
0000119A  6700 0012                238              BEQ         opEORB              ; Byte in opmode
0000119E  B43C 0005                239              CMP.B       #five,D2
000011A2  6700 004A                240              BEQ         opEORW              ; Word in opmode
000011A6  B43C 0006                241              CMP.B       #six,D2
000011AA  6700 0082                242              BEQ         opEORL              ; Long in opmode
000011AE                           243              
000011AE  43F9 000022FB            244  opEORB      LEA         dispByte,A1
000011B4  103C 000E                245              MOVE.B      #14,D0
000011B8  4E4F                     246              TRAP        #15
000011BA                           247              
000011BA  43F9 00002268            248              LEA         space, A1           ; Display space
000011C0  103C 000E                249              MOVE.B      #14, D0             ; command for trap call to display message
000011C4  4E4F                     250              TRAP        #15                 ; trap call
000011C6                           251              
000011C6  4EB9 00001C10            252              JSR         printEA         ; Determines the "left" operand register
000011CC                           253              
000011CC  43F9 0000226F            254              LEA         comma, A1           ; Display space
000011D2  103C 000E                255              MOVE.B      #14, D0             ; command for trap call to display message
000011D6  4E4F                     256              TRAP        #15                 ; trap call
000011D8                           257              
000011D8  4EB9 00001C02            258              JSR         findRege
000011DE                           259              
000011DE  43F9 00002264            260              LEA         newLine,A1
000011E4  103C 000E                261              MOVE.B      #14,D0
000011E8  4E4F                     262              TRAP        #15                ; trap call
000011EA                           263              
000011EA  6000 FE20                264              BRA         LOOP
000011EE                           265              
000011EE                           266              
000011EE  43F9 000022FE            267  opEORW      LEA         dispWord,A1
000011F4  103C 000E                268              MOVE.B      #14,D0
000011F8  4E4F                     269              TRAP        #15
000011FA                           270              
000011FA  43F9 00002268            271              LEA         space, A1           ; Display space
00001200  103C 000E                272              MOVE.B      #14, D0             ; command for trap call to display message
00001204  4E4F                     273              TRAP        #15                 ; trap call
00001206                           274              
00001206  4EB9 00001C10            275              JSR         printEA         ; Determines the "left" operand register
0000120C                           276              
0000120C  43F9 0000226F            277              LEA         comma, A1           ; Display space
00001212  103C 000E                278              MOVE.B      #14, D0             ; command for trap call to display message
00001216  4E4F                     279              TRAP        #15                 ; trap call
00001218                           280              
00001218  4EB9 00001C02            281              JSR         findRege
0000121E                           282              
0000121E  43F9 00002264            283              LEA         newLine,A1
00001224  103C 000E                284              MOVE.B      #14,D0
00001228  4E4F                     285              TRAP        #15                ; trap call
0000122A                           286              
0000122A  6000 FDE0                287              BRA         LOOP
0000122E                           288              
0000122E  43F9 00002301            289  opEORL      LEA         dispLong,A1
00001234  103C 000E                290              MOVE.B      #14,D0
00001238  4E4F                     291              TRAP        #15
0000123A                           292              
0000123A  43F9 00002268            293              LEA         space, A1           ; Display space
00001240  103C 000E                294              MOVE.B      #14, D0             ; command for trap call to display message
00001244  4E4F                     295              TRAP        #15                 ; trap call
00001246                           296              
00001246  4EB9 00001C10            297              JSR         printEA         ; Determines the "left" operand register
0000124C                           298              
0000124C  43F9 0000226F            299              LEA         comma, A1           ; Display space
00001252  103C 000E                300              MOVE.B      #14, D0             ; command for trap call to display message
00001256  4E4F                     301              TRAP        #15                 ; trap call
00001258                           302              
00001258  4EB9 00001C02            303              JSR         findRege
0000125E                           304              
0000125E  43F9 00002264            305              LEA         newLine,A1
00001264  103C 000E                306              MOVE.B      #14,D0
00001268  4E4F                     307              TRAP        #15                ; trap call
0000126A                           308              
0000126A  6000 FDA0                309              BRA         LOOP
0000126E                           310  
0000126E                           311  ***********************************************************************************************************
0000126E                           312  *
0000126E                           313  *               CMP OPCODE
0000126E                           314  *
0000126E                           315  ***********************************************************************************************************
0000126E                           316  
0000126E  43F9 000022D1            317  opCMP       LEA         CMPmatch,A1
00001274  103C 000E                318              MOVE.B      #14,D0
00001278  4E4F                     319              TRAP        #15
0000127A                           320              
0000127A  4242                     321              CLR         D2
0000127C                           322              
0000127C  1218                     323              MOVE.B      (A0)+,D1
0000127E  1401                     324              MOVE.B      D1,D2
00001280  EE42                     325              ASR         #seven,D2           ; Move bits 7 places over to find opmode
00001282  B43C 0000                326              CMP.B       #zero,D2
00001286  6700 0016                327              BEQ         opCMPB              ; Byte in opmode
0000128A  B43C 0001                328              CMP.B       #one,D2
0000128E  6700 004E                329              BEQ         opCMPW              ; Word in opmode
00001292  B43C 0002                330              CMP.B       #two,D2
00001296  6700 0086                331              BEQ         opCMPL              ; Long in opmode
0000129A                           332              
0000129A  6000 0FC4                333              BRA         printInvalid        ; Incorrect input
0000129E                           334  
0000129E  43F9 000022FB            335  opCMPB      LEA         dispByte,A1
000012A4  103C 000E                336              MOVE.B      #14,D0
000012A8  4E4F                     337              TRAP        #15
000012AA                           338              
000012AA  43F9 00002268            339              LEA         space, A1           ; Display space
000012B0  103C 000E                340              MOVE.B      #14, D0             ; command for trap call to display message
000012B4  4E4F                     341              TRAP        #15                 ; trap call
000012B6                           342              
000012B6  4EB9 00001C10            343              JSR         printEA         ; Determines the "left" operand register
000012BC                           344              
000012BC  43F9 0000226F            345              LEA         comma, A1           ; Display space
000012C2  103C 000E                346              MOVE.B      #14, D0             ; command for trap call to display message
000012C6  4E4F                     347              TRAP        #15                 ; trap call
000012C8                           348              
000012C8  4EB9 00001C02            349              JSR         findRege
000012CE                           350              
000012CE  43F9 00002264            351              LEA         newLine,A1
000012D4  103C 000E                352              MOVE.B      #14,D0
000012D8  4E4F                     353              TRAP        #15
000012DA                           354              
000012DA  6000 FD30                355              BRA         LOOP
000012DE                           356              
000012DE  43F9 000022FE            357  opCMPW      LEA         dispWord,A1
000012E4  103C 000E                358              MOVE.B      #14,D0
000012E8  4E4F                     359              TRAP        #15
000012EA                           360              
000012EA  43F9 00002268            361              LEA         space, A1           ; Display space
000012F0  103C 000E                362              MOVE.B      #14, D0             ; command for trap call to display message
000012F4  4E4F                     363              TRAP        #15                 ; trap call
000012F6                           364              
000012F6  4EB9 00001C10            365              JSR         printEA         ; Determines the "left" operand register
000012FC                           366              
000012FC  43F9 0000226F            367              LEA         comma, A1           ; Display space
00001302  103C 000E                368              MOVE.B      #14, D0             ; command for trap call to display message
00001306  4E4F                     369              TRAP        #15                 ; trap call
00001308                           370              
00001308  4EB9 00001C02            371              JSR         findRege
0000130E                           372              
0000130E  43F9 00002264            373              LEA         newLine,A1
00001314  103C 000E                374              MOVE.B      #14,D0
00001318  4E4F                     375              TRAP        #15                ; trap call
0000131A                           376              
0000131A  6000 FCF0                377              BRA         LOOP
0000131E                           378  
0000131E  43F9 00002301            379  opCMPL      LEA         dispLong,A1
00001324  103C 000E                380              MOVE.B      #14,D0
00001328  4E4F                     381              TRAP        #15
0000132A                           382              
0000132A  43F9 00002268            383              LEA         space, A1           ; Display space
00001330  103C 000E                384              MOVE.B      #14, D0             ; command for trap call to display message
00001334  4E4F                     385              TRAP        #15                 ; trap call
00001336                           386              
00001336  4EB9 00001C10            387              JSR         printEA         ; Determines the "left" operand register
0000133C                           388              
0000133C  43F9 0000226F            389              LEA         comma, A1           ; Display space
00001342  103C 000E                390              MOVE.B      #14, D0             ; command for trap call to display message
00001346  4E4F                     391              TRAP        #15                 ; trap call
00001348                           392              
00001348  4EB9 00001C02            393              JSR         findRege
0000134E                           394              
0000134E  43F9 00002264            395              LEA         newLine,A1
00001354  103C 000E                396              MOVE.B      #14,D0
00001358  4E4F                     397              TRAP        #15                 ; trap call
0000135A                           398              
0000135A  6000 FCB0                399              BRA         LOOP
0000135E                           400              
0000135E                           401  ***********************************************************************************************************
0000135E                           402  *
0000135E                           403  *               ORI OPCODE
0000135E                           404  *
0000135E                           405  ***********************************************************************************************************
0000135E                           406  
0000135E  43F9 00002279            407  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
00001364  103C 000E                408          MOVE.B      #14, D0             ; command for trap call to display message
00001368  4E4F                     409          TRAP        #15                 ; trap call
0000136A                           410          
0000136A  1218                     411          MOVE.B      (A0)+, D1
0000136C  1401                     412          MOVE.B      D1,D2               ; copy data over
0000136E  EC42                     413          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001370  B43C 0000                414          CMP.B       #zero,D2
00001374  6700 0016                415          BEQ         opORIB
00001378  B43C 0001                416          CMP.B       #one,D2
0000137C  6700 0070                417          BEQ         opORIW
00001380  B43C 0002                418          CMP.B       #two,D2
00001384  6700 00CA                419          BEQ         opORIL
00001388                           420          
00001388  6000 0ED6                421          BRA         printInvalid
0000138C                           422          
0000138C  43F9 000022FB            423  opORIB  LEA         dispByte, A1        ; Display byte
00001392  103C 000E                424          MOVE.B      #14, D0             ; command for trap call to display message
00001396  4E4F                     425          TRAP        #15                 ; trap call
00001398                           426          
00001398  43F9 00002268            427          LEA         space, A1           ; Display space
0000139E  103C 000E                428          MOVE.B      #14, D0             ; command for trap call to display message
000013A2  4E4F                     429          TRAP        #15                 ; trap call
000013A4                           430          
000013A4  4242                     431          CLR         D2
000013A6  1401                     432          MOVE.B      D1,D2
000013A8  E642                     433          ASR         #three,D2
000013AA  C47C 0007                434          AND         #seven,D2
000013AE  4243                     435          CLR         D3        
000013B0  1601                     436          MOVE.B      D1,D3
000013B2  C67C 0007                437          AND         #seven,D3
000013B6                           438          
000013B6  4241                     439          CLR         D1
000013B8  3218                     440          MOVE.W      (A0)+, D1
000013BA                           441          
000013BA  43F9 0000226B            442          LEA         hashTag, A1           ; Display space
000013C0  103C 000E                443          MOVE.B      #14, D0             ; command for trap call to display message
000013C4  4E4F                     444          TRAP        #15                 ; trap call
000013C6                           445          
000013C6  103C 0003                446          MOVE.B      #3, D0
000013CA  4E4F                     447          TRAP        #15
000013CC                           448          
000013CC  43F9 0000226F            449          LEA         comma, A1           ; Display space
000013D2  103C 000E                450          MOVE.B      #14, D0             ; command for trap call to display message
000013D6  4E4F                     451          TRAP        #15                 ; trap call
000013D8                           452          
000013D8  4EB9 00001C10            453          JSR         printEA
000013DE                           454          
000013DE  43F9 00002264            455          LEA         newLine, A1           ; Display space
000013E4  103C 000E                456          MOVE.B      #14, D0             ; command for trap call to display message
000013E8  4E4F                     457          TRAP        #15                 ; trap call
000013EA                           458          
000013EA  6000 FC20                459          BRA         LOOP
000013EE                           460          
000013EE                           461          
000013EE  43F9 000022FE            462  opORIW  LEA         dispWord, A1        ; Display byte
000013F4  103C 000E                463          MOVE.B      #14, D0             ; command for trap call to display message
000013F8  4E4F                     464          TRAP        #15                 ; trap call
000013FA                           465          
000013FA  43F9 00002268            466          LEA         space, A1           ; Display space
00001400  103C 000E                467          MOVE.B      #14, D0             ; command for trap call to display message
00001404  4E4F                     468          TRAP        #15                 ; trap call
00001406                           469          
00001406  4242                     470          CLR         D2
00001408  1401                     471          MOVE.B      D1,D2
0000140A  E642                     472          ASR         #three,D2
0000140C  C47C 0007                473          AND         #seven,D2
00001410  4243                     474          CLR         D3        
00001412  1601                     475          MOVE.B      D1,D3
00001414  C67C 0007                476          AND         #seven,D3
00001418                           477          
00001418  4241                     478          CLR         D1
0000141A  3218                     479          MOVE.W      (A0)+, D1
0000141C                           480          
0000141C  43F9 0000226B            481          LEA         hashTag, A1           ; Display space
00001422  103C 000E                482          MOVE.B      #14, D0             ; command for trap call to display message
00001426  4E4F                     483          TRAP        #15                 ; trap call
00001428                           484          
00001428  103C 0003                485          MOVE.B      #3, D0
0000142C  4E4F                     486          TRAP        #15
0000142E                           487          
0000142E  43F9 0000226F            488          LEA         comma, A1           ; Display space
00001434  103C 000E                489          MOVE.B      #14, D0             ; command for trap call to display message
00001438  4E4F                     490          TRAP        #15                 ; trap call
0000143A                           491          
0000143A  4EB9 00001C10            492          JSR         printEA
00001440                           493          
00001440  43F9 00002264            494          LEA         newLine, A1           ; Display space
00001446  103C 000E                495          MOVE.B      #14, D0             ; command for trap call to display message
0000144A  4E4F                     496          TRAP        #15                 ; trap call
0000144C                           497          
0000144C  6000 FBBE                498          BRA         LOOP
00001450                           499       
00001450  43F9 00002301            500  opORIL  LEA         dispLong, A1        ; Display byte
00001456  103C 000E                501          MOVE.B      #14, D0             ; command for trap call to display message
0000145A  4E4F                     502          TRAP        #15                 ; trap call
0000145C                           503          
0000145C  43F9 00002268            504          LEA         space, A1           ; Display space
00001462  103C 000E                505          MOVE.B      #14, D0             ; command for trap call to display message
00001466  4E4F                     506          TRAP        #15                 ; trap call
00001468                           507          
00001468  4242                     508          CLR         D2
0000146A  1401                     509          MOVE.B      D1,D2
0000146C  E642                     510          ASR         #three,D2
0000146E  C47C 0007                511          AND         #seven,D2
00001472  4243                     512          CLR         D3        
00001474  1601                     513          MOVE.B      D1,D3
00001476  C67C 0007                514          AND         #seven,D3
0000147A                           515          
0000147A  4241                     516          CLR         D1
0000147C  2218                     517          MOVE.L      (A0)+, D1
0000147E                           518          
0000147E  43F9 0000226B            519          LEA         hashTag, A1           ; Display space
00001484  103C 000E                520          MOVE.B      #14, D0             ; command for trap call to display message
00001488  4E4F                     521          TRAP        #15                 ; trap call
0000148A                           522          
0000148A  103C 0003                523          MOVE.B      #3, D0
0000148E  4E4F                     524          TRAP        #15
00001490                           525          
00001490  43F9 0000226F            526          LEA         comma, A1           ; Display space
00001496  103C 000E                527          MOVE.B      #14, D0             ; command for trap call to display message
0000149A  4E4F                     528          TRAP        #15                 ; trap call
0000149C                           529          
0000149C  4EB9 00001C10            530          JSR         printEA
000014A2                           531          
000014A2  43F9 00002264            532          LEA         newLine, A1           ; Display space
000014A8  103C 000E                533          MOVE.B      #14, D0             ; command for trap call to display message
000014AC  4E4F                     534          TRAP        #15                 ; trap call
000014AE                           535          
000014AE  6000 FB5C                536          BRA         LOOP
000014B2                           537           
000014B2  43F9 0000227D            538  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000014B8  103C 000E                539          MOVE.B      #14, D0             ; command for trap call to display message
000014BC  4E4F                     540          TRAP        #15                 ; trap call
000014BE                           541                  
000014BE  1218                     542          MOVE.B      (A0)+, D1
000014C0  1401                     543          MOVE.B      D1,D2               ; copy data over
000014C2  EC42                     544          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000014C4  B43C 0000                545          CMP.B       #zero,D2
000014C8  6700 0034                546          BEQ         opCMPIB
000014CC  B43C 0001                547          CMP.B       #one,D2
000014D0  6700 008E                548          BEQ         opCMPIW
000014D4  B43C 0002                549          CMP.B       #two,D2
000014D8  6700 00E8                550          BEQ         opCMPIL
000014DC                           551          
000014DC  1401                     552          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000014DE  E542                     553          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
000014E0  1802                     554          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
000014E2  4242                     555          CLR         D2                  ; Clear out data register
000014E4  1404                     556          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
000014E6  EA42                     557          ASR         #five,D2            ; Shift the register out to get just the mode
000014E8  1802                     558          MOVE.B      D2,D4               ; Store mode into D4
000014EA  4242                     559          CLR         D2
000014EC                           560          
000014EC  1401                     561          MOVE.B      D1,D2               ; Getting the EA register
000014EE  EB42                     562          ASL         #five,D2
000014F0  1A02                     563          MOVE.B      D2,D5               ; Move just the register into D5
000014F2  4242                     564          CLR         D2                  ; Clearing D2 to put data back
000014F4  1405                     565          MOVE.B      D5,D2               ; Putting back the register
000014F6  EA42                     566          ASR         #five,D2            ; Shifting bits in order to read the register
000014F8  1A02                     567          MOVE.B      D2,D5               ; Store register into D5
000014FA                           568          
000014FA  6000 FB10                569          BRA         LOOP                ; go back to the loop
000014FE                           570  
000014FE  43F9 000022FB            571  opCMPIB LEA         dispByte, A1        ; Display byte
00001504  103C 000E                572          MOVE.B      #14, D0             ; command for trap call to display message
00001508  4E4F                     573          TRAP        #15                 ; trap call
0000150A                           574          
0000150A  43F9 00002268            575          LEA         space, A1           ; Display space
00001510  103C 000E                576          MOVE.B      #14, D0             ; command for trap call to display message
00001514  4E4F                     577          TRAP        #15                 ; trap call
00001516                           578          
00001516  4242                     579          CLR         D2
00001518  1401                     580          MOVE.B      D1,D2
0000151A  E642                     581          ASR         #three,D2
0000151C  C47C 0007                582          AND         #seven,D2
00001520  4243                     583          CLR         D3        
00001522  1601                     584          MOVE.B      D1,D3
00001524  C67C 0007                585          AND         #seven,D3
00001528                           586          
00001528  4241                     587          CLR         D1
0000152A  3218                     588          MOVE.W      (A0)+, D1
0000152C                           589          
0000152C  43F9 0000226B            590          LEA         hashTag, A1           ; Display space
00001532  103C 000E                591          MOVE.B      #14, D0             ; command for trap call to display message
00001536  4E4F                     592          TRAP        #15                 ; trap call
00001538                           593          
00001538  103C 0003                594          MOVE.B      #3, D0
0000153C  4E4F                     595          TRAP        #15
0000153E                           596          
0000153E  43F9 0000226F            597          LEA         comma, A1           ; Display space
00001544  103C 000E                598          MOVE.B      #14, D0             ; command for trap call to display message
00001548  4E4F                     599          TRAP        #15                 ; trap call
0000154A                           600          
0000154A  4EB9 00001C10            601          JSR         printEA
00001550                           602          
00001550  43F9 00002264            603          LEA         newLine, A1           ; Display space
00001556  103C 000E                604          MOVE.B      #14, D0             ; command for trap call to display message
0000155A  4E4F                     605          TRAP        #15                 ; trap call
0000155C                           606  
0000155C  6000 FAAE                607          BRA         LOOP
00001560                           608  
00001560  43F9 000022FE            609  opCMPIW LEA         dispWord, A1        ; Display byte
00001566  103C 000E                610          MOVE.B      #14, D0             ; command for trap call to display message
0000156A  4E4F                     611          TRAP        #15                 ; trap call
0000156C                           612          
0000156C  43F9 00002268            613          LEA         space, A1           ; Display space
00001572  103C 000E                614          MOVE.B      #14, D0             ; command for trap call to display message
00001576  4E4F                     615          TRAP        #15                 ; trap call
00001578                           616          
00001578  4242                     617          CLR         D2
0000157A  1401                     618          MOVE.B      D1,D2
0000157C  E642                     619          ASR         #three,D2
0000157E  C47C 0007                620          AND         #seven,D2
00001582  4243                     621          CLR         D3        
00001584  1601                     622          MOVE.B      D1,D3
00001586  C67C 0007                623          AND         #seven,D3
0000158A                           624          
0000158A  4241                     625          CLR         D1
0000158C  3218                     626          MOVE.W      (A0)+, D1
0000158E                           627          
0000158E  43F9 0000226B            628          LEA         hashTag, A1           ; Display space
00001594  103C 000E                629          MOVE.B      #14, D0             ; command for trap call to display message
00001598  4E4F                     630          TRAP        #15                 ; trap call
0000159A                           631          
0000159A  103C 0003                632          MOVE.B      #3, D0
0000159E  4E4F                     633          TRAP        #15
000015A0                           634          
000015A0  43F9 0000226F            635          LEA         comma, A1           ; Display space
000015A6  103C 000E                636          MOVE.B      #14, D0             ; command for trap call to display message
000015AA  4E4F                     637          TRAP        #15                 ; trap call
000015AC                           638          
000015AC  4EB9 00001C10            639          JSR         printEA
000015B2                           640          
000015B2  43F9 00002264            641          LEA         newLine, A1           ; Display space
000015B8  103C 000E                642          MOVE.B      #14, D0             ; command for trap call to display message
000015BC  4E4F                     643          TRAP        #15                 ; trap call
000015BE  6000 FA4C                644          BRA         LOOP
000015C2                           645  
000015C2  43F9 00002301            646  opCMPIL LEA         dispLong, A1        ; Display byte
000015C8  103C 000E                647          MOVE.B      #14, D0             ; command for trap call to display message
000015CC  4E4F                     648          TRAP        #15                 ; trap call
000015CE                           649          
000015CE  43F9 00002268            650          LEA         space, A1           ; Display space
000015D4  103C 000E                651          MOVE.B      #14, D0             ; command for trap call to display message
000015D8  4E4F                     652          TRAP        #15                 ; trap call
000015DA                           653          
000015DA  4242                     654          CLR         D2
000015DC  1401                     655          MOVE.B      D1,D2
000015DE  E642                     656          ASR         #three,D2
000015E0  C47C 0007                657          AND         #seven,D2
000015E4  4243                     658          CLR         D3        
000015E6  1601                     659          MOVE.B      D1,D3
000015E8  C67C 0007                660          AND         #seven,D3
000015EC                           661          
000015EC  4241                     662          CLR         D1
000015EE  3218                     663          MOVE.W      (A0)+, D1
000015F0                           664          
000015F0  43F9 0000226B            665          LEA         hashTag, A1           ; Display space
000015F6  103C 000E                666          MOVE.B      #14, D0             ; command for trap call to display message
000015FA  4E4F                     667          TRAP        #15                 ; trap call
000015FC                           668          
000015FC  103C 0003                669          MOVE.B      #3, D0
00001600  4E4F                     670          TRAP        #15
00001602                           671          
00001602  43F9 0000226F            672          LEA         comma, A1           ; Display space
00001608  103C 000E                673          MOVE.B      #14, D0             ; command for trap call to display message
0000160C  4E4F                     674          TRAP        #15                 ; trap call
0000160E                           675          
0000160E  4EB9 00001C10            676          JSR         printEA
00001614                           677          
00001614  43F9 00002264            678          LEA         newLine, A1           ; Display space
0000161A  103C 000E                679          MOVE.B      #14, D0             ; command for trap call to display message
0000161E  4E4F                     680          TRAP        #15                 ; trap call
00001620                           681          
00001620  6000 F9EA                682          BRA         LOOP
00001624                           683  
00001624  43F9 00002282            684  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000162A  103C 000E                685                  MOVE.B      #14, D0             ; command for trap call to display message
0000162E  4E4F                     686                  TRAP        #15                 ; trap call
00001630                           687  
00001630  43F9 00002268            688                  LEA         space, A1           ; Display space
00001636  103C 000E                689                  MOVE.B      #14, D0             ; command for trap call to display message
0000163A  4E4F                     690                  TRAP        #15                 ; trap call
0000163C                           691                  
0000163C  4242                     692                  CLR         D2
0000163E  1218                     693                  MOVE.B      (A0)+, D1
00001640  1401                     694                  MOVE.B      D1,D2               ; copy data over
00001642  E642                     695                  ASR         #three,D2           ; Shift to the right to remove register
00001644  C47C 0007                696                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
00001648                           697                  
00001648  4243                     698                  CLR         D3                  ; Clear D3 so we can move D1 in
0000164A  1601                     699                  MOVE.B      D1,D3               ; Move othr byte in
0000164C  C67C 0007                700                  AND         #seven,D3           ; Set everything besides register to 0
00001650                           701                  
00001650  4241                     702                  CLR         D1
00001652  3218                     703                  MOVE.W      (A0)+, D1
00001654                           704                 
00001654                           705                  
00001654  43F9 0000226B            706                  LEA         hashTag, A1           ; Display space
0000165A  103C 000E                707                  MOVE.B      #14, D0             ; command for trap call to display message
0000165E  4E4F                     708                  TRAP        #15                 ; trap call
00001660                           709          
00001660  103C 0003                710                  MOVE.B      #3, D0
00001664  4E4F                     711                  TRAP        #15
00001666                           712          
00001666  43F9 0000226F            713                  LEA         comma, A1           ; Display space
0000166C  103C 000E                714                  MOVE.B      #14, D0             ; command for trap call to display message
00001670  4E4F                     715                  TRAP        #15                 ; trap call
00001672                           716                  
00001672  4EB9 00001C10            717                  JSR         printEA
00001678                           718          
00001678  43F9 00002264            719                  LEA         newLine, A1           ; Display space
0000167E  103C 000E                720                  MOVE.B      #14, D0             ; command for trap call to display message
00001682  4E4F                     721                  TRAP        #15                 ; trap call
00001684                           722                  
00001684                           723                  
00001684  6000 F986                724                  BRA         LOOP                
00001688                           725          
00001688                           726  opDynBCLR       
00001688  4241                     727                  CLR         D1
0000168A  1218                     728                  MOVE.B      (A0)+,D1            ; Copy second byte in
0000168C  1601                     729                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
0000168E  E243                     730                  ASR         #one,D3             ; Shift register over to the end
00001690  C67C 0007                731                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
00001694                           732                  
00001694  1401                     733                  MOVE.B      D1,D2
00001696  EC42                     734                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
00001698  B47C 0002                735                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
0000169C  6600 0BC2                736                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
000016A0                           737  
000016A0                           738                  
000016A0  43F9 00002282            739                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
000016A6  103C 000E                740                  MOVE.B      #14, D0             ; command for trap call to display message
000016AA  4E4F                     741                  TRAP        #15                 ; trap call  
000016AC                           742                  
000016AC  43F9 00002268            743                  LEA         space, A1           ; Display space
000016B2  103C 000E                744                  MOVE.B      #14, D0             ; command for trap call to display message
000016B6  4E4F                     745                  TRAP        #15                 ; trap call
000016B8                           746                  
000016B8  143C 0000                747                  MOVE.B      #zero,D2                
000016BC  4EB9 00001C10            748                  JSR         printEA
000016C2                           749                  
000016C2  43F9 0000226F            750                  LEA         comma, A1           ; Display space
000016C8  103C 000E                751                  MOVE.B      #14, D0             ; command for trap call to display message
000016CC  4E4F                     752                  TRAP        #15                 ; trap call
000016CE                           753                  
000016CE  4242                     754                  CLR         D2
000016D0  1401                     755                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000016D2  E642                     756                  ASR         #three,D2           ; Remove/shift the register out
000016D4  C47C 0007                757                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000016D8                           758                  
000016D8  4243                     759                  CLR         D3                  ; Clearing D3 to avoid mashing data
000016DA  1601                     760                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000016DC  C67C 0007                761                  AND         #seven,D3           ; Change all bits except for register bits to 0
000016E0                           762                  
000016E0                           763  
000016E0  4EB9 00001C10            764                  JSR         printEA
000016E6                           765          
000016E6  43F9 00002264            766                  LEA         newLine, A1           ; Display space
000016EC  103C 000E                767                  MOVE.B      #14, D0             ; command for trap call to display message
000016F0  4E4F                     768                  TRAP        #15                 ; trap call            
000016F2                           769  
000016F2                           770  
000016F2  6000 F918                771                  BRA         LOOP                ; go back to the loop
000016F6                           772   
000016F6                           773  opMOVEB 
000016F6  43F9 00002287            774          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
000016FC  103C 000E                775          MOVE.B      #14, D0             ; command for trap call to display message
00001700  4E4F                     776          TRAP        #15                 ; trap call
00001702  43F9 000022FB            777          LEA         dispByte, A1        ; display byte
00001708  103C 000E                778          MOVE.B      #14, D0             ; command for trap call to display message
0000170C  4E4F                     779          TRAP        #15                 ; trap call
0000170E  43F9 00002268            780          LEA         space, A1           ; create spaces
00001714  103C 000E                781          MOVE.B      #14, D0             ; command for trap call to display message
00001718  4E4F                     782          TRAP        #15                 ; trap call
0000171A                           783          
0000171A                           784          
0000171A  4245                     785          CLR         D5                  ; Clear D5
0000171C  1A01                     786          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000171E  E245                     787          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001720  CA7C 0007                788          AND         #seven,D5
00001724                           789          
00001724  4244                     790          CLR         D4                  ; Clear out D4
00001726  1801                     791          MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001728  C87C 0001                792          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000172C                           793          
0000172C  4241                     794          CLR          D1
0000172E  4242                     795          CLR          D2
00001730  1218                     796          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001732  1401                     797          MOVE.B      D1,D2
00001734  EC42                     798          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001736  D842                     799          ADD         D2,D4               ; Adds the remaining bits to D4
00001738                           800          
00001738  4242                     801          CLR         D2
0000173A  1401                     802          MOVE.B      D1,D2               ; Copy new byte over to D2
0000173C  E642                     803          ASR         #three,D2           ; Shift source register out
0000173E  C47C 0007                804          AND         #seven,D2           ; Set everything to 0 except for the mode
00001742                           805          
00001742  4243                     806          CLR         D3
00001744  1601                     807          MOVE.B      D1,D3
00001746  C67C 0007                808          AND         #seven,D3
0000174A                           809          
0000174A  4EB9 00001C10            810          JSR         printEA
00001750                           811          
00001750  43F9 0000226F            812          LEA         comma, A1           ; Display space
00001756  103C 000E                813          MOVE.B      #14, D0             ; command for trap call to display message
0000175A  4E4F                     814          TRAP        #15                 ; trap call
0000175C                           815          
0000175C  4242                     816          CLR         D2
0000175E  4243                     817          CLR         D3
00001760  1404                     818          MOVE.B      D4,D2
00001762  1605                     819          MOVE.B      D5,D3
00001764                           820          
00001764  4EB9 00001C10            821          JSR         printEA
0000176A                           822          
0000176A                           823          
0000176A  43F9 00002264            824          LEA         newLine, A1           ; Display space
00001770  103C 000E                825          MOVE.B      #14, D0             ; command for trap call to display message
00001774  4E4F                     826          TRAP        #15                 ; trap call            
00001776                           827  
00001776                           828  
00001776  6000 F894                829          BRA         LOOP                ; go back to the loop
0000177A                           830          
0000177A                           831  opMOVEL     
0000177A                           832          
0000177A  4245                     833              CLR         D5                  ; Clear D5
0000177C  1A01                     834              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000177E  E245                     835              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001780  CA7C 0007                836              AND         #seven,D5
00001784                           837          
00001784  4244                     838              CLR         D4                  ; Clear out D4
00001786  1801                     839              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001788  C87C 0001                840              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000178C                           841          
0000178C  4241                     842              CLR          D1
0000178E  4242                     843              CLR          D2
00001790  1218                     844              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001792  1401                     845              MOVE.B      D1,D2
00001794  EC42                     846              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001796  D842                     847              ADD         D2,D4               ; Adds the remaining bits to D4
00001798                           848          
00001798  B87C 0001                849              CMP         #one,D4             ; Check if it is MOVEA
0000179C  6700 006C                850              BEQ         opMOVEAL            ; If it is, branch off
000017A0                           851              
000017A0  43F9 00002287            852              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000017A6  103C 000E                853              MOVE.B      #14, D0             ; command for trap call to display message
000017AA  4E4F                     854              TRAP        #15                 ; trap call  
000017AC                           855              
000017AC                           856              
000017AC  43F9 00002301            857              LEA         dispLong,A1
000017B2  103C 000E                858              MOVE.B      #14, D0             ; command for trap call to display message
000017B6  4E4F                     859              TRAP        #15                 ; trap call
000017B8                           860              
000017B8  43F9 00002268            861              LEA         space, A1           ; create spaces
000017BE  103C 000E                862              MOVE.B      #14, D0             ; command for trap call to display message
000017C2  4E4F                     863              TRAP        #15                 ; trap call
000017C4                           864          
000017C4  4242                     865              CLR         D2
000017C6  1401                     866              MOVE.B      D1,D2               ; Copy new byte over to D2
000017C8  E642                     867              ASR         #three,D2           ; Shift source register out
000017CA  C47C 0007                868              AND         #seven,D2           ; Set everything to 0 except for the mode
000017CE                           869          
000017CE  4243                     870              CLR         D3
000017D0  1601                     871              MOVE.B      D1,D3
000017D2  C67C 0007                872              AND         #seven,D3
000017D6                           873              
000017D6  4241                     874              CLR         D1                  ; Clear D1
000017D8  2218                     875              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
000017DA                           876              
000017DA  4EB9 00001C10            877              JSR         printEA
000017E0                           878              
000017E0  43F9 0000226F            879              LEA         comma, A1           ; Display comma
000017E6  103C 000E                880              MOVE.B      #14, D0             ; command for trap call to display message
000017EA  4E4F                     881              TRAP        #15                 ; trap call
000017EC                           882          
000017EC  4242                     883              CLR         D2
000017EE  4243                     884              CLR         D3
000017F0  1404                     885              MOVE.B      D4,D2
000017F2  1605                     886              MOVE.B      D5,D3
000017F4                           887              
000017F4                           888  
000017F4                           889              
000017F4  4EB9 00001C10            890              JSR         printEA
000017FA                           891          
000017FA                           892          
000017FA  43F9 00002264            893              LEA         newLine, A1           ; Display space
00001800  103C 000E                894              MOVE.B      #14, D0             ; command for trap call to display message
00001804  4E4F                     895              TRAP        #15                 ; trap call            
00001806                           896  
00001806                           897  
00001806  6000 F804                898              BRA         LOOP                ; go back to the loop
0000180A                           899              
0000180A                           900  opMOVEAL
0000180A                           901  
0000180A  43F9 0000228C            902              LEA         MOVEAmatch,A1
00001810  103C 000E                903              MOVE.B      #14, D0             ; command for trap call to display message
00001814  4E4F                     904              TRAP        #15                 ; trap call
00001816                           905              
00001816  43F9 00002301            906              LEA         dispLong,A1
0000181C  103C 000E                907              MOVE.B      #14, D0             ; command for trap call to display message
00001820  4E4F                     908              TRAP        #15                 ; trap call
00001822                           909              
00001822                           910  
00001822  43F9 00002268            911              LEA         space, A1           ; create spaces
00001828  103C 000E                912              MOVE.B      #14, D0             ; command for trap call to display message
0000182C  4E4F                     913              TRAP        #15                 ; trap call
0000182E                           914              
0000182E  4242                     915              CLR         D2
00001830  1401                     916              MOVE.B      D1,D2               ; Copy new byte over to D2
00001832  E642                     917              ASR         #three,D2           ; Shift source register out
00001834  C47C 0007                918              AND         #seven,D2           ; Set everything to 0 except for the mode
00001838                           919          
00001838  4243                     920              CLR         D3
0000183A  1601                     921              MOVE.B      D1,D3
0000183C  C67C 0007                922              AND         #seven,D3
00001840                           923              
00001840  4241                     924              CLR         D1                  ; Clear D1
00001842  3218                     925              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001844                           926              
00001844                           927              
00001844  4EB9 00001C10            928              JSR         printEA
0000184A                           929              
0000184A  43F9 0000226F            930              LEA         comma, A1           ; Display comma
00001850  103C 000E                931              MOVE.B      #14, D0             ; command for trap call to display message
00001854  4E4F                     932              TRAP        #15                 ; trap call
00001856                           933  
00001856  4242                     934              CLR         D2
00001858  4243                     935              CLR         D3
0000185A  1404                     936              MOVE.B      D4,D2
0000185C  1605                     937              MOVE.B      D5,D3
0000185E                           938          
0000185E  4EB9 00001C10            939              JSR         printEA
00001864                           940          
00001864                           941          
00001864  43F9 00002264            942              LEA         newLine, A1           ; Display space
0000186A  103C 000E                943              MOVE.B      #14, D0             ; command for trap call to display message
0000186E  4E4F                     944              TRAP        #15                 ; trap call            
00001870                           945  
00001870                           946  
00001870  6000 F79A                947              BRA         LOOP                ; go back to the loop
00001874                           948  
00001874                           949  opMOVEW
00001874                           950          
00001874  4245                     951              CLR         D5                  ; Clear D5
00001876  1A01                     952              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001878  E245                     953              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
0000187A  CA7C 0007                954              AND         #seven,D5
0000187E                           955          
0000187E  4244                     956              CLR         D4                  ; Clear out D4
00001880  1801                     957              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001882  C87C 0001                958              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001886                           959          
00001886  4241                     960              CLR          D1
00001888  4242                     961              CLR          D2
0000188A  1218                     962              MOVE.B      (A0)+,D1            ; Copy byte into D1
0000188C  1401                     963              MOVE.B      D1,D2
0000188E  EC42                     964              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001890  D842                     965              ADD         D2,D4               ; Adds the remaining bits to D4
00001892                           966          
00001892  B87C 0001                967              CMP         #one,D4             ; Check if it is MOVEA
00001896  6700 006C                968              BEQ         opMOVEAW            ; If it is, branch off
0000189A                           969              
0000189A  43F9 00002287            970              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000018A0  103C 000E                971              MOVE.B      #14, D0             ; command for trap call to display message
000018A4  4E4F                     972              TRAP        #15                 ; trap call  
000018A6                           973              
000018A6  43F9 000022FE            974              LEA         dispWord,A1
000018AC  103C 000E                975              MOVE.B      #14, D0             ; command for trap call to display message
000018B0  4E4F                     976              TRAP        #15                 ; trap call
000018B2                           977              
000018B2  43F9 00002268            978              LEA         space, A1           ; create spaces
000018B8  103C 000E                979              MOVE.B      #14, D0             ; command for trap call to display message
000018BC  4E4F                     980              TRAP        #15                 ; trap call
000018BE                           981          
000018BE  4242                     982              CLR         D2
000018C0  1401                     983              MOVE.B      D1,D2               ; Copy new byte over to D2
000018C2  E642                     984              ASR         #three,D2           ; Shift source register out
000018C4  C47C 0007                985              AND         #seven,D2           ; Set everything to 0 except for the mode
000018C8                           986          
000018C8  4243                     987              CLR         D3
000018CA  1601                     988              MOVE.B      D1,D3
000018CC  C67C 0007                989              AND         #seven,D3
000018D0                           990              
000018D0  4241                     991              CLR         D1                  ; Clear D1
000018D2  3218                     992              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
000018D4                           993              
000018D4  4EB9 00001C10            994              JSR         printEA
000018DA                           995              
000018DA  43F9 0000226F            996              LEA         comma, A1           ; Display comma
000018E0  103C 000E                997              MOVE.B      #14, D0             ; command for trap call to display message
000018E4  4E4F                     998              TRAP        #15                 ; trap call
000018E6                           999          
000018E6  4242                    1000              CLR         D2
000018E8  4243                    1001              CLR         D3
000018EA  1404                    1002              MOVE.B      D4,D2
000018EC  1605                    1003              MOVE.B      D5,D3
000018EE                          1004              
000018EE                          1005  
000018EE                          1006              
000018EE  4EB9 00001C10           1007              JSR         printEA
000018F4                          1008          
000018F4                          1009          
000018F4  43F9 00002264           1010              LEA         newLine, A1           ; Display space
000018FA  103C 000E               1011              MOVE.B      #14, D0             ; command for trap call to display message
000018FE  4E4F                    1012              TRAP        #15                 ; trap call            
00001900                          1013  
00001900                          1014  
00001900  6000 F70A               1015              BRA         LOOP                ; go back to the loop
00001904                          1016  opMOVEAW  
00001904  43F9 0000228C           1017              LEA         MOVEAmatch,A1
0000190A  103C 000E               1018              MOVE.B      #14, D0             ; command for trap call to display message
0000190E  4E4F                    1019              TRAP        #15                 ; trap call
00001910                          1020              
00001910  43F9 000022FE           1021              LEA         dispWord,A1
00001916  103C 000E               1022              MOVE.B      #14, D0             ; command for trap call to display message
0000191A  4E4F                    1023              TRAP        #15                 ; trap call
0000191C                          1024              
0000191C                          1025  
0000191C  43F9 00002268           1026              LEA         space, A1           ; create spaces
00001922  103C 000E               1027              MOVE.B      #14, D0             ; command for trap call to display message
00001926  4E4F                    1028              TRAP        #15                 ; trap call
00001928                          1029              
00001928  4242                    1030              CLR         D2
0000192A  1401                    1031              MOVE.B      D1,D2               ; Copy new byte over to D2
0000192C  E642                    1032              ASR         #three,D2           ; Shift source register out
0000192E  C47C 0007               1033              AND         #seven,D2           ; Set everything to 0 except for the mode
00001932                          1034          
00001932  4243                    1035              CLR         D3
00001934  1601                    1036              MOVE.B      D1,D3
00001936  C67C 0007               1037              AND         #seven,D3
0000193A                          1038              
0000193A  4241                    1039              CLR         D1                  ; Clear D1
0000193C  3218                    1040              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
0000193E                          1041              
0000193E                          1042              
0000193E  4EB9 00001C10           1043              JSR         printEA
00001944                          1044              
00001944  43F9 0000226F           1045              LEA         comma, A1           ; Display comma
0000194A  103C 000E               1046              MOVE.B      #14, D0             ; command for trap call to display message
0000194E  4E4F                    1047              TRAP        #15                 ; trap call
00001950                          1048  
00001950  4242                    1049              CLR         D2
00001952  4243                    1050              CLR         D3
00001954  1404                    1051              MOVE.B      D4,D2
00001956  1605                    1052              MOVE.B      D5,D3
00001958                          1053          
00001958  4EB9 00001C10           1054              JSR         printEA
0000195E                          1055          
0000195E                          1056          
0000195E  43F9 00002264           1057              LEA         newLine, A1           ; Display space
00001964  103C 000E               1058              MOVE.B      #14, D0             ; command for trap call to display message
00001968  4E4F                    1059              TRAP        #15                 ; trap call            
0000196A                          1060  
0000196A                          1061  
0000196A  6000 F6A0               1062              BRA         LOOP                ; go back to the loop
0000196E                          1063  
0000196E                          1064  opNEG   
0000196E  43F9 00002292           1065              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001974  103C 000E               1066              MOVE.B      #14, D0             ; command for trap call to display message
00001978  4E4F                    1067              TRAP        #15                 ; trap call
0000197A                          1068          
0000197A                          1069          
0000197A  1218                    1070              MOVE.B      (A0)+, D1
0000197C  1401                    1071              MOVE.B      D1,D2               ; copy data over
0000197E  EC42                    1072              ASR         #six,D2
00001980                          1073              
00001980  B47C 0000               1074              CMP         #zero,D2
00001984  6700 0016               1075              BEQ         opNEGB
00001988  B47C 0001               1076              CMP         #one,D2
0000198C  6700 004E               1077              BEQ         opNEGL
00001990  B47C 0002               1078              CMP         #two,D2
00001994  6700 0086               1079              BEQ         opNEGW
00001998  6000 08C0               1080              BRA         INVALID
0000199C                          1081  opNEGB
0000199C                          1082  
0000199C  43F9 000022FB           1083              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
000019A2  103C 000E               1084              MOVE.B      #14, D0             ; command for trap call to display message
000019A6  4E4F                    1085              TRAP        #15                 ; trap call
000019A8                          1086          
000019A8  43F9 00002268           1087              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000019AE  103C 000E               1088              MOVE.B      #14, D0             ; command for trap call to display message
000019B2  4E4F                    1089              TRAP        #15                 ; trap call
000019B4                          1090          
000019B4  4242                    1091              CLR         D2                  ; Clear Data register 2
000019B6  3401                    1092              MOVE        D1,D2               ; Move byte into D2
000019B8  E642                    1093              ASR         #three,D2           ; Shift mode into place and moves mode into place
000019BA  C47C 0007               1094              AND         #seven,D2           ; Stores mode
000019BE                          1095              
000019BE  4243                    1096              CLR         D3
000019C0  3601                    1097              MOVE        D1,D3
000019C2  C67C 0007               1098              AND         #seven,D3
000019C6                          1099          
000019C6  4EB9 00001C10           1100              JSR         printEA
000019CC                          1101                  
000019CC  43F9 00002264           1102              LEA         newLine, A1           ; Display space
000019D2  103C 000E               1103              MOVE.B      #14, D0             ; command for trap call to display message
000019D6  4E4F                    1104              TRAP        #15                 ; trap call  
000019D8                          1105          
000019D8  6000 F632               1106              BRA         LOOP
000019DC                          1107                  
000019DC                          1108  
000019DC                          1109  opNEGL
000019DC                          1110  
000019DC  43F9 00002301           1111              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
000019E2  103C 000E               1112              MOVE.B      #14, D0             ; command for trap call to display message
000019E6  4E4F                    1113              TRAP        #15                 ; trap call
000019E8                          1114  
000019E8  43F9 00002268           1115              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000019EE  103C 000E               1116              MOVE.B      #14, D0             ; command for trap call to display message
000019F2  4E4F                    1117              TRAP        #15                 ; trap call
000019F4                          1118                  
000019F4  4242                    1119              CLR         D2                  ; Clear Data register 2
000019F6  3401                    1120              MOVE        D1,D2               ; Move byte into D2
000019F8  E642                    1121              ASR         #three,D2           ; Shift mode into place and moves mode into place
000019FA  C47C 0007               1122              AND         #seven,D2           ; Stores mode
000019FE                          1123          
000019FE  4243                    1124              CLR         D3
00001A00  3601                    1125              MOVE        D1,D3
00001A02  C67C 0007               1126              AND         #seven,D3
00001A06                          1127          
00001A06  4EB9 00001C10           1128              JSR         printEA
00001A0C                          1129                      
00001A0C  43F9 00002264           1130              LEA         newLine, A1         ; Display space
00001A12  103C 000E               1131              MOVE.B      #14, D0             ; command for trap call to display message
00001A16  4E4F                    1132              TRAP        #15                 ; trap call  
00001A18                          1133          
00001A18  6000 F5F2               1134              BRA         LOOP
00001A1C                          1135          
00001A1C                          1136  
00001A1C                          1137  opNEGW
00001A1C                          1138  
00001A1C  43F9 000022FE           1139              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001A22  103C 000E               1140              MOVE.B      #14, D0             ; command for trap call to display message
00001A26  4E4F                    1141              TRAP        #15                 ; trap call
00001A28                          1142          
00001A28  43F9 00002268           1143              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001A2E  103C 000E               1144              MOVE.B      #14, D0             ; command for trap call to display message
00001A32  4E4F                    1145              TRAP        #15                 ; trap call        
00001A34                          1146                  
00001A34  4242                    1147              CLR         D2                  ; Clear Data register 2
00001A36  3401                    1148              MOVE        D1,D2               ; Move byte into D2
00001A38  E642                    1149              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001A3A  C47C 0007               1150              AND         #seven,D2           ; Stores mode
00001A3E                          1151          
00001A3E  4243                    1152              CLR         D3
00001A40  3601                    1153              MOVE        D1,D3
00001A42  C67C 0007               1154              AND         #seven,D3
00001A46                          1155          
00001A46  4EB9 00001C10           1156              JSR         printEA
00001A4C                          1157              
00001A4C  43F9 00002264           1158              LEA         newLine, A1           ; Display space
00001A52  103C 000E               1159              MOVE.B      #14, D0             ; command for trap call to display message
00001A56  4E4F                    1160              TRAP        #15                 ; trap call  
00001A58                          1161          
00001A58  6000 F5B2               1162              BRA         LOOP
00001A5C                          1163  
00001A5C                          1164  opRTSJSR
00001A5C                          1165          
00001A5C  1218                    1166              MOVE.B      (A0)+, D1
00001A5E                          1167              
00001A5E  1401                    1168              MOVE.B      D1,D2               ; copy data over
00001A60  B47C 0075               1169              CMP         #117,D2
00001A64  6700 0050               1170              BEQ         opRTS
00001A68                          1171              
00001A68  EC42                    1172              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
00001A6A  B47C 0002               1173              CMP         #two,D2             ; Checking if it is JSR
00001A6E  6700 0006               1174              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001A72                          1175  
00001A72  6000 07E6               1176              BRA         invalid
00001A76                          1177  
00001A76                          1178  opJSR
00001A76                          1179                        
00001A76  43F9 0000229A           1180              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001A7C  103C 000E               1181              MOVE.B      #14, D0             ; command for trap call to display message
00001A80  4E4F                    1182              TRAP        #15                 ; trap call
00001A82                          1183              
00001A82  43F9 00002268           1184              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001A88  103C 000E               1185              MOVE.B      #14, D0             ; command for trap call to display message
00001A8C  4E4F                    1186              TRAP        #15                 ; trap call
00001A8E                          1187              
00001A8E  4242                    1188              CLR         D2
00001A90  4243                    1189              CLR         D3
00001A92                          1190              
00001A92  1401                    1191              MOVE.B      D1,D2
00001A94  E642                    1192              ASR         #three,D2
00001A96  C47C 0007               1193              AND         #seven,D2
00001A9A                          1194              
00001A9A  1601                    1195              MOVE.B      D1,D3
00001A9C  C67C 0007               1196              AND         #seven,D3
00001AA0                          1197              
00001AA0  4EB9 00001C10           1198              JSR         printEA
00001AA6                          1199              
00001AA6  43F9 00002264           1200              LEA         newLine, A1           ; Display space
00001AAC  103C 000E               1201              MOVE.B      #14, D0             ; command for trap call to display message
00001AB0  4E4F                    1202              TRAP        #15                 ; trap call  
00001AB2                          1203              
00001AB2  6000 F558               1204              BRA         loop            
00001AB6                          1205  opRTS
00001AB6                          1206  
00001AB6  43F9 00002296           1207              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
00001ABC  103C 000E               1208              MOVE.B      #14, D0             ; command for trap call to display message
00001AC0  4E4F                    1209              TRAP        #15                 ; trap call
00001AC2                          1210              
00001AC2  43F9 00002264           1211              LEA         newLine, A1           ; Display space
00001AC8  103C 000E               1212              MOVE.B      #14, D0             ; command for trap call to display message
00001ACC  4E4F                    1213              TRAP        #15                 ; trap call 
00001ACE                          1214              
00001ACE  6000 F53C               1215              BRA         loop
00001AD2                          1216  
00001AD2                          1217  opMOVEMLEA
00001AD2  4242                    1218              CLR         D2                  ; Clear D2
00001AD4  1401                    1219              MOVE.B      D1,D2               ; Copy byte over
00001AD6  C47C 000F               1220              AND         #secNib,D2          ; Check only the second nibble
00001ADA  B47C 000C               1221              CMP         #twelve,D2          ; Compare the second nibble to twelve
00001ADE  6700 000E               1222              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
00001AE2  B47C 0008               1223              CMP         #eight,D2           ; Compare the second nibble to eight
00001AE6  6700 0006               1224              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
00001AEA  6000 001A               1225              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
00001AEE                          1226              
00001AEE                          1227  opMOVEM
00001AEE                          1228  
00001AEE  43F9 00002296           1229              LEA         RTSMatch, A1       ; we know that the opcode will be MOVEM, so load A1 to print message
00001AF4  103C 000E               1230              MOVE.B      #14, D0             ; command for trap call to display message
00001AF8  4E4F                    1231              TRAP        #15                 ; trap call
00001AFA                          1232              
00001AFA  4244                    1233              CLR         D4                  ; Clearing D4 to store dr field
00001AFC  1801                    1234              MOVE.B      D1,D4               ; Moving byte to find dr field
00001AFE  E444                    1235              ASR         #two,D4             ; Moving dr field to readable spot
00001B00  C87C 0001               1236              AND         #one,D4             ; seting everything except dr to 0
00001B04                          1237              
00001B04  1218                    1238              MOVE.B      (A0)+, D1
00001B06                          1239              
00001B06                          1240  
00001B06                          1241  opLEA
00001B06                          1242  
00001B06                          1243  ***********************************************************************************************************
00001B06                          1244  *
00001B06                          1245  *               SUBQ OPCODE
00001B06                          1246  *
00001B06                          1247  ***********************************************************************************************************
00001B06                          1248  
00001B06                          1249  opSUBQ      
00001B06  43F9 000022A8           1250              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
00001B0C  103C 000E               1251              MOVE.B      #14, D0             ; command for trap call to display message
00001B10  4E4F                    1252              TRAP        #15                 ; trap call
00001B12                          1253  
00001B12                          1254  ***********************************************************************************************************
00001B12                          1255  *
00001B12                          1256  *               BRA OPCODE
00001B12                          1257  *
00001B12                          1258  ***********************************************************************************************************
00001B12                          1259              
00001B12  43F9 000022AD           1260  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001B18  103C 000E               1261          MOVE.B      #14, D0             ; command for trap call to display message
00001B1C  4E4F                    1262          TRAP        #15                 ; trap call
00001B1E                          1263          
00001B1E  4242                    1264          CLR         D2
00001B20  4243                    1265          CLR         D3      
00001B22                          1266  
00001B22  43F9 00002268           1267          LEA         space,A1
00001B28  103C 000E               1268          MOVE.B      #14,D0
00001B2C  4E4F                    1269          TRAP        #15
00001B2E                          1270          
00001B2E  143C 0007               1271          MOVE.B      #seven,D2
00001B32  1218                    1272          MOVE.B      (A0)+,D1
00001B34  4EB9 00001C10           1273          JSR         printEA
00001B3A                          1274          
00001B3A  43F9 00002264           1275          LEA         newLine, A1           ; create new line
00001B40  103C 000E               1276          MOVE.B      #14, D0             ; command for trap call to display message
00001B44  4E4F                    1277          TRAP        #15                 ; trap call
00001B46                          1278  
00001B46  6000 F4C4               1279          BRA         LOOP
00001B4A                          1280          
00001B4A                          1281          
00001B4A  43F9 000022B1           1282  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001B50  103C 000E               1283          MOVE.B      #14, D0             ; command for trap call to display message
00001B54  4E4F                    1284          TRAP        #15                 ; trap call
00001B56                          1285  
00001B56  43F9 000022B5           1286  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001B5C  103C 000E               1287          MOVE.B      #14, D0             ; command for trap call to display message
00001B60  4E4F                    1288          TRAP        #15                 ; trap call
00001B62                          1289  
00001B62  43F9 000022B9           1290  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001B68  103C 000E               1291          MOVE.B      #14, D0             ; command for trap call to display message
00001B6C  4E4F                    1292          TRAP        #15                 ; trap call
00001B6E                          1293  
00001B6E  43F9 000022BD           1294  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001B74  103C 000E               1295          MOVE.B      #14, D0             ; command for trap call to display message
00001B78  4E4F                    1296          TRAP        #15                 ; trap call
00001B7A                          1297  
00001B7A                          1298  ***********************************************************************************************************
00001B7A                          1299  *
00001B7A                          1300  *               SUB OPCODE
00001B7A                          1301  *
00001B7A                          1302  ***********************************************************************************************************
00001B7A                          1303  
00001B7A  43F9 000022C9           1304  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001B80  103C 000E               1305          MOVE.B      #14, D0             ; command for trap call to display message
00001B84  4E4F                    1306          TRAP        #15                 ; trap call
00001B86                          1307          
00001B86                          1308          
00001B86                          1309          
00001B86  43F9 00002268           1310          LEA         space,A1
00001B8C  103C 000E               1311          MOVE.B      #14,D0
00001B90  4E4F                    1312          TRAP        #15
00001B92                          1313          
00001B92  1218                    1314          MOVE.B      (A0)+,D1
00001B94  1401                    1315          MOVE.B      D1,D2
00001B96  E842                    1316          ASR         #4,D2
00001B98                          1317          
00001B98  4EB9 00001C10           1318          JSR         printEA
00001B9E                          1319          
00001B9E  43F9 00002264           1320          LEA         newLine,A1
00001BA4  103C 000E               1321          MOVE.B      #14,D0
00001BA8  4E4F                    1322          TRAP        #15
00001BAA                          1323          
00001BAA  6000 F460               1324          BRA         LOOP
00001BAE                          1325          
00001BAE                          1326          
00001BAE                          1327          
00001BAE  43F9 000022D5           1328  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001BB4  103C 000E               1329          MOVE.B      #14, D0             ; command for trap call to display message
00001BB8  4E4F                    1330          TRAP        #15                 ; trap call
00001BBA                          1331  
00001BBA  43F9 000022EF           1332  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001BC0  103C 000E               1333          MOVE.B      #14, D0             ; command for trap call to display message
00001BC4  4E4F                    1334          TRAP        #15                 ; trap call
00001BC6                          1335  
00001BC6  43F9 000022EB           1336  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001BCC  103C 000E               1337          MOVE.B      #14, D0             ; command for trap call to display message
00001BD0  4E4F                    1338          TRAP        #15                 ; trap call
00001BD2                          1339  
00001BD2  43F9 000022E7           1340  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00001BD8  103C 000E               1341          MOVE.B      #14, D0             ; command for trap call to display message
00001BDC  4E4F                    1342          TRAP        #15                 ; trap call
00001BDE                          1343  
00001BDE  43F9 000022E3           1344  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001BE4  103C 000E               1345          MOVE.B      #14, D0             ; command for trap call to display message
00001BE8  4E4F                    1346          TRAP        #15                 ; trap call
00001BEA                          1347  
00001BEA  43F9 000022F7           1348  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001BF0  103C 000E               1349          MOVE.B      #14, D0             ; command for trap call to display message
00001BF4  4E4F                    1350          TRAP        #15                 ; trap call
00001BF6                          1351  
00001BF6  43F9 000022F3           1352  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001BFC  103C 000E               1353          MOVE.B      #14, D0             ; command for trap call to display message
00001C00  4E4F                    1354          TRAP        #15                 ; trap call
00001C02                          1355  
00001C02                          1356  ***********************************************************************************************************
00001C02                          1357  *
00001C02                          1358  *                                           Register Finder
00001C02                          1359  *
00001C02                          1360  ***********************************************************************************************************
00001C02  48E7 FF7E               1361  findRege    MOVEM.L     D0-D7/A1-A6, -(SP)
00001C06                          1362  
00001C06  1218                    1363              MOVE.B      (A0)+,D1
00001C08  1401                    1364              MOVE.B      D1,D2
00001C0A                          1365              
00001C0A  E842                    1366              ASR         #four,D2
00001C0C                          1367              
00001C0C  6000 003A               1368              BRA         pDataReg
00001C10                          1369          
00001C10                          1370  ***********************************************************************************************************
00001C10                          1371  *
00001C10                          1372  *                                           EA Print Check
00001C10                          1373  *
00001C10                          1374  ***********************************************************************************************************
00001C10  48E7 FF7E               1375  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00001C14                          1376  
00001C14  B43C 0000               1377              CMP.B       #zero, D2
00001C18  6700 002E               1378              BEQ         pDataReg
00001C1C  B43C 0001               1379              CMP.B       #one, D2
00001C20  6700 00E6               1380              BEQ         pAddrReg
00001C24  B43C 0002               1381              CMP.B       #two, D2
00001C28  6700 019E               1382              BEQ         pAddrDir
00001C2C  B43C 0003               1383              CMP.B       #three, D2
00001C30  6700 02C2               1384              BEQ         pAddrPost
00001C34  B43C 0004               1385              CMP.B       #four, D2
00001C38  6700 0446               1386              BEQ         pAddrDec
00001C3C  B43C 0007               1387              CMP.B       #seven, D2
00001C40  6700 0576               1388              BEQ         pHex
00001C44  6000 0614               1389              BRA         invalid
00001C48                          1390  
00001C48                          1391  ***********************************************************************************************************
00001C48                          1392  * Data Register        
00001C48  B63C 0000               1393  pDataReg    CMP.B   #zero,D3
00001C4C  6700 003A               1394              BEQ     displayD0
00001C50  B63C 0001               1395              CMP.B   #one,D3
00001C54  6700 0042               1396              BEQ     displayD1
00001C58  B63C 0002               1397              CMP.B   #two,D3
00001C5C  6700 004A               1398              BEQ     displayD2
00001C60  B63C 0003               1399              CMP.B   #three,D3
00001C64  6700 0052               1400              BEQ     displayD3
00001C68  B63C 0004               1401              CMP.B   #four,D3
00001C6C  6700 005A               1402              BEQ     displayD4
00001C70  B63C 0005               1403              CMP.B   #five,D3
00001C74  6700 0062               1404              BEQ     displayD5
00001C78  B63C 0006               1405              CMP.B   #six,D3
00001C7C  6700 006A               1406              BEQ     displayD6
00001C80  B63C 0007               1407              CMP.B   #seven,D3
00001C84  6700 0072               1408              BEQ     displayD7
00001C88                          1409              
00001C88  43F9 0000231E           1410  displayD0   LEA         dispD0, A1          ; Display space
00001C8E  103C 000E               1411              MOVE.B      #14, D0             ; command for trap call to display message
00001C92  4E4F                    1412              TRAP        #15                 ; trap call
00001C94  6000 05C4               1413              BRA         endSUB              ; go to the end of the subroutine
00001C98                          1414              
00001C98  43F9 00002321           1415  displayD1   LEA         dispD1, A1          ; Display space
00001C9E  103C 000E               1416              MOVE.B      #14, D0             ; command for trap call to display message
00001CA2  4E4F                    1417              TRAP        #15                 ; trap call
00001CA4  6000 05B4               1418              BRA         endSUB              ; go to the end of the subroutine
00001CA8                          1419  
00001CA8  43F9 00002324           1420  displayD2   LEA         dispD2, A1          ; Display space
00001CAE  103C 000E               1421              MOVE.B      #14, D0             ; command for trap call to display message
00001CB2  4E4F                    1422              TRAP        #15                 ; trap call
00001CB4  6000 05A4               1423              BRA         endSUB              ; go to the end of the subroutine
00001CB8                          1424  
00001CB8  43F9 00002327           1425  displayD3   LEA         dispD3, A1          ; Display space
00001CBE  103C 000E               1426              MOVE.B      #14, D0             ; command for trap call to display message
00001CC2  4E4F                    1427              TRAP        #15                 ; trap call
00001CC4  6000 0594               1428              BRA         endSUB              ; go to the end of the subroutine
00001CC8                          1429  
00001CC8  43F9 0000232A           1430  displayD4   LEA         dispD4, A1          ; Display space
00001CCE  103C 000E               1431              MOVE.B      #14, D0             ; command for trap call to display message
00001CD2  4E4F                    1432              TRAP        #15                 ; trap call
00001CD4  6000 0584               1433              BRA         endSUB              ; go to the end of the subroutine
00001CD8                          1434  
00001CD8  43F9 0000232D           1435  displayD5   LEA         dispD5, A1          ; Display space
00001CDE  103C 000E               1436              MOVE.B      #14, D0             ; command for trap call to display message
00001CE2  4E4F                    1437              TRAP        #15                 ; trap call
00001CE4  6000 0574               1438              BRA         endSUB              ; go to the end of the subroutine
00001CE8                          1439  
00001CE8  43F9 00002330           1440  displayD6   LEA         dispD6, A1          ; Display space
00001CEE  103C 000E               1441              MOVE.B      #14, D0             ; command for trap call to display message
00001CF2  4E4F                    1442              TRAP        #15                 ; trap call
00001CF4  6000 0564               1443              BRA         endSUB              ; go to the end of the subroutine
00001CF8                          1444  
00001CF8  43F9 00002333           1445  displayD7   LEA         dispD7, A1          ; Display space
00001CFE  103C 000E               1446              MOVE.B      #14, D0             ; command for trap call to display message
00001D02  4E4F                    1447              TRAP        #15                 ; trap call
00001D04  6000 0554               1448              BRA         endSUB              ; go to the end of the subroutine
00001D08                          1449  ***********************************************************************************************************
00001D08                          1450  * Address Register
00001D08  B63C 0000               1451  pAddrReg    CMP.B   #zero,D3
00001D0C  6700 003A               1452              BEQ     displayA0
00001D10  B63C 0001               1453              CMP.B   #one,D3
00001D14  6700 0042               1454              BEQ     displayA1
00001D18  B63C 0002               1455              CMP.B   #two,D3
00001D1C  6700 004A               1456              BEQ     displayA2
00001D20  B63C 0003               1457              CMP.B   #three,D3
00001D24  6700 0052               1458              BEQ     displayA3
00001D28  B63C 0004               1459              CMP.B   #four,D3
00001D2C  6700 005A               1460              BEQ     displayA4
00001D30  B63C 0005               1461              CMP.B   #five,D3
00001D34  6700 0062               1462              BEQ     displayA5
00001D38  B63C 0006               1463              CMP.B   #six,D3
00001D3C  6700 006A               1464              BEQ     displayA6
00001D40  B63C 0007               1465              CMP.B   #seven,D3
00001D44  6700 0072               1466              BEQ     displayA7
00001D48                          1467              
00001D48  43F9 00002304           1468  displayA0   LEA         dispA0, A1          ; Display space
00001D4E  103C 000E               1469              MOVE.B      #14, D0             ; command for trap call to display message
00001D52  4E4F                    1470              TRAP        #15                 ; trap call
00001D54  6000 0504               1471              BRA         endSUB              ; go to the end of the subroutine
00001D58                          1472              
00001D58  43F9 00002307           1473  displayA1   LEA         dispA1, A1          ; Display space
00001D5E  103C 000E               1474              MOVE.B      #14, D0             ; command for trap call to display message
00001D62  4E4F                    1475              TRAP        #15                 ; trap call
00001D64  6000 04F4               1476              BRA         endSUB              ; go to the end of the subroutine
00001D68                          1477  
00001D68  43F9 0000230A           1478  displayA2   LEA         dispA2, A1          ; Display space
00001D6E  103C 000E               1479              MOVE.B      #14, D0             ; command for trap call to display message
00001D72  4E4F                    1480              TRAP        #15                 ; trap call
00001D74  6000 04E4               1481              BRA         endSUB              ; go to the end of the subroutine
00001D78                          1482  
00001D78  43F9 0000230D           1483  displayA3   LEA         dispA3, A1          ; Display space
00001D7E  103C 000E               1484              MOVE.B      #14, D0             ; command for trap call to display message
00001D82  4E4F                    1485              TRAP        #15                 ; trap call
00001D84  6000 04D4               1486              BRA         endSUB              ; go to the end of the subroutine
00001D88                          1487  
00001D88  43F9 00002310           1488  displayA4   LEA         dispA4, A1          ; Display space
00001D8E  103C 000E               1489              MOVE.B      #14, D0             ; command for trap call to display message
00001D92  4E4F                    1490              TRAP        #15                 ; trap call
00001D94  6000 04C4               1491              BRA         endSUB              ; go to the end of the subroutine
00001D98                          1492  
00001D98  43F9 00002313           1493  displayA5   LEA         dispA5, A1          ; Display space
00001D9E  103C 000E               1494              MOVE.B      #14, D0             ; command for trap call to display message
00001DA2  4E4F                    1495              TRAP        #15                 ; trap call
00001DA4  6000 04B4               1496              BRA         endSUB              ; go to the end of the subroutine
00001DA8                          1497  
00001DA8  43F9 00002316           1498  displayA6   LEA         dispA6, A1          ; Display space
00001DAE  103C 000E               1499              MOVE.B      #14, D0             ; command for trap call to display message
00001DB2  4E4F                    1500              TRAP        #15                 ; trap call
00001DB4  6000 04A4               1501              BRA         endSUB              ; go to the end of the subroutine
00001DB8                          1502  
00001DB8  43F9 00002319           1503  displayA7   LEA         dispA7, A1          ; Display space
00001DBE  103C 000E               1504              MOVE.B      #14, D0             ; command for trap call to display message
00001DC2  4E4F                    1505              TRAP        #15                 ; trap call
00001DC4  6000 0494               1506              BRA         endSUB              ; go to the end of the subroutine
00001DC8                          1507  
00001DC8                          1508  ***********************************************************************************************************
00001DC8                          1509  * Address Register Direct
00001DC8                          1510  
00001DC8  43F9 00002271           1511  pAddrDir    LEA         opPer, A1           ; Display space
00001DCE  103C 000E               1512              MOVE.B      #14, D0             ; command for trap call to display message
00001DD2  4E4F                    1513              TRAP        #15                 ; trap call
00001DD4                          1514              
00001DD4  B63C 0000               1515              CMP.B   #zero,D3
00001DD8  6700 003A               1516              BEQ     displayA0A
00001DDC  B63C 0001               1517              CMP.B   #one,D3
00001DE0  6700 004E               1518              BEQ     displayA1A
00001DE4  B63C 0002               1519              CMP.B   #two,D3
00001DE8  6700 0062               1520              BEQ     displayA2A
00001DEC  B63C 0003               1521              CMP.B   #three,D3
00001DF0  6700 0076               1522              BEQ     displayA3A
00001DF4  B63C 0004               1523              CMP.B   #four,D3
00001DF8  6700 008A               1524              BEQ     displayA4A
00001DFC  B63C 0005               1525              CMP.B   #five,D3
00001E00  6700 009E               1526              BEQ     displayA5A
00001E04  B63C 0006               1527              CMP.B   #six,D3
00001E08  6700 00B2               1528              BEQ     displayA6A
00001E0C  B63C 0007               1529              CMP.B   #seven,D3
00001E10  6700 00C6               1530              BEQ     displayA7A
00001E14                          1531              
00001E14  43F9 00002304           1532  displayA0A  LEA         dispA0, A1          ; Display space
00001E1A  103C 000E               1533              MOVE.B      #14, D0             ; command for trap call to display message
00001E1E  4E4F                    1534              TRAP        #15                 ; trap call
00001E20  43F9 00002273           1535              LEA         clPer, A1           ; Display space
00001E26  103C 000E               1536              MOVE.B      #14, D0             ; command for trap call to display message
00001E2A  4E4F                    1537              TRAP        #15                 ; trap call
00001E2C  6000 042C               1538              BRA         endSUB              ; go to the end of the subroutine
00001E30                          1539              
00001E30  43F9 00002307           1540  displayA1A  LEA         dispA1, A1          ; Display space
00001E36  103C 000E               1541              MOVE.B      #14, D0             ; command for trap call to display message
00001E3A  4E4F                    1542              TRAP        #15                 ; trap call
00001E3C  43F9 00002273           1543              LEA         clPer, A1           ; Display space
00001E42  103C 000E               1544              MOVE.B      #14, D0             ; command for trap call to display message
00001E46  4E4F                    1545              TRAP        #15                 ; trap call
00001E48  6000 0410               1546              BRA         endSUB              ; go to the end of the subroutine
00001E4C                          1547  
00001E4C  43F9 0000230A           1548  displayA2A  LEA         dispA2, A1          ; Display space
00001E52  103C 000E               1549              MOVE.B      #14, D0             ; command for trap call to display message
00001E56  4E4F                    1550              TRAP        #15                 ; trap call
00001E58  43F9 00002273           1551              LEA         clPer, A1           ; Display space
00001E5E  103C 000E               1552              MOVE.B      #14, D0             ; command for trap call to display message
00001E62  4E4F                    1553              TRAP        #15                 ; trap call
00001E64  6000 03F4               1554              BRA         endSUB              ; go to the end of the subroutine
00001E68                          1555  
00001E68  43F9 0000230D           1556  displayA3A  LEA         dispA3, A1          ; Display space
00001E6E  103C 000E               1557              MOVE.B      #14, D0             ; command for trap call to display message
00001E72  4E4F                    1558              TRAP        #15                 ; trap call
00001E74  43F9 00002273           1559              LEA         clPer, A1           ; Display space
00001E7A  103C 000E               1560              MOVE.B      #14, D0             ; command for trap call to display message
00001E7E  4E4F                    1561              TRAP        #15                 ; trap call
00001E80  6000 03D8               1562              BRA         endSUB              ; go to the end of the subroutine
00001E84                          1563  
00001E84  43F9 00002310           1564  displayA4A  LEA         dispA4, A1          ; Display space
00001E8A  103C 000E               1565              MOVE.B      #14, D0             ; command for trap call to display message
00001E8E  4E4F                    1566              TRAP        #15                 ; trap call
00001E90  43F9 00002273           1567              LEA         clPer, A1           ; Display space
00001E96  103C 000E               1568              MOVE.B      #14, D0             ; command for trap call to display message
00001E9A  4E4F                    1569              TRAP        #15                 ; trap call
00001E9C  6000 03BC               1570              BRA         endSUB              ; go to the end of the subroutine
00001EA0                          1571  
00001EA0  43F9 00002313           1572  displayA5A  LEA         dispA5, A1          ; Display space
00001EA6  103C 000E               1573              MOVE.B      #14, D0             ; command for trap call to display message
00001EAA  4E4F                    1574              TRAP        #15                 ; trap call
00001EAC  43F9 00002273           1575              LEA         clPer, A1           ; Display space
00001EB2  103C 000E               1576              MOVE.B      #14, D0             ; command for trap call to display message
00001EB6  4E4F                    1577              TRAP        #15                 ; trap call
00001EB8  6000 03A0               1578              BRA         endSUB              ; go to the end of the subroutine
00001EBC                          1579  
00001EBC  43F9 00002316           1580  displayA6A  LEA         dispA6, A1          ; Display space
00001EC2  103C 000E               1581              MOVE.B      #14, D0             ; command for trap call to display message
00001EC6  4E4F                    1582              TRAP        #15                 ; trap call
00001EC8  43F9 00002273           1583              LEA         clPer, A1           ; Display space
00001ECE  103C 000E               1584              MOVE.B      #14, D0             ; command for trap call to display message
00001ED2  4E4F                    1585              TRAP        #15                 ; trap call
00001ED4  6000 0384               1586              BRA         endSUB              ; go to the end of the subroutine
00001ED8                          1587  
00001ED8  43F9 00002319           1588  displayA7A  LEA         dispA7, A1          ; Display space
00001EDE  103C 000E               1589              MOVE.B      #14, D0             ; command for trap call to display message
00001EE2  4E4F                    1590              TRAP        #15                 ; trap call
00001EE4  43F9 00002273           1591              LEA         clPer, A1           ; Display space
00001EEA  103C 000E               1592              MOVE.B      #14, D0             ; command for trap call to display message
00001EEE  4E4F                    1593              TRAP        #15                 ; trap call
00001EF0  6000 0368               1594              BRA         endSUB              ; go to the end of the subroutine
00001EF4                          1595              
00001EF4                          1596  ***********************************************************************************************************
00001EF4                          1597  * Addr Postincrement
00001EF4                          1598              
00001EF4  43F9 00002271           1599  pAddrPost   LEA         opPer, A1           ; Display space
00001EFA  103C 000E               1600              MOVE.B      #14, D0             ; command for trap call to display message
00001EFE  4E4F                    1601              TRAP        #15                 ; trap call
00001F00                          1602              
00001F00  B63C 0000               1603              CMP.B   #zero,D3
00001F04  6700 003A               1604              BEQ     displayA0P
00001F08  B63C 0001               1605              CMP.B   #one,D3
00001F0C  6700 005A               1606              BEQ     displayA1P
00001F10  B63C 0002               1607              CMP.B   #two,D3
00001F14  6700 007A               1608              BEQ     displayA2P
00001F18  B63C 0003               1609              CMP.B   #three,D3
00001F1C  6700 009A               1610              BEQ     displayA3P
00001F20  B63C 0004               1611              CMP.B   #four,D3
00001F24  6700 00BA               1612              BEQ     displayA4P
00001F28  B63C 0005               1613              CMP.B   #five,D3
00001F2C  6700 00DA               1614              BEQ     displayA5P
00001F30  B63C 0006               1615              CMP.B   #six,D3
00001F34  6700 00FA               1616              BEQ     displayA6P
00001F38  B63C 0007               1617              CMP.B   #seven,D3
00001F3C  6700 011A               1618              BEQ     displayA7P
00001F40                          1619              
00001F40  43F9 00002304           1620  displayA0P  LEA         dispA0, A1          ; Display space
00001F46  103C 000E               1621              MOVE.B      #14, D0             ; command for trap call to display message
00001F4A  4E4F                    1622              TRAP        #15                 ; trap call
00001F4C  43F9 00002273           1623              LEA         clPer, A1           ; Display space
00001F52  103C 000E               1624              MOVE.B      #14, D0             ; command for trap call to display message
00001F56  4E4F                    1625              TRAP        #15                 ; trap call
00001F58  43F9 00002277           1626              LEA         inc, A1             ; Display space
00001F5E  103C 000E               1627              MOVE.B      #14, D0             ; command for trap call to display message
00001F62  4E4F                    1628              TRAP        #15                 ; trap call
00001F64  6000 02F4               1629              BRA         endSUB              ; go to the end of the subroutine
00001F68                          1630              
00001F68  43F9 00002307           1631  displayA1P  LEA         dispA1, A1          ; Display space
00001F6E  103C 000E               1632              MOVE.B      #14, D0             ; command for trap call to display message
00001F72  4E4F                    1633              TRAP        #15                 ; trap call
00001F74  43F9 00002273           1634              LEA         clPer, A1           ; Display space
00001F7A  103C 000E               1635              MOVE.B      #14, D0             ; command for trap call to display message
00001F7E  4E4F                    1636              TRAP        #15                 ; trap call
00001F80  43F9 00002277           1637              LEA         inc, A1             ; Display space
00001F86  103C 000E               1638              MOVE.B      #14, D0             ; command for trap call to display message
00001F8A  4E4F                    1639              TRAP        #15                 ; trap call
00001F8C  6000 02CC               1640              BRA         endSUB              ; go to the end of the subroutine
00001F90                          1641  
00001F90  43F9 0000230A           1642  displayA2P  LEA         dispA2, A1          ; Display space
00001F96  103C 000E               1643              MOVE.B      #14, D0             ; command for trap call to display message
00001F9A  4E4F                    1644              TRAP        #15                 ; trap call
00001F9C  43F9 00002273           1645              LEA         clPer, A1           ; Display space
00001FA2  103C 000E               1646              MOVE.B      #14, D0             ; command for trap call to display message
00001FA6  4E4F                    1647              TRAP        #15                 ; trap call
00001FA8  43F9 00002277           1648              LEA         inc, A1             ; Display space
00001FAE  103C 000E               1649              MOVE.B      #14, D0             ; command for trap call to display message
00001FB2  4E4F                    1650              TRAP        #15                 ; trap call
00001FB4  6000 02A4               1651              BRA         endSUB              ; go to the end of the subroutine
00001FB8                          1652  
00001FB8  43F9 0000230D           1653  displayA3P  LEA         dispA3, A1          ; Display space
00001FBE  103C 000E               1654              MOVE.B      #14, D0             ; command for trap call to display message
00001FC2  4E4F                    1655              TRAP        #15                 ; trap call
00001FC4  43F9 00002273           1656              LEA         clPer, A1           ; Display space
00001FCA  103C 000E               1657              MOVE.B      #14, D0             ; command for trap call to display message
00001FCE  4E4F                    1658              TRAP        #15                 ; trap call
00001FD0  43F9 00002277           1659              LEA         inc, A1             ; Display space
00001FD6  103C 000E               1660              MOVE.B      #14, D0             ; command for trap call to display message
00001FDA  4E4F                    1661              TRAP        #15                 ; trap call
00001FDC  6000 027C               1662              BRA         endSUB              ; go to the end of the subroutine
00001FE0                          1663  
00001FE0  43F9 00002310           1664  displayA4P  LEA         dispA4, A1          ; Display space
00001FE6  103C 000E               1665              MOVE.B      #14, D0             ; command for trap call to display message
00001FEA  4E4F                    1666              TRAP        #15                 ; trap call
00001FEC  43F9 00002273           1667              LEA         clPer, A1           ; Display space
00001FF2  103C 000E               1668              MOVE.B      #14, D0             ; command for trap call to display message
00001FF6  4E4F                    1669              TRAP        #15                 ; trap call
00001FF8  43F9 00002277           1670              LEA         inc, A1             ; Display space
00001FFE  103C 000E               1671              MOVE.B      #14, D0             ; command for trap call to display message
00002002  4E4F                    1672              TRAP        #15                 ; trap call
00002004  6000 0254               1673              BRA         endSUB              ; go to the end of the subroutine
00002008                          1674  
00002008  43F9 00002313           1675  displayA5P  LEA         dispA5, A1          ; Display space
0000200E  103C 000E               1676              MOVE.B      #14, D0             ; command for trap call to display message
00002012  4E4F                    1677              TRAP        #15                 ; trap call
00002014  43F9 00002273           1678              LEA         clPer, A1           ; Display space
0000201A  103C 000E               1679              MOVE.B      #14, D0             ; command for trap call to display message
0000201E  4E4F                    1680              TRAP        #15                 ; trap call
00002020  43F9 00002277           1681              LEA         inc, A1             ; Display space
00002026  103C 000E               1682              MOVE.B      #14, D0             ; command for trap call to display message
0000202A  4E4F                    1683              TRAP        #15                 ; trap call
0000202C  6000 022C               1684              BRA         endSUB              ; go to the end of the subroutine
00002030                          1685  
00002030  43F9 00002316           1686  displayA6P  LEA         dispA6, A1          ; Display space
00002036  103C 000E               1687              MOVE.B      #14, D0             ; command for trap call to display message
0000203A  4E4F                    1688              TRAP        #15                 ; trap call
0000203C  43F9 00002273           1689              LEA         clPer, A1           ; Display space
00002042  103C 000E               1690              MOVE.B      #14, D0             ; command for trap call to display message
00002046  4E4F                    1691              TRAP        #15                 ; trap call
00002048  43F9 00002277           1692              LEA         inc, A1             ; Display space
0000204E  103C 000E               1693              MOVE.B      #14, D0             ; command for trap call to display message
00002052  4E4F                    1694              TRAP        #15                 ; trap call
00002054  6000 0204               1695              BRA         endSUB              ; go to the end of the subroutine
00002058                          1696  
00002058  43F9 00002319           1697  displayA7P  LEA         dispA7, A1          ; Display space
0000205E  103C 000E               1698              MOVE.B      #14, D0             ; command for trap call to display message
00002062  4E4F                    1699              TRAP        #15                 ; trap call
00002064  43F9 00002273           1700              LEA         clPer, A1           ; Display space
0000206A  103C 000E               1701              MOVE.B      #14, D0             ; command for trap call to display message
0000206E  4E4F                    1702              TRAP        #15                 ; trap call
00002070  43F9 00002277           1703              LEA         inc, A1             ; Display space
00002076  103C 000E               1704              MOVE.B      #14, D0             ; command for trap call to display message
0000207A  4E4F                    1705              TRAP        #15                 ; trap call
0000207C  6000 01DC               1706              BRA         endSUB              ; go to the end of the subroutine
00002080                          1707  
00002080                          1708  ***********************************************************************************************************
00002080                          1709  * Addr Postdecrement
00002080                          1710  
00002080  43F9 00002275           1711  pAddrDec    LEA         dec, A1             ; Display space
00002086  103C 000E               1712              MOVE.B      #14, D0             ; command for trap call to display message
0000208A  4E4F                    1713              TRAP        #15                 ; trap call
0000208C                          1714              
0000208C  43F9 00002271           1715              LEA         opPer, A1           ; Display space
00002092  103C 000E               1716              MOVE.B      #14, D0             ; command for trap call to display message
00002096  4E4F                    1717              TRAP        #15                 ; trap call
00002098                          1718              
00002098  B63C 0000               1719              CMP.B   #zero,D3
0000209C  6700 003A               1720              BEQ     displayA0D
000020A0  B63C 0001               1721              CMP.B   #one,D3
000020A4  6700 004E               1722              BEQ     displayA1D
000020A8  B63C 0002               1723              CMP.B   #two,D3
000020AC  6700 0062               1724              BEQ     displayA2D
000020B0  B63C 0003               1725              CMP.B   #three,D3
000020B4  6700 0076               1726              BEQ     displayA3D
000020B8  B63C 0004               1727              CMP.B   #four,D3
000020BC  6700 008A               1728              BEQ     displayA4D
000020C0  B63C 0005               1729              CMP.B   #five,D3
000020C4  6700 009E               1730              BEQ     displayA5D
000020C8  B63C 0006               1731              CMP.B   #six,D3
000020CC  6700 00B2               1732              BEQ     displayA6D
000020D0  B63C 0007               1733              CMP.B   #seven,D3
000020D4  6700 00C6               1734              BEQ     displayA7D
000020D8                          1735              
000020D8  43F9 00002304           1736  displayA0D  LEA         dispA0, A1          ; Display space
000020DE  103C 000E               1737              MOVE.B      #14, D0             ; command for trap call to display message
000020E2  4E4F                    1738              TRAP        #15                 ; trap call
000020E4  43F9 00002273           1739              LEA         clPer, A1           ; Display space
000020EA  103C 000E               1740              MOVE.B      #14, D0             ; command for trap call to display message
000020EE  4E4F                    1741              TRAP        #15                 ; trap call
000020F0  6000 0168               1742              BRA         endSUB              ; go to the end of the subroutine
000020F4                          1743              
000020F4  43F9 00002307           1744  displayA1D  LEA         dispA1, A1          ; Display space
000020FA  103C 000E               1745              MOVE.B      #14, D0             ; command for trap call to display message
000020FE  4E4F                    1746              TRAP        #15                 ; trap call
00002100  43F9 00002273           1747              LEA         clPer, A1           ; Display space
00002106  103C 000E               1748              MOVE.B      #14, D0             ; command for trap call to display message
0000210A  4E4F                    1749              TRAP        #15                 ; trap call
0000210C  6000 014C               1750              BRA         endSUB              ; go to the end of the subroutine
00002110                          1751  
00002110  43F9 0000230A           1752  displayA2D  LEA         dispA2, A1          ; Display space
00002116  103C 000E               1753              MOVE.B      #14, D0             ; command for trap call to display message
0000211A  4E4F                    1754              TRAP        #15                 ; trap call
0000211C  43F9 00002273           1755              LEA         clPer, A1           ; Display space
00002122  103C 000E               1756              MOVE.B      #14, D0             ; command for trap call to display message
00002126  4E4F                    1757              TRAP        #15                 ; trap call
00002128  6000 0130               1758              BRA         endSUB              ; go to the end of the subroutine
0000212C                          1759  
0000212C  43F9 0000230D           1760  displayA3D  LEA         dispA3, A1          ; Display space
00002132  103C 000E               1761              MOVE.B      #14, D0             ; command for trap call to display message
00002136  4E4F                    1762              TRAP        #15                 ; trap call
00002138  43F9 00002273           1763              LEA         clPer, A1           ; Display space
0000213E  103C 000E               1764              MOVE.B      #14, D0             ; command for trap call to display message
00002142  4E4F                    1765              TRAP        #15                 ; trap call
00002144  6000 0114               1766              BRA         endSUB              ; go to the end of the subroutine
00002148                          1767  
00002148  43F9 00002310           1768  displayA4D  LEA         dispA4, A1          ; Display space
0000214E  103C 000E               1769              MOVE.B      #14, D0             ; command for trap call to display message
00002152  4E4F                    1770              TRAP        #15                 ; trap call
00002154  43F9 00002273           1771              LEA         clPer, A1           ; Display space
0000215A  103C 000E               1772              MOVE.B      #14, D0             ; command for trap call to display message
0000215E  4E4F                    1773              TRAP        #15                 ; trap call
00002160  6000 00F8               1774              BRA         endSUB              ; go to the end of the subroutine
00002164                          1775  
00002164  43F9 00002313           1776  displayA5D  LEA         dispA5, A1          ; Display space
0000216A  103C 000E               1777              MOVE.B      #14, D0             ; command for trap call to display message
0000216E  4E4F                    1778              TRAP        #15                 ; trap call
00002170  43F9 00002273           1779              LEA         clPer, A1           ; Display space
00002176  103C 000E               1780              MOVE.B      #14, D0             ; command for trap call to display message
0000217A  4E4F                    1781              TRAP        #15                 ; trap call
0000217C  6000 00DC               1782              BRA         endSUB              ; go to the end of the subroutine
00002180                          1783  
00002180  43F9 00002316           1784  displayA6D  LEA         dispA6, A1          ; Display space
00002186  103C 000E               1785              MOVE.B      #14, D0             ; command for trap call to display message
0000218A  4E4F                    1786              TRAP        #15                 ; trap call
0000218C  43F9 00002273           1787              LEA         clPer, A1           ; Display space
00002192  103C 000E               1788              MOVE.B      #14, D0             ; command for trap call to display message
00002196  4E4F                    1789              TRAP        #15                 ; trap call
00002198  6000 00C0               1790              BRA         endSUB              ; go to the end of the subroutine
0000219C                          1791  
0000219C  43F9 00002319           1792  displayA7D  LEA         dispA7, A1          ; Display space
000021A2  103C 000E               1793              MOVE.B      #14, D0             ; command for trap call to display message
000021A6  4E4F                    1794              TRAP        #15                 ; trap call
000021A8  43F9 00002273           1795              LEA         clPer, A1           ; Display space
000021AE  103C 000E               1796              MOVE.B      #14, D0             ; command for trap call to display message
000021B2  4E4F                    1797              TRAP        #15                 ; trap call
000021B4  6000 00A4               1798              BRA         endSUB              ; go to the end of the subroutine
000021B8                          1799  
000021B8                          1800  
000021B8                          1801  ***********************************************************************************************************
000021B8                          1802  * Absolute Address
000021B8  B63C 0000               1803  pHex        CMP.B       #zero, D3
000021BC  6700 0012               1804              BEQ         AbsShort
000021C0  B63C 0001               1805              CMP.B       #one, D3
000021C4  6700 003C               1806              BEQ         AbsLong
000021C8  B63C 0004               1807              CMP.B       #four, D3
000021CC  6700 0066               1808              BEQ         DispImm
000021D0                          1809              
000021D0  43F9 00002271           1810  AbsShort    LEA         opPer, A1           ; Display space
000021D6  103C 000E               1811              MOVE.B      #14, D0             ; command for trap call to display message
000021DA  4E4F                    1812              TRAP        #15                 ; trap call
000021DC                          1813              
000021DC  43F9 0000226D           1814              LEA         dispHex, A1         ; Display space
000021E2  103C 000E               1815              MOVE.B      #14, D0             ; command for trap call to display message
000021E6  4E4F                    1816              TRAP        #15                 ; trap call
000021E8                          1817              
000021E8  4241                    1818              CLR         D1
000021EA  3218                    1819              MOVE.W      (A0)+, D1
000021EC                          1820              
000021EC  103C 0003               1821              MOVE.B      #3, D0
000021F0  4E4F                    1822              TRAP        #15
000021F2                          1823              
000021F2  43F9 00002273           1824              LEA         clPer, A1           ; Display space
000021F8  103C 000E               1825              MOVE.B      #14, D0             ; command for trap call to display message
000021FC  4E4F                    1826              TRAP        #15                 ; trap call
000021FE                          1827              
000021FE  6000 005A               1828              BRA         endSub
00002202                          1829              
00002202  43F9 00002271           1830  AbsLong     LEA         opPer, A1           ; Display space
00002208  103C 000E               1831              MOVE.B      #14, D0             ; command for trap call to display message
0000220C  4E4F                    1832              TRAP        #15                 ; trap call
0000220E                          1833              
0000220E  43F9 0000226D           1834              LEA         dispHex, A1         ; Display space
00002214  103C 000E               1835              MOVE.B      #14, D0             ; command for trap call to display message
00002218  4E4F                    1836              TRAP        #15                 ; trap call
0000221A                          1837              
0000221A  4241                    1838              CLR         D1
0000221C  2218                    1839              MOVE.L      (A0)+, D1
0000221E                          1840              
0000221E  103C 0003               1841              MOVE.B      #3, D0
00002222  4E4F                    1842              TRAP        #15
00002224                          1843              
00002224  43F9 00002273           1844              LEA         clPer, A1           ; Display space
0000222A  103C 000E               1845              MOVE.B      #14, D0             ; command for trap call to display message
0000222E  4E4F                    1846              TRAP        #15                 ; trap call
00002230                          1847              
00002230  6000 0028               1848              BRA         endSub
00002234                          1849  
00002234  43F9 0000226B           1850  DispImm     LEA         hashTag, A1         ; Display space
0000223A  103C 000E               1851              MOVE.B      #14, D0             ; command for trap call to display message
0000223E  4E4F                    1852              TRAP        #15                 ; trap call
00002240                          1853              
00002240  4241                    1854              CLR         D1
00002242  3218                    1855              MOVE.W      (A0)+, D1
00002244                          1856  
00002244  43F9 0000226D           1857              LEA         dispHex, A1         ; Display space
0000224A  103C 000E               1858              MOVE.B      #14, D0             ; command for trap call to display message
0000224E  4E4F                    1859              TRAP        #15                 ; trap call
00002250                          1860              
00002250  103C 0003               1861              MOVE.B      #3, D0
00002254  4E4F                    1862              TRAP        #15
00002256                          1863  
00002256  6000 0002               1864              BRA         endSub
0000225A                          1865  
0000225A                          1866  invalid
0000225A                          1867  
0000225A                          1868  endSUB
0000225A                          1869          
0000225A  4CDF 7EFF               1870          MOVEM.L  (SP)+, D0-D7/A1-A6
0000225E  4E75                    1871          RTS
00002260                          1872  
00002260                          1873  ***********************************************************************************************************
00002260                          1874  ***********************************************************************************************************
00002260                          1875  ***********************************************************************************************************
00002260                          1876  
00002260                          1877  printInvalid
00002260                          1878  endPROG    
00002260                          1879  
00002260  FFFF FFFF               1880      SIMHALT                             ; halt simulator
00002264                          1881  
00002264= 20 0D 0A 00             1882  newLine     DC.B    ' ', CR, LF, 0
00002268= 20 20 00                1883  space       DC.B    '  ', 0
0000226B                          1884  
0000226B= 23 00                   1885  hashTag     DC.B    '#', 0
0000226D= 24 00                   1886  dispHex     DC.B    '$', 0
0000226F= 2C 00                   1887  comma       DC.B    ',', 0
00002271                          1888  
00002271= 28 00                   1889  opPer       DC.B    '(', 0
00002273= 29 00                   1890  clPer       DC.B    ')', 0
00002275= 2D 00                   1891  dec         DC.B    '-', 0
00002277= 2B 00                   1892  inc         DC.B    '+', 0
00002279                          1893  
00002279= 4F 52 49 00             1894  ORImatch    DC.B    'ORI', 0
0000227D= 43 4D 50 49 00          1895  CMPImatch   DC.B    'CMPI', 0
00002282= 42 43 4C 52 00          1896  BCLRmatch   DC.B    'BCLR', 0
00002287= 4D 4F 56 45 00          1897  MOVEmatch   DC.B    'MOVE', 0
0000228C= 4D 4F 56 45 41 00       1898  MOVEAmatch  DC.B    'MOVEA', 0
00002292= 4E 45 47 00             1899  NEGmatch    DC.B    'NEG', 0
00002296= 52 54 53 00             1900  RTSmatch    DC.B    'RTS', 0
0000229A= 4A 53 52 00             1901  JSRmatch    DC.B    'JSR', 0
0000229E= 4D 4F 56 45 4D 00       1902  MOVEMmatch  DC.B    'MOVEM', 0
000022A4= 4C 45 41 00             1903  LEAmatch    DC.B    'LEA', 0
000022A8= 53 55 42 51 00          1904  SUBQmatch   DC.B    'SUBQ', 0
000022AD= 42 52 41 00             1905  BRAmatch    DC.B    'BRA', 0
000022B1= 42 43 53 00             1906  BCSmatch    DC.B    'BCS', 0
000022B5= 42 56 43 00             1907  BVCmatch    DC.B    'BVC', 0
000022B9= 42 47 45 00             1908  BGEmatch    DC.B    'BGE', 0
000022BD= 42 4C 54 00             1909  BLTmatch    DC.B    'BLT', 0
000022C1= 44 49 56 53 00          1910  DIVSmatch   DC.B    'DIVS', 0
000022C6= 4F 52 00                1911  ORmatch     DC.B    'OR', 0
000022C9= 53 55 42 00             1912  SUBmatch    DC.B    'SUB', 0
000022CD= 45 4F 52 00             1913  EORmatch    DC.B    'EOR', 0
000022D1= 43 4D 50 00             1914  CMPmatch    DC.B    'CMP', 0
000022D5= 4D 55 4C 53 00          1915  MULSmatch   DC.B    'MULS', 0
000022DA= 41 44 44 00             1916  ADDmatch    DC.B    'ADD', 0
000022DE= 41 44 44 41 00          1917  ADDAmatch   DC.B    'ADDA', 0
000022E3= 4C 53 52 00             1918  LSRmatch    DC.B    'LSR', 0
000022E7= 4C 53 4C 00             1919  LSLmatch    DC.B    'LSL', 0
000022EB= 41 53 52 00             1920  ASRmatch    DC.B    'ASR', 0
000022EF= 41 53 4C 00             1921  ASLmatch    DC.B    'ASL', 0
000022F3= 52 4F 52 00             1922  RORmatch    DC.B    'ROR', 0
000022F7= 52 4F 4C 00             1923  ROLmatch    DC.B    'ROL', 0
000022FB                          1924   
000022FB= 2E 42 00                1925  dispByte    DC.B    '.B', 0
000022FE= 2E 57 00                1926  dispWord    DC.B    '.W', 0
00002301= 2E 4C 00                1927  dispLong    DC.B    '.L', 0
00002304                          1928  
00002304= 41 30 00                1929  dispA0      DC.B    'A0', 0
00002307= 41 31 00                1930  dispA1      DC.B    'A1', 0
0000230A= 41 32 00                1931  dispA2      DC.B    'A2', 0
0000230D= 41 33 00                1932  dispA3      DC.B    'A3', 0
00002310= 41 34 00                1933  dispA4      DC.B    'A4', 0
00002313= 41 35 00                1934  dispA5      DC.B    'A5', 0
00002316= 41 36 00                1935  dispA6      DC.B    'A6', 0
00002319= 41 37 00                1936  dispA7      DC.B    'A7', 0
0000231C                          1937  
0000231C= 44 00                   1938  dispD       DC.B    'D',0
0000231E= 44 30 00                1939  dispD0      DC.B    'D0', 0
00002321= 44 31 00                1940  dispD1      DC.B    'D1', 0
00002324= 44 32 00                1941  dispD2      DC.B    'D2', 0
00002327= 44 33 00                1942  dispD3      DC.B    'D3', 0
0000232A= 44 34 00                1943  dispD4      DC.B    'D4', 0
0000232D= 44 35 00                1944  dispD5      DC.B    'D5', 0
00002330= 44 36 00                1945  dispD6      DC.B    'D6', 0
00002333= 44 37 00                1946  dispD7      DC.B    'D7', 0  
00002336                          1947             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             2202
ABSSHORT            21D0
ADDAMATCH           22DE
ADDMATCH            22DA
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            22EF
ASRMATCH            22EB
BCLRMATCH           2282
BCSMATCH            22B1
BGEMATCH            22B9
BLTMATCH            22BD
BRAEIGHT            110E
BRAELEVEN           1112
BRAFIVE             10DE
BRAFOUR             10C2
BRAFOURTEEN         1130
BRAMATCH            22AD
BRANINE             110E
BRAONE              10B6
BRASIX              10E2
BRATHIRTEEN         1130
BRATHREE            10BE
BRATWELVE           112C
BRATWO              10BA
BRAZERO             1086
BVCMATCH            22B5
CLPER               2273
CMPIMATCH           227D
CMPMATCH            22D1
COMMA               226F
CR                  D
DEC                 2275
DISPA0              2304
DISPA1              2307
DISPA2              230A
DISPA3              230D
DISPA4              2310
DISPA5              2313
DISPA6              2316
DISPA7              2319
DISPBYTE            22FB
DISPD               231C
DISPD0              231E
DISPD1              2321
DISPD2              2324
DISPD3              2327
DISPD4              232A
DISPD5              232D
DISPD6              2330
DISPD7              2333
DISPHEX             226D
DISPIMM             2234
DISPLAYA0           1D48
DISPLAYA0A          1E14
DISPLAYA0D          20D8
DISPLAYA0P          1F40
DISPLAYA1           1D58
DISPLAYA1A          1E30
DISPLAYA1D          20F4
DISPLAYA1P          1F68
DISPLAYA2           1D68
DISPLAYA2A          1E4C
DISPLAYA2D          2110
DISPLAYA2P          1F90
DISPLAYA3           1D78
DISPLAYA3A          1E68
DISPLAYA3D          212C
DISPLAYA3P          1FB8
DISPLAYA4           1D88
DISPLAYA4A          1E84
DISPLAYA4D          2148
DISPLAYA4P          1FE0
DISPLAYA5           1D98
DISPLAYA5A          1EA0
DISPLAYA5D          2164
DISPLAYA5P          2008
DISPLAYA6           1DA8
DISPLAYA6A          1EBC
DISPLAYA6D          2180
DISPLAYA6P          2030
DISPLAYA7           1DB8
DISPLAYA7A          1ED8
DISPLAYA7D          219C
DISPLAYA7P          2058
DISPLAYD0           1C88
DISPLAYD1           1C98
DISPLAYD2           1CA8
DISPLAYD3           1CB8
DISPLAYD4           1CC8
DISPLAYD5           1CD8
DISPLAYD6           1CE8
DISPLAYD7           1CF8
DISPLONG            2301
DISPWORD            22FE
DIVSMATCH           22C1
EIGHT               8
ELEVEN              B
ENDPROG             2260
ENDSUB              225A
EORMATCH            22CD
FINDREGE            1C02
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             226B
INC                 2277
INVALID             225A
JSRMATCH            229A
LEAMATCH            22A4
LF                  A
LOOP                100C
LSLMATCH            22E7
LSRMATCH            22E3
MOVEAMATCH          228C
MOVEMATCH           2287
MOVEMMATCH          229E
MULSMATCH           22D5
NEGMATCH            2292
NEWLINE             2264
NINE                9
ONE                 1
OPASL               1BBA
OPASR               1BC6
OPBCC               1164
OPBCLR              1624
OPBCS               1B4A
OPBGE               1B62
OPBLT               1B6E
OPBRA               1B12
OPBVC               1B56
OPCMP               126E
OPCMPB              129E
OPCMPI              14B2
OPCMPIB             14FE
OPCMPIL             15C2
OPCMPIW             1560
OPCMPL              131E
OPCMPW              12DE
OPDIVS              1176
OPDYNBCLR           1688
OPEOR               1182
OPEORB              11AE
OPEORL              122E
OPEORW              11EE
OPJSR               1A76
OPLEA               1B06
OPLSL               1BD2
OPLSR               1BDE
OPMOVEAL            180A
OPMOVEAW            1904
OPMOVEB             16F6
OPMOVEL             177A
OPMOVEM             1AEE
OPMOVEMLEA          1AD2
OPMOVEW             1874
OPMULS              1BAE
OPNEG               196E
OPNEGB              199C
OPNEGL              19DC
OPNEGW              1A1C
OPOR                116A
OPORI               135E
OPORIB              138C
OPORIL              1450
OPORIW              13EE
OPPER               2271
OPROL               1BEA
OPROR               1BF6
OPRTS               1AB6
OPRTSJSR            1A5C
OPSUB               1B7A
OPSUBQ              1B06
ORIMATCH            2279
ORMATCH             22C6
PADDRDEC            2080
PADDRDIR            1DC8
PADDRPOST           1EF4
PADDRREG            1D08
PDATAREG            1C48
PHEX                21B8
PRINTEA             1C10
PRINTINVALID        2260
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
ROLMATCH            22F7
RORMATCH            22F3
RTSMATCH            2296
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               2268
START               1000
SUBMATCH            22C9
SUBQMATCH           22A8
TEST_END            3009
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
