00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 12/1/2014 11:17:15 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00002000                 10  test_start  EQU     $00002000   ; defined starting address
00000000  =00002009                 11  test_end    EQU     $00002009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00002000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00002009             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 0FAE                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 0084                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0080                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 0094                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0090                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00B4                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00AC                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00A8                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00A0                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 009C                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 0094                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                102          AND.B       #secNib, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 00B6                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 0202                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                108          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 036C                109          BEQ         opBCLR
000010A6  C47C 0001                110          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                111          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 03C4                112          BEQ         opDynBCLR
000010B2  6000 0F0E                113          BRA         printInvalid
000010B6                           114          
000010B6                           115          
000010B6  6000 042A                116  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           117  
000010BA  6000 04AA                118  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BE                           119  
000010BE                           120  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BE                           121  
000010BE  6000 05A0                122          BRA         opMOVEW
000010C2                           123  
000010C2  4242                     124  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010C4  1401                     125          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010C6  C43C 000F                126          AND.B       #secNib, D2             ; set first nibble to 0
000010CA                           127   
000010CA  B43C 0004                128          CMP.B       #four, D2           ; compare second nibble to 4
000010CE  6700 068A                129          BEQ         opNEG               ; branch to NEG method
000010D2  B43C 000E                130          CMP.B       #fourteen, D2       ; compare second nibble to E
000010D6  6700 0770                131          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010DA  6000 07E2                132          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010DE                           133  
000010DE  6000 07DE                134  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010E2                           135  
000010E2  4242                     136  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010E4  1401                     137          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010E6  C438 000F                138          AND.B       $0F, D2             ; set first nibble to 0
000010EA                           139   
000010EA  B43C 0000                140          CMP.B       #zero, D2           ; compare second nibble to 0
000010EE  6700 07DA                141          BEQ         opBRA               ; branch to BRA method
000010F2  B43C 0005                142          CMP.B       #five, D2           ; compare second nibble to 5
000010F6  6700 07EA                143          BEQ         opBCS               ; branch to BCS method
000010FA  B43C 0008                144          CMP.B       #eight, D2          ; compare second nibble to 8
000010FE  6700 07EE                145          BEQ         opBVC               ; branch to BCS method
00001102  B43C 000C                146          CMP.B       #twelve, D2         ; compare second nibble to 12
00001106  6700 07F2                147          BEQ         opBGE               ; branch to BGE method
0000110A  6000 07FA                148          BRA         opBLT               ; otherwise, branch to BLT method
0000110E                           149  
0000110E                           150  braEight    ; there are two opCodes available DIVS, or OR
0000110E                           151  
0000110E  6000 0802                152  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
00001112                           153  
00001112                           154  braEleven   ; there are two opCodes available EOR, or CMP
00001112                           155  
00001112  6000 080A                156  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
00001116                           157    
00001116                           158  braThirteen ; there are two opCodes available ADD, or ADDA
00001116                           159  
00001116  4242                     160  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
00001118  1401                     161              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000111A  C438 000F                162              AND.B       $0F, D2             ; set first nibble to 0
0000111E                           163   
0000111E  B43C 0000                164              CMP.B       #zero, D2           ; compare second nibble to 0
00001122  6700 0812                165              BEQ         opASR               ; branch to ASR method
00001126  B43C 0001                166              CMP.B       #one, D2            ; compare second nibble to 1
0000112A  6700 07FE                167              BEQ         opASL               ; branch to ASL method
0000112E  B43C 0002                168              CMP.B       #two, D2            ; compare second nibble to 2
00001132  6700 081A                169              BEQ         opLSR               ; branch to LSR method
00001136  B43C 0003                170              CMP.B       #three, D2          ; compare second nibble to 3
0000113A  6700 0806                171              BEQ         opLSL               ; branch to LSL method
0000113E  B43C 0006                172              CMP.B       #six, D2            ; compare second nibble to 6
00001142  6700 0822                173              BEQ         opROR               ; branch to ROR method
00001146  6000 0812                174              BRA         opROL               ; otherwise, branch to ROL method
0000114A                           175  
0000114A  43F9 00001FDB            176  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
00001150  103C 000E                177          MOVE.B      #14, D0             ; command for trap call to display message
00001154  4E4F                     178          TRAP        #15                 ; trap call
00001156                           179          
00001156  1218                     180          MOVE.B      (A0)+, D1
00001158  1401                     181          MOVE.B      D1,D2               ; copy data over
0000115A  EC42                     182          ASR         #6,D2               ; shifts 6 bits over to read just the size        
0000115C  B43C 0000                183          CMP.B       #zero,D2
00001160  6700 0016                184          BEQ         opORIB
00001164  B43C 0001                185          CMP.B       #one,D2
00001168  6700 0070                186          BEQ         opORIW
0000116C  B43C 0002                187          CMP.B       #two,D2
00001170  6700 00CA                188          BEQ         opORIL
00001174                           189          
00001174  6000 0E4C                190          BRA         printInvalid
00001178                           191          
00001178  43F9 0000205D            192  opORIB  LEA         dispByte, A1        ; Display byte
0000117E  103C 000E                193          MOVE.B      #14, D0             ; command for trap call to display message
00001182  4E4F                     194          TRAP        #15                 ; trap call
00001184                           195          
00001184  43F9 00001FCA            196          LEA         space, A1           ; Display space
0000118A  103C 000E                197          MOVE.B      #14, D0             ; command for trap call to display message
0000118E  4E4F                     198          TRAP        #15                 ; trap call
00001190                           199          
00001190  4242                     200          CLR         D2
00001192  1401                     201          MOVE.B      D1,D2
00001194  E642                     202          ASR         #three,D2
00001196  C47C 0007                203          AND         #seven,D2
0000119A  4243                     204          CLR         D3        
0000119C  1601                     205          MOVE.B      D1,D3
0000119E  C67C 0007                206          AND         #seven,D3
000011A2                           207          
000011A2  4241                     208          CLR         D1
000011A4  3218                     209          MOVE.W      (A0)+, D1
000011A6                           210          
000011A6  43F9 00001FCD            211          LEA         hashTag, A1           ; Display space
000011AC  103C 000E                212          MOVE.B      #14, D0             ; command for trap call to display message
000011B0  4E4F                     213          TRAP        #15                 ; trap call
000011B2                           214          
000011B2  103C 0003                215          MOVE.B      #3, D0
000011B6  4E4F                     216          TRAP        #15
000011B8                           217          
000011B8  43F9 00001FD1            218          LEA         comma, A1           ; Display space
000011BE  103C 000E                219          MOVE.B      #14, D0             ; command for trap call to display message
000011C2  4E4F                     220          TRAP        #15                 ; trap call
000011C4                           221          
000011C4  4EB9 00001972            222          JSR         printEA
000011CA                           223          
000011CA  43F9 00001FC6            224          LEA         newLine, A1           ; Display space
000011D0  103C 000E                225          MOVE.B      #14, D0             ; command for trap call to display message
000011D4  4E4F                     226          TRAP        #15                 ; trap call
000011D6                           227          
000011D6  6000 FE34                228          BRA         LOOP
000011DA                           229          
000011DA                           230          
000011DA  43F9 00002060            231  opORIW  LEA         dispWord, A1        ; Display byte
000011E0  103C 000E                232          MOVE.B      #14, D0             ; command for trap call to display message
000011E4  4E4F                     233          TRAP        #15                 ; trap call
000011E6                           234          
000011E6  43F9 00001FCA            235          LEA         space, A1           ; Display space
000011EC  103C 000E                236          MOVE.B      #14, D0             ; command for trap call to display message
000011F0  4E4F                     237          TRAP        #15                 ; trap call
000011F2                           238          
000011F2  4242                     239          CLR         D2
000011F4  1401                     240          MOVE.B      D1,D2
000011F6  E642                     241          ASR         #three,D2
000011F8  C47C 0007                242          AND         #seven,D2
000011FC  4243                     243          CLR         D3        
000011FE  1601                     244          MOVE.B      D1,D3
00001200  C67C 0007                245          AND         #seven,D3
00001204                           246          
00001204  4241                     247          CLR         D1
00001206  3218                     248          MOVE.W      (A0)+, D1
00001208                           249          
00001208  43F9 00001FCD            250          LEA         hashTag, A1           ; Display space
0000120E  103C 000E                251          MOVE.B      #14, D0             ; command for trap call to display message
00001212  4E4F                     252          TRAP        #15                 ; trap call
00001214                           253          
00001214  103C 0003                254          MOVE.B      #3, D0
00001218  4E4F                     255          TRAP        #15
0000121A                           256          
0000121A  43F9 00001FD1            257          LEA         comma, A1           ; Display space
00001220  103C 000E                258          MOVE.B      #14, D0             ; command for trap call to display message
00001224  4E4F                     259          TRAP        #15                 ; trap call
00001226                           260          
00001226  4EB9 00001972            261          JSR         printEA
0000122C                           262          
0000122C  43F9 00001FC6            263          LEA         newLine, A1           ; Display space
00001232  103C 000E                264          MOVE.B      #14, D0             ; command for trap call to display message
00001236  4E4F                     265          TRAP        #15                 ; trap call
00001238                           266          
00001238  6000 FDD2                267          BRA         LOOP
0000123C                           268       
0000123C  43F9 00002063            269  opORIL  LEA         dispLong, A1        ; Display byte
00001242  103C 000E                270          MOVE.B      #14, D0             ; command for trap call to display message
00001246  4E4F                     271          TRAP        #15                 ; trap call
00001248                           272          
00001248  43F9 00001FCA            273          LEA         space, A1           ; Display space
0000124E  103C 000E                274          MOVE.B      #14, D0             ; command for trap call to display message
00001252  4E4F                     275          TRAP        #15                 ; trap call
00001254                           276          
00001254  4242                     277          CLR         D2
00001256  1401                     278          MOVE.B      D1,D2
00001258  E642                     279          ASR         #three,D2
0000125A  C47C 0007                280          AND         #seven,D2
0000125E  4243                     281          CLR         D3        
00001260  1601                     282          MOVE.B      D1,D3
00001262  C67C 0007                283          AND         #seven,D3
00001266                           284          
00001266  4241                     285          CLR         D1
00001268  2218                     286          MOVE.L      (A0)+, D1
0000126A                           287          
0000126A  43F9 00001FCD            288          LEA         hashTag, A1           ; Display space
00001270  103C 000E                289          MOVE.B      #14, D0             ; command for trap call to display message
00001274  4E4F                     290          TRAP        #15                 ; trap call
00001276                           291          
00001276  103C 0003                292          MOVE.B      #3, D0
0000127A  4E4F                     293          TRAP        #15
0000127C                           294          
0000127C  43F9 00001FD1            295          LEA         comma, A1           ; Display space
00001282  103C 000E                296          MOVE.B      #14, D0             ; command for trap call to display message
00001286  4E4F                     297          TRAP        #15                 ; trap call
00001288                           298          
00001288  4EB9 00001972            299          JSR         printEA
0000128E                           300          
0000128E  43F9 00001FC6            301          LEA         newLine, A1           ; Display space
00001294  103C 000E                302          MOVE.B      #14, D0             ; command for trap call to display message
00001298  4E4F                     303          TRAP        #15                 ; trap call
0000129A                           304          
0000129A  6000 FD70                305          BRA         LOOP
0000129E                           306           
0000129E  43F9 00001FDF            307  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000012A4  103C 000E                308          MOVE.B      #14, D0             ; command for trap call to display message
000012A8  4E4F                     309          TRAP        #15                 ; trap call
000012AA                           310                  
000012AA  1218                     311          MOVE.B      (A0)+, D1
000012AC  1401                     312          MOVE.B      D1,D2               ; copy data over
000012AE  EC42                     313          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000012B0  B43C 0000                314          CMP.B       #zero,D2
000012B4  6700 0034                315          BEQ         opCMPIB
000012B8  B43C 0001                316          CMP.B       #one,D2
000012BC  6700 008E                317          BEQ         opCMPIW
000012C0  B43C 0002                318          CMP.B       #two,D2
000012C4  6700 00E8                319          BEQ         opCMPIL
000012C8                           320          
000012C8  1401                     321          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000012CA  E542                     322          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
000012CC  1802                     323          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
000012CE  4242                     324          CLR         D2                  ; Clear out data register
000012D0  1404                     325          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
000012D2  EA42                     326          ASR         #five,D2            ; Shift the register out to get just the mode
000012D4  1802                     327          MOVE.B      D2,D4               ; Store mode into D4
000012D6  4242                     328          CLR         D2
000012D8                           329          
000012D8  1401                     330          MOVE.B      D1,D2               ; Getting the EA register
000012DA  EB42                     331          ASL         #five,D2
000012DC  1A02                     332          MOVE.B      D2,D5               ; Move just the register into D5
000012DE  4242                     333          CLR         D2                  ; Clearing D2 to put data back
000012E0  1405                     334          MOVE.B      D5,D2               ; Putting back the register
000012E2  EA42                     335          ASR         #five,D2            ; Shifting bits in order to read the register
000012E4  1A02                     336          MOVE.B      D2,D5               ; Store register into D5
000012E6                           337          
000012E6  6000 FD24                338          BRA         LOOP                ; go back to the loop
000012EA                           339  
000012EA  43F9 0000205D            340  opCMPIB LEA         dispByte, A1        ; Display byte
000012F0  103C 000E                341          MOVE.B      #14, D0             ; command for trap call to display message
000012F4  4E4F                     342          TRAP        #15                 ; trap call
000012F6                           343          
000012F6  43F9 00001FCA            344          LEA         space, A1           ; Display space
000012FC  103C 000E                345          MOVE.B      #14, D0             ; command for trap call to display message
00001300  4E4F                     346          TRAP        #15                 ; trap call
00001302                           347          
00001302  4242                     348          CLR         D2
00001304  1401                     349          MOVE.B      D1,D2
00001306  E642                     350          ASR         #three,D2
00001308  C47C 0007                351          AND         #seven,D2
0000130C  4243                     352          CLR         D3        
0000130E  1601                     353          MOVE.B      D1,D3
00001310  C67C 0007                354          AND         #seven,D3
00001314                           355          
00001314  4241                     356          CLR         D1
00001316  3218                     357          MOVE.W      (A0)+, D1
00001318                           358          
00001318  43F9 00001FCD            359          LEA         hashTag, A1           ; Display space
0000131E  103C 000E                360          MOVE.B      #14, D0             ; command for trap call to display message
00001322  4E4F                     361          TRAP        #15                 ; trap call
00001324                           362          
00001324  103C 0003                363          MOVE.B      #3, D0
00001328  4E4F                     364          TRAP        #15
0000132A                           365          
0000132A  43F9 00001FD1            366          LEA         comma, A1           ; Display space
00001330  103C 000E                367          MOVE.B      #14, D0             ; command for trap call to display message
00001334  4E4F                     368          TRAP        #15                 ; trap call
00001336                           369          
00001336  4EB9 00001972            370          JSR         printEA
0000133C                           371          
0000133C  43F9 00001FC6            372          LEA         newLine, A1           ; Display space
00001342  103C 000E                373          MOVE.B      #14, D0             ; command for trap call to display message
00001346  4E4F                     374          TRAP        #15                 ; trap call
00001348                           375  
00001348  6000 FCC2                376          BRA         LOOP
0000134C                           377  
0000134C  43F9 00002060            378  opCMPIW LEA         dispWord, A1        ; Display byte
00001352  103C 000E                379          MOVE.B      #14, D0             ; command for trap call to display message
00001356  4E4F                     380          TRAP        #15                 ; trap call
00001358                           381          
00001358  43F9 00001FCA            382          LEA         space, A1           ; Display space
0000135E  103C 000E                383          MOVE.B      #14, D0             ; command for trap call to display message
00001362  4E4F                     384          TRAP        #15                 ; trap call
00001364                           385          
00001364  4242                     386          CLR         D2
00001366  1401                     387          MOVE.B      D1,D2
00001368  E642                     388          ASR         #three,D2
0000136A  C47C 0007                389          AND         #seven,D2
0000136E  4243                     390          CLR         D3        
00001370  1601                     391          MOVE.B      D1,D3
00001372  C67C 0007                392          AND         #seven,D3
00001376                           393          
00001376  4241                     394          CLR         D1
00001378  3218                     395          MOVE.W      (A0)+, D1
0000137A                           396          
0000137A  43F9 00001FCD            397          LEA         hashTag, A1           ; Display space
00001380  103C 000E                398          MOVE.B      #14, D0             ; command for trap call to display message
00001384  4E4F                     399          TRAP        #15                 ; trap call
00001386                           400          
00001386  103C 0003                401          MOVE.B      #3, D0
0000138A  4E4F                     402          TRAP        #15
0000138C                           403          
0000138C  43F9 00001FD1            404          LEA         comma, A1           ; Display space
00001392  103C 000E                405          MOVE.B      #14, D0             ; command for trap call to display message
00001396  4E4F                     406          TRAP        #15                 ; trap call
00001398                           407          
00001398  4EB9 00001972            408          JSR         printEA
0000139E                           409          
0000139E  43F9 00001FC6            410          LEA         newLine, A1           ; Display space
000013A4  103C 000E                411          MOVE.B      #14, D0             ; command for trap call to display message
000013A8  4E4F                     412          TRAP        #15                 ; trap call
000013AA  6000 FC60                413          BRA         LOOP
000013AE                           414  
000013AE  43F9 00002063            415  opCMPIL LEA         dispLong, A1        ; Display byte
000013B4  103C 000E                416          MOVE.B      #14, D0             ; command for trap call to display message
000013B8  4E4F                     417          TRAP        #15                 ; trap call
000013BA                           418          
000013BA  43F9 00001FCA            419          LEA         space, A1           ; Display space
000013C0  103C 000E                420          MOVE.B      #14, D0             ; command for trap call to display message
000013C4  4E4F                     421          TRAP        #15                 ; trap call
000013C6                           422          
000013C6  4242                     423          CLR         D2
000013C8  1401                     424          MOVE.B      D1,D2
000013CA  E642                     425          ASR         #three,D2
000013CC  C47C 0007                426          AND         #seven,D2
000013D0  4243                     427          CLR         D3        
000013D2  1601                     428          MOVE.B      D1,D3
000013D4  C67C 0007                429          AND         #seven,D3
000013D8                           430          
000013D8  4241                     431          CLR         D1
000013DA  3218                     432          MOVE.W      (A0)+, D1
000013DC                           433          
000013DC  43F9 00001FCD            434          LEA         hashTag, A1           ; Display space
000013E2  103C 000E                435          MOVE.B      #14, D0             ; command for trap call to display message
000013E6  4E4F                     436          TRAP        #15                 ; trap call
000013E8                           437          
000013E8  103C 0003                438          MOVE.B      #3, D0
000013EC  4E4F                     439          TRAP        #15
000013EE                           440          
000013EE  43F9 00001FD1            441          LEA         comma, A1           ; Display space
000013F4  103C 000E                442          MOVE.B      #14, D0             ; command for trap call to display message
000013F8  4E4F                     443          TRAP        #15                 ; trap call
000013FA                           444          
000013FA  4EB9 00001972            445          JSR         printEA
00001400                           446          
00001400  43F9 00001FC6            447          LEA         newLine, A1           ; Display space
00001406  103C 000E                448          MOVE.B      #14, D0             ; command for trap call to display message
0000140A  4E4F                     449          TRAP        #15                 ; trap call
0000140C                           450          
0000140C  6000 FBFE                451          BRA         LOOP
00001410                           452  
00001410  43F9 00001FE4            453  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001416  103C 000E                454                  MOVE.B      #14, D0             ; command for trap call to display message
0000141A  4E4F                     455                  TRAP        #15                 ; trap call
0000141C                           456  
0000141C  43F9 00001FCA            457                  LEA         space, A1           ; Display space
00001422  103C 000E                458                  MOVE.B      #14, D0             ; command for trap call to display message
00001426  4E4F                     459                  TRAP        #15                 ; trap call
00001428                           460                  
00001428  4242                     461                  CLR         D2
0000142A  1218                     462                  MOVE.B      (A0)+, D1
0000142C  1401                     463                  MOVE.B      D1,D2               ; copy data over
0000142E  E642                     464                  ASR         #three,D2           ; Shift to the right to remove register
00001430  C47C 0007                465                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
00001434                           466                  
00001434  4243                     467                  CLR         D3                  ; Clear D3 so we can move D1 in
00001436  1601                     468                  MOVE.B      D1,D3               ; Move othr byte in
00001438  C67C 0007                469                  AND         #seven,D3           ; Set everything besides register to 0
0000143C                           470                  
0000143C  4241                     471                  CLR         D1
0000143E  3218                     472                  MOVE.W      (A0)+, D1
00001440                           473                 
00001440                           474                  
00001440  43F9 00001FCD            475                  LEA         hashTag, A1           ; Display space
00001446  103C 000E                476                  MOVE.B      #14, D0             ; command for trap call to display message
0000144A  4E4F                     477                  TRAP        #15                 ; trap call
0000144C                           478          
0000144C  103C 0003                479                  MOVE.B      #3, D0
00001450  4E4F                     480                  TRAP        #15
00001452                           481          
00001452  43F9 00001FD1            482                  LEA         comma, A1           ; Display space
00001458  103C 000E                483                  MOVE.B      #14, D0             ; command for trap call to display message
0000145C  4E4F                     484                  TRAP        #15                 ; trap call
0000145E                           485                  
0000145E  4EB9 00001972            486                  JSR         printEA
00001464                           487          
00001464  43F9 00001FC6            488                  LEA         newLine, A1           ; Display space
0000146A  103C 000E                489                  MOVE.B      #14, D0             ; command for trap call to display message
0000146E  4E4F                     490                  TRAP        #15                 ; trap call
00001470                           491                  
00001470                           492                  
00001470  6000 FB9A                493                  BRA         LOOP                
00001474                           494          
00001474                           495  opDynBCLR       
00001474  4241                     496                  CLR         D1
00001476  1218                     497                  MOVE.B      (A0)+,D1            ; Copy second byte in
00001478  1601                     498                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
0000147A  E243                     499                  ASR         #one,D3             ; Shift register over to the end
0000147C  C67C 0007                500                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
00001480                           501                  
00001480  1401                     502                  MOVE.B      D1,D2
00001482  EC42                     503                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
00001484  B47C 0002                504                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
00001488  6600 0B38                505                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
0000148C                           506  
0000148C                           507                  
0000148C  43F9 00001FE4            508                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
00001492  103C 000E                509                  MOVE.B      #14, D0             ; command for trap call to display message
00001496  4E4F                     510                  TRAP        #15                 ; trap call  
00001498                           511                  
00001498  43F9 00001FCA            512                  LEA         space, A1           ; Display space
0000149E  103C 000E                513                  MOVE.B      #14, D0             ; command for trap call to display message
000014A2  4E4F                     514                  TRAP        #15                 ; trap call
000014A4                           515                  
000014A4  143C 0000                516                  MOVE.B      #zero,D2                
000014A8  4EB9 00001972            517                  JSR         printEA
000014AE                           518                  
000014AE  43F9 00001FD1            519                  LEA         comma, A1           ; Display space
000014B4  103C 000E                520                  MOVE.B      #14, D0             ; command for trap call to display message
000014B8  4E4F                     521                  TRAP        #15                 ; trap call
000014BA                           522                  
000014BA  4242                     523                  CLR         D2
000014BC  1401                     524                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000014BE  E642                     525                  ASR         #three,D2           ; Remove/shift the register out
000014C0  C47C 0007                526                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000014C4                           527                  
000014C4  4243                     528                  CLR         D3                  ; Clearing D3 to avoid mashing data
000014C6  1601                     529                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000014C8  C67C 0007                530                  AND         #seven,D3           ; Change all bits except for register bits to 0
000014CC                           531                  
000014CC                           532  
000014CC  4EB9 00001972            533                  JSR         printEA
000014D2                           534          
000014D2  43F9 00001FC6            535                  LEA         newLine, A1           ; Display space
000014D8  103C 000E                536                  MOVE.B      #14, D0             ; command for trap call to display message
000014DC  4E4F                     537                  TRAP        #15                 ; trap call            
000014DE                           538  
000014DE                           539  
000014DE  6000 FB2C                540                  BRA         LOOP                ; go back to the loop
000014E2                           541   
000014E2                           542  opMOVEB 
000014E2  43F9 00001FE9            543          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
000014E8  103C 000E                544          MOVE.B      #14, D0             ; command for trap call to display message
000014EC  4E4F                     545          TRAP        #15                 ; trap call
000014EE  43F9 0000205D            546          LEA         dispByte, A1        ; display byte
000014F4  103C 000E                547          MOVE.B      #14, D0             ; command for trap call to display message
000014F8  4E4F                     548          TRAP        #15                 ; trap call
000014FA  43F9 00001FCA            549          LEA         space, A1           ; create spaces
00001500  103C 000E                550          MOVE.B      #14, D0             ; command for trap call to display message
00001504  4E4F                     551          TRAP        #15                 ; trap call
00001506                           552          
00001506                           553          
00001506  4245                     554          CLR         D5                  ; Clear D5
00001508  1A01                     555          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000150A  E245                     556          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
0000150C  CA7C 0007                557          AND         #seven,D5
00001510                           558          
00001510  4244                     559          CLR         D4                  ; Clear out D4
00001512  1801                     560          MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001514  C87C 0001                561          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001518                           562          
00001518  4241                     563          CLR          D1
0000151A  4242                     564          CLR          D2
0000151C  1218                     565          MOVE.B      (A0)+,D1            ; Copy byte into D1
0000151E  1401                     566          MOVE.B      D1,D2
00001520  EC42                     567          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001522  D842                     568          ADD         D2,D4               ; Adds the remaining bits to D4
00001524                           569          
00001524  4242                     570          CLR         D2
00001526  1401                     571          MOVE.B      D1,D2               ; Copy new byte over to D2
00001528  E642                     572          ASR         #three,D2           ; Shift source register out
0000152A  C47C 0007                573          AND         #seven,D2           ; Set everything to 0 except for the mode
0000152E                           574          
0000152E  4243                     575          CLR         D3
00001530  1601                     576          MOVE.B      D1,D3
00001532  C67C 0007                577          AND         #seven,D3
00001536                           578          
00001536  4EB9 00001972            579          JSR         printEA
0000153C                           580          
0000153C  43F9 00001FD1            581          LEA         comma, A1           ; Display space
00001542  103C 000E                582          MOVE.B      #14, D0             ; command for trap call to display message
00001546  4E4F                     583          TRAP        #15                 ; trap call
00001548                           584          
00001548  4242                     585          CLR         D2
0000154A  4243                     586          CLR         D3
0000154C  1404                     587          MOVE.B      D4,D2
0000154E  1605                     588          MOVE.B      D5,D3
00001550                           589          
00001550  4EB9 00001972            590          JSR         printEA
00001556                           591          
00001556                           592          
00001556  43F9 00001FC6            593          LEA         newLine, A1           ; Display space
0000155C  103C 000E                594          MOVE.B      #14, D0             ; command for trap call to display message
00001560  4E4F                     595          TRAP        #15                 ; trap call            
00001562                           596  
00001562                           597  
00001562  6000 FAA8                598          BRA         LOOP                ; go back to the loop
00001566                           599          
00001566                           600  opMOVEL     
00001566                           601          
00001566  4245                     602              CLR         D5                  ; Clear D5
00001568  1A01                     603              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000156A  E245                     604              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
0000156C  CA7C 0007                605              AND         #seven,D5
00001570                           606          
00001570  4244                     607              CLR         D4                  ; Clear out D4
00001572  1801                     608              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001574  C87C 0001                609              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001578                           610          
00001578  4241                     611              CLR          D1
0000157A  4242                     612              CLR          D2
0000157C  1218                     613              MOVE.B      (A0)+,D1            ; Copy byte into D1
0000157E  1401                     614              MOVE.B      D1,D2
00001580  EC42                     615              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001582  D842                     616              ADD         D2,D4               ; Adds the remaining bits to D4
00001584                           617          
00001584  B87C 0001                618              CMP         #one,D4             ; Check if it is MOVEA
00001588  6700 006C                619              BEQ         opMOVEAL            ; If it is, branch off
0000158C                           620              
0000158C  43F9 00001FE9            621              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001592  103C 000E                622              MOVE.B      #14, D0             ; command for trap call to display message
00001596  4E4F                     623              TRAP        #15                 ; trap call  
00001598                           624              
00001598                           625              
00001598  43F9 00002063            626              LEA         dispLong,A1
0000159E  103C 000E                627              MOVE.B      #14, D0             ; command for trap call to display message
000015A2  4E4F                     628              TRAP        #15                 ; trap call
000015A4                           629              
000015A4  43F9 00001FCA            630              LEA         space, A1           ; create spaces
000015AA  103C 000E                631              MOVE.B      #14, D0             ; command for trap call to display message
000015AE  4E4F                     632              TRAP        #15                 ; trap call
000015B0                           633          
000015B0  4242                     634              CLR         D2
000015B2  1401                     635              MOVE.B      D1,D2               ; Copy new byte over to D2
000015B4  E642                     636              ASR         #three,D2           ; Shift source register out
000015B6  C47C 0007                637              AND         #seven,D2           ; Set everything to 0 except for the mode
000015BA                           638          
000015BA  4243                     639              CLR         D3
000015BC  1601                     640              MOVE.B      D1,D3
000015BE  C67C 0007                641              AND         #seven,D3
000015C2                           642              
000015C2  4241                     643              CLR         D1                  ; Clear D1
000015C4  2218                     644              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
000015C6                           645              
000015C6  4EB9 00001972            646              JSR         printEA
000015CC                           647              
000015CC  43F9 00001FD1            648              LEA         comma, A1           ; Display comma
000015D2  103C 000E                649              MOVE.B      #14, D0             ; command for trap call to display message
000015D6  4E4F                     650              TRAP        #15                 ; trap call
000015D8                           651          
000015D8  4242                     652              CLR         D2
000015DA  4243                     653              CLR         D3
000015DC  1404                     654              MOVE.B      D4,D2
000015DE  1605                     655              MOVE.B      D5,D3
000015E0                           656              
000015E0                           657  
000015E0                           658              
000015E0  4EB9 00001972            659              JSR         printEA
000015E6                           660          
000015E6                           661          
000015E6  43F9 00001FC6            662              LEA         newLine, A1           ; Display space
000015EC  103C 000E                663              MOVE.B      #14, D0             ; command for trap call to display message
000015F0  4E4F                     664              TRAP        #15                 ; trap call            
000015F2                           665  
000015F2                           666  
000015F2  6000 FA18                667              BRA         LOOP                ; go back to the loop
000015F6                           668              
000015F6                           669  opMOVEAL
000015F6                           670  
000015F6  43F9 00001FEE            671              LEA         MOVEAmatch,A1
000015FC  103C 000E                672              MOVE.B      #14, D0             ; command for trap call to display message
00001600  4E4F                     673              TRAP        #15                 ; trap call
00001602                           674              
00001602  43F9 00002063            675              LEA         dispLong,A1
00001608  103C 000E                676              MOVE.B      #14, D0             ; command for trap call to display message
0000160C  4E4F                     677              TRAP        #15                 ; trap call
0000160E                           678              
0000160E                           679  
0000160E  43F9 00001FCA            680              LEA         space, A1           ; create spaces
00001614  103C 000E                681              MOVE.B      #14, D0             ; command for trap call to display message
00001618  4E4F                     682              TRAP        #15                 ; trap call
0000161A                           683              
0000161A  4242                     684              CLR         D2
0000161C  1401                     685              MOVE.B      D1,D2               ; Copy new byte over to D2
0000161E  E642                     686              ASR         #three,D2           ; Shift source register out
00001620  C47C 0007                687              AND         #seven,D2           ; Set everything to 0 except for the mode
00001624                           688          
00001624  4243                     689              CLR         D3
00001626  1601                     690              MOVE.B      D1,D3
00001628  C67C 0007                691              AND         #seven,D3
0000162C                           692              
0000162C  4241                     693              CLR         D1                  ; Clear D1
0000162E  3218                     694              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001630                           695              
00001630                           696              
00001630  4EB9 00001972            697              JSR         printEA
00001636                           698              
00001636  43F9 00001FD1            699              LEA         comma, A1           ; Display comma
0000163C  103C 000E                700              MOVE.B      #14, D0             ; command for trap call to display message
00001640  4E4F                     701              TRAP        #15                 ; trap call
00001642                           702  
00001642  4242                     703              CLR         D2
00001644  4243                     704              CLR         D3
00001646  1404                     705              MOVE.B      D4,D2
00001648  1605                     706              MOVE.B      D5,D3
0000164A                           707          
0000164A  4EB9 00001972            708              JSR         printEA
00001650                           709          
00001650                           710          
00001650  43F9 00001FC6            711              LEA         newLine, A1           ; Display space
00001656  103C 000E                712              MOVE.B      #14, D0             ; command for trap call to display message
0000165A  4E4F                     713              TRAP        #15                 ; trap call            
0000165C                           714  
0000165C                           715  
0000165C  6000 F9AE                716              BRA         LOOP                ; go back to the loop
00001660                           717  
00001660                           718  opMOVEW
00001660                           719          
00001660  4245                     720              CLR         D5                  ; Clear D5
00001662  1A01                     721              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001664  E245                     722              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001666  CA7C 0007                723              AND         #seven,D5
0000166A                           724          
0000166A  4244                     725              CLR         D4                  ; Clear out D4
0000166C  1801                     726              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000166E  C87C 0001                727              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001672                           728          
00001672  4241                     729              CLR          D1
00001674  4242                     730              CLR          D2
00001676  1218                     731              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001678  1401                     732              MOVE.B      D1,D2
0000167A  EC42                     733              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000167C  D842                     734              ADD         D2,D4               ; Adds the remaining bits to D4
0000167E                           735          
0000167E  B87C 0001                736              CMP         #one,D4             ; Check if it is MOVEA
00001682  6700 006C                737              BEQ         opMOVEAW            ; If it is, branch off
00001686                           738              
00001686  43F9 00001FE9            739              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
0000168C  103C 000E                740              MOVE.B      #14, D0             ; command for trap call to display message
00001690  4E4F                     741              TRAP        #15                 ; trap call  
00001692                           742              
00001692  43F9 00002060            743              LEA         dispWord,A1
00001698  103C 000E                744              MOVE.B      #14, D0             ; command for trap call to display message
0000169C  4E4F                     745              TRAP        #15                 ; trap call
0000169E                           746              
0000169E  43F9 00001FCA            747              LEA         space, A1           ; create spaces
000016A4  103C 000E                748              MOVE.B      #14, D0             ; command for trap call to display message
000016A8  4E4F                     749              TRAP        #15                 ; trap call
000016AA                           750          
000016AA  4242                     751              CLR         D2
000016AC  1401                     752              MOVE.B      D1,D2               ; Copy new byte over to D2
000016AE  E642                     753              ASR         #three,D2           ; Shift source register out
000016B0  C47C 0007                754              AND         #seven,D2           ; Set everything to 0 except for the mode
000016B4                           755          
000016B4  4243                     756              CLR         D3
000016B6  1601                     757              MOVE.B      D1,D3
000016B8  C67C 0007                758              AND         #seven,D3
000016BC                           759              
000016BC  4241                     760              CLR         D1                  ; Clear D1
000016BE  3218                     761              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
000016C0                           762              
000016C0  4EB9 00001972            763              JSR         printEA
000016C6                           764              
000016C6  43F9 00001FD1            765              LEA         comma, A1           ; Display comma
000016CC  103C 000E                766              MOVE.B      #14, D0             ; command for trap call to display message
000016D0  4E4F                     767              TRAP        #15                 ; trap call
000016D2                           768          
000016D2  4242                     769              CLR         D2
000016D4  4243                     770              CLR         D3
000016D6  1404                     771              MOVE.B      D4,D2
000016D8  1605                     772              MOVE.B      D5,D3
000016DA                           773              
000016DA                           774  
000016DA                           775              
000016DA  4EB9 00001972            776              JSR         printEA
000016E0                           777          
000016E0                           778          
000016E0  43F9 00001FC6            779              LEA         newLine, A1           ; Display space
000016E6  103C 000E                780              MOVE.B      #14, D0             ; command for trap call to display message
000016EA  4E4F                     781              TRAP        #15                 ; trap call            
000016EC                           782  
000016EC                           783  
000016EC  6000 F91E                784              BRA         LOOP                ; go back to the loop
000016F0                           785  opMOVEAW  
000016F0  43F9 00001FEE            786              LEA         MOVEAmatch,A1
000016F6  103C 000E                787              MOVE.B      #14, D0             ; command for trap call to display message
000016FA  4E4F                     788              TRAP        #15                 ; trap call
000016FC                           789              
000016FC  43F9 00002060            790              LEA         dispWord,A1
00001702  103C 000E                791              MOVE.B      #14, D0             ; command for trap call to display message
00001706  4E4F                     792              TRAP        #15                 ; trap call
00001708                           793              
00001708                           794  
00001708  43F9 00001FCA            795              LEA         space, A1           ; create spaces
0000170E  103C 000E                796              MOVE.B      #14, D0             ; command for trap call to display message
00001712  4E4F                     797              TRAP        #15                 ; trap call
00001714                           798              
00001714  4242                     799              CLR         D2
00001716  1401                     800              MOVE.B      D1,D2               ; Copy new byte over to D2
00001718  E642                     801              ASR         #three,D2           ; Shift source register out
0000171A  C47C 0007                802              AND         #seven,D2           ; Set everything to 0 except for the mode
0000171E                           803          
0000171E  4243                     804              CLR         D3
00001720  1601                     805              MOVE.B      D1,D3
00001722  C67C 0007                806              AND         #seven,D3
00001726                           807              
00001726  4241                     808              CLR         D1                  ; Clear D1
00001728  3218                     809              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
0000172A                           810              
0000172A                           811              
0000172A  4EB9 00001972            812              JSR         printEA
00001730                           813              
00001730  43F9 00001FD1            814              LEA         comma, A1           ; Display comma
00001736  103C 000E                815              MOVE.B      #14, D0             ; command for trap call to display message
0000173A  4E4F                     816              TRAP        #15                 ; trap call
0000173C                           817  
0000173C  4242                     818              CLR         D2
0000173E  4243                     819              CLR         D3
00001740  1404                     820              MOVE.B      D4,D2
00001742  1605                     821              MOVE.B      D5,D3
00001744                           822          
00001744  4EB9 00001972            823              JSR         printEA
0000174A                           824          
0000174A                           825          
0000174A  43F9 00001FC6            826              LEA         newLine, A1           ; Display space
00001750  103C 000E                827              MOVE.B      #14, D0             ; command for trap call to display message
00001754  4E4F                     828              TRAP        #15                 ; trap call            
00001756                           829  
00001756                           830  
00001756  6000 F8B4                831              BRA         LOOP                ; go back to the loop
0000175A                           832  
0000175A                           833  opNEG   
0000175A  43F9 00001FF4            834              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001760  103C 000E                835              MOVE.B      #14, D0             ; command for trap call to display message
00001764  4E4F                     836              TRAP        #15                 ; trap call
00001766                           837          
00001766                           838          
00001766  1218                     839              MOVE.B      (A0)+, D1
00001768  1401                     840              MOVE.B      D1,D2               ; copy data over
0000176A  EC42                     841              ASR         #six,D2
0000176C                           842              
0000176C  B47C 0000                843              CMP         #zero,D2
00001770  6700 0016                844              BEQ         opNEGB
00001774  B47C 0001                845              CMP         #one,D2
00001778  6700 004E                846              BEQ         opNEGL
0000177C  B47C 0002                847              CMP         #two,D2
00001780  6700 0086                848              BEQ         opNEGW
00001784  6000 0836                849              BRA         INVALID
00001788                           850  opNEGB
00001788                           851  
00001788  43F9 0000205D            852              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
0000178E  103C 000E                853              MOVE.B      #14, D0             ; command for trap call to display message
00001792  4E4F                     854              TRAP        #15                 ; trap call
00001794                           855          
00001794  43F9 00001FCA            856              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000179A  103C 000E                857              MOVE.B      #14, D0             ; command for trap call to display message
0000179E  4E4F                     858              TRAP        #15                 ; trap call
000017A0                           859          
000017A0  4242                     860              CLR         D2                  ; Clear Data register 2
000017A2  3401                     861              MOVE        D1,D2               ; Move byte into D2
000017A4  E642                     862              ASR         #three,D2           ; Shift mode into place and moves mode into place
000017A6  C47C 0007                863              AND         #seven,D2           ; Stores mode
000017AA                           864              
000017AA  4243                     865              CLR         D3
000017AC  3601                     866              MOVE        D1,D3
000017AE  C67C 0007                867              AND         #seven,D3
000017B2                           868          
000017B2  4EB9 00001972            869              JSR         printEA
000017B8                           870                  
000017B8  43F9 00001FC6            871              LEA         newLine, A1           ; Display space
000017BE  103C 000E                872              MOVE.B      #14, D0             ; command for trap call to display message
000017C2  4E4F                     873              TRAP        #15                 ; trap call  
000017C4                           874          
000017C4  6000 F846                875              BRA         LOOP
000017C8                           876                  
000017C8                           877  
000017C8                           878  opNEGL
000017C8                           879  
000017C8  43F9 00002063            880              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
000017CE  103C 000E                881              MOVE.B      #14, D0             ; command for trap call to display message
000017D2  4E4F                     882              TRAP        #15                 ; trap call
000017D4                           883  
000017D4  43F9 00001FCA            884              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000017DA  103C 000E                885              MOVE.B      #14, D0             ; command for trap call to display message
000017DE  4E4F                     886              TRAP        #15                 ; trap call
000017E0                           887                  
000017E0  4242                     888              CLR         D2                  ; Clear Data register 2
000017E2  3401                     889              MOVE        D1,D2               ; Move byte into D2
000017E4  E642                     890              ASR         #three,D2           ; Shift mode into place and moves mode into place
000017E6  C47C 0007                891              AND         #seven,D2           ; Stores mode
000017EA                           892          
000017EA  4243                     893              CLR         D3
000017EC  3601                     894              MOVE        D1,D3
000017EE  C67C 0007                895              AND         #seven,D3
000017F2                           896          
000017F2  4EB9 00001972            897              JSR         printEA
000017F8                           898                      
000017F8  43F9 00001FC6            899              LEA         newLine, A1           ; Display space
000017FE  103C 000E                900              MOVE.B      #14, D0             ; command for trap call to display message
00001802  4E4F                     901              TRAP        #15                 ; trap call  
00001804                           902          
00001804  6000 F806                903              BRA         LOOP
00001808                           904          
00001808                           905  
00001808                           906  opNEGW
00001808                           907  
00001808  43F9 00002060            908              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
0000180E  103C 000E                909              MOVE.B      #14, D0             ; command for trap call to display message
00001812  4E4F                     910              TRAP        #15                 ; trap call
00001814                           911          
00001814  43F9 00001FCA            912              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000181A  103C 000E                913              MOVE.B      #14, D0             ; command for trap call to display message
0000181E  4E4F                     914              TRAP        #15                 ; trap call        
00001820                           915                  
00001820  4242                     916              CLR         D2                  ; Clear Data register 2
00001822  3401                     917              MOVE        D1,D2               ; Move byte into D2
00001824  E642                     918              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001826  C47C 0007                919              AND         #seven,D2           ; Stores mode
0000182A                           920          
0000182A  4243                     921              CLR         D3
0000182C  3601                     922              MOVE        D1,D3
0000182E  C67C 0007                923              AND         #seven,D3
00001832                           924          
00001832  4EB9 00001972            925              JSR         printEA
00001838                           926              
00001838  43F9 00001FC6            927              LEA         newLine, A1           ; Display space
0000183E  103C 000E                928              MOVE.B      #14, D0             ; command for trap call to display message
00001842  4E4F                     929              TRAP        #15                 ; trap call  
00001844                           930          
00001844  6000 F7C6                931              BRA         LOOP
00001848                           932  
00001848                           933  opRTSJSR
00001848                           934          
00001848  1218                     935              MOVE.B      (A0)+, D1
0000184A                           936              
0000184A  1401                     937              MOVE.B      D1,D2               ; copy data over
0000184C  B47C 0075                938              CMP         #117,D2
00001850  6700 0050                939              BEQ         opRTS
00001854                           940              
00001854  EC42                     941              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
00001856  B47C 0002                942              CMP         #two,D2             ; Checking if it is JSR
0000185A  6700 0006                943              BEQ         opJSR               ; It is equal, so branch off to opJSR
0000185E                           944  
0000185E  6000 075C                945              BRA         invalid
00001862                           946  
00001862                           947  opJSR
00001862                           948                        
00001862  43F9 00001FFC            949              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001868  103C 000E                950              MOVE.B      #14, D0             ; command for trap call to display message
0000186C  4E4F                     951              TRAP        #15                 ; trap call
0000186E                           952              
0000186E  43F9 00001FCA            953              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001874  103C 000E                954              MOVE.B      #14, D0             ; command for trap call to display message
00001878  4E4F                     955              TRAP        #15                 ; trap call
0000187A                           956              
0000187A  4242                     957              CLR         D2
0000187C  4243                     958              CLR         D3
0000187E                           959              
0000187E  1401                     960              MOVE.B      D1,D2
00001880  E642                     961              ASR         #three,D2
00001882  C47C 0007                962              AND         #seven,D2
00001886                           963              
00001886  1601                     964              MOVE.B      D1,D3
00001888  C67C 0007                965              AND         #seven,D3
0000188C                           966              
0000188C  4EB9 00001972            967              JSR         printEA
00001892                           968              
00001892  43F9 00001FC6            969              LEA         newLine, A1           ; Display space
00001898  103C 000E                970              MOVE.B      #14, D0             ; command for trap call to display message
0000189C  4E4F                     971              TRAP        #15                 ; trap call  
0000189E                           972              
0000189E  6000 F76C                973              BRA         loop            
000018A2                           974  opRTS
000018A2                           975  
000018A2  43F9 00001FF8            976              LEA         RTSMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
000018A8  103C 000E                977              MOVE.B      #14, D0             ; command for trap call to display message
000018AC  4E4F                     978              TRAP        #15                 ; trap call
000018AE                           979              
000018AE  43F9 00001FC6            980              LEA         newLine, A1           ; Display space
000018B4  103C 000E                981              MOVE.B      #14, D0             ; command for trap call to display message
000018B8  4E4F                     982              TRAP        #15                 ; trap call 
000018BA                           983              
000018BA  6000 F750                984              BRA         loop
000018BE                           985  
000018BE                           986  opMOVEMLEA
000018BE                           987  
000018BE                           988  opSUBQ      
000018BE  43F9 0000200A            989              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
000018C4  103C 000E                990              MOVE.B      #14, D0             ; command for trap call to display message
000018C8  4E4F                     991              TRAP        #15                 ; trap call
000018CA                           992  
000018CA  43F9 0000200F            993  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
000018D0  103C 000E                994          MOVE.B      #14, D0             ; command for trap call to display message
000018D4  4E4F                     995          TRAP        #15                 ; trap call
000018D6  43F9 00001FCA            996          LEA         space, A1           ; create spaces
000018DC  103C 000E                997          MOVE.B      #14, D0             ; command for trap call to display message
000018E0  4E4F                     998          TRAP        #15                 ; trap call
000018E2                           999  
000018E2  43F9 00002013           1000  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
000018E8  103C 000E               1001          MOVE.B      #14, D0             ; command for trap call to display message
000018EC  4E4F                    1002          TRAP        #15                 ; trap call
000018EE                          1003  
000018EE  43F9 00002017           1004  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
000018F4  103C 000E               1005          MOVE.B      #14, D0             ; command for trap call to display message
000018F8  4E4F                    1006          TRAP        #15                 ; trap call
000018FA                          1007  
000018FA  43F9 0000201B           1008  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001900  103C 000E               1009          MOVE.B      #14, D0             ; command for trap call to display message
00001904  4E4F                    1010          TRAP        #15                 ; trap call
00001906                          1011  
00001906  43F9 0000201F           1012  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
0000190C  103C 000E               1013          MOVE.B      #14, D0             ; command for trap call to display message
00001910  4E4F                    1014          TRAP        #15                 ; trap call
00001912                          1015  
00001912  43F9 0000202B           1016  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001918  103C 000E               1017          MOVE.B      #14, D0             ; command for trap call to display message
0000191C  4E4F                    1018          TRAP        #15                 ; trap call
0000191E                          1019  
0000191E  43F9 00002037           1020  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001924  103C 000E               1021          MOVE.B      #14, D0             ; command for trap call to display message
00001928  4E4F                    1022          TRAP        #15                 ; trap call
0000192A                          1023  
0000192A  43F9 00002051           1024  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001930  103C 000E               1025          MOVE.B      #14, D0             ; command for trap call to display message
00001934  4E4F                    1026          TRAP        #15                 ; trap call
00001936                          1027  
00001936  43F9 0000204D           1028  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000193C  103C 000E               1029          MOVE.B      #14, D0             ; command for trap call to display message
00001940  4E4F                    1030          TRAP        #15                 ; trap call
00001942                          1031  
00001942  43F9 00002049           1032  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00001948  103C 000E               1033          MOVE.B      #14, D0             ; command for trap call to display message
0000194C  4E4F                    1034          TRAP        #15                 ; trap call
0000194E                          1035  
0000194E  43F9 00002045           1036  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001954  103C 000E               1037          MOVE.B      #14, D0             ; command for trap call to display message
00001958  4E4F                    1038          TRAP        #15                 ; trap call
0000195A                          1039  
0000195A  43F9 00002059           1040  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001960  103C 000E               1041          MOVE.B      #14, D0             ; command for trap call to display message
00001964  4E4F                    1042          TRAP        #15                 ; trap call
00001966                          1043  
00001966  43F9 00002055           1044  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
0000196C  103C 000E               1045          MOVE.B      #14, D0             ; command for trap call to display message
00001970  4E4F                    1046          TRAP        #15                 ; trap call
00001972                          1047  
00001972                          1048  
00001972                          1049  ***********************************************************************************************************
00001972                          1050  *
00001972                          1051  *                                           EA Print Check
00001972                          1052  *
00001972                          1053  ***********************************************************************************************************
00001972  48E7 FF7E               1054  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00001976                          1055  
00001976  B43C 0000               1056              CMP.B       #zero, D2
0000197A  6700 002E               1057              BEQ         pDataReg
0000197E  B43C 0001               1058              CMP.B       #one, D2
00001982  6700 00E6               1059              BEQ         pAddrReg
00001986  B43C 0002               1060              CMP.B       #two, D2
0000198A  6700 019E               1061              BEQ         pAddrDir
0000198E  B43C 0003               1062              CMP.B       #three, D2
00001992  6700 02C2               1063              BEQ         pAddrPost
00001996  B43C 0004               1064              CMP.B       #four, D2
0000199A  6700 0446               1065              BEQ         pAddrDec
0000199E  B43C 0007               1066              CMP.B       #seven, D2
000019A2  6700 0576               1067              BEQ         pHex
000019A6  6000 0614               1068              BRA         invalid
000019AA                          1069  
000019AA                          1070  ***********************************************************************************************************
000019AA                          1071  * Data Register        
000019AA  B63C 0000               1072  pDataReg    CMP.B   #zero,D3
000019AE  6700 003A               1073              BEQ     displayD0
000019B2  B63C 0001               1074              CMP.B   #one,D3
000019B6  6700 0042               1075              BEQ     displayD1
000019BA  B63C 0002               1076              CMP.B   #two,D3
000019BE  6700 004A               1077              BEQ     displayD2
000019C2  B63C 0003               1078              CMP.B   #three,D3
000019C6  6700 0052               1079              BEQ     displayD3
000019CA  B63C 0004               1080              CMP.B   #four,D3
000019CE  6700 005A               1081              BEQ     displayD4
000019D2  B63C 0005               1082              CMP.B   #five,D3
000019D6  6700 0062               1083              BEQ     displayD5
000019DA  B63C 0006               1084              CMP.B   #six,D3
000019DE  6700 006A               1085              BEQ     displayD6
000019E2  B63C 0007               1086              CMP.B   #seven,D3
000019E6  6700 0072               1087              BEQ     displayD7
000019EA                          1088              
000019EA  43F9 00002080           1089  displayD0   LEA         dispD0, A1          ; Display space
000019F0  103C 000E               1090              MOVE.B      #14, D0             ; command for trap call to display message
000019F4  4E4F                    1091              TRAP        #15                 ; trap call
000019F6  6000 05C4               1092              BRA         endSUB              ; go to the end of the subroutine
000019FA                          1093              
000019FA  43F9 00002083           1094  displayD1   LEA         dispD1, A1          ; Display space
00001A00  103C 000E               1095              MOVE.B      #14, D0             ; command for trap call to display message
00001A04  4E4F                    1096              TRAP        #15                 ; trap call
00001A06  6000 05B4               1097              BRA         endSUB              ; go to the end of the subroutine
00001A0A                          1098  
00001A0A  43F9 00002086           1099  displayD2   LEA         dispD2, A1          ; Display space
00001A10  103C 000E               1100              MOVE.B      #14, D0             ; command for trap call to display message
00001A14  4E4F                    1101              TRAP        #15                 ; trap call
00001A16  6000 05A4               1102              BRA         endSUB              ; go to the end of the subroutine
00001A1A                          1103  
00001A1A  43F9 00002089           1104  displayD3   LEA         dispD3, A1          ; Display space
00001A20  103C 000E               1105              MOVE.B      #14, D0             ; command for trap call to display message
00001A24  4E4F                    1106              TRAP        #15                 ; trap call
00001A26  6000 0594               1107              BRA         endSUB              ; go to the end of the subroutine
00001A2A                          1108  
00001A2A  43F9 0000208C           1109  displayD4   LEA         dispD4, A1          ; Display space
00001A30  103C 000E               1110              MOVE.B      #14, D0             ; command for trap call to display message
00001A34  4E4F                    1111              TRAP        #15                 ; trap call
00001A36  6000 0584               1112              BRA         endSUB              ; go to the end of the subroutine
00001A3A                          1113  
00001A3A  43F9 0000208F           1114  displayD5   LEA         dispD5, A1          ; Display space
00001A40  103C 000E               1115              MOVE.B      #14, D0             ; command for trap call to display message
00001A44  4E4F                    1116              TRAP        #15                 ; trap call
00001A46  6000 0574               1117              BRA         endSUB              ; go to the end of the subroutine
00001A4A                          1118  
00001A4A  43F9 00002092           1119  displayD6   LEA         dispD6, A1          ; Display space
00001A50  103C 000E               1120              MOVE.B      #14, D0             ; command for trap call to display message
00001A54  4E4F                    1121              TRAP        #15                 ; trap call
00001A56  6000 0564               1122              BRA         endSUB              ; go to the end of the subroutine
00001A5A                          1123  
00001A5A  43F9 00002095           1124  displayD7   LEA         dispD7, A1          ; Display space
00001A60  103C 000E               1125              MOVE.B      #14, D0             ; command for trap call to display message
00001A64  4E4F                    1126              TRAP        #15                 ; trap call
00001A66  6000 0554               1127              BRA         endSUB              ; go to the end of the subroutine
00001A6A                          1128  ***********************************************************************************************************
00001A6A                          1129  * Address Register
00001A6A  B63C 0000               1130  pAddrReg    CMP.B   #zero,D3
00001A6E  6700 003A               1131              BEQ     displayA0
00001A72  B63C 0001               1132              CMP.B   #one,D3
00001A76  6700 0042               1133              BEQ     displayA1
00001A7A  B63C 0002               1134              CMP.B   #two,D3
00001A7E  6700 004A               1135              BEQ     displayA2
00001A82  B63C 0003               1136              CMP.B   #three,D3
00001A86  6700 0052               1137              BEQ     displayA3
00001A8A  B63C 0004               1138              CMP.B   #four,D3
00001A8E  6700 005A               1139              BEQ     displayA4
00001A92  B63C 0005               1140              CMP.B   #five,D3
00001A96  6700 0062               1141              BEQ     displayA5
00001A9A  B63C 0006               1142              CMP.B   #six,D3
00001A9E  6700 006A               1143              BEQ     displayA6
00001AA2  B63C 0007               1144              CMP.B   #seven,D3
00001AA6  6700 0072               1145              BEQ     displayA7
00001AAA                          1146              
00001AAA  43F9 00002066           1147  displayA0   LEA         dispA0, A1          ; Display space
00001AB0  103C 000E               1148              MOVE.B      #14, D0             ; command for trap call to display message
00001AB4  4E4F                    1149              TRAP        #15                 ; trap call
00001AB6  6000 0504               1150              BRA         endSUB              ; go to the end of the subroutine
00001ABA                          1151              
00001ABA  43F9 00002069           1152  displayA1   LEA         dispA1, A1          ; Display space
00001AC0  103C 000E               1153              MOVE.B      #14, D0             ; command for trap call to display message
00001AC4  4E4F                    1154              TRAP        #15                 ; trap call
00001AC6  6000 04F4               1155              BRA         endSUB              ; go to the end of the subroutine
00001ACA                          1156  
00001ACA  43F9 0000206C           1157  displayA2   LEA         dispA2, A1          ; Display space
00001AD0  103C 000E               1158              MOVE.B      #14, D0             ; command for trap call to display message
00001AD4  4E4F                    1159              TRAP        #15                 ; trap call
00001AD6  6000 04E4               1160              BRA         endSUB              ; go to the end of the subroutine
00001ADA                          1161  
00001ADA  43F9 0000206F           1162  displayA3   LEA         dispA3, A1          ; Display space
00001AE0  103C 000E               1163              MOVE.B      #14, D0             ; command for trap call to display message
00001AE4  4E4F                    1164              TRAP        #15                 ; trap call
00001AE6  6000 04D4               1165              BRA         endSUB              ; go to the end of the subroutine
00001AEA                          1166  
00001AEA  43F9 00002072           1167  displayA4   LEA         dispA4, A1          ; Display space
00001AF0  103C 000E               1168              MOVE.B      #14, D0             ; command for trap call to display message
00001AF4  4E4F                    1169              TRAP        #15                 ; trap call
00001AF6  6000 04C4               1170              BRA         endSUB              ; go to the end of the subroutine
00001AFA                          1171  
00001AFA  43F9 00002075           1172  displayA5   LEA         dispA5, A1          ; Display space
00001B00  103C 000E               1173              MOVE.B      #14, D0             ; command for trap call to display message
00001B04  4E4F                    1174              TRAP        #15                 ; trap call
00001B06  6000 04B4               1175              BRA         endSUB              ; go to the end of the subroutine
00001B0A                          1176  
00001B0A  43F9 00002078           1177  displayA6   LEA         dispA6, A1          ; Display space
00001B10  103C 000E               1178              MOVE.B      #14, D0             ; command for trap call to display message
00001B14  4E4F                    1179              TRAP        #15                 ; trap call
00001B16  6000 04A4               1180              BRA         endSUB              ; go to the end of the subroutine
00001B1A                          1181  
00001B1A  43F9 0000207B           1182  displayA7   LEA         dispA7, A1          ; Display space
00001B20  103C 000E               1183              MOVE.B      #14, D0             ; command for trap call to display message
00001B24  4E4F                    1184              TRAP        #15                 ; trap call
00001B26  6000 0494               1185              BRA         endSUB              ; go to the end of the subroutine
00001B2A                          1186  
00001B2A                          1187  ***********************************************************************************************************
00001B2A                          1188  * Address Register Direct
00001B2A                          1189  
00001B2A  43F9 00001FD3           1190  pAddrDir    LEA         opPer, A1           ; Display space
00001B30  103C 000E               1191              MOVE.B      #14, D0             ; command for trap call to display message
00001B34  4E4F                    1192              TRAP        #15                 ; trap call
00001B36                          1193              
00001B36  B63C 0000               1194              CMP.B   #zero,D3
00001B3A  6700 003A               1195              BEQ     displayA0A
00001B3E  B63C 0001               1196              CMP.B   #one,D3
00001B42  6700 004E               1197              BEQ     displayA1A
00001B46  B63C 0002               1198              CMP.B   #two,D3
00001B4A  6700 0062               1199              BEQ     displayA2A
00001B4E  B63C 0003               1200              CMP.B   #three,D3
00001B52  6700 0076               1201              BEQ     displayA3A
00001B56  B63C 0004               1202              CMP.B   #four,D3
00001B5A  6700 008A               1203              BEQ     displayA4A
00001B5E  B63C 0005               1204              CMP.B   #five,D3
00001B62  6700 009E               1205              BEQ     displayA5A
00001B66  B63C 0006               1206              CMP.B   #six,D3
00001B6A  6700 00B2               1207              BEQ     displayA6A
00001B6E  B63C 0007               1208              CMP.B   #seven,D3
00001B72  6700 00C6               1209              BEQ     displayA7A
00001B76                          1210              
00001B76  43F9 00002066           1211  displayA0A  LEA         dispA0, A1          ; Display space
00001B7C  103C 000E               1212              MOVE.B      #14, D0             ; command for trap call to display message
00001B80  4E4F                    1213              TRAP        #15                 ; trap call
00001B82  43F9 00001FD5           1214              LEA         clPer, A1           ; Display space
00001B88  103C 000E               1215              MOVE.B      #14, D0             ; command for trap call to display message
00001B8C  4E4F                    1216              TRAP        #15                 ; trap call
00001B8E  6000 042C               1217              BRA         endSUB              ; go to the end of the subroutine
00001B92                          1218              
00001B92  43F9 00002069           1219  displayA1A  LEA         dispA1, A1          ; Display space
00001B98  103C 000E               1220              MOVE.B      #14, D0             ; command for trap call to display message
00001B9C  4E4F                    1221              TRAP        #15                 ; trap call
00001B9E  43F9 00001FD5           1222              LEA         clPer, A1           ; Display space
00001BA4  103C 000E               1223              MOVE.B      #14, D0             ; command for trap call to display message
00001BA8  4E4F                    1224              TRAP        #15                 ; trap call
00001BAA  6000 0410               1225              BRA         endSUB              ; go to the end of the subroutine
00001BAE                          1226  
00001BAE  43F9 0000206C           1227  displayA2A  LEA         dispA2, A1          ; Display space
00001BB4  103C 000E               1228              MOVE.B      #14, D0             ; command for trap call to display message
00001BB8  4E4F                    1229              TRAP        #15                 ; trap call
00001BBA  43F9 00001FD5           1230              LEA         clPer, A1           ; Display space
00001BC0  103C 000E               1231              MOVE.B      #14, D0             ; command for trap call to display message
00001BC4  4E4F                    1232              TRAP        #15                 ; trap call
00001BC6  6000 03F4               1233              BRA         endSUB              ; go to the end of the subroutine
00001BCA                          1234  
00001BCA  43F9 0000206F           1235  displayA3A  LEA         dispA3, A1          ; Display space
00001BD0  103C 000E               1236              MOVE.B      #14, D0             ; command for trap call to display message
00001BD4  4E4F                    1237              TRAP        #15                 ; trap call
00001BD6  43F9 00001FD5           1238              LEA         clPer, A1           ; Display space
00001BDC  103C 000E               1239              MOVE.B      #14, D0             ; command for trap call to display message
00001BE0  4E4F                    1240              TRAP        #15                 ; trap call
00001BE2  6000 03D8               1241              BRA         endSUB              ; go to the end of the subroutine
00001BE6                          1242  
00001BE6  43F9 00002072           1243  displayA4A  LEA         dispA4, A1          ; Display space
00001BEC  103C 000E               1244              MOVE.B      #14, D0             ; command for trap call to display message
00001BF0  4E4F                    1245              TRAP        #15                 ; trap call
00001BF2  43F9 00001FD5           1246              LEA         clPer, A1           ; Display space
00001BF8  103C 000E               1247              MOVE.B      #14, D0             ; command for trap call to display message
00001BFC  4E4F                    1248              TRAP        #15                 ; trap call
00001BFE  6000 03BC               1249              BRA         endSUB              ; go to the end of the subroutine
00001C02                          1250  
00001C02  43F9 00002075           1251  displayA5A  LEA         dispA5, A1          ; Display space
00001C08  103C 000E               1252              MOVE.B      #14, D0             ; command for trap call to display message
00001C0C  4E4F                    1253              TRAP        #15                 ; trap call
00001C0E  43F9 00001FD5           1254              LEA         clPer, A1           ; Display space
00001C14  103C 000E               1255              MOVE.B      #14, D0             ; command for trap call to display message
00001C18  4E4F                    1256              TRAP        #15                 ; trap call
00001C1A  6000 03A0               1257              BRA         endSUB              ; go to the end of the subroutine
00001C1E                          1258  
00001C1E  43F9 00002078           1259  displayA6A  LEA         dispA6, A1          ; Display space
00001C24  103C 000E               1260              MOVE.B      #14, D0             ; command for trap call to display message
00001C28  4E4F                    1261              TRAP        #15                 ; trap call
00001C2A  43F9 00001FD5           1262              LEA         clPer, A1           ; Display space
00001C30  103C 000E               1263              MOVE.B      #14, D0             ; command for trap call to display message
00001C34  4E4F                    1264              TRAP        #15                 ; trap call
00001C36  6000 0384               1265              BRA         endSUB              ; go to the end of the subroutine
00001C3A                          1266  
00001C3A  43F9 0000207B           1267  displayA7A  LEA         dispA7, A1          ; Display space
00001C40  103C 000E               1268              MOVE.B      #14, D0             ; command for trap call to display message
00001C44  4E4F                    1269              TRAP        #15                 ; trap call
00001C46  43F9 00001FD5           1270              LEA         clPer, A1           ; Display space
00001C4C  103C 000E               1271              MOVE.B      #14, D0             ; command for trap call to display message
00001C50  4E4F                    1272              TRAP        #15                 ; trap call
00001C52  6000 0368               1273              BRA         endSUB              ; go to the end of the subroutine
00001C56                          1274              
00001C56                          1275  ***********************************************************************************************************
00001C56                          1276  * Addr Postincrement
00001C56                          1277              
00001C56  43F9 00001FD3           1278  pAddrPost   LEA         opPer, A1           ; Display space
00001C5C  103C 000E               1279              MOVE.B      #14, D0             ; command for trap call to display message
00001C60  4E4F                    1280              TRAP        #15                 ; trap call
00001C62                          1281              
00001C62  B63C 0000               1282              CMP.B   #zero,D3
00001C66  6700 003A               1283              BEQ     displayA0P
00001C6A  B63C 0001               1284              CMP.B   #one,D3
00001C6E  6700 005A               1285              BEQ     displayA1P
00001C72  B63C 0002               1286              CMP.B   #two,D3
00001C76  6700 007A               1287              BEQ     displayA2P
00001C7A  B63C 0003               1288              CMP.B   #three,D3
00001C7E  6700 009A               1289              BEQ     displayA3P
00001C82  B63C 0004               1290              CMP.B   #four,D3
00001C86  6700 00BA               1291              BEQ     displayA4P
00001C8A  B63C 0005               1292              CMP.B   #five,D3
00001C8E  6700 00DA               1293              BEQ     displayA5P
00001C92  B63C 0006               1294              CMP.B   #six,D3
00001C96  6700 00FA               1295              BEQ     displayA6P
00001C9A  B63C 0007               1296              CMP.B   #seven,D3
00001C9E  6700 011A               1297              BEQ     displayA7P
00001CA2                          1298              
00001CA2  43F9 00002066           1299  displayA0P  LEA         dispA0, A1          ; Display space
00001CA8  103C 000E               1300              MOVE.B      #14, D0             ; command for trap call to display message
00001CAC  4E4F                    1301              TRAP        #15                 ; trap call
00001CAE  43F9 00001FD5           1302              LEA         clPer, A1           ; Display space
00001CB4  103C 000E               1303              MOVE.B      #14, D0             ; command for trap call to display message
00001CB8  4E4F                    1304              TRAP        #15                 ; trap call
00001CBA  43F9 00001FD9           1305              LEA         inc, A1             ; Display space
00001CC0  103C 000E               1306              MOVE.B      #14, D0             ; command for trap call to display message
00001CC4  4E4F                    1307              TRAP        #15                 ; trap call
00001CC6  6000 02F4               1308              BRA         endSUB              ; go to the end of the subroutine
00001CCA                          1309              
00001CCA  43F9 00002069           1310  displayA1P  LEA         dispA1, A1          ; Display space
00001CD0  103C 000E               1311              MOVE.B      #14, D0             ; command for trap call to display message
00001CD4  4E4F                    1312              TRAP        #15                 ; trap call
00001CD6  43F9 00001FD5           1313              LEA         clPer, A1           ; Display space
00001CDC  103C 000E               1314              MOVE.B      #14, D0             ; command for trap call to display message
00001CE0  4E4F                    1315              TRAP        #15                 ; trap call
00001CE2  43F9 00001FD9           1316              LEA         inc, A1             ; Display space
00001CE8  103C 000E               1317              MOVE.B      #14, D0             ; command for trap call to display message
00001CEC  4E4F                    1318              TRAP        #15                 ; trap call
00001CEE  6000 02CC               1319              BRA         endSUB              ; go to the end of the subroutine
00001CF2                          1320  
00001CF2  43F9 0000206C           1321  displayA2P  LEA         dispA2, A1          ; Display space
00001CF8  103C 000E               1322              MOVE.B      #14, D0             ; command for trap call to display message
00001CFC  4E4F                    1323              TRAP        #15                 ; trap call
00001CFE  43F9 00001FD5           1324              LEA         clPer, A1           ; Display space
00001D04  103C 000E               1325              MOVE.B      #14, D0             ; command for trap call to display message
00001D08  4E4F                    1326              TRAP        #15                 ; trap call
00001D0A  43F9 00001FD9           1327              LEA         inc, A1             ; Display space
00001D10  103C 000E               1328              MOVE.B      #14, D0             ; command for trap call to display message
00001D14  4E4F                    1329              TRAP        #15                 ; trap call
00001D16  6000 02A4               1330              BRA         endSUB              ; go to the end of the subroutine
00001D1A                          1331  
00001D1A  43F9 0000206F           1332  displayA3P  LEA         dispA3, A1          ; Display space
00001D20  103C 000E               1333              MOVE.B      #14, D0             ; command for trap call to display message
00001D24  4E4F                    1334              TRAP        #15                 ; trap call
00001D26  43F9 00001FD5           1335              LEA         clPer, A1           ; Display space
00001D2C  103C 000E               1336              MOVE.B      #14, D0             ; command for trap call to display message
00001D30  4E4F                    1337              TRAP        #15                 ; trap call
00001D32  43F9 00001FD9           1338              LEA         inc, A1             ; Display space
00001D38  103C 000E               1339              MOVE.B      #14, D0             ; command for trap call to display message
00001D3C  4E4F                    1340              TRAP        #15                 ; trap call
00001D3E  6000 027C               1341              BRA         endSUB              ; go to the end of the subroutine
00001D42                          1342  
00001D42  43F9 00002072           1343  displayA4P  LEA         dispA4, A1          ; Display space
00001D48  103C 000E               1344              MOVE.B      #14, D0             ; command for trap call to display message
00001D4C  4E4F                    1345              TRAP        #15                 ; trap call
00001D4E  43F9 00001FD5           1346              LEA         clPer, A1           ; Display space
00001D54  103C 000E               1347              MOVE.B      #14, D0             ; command for trap call to display message
00001D58  4E4F                    1348              TRAP        #15                 ; trap call
00001D5A  43F9 00001FD9           1349              LEA         inc, A1             ; Display space
00001D60  103C 000E               1350              MOVE.B      #14, D0             ; command for trap call to display message
00001D64  4E4F                    1351              TRAP        #15                 ; trap call
00001D66  6000 0254               1352              BRA         endSUB              ; go to the end of the subroutine
00001D6A                          1353  
00001D6A  43F9 00002075           1354  displayA5P  LEA         dispA5, A1          ; Display space
00001D70  103C 000E               1355              MOVE.B      #14, D0             ; command for trap call to display message
00001D74  4E4F                    1356              TRAP        #15                 ; trap call
00001D76  43F9 00001FD5           1357              LEA         clPer, A1           ; Display space
00001D7C  103C 000E               1358              MOVE.B      #14, D0             ; command for trap call to display message
00001D80  4E4F                    1359              TRAP        #15                 ; trap call
00001D82  43F9 00001FD9           1360              LEA         inc, A1             ; Display space
00001D88  103C 000E               1361              MOVE.B      #14, D0             ; command for trap call to display message
00001D8C  4E4F                    1362              TRAP        #15                 ; trap call
00001D8E  6000 022C               1363              BRA         endSUB              ; go to the end of the subroutine
00001D92                          1364  
00001D92  43F9 00002078           1365  displayA6P  LEA         dispA6, A1          ; Display space
00001D98  103C 000E               1366              MOVE.B      #14, D0             ; command for trap call to display message
00001D9C  4E4F                    1367              TRAP        #15                 ; trap call
00001D9E  43F9 00001FD5           1368              LEA         clPer, A1           ; Display space
00001DA4  103C 000E               1369              MOVE.B      #14, D0             ; command for trap call to display message
00001DA8  4E4F                    1370              TRAP        #15                 ; trap call
00001DAA  43F9 00001FD9           1371              LEA         inc, A1             ; Display space
00001DB0  103C 000E               1372              MOVE.B      #14, D0             ; command for trap call to display message
00001DB4  4E4F                    1373              TRAP        #15                 ; trap call
00001DB6  6000 0204               1374              BRA         endSUB              ; go to the end of the subroutine
00001DBA                          1375  
00001DBA  43F9 0000207B           1376  displayA7P  LEA         dispA7, A1          ; Display space
00001DC0  103C 000E               1377              MOVE.B      #14, D0             ; command for trap call to display message
00001DC4  4E4F                    1378              TRAP        #15                 ; trap call
00001DC6  43F9 00001FD5           1379              LEA         clPer, A1           ; Display space
00001DCC  103C 000E               1380              MOVE.B      #14, D0             ; command for trap call to display message
00001DD0  4E4F                    1381              TRAP        #15                 ; trap call
00001DD2  43F9 00001FD9           1382              LEA         inc, A1             ; Display space
00001DD8  103C 000E               1383              MOVE.B      #14, D0             ; command for trap call to display message
00001DDC  4E4F                    1384              TRAP        #15                 ; trap call
00001DDE  6000 01DC               1385              BRA         endSUB              ; go to the end of the subroutine
00001DE2                          1386  
00001DE2                          1387  ***********************************************************************************************************
00001DE2                          1388  * Addr Postdecrement
00001DE2                          1389  
00001DE2  43F9 00001FD7           1390  pAddrDec    LEA         dec, A1             ; Display space
00001DE8  103C 000E               1391              MOVE.B      #14, D0             ; command for trap call to display message
00001DEC  4E4F                    1392              TRAP        #15                 ; trap call
00001DEE                          1393              
00001DEE  43F9 00001FD3           1394              LEA         opPer, A1           ; Display space
00001DF4  103C 000E               1395              MOVE.B      #14, D0             ; command for trap call to display message
00001DF8  4E4F                    1396              TRAP        #15                 ; trap call
00001DFA                          1397              
00001DFA  B63C 0000               1398              CMP.B   #zero,D3
00001DFE  6700 003A               1399              BEQ     displayA0D
00001E02  B63C 0001               1400              CMP.B   #one,D3
00001E06  6700 004E               1401              BEQ     displayA1D
00001E0A  B63C 0002               1402              CMP.B   #two,D3
00001E0E  6700 0062               1403              BEQ     displayA2D
00001E12  B63C 0003               1404              CMP.B   #three,D3
00001E16  6700 0076               1405              BEQ     displayA3D
00001E1A  B63C 0004               1406              CMP.B   #four,D3
00001E1E  6700 008A               1407              BEQ     displayA4D
00001E22  B63C 0005               1408              CMP.B   #five,D3
00001E26  6700 009E               1409              BEQ     displayA5D
00001E2A  B63C 0006               1410              CMP.B   #six,D3
00001E2E  6700 00B2               1411              BEQ     displayA6D
00001E32  B63C 0007               1412              CMP.B   #seven,D3
00001E36  6700 00C6               1413              BEQ     displayA7D
00001E3A                          1414              
00001E3A  43F9 00002066           1415  displayA0D  LEA         dispA0, A1          ; Display space
00001E40  103C 000E               1416              MOVE.B      #14, D0             ; command for trap call to display message
00001E44  4E4F                    1417              TRAP        #15                 ; trap call
00001E46  43F9 00001FD5           1418              LEA         clPer, A1           ; Display space
00001E4C  103C 000E               1419              MOVE.B      #14, D0             ; command for trap call to display message
00001E50  4E4F                    1420              TRAP        #15                 ; trap call
00001E52  6000 0168               1421              BRA         endSUB              ; go to the end of the subroutine
00001E56                          1422              
00001E56  43F9 00002069           1423  displayA1D  LEA         dispA1, A1          ; Display space
00001E5C  103C 000E               1424              MOVE.B      #14, D0             ; command for trap call to display message
00001E60  4E4F                    1425              TRAP        #15                 ; trap call
00001E62  43F9 00001FD5           1426              LEA         clPer, A1           ; Display space
00001E68  103C 000E               1427              MOVE.B      #14, D0             ; command for trap call to display message
00001E6C  4E4F                    1428              TRAP        #15                 ; trap call
00001E6E  6000 014C               1429              BRA         endSUB              ; go to the end of the subroutine
00001E72                          1430  
00001E72  43F9 0000206C           1431  displayA2D  LEA         dispA2, A1          ; Display space
00001E78  103C 000E               1432              MOVE.B      #14, D0             ; command for trap call to display message
00001E7C  4E4F                    1433              TRAP        #15                 ; trap call
00001E7E  43F9 00001FD5           1434              LEA         clPer, A1           ; Display space
00001E84  103C 000E               1435              MOVE.B      #14, D0             ; command for trap call to display message
00001E88  4E4F                    1436              TRAP        #15                 ; trap call
00001E8A  6000 0130               1437              BRA         endSUB              ; go to the end of the subroutine
00001E8E                          1438  
00001E8E  43F9 0000206F           1439  displayA3D  LEA         dispA3, A1          ; Display space
00001E94  103C 000E               1440              MOVE.B      #14, D0             ; command for trap call to display message
00001E98  4E4F                    1441              TRAP        #15                 ; trap call
00001E9A  43F9 00001FD5           1442              LEA         clPer, A1           ; Display space
00001EA0  103C 000E               1443              MOVE.B      #14, D0             ; command for trap call to display message
00001EA4  4E4F                    1444              TRAP        #15                 ; trap call
00001EA6  6000 0114               1445              BRA         endSUB              ; go to the end of the subroutine
00001EAA                          1446  
00001EAA  43F9 00002072           1447  displayA4D  LEA         dispA4, A1          ; Display space
00001EB0  103C 000E               1448              MOVE.B      #14, D0             ; command for trap call to display message
00001EB4  4E4F                    1449              TRAP        #15                 ; trap call
00001EB6  43F9 00001FD5           1450              LEA         clPer, A1           ; Display space
00001EBC  103C 000E               1451              MOVE.B      #14, D0             ; command for trap call to display message
00001EC0  4E4F                    1452              TRAP        #15                 ; trap call
00001EC2  6000 00F8               1453              BRA         endSUB              ; go to the end of the subroutine
00001EC6                          1454  
00001EC6  43F9 00002075           1455  displayA5D  LEA         dispA5, A1          ; Display space
00001ECC  103C 000E               1456              MOVE.B      #14, D0             ; command for trap call to display message
00001ED0  4E4F                    1457              TRAP        #15                 ; trap call
00001ED2  43F9 00001FD5           1458              LEA         clPer, A1           ; Display space
00001ED8  103C 000E               1459              MOVE.B      #14, D0             ; command for trap call to display message
00001EDC  4E4F                    1460              TRAP        #15                 ; trap call
00001EDE  6000 00DC               1461              BRA         endSUB              ; go to the end of the subroutine
00001EE2                          1462  
00001EE2  43F9 00002078           1463  displayA6D  LEA         dispA6, A1          ; Display space
00001EE8  103C 000E               1464              MOVE.B      #14, D0             ; command for trap call to display message
00001EEC  4E4F                    1465              TRAP        #15                 ; trap call
00001EEE  43F9 00001FD5           1466              LEA         clPer, A1           ; Display space
00001EF4  103C 000E               1467              MOVE.B      #14, D0             ; command for trap call to display message
00001EF8  4E4F                    1468              TRAP        #15                 ; trap call
00001EFA  6000 00C0               1469              BRA         endSUB              ; go to the end of the subroutine
00001EFE                          1470  
00001EFE  43F9 0000207B           1471  displayA7D  LEA         dispA7, A1          ; Display space
00001F04  103C 000E               1472              MOVE.B      #14, D0             ; command for trap call to display message
00001F08  4E4F                    1473              TRAP        #15                 ; trap call
00001F0A  43F9 00001FD5           1474              LEA         clPer, A1           ; Display space
00001F10  103C 000E               1475              MOVE.B      #14, D0             ; command for trap call to display message
00001F14  4E4F                    1476              TRAP        #15                 ; trap call
00001F16  6000 00A4               1477              BRA         endSUB              ; go to the end of the subroutine
00001F1A                          1478  
00001F1A                          1479  
00001F1A                          1480  ***********************************************************************************************************
00001F1A                          1481  * Absolute Address
00001F1A  B63C 0000               1482  pHex        CMP.B       #zero, D3
00001F1E  6700 0012               1483              BEQ         AbsShort
00001F22  B63C 0001               1484              CMP.B       #one, D3
00001F26  6700 003C               1485              BEQ         AbsLong
00001F2A  B63C 0004               1486              CMP.B       #four, D3
00001F2E  6700 0066               1487              BEQ         DispImm
00001F32                          1488              
00001F32  43F9 00001FD3           1489  AbsShort    LEA         opPer, A1           ; Display space
00001F38  103C 000E               1490              MOVE.B      #14, D0             ; command for trap call to display message
00001F3C  4E4F                    1491              TRAP        #15                 ; trap call
00001F3E                          1492              
00001F3E  43F9 00001FCF           1493              LEA         dispHex, A1         ; Display space
00001F44  103C 000E               1494              MOVE.B      #14, D0             ; command for trap call to display message
00001F48  4E4F                    1495              TRAP        #15                 ; trap call
00001F4A                          1496              
00001F4A  4241                    1497              CLR         D1
00001F4C  3218                    1498              MOVE.W      (A0)+, D1
00001F4E                          1499              
00001F4E  103C 0003               1500              MOVE.B      #3, D0
00001F52  4E4F                    1501              TRAP        #15
00001F54                          1502              
00001F54  43F9 00001FD5           1503              LEA         clPer, A1           ; Display space
00001F5A  103C 000E               1504              MOVE.B      #14, D0             ; command for trap call to display message
00001F5E  4E4F                    1505              TRAP        #15                 ; trap call
00001F60                          1506              
00001F60  6000 005A               1507              BRA         endSub
00001F64                          1508              
00001F64  43F9 00001FD3           1509  AbsLong     LEA         opPer, A1           ; Display space
00001F6A  103C 000E               1510              MOVE.B      #14, D0             ; command for trap call to display message
00001F6E  4E4F                    1511              TRAP        #15                 ; trap call
00001F70                          1512              
00001F70  43F9 00001FCF           1513              LEA         dispHex, A1         ; Display space
00001F76  103C 000E               1514              MOVE.B      #14, D0             ; command for trap call to display message
00001F7A  4E4F                    1515              TRAP        #15                 ; trap call
00001F7C                          1516              
00001F7C  4241                    1517              CLR         D1
00001F7E  2218                    1518              MOVE.L      (A0)+, D1
00001F80                          1519              
00001F80  103C 0003               1520              MOVE.B      #3, D0
00001F84  4E4F                    1521              TRAP        #15
00001F86                          1522              
00001F86  43F9 00001FD5           1523              LEA         clPer, A1           ; Display space
00001F8C  103C 000E               1524              MOVE.B      #14, D0             ; command for trap call to display message
00001F90  4E4F                    1525              TRAP        #15                 ; trap call
00001F92                          1526              
00001F92  6000 0028               1527              BRA         endSub
00001F96                          1528  
00001F96  43F9 00001FCD           1529  DispImm     LEA         hashTag, A1         ; Display space
00001F9C  103C 000E               1530              MOVE.B      #14, D0             ; command for trap call to display message
00001FA0  4E4F                    1531              TRAP        #15                 ; trap call
00001FA2                          1532              
00001FA2  4241                    1533              CLR         D1
00001FA4  3218                    1534              MOVE.W      (A0)+, D1
00001FA6                          1535  
00001FA6  43F9 00001FCF           1536              LEA         dispHex, A1         ; Display space
00001FAC  103C 000E               1537              MOVE.B      #14, D0             ; command for trap call to display message
00001FB0  4E4F                    1538              TRAP        #15                 ; trap call
00001FB2                          1539              
00001FB2  103C 0003               1540              MOVE.B      #3, D0
00001FB6  4E4F                    1541              TRAP        #15
00001FB8                          1542  
00001FB8  6000 0002               1543              BRA         endSub
00001FBC                          1544  
00001FBC                          1545  invalid
00001FBC                          1546  
00001FBC                          1547  endSUB
00001FBC                          1548          
00001FBC  4CDF 7EFF               1549          MOVEM.L  (SP)+, D0-D7/A1-A6
00001FC0  4E75                    1550          RTS
00001FC2                          1551  
00001FC2                          1552  ***********************************************************************************************************
00001FC2                          1553  ***********************************************************************************************************
00001FC2                          1554  ***********************************************************************************************************
00001FC2                          1555  
00001FC2                          1556  printInvalid
00001FC2                          1557  endPROG    
00001FC2                          1558  
00001FC2  FFFF FFFF               1559      SIMHALT                             ; halt simulator
00001FC6                          1560  
00001FC6= 20 0D 0A 00             1561  newLine     DC.B    ' ', CR, LF, 0
00001FCA= 20 20 00                1562  space       DC.B    '  ', 0
00001FCD                          1563  
00001FCD= 23 00                   1564  hashTag     DC.B    '#', 0
00001FCF= 24 00                   1565  dispHex     DC.B    '$', 0
00001FD1= 2C 00                   1566  comma       DC.B    ',', 0
00001FD3                          1567  
00001FD3= 28 00                   1568  opPer       DC.B    '(', 0
00001FD5= 29 00                   1569  clPer       DC.B    ')', 0
00001FD7= 2D 00                   1570  dec         DC.B    '-', 0
00001FD9= 2B 00                   1571  inc         DC.B    '+', 0
00001FDB                          1572  
00001FDB= 4F 52 49 00             1573  ORImatch    DC.B    'ORI', 0
00001FDF= 43 4D 50 49 00          1574  CMPImatch   DC.B    'CMPI', 0
00001FE4= 42 43 4C 52 00          1575  BCLRmatch   DC.B    'BCLR', 0
00001FE9= 4D 4F 56 45 00          1576  MOVEmatch   DC.B    'MOVE', 0
00001FEE= 4D 4F 56 45 41 00       1577  MOVEAmatch  DC.B    'MOVEA', 0
00001FF4= 4E 45 47 00             1578  NEGmatch    DC.B    'NEG', 0
00001FF8= 52 54 53 00             1579  RTSmatch    DC.B    'RTS', 0
00001FFC= 4A 53 52 00             1580  JSRmatch    DC.B    'JSR', 0
00002000= 4D 4F 56 45 4D 00       1581  MOVEMmatch  DC.B    'MOVEM', 0
00002006= 4C 45 41 00             1582  LEAmatch    DC.B    'LEA', 0
0000200A= 53 55 42 51 00          1583  SUBQmatch   DC.B    'SUBQ', 0
0000200F= 42 52 41 00             1584  BRAmatch    DC.B    'BRA', 0
00002013= 42 43 53 00             1585  BCSmatch    DC.B    'BCS', 0
00002017= 42 56 43 00             1586  BVCmatch    DC.B    'BVC', 0
0000201B= 42 47 45 00             1587  BGEmatch    DC.B    'BGE', 0
0000201F= 42 4C 54 00             1588  BLTmatch    DC.B    'BLT', 0
00002023= 44 49 56 53 00          1589  DIVSmatch   DC.B    'DIVS', 0
00002028= 4F 52 00                1590  ORmatch     DC.B    'OR', 0
0000202B= 53 55 42 00             1591  SUBmatch    DC.B    'SUB', 0
0000202F= 45 4F 52 00             1592  EORmatch    DC.B    'EOR', 0
00002033= 43 4D 50 00             1593  CMPmatch    DC.B    'CMP', 0
00002037= 4D 55 4C 53 00          1594  MULSmatch   DC.B    'MULS', 0
0000203C= 41 44 44 00             1595  ADDmatch    DC.B    'ADD', 0
00002040= 41 44 44 41 00          1596  ADDAmatch   DC.B    'ADDA', 0
00002045= 4C 53 52 00             1597  LSRmatch    DC.B    'LSR', 0
00002049= 4C 53 4C 00             1598  LSLmatch    DC.B    'LSL', 0
0000204D= 41 53 52 00             1599  ASRmatch    DC.B    'ASR', 0
00002051= 41 53 4C 00             1600  ASLmatch    DC.B    'ASL', 0
00002055= 52 4F 52 00             1601  RORmatch    DC.B    'ROR', 0
00002059= 52 4F 4C 00             1602  ROLmatch    DC.B    'ROL', 0
0000205D                          1603   
0000205D= 2E 42 00                1604  dispByte    DC.B    '.B', 0
00002060= 2E 57 00                1605  dispWord    DC.B    '.W', 0
00002063= 2E 4C 00                1606  dispLong    DC.B    '.L', 0
00002066                          1607  
00002066= 41 30 00                1608  dispA0      DC.B    'A0', 0
00002069= 41 31 00                1609  dispA1      DC.B    'A1', 0
0000206C= 41 32 00                1610  dispA2      DC.B    'A2', 0
0000206F= 41 33 00                1611  dispA3      DC.B    'A3', 0
00002072= 41 34 00                1612  dispA4      DC.B    'A4', 0
00002075= 41 35 00                1613  dispA5      DC.B    'A5', 0
00002078= 41 36 00                1614  dispA6      DC.B    'A6', 0
0000207B= 41 37 00                1615  dispA7      DC.B    'A7', 0
0000207E                          1616  
0000207E= 44 00                   1617  dispD       DC.B    'D',0
00002080= 44 30 00                1618  dispD0      DC.B    'D0', 0
00002083= 44 31 00                1619  dispD1      DC.B    'D1', 0
00002086= 44 32 00                1620  dispD2      DC.B    'D2', 0
00002089= 44 33 00                1621  dispD3      DC.B    'D3', 0
0000208C= 44 34 00                1622  dispD4      DC.B    'D4', 0
0000208F= 44 35 00                1623  dispD5      DC.B    'D5', 0
00002092= 44 36 00                1624  dispD6      DC.B    'D6', 0
00002095= 44 37 00                1625  dispD7      DC.B    'D7', 0  
00002098                          1626             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             1F64
ABSSHORT            1F32
ADDAMATCH           2040
ADDMATCH            203C
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            2051
ASRMATCH            204D
BCLRMATCH           1FE4
BCSMATCH            2013
BGEMATCH            201B
BLTMATCH            201F
BRAEIGHT            110E
BRAELEVEN           1112
BRAFIVE             10DE
BRAFOUR             10C2
BRAFOURTEEN         1116
BRAMATCH            200F
BRANINE             110E
BRAONE              10B6
BRASIX              10E2
BRATHIRTEEN         1116
BRATHREE            10BE
BRATWELVE           1112
BRATWO              10BA
BRAZERO             1086
BVCMATCH            2017
CLPER               1FD5
CMPIMATCH           1FDF
CMPMATCH            2033
COMMA               1FD1
CR                  D
DEC                 1FD7
DISPA0              2066
DISPA1              2069
DISPA2              206C
DISPA3              206F
DISPA4              2072
DISPA5              2075
DISPA6              2078
DISPA7              207B
DISPBYTE            205D
DISPD               207E
DISPD0              2080
DISPD1              2083
DISPD2              2086
DISPD3              2089
DISPD4              208C
DISPD5              208F
DISPD6              2092
DISPD7              2095
DISPHEX             1FCF
DISPIMM             1F96
DISPLAYA0           1AAA
DISPLAYA0A          1B76
DISPLAYA0D          1E3A
DISPLAYA0P          1CA2
DISPLAYA1           1ABA
DISPLAYA1A          1B92
DISPLAYA1D          1E56
DISPLAYA1P          1CCA
DISPLAYA2           1ACA
DISPLAYA2A          1BAE
DISPLAYA2D          1E72
DISPLAYA2P          1CF2
DISPLAYA3           1ADA
DISPLAYA3A          1BCA
DISPLAYA3D          1E8E
DISPLAYA3P          1D1A
DISPLAYA4           1AEA
DISPLAYA4A          1BE6
DISPLAYA4D          1EAA
DISPLAYA4P          1D42
DISPLAYA5           1AFA
DISPLAYA5A          1C02
DISPLAYA5D          1EC6
DISPLAYA5P          1D6A
DISPLAYA6           1B0A
DISPLAYA6A          1C1E
DISPLAYA6D          1EE2
DISPLAYA6P          1D92
DISPLAYA7           1B1A
DISPLAYA7A          1C3A
DISPLAYA7D          1EFE
DISPLAYA7P          1DBA
DISPLAYD0           19EA
DISPLAYD1           19FA
DISPLAYD2           1A0A
DISPLAYD3           1A1A
DISPLAYD4           1A2A
DISPLAYD5           1A3A
DISPLAYD6           1A4A
DISPLAYD7           1A5A
DISPLONG            2063
DISPWORD            2060
DIVSMATCH           2023
EIGHT               8
ELEVEN              B
ENDPROG             1FC2
ENDSUB              1FBC
EORMATCH            202F
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             1FCD
INC                 1FD9
INVALID             1FBC
JSRMATCH            1FFC
LEAMATCH            2006
LF                  A
LOOP                100C
LSLMATCH            2049
LSRMATCH            2045
MOVEAMATCH          1FEE
MOVEMATCH           1FE9
MOVEMMATCH          2000
MULSMATCH           2037
NEGMATCH            1FF4
NEWLINE             1FC6
NINE                9
ONE                 1
OPASL               192A
OPASR               1936
OPBCLR              1410
OPBCS               18E2
OPBGE               18FA
OPBLT               1906
OPBRA               18CA
OPBVC               18EE
OPCMPI              129E
OPCMPIB             12EA
OPCMPIL             13AE
OPCMPIW             134C
OPDYNBCLR           1474
OPJSR               1862
OPLSL               1942
OPLSR               194E
OPMOVEAL            15F6
OPMOVEAW            16F0
OPMOVEB             14E2
OPMOVEL             1566
OPMOVEMLEA          18BE
OPMOVEW             1660
OPMULS              191E
OPNEG               175A
OPNEGB              1788
OPNEGL              17C8
OPNEGW              1808
OPORI               114A
OPORIB              1178
OPORIL              123C
OPORIW              11DA
OPPER               1FD3
OPROL               195A
OPROR               1966
OPRTS               18A2
OPRTSJSR            1848
OPSUB               1912
OPSUBQ              18BE
ORIMATCH            1FDB
ORMATCH             2028
PADDRDEC            1DE2
PADDRDIR            1B2A
PADDRPOST           1C56
PADDRREG            1A6A
PDATAREG            19AA
PHEX                1F1A
PRINTEA             1972
PRINTINVALID        1FC2
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
ROLMATCH            2059
RORMATCH            2055
RTSMATCH            1FF8
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               1FCA
START               1000
SUBMATCH            202B
SUBQMATCH           200A
TEST_END            2009
TEST_START          2000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
