00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 2014-12-11 17:28:23

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =00003100                 11  test_end    EQU     $00003100   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000  =0000000F                 27  fifteen     EQU     $0F         ; defined hex value 15
00000000                            28  
00000000  =00000000                 29  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 30  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 31  s1L         EQU     %0010       ; long size 1
00000000                            32              
00000000  =00000000                 33  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 34  s2L         EQU     %0001       ; long size 2
00000000                            35  
00000000  =00000001                 36  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 37  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 38  s3L         EQU     %0010       ; long size 3
00000000                            39  
00000000  =00000000                 40  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 41  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 42  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 43  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 44  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 45  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            46  
00000000                            47              
00000000                            48  
00000000  =00000000                 49  mask0       EQU     %00000000
00000000  =00000001                 50  mask1       EQU     %00000001
00000000  =00000002                 51  mask2       EQU     %00000010
00000000  =00000004                 52  mask3       EQU     %00000100
00000000  =00000008                 53  mask4       EQU     %00001000
00000000  =00000010                 54  mask5       EQU     %00010000
00000000  =00000020                 55  mask6       EQU     %00100000
00000000  =00000040                 56  mask7       EQU     %01000000
00000000  =00000080                 57  mask8       EQU     %10000000
00000000                            58  
00000000  =00000005                 59  maskA       EQU     %00000101
00000000  =0000000A                 60  maskB       EQU     %00001010
00000000  =00000014                 61  maskC       EQU     %00010100
00000000  =00000028                 62  maskD       EQU     %00101000
00000000  =00000050                 63  maskE       EQU     %01010000
00000000  =000000A0                 64  maskF       EQU     %10100000
00000000                            65  
00000000                            66  
00000000  =000000F0                 67  firstNib    EQU     $F0
00000000  =0000000F                 68  secNib      EQU     $0F
00000000                            69               
00001000                            70              ORG    $1000
00001000                            71  START:                                  ; first instruction of program
00001000                            72        
00001000  207C 00003000             73          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00003100             74          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            75            
0000100C  4241                      76  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      77          CLR         D2                  ; clear out D2
00001010  B1CA                      78          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 1654                 79          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      80          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      81          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      82          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            83          
0000101C  B43C 0000                 84          CMP.B       #zero, D2           ; compare with 0
00001020  6700 006E                 85          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 86          CMP.B       #one, D2            ; compare with 1
00001028  6700 0096                 87          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 88          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0092                 89          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 90          CMP.B       #three, D2          ; compare with 3
00001038  6700 008E                 91          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 92          CMP.B       #four, D2           ; compare with 4
00001040  6700 008A                 93          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 94          CMP.B       #five, D2           ; compare with 5
00001048  6700 009E                 95          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 96          CMP.B       #six, D2            ; compare with 6
00001050  6700 009A                 97          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 98          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00BE                 99          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                100          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00B6                101          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                102          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00B2                103          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                104          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00AA                105          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                106          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 00A6                107          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                108          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 009E                109          BEQ         braFourteen         ; branch out to fourteen method
00001084  B43C 000F                110          CMP.B       #fifteen,D2
00001088  6700 15DE                111          BEQ         endProg
0000108C  6000 FF7E                112          BRA         loop
00001090                           113  
00001090  4242                     114  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001092  1401                     115          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001094  C43C 000F                116          AND.B       #secNib, D2             ; set first nibble to 0
00001098                           117   
00001098  B43C 0000                118          CMP.B       #zero, D2           ; compare second nibble to 0
0000109C  6700 00B6                119          BEQ         opORI               ; branch to ORI method
000010A0  B43C 000C                120          CMP.B       #twelve, D2         ; compare second nibble to 12
000010A4  6700 0216                121          BEQ         opCMPI              ; branch to CMPI method
000010A8  B43C 0008                122          CMP.B       #eight,D2           ; Test for static BCLR
000010AC  6700 039C                123          BEQ         opBCLR
000010B0  C47C 0001                124          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010B4  B43C 0001                125          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010B8  6700 03F4                126          BEQ         opDynBCLR
000010BC  6000 15AA                127          BRA         printInvalid
000010C0                           128          
000010C0                           129          
000010C0  6000 045A                130  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010C4                           131  
000010C4  6000 04DA                132  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010C8                           133  
000010C8                           134  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010C8                           135  
000010C8  6000 05D2                136          BRA         opMOVEW
000010CC                           137  
000010CC  4242                     138  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010CE  1401                     139          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010D0  C43C 000F                140          AND.B       #secNib, D2             ; set first nibble to 0
000010D4                           141   
000010D4  B43C 0004                142          CMP.B       #four, D2           ; compare second nibble to 4
000010D8  6700 06B8                143          BEQ         opNEG               ; branch to NEG method
000010DC  B43C 000E                144          CMP.B       #fourteen, D2       ; compare second nibble to E
000010E0  6700 079E                145          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010E4  6000 0810                146          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010E8                           147  
000010E8  6000 0932                148  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010EC                           149  
000010EC  4242                     150  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010EE  1401                     151          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010F0  C438 000F                152          AND.B       $0F, D2             ; set first nibble to 0
000010F4                           153   
000010F4  B43C 0000                154          CMP.B       #zero, D2           ; compare second nibble to 0
000010F8  6700 092E                155          BEQ         opBRA               ; branch to BRA method
000010FC  B43C 0005                156          CMP.B       #five, D2           ; compare second nibble to 5
00001100  6700 093E                157          BEQ         opBCS               ; branch to BCS method
00001104  B43C 0008                158          CMP.B       #eight, D2          ; compare second nibble to 8
00001108  6700 0942                159          BEQ         opBVC               ; branch to BCS method
0000110C  B43C 000C                160          CMP.B       #twelve, D2         ; compare second nibble to 12
00001110  6700 0946                161          BEQ         opBGE               ; branch to BGE method
00001114  6000 094E                162          BRA         opBLT               ; otherwise, branch to BLT method
00001118                           163  
00001118                           164  braEight    ; there are two opCodes available DIVS, or OR
00001118                           165  
00001118  6000 0956                166  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000111C                           167  
0000111C                           168  braEleven   ; there are two opCodes available EOR, or CMP
0000111C                           169  
0000111C  6000 095E                170  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
00001120                           171    
00001120                           172  braThirteen ; there are two opCodes available ADD, or ADDA
00001120                           173  
00001120  4242                     174  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
00001122  1401                     175              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001124  C438 000F                176              AND.B       $0F, D2             ; set first nibble to 0
00001128                           177   
00001128  B43C 0000                178              CMP.B       #zero, D2           ; compare second nibble to 0
0000112C  6700 0966                179              BEQ         opASR               ; branch to ASR method
00001130  B43C 0001                180              CMP.B       #one, D2            ; compare second nibble to 1
00001134  6700 0952                181              BEQ         opASL               ; branch to ASL method
00001138  B43C 0002                182              CMP.B       #two, D2            ; compare second nibble to 2
0000113C  6700 096E                183              BEQ         opLSR               ; branch to LSR method
00001140  B43C 0003                184              CMP.B       #three, D2          ; compare second nibble to 3
00001144  6700 095A                185              BEQ         opLSL               ; branch to LSL method
00001148  B43C 0006                186              CMP.B       #six, D2            ; compare second nibble to 6
0000114C  6700 0976                187              BEQ         opROR               ; branch to ROR method
00001150  6000 0966                188              BRA         opROL               ; otherwise, branch to ROL method
00001154                           189  
00001154  43F9 00002688            190  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
0000115A  103C 000E                191          MOVE.B      #14, D0             ; command for trap call to display message
0000115E  4E4F                     192          TRAP        #15                 ; trap call
00001160                           193          
00001160  1218                     194          MOVE.B      (A0)+, D1
00001162  1401                     195          MOVE.B      D1,D2               ; copy data over
00001164  EC42                     196          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001166  B43C 0000                197          CMP.B       #zero,D2
0000116A  6700 0016                198          BEQ         opORIB
0000116E  B43C 0001                199          CMP.B       #one,D2
00001172  6700 0074                200          BEQ         opORIW
00001176  B43C 0002                201          CMP.B       #two,D2
0000117A  6700 00D2                202          BEQ         opORIL
0000117E                           203          
0000117E  6000 14E8                204          BRA         printInvalid
00001182                           205          
00001182  43F9 0000270A            206  opORIB  LEA         dispByte, A1        ; Display byte
00001188  103C 000E                207          MOVE.B      #14, D0             ; command for trap call to display message
0000118C  4E4F                     208          TRAP        #15                 ; trap call
0000118E                           209          
0000118E  43F9 00002670            210          LEA         space, A1           ; Display space
00001194  103C 000E                211          MOVE.B      #14, D0             ; command for trap call to display message
00001198  4E4F                     212          TRAP        #15                 ; trap call
0000119A                           213          
0000119A  4244                     214          CLR         D4
0000119C  1801                     215          MOVE.B      D1,D4
0000119E  E644                     216          ASR         #three,D4
000011A0  C87C 0007                217          AND         #seven,D4
000011A4  4245                     218          CLR         D5        
000011A6  1A01                     219          MOVE.B      D1,D5
000011A8  CA7C 0007                220          AND         #seven,D5
000011AC                           221          
000011AC  4243                     222          CLR         D3
000011AE  4242                     223          CLR         D2
000011B0  163C 0004                224          MOVE.B      #four,D3
000011B4  143C 0007                225          MOVE.B      #seven,D2
000011B8                           226  
000011B8  4EB9 00002008            227          JSR         printEA
000011BE                           228          
000011BE  43F9 00002677            229          LEA         comma, A1           ; Display space
000011C4  103C 000E                230          MOVE.B      #14, D0             ; command for trap call to display message
000011C8  4E4F                     231          TRAP        #15                 ; trap call
000011CA                           232          
000011CA  4242                     233          CLR         D2
000011CC  4243                     234          CLR         D3
000011CE  1404                     235          MOVE.B      D4,D2
000011D0  1605                     236          MOVE.B      D5,D3
000011D2                           237          
000011D2  4EB9 00002008            238          JSR         printEA
000011D8                           239          
000011D8  43F9 0000266C            240          LEA         newLine, A1           ; Display space
000011DE  103C 000E                241          MOVE.B      #14, D0             ; command for trap call to display message
000011E2  4E4F                     242          TRAP        #15                 ; trap call
000011E4                           243          
000011E4  6000 FE26                244          BRA         LOOP
000011E8                           245          
000011E8                           246          
000011E8  43F9 0000270D            247  opORIW  LEA         dispWord, A1        ; Display byte
000011EE  103C 000E                248          MOVE.B      #14, D0             ; command for trap call to display message
000011F2  4E4F                     249          TRAP        #15                 ; trap call
000011F4                           250          
000011F4  43F9 00002670            251          LEA         space, A1           ; Display space
000011FA  103C 000E                252          MOVE.B      #14, D0             ; command for trap call to display message
000011FE  4E4F                     253          TRAP        #15                 ; trap call
00001200                           254          
00001200  4244                     255          CLR         D4
00001202  1801                     256          MOVE.B      D1,D4
00001204  E644                     257          ASR         #three,D4
00001206  C87C 0007                258          AND         #seven,D4
0000120A  4245                     259          CLR         D5        
0000120C  1A01                     260          MOVE.B      D1,D5
0000120E  CA7C 0007                261          AND         #seven,D5
00001212                           262          
00001212  4243                     263          CLR         D3
00001214  4242                     264          CLR         D2
00001216  163C 0004                265          MOVE.B      #four,D3
0000121A  143C 0007                266          MOVE.B      #seven,D2
0000121E                           267          
0000121E  4EB9 00002008            268          JSR         printEA
00001224                           269          
00001224  43F9 00002677            270          LEA         comma, A1           ; Display space
0000122A  103C 000E                271          MOVE.B      #14, D0             ; command for trap call to display message
0000122E  4E4F                     272          TRAP        #15                 ; trap call
00001230                           273          
00001230  4242                     274          CLR         D2
00001232  4243                     275          CLR         D3
00001234  1404                     276          MOVE.B      D4,D2
00001236  1605                     277          MOVE.B      D5,D3
00001238                           278                  
00001238  4EB9 00002008            279          JSR         printEA
0000123E                           280          
0000123E  43F9 0000266C            281          LEA         newLine, A1           ; Display space
00001244  103C 000E                282          MOVE.B      #14, D0             ; command for trap call to display message
00001248  4E4F                     283          TRAP        #15                 ; trap call
0000124A                           284          
0000124A  6000 FDC0                285          BRA         LOOP
0000124E                           286       
0000124E  43F9 00002710            287  opORIL  LEA         dispLong, A1        ; Display byte
00001254  103C 000E                288          MOVE.B      #14, D0             ; command for trap call to display message
00001258  4E4F                     289          TRAP        #15                 ; trap call
0000125A                           290          
0000125A  43F9 00002670            291          LEA         space, A1           ; Display space
00001260  103C 000E                292          MOVE.B      #14, D0             ; command for trap call to display message
00001264  4E4F                     293          TRAP        #15                 ; trap call
00001266                           294          
00001266  4244                     295          CLR         D4
00001268  1801                     296          MOVE.B      D1,D4
0000126A  E644                     297          ASR         #three,D4
0000126C  C87C 0007                298          AND         #seven,D4
00001270  4245                     299          CLR         D5        
00001272  1A01                     300          MOVE.B      D1,D5
00001274  CA7C 0007                301          AND         #seven,D5
00001278  1C3C 0001                302          MOVE.B      #one,D6
0000127C                           303          
0000127C  4243                     304          CLR         D3
0000127E  4242                     305          CLR         D2
00001280  163C 0004                306          MOVE.B      #four,D3
00001284  143C 0007                307          MOVE.B      #seven,D2      
00001288                           308          
00001288  4EB9 00002008            309          JSR         printEA        
0000128E                           310          
0000128E  4243                     311          CLR         D3
00001290  4242                     312          CLR         D2
00001292  163C 0004                313          MOVE.B      #four,D3
00001296  143C 0007                314          MOVE.B      #seven,D2
0000129A                           315          
0000129A  43F9 00002677            316          LEA         comma, A1           ; Display space
000012A0  103C 000E                317          MOVE.B      #14, D0             ; command for trap call to display message
000012A4  4E4F                     318          TRAP        #15                 ; trap call
000012A6                           319          
000012A6  4EB9 00002008            320          JSR         printEA
000012AC                           321          
000012AC  43F9 0000266C            322          LEA         newLine, A1           ; Display space
000012B2  103C 000E                323          MOVE.B      #14, D0             ; command for trap call to display message
000012B6  4E4F                     324          TRAP        #15                 ; trap call
000012B8                           325          
000012B8  6000 FD52                326          BRA         LOOP
000012BC                           327           
000012BC                           328  opCMPI  
000012BC                           329  
000012BC                           330                  
000012BC  1218                     331          MOVE.B      (A0)+, D1
000012BE  1401                     332          MOVE.B      D1,D2               ; copy data over
000012C0  EC42                     333          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000012C2  B43C 0000                334          CMP.B       #zero,D2
000012C6  6700 0016                335          BEQ         opCMPIB
000012CA  B43C 0001                336          CMP.B       #one,D2
000012CE  6700 0080                337          BEQ         opCMPIW
000012D2  B43C 0002                338          CMP.B       #two,D2
000012D6  6700 00FC                339          BEQ         opCMPIL
000012DA  6000 1376                340          BRA         invalid
000012DE                           341  
000012DE                           342  opCMPIB 
000012DE                           343  
000012DE  43F9 0000268C            344          LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000012E4  103C 000E                345          MOVE.B      #14, D0             ; command for trap call to display message
000012E8  4E4F                     346          TRAP        #15                 ; trap call
000012EA                           347          
000012EA  43F9 0000270A            348          LEA         dispByte, A1        ; Display byte
000012F0  103C 000E                349          MOVE.B      #14, D0             ; command for trap call to display message
000012F4  4E4F                     350          TRAP        #15                 ; trap call
000012F6                           351          
000012F6  43F9 00002670            352          LEA         space, A1           ; Display space
000012FC  103C 000E                353          MOVE.B      #14, D0             ; command for trap call to display message
00001300  4E4F                     354          TRAP        #15                 ; trap call
00001302                           355          
00001302  4244                     356          CLR         D4
00001304  1801                     357          MOVE.B      D1,D4
00001306  E644                     358          ASR         #three,D4
00001308  C87C 0007                359          AND         #seven,D4
0000130C  4245                     360          CLR         D5        
0000130E  1A01                     361          MOVE.B      D1,D5
00001310  CA7C 0007                362          AND         #seven,D5
00001314                           363          
00001314  4243                     364          CLR         D3
00001316  4242                     365          CLR         D2
00001318  163C 0004                366          MOVE.B      #four,D3
0000131C  143C 0007                367          MOVE.B      #seven,D2      
00001320                           368          
00001320  4EB9 00002008            369          JSR         printEA  
00001326                           370              
00001326  43F9 00002677            371          LEA         comma, A1           ; Display space
0000132C  103C 000E                372          MOVE.B      #14, D0             ; command for trap call to display message
00001330  4E4F                     373          TRAP        #15                 ; trap call
00001332                           374          
00001332  4242                     375          CLR         D2
00001334  4243                     376          CLR         D3
00001336  1404                     377          MOVE.B      D4,D2
00001338  1605                     378          MOVE.B      D5,D3        
0000133A                           379          
0000133A  4EB9 00002008            380          JSR         printEA
00001340                           381          
00001340  43F9 0000266C            382          LEA         newLine, A1           ; Display space
00001346  103C 000E                383          MOVE.B      #14, D0             ; command for trap call to display message
0000134A  4E4F                     384          TRAP        #15                 ; trap call
0000134C                           385  
0000134C  6000 FCBE                386          BRA         LOOP
00001350                           387  
00001350                           388  opCMPIW 
00001350  43F9 0000268C            389          LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001356  103C 000E                390          MOVE.B      #14, D0             ; command for trap call to display message
0000135A  4E4F                     391          TRAP        #15                 ; trap call
0000135C                           392          
0000135C  43F9 0000270D            393          LEA         dispWord, A1        ; Display byte
00001362  103C 000E                394          MOVE.B      #14, D0             ; command for trap call to display message
00001366  4E4F                     395          TRAP        #15                 ; trap call
00001368                           396          
00001368  43F9 00002670            397          LEA         space, A1           ; Display space
0000136E  103C 000E                398          MOVE.B      #14, D0             ; command for trap call to display message
00001372  4E4F                     399          TRAP        #15                 ; trap call
00001374                           400          
00001374  4244                     401          CLR         D4
00001376  1801                     402          MOVE.B      D1,D4
00001378  E644                     403          ASR         #three,D4
0000137A  C87C 0007                404          AND         #seven,D4
0000137E  4245                     405          CLR         D5        
00001380  1A01                     406          MOVE.B      D1,D5
00001382  CA7C 0007                407          AND         #seven,D5
00001386                           408          
00001386  4243                     409          CLR         D3
00001388  4242                     410          CLR         D2
0000138A  163C 0004                411          MOVE.B      #four,D3
0000138E  143C 0007                412          MOVE.B      #seven,D2      
00001392                           413          
00001392  4EB9 00002008            414          JSR         printEA  
00001398                           415          
00001398  43F9 00002673            416          LEA         hashTag, A1           ; Display space
0000139E  103C 000E                417          MOVE.B      #14, D0             ; command for trap call to display message
000013A2  4E4F                     418          TRAP        #15                 ; trap call
000013A4                           419          
000013A4  103C 0003                420          MOVE.B      #3, D0
000013A8  4E4F                     421          TRAP        #15
000013AA                           422          
000013AA  43F9 00002677            423          LEA         comma, A1           ; Display space
000013B0  103C 000E                424          MOVE.B      #14, D0             ; command for trap call to display message
000013B4  4E4F                     425          TRAP        #15                 ; trap call
000013B6                           426  
000013B6  4242                     427          CLR         D2
000013B8  4243                     428          CLR         D3
000013BA  1404                     429          MOVE.B      D4,D2
000013BC  1605                     430          MOVE.B      D5,D3       
000013BE                           431          
000013BE  4EB9 00002008            432          JSR         printEA
000013C4                           433          
000013C4  43F9 0000266C            434          LEA         newLine, A1           ; Display space
000013CA  103C 000E                435          MOVE.B      #14, D0             ; command for trap call to display message
000013CE  4E4F                     436          TRAP        #15                 ; trap call
000013D0  6000 FC3A                437          BRA         LOOP
000013D4                           438  
000013D4                           439  opCMPIL 
000013D4  43F9 0000268C            440          LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000013DA  103C 000E                441          MOVE.B      #14, D0             ; command for trap call to display message
000013DE  4E4F                     442          TRAP        #15                 ; trap call
000013E0                           443          
000013E0  43F9 00002710            444          LEA         dispLong, A1        ; Display byte
000013E6  103C 000E                445          MOVE.B      #14, D0             ; command for trap call to display message
000013EA  4E4F                     446          TRAP        #15                 ; trap call
000013EC                           447          
000013EC  43F9 00002670            448          LEA         space, A1           ; Display space
000013F2  103C 000E                449          MOVE.B      #14, D0             ; command for trap call to display message
000013F6  4E4F                     450          TRAP        #15                 ; trap call
000013F8                           451          
000013F8  4244                     452          CLR         D4
000013FA  1801                     453          MOVE.B      D1,D4
000013FC  E644                     454          ASR         #three,D4
000013FE  C87C 0007                455          AND         #seven,D4
00001402  4245                     456          CLR         D5        
00001404  1A01                     457          MOVE.B      D1,D5
00001406  CA7C 0007                458          AND         #seven,D5
0000140A                           459          
0000140A  4243                     460          CLR         D3
0000140C  4242                     461          CLR         D2
0000140E  163C 0004                462          MOVE.B      #four,D3
00001412  143C 0007                463          MOVE.B      #seven,D2      
00001416  1C3C 0001                464          MOVE.B      #one,D6
0000141A                           465          
0000141A  4EB9 00002008            466          JSR         printEA  
00001420                           467          
00001420  43F9 00002677            468          LEA         comma, A1           ; Display space
00001426  103C 000E                469          MOVE.B      #14, D0             ; command for trap call to display message
0000142A  4E4F                     470          TRAP        #15                 ; trap call
0000142C                           471          
0000142C  4242                     472          CLR         D2
0000142E  4243                     473          CLR         D3
00001430  1404                     474          MOVE.B      D4,D2
00001432  1605                     475          MOVE.B      D5,D3              
00001434                           476          
00001434  4EB9 00002008            477          JSR         printEA
0000143A                           478          
0000143A  43F9 0000266C            479          LEA         newLine, A1           ; Display space
00001440  103C 000E                480          MOVE.B      #14, D0             ; command for trap call to display message
00001444  4E4F                     481          TRAP        #15                 ; trap call
00001446                           482          
00001446  6000 FBC4                483          BRA         LOOP
0000144A                           484  
0000144A  43F9 00002691            485  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001450  103C 000E                486                  MOVE.B      #14, D0             ; command for trap call to display message
00001454  4E4F                     487                  TRAP        #15                 ; trap call
00001456                           488  
00001456  43F9 00002670            489                  LEA         space, A1           ; Display space
0000145C  103C 000E                490                  MOVE.B      #14, D0             ; command for trap call to display message
00001460  4E4F                     491                  TRAP        #15                 ; trap call
00001462                           492                  
00001462  4242                     493                  CLR         D2
00001464  1218                     494                  MOVE.B      (A0)+, D1
00001466  1401                     495                  MOVE.B      D1,D2               ; copy data over
00001468  E642                     496                  ASR         #three,D2           ; Shift to the right to remove register
0000146A  C47C 0007                497                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
0000146E                           498                  
0000146E  4243                     499                  CLR         D3                  ; Clear D3 so we can move D1 in
00001470  1601                     500                  MOVE.B      D1,D3               ; Move othr byte in
00001472  C67C 0007                501                  AND         #seven,D3           ; Set everything besides register to 0
00001476                           502                  
00001476  4241                     503                  CLR         D1
00001478  3218                     504                  MOVE.W      (A0)+, D1
0000147A                           505                 
0000147A                           506                  
0000147A  43F9 00002673            507                  LEA         hashTag, A1           ; Display space
00001480  103C 000E                508                  MOVE.B      #14, D0             ; command for trap call to display message
00001484  4E4F                     509                  TRAP        #15                 ; trap call
00001486                           510          
00001486  103C 0003                511                  MOVE.B      #3, D0
0000148A  4E4F                     512                  TRAP        #15
0000148C                           513          
0000148C  43F9 00002677            514                  LEA         comma, A1           ; Display space
00001492  103C 000E                515                  MOVE.B      #14, D0             ; command for trap call to display message
00001496  4E4F                     516                  TRAP        #15                 ; trap call
00001498                           517                  
00001498  4EB9 00002008            518                  JSR         printEA
0000149E                           519          
0000149E  43F9 0000266C            520                  LEA         newLine, A1           ; Display space
000014A4  103C 000E                521                  MOVE.B      #14, D0             ; command for trap call to display message
000014A8  4E4F                     522                  TRAP        #15                 ; trap call
000014AA                           523                  
000014AA                           524                  
000014AA  6000 FB60                525                  BRA         LOOP                
000014AE                           526          
000014AE                           527  opDynBCLR       
000014AE  4241                     528                  CLR         D1
000014B0  1218                     529                  MOVE.B      (A0)+,D1            ; Copy second byte in
000014B2  1601                     530                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
000014B4  E243                     531                  ASR         #one,D3             ; Shift register over to the end
000014B6  C67C 0007                532                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
000014BA                           533                  
000014BA  1401                     534                  MOVE.B      D1,D2
000014BC  EC42                     535                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
000014BE  B47C 0002                536                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
000014C2  6600 11A4                537                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
000014C6                           538  
000014C6                           539                  
000014C6  43F9 00002691            540                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
000014CC  103C 000E                541                  MOVE.B      #14, D0             ; command for trap call to display message
000014D0  4E4F                     542                  TRAP        #15                 ; trap call  
000014D2                           543                  
000014D2  43F9 00002670            544                  LEA         space, A1           ; Display space
000014D8  103C 000E                545                  MOVE.B      #14, D0             ; command for trap call to display message
000014DC  4E4F                     546                  TRAP        #15                 ; trap call
000014DE                           547                  
000014DE  143C 0000                548                  MOVE.B      #zero,D2                
000014E2  4EB9 00002008            549                  JSR         printEA
000014E8                           550                  
000014E8  43F9 00002677            551                  LEA         comma, A1           ; Display space
000014EE  103C 000E                552                  MOVE.B      #14, D0             ; command for trap call to display message
000014F2  4E4F                     553                  TRAP        #15                 ; trap call
000014F4                           554                  
000014F4  4242                     555                  CLR         D2
000014F6  1401                     556                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000014F8  E642                     557                  ASR         #three,D2           ; Remove/shift the register out
000014FA  C47C 0007                558                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000014FE                           559                  
000014FE  4243                     560                  CLR         D3                  ; Clearing D3 to avoid mashing data
00001500  1601                     561                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
00001502  C67C 0007                562                  AND         #seven,D3           ; Change all bits except for register bits to 0
00001506                           563                  
00001506                           564  
00001506  4EB9 00002008            565                  JSR         printEA
0000150C                           566          
0000150C  43F9 0000266C            567                  LEA         newLine, A1           ; Display space
00001512  103C 000E                568                  MOVE.B      #14, D0             ; command for trap call to display message
00001516  4E4F                     569                  TRAP        #15                 ; trap call            
00001518                           570  
00001518                           571  
00001518  6000 FAF2                572                  BRA         LOOP                ; go back to the loop
0000151C                           573   
0000151C                           574  opMOVEB 
0000151C  43F9 00002696            575          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
00001522  103C 000E                576          MOVE.B      #14, D0             ; command for trap call to display message
00001526  4E4F                     577          TRAP        #15                 ; trap call
00001528  43F9 0000270A            578          LEA         dispByte, A1        ; display byte
0000152E  103C 000E                579          MOVE.B      #14, D0             ; command for trap call to display message
00001532  4E4F                     580          TRAP        #15                 ; trap call
00001534  43F9 00002670            581          LEA         space, A1           ; create spaces
0000153A  103C 000E                582          MOVE.B      #14, D0             ; command for trap call to display message
0000153E  4E4F                     583          TRAP        #15                 ; trap call
00001540                           584          
00001540                           585          
00001540  4245                     586          CLR         D5                  ; Clear D5
00001542  1A01                     587          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001544  E245                     588          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001546  CA7C 0007                589          AND         #seven,D5
0000154A                           590          
0000154A  4244                     591          CLR         D4                  ; Clear out D4
0000154C  1801                     592          MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000154E  C87C 0001                593          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001552                           594          
00001552  4241                     595          CLR          D1
00001554  4242                     596          CLR          D2
00001556  1218                     597          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001558  1401                     598          MOVE.B      D1,D2
0000155A  EC42                     599          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000155C  D842                     600          ADD         D2,D4               ; Adds the remaining bits to D4
0000155E                           601          
0000155E  4242                     602          CLR         D2
00001560  1401                     603          MOVE.B      D1,D2               ; Copy new byte over to D2
00001562  E642                     604          ASR         #three,D2           ; Shift source register out
00001564  C47C 0007                605          AND         #seven,D2           ; Set everything to 0 except for the mode
00001568                           606          
00001568  4243                     607          CLR         D3
0000156A  1601                     608          MOVE.B      D1,D3
0000156C  C67C 0007                609          AND         #seven,D3
00001570                           610          
00001570  4EB9 00002008            611          JSR         printEA
00001576                           612          
00001576  43F9 00002677            613          LEA         comma, A1           ; Display space
0000157C  103C 000E                614          MOVE.B      #14, D0             ; command for trap call to display message
00001580  4E4F                     615          TRAP        #15                 ; trap call
00001582                           616          
00001582  4242                     617          CLR         D2
00001584  4243                     618          CLR         D3
00001586  1404                     619          MOVE.B      D4,D2
00001588  1605                     620          MOVE.B      D5,D3
0000158A                           621          
0000158A  4EB9 00002008            622          JSR         printEA
00001590                           623          
00001590                           624          
00001590  43F9 0000266C            625          LEA         newLine, A1           ; Display space
00001596  103C 000E                626          MOVE.B      #14, D0             ; command for trap call to display message
0000159A  4E4F                     627          TRAP        #15                 ; trap call            
0000159C                           628  
0000159C                           629  
0000159C  6000 FA6E                630          BRA         LOOP                ; go back to the loop
000015A0                           631          
000015A0                           632  opMOVEL     
000015A0                           633          
000015A0  4245                     634              CLR         D5                  ; Clear D5
000015A2  1A01                     635              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
000015A4  E245                     636              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
000015A6  CA7C 0007                637              AND         #seven,D5
000015AA                           638          
000015AA  4244                     639              CLR         D4                  ; Clear out D4
000015AC  1801                     640              MOVE.B      D1,D4               ; Copy byte over to store destination mode
000015AE  C87C 0001                641              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
000015B2                           642          
000015B2  4241                     643              CLR          D1
000015B4  4242                     644              CLR          D2
000015B6  1218                     645              MOVE.B      (A0)+,D1            ; Copy byte into D1
000015B8  1401                     646              MOVE.B      D1,D2
000015BA  EC42                     647              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000015BC  D842                     648              ADD         D2,D4               ; Adds the remaining bits to D4
000015BE                           649          
000015BE  B87C 0001                650              CMP         #one,D4             ; Check if it is MOVEA
000015C2  6700 0070                651              BEQ         opMOVEAL            ; If it is, branch off
000015C6                           652              
000015C6  43F9 00002696            653              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000015CC  103C 000E                654              MOVE.B      #14, D0             ; command for trap call to display message
000015D0  4E4F                     655              TRAP        #15                 ; trap call  
000015D2                           656              
000015D2                           657              
000015D2  43F9 00002710            658              LEA         dispLong,A1
000015D8  103C 000E                659              MOVE.B      #14, D0             ; command for trap call to display message
000015DC  4E4F                     660              TRAP        #15                 ; trap call
000015DE                           661              
000015DE  43F9 00002670            662              LEA         space, A1           ; create spaces
000015E4  103C 000E                663              MOVE.B      #14, D0             ; command for trap call to display message
000015E8  4E4F                     664              TRAP        #15                 ; trap call
000015EA                           665          
000015EA  4242                     666              CLR         D2
000015EC  1401                     667              MOVE.B      D1,D2               ; Copy new byte over to D2
000015EE  E642                     668              ASR         #three,D2           ; Shift source register out
000015F0  C47C 0007                669              AND         #seven,D2           ; Set everything to 0 except for the mode
000015F4                           670          
000015F4  4243                     671              CLR         D3
000015F6  1601                     672              MOVE.B      D1,D3
000015F8  C67C 0007                673              AND         #seven,D3
000015FC                           674              
000015FC  4246                     675              CLR         D6
000015FE  1C3C 0001                676              MOVE.B      #1,D6
00001602  4EB9 00002008            677              JSR         printEA
00001608  4246                     678              CLR         D6
0000160A                           679              
0000160A  43F9 00002677            680              LEA         comma, A1           ; Display comma
00001610  103C 000E                681              MOVE.B      #14, D0             ; command for trap call to display message
00001614  4E4F                     682              TRAP        #15                 ; trap call
00001616                           683          
00001616  4242                     684              CLR         D2
00001618  4243                     685              CLR         D3
0000161A  1404                     686              MOVE.B      D4,D2
0000161C  1605                     687              MOVE.B      D5,D3
0000161E                           688              
0000161E                           689  
0000161E                           690              
0000161E  4EB9 00002008            691              JSR         printEA
00001624                           692          
00001624                           693          
00001624  43F9 0000266C            694              LEA         newLine, A1           ; Display space
0000162A  103C 000E                695              MOVE.B      #14, D0             ; command for trap call to display message
0000162E  4E4F                     696              TRAP        #15                 ; trap call            
00001630                           697  
00001630                           698  
00001630  6000 F9DA                699              BRA         LOOP                ; go back to the loop
00001634                           700              
00001634                           701  opMOVEAL
00001634                           702  
00001634  43F9 0000269B            703              LEA         MOVEAmatch,A1
0000163A  103C 000E                704              MOVE.B      #14, D0             ; command for trap call to display message
0000163E  4E4F                     705              TRAP        #15                 ; trap call
00001640                           706              
00001640  43F9 00002710            707              LEA         dispLong,A1
00001646  103C 000E                708              MOVE.B      #14, D0             ; command for trap call to display message
0000164A  4E4F                     709              TRAP        #15                 ; trap call
0000164C                           710              
0000164C                           711  
0000164C  43F9 00002670            712              LEA         space, A1           ; create spaces
00001652  103C 000E                713              MOVE.B      #14, D0             ; command for trap call to display message
00001656  4E4F                     714              TRAP        #15                 ; trap call
00001658                           715              
00001658  4242                     716              CLR         D2
0000165A  1401                     717              MOVE.B      D1,D2               ; Copy new byte over to D2
0000165C  E642                     718              ASR         #three,D2           ; Shift source register out
0000165E  C47C 0007                719              AND         #seven,D2           ; Set everything to 0 except for the mode
00001662                           720          
00001662  4243                     721              CLR         D3
00001664  1601                     722              MOVE.B      D1,D3
00001666  C67C 0007                723              AND         #seven,D3
0000166A                           724              
0000166A  4241                     725              CLR         D1                  ; Clear D1
0000166C                           726              
0000166C                           727              
0000166C  4EB9 00002008            728              JSR         printEA
00001672                           729              
00001672  43F9 00002677            730              LEA         comma, A1           ; Display comma
00001678  103C 000E                731              MOVE.B      #14, D0             ; command for trap call to display message
0000167C  4E4F                     732              TRAP        #15                 ; trap call
0000167E                           733  
0000167E  4242                     734              CLR         D2
00001680  4243                     735              CLR         D3
00001682  1404                     736              MOVE.B      D4,D2
00001684  1605                     737              MOVE.B      D5,D3
00001686                           738          
00001686  4EB9 00002008            739              JSR         printEA
0000168C                           740          
0000168C                           741          
0000168C  43F9 0000266C            742              LEA         newLine, A1           ; Display space
00001692  103C 000E                743              MOVE.B      #14, D0             ; command for trap call to display message
00001696  4E4F                     744              TRAP        #15                 ; trap call            
00001698                           745  
00001698                           746  
00001698  6000 F972                747              BRA         LOOP                ; go back to the loop
0000169C                           748  
0000169C                           749  opMOVEW
0000169C                           750          
0000169C  4245                     751              CLR         D5                  ; Clear D5
0000169E  1A01                     752              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
000016A0  E245                     753              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
000016A2  CA7C 0007                754              AND         #seven,D5
000016A6                           755          
000016A6  4244                     756              CLR         D4                  ; Clear out D4
000016A8  1801                     757              MOVE.B      D1,D4               ; Copy byte over to store destination mode
000016AA  C87C 0001                758              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
000016AE                           759          
000016AE  4241                     760              CLR          D1
000016B0  4242                     761              CLR          D2
000016B2  1218                     762              MOVE.B      (A0)+,D1            ; Copy byte into D1
000016B4  1401                     763              MOVE.B      D1,D2
000016B6  EC42                     764              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000016B8  D842                     765              ADD         D2,D4               ; Adds the remaining bits to D4
000016BA                           766          
000016BA  B87C 0001                767              CMP         #one,D4             ; Check if it is MOVEA
000016BE  6700 006A                768              BEQ         opMOVEAW            ; If it is, branch off
000016C2                           769              
000016C2  43F9 00002696            770              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000016C8  103C 000E                771              MOVE.B      #14, D0             ; command for trap call to display message
000016CC  4E4F                     772              TRAP        #15                 ; trap call  
000016CE                           773              
000016CE  43F9 0000270D            774              LEA         dispWord,A1
000016D4  103C 000E                775              MOVE.B      #14, D0             ; command for trap call to display message
000016D8  4E4F                     776              TRAP        #15                 ; trap call
000016DA                           777              
000016DA  43F9 00002670            778              LEA         space, A1           ; create spaces
000016E0  103C 000E                779              MOVE.B      #14, D0             ; command for trap call to display message
000016E4  4E4F                     780              TRAP        #15                 ; trap call
000016E6                           781          
000016E6  4242                     782              CLR         D2
000016E8  1401                     783              MOVE.B      D1,D2               ; Copy new byte over to D2
000016EA  E642                     784              ASR         #three,D2           ; Shift source register out
000016EC  C47C 0007                785              AND         #seven,D2           ; Set everything to 0 except for the mode
000016F0                           786          
000016F0  4243                     787              CLR         D3
000016F2  1601                     788              MOVE.B      D1,D3
000016F4  C67C 0007                789              AND         #seven,D3
000016F8                           790              
000016F8  4241                     791              CLR         D1                  ; Clear D1
000016FA                           792              
000016FA  4EB9 00002008            793              JSR         printEA
00001700                           794              
00001700  43F9 00002677            795              LEA         comma, A1           ; Display comma
00001706  103C 000E                796              MOVE.B      #14, D0             ; command for trap call to display message
0000170A  4E4F                     797              TRAP        #15                 ; trap call
0000170C                           798          
0000170C  4242                     799              CLR         D2
0000170E  4243                     800              CLR         D3
00001710  1404                     801              MOVE.B      D4,D2
00001712  1605                     802              MOVE.B      D5,D3
00001714                           803              
00001714                           804  
00001714                           805              
00001714  4EB9 00002008            806              JSR         printEA
0000171A                           807          
0000171A                           808          
0000171A  43F9 0000266C            809              LEA         newLine, A1           ; Display space
00001720  103C 000E                810              MOVE.B      #14, D0             ; command for trap call to display message
00001724  4E4F                     811              TRAP        #15                 ; trap call            
00001726                           812  
00001726                           813  
00001726  6000 F8E4                814              BRA         LOOP                ; go back to the loop
0000172A                           815  opMOVEAW  
0000172A  43F9 0000269B            816              LEA         MOVEAmatch,A1
00001730  103C 000E                817              MOVE.B      #14, D0             ; command for trap call to display message
00001734  4E4F                     818              TRAP        #15                 ; trap call
00001736                           819              
00001736  43F9 0000270D            820              LEA         dispWord,A1
0000173C  103C 000E                821              MOVE.B      #14, D0             ; command for trap call to display message
00001740  4E4F                     822              TRAP        #15                 ; trap call
00001742                           823              
00001742                           824  
00001742  43F9 00002670            825              LEA         space, A1           ; create spaces
00001748  103C 000E                826              MOVE.B      #14, D0             ; command for trap call to display message
0000174C  4E4F                     827              TRAP        #15                 ; trap call
0000174E                           828              
0000174E  4242                     829              CLR         D2
00001750  1401                     830              MOVE.B      D1,D2               ; Copy new byte over to D2
00001752  E642                     831              ASR         #three,D2           ; Shift source register out
00001754  C47C 0007                832              AND         #seven,D2           ; Set everything to 0 except for the mode
00001758                           833          
00001758  4243                     834              CLR         D3
0000175A  1601                     835              MOVE.B      D1,D3
0000175C  C67C 0007                836              AND         #seven,D3
00001760                           837              
00001760  4241                     838              CLR         D1                  ; Clear D1
00001762                           839              
00001762                           840              
00001762  4EB9 00002008            841              JSR         printEA
00001768                           842              
00001768  43F9 00002677            843              LEA         comma, A1           ; Display comma
0000176E  103C 000E                844              MOVE.B      #14, D0             ; command for trap call to display message
00001772  4E4F                     845              TRAP        #15                 ; trap call
00001774                           846  
00001774  4242                     847              CLR         D2
00001776  4243                     848              CLR         D3
00001778  1404                     849              MOVE.B      D4,D2
0000177A  1605                     850              MOVE.B      D5,D3
0000177C                           851          
0000177C  4EB9 00002008            852              JSR         printEA
00001782                           853          
00001782                           854          
00001782  43F9 0000266C            855              LEA         newLine, A1           ; Display space
00001788  103C 000E                856              MOVE.B      #14, D0             ; command for trap call to display message
0000178C  4E4F                     857              TRAP        #15                 ; trap call            
0000178E                           858  
0000178E                           859  
0000178E  6000 F87C                860              BRA         LOOP                ; go back to the loop
00001792                           861  
00001792                           862  opNEG   
00001792  43F9 000026A1            863              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001798  103C 000E                864              MOVE.B      #14, D0             ; command for trap call to display message
0000179C  4E4F                     865              TRAP        #15                 ; trap call
0000179E                           866          
0000179E                           867          
0000179E  1218                     868              MOVE.B      (A0)+, D1
000017A0  1401                     869              MOVE.B      D1,D2               ; copy data over
000017A2  EC42                     870              ASR         #six,D2
000017A4                           871              
000017A4  B47C 0000                872              CMP         #zero,D2
000017A8  6700 0016                873              BEQ         opNEGB
000017AC  B47C 0001                874              CMP         #one,D2
000017B0  6700 008E                875              BEQ         opNEGW
000017B4  B47C 0002                876              CMP         #two,D2
000017B8  6700 0046                877              BEQ         opNEGL
000017BC  6000 0E94                878              BRA         invalid
000017C0                           879  opNEGB
000017C0                           880  
000017C0  43F9 0000270A            881              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
000017C6  103C 000E                882              MOVE.B      #14, D0             ; command for trap call to display message
000017CA  4E4F                     883              TRAP        #15                 ; trap call
000017CC                           884          
000017CC  43F9 00002670            885              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000017D2  103C 000E                886              MOVE.B      #14, D0             ; command for trap call to display message
000017D6  4E4F                     887              TRAP        #15                 ; trap call
000017D8                           888          
000017D8  4242                     889              CLR         D2                  ; Clear Data register 2
000017DA  3401                     890              MOVE        D1,D2               ; Move byte into D2
000017DC  E642                     891              ASR         #three,D2           ; Shift mode into place and moves mode into place
000017DE  C47C 0007                892              AND         #seven,D2           ; Stores mode
000017E2                           893              
000017E2  4243                     894              CLR         D3
000017E4  3601                     895              MOVE        D1,D3
000017E6  C67C 0007                896              AND         #seven,D3
000017EA                           897          
000017EA  4EB9 00002008            898              JSR         printEA
000017F0                           899                  
000017F0  43F9 0000266C            900              LEA         newLine, A1           ; Display space
000017F6  103C 000E                901              MOVE.B      #14, D0             ; command for trap call to display message
000017FA  4E4F                     902              TRAP        #15                 ; trap call  
000017FC                           903          
000017FC  6000 F80E                904              BRA         LOOP
00001800                           905                  
00001800                           906  
00001800                           907  opNEGL
00001800                           908  
00001800  43F9 00002710            909              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001806  103C 000E                910              MOVE.B      #14, D0             ; command for trap call to display message
0000180A  4E4F                     911              TRAP        #15                 ; trap call
0000180C                           912  
0000180C  43F9 00002670            913              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001812  103C 000E                914              MOVE.B      #14, D0             ; command for trap call to display message
00001816  4E4F                     915              TRAP        #15                 ; trap call
00001818                           916                  
00001818  4242                     917              CLR         D2                  ; Clear Data register 2
0000181A  3401                     918              MOVE        D1,D2               ; Move byte into D2
0000181C  E642                     919              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000181E  C47C 0007                920              AND         #seven,D2           ; Stores mode
00001822                           921          
00001822  4243                     922              CLR         D3
00001824  3601                     923              MOVE        D1,D3
00001826  C67C 0007                924              AND         #seven,D3
0000182A                           925          
0000182A  4EB9 00002008            926              JSR         printEA
00001830                           927                      
00001830  43F9 0000266C            928              LEA         newLine, A1         ; Display space
00001836  103C 000E                929              MOVE.B      #14, D0             ; command for trap call to display message
0000183A  4E4F                     930              TRAP        #15                 ; trap call  
0000183C                           931          
0000183C  6000 F7CE                932              BRA         LOOP
00001840                           933          
00001840                           934  
00001840                           935  opNEGW
00001840                           936  
00001840  43F9 0000270D            937              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001846  103C 000E                938              MOVE.B      #14, D0             ; command for trap call to display message
0000184A  4E4F                     939              TRAP        #15                 ; trap call
0000184C                           940          
0000184C  43F9 00002670            941              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001852  103C 000E                942              MOVE.B      #14, D0             ; command for trap call to display message
00001856  4E4F                     943              TRAP        #15                 ; trap call        
00001858                           944                  
00001858  4242                     945              CLR         D2                  ; Clear Data register 2
0000185A  3401                     946              MOVE        D1,D2               ; Move byte into D2
0000185C  E642                     947              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000185E  C47C 0007                948              AND         #seven,D2           ; Stores mode
00001862                           949          
00001862  4243                     950              CLR         D3
00001864  3601                     951              MOVE        D1,D3
00001866  C67C 0007                952              AND         #seven,D3
0000186A                           953          
0000186A  4EB9 00002008            954              JSR         printEA
00001870                           955              
00001870  43F9 0000266C            956              LEA         newLine, A1           ; Display space
00001876  103C 000E                957              MOVE.B      #14, D0             ; command for trap call to display message
0000187A  4E4F                     958              TRAP        #15                 ; trap call  
0000187C                           959          
0000187C  6000 F78E                960              BRA         LOOP
00001880                           961  
00001880                           962  opRTSJSR
00001880                           963          
00001880  1218                     964              MOVE.B      (A0)+, D1
00001882                           965              
00001882  1401                     966              MOVE.B      D1,D2               ; copy data over
00001884  B47C 0075                967              CMP         #117,D2
00001888  6700 0050                968              BEQ         opRTS
0000188C                           969              
0000188C  EC42                     970              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
0000188E  B47C 0002                971              CMP         #two,D2             ; Checking if it is JSR
00001892  6700 0006                972              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001896                           973  
00001896  6000 0DBA                974              BRA         invalid
0000189A                           975  
0000189A                           976  opJSR
0000189A                           977                        
0000189A  43F9 000026A9            978              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
000018A0  103C 000E                979              MOVE.B      #14, D0             ; command for trap call to display message
000018A4  4E4F                     980              TRAP        #15                 ; trap call
000018A6                           981              
000018A6  43F9 00002670            982              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000018AC  103C 000E                983              MOVE.B      #14, D0             ; command for trap call to display message
000018B0  4E4F                     984              TRAP        #15                 ; trap call
000018B2                           985              
000018B2  4242                     986              CLR         D2
000018B4  4243                     987              CLR         D3
000018B6                           988              
000018B6  1401                     989              MOVE.B      D1,D2
000018B8  E642                     990              ASR         #three,D2
000018BA  C47C 0007                991              AND         #seven,D2
000018BE                           992              
000018BE  1601                     993              MOVE.B      D1,D3
000018C0  C67C 0007                994              AND         #seven,D3
000018C4                           995              
000018C4  4EB9 00002008            996              JSR         printEA
000018CA                           997              
000018CA  43F9 0000266C            998              LEA         newLine, A1           ; Display space
000018D0  103C 000E                999              MOVE.B      #14, D0             ; command for trap call to display message
000018D4  4E4F                    1000              TRAP        #15                 ; trap call  
000018D6                          1001              
000018D6  6000 F734               1002              BRA         loop            
000018DA                          1003  opRTS
000018DA                          1004  
000018DA  43F9 000026A5           1005              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
000018E0  103C 000E               1006              MOVE.B      #14, D0             ; command for trap call to display message
000018E4  4E4F                    1007              TRAP        #15                 ; trap call
000018E6                          1008              
000018E6  43F9 0000266C           1009              LEA         newLine, A1           ; Display space
000018EC  103C 000E               1010              MOVE.B      #14, D0             ; command for trap call to display message
000018F0  4E4F                    1011              TRAP        #15                 ; trap call 
000018F2                          1012              
000018F2  6000 F718               1013              BRA         loop
000018F6                          1014  
000018F6                          1015  opMOVEMLEA
000018F6  4242                    1016              CLR         D2                  ; Clear D2
000018F8  1401                    1017              MOVE.B      D1,D2               ; Copy byte over
000018FA  C47C 000F               1018              AND         #secNib,D2          ; Check only the second nibble
000018FE  B47C 000C               1019              CMP         #twelve,D2          ; Compare the second nibble to twelve
00001902  6700 000E               1020              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
00001906  B47C 0008               1021              CMP         #eight,D2           ; Compare the second nibble to eight
0000190A  6700 0006               1022              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
0000190E  6000 008C               1023              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
00001912                          1024              
00001912                          1025  opMOVEM            
00001912  4246                    1026              CLR         D6                  ; Clearing D4 to store dr field
00001914  1C01                    1027              MOVE.B      D1,D6               ; Moving byte to find dr field
00001916  E446                    1028              ASR         #two,D6             ; Moving dr field to readable spot
00001918  CC7C 0001               1029              AND         #one,D6             ; seting everything except dr to 0
0000191C                          1030  
0000191C  4241                    1031              CLR         D1  
0000191E  1218                    1032              MOVE.B      (A0)+, D1           ; Taking in next byte
00001920                          1033              
00001920  4245                    1034              CLR         D5
00001922  1A01                    1035              MOVE.B      D1,D5               ; Using D6 to check if this is indeed MOVEM
00001924  EE45                    1036              ASR         #seven,D5
00001926  CA7C 0001               1037              AND         #one,D5
0000192A  BA7C 0001               1038              CMP         #one,D5             ; This bit should be one if this is MOVEM
0000192E  6600 0D22               1039              BNE         invalid             ; If this is not 1 then this is not moveM
00001932  4245                    1040              CLR         D5
00001934                          1041              
00001934  43F9 000026AD           1042              LEA         MOVEMMatch, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
0000193A  103C 000E               1043              MOVE.B      #14, D0             ; command for trap call to display message
0000193E  4E4F                    1044              TRAP        #15                 ; trap call
00001940                          1045              
00001940  4245                    1046              CLR         D5                  ; Clearing D5 to store size
00001942  1A01                    1047              MOVE.B      D1,D5               ; Moving byte that contains bit for size
00001944  EC45                    1048              ASR         #six,D5            ; Moving size bit to the very right to read
00001946  CA7C 0001               1049              AND         #one,D5             ; Isolating the one bit for size
0000194A                          1050              
0000194A  4242                    1051              CLR         D2                  ; Storing EA mode in D2
0000194C  1401                    1052              MOVE.B      D1,D2
0000194E  E642                    1053              ASR         #three,D2
00001950  C47C 0007               1054              AND         #seven,D2
00001954                          1055              
00001954  4243                    1056              CLR         D3                  ; Storing EA register into D3
00001956  1601                    1057              MOVE.B      D1,D3
00001958  C67C 0007               1058              AND         #seven,D3
0000195C                          1059              
0000195C  4EB9 00001AD0           1060              JSR         MOVEMBRA
00001962                          1061              
00001962  B47C 0003               1062              CMP         #three,D2
00001966  6700 0024               1063              BEQ         skipPrintEA
0000196A                          1064              
0000196A  43F9 00002677           1065              LEA         comma, A1           ; Display comma
00001970  103C 000E               1066              MOVE.B      #14, D0             ; command for trap call to display message
00001974  4E4F                    1067              TRAP        #15                 ; trap call
00001976                          1068              
00001976                          1069  
00001976  4EB9 00002008           1070              JSR         printEA
0000197C                          1071              
0000197C  43F9 0000266C           1072              LEA         newline, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001982  103C 000E               1073              MOVE.B      #14, D0             ; command for trap call to display message
00001986  4E4F                    1074              TRAP        #15                 ; trap call            
00001988                          1075  
00001988  6000 F682               1076              BRA         loop            
0000198C                          1077  
0000198C                          1078  skipPrintEA 
0000198C                          1079  
0000198C  43F9 0000266C           1080              LEA         newline, A1        
00001992  103C 000E               1081              MOVE.B      #14, D0             ; command for trap call to display message
00001996  4E4F                    1082              TRAP        #15                 ; trap call            
00001998                          1083  
00001998  6000 F672               1084              BRA         loop 
0000199C                          1085  opLEA
0000199C  4244                    1086              CLR         D4                  ; Clearing space for source register
0000199E  1801                    1087              MOVE.B      D1,D4               ; Moving byte to isolate register
000019A0  E244                    1088              ASR         #one,D4
000019A2  C87C 0007               1089              AND         #seven,D4           ; Isolated register
000019A6                          1090  
000019A6  4245                    1091              CLR         D5                  ; Clearing D5 to check if bits match LEA static bits
000019A8  1A01                    1092              MOVE.B      D1,D5
000019AA  CA7C 0001               1093              AND         #one,D5
000019AE  E545                    1094              ASL         #two,D5
000019B0                          1095              
000019B0  1218                    1096              MOVE.B      (A0)+, D1           ; Taking in next byte
000019B2                          1097              
000019B2  1C01                    1098              MOVE.B      D1,D6
000019B4  EC46                    1099              ASR         #six,D6
000019B6  DA46                    1100              ADD         D6,D5
000019B8  4246                    1101              CLR         D6
000019BA                          1102  
000019BA  BA7C 0007               1103              CMP         #seven,D5
000019BE  6600 0C92               1104              BNE         invalid   
000019C2                          1105              
000019C2  43F9 000026B3           1106              LEA         LEAmatch, A1        ; we know that the opcode will be LEA, so load A1 to print message
000019C8  103C 000E               1107              MOVE.B      #14, D0             ; command for trap call to display message
000019CC  4E4F                    1108              TRAP        #15                 ; trap call            
000019CE                          1109  
000019CE  43F9 00002670           1110              LEA         space, A1         ; we know that the opcode will be MOVEM, so load A1 to print message
000019D4  103C 000E               1111              MOVE.B      #14, D0             ; command for trap call to display message
000019D8  4E4F                    1112              TRAP        #15                 ; trap call            
000019DA                          1113              
000019DA  4242                    1114              CLR         D2
000019DC  1401                    1115              MOVE.B      D1,D2
000019DE  E642                    1116              ASR         #three,D2
000019E0  C47C 0007               1117              AND         #seven,D2
000019E4                          1118              
000019E4  4243                    1119              CLR         D3
000019E6  1601                    1120              MOVE.B      D1,D3
000019E8  C67C 0007               1121              AND         #seven,D3
000019EC                          1122              
000019EC  4EB9 00002008           1123              JSR         printEA
000019F2                          1124              
000019F2  43F9 00002677           1125              LEA         comma, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
000019F8  103C 000E               1126              MOVE.B      #14, D0             ; command for trap call to display message
000019FC  4E4F                    1127              TRAP        #15                 ; trap call            
000019FE                          1128              
000019FE                          1129              
000019FE  4243                    1130              CLR         D3
00001A00  1604                    1131              MOVE.B      D4,D3
00001A02  143C 0001               1132              MOVE.B      #one,D2
00001A06                          1133              
00001A06  4EB9 00002008           1134              JSR         printEA             ; Prints out source address
00001A0C                          1135              
00001A0C  43F9 0000266C           1136              LEA         newline, A1         ; Prints new line
00001A12  103C 000E               1137              MOVE.B      #14, D0             ; command for trap call to display message
00001A16  4E4F                    1138              TRAP        #15                 ; trap call
00001A18                          1139  
00001A18  6000 F5F2               1140              BRA         loop            
00001A1C                          1141              
00001A1C                          1142              
00001A1C                          1143             
00001A1C                          1144  
00001A1C                          1145  
00001A1C                          1146  opSUBQ      
00001A1C  43F9 000026B7           1147              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
00001A22  103C 000E               1148              MOVE.B      #14, D0             ; command for trap call to display message
00001A26  4E4F                    1149              TRAP        #15                 ; trap call
00001A28                          1150  
00001A28  43F9 000026BC           1151  opBRA       LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001A2E  103C 000E               1152              MOVE.B      #14, D0             ; command for trap call to display message
00001A32  4E4F                    1153              TRAP        #15                 ; trap call
00001A34  43F9 00002670           1154              LEA         space, A1           ; create spaces
00001A3A  103C 000E               1155              MOVE.B      #14, D0             ; command for trap call to display message
00001A3E  4E4F                    1156              TRAP        #15                 ; trap call
00001A40                          1157  
00001A40  43F9 000026C0           1158  opBCS       LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001A46  103C 000E               1159              MOVE.B      #14, D0             ; command for trap call to display message
00001A4A  4E4F                    1160              TRAP        #15                 ; trap call
00001A4C                          1161  
00001A4C  43F9 000026C4           1162  opBVC       LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001A52  103C 000E               1163              MOVE.B      #14, D0             ; command for trap call to display message
00001A56  4E4F                    1164              TRAP        #15                 ; trap call
00001A58                          1165  
00001A58  43F9 000026C8           1166  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001A5E  103C 000E               1167          MOVE.B      #14, D0             ; command for trap call to display message
00001A62  4E4F                    1168          TRAP        #15                 ; trap call
00001A64                          1169  
00001A64  43F9 000026CC           1170  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001A6A  103C 000E               1171          MOVE.B      #14, D0             ; command for trap call to display message
00001A6E  4E4F                    1172          TRAP        #15                 ; trap call
00001A70                          1173  
00001A70  43F9 000026D8           1174  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001A76  103C 000E               1175          MOVE.B      #14, D0             ; command for trap call to display message
00001A7A  4E4F                    1176          TRAP        #15                 ; trap call
00001A7C                          1177  
00001A7C  43F9 000026E4           1178  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001A82  103C 000E               1179          MOVE.B      #14, D0             ; command for trap call to display message
00001A86  4E4F                    1180          TRAP        #15                 ; trap call
00001A88                          1181  
00001A88  43F9 000026FE           1182  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001A8E  103C 000E               1183          MOVE.B      #14, D0             ; command for trap call to display message
00001A92  4E4F                    1184          TRAP        #15                 ; trap call
00001A94                          1185  
00001A94  43F9 000026FA           1186  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001A9A  103C 000E               1187          MOVE.B      #14, D0             ; command for trap call to display message
00001A9E  4E4F                    1188          TRAP        #15                 ; trap call
00001AA0                          1189  
00001AA0  43F9 000026F6           1190  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00001AA6  103C 000E               1191          MOVE.B      #14, D0             ; command for trap call to display message
00001AAA  4E4F                    1192          TRAP        #15                 ; trap call
00001AAC                          1193  
00001AAC  43F9 000026F2           1194  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001AB2  103C 000E               1195          MOVE.B      #14, D0             ; command for trap call to display message
00001AB6  4E4F                    1196          TRAP        #15                 ; trap call
00001AB8                          1197  
00001AB8  43F9 00002706           1198  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001ABE  103C 000E               1199          MOVE.B      #14, D0             ; command for trap call to display message
00001AC2  4E4F                    1200          TRAP        #15                 ; trap call
00001AC4                          1201  
00001AC4                          1202  opROR   
00001AC4  43F9 00002702           1203          LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001ACA  103C 000E               1204          MOVE.B      #14, D0             ; command for trap call to display message
00001ACE  4E4F                    1205          TRAP        #15                 ; trap call
00001AD0                          1206  
00001AD0                          1207  
00001AD0  48E7 FF7E               1208  MOVEMBRA    MOVEM.L  D0-D7/A1-A6, -(SP)     ; Branches off depending on size bit
00001AD4  BA7C 0000               1209              CMP      #zero,D5
00001AD8  6700 000A               1210              BEQ      MOVEMW
00001ADC  BA7C 0001               1211              CMP      #one, D5
00001AE0  6700 001E               1212              BEQ      MOVEML
00001AE4                          1213              
00001AE4                          1214  MOVEMW     
00001AE4  43F9 0000270D           1215              LEA         dispWord, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001AEA  103C 000E               1216              MOVE.B      #14, D0             ; command for trap call to display message
00001AEE  4E4F                    1217              TRAP        #15                 ; trap call
00001AF0                          1218  
00001AF0  43F9 00002670           1219              LEA         space, A1           ; we know that the opcode will be ROR, so load A1 to print message
00001AF6  103C 000E               1220              MOVE.B      #14, D0             ; command for trap call to display message
00001AFA  4E4F                    1221              TRAP        #15                 ; trap call
00001AFC                          1222              
00001AFC  6000 001E               1223              BRA         CheckDR
00001B00                          1224  
00001B00                          1225  MOVEML   
00001B00  43F9 00002710           1226              LEA         dispLong, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001B06  103C 000E               1227              MOVE.B      #14, D0             ; command for trap call to display message
00001B0A  4E4F                    1228              TRAP        #15                 ; trap call
00001B0C                          1229  
00001B0C  43F9 00002670           1230              LEA         space, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001B12  103C 000E               1231              MOVE.B      #14, D0             ; command for trap call to display message
00001B16  4E4F                    1232              TRAP        #15                 ; trap call
00001B18                          1233           
00001B18                          1234  
00001B18  6000 0002               1235              BRA         CheckDR
00001B1C                          1236  
00001B1C                          1237  CheckDR     
00001B1C                          1238              
00001B1C                          1239                
00001B1C  3218                    1240              MOVE.W      (A0)+, D1           ; Taking in next word
00001B1E  BC7C 0000               1241              CMP         #zero,D6
00001B22  6700 0036               1242              BEQ         printRegMem
00001B26  BC7C 0001               1243              CMP         #one,D6
00001B2A  6700 0006               1244              BEQ         printStack
00001B2E  6000 0B22               1245              BRA         invalid
00001B32                          1246              
00001B32                          1247  printStack 
00001B32  43F9 00002683           1248              LEA         stack,A1
00001B38  103C 000E               1249              MOVE.B      #14, D0             ; command for trap call to display message
00001B3C  4E4F                    1250              TRAP        #15                 ; trap call
00001B3E                          1251  
00001B3E  43F9 0000267F           1252              LEA         inc,A1
00001B44  103C 000E               1253              MOVE.B      #14, D0             ; command for trap call to display message
00001B48  4E4F                    1254              TRAP        #15                 ; trap call
00001B4A                          1255              
00001B4A  43F9 00002677           1256              LEA         comma,A1
00001B50  103C 000E               1257              MOVE.B      #14, D0             ; command for trap call to display message
00001B54  4E4F                    1258              TRAP        #15                 ; trap call
00001B56                          1259              
00001B56                          1260              
00001B56  6000 0002               1261              BRA         printRegMem
00001B5A                          1262             
00001B5A                          1263  printRegMem 
00001B5A  4244                    1264              CLR         D4                  ; Using D4 to store predecrement mode addresses
00001B5C  1801                    1265              MOVE.B      D1,D4               ; Stores bits for D0-D7
00001B5E                          1266              
00001B5E  4245                    1267              CLR         D5
00001B60  1A01                    1268              MOVE.B      D1,D5
00001B62  CA7C 0001               1269              AND         #mask1,D5
00001B66  BA7C 0001               1270              CMP         #mask1,D5
00001B6A  6700 007A               1271              BEQ         DataReg0
00001B6E                          1272              
00001B6E  4245                    1273              CLR         D5
00001B70  1A01                    1274              MOVE.B      D1,D5
00001B72  CA7C 0002               1275              AND         #mask2,D5
00001B76  BA7C 0002               1276              CMP         #mask2,D5
00001B7A  6700 009A               1277              BEQ         DataReg1
00001B7E                          1278  
00001B7E  4245                    1279              CLR         D5
00001B80  1A01                    1280              MOVE.B      D1,D5
00001B82  CA7C 0004               1281              AND         #mask3,D5
00001B86  BA7C 0004               1282              CMP         #mask3,D5
00001B8A  6700 00CA               1283              BEQ         DataReg2            
00001B8E                          1284              
00001B8E  4245                    1285              CLR         D5
00001B90  1A01                    1286              MOVE.B      D1,D5
00001B92  CA7C 0008               1287              AND         #mask4,D5
00001B96  BA7C 0008               1288              CMP         #mask4,D5
00001B9A  6700 00FA               1289              BEQ         DataReg3            
00001B9E                          1290              
00001B9E  4245                    1291              CLR         D5
00001BA0  1A01                    1292              MOVE.B      D1,D5
00001BA2  CA7C 0010               1293              AND         #mask5,D5
00001BA6  BA7C 0010               1294              CMP         #mask5,D5
00001BAA  6700 012A               1295              BEQ         DataReg4
00001BAE                          1296  
00001BAE  4245                    1297              CLR         D5
00001BB0  1A01                    1298              MOVE.B      D1,D5
00001BB2  CA7C 0020               1299              AND         #mask6,D5
00001BB6  BA7C 0020               1300              CMP         #mask6,D5
00001BBA  6700 015A               1301              BEQ         DataReg5
00001BBE                          1302  
00001BBE  4245                    1303              CLR         D5
00001BC0  1A01                    1304              MOVE.B      D1,D5
00001BC2  CA7C 0040               1305              AND         #mask7,D5
00001BC6  BA7C 0040               1306              CMP         #mask7,D5
00001BCA  6700 018A               1307              BEQ         DataReg6
00001BCE                          1308  
00001BCE  4245                    1309              CLR         D5
00001BD0  1A01                    1310              MOVE.B      D1,D5
00001BD2  CA7C 0080               1311              AND         #mask8,D5
00001BD6  BA7C 0080               1312              CMP         #mask8,D5
00001BDA  6700 01BA               1313              BEQ         DataReg7
00001BDE                          1314              
00001BDE  6000 0A72               1315              BRA         invalid
00001BE2  6000 0A6E               1316              BRA         invalid        
00001BE6                          1317              
00001BE6                          1318  DataReg0
00001BE6  43F9 00002730           1319              LEA         dispD0, A1          ; Output string D0
00001BEC  103C 000E               1320              MOVE.B      #14, D0             ; command for trap call to display message
00001BF0  4E4F                    1321              TRAP        #15                 ; trap call
00001BF2                          1322              
00001BF2  4245                    1323              CLR         D5
00001BF4  1A01                    1324              MOVE.B      D1,D5
00001BF6  CA7C 0002               1325              AND         #mask2,D5
00001BFA  BA7C 0002               1326              CMP         #mask2,D5
00001BFE  6700 0006               1327              BEQ         Reg0Cont
00001C02  6000 01A2               1328              BRA         printMem
00001C06                          1329  Reg0Cont        
00001C06  43F9 0000267D           1330              LEA         dec, A1             ; Output -
00001C0C  103C 000E               1331              MOVE.B      #14, D0             ; command for trap call to display message
00001C10  4E4F                    1332              TRAP        #15                 ; trap call        
00001C12  6000 0002               1333              BRA         DataReg1
00001C16                          1334  
00001C16                          1335  DataReg1
00001C16  4245                    1336              CLR         D5
00001C18  1A01                    1337              MOVE.B      D1,D5
00001C1A  CA7C 0005               1338              AND         #maskA,D5
00001C1E  BA7C 0005               1339              CMP         #maskA,D5
00001C22  6700 0032               1340              BEQ         DataReg2
00001C26                          1341              
00001C26  43F9 00002733           1342              LEA         dispD1, A1          ; Output string D0
00001C2C  103C 000E               1343              MOVE.B      #14, D0             ; command for trap call to display message
00001C30  4E4F                    1344              TRAP        #15                 ; trap call
00001C32                          1345              
00001C32  4245                    1346              CLR         D5
00001C34  1A01                    1347              MOVE.B      D1,D5
00001C36  CA7C 0004               1348              AND         #mask3,D5
00001C3A  BA7C 0004               1349              CMP         #mask3,D5
00001C3E  6700 0006               1350              BEQ         Reg1Cont
00001C42  6000 0162               1351              BRA         printMem
00001C46                          1352  Reg1Cont        
00001C46  43F9 0000267D           1353              LEA         dec, A1             ; Output -
00001C4C  103C 000E               1354              MOVE.B      #14, D0             ; command for trap call to display message
00001C50  4E4F                    1355              TRAP        #15                 ; trap call        
00001C52  6000 0002               1356              BRA         DataReg2
00001C56                          1357  
00001C56                          1358  
00001C56                          1359  DataReg2
00001C56  4245                    1360              CLR         D5
00001C58  1A01                    1361              MOVE.B      D1,D5
00001C5A  CA7C 000A               1362              AND         #maskB,D5
00001C5E  BA7C 000A               1363              CMP         #maskB,D5
00001C62  6700 0032               1364              BEQ         DataReg3
00001C66                          1365              
00001C66                          1366              
00001C66  43F9 00002736           1367              LEA         dispD2, A1          ; Output string D0
00001C6C  103C 000E               1368              MOVE.B      #14, D0             ; command for trap call to display message
00001C70  4E4F                    1369              TRAP        #15                 ; trap call
00001C72                          1370              
00001C72  4245                    1371              CLR         D5
00001C74  1A01                    1372              MOVE.B      D1,D5
00001C76  CA7C 0008               1373              AND         #mask4,D5
00001C7A  BA7C 0008               1374              CMP         #mask4,D5
00001C7E  6700 0006               1375              BEQ         Reg2Cont
00001C82  6000 0122               1376              BRA         printMem
00001C86                          1377  Reg2Cont        
00001C86  43F9 0000267D           1378              LEA         dec, A1             ; Output -
00001C8C  103C 000E               1379              MOVE.B      #14, D0             ; command for trap call to display message
00001C90  4E4F                    1380              TRAP        #15                 ; trap call        
00001C92  6000 0002               1381              BRA         DataReg3
00001C96                          1382  
00001C96                          1383  DataReg3
00001C96  4245                    1384              CLR         D5
00001C98  1A01                    1385              MOVE.B      D1,D5
00001C9A  CA7C 0014               1386              AND         #maskC,D5
00001C9E  BA7C 0014               1387              CMP         #maskC,D5
00001CA2  6700 0032               1388              BEQ         DataReg4
00001CA6                          1389              
00001CA6  43F9 00002739           1390              LEA         dispD3, A1          ; Output string D0
00001CAC  103C 000E               1391              MOVE.B      #14, D0             ; command for trap call to display message
00001CB0  4E4F                    1392              TRAP        #15                 ; trap call
00001CB2                          1393              
00001CB2  4245                    1394              CLR         D5
00001CB4  1A01                    1395              MOVE.B      D1,D5
00001CB6  CA7C 0010               1396              AND         #mask5,D5
00001CBA  BA7C 0010               1397              CMP         #mask5,D5
00001CBE  6700 0006               1398              BEQ         Reg3Cont
00001CC2  6000 00E2               1399              BRA         printMem
00001CC6                          1400  Reg3Cont        
00001CC6  43F9 0000267D           1401              LEA         dec, A1             ; Output -
00001CCC  103C 000E               1402              MOVE.B      #14, D0             ; command for trap call to display message
00001CD0  4E4F                    1403              TRAP        #15                 ; trap call        
00001CD2  6000 0002               1404              BRA         DataReg4
00001CD6                          1405  
00001CD6                          1406  
00001CD6                          1407  DataReg4
00001CD6  4245                    1408              CLR         D5
00001CD8  1A01                    1409              MOVE.B      D1,D5
00001CDA  CA7C 0028               1410              AND         #maskD,D5
00001CDE  BA7C 0028               1411              CMP         #maskD,D5
00001CE2  6700 0032               1412              BEQ         DataReg5
00001CE6                          1413              
00001CE6  43F9 0000273C           1414              LEA         dispD4, A1          ; Output string D0
00001CEC  103C 000E               1415              MOVE.B      #14, D0             ; command for trap call to display message
00001CF0  4E4F                    1416              TRAP        #15                 ; trap call
00001CF2                          1417              
00001CF2  4245                    1418              CLR         D5
00001CF4  1A01                    1419              MOVE.B      D1,D5
00001CF6  CA7C 0020               1420              AND         #mask6,D5
00001CFA  BA7C 0020               1421              CMP         #mask6,D5
00001CFE  6700 0006               1422              BEQ         Reg4Cont
00001D02  6000 00A2               1423              BRA         printMem
00001D06                          1424  Reg4Cont        
00001D06  43F9 0000267D           1425              LEA         dec, A1             ; Output -
00001D0C  103C 000E               1426              MOVE.B      #14, D0             ; command for trap call to display message
00001D10  4E4F                    1427              TRAP        #15                 ; trap call        
00001D12  6000 0002               1428              BRA         DataReg5
00001D16                          1429  
00001D16                          1430  DataReg5
00001D16  4245                    1431              CLR         D5
00001D18  1A01                    1432              MOVE.B      D1,D5
00001D1A  CA7C 0050               1433              AND         #maskE,D5
00001D1E  BA7C 0050               1434              CMP         #maskE,D5
00001D22  6700 0032               1435              BEQ         DataReg6
00001D26                          1436              
00001D26  43F9 0000273F           1437              LEA         dispD5, A1          ; Output string D0
00001D2C  103C 000E               1438              MOVE.B      #14, D0             ; command for trap call to display message
00001D30  4E4F                    1439              TRAP        #15                 ; trap call
00001D32                          1440              
00001D32  4245                    1441              CLR         D5
00001D34  1A01                    1442              MOVE.B      D1,D5
00001D36  CA7C 0040               1443              AND         #mask7,D5
00001D3A  BA7C 0040               1444              CMP         #mask7,D5
00001D3E  6700 0006               1445              BEQ         Reg5Cont
00001D42  6000 0062               1446              BRA         printMem
00001D46                          1447  Reg5Cont        
00001D46  43F9 0000267D           1448              LEA         dec, A1             ; Output -
00001D4C  103C 000E               1449              MOVE.B      #14, D0             ; command for trap call to display message
00001D50  4E4F                    1450              TRAP        #15                 ; trap call        
00001D52  6000 0042               1451              BRA         DataReg7
00001D56                          1452  
00001D56                          1453  DataReg6
00001D56  4245                    1454              CLR         D5
00001D58  1A01                    1455              MOVE.B      D1,D5
00001D5A  CA7C 00A0               1456              AND         #maskF,D5
00001D5E  BA7C 00A0               1457              CMP         #maskF,D5
00001D62  6700 0032               1458              BEQ         DataReg7
00001D66                          1459  
00001D66  43F9 00002742           1460              LEA         dispD6, A1          ; Output string D0
00001D6C  103C 000E               1461              MOVE.B      #14, D0             ; command for trap call to display message
00001D70  4E4F                    1462              TRAP        #15                 ; trap call
00001D72                          1463              
00001D72  4245                    1464              CLR         D5
00001D74  1A01                    1465              MOVE.B      D1,D5
00001D76  CA7C 0080               1466              AND         #mask8,D5
00001D7A  BA7C 0080               1467              CMP         #mask8,D5
00001D7E  6700 0006               1468              BEQ         Reg6Cont
00001D82  6000 0022               1469              BRA         printMem
00001D86                          1470  Reg6Cont        
00001D86  43F9 0000267D           1471              LEA         dec, A1             ; Output -
00001D8C  103C 000E               1472              MOVE.B      #14, D0             ; command for trap call to display message
00001D90  4E4F                    1473              TRAP        #15                 ; trap call        
00001D92  6000 0002               1474              BRA         DataReg7
00001D96                          1475  
00001D96                          1476  DataReg7    
00001D96  43F9 00002745           1477              LEA         dispD7, A1             ; Output -
00001D9C  103C 000E               1478              MOVE.B      #14, D0             ; command for trap call to display message
00001DA0  4E4F                    1479              TRAP        #15                 ; trap call        
00001DA2  6000 0002               1480              BRA         printMem            
00001DA6                          1481  printMem                                    ; Made this function in order to reuse if DR is 1
00001DA6  6000 0002               1482              BRA         printMemNow
00001DAA                          1483  printMemNow               
00001DAA  43F9 00002681           1484              LEA         slash, A1           ; Display slash
00001DB0  103C 000E               1485              MOVE.B      #14, D0             ; command for trap call to display message
00001DB4  4E4F                    1486              TRAP        #15                 ; trap call
00001DB6                          1487           
00001DB6  4244                    1488              CLR         D4                  ; Using D4 to store predecrement mode addresses
00001DB8  3801                    1489              MOVE.W      D1,D4               ; Stores bits for D0-D7
00001DBA  E044                    1490              ASR         #eight,D4
00001DBC                          1491              
00001DBC  4245                    1492              CLR         D5
00001DBE  1A04                    1493              MOVE.B      D4,D5
00001DC0  CA7C 0001               1494              AND         #mask1,D5
00001DC4  BA7C 0001               1495              CMP         #mask1,D5
00001DC8  6700 0072               1496              BEQ         AddrReg0
00001DCC                          1497              
00001DCC  4245                    1498              CLR         D5
00001DCE  1A04                    1499              MOVE.B      D4,D5
00001DD0  CA7C 0002               1500              AND         #mask2,D5
00001DD4  BA7C 0002               1501              CMP         #mask2,D5
00001DD8  6700 0092               1502              BEQ         AddrReg1
00001DDC                          1503  
00001DDC  4245                    1504              CLR         D5
00001DDE  1A04                    1505              MOVE.B      D4,D5
00001DE0  CA7C 0004               1506              AND         #mask3,D5
00001DE4  BA7C 0004               1507              CMP         #mask3,D5
00001DE8  6700 00C2               1508              BEQ         AddrReg2            
00001DEC                          1509              
00001DEC  4245                    1510              CLR         D5
00001DEE  1A04                    1511              MOVE.B      D4,D5
00001DF0  CA7C 0008               1512              AND         #mask4,D5
00001DF4  BA7C 0008               1513              CMP         #mask4,D5
00001DF8  6700 00F2               1514              BEQ         AddrReg3            
00001DFC                          1515              
00001DFC  4245                    1516              CLR         D5
00001DFE  1A04                    1517              MOVE.B      D4,D5
00001E00  CA7C 0010               1518              AND         #mask5,D5
00001E04  BA7C 0010               1519              CMP         #mask5,D5
00001E08  6700 0122               1520              BEQ         AddrReg4
00001E0C                          1521  
00001E0C  4245                    1522              CLR         D5
00001E0E  1A04                    1523              MOVE.B      D4,D5
00001E10  CA7C 0020               1524              AND         #mask6,D5
00001E14  BA7C 0020               1525              CMP         #mask6,D5
00001E18  6700 0152               1526              BEQ         AddrReg5
00001E1C                          1527  
00001E1C  4245                    1528              CLR         D5
00001E1E  1A04                    1529              MOVE.B      D4,D5
00001E20  CA7C 0040               1530              AND         #mask7,D5
00001E24  BA7C 0040               1531              CMP         #mask7,D5
00001E28  6700 0182               1532              BEQ         AddrReg6
00001E2C                          1533  
00001E2C  4245                    1534              CLR         D5
00001E2E  1A04                    1535              MOVE.B      D4,D5
00001E30  CA7C 0080               1536              AND         #mask8,D5
00001E34  BA7C 0080               1537              CMP         #mask8,D5
00001E38  6700 01B2               1538              BEQ         AddrReg7
00001E3C                          1539  AddrReg0
00001E3C  43F9 00002716           1540              LEA         dispA0, A1          ; Output string D0
00001E42  103C 000E               1541              MOVE.B      #14, D0             ; command for trap call to display message
00001E46  4E4F                    1542              TRAP        #15                 ; trap call
00001E48                          1543              
00001E48  4245                    1544              CLR         D5
00001E4A  1A01                    1545              MOVE.B      D1,D5
00001E4C  CA7C 0002               1546              AND         #mask2,D5
00001E50  BA7C 0002               1547              CMP         #mask2,D5
00001E54  6700 0006               1548              BEQ         Addr0Cont
00001E58  6000 01A2               1549              BRA         endMOVE
00001E5C                          1550  Addr0Cont        
00001E5C  43F9 0000267D           1551              LEA         dec, A1             ; Output -
00001E62  103C 000E               1552              MOVE.B      #14, D0             ; command for trap call to display message
00001E66  4E4F                    1553              TRAP        #15                 ; trap call        
00001E68  6000 0002               1554              BRA         AddrReg1
00001E6C                          1555  
00001E6C                          1556  AddrReg1
00001E6C  4245                    1557              CLR         D5
00001E6E  1A04                    1558              MOVE.B      D4,D5
00001E70  CA7C 0005               1559              AND         #maskA,D5
00001E74  BA7C 0005               1560              CMP         #maskA,D5
00001E78  6700 0032               1561              BEQ         AddrReg2
00001E7C                          1562              
00001E7C  43F9 00002719           1563              LEA         dispA1, A1          ; Output string D0
00001E82  103C 000E               1564              MOVE.B      #14, D0             ; command for trap call to display message
00001E86  4E4F                    1565              TRAP        #15                 ; trap call
00001E88                          1566              
00001E88  4245                    1567              CLR         D5
00001E8A  1A04                    1568              MOVE.B      D4,D5
00001E8C  CA7C 0004               1569              AND         #mask3,D5
00001E90  BA7C 0004               1570              CMP         #mask3,D5
00001E94  6700 0006               1571              BEQ         Addr1Cont
00001E98  6000 0162               1572              BRA         endMOVE
00001E9C                          1573  Addr1Cont        
00001E9C  43F9 0000267D           1574              LEA         dec, A1             ; Output -
00001EA2  103C 000E               1575              MOVE.B      #14, D0             ; command for trap call to display message
00001EA6  4E4F                    1576              TRAP        #15                 ; trap call        
00001EA8  6000 0002               1577              BRA         AddrReg2
00001EAC                          1578  
00001EAC                          1579  
00001EAC                          1580  AddrReg2
00001EAC  4245                    1581              CLR         D5
00001EAE  1A04                    1582              MOVE.B      D4,D5
00001EB0  CA7C 000A               1583              AND         #maskB,D5
00001EB4  BA7C 000A               1584              CMP         #maskB,D5
00001EB8  6700 0032               1585              BEQ         AddrReg3
00001EBC                          1586              
00001EBC                          1587              
00001EBC  43F9 0000271C           1588              LEA         dispA2, A1          ; Output string D0
00001EC2  103C 000E               1589              MOVE.B      #14, D0             ; command for trap call to display message
00001EC6  4E4F                    1590              TRAP        #15                 ; trap call
00001EC8                          1591              
00001EC8  4245                    1592              CLR         D5
00001ECA  1A04                    1593              MOVE.B      D4,D5
00001ECC  CA7C 0008               1594              AND         #mask4,D5
00001ED0  BA7C 0008               1595              CMP         #mask4,D5
00001ED4  6700 0006               1596              BEQ         Addr2Cont
00001ED8  6000 0122               1597              BRA         endMOVE
00001EDC                          1598  Addr2Cont        
00001EDC  43F9 0000267D           1599              LEA         dec, A1             ; Output -
00001EE2  103C 000E               1600              MOVE.B      #14, D0             ; command for trap call to display message
00001EE6  4E4F                    1601              TRAP        #15                 ; trap call        
00001EE8  6000 0002               1602              BRA         AddrReg3
00001EEC                          1603  
00001EEC                          1604  AddrReg3
00001EEC  4245                    1605              CLR         D5
00001EEE  1A04                    1606              MOVE.B      D4,D5
00001EF0  CA7C 0014               1607              AND         #maskC,D5
00001EF4  BA7C 0014               1608              CMP         #maskC,D5
00001EF8  6700 0032               1609              BEQ         AddrReg4
00001EFC                          1610              
00001EFC  43F9 0000271F           1611              LEA         dispA3, A1          ; Output string D0
00001F02  103C 000E               1612              MOVE.B      #14, D0             ; command for trap call to display message
00001F06  4E4F                    1613              TRAP        #15                 ; trap call
00001F08                          1614              
00001F08  4245                    1615              CLR         D5
00001F0A  1A04                    1616              MOVE.B      D4,D5
00001F0C  CA7C 0010               1617              AND         #mask5,D5
00001F10  BA7C 0010               1618              CMP         #mask5,D5
00001F14  6700 0006               1619              BEQ         Addr3Cont
00001F18  6000 00E2               1620              BRA         endMOVE
00001F1C                          1621  Addr3Cont        
00001F1C  43F9 0000267D           1622              LEA         dec, A1             ; Output -
00001F22  103C 000E               1623              MOVE.B      #14, D0             ; command for trap call to display message
00001F26  4E4F                    1624              TRAP        #15                 ; trap call        
00001F28  6000 0002               1625              BRA         AddrReg4
00001F2C                          1626  
00001F2C                          1627  
00001F2C                          1628  AddrReg4
00001F2C  4245                    1629              CLR         D5
00001F2E  1A04                    1630              MOVE.B      D4,D5
00001F30  CA7C 0028               1631              AND         #maskD,D5
00001F34  BA7C 0028               1632              CMP         #maskD,D5
00001F38  6700 0032               1633              BEQ         AddrReg5
00001F3C                          1634              
00001F3C  43F9 00002722           1635              LEA         dispA4, A1          ; Output string D0
00001F42  103C 000E               1636              MOVE.B      #14, D0             ; command for trap call to display message
00001F46  4E4F                    1637              TRAP        #15                 ; trap call
00001F48                          1638              
00001F48  4245                    1639              CLR         D5
00001F4A  1A04                    1640              MOVE.B      D4,D5
00001F4C  CA7C 0020               1641              AND         #mask6,D5
00001F50  BA7C 0020               1642              CMP         #mask6,D5
00001F54  6700 0006               1643              BEQ         Addr4Cont
00001F58  6000 00A2               1644              BRA         endMOVE
00001F5C                          1645  Addr4Cont        
00001F5C  43F9 0000267D           1646              LEA         dec, A1             ; Output -
00001F62  103C 000E               1647              MOVE.B      #14, D0             ; command for trap call to display message
00001F66  4E4F                    1648              TRAP        #15                 ; trap call        
00001F68  6000 0002               1649              BRA         AddrReg5
00001F6C                          1650  AddrReg5
00001F6C  4245                    1651              CLR         D5
00001F6E  1A04                    1652              MOVE.B      D4,D5
00001F70  CA7C 0050               1653              AND         #maskE,D5
00001F74  BA7C 0050               1654              CMP         #maskE,D5
00001F78  6700 0032               1655              BEQ         AddrReg6
00001F7C                          1656              
00001F7C  43F9 00002725           1657              LEA         dispA5, A1          ; Output string D0
00001F82  103C 000E               1658              MOVE.B      #14, D0             ; command for trap call to display message
00001F86  4E4F                    1659              TRAP        #15                 ; trap call
00001F88                          1660              
00001F88  4245                    1661              CLR         D5
00001F8A  1A04                    1662              MOVE.B      D4,D5
00001F8C  CA7C 0040               1663              AND         #mask7,D5
00001F90  BA7C 0040               1664              CMP         #mask7,D5
00001F94  6700 0006               1665              BEQ         Addr5Cont
00001F98  6000 0062               1666              BRA         endMOVE
00001F9C                          1667  Addr5Cont        
00001F9C  43F9 0000267D           1668              LEA         dec, A1             ; Output -
00001FA2  103C 000E               1669              MOVE.B      #14, D0             ; command for trap call to display message
00001FA6  4E4F                    1670              TRAP        #15                 ; trap call        
00001FA8  6000 0042               1671              BRA         AddrReg7
00001FAC                          1672  
00001FAC                          1673  AddrReg6
00001FAC  4245                    1674              CLR         D5
00001FAE  1A04                    1675              MOVE.B      D4,D5
00001FB0  CA7C 00A0               1676              AND         #maskF,D5
00001FB4  BA7C 00A0               1677              CMP         #maskF,D5
00001FB8  6700 0032               1678              BEQ         AddrReg7
00001FBC                          1679  
00001FBC  43F9 00002728           1680              LEA         dispA6, A1          ; Output string D0
00001FC2  103C 000E               1681              MOVE.B      #14, D0             ; command for trap call to display message
00001FC6  4E4F                    1682              TRAP        #15                 ; trap call
00001FC8                          1683              
00001FC8  4245                    1684              CLR         D5
00001FCA  1A04                    1685              MOVE.B      D4,D5
00001FCC  CA7C 0080               1686              AND         #mask8,D5
00001FD0  BA7C 0080               1687              CMP         #mask8,D5
00001FD4  6700 0006               1688              BEQ         Addr6Cont
00001FD8  6000 0022               1689              BRA         endMOVE
00001FDC                          1690  Addr6Cont        
00001FDC  43F9 0000267D           1691              LEA         dec, A1             ; Output -
00001FE2  103C 000E               1692              MOVE.B      #14, D0             ; command for trap call to display message
00001FE6  4E4F                    1693              TRAP        #15                 ; trap call        
00001FE8  6000 0002               1694              BRA         AddrReg7
00001FEC                          1695  
00001FEC                          1696  AddrReg7    
00001FEC  43F9 0000272B           1697              LEA         dispA7, A1          ; Output -
00001FF2  103C 000E               1698              MOVE.B      #14, D0             ; command for trap call to display message
00001FF6  4E4F                    1699              TRAP        #15                 ; trap call        
00001FF8  6000 0002               1700              BRA         endMOVE
00001FFC                          1701  
00001FFC                          1702  
00001FFC                          1703  
00001FFC                          1704  
00001FFC                          1705  endMOVE
00001FFC  4CDF 7EFF               1706              MOVEM.L  (SP)+, D0-D7/A1-A6
00002000  4E75                    1707              RTS
00002002                          1708  endMove1                                    ; Used if MOVEM has DR is 1
00002002  4CDF 7EFF               1709              MOVEM.L  (SP)+, D0-D7/A1-A6
00002006  4E75                    1710              RTS
00002008                          1711  
00002008                          1712  ***********************************************************************************************************
00002008                          1713  *
00002008                          1714  *                                           EA Print Check
00002008                          1715  *
00002008                          1716  ***********************************************************************************************************
00002008  48E7 FF7E               1717  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
0000200C                          1718  
0000200C                          1719  
0000200C  B43C 0000               1720              CMP.B       #zero, D2
00002010  6700 002E               1721              BEQ         pDataReg
00002014  B43C 0001               1722              CMP.B       #one, D2
00002018  6700 00E6               1723              BEQ         pAddrReg
0000201C  B43C 0002               1724              CMP.B       #two, D2
00002020  6700 019E               1725              BEQ         pAddrDir
00002024  B43C 0003               1726              CMP.B       #three, D2
00002028  6700 02C2               1727              BEQ         pAddrPost
0000202C  B43C 0004               1728              CMP.B       #four, D2
00002030  6700 0446               1729              BEQ         pAddrDec
00002034  B43C 0007               1730              CMP.B       #seven, D2
00002038  6700 0576               1731              BEQ         pHex
0000203C  6000 0614               1732              BRA         invalid
00002040                          1733  
00002040                          1734  ***********************************************************************************************************
00002040                          1735  * Data Register        
00002040  B63C 0000               1736  pDataReg    CMP.B   #zero,D3
00002044  6700 003A               1737              BEQ     displayD0
00002048  B63C 0001               1738              CMP.B   #one,D3
0000204C  6700 0042               1739              BEQ     displayD1
00002050  B63C 0002               1740              CMP.B   #two,D3
00002054  6700 004A               1741              BEQ     displayD2
00002058  B63C 0003               1742              CMP.B   #three,D3
0000205C  6700 0052               1743              BEQ     displayD3
00002060  B63C 0004               1744              CMP.B   #four,D3
00002064  6700 005A               1745              BEQ     displayD4
00002068  B63C 0005               1746              CMP.B   #five,D3
0000206C  6700 0062               1747              BEQ     displayD5
00002070  B63C 0006               1748              CMP.B   #six,D3
00002074  6700 006A               1749              BEQ     displayD6
00002078  B63C 0007               1750              CMP.B   #seven,D3
0000207C  6700 0072               1751              BEQ     displayD7
00002080                          1752              
00002080  43F9 00002730           1753  displayD0   LEA         dispD0, A1          ; Display space
00002086  103C 000E               1754              MOVE.B      #14, D0             ; command for trap call to display message
0000208A  4E4F                    1755              TRAP        #15                 ; trap call
0000208C  6000 05D4               1756              BRA         endSUB              ; go to the end of the subroutine
00002090                          1757              
00002090  43F9 00002733           1758  displayD1   LEA         dispD1, A1          ; Display space
00002096  103C 000E               1759              MOVE.B      #14, D0             ; command for trap call to display message
0000209A  4E4F                    1760              TRAP        #15                 ; trap call
0000209C  6000 05C4               1761              BRA         endSUB              ; go to the end of the subroutine
000020A0                          1762  
000020A0  43F9 00002736           1763  displayD2   LEA         dispD2, A1          ; Display space
000020A6  103C 000E               1764              MOVE.B      #14, D0             ; command for trap call to display message
000020AA  4E4F                    1765              TRAP        #15                 ; trap call
000020AC  6000 05B4               1766              BRA         endSUB              ; go to the end of the subroutine
000020B0                          1767  
000020B0  43F9 00002739           1768  displayD3   LEA         dispD3, A1          ; Display space
000020B6  103C 000E               1769              MOVE.B      #14, D0             ; command for trap call to display message
000020BA  4E4F                    1770              TRAP        #15                 ; trap call
000020BC  6000 05A4               1771              BRA         endSUB              ; go to the end of the subroutine
000020C0                          1772  
000020C0  43F9 0000273C           1773  displayD4   LEA         dispD4, A1          ; Display space
000020C6  103C 000E               1774              MOVE.B      #14, D0             ; command for trap call to display message
000020CA  4E4F                    1775              TRAP        #15                 ; trap call
000020CC  6000 0594               1776              BRA         endSUB              ; go to the end of the subroutine
000020D0                          1777  
000020D0  43F9 0000273F           1778  displayD5   LEA         dispD5, A1          ; Display space
000020D6  103C 000E               1779              MOVE.B      #14, D0             ; command for trap call to display message
000020DA  4E4F                    1780              TRAP        #15                 ; trap call
000020DC  6000 0584               1781              BRA         endSUB              ; go to the end of the subroutine
000020E0                          1782  
000020E0  43F9 00002742           1783  displayD6   LEA         dispD6, A1          ; Display space
000020E6  103C 000E               1784              MOVE.B      #14, D0             ; command for trap call to display message
000020EA  4E4F                    1785              TRAP        #15                 ; trap call
000020EC  6000 0574               1786              BRA         endSUB              ; go to the end of the subroutine
000020F0                          1787  
000020F0  43F9 00002745           1788  displayD7   LEA         dispD7, A1          ; Display space
000020F6  103C 000E               1789              MOVE.B      #14, D0             ; command for trap call to display message
000020FA  4E4F                    1790              TRAP        #15                 ; trap call
000020FC  6000 0564               1791              BRA         endSUB              ; go to the end of the subroutine
00002100                          1792  ***********************************************************************************************************
00002100                          1793  * Address Register
00002100  B63C 0000               1794  pAddrReg    CMP.B   #zero,D3
00002104  6700 003A               1795              BEQ     displayA0
00002108  B63C 0001               1796              CMP.B   #one,D3
0000210C  6700 0042               1797              BEQ     displayA1
00002110  B63C 0002               1798              CMP.B   #two,D3
00002114  6700 004A               1799              BEQ     displayA2
00002118  B63C 0003               1800              CMP.B   #three,D3
0000211C  6700 0052               1801              BEQ     displayA3
00002120  B63C 0004               1802              CMP.B   #four,D3
00002124  6700 005A               1803              BEQ     displayA4
00002128  B63C 0005               1804              CMP.B   #five,D3
0000212C  6700 0062               1805              BEQ     displayA5
00002130  B63C 0006               1806              CMP.B   #six,D3
00002134  6700 006A               1807              BEQ     displayA6
00002138  B63C 0007               1808              CMP.B   #seven,D3
0000213C  6700 0072               1809              BEQ     displayA7
00002140                          1810              
00002140  43F9 00002716           1811  displayA0   LEA         dispA0, A1          ; Display space
00002146  103C 000E               1812              MOVE.B      #14, D0             ; command for trap call to display message
0000214A  4E4F                    1813              TRAP        #15                 ; trap call
0000214C  6000 0514               1814              BRA         endSUB              ; go to the end of the subroutine
00002150                          1815              
00002150  43F9 00002719           1816  displayA1   LEA         dispA1, A1          ; Display space
00002156  103C 000E               1817              MOVE.B      #14, D0             ; command for trap call to display message
0000215A  4E4F                    1818              TRAP        #15                 ; trap call
0000215C  6000 0504               1819              BRA         endSUB              ; go to the end of the subroutine
00002160                          1820  
00002160  43F9 0000271C           1821  displayA2   LEA         dispA2, A1          ; Display space
00002166  103C 000E               1822              MOVE.B      #14, D0             ; command for trap call to display message
0000216A  4E4F                    1823              TRAP        #15                 ; trap call
0000216C  6000 04F4               1824              BRA         endSUB              ; go to the end of the subroutine
00002170                          1825  
00002170  43F9 0000271F           1826  displayA3   LEA         dispA3, A1          ; Display space
00002176  103C 000E               1827              MOVE.B      #14, D0             ; command for trap call to display message
0000217A  4E4F                    1828              TRAP        #15                 ; trap call
0000217C  6000 04E4               1829              BRA         endSUB              ; go to the end of the subroutine
00002180                          1830  
00002180  43F9 00002722           1831  displayA4   LEA         dispA4, A1          ; Display space
00002186  103C 000E               1832              MOVE.B      #14, D0             ; command for trap call to display message
0000218A  4E4F                    1833              TRAP        #15                 ; trap call
0000218C  6000 04D4               1834              BRA         endSUB              ; go to the end of the subroutine
00002190                          1835  
00002190  43F9 00002725           1836  displayA5   LEA         dispA5, A1          ; Display space
00002196  103C 000E               1837              MOVE.B      #14, D0             ; command for trap call to display message
0000219A  4E4F                    1838              TRAP        #15                 ; trap call
0000219C  6000 04C4               1839              BRA         endSUB              ; go to the end of the subroutine
000021A0                          1840  
000021A0  43F9 00002728           1841  displayA6   LEA         dispA6, A1          ; Display space
000021A6  103C 000E               1842              MOVE.B      #14, D0             ; command for trap call to display message
000021AA  4E4F                    1843              TRAP        #15                 ; trap call
000021AC  6000 04B4               1844              BRA         endSUB              ; go to the end of the subroutine
000021B0                          1845  
000021B0  43F9 0000272B           1846  displayA7   LEA         dispA7, A1          ; Display space
000021B6  103C 000E               1847              MOVE.B      #14, D0             ; command for trap call to display message
000021BA  4E4F                    1848              TRAP        #15                 ; trap call
000021BC  6000 04A4               1849              BRA         endSUB              ; go to the end of the subroutine
000021C0                          1850  
000021C0                          1851  ***********************************************************************************************************
000021C0                          1852  * Address Register Direct
000021C0                          1853  
000021C0  43F9 00002679           1854  pAddrDir    LEA         opPer, A1           ; Display space
000021C6  103C 000E               1855              MOVE.B      #14, D0             ; command for trap call to display message
000021CA  4E4F                    1856              TRAP        #15                 ; trap call
000021CC                          1857              
000021CC  B63C 0000               1858              CMP.B   #zero,D3
000021D0  6700 003A               1859              BEQ     displayA0A
000021D4  B63C 0001               1860              CMP.B   #one,D3
000021D8  6700 004E               1861              BEQ     displayA1A
000021DC  B63C 0002               1862              CMP.B   #two,D3
000021E0  6700 0062               1863              BEQ     displayA2A
000021E4  B63C 0003               1864              CMP.B   #three,D3
000021E8  6700 0076               1865              BEQ     displayA3A
000021EC  B63C 0004               1866              CMP.B   #four,D3
000021F0  6700 008A               1867              BEQ     displayA4A
000021F4  B63C 0005               1868              CMP.B   #five,D3
000021F8  6700 009E               1869              BEQ     displayA5A
000021FC  B63C 0006               1870              CMP.B   #six,D3
00002200  6700 00B2               1871              BEQ     displayA6A
00002204  B63C 0007               1872              CMP.B   #seven,D3
00002208  6700 00C6               1873              BEQ     displayA7A
0000220C                          1874              
0000220C  43F9 00002716           1875  displayA0A  LEA         dispA0, A1          ; Display space
00002212  103C 000E               1876              MOVE.B      #14, D0             ; command for trap call to display message
00002216  4E4F                    1877              TRAP        #15                 ; trap call
00002218  43F9 0000267B           1878              LEA         clPer, A1           ; Display space
0000221E  103C 000E               1879              MOVE.B      #14, D0             ; command for trap call to display message
00002222  4E4F                    1880              TRAP        #15                 ; trap call
00002224  6000 043C               1881              BRA         endSUB              ; go to the end of the subroutine
00002228                          1882              
00002228  43F9 00002719           1883  displayA1A  LEA         dispA1, A1          ; Display space
0000222E  103C 000E               1884              MOVE.B      #14, D0             ; command for trap call to display message
00002232  4E4F                    1885              TRAP        #15                 ; trap call
00002234  43F9 0000267B           1886              LEA         clPer, A1           ; Display space
0000223A  103C 000E               1887              MOVE.B      #14, D0             ; command for trap call to display message
0000223E  4E4F                    1888              TRAP        #15                 ; trap call
00002240  6000 0420               1889              BRA         endSUB              ; go to the end of the subroutine
00002244                          1890  
00002244  43F9 0000271C           1891  displayA2A  LEA         dispA2, A1          ; Display space
0000224A  103C 000E               1892              MOVE.B      #14, D0             ; command for trap call to display message
0000224E  4E4F                    1893              TRAP        #15                 ; trap call
00002250  43F9 0000267B           1894              LEA         clPer, A1           ; Display space
00002256  103C 000E               1895              MOVE.B      #14, D0             ; command for trap call to display message
0000225A  4E4F                    1896              TRAP        #15                 ; trap call
0000225C  6000 0404               1897              BRA         endSUB              ; go to the end of the subroutine
00002260                          1898  
00002260  43F9 0000271F           1899  displayA3A  LEA         dispA3, A1          ; Display space
00002266  103C 000E               1900              MOVE.B      #14, D0             ; command for trap call to display message
0000226A  4E4F                    1901              TRAP        #15                 ; trap call
0000226C  43F9 0000267B           1902              LEA         clPer, A1           ; Display space
00002272  103C 000E               1903              MOVE.B      #14, D0             ; command for trap call to display message
00002276  4E4F                    1904              TRAP        #15                 ; trap call
00002278  6000 03E8               1905              BRA         endSUB              ; go to the end of the subroutine
0000227C                          1906  
0000227C  43F9 00002722           1907  displayA4A  LEA         dispA4, A1          ; Display space
00002282  103C 000E               1908              MOVE.B      #14, D0             ; command for trap call to display message
00002286  4E4F                    1909              TRAP        #15                 ; trap call
00002288  43F9 0000267B           1910              LEA         clPer, A1           ; Display space
0000228E  103C 000E               1911              MOVE.B      #14, D0             ; command for trap call to display message
00002292  4E4F                    1912              TRAP        #15                 ; trap call
00002294  6000 03CC               1913              BRA         endSUB              ; go to the end of the subroutine
00002298                          1914  
00002298  43F9 00002725           1915  displayA5A  LEA         dispA5, A1          ; Display space
0000229E  103C 000E               1916              MOVE.B      #14, D0             ; command for trap call to display message
000022A2  4E4F                    1917              TRAP        #15                 ; trap call
000022A4  43F9 0000267B           1918              LEA         clPer, A1           ; Display space
000022AA  103C 000E               1919              MOVE.B      #14, D0             ; command for trap call to display message
000022AE  4E4F                    1920              TRAP        #15                 ; trap call
000022B0  6000 03B0               1921              BRA         endSUB              ; go to the end of the subroutine
000022B4                          1922  
000022B4  43F9 00002728           1923  displayA6A  LEA         dispA6, A1          ; Display space
000022BA  103C 000E               1924              MOVE.B      #14, D0             ; command for trap call to display message
000022BE  4E4F                    1925              TRAP        #15                 ; trap call
000022C0  43F9 0000267B           1926              LEA         clPer, A1           ; Display space
000022C6  103C 000E               1927              MOVE.B      #14, D0             ; command for trap call to display message
000022CA  4E4F                    1928              TRAP        #15                 ; trap call
000022CC  6000 0394               1929              BRA         endSUB              ; go to the end of the subroutine
000022D0                          1930  
000022D0  43F9 0000272B           1931  displayA7A  LEA         dispA7, A1          ; Display space
000022D6  103C 000E               1932              MOVE.B      #14, D0             ; command for trap call to display message
000022DA  4E4F                    1933              TRAP        #15                 ; trap call
000022DC  43F9 0000267B           1934              LEA         clPer, A1           ; Display space
000022E2  103C 000E               1935              MOVE.B      #14, D0             ; command for trap call to display message
000022E6  4E4F                    1936              TRAP        #15                 ; trap call
000022E8  6000 0378               1937              BRA         endSUB              ; go to the end of the subroutine
000022EC                          1938              
000022EC                          1939  ***********************************************************************************************************
000022EC                          1940  * Addr Postincrement
000022EC                          1941              
000022EC  43F9 00002679           1942  pAddrPost   LEA         opPer, A1           ; Display space
000022F2  103C 000E               1943              MOVE.B      #14, D0             ; command for trap call to display message
000022F6  4E4F                    1944              TRAP        #15                 ; trap call
000022F8                          1945              
000022F8  B63C 0000               1946              CMP.B   #zero,D3
000022FC  6700 003A               1947              BEQ     displayA0P
00002300  B63C 0001               1948              CMP.B   #one,D3
00002304  6700 005A               1949              BEQ     displayA1P
00002308  B63C 0002               1950              CMP.B   #two,D3
0000230C  6700 007A               1951              BEQ     displayA2P
00002310  B63C 0003               1952              CMP.B   #three,D3
00002314  6700 009A               1953              BEQ     displayA3P
00002318  B63C 0004               1954              CMP.B   #four,D3
0000231C  6700 00BA               1955              BEQ     displayA4P
00002320  B63C 0005               1956              CMP.B   #five,D3
00002324  6700 00DA               1957              BEQ     displayA5P
00002328  B63C 0006               1958              CMP.B   #six,D3
0000232C  6700 00FA               1959              BEQ     displayA6P
00002330  B63C 0007               1960              CMP.B   #seven,D3
00002334  6700 011A               1961              BEQ     displayA7P
00002338                          1962              
00002338  43F9 00002716           1963  displayA0P  LEA         dispA0, A1          ; Display space
0000233E  103C 000E               1964              MOVE.B      #14, D0             ; command for trap call to display message
00002342  4E4F                    1965              TRAP        #15                 ; trap call
00002344  43F9 0000267B           1966              LEA         clPer, A1           ; Display space
0000234A  103C 000E               1967              MOVE.B      #14, D0             ; command for trap call to display message
0000234E  4E4F                    1968              TRAP        #15                 ; trap call
00002350  43F9 0000267F           1969              LEA         inc, A1             ; Display space
00002356  103C 000E               1970              MOVE.B      #14, D0             ; command for trap call to display message
0000235A  4E4F                    1971              TRAP        #15                 ; trap call
0000235C  6000 0304               1972              BRA         endSUB              ; go to the end of the subroutine
00002360                          1973              
00002360  43F9 00002719           1974  displayA1P  LEA         dispA1, A1          ; Display space
00002366  103C 000E               1975              MOVE.B      #14, D0             ; command for trap call to display message
0000236A  4E4F                    1976              TRAP        #15                 ; trap call
0000236C  43F9 0000267B           1977              LEA         clPer, A1           ; Display space
00002372  103C 000E               1978              MOVE.B      #14, D0             ; command for trap call to display message
00002376  4E4F                    1979              TRAP        #15                 ; trap call
00002378  43F9 0000267F           1980              LEA         inc, A1             ; Display space
0000237E  103C 000E               1981              MOVE.B      #14, D0             ; command for trap call to display message
00002382  4E4F                    1982              TRAP        #15                 ; trap call
00002384  6000 02DC               1983              BRA         endSUB              ; go to the end of the subroutine
00002388                          1984  
00002388  43F9 0000271C           1985  displayA2P  LEA         dispA2, A1          ; Display space
0000238E  103C 000E               1986              MOVE.B      #14, D0             ; command for trap call to display message
00002392  4E4F                    1987              TRAP        #15                 ; trap call
00002394  43F9 0000267B           1988              LEA         clPer, A1           ; Display space
0000239A  103C 000E               1989              MOVE.B      #14, D0             ; command for trap call to display message
0000239E  4E4F                    1990              TRAP        #15                 ; trap call
000023A0  43F9 0000267F           1991              LEA         inc, A1             ; Display space
000023A6  103C 000E               1992              MOVE.B      #14, D0             ; command for trap call to display message
000023AA  4E4F                    1993              TRAP        #15                 ; trap call
000023AC  6000 02B4               1994              BRA         endSUB              ; go to the end of the subroutine
000023B0                          1995  
000023B0  43F9 0000271F           1996  displayA3P  LEA         dispA3, A1          ; Display space
000023B6  103C 000E               1997              MOVE.B      #14, D0             ; command for trap call to display message
000023BA  4E4F                    1998              TRAP        #15                 ; trap call
000023BC  43F9 0000267B           1999              LEA         clPer, A1           ; Display space
000023C2  103C 000E               2000              MOVE.B      #14, D0             ; command for trap call to display message
000023C6  4E4F                    2001              TRAP        #15                 ; trap call
000023C8  43F9 0000267F           2002              LEA         inc, A1             ; Display space
000023CE  103C 000E               2003              MOVE.B      #14, D0             ; command for trap call to display message
000023D2  4E4F                    2004              TRAP        #15                 ; trap call
000023D4  6000 028C               2005              BRA         endSUB              ; go to the end of the subroutine
000023D8                          2006  
000023D8  43F9 00002722           2007  displayA4P  LEA         dispA4, A1          ; Display space
000023DE  103C 000E               2008              MOVE.B      #14, D0             ; command for trap call to display message
000023E2  4E4F                    2009              TRAP        #15                 ; trap call
000023E4  43F9 0000267B           2010              LEA         clPer, A1           ; Display space
000023EA  103C 000E               2011              MOVE.B      #14, D0             ; command for trap call to display message
000023EE  4E4F                    2012              TRAP        #15                 ; trap call
000023F0  43F9 0000267F           2013              LEA         inc, A1             ; Display space
000023F6  103C 000E               2014              MOVE.B      #14, D0             ; command for trap call to display message
000023FA  4E4F                    2015              TRAP        #15                 ; trap call
000023FC  6000 0264               2016              BRA         endSUB              ; go to the end of the subroutine
00002400                          2017  
00002400  43F9 00002725           2018  displayA5P  LEA         dispA5, A1          ; Display space
00002406  103C 000E               2019              MOVE.B      #14, D0             ; command for trap call to display message
0000240A  4E4F                    2020              TRAP        #15                 ; trap call
0000240C  43F9 0000267B           2021              LEA         clPer, A1           ; Display space
00002412  103C 000E               2022              MOVE.B      #14, D0             ; command for trap call to display message
00002416  4E4F                    2023              TRAP        #15                 ; trap call
00002418  43F9 0000267F           2024              LEA         inc, A1             ; Display space
0000241E  103C 000E               2025              MOVE.B      #14, D0             ; command for trap call to display message
00002422  4E4F                    2026              TRAP        #15                 ; trap call
00002424  6000 023C               2027              BRA         endSUB              ; go to the end of the subroutine
00002428                          2028  
00002428  43F9 00002728           2029  displayA6P  LEA         dispA6, A1          ; Display space
0000242E  103C 000E               2030              MOVE.B      #14, D0             ; command for trap call to display message
00002432  4E4F                    2031              TRAP        #15                 ; trap call
00002434  43F9 0000267B           2032              LEA         clPer, A1           ; Display space
0000243A  103C 000E               2033              MOVE.B      #14, D0             ; command for trap call to display message
0000243E  4E4F                    2034              TRAP        #15                 ; trap call
00002440  43F9 0000267F           2035              LEA         inc, A1             ; Display space
00002446  103C 000E               2036              MOVE.B      #14, D0             ; command for trap call to display message
0000244A  4E4F                    2037              TRAP        #15                 ; trap call
0000244C  6000 0214               2038              BRA         endSUB              ; go to the end of the subroutine
00002450                          2039  
00002450  43F9 0000272B           2040  displayA7P  LEA         dispA7, A1          ; Display space
00002456  103C 000E               2041              MOVE.B      #14, D0             ; command for trap call to display message
0000245A  4E4F                    2042              TRAP        #15                 ; trap call
0000245C  43F9 0000267B           2043              LEA         clPer, A1           ; Display space
00002462  103C 000E               2044              MOVE.B      #14, D0             ; command for trap call to display message
00002466  4E4F                    2045              TRAP        #15                 ; trap call
00002468  43F9 0000267F           2046              LEA         inc, A1             ; Display space
0000246E  103C 000E               2047              MOVE.B      #14, D0             ; command for trap call to display message
00002472  4E4F                    2048              TRAP        #15                 ; trap call
00002474  6000 01EC               2049              BRA         endSUB              ; go to the end of the subroutine
00002478                          2050  
00002478                          2051  ***********************************************************************************************************
00002478                          2052  * Addr Postdecrement
00002478                          2053  
00002478  43F9 0000267D           2054  pAddrDec    LEA         dec, A1             ; Display space
0000247E  103C 000E               2055              MOVE.B      #14, D0             ; command for trap call to display message
00002482  4E4F                    2056              TRAP        #15                 ; trap call
00002484                          2057              
00002484  43F9 00002679           2058              LEA         opPer, A1           ; Display space
0000248A  103C 000E               2059              MOVE.B      #14, D0             ; command for trap call to display message
0000248E  4E4F                    2060              TRAP        #15                 ; trap call
00002490                          2061              
00002490  B63C 0000               2062              CMP.B   #zero,D3
00002494  6700 003A               2063              BEQ     displayA0D
00002498  B63C 0001               2064              CMP.B   #one,D3
0000249C  6700 004E               2065              BEQ     displayA1D
000024A0  B63C 0002               2066              CMP.B   #two,D3
000024A4  6700 0062               2067              BEQ     displayA2D
000024A8  B63C 0003               2068              CMP.B   #three,D3
000024AC  6700 0076               2069              BEQ     displayA3D
000024B0  B63C 0004               2070              CMP.B   #four,D3
000024B4  6700 008A               2071              BEQ     displayA4D
000024B8  B63C 0005               2072              CMP.B   #five,D3
000024BC  6700 009E               2073              BEQ     displayA5D
000024C0  B63C 0006               2074              CMP.B   #six,D3
000024C4  6700 00B2               2075              BEQ     displayA6D
000024C8  B63C 0007               2076              CMP.B   #seven,D3
000024CC  6700 00C6               2077              BEQ     displayA7D
000024D0                          2078              
000024D0  43F9 00002716           2079  displayA0D  LEA         dispA0, A1          ; Display space
000024D6  103C 000E               2080              MOVE.B      #14, D0             ; command for trap call to display message
000024DA  4E4F                    2081              TRAP        #15                 ; trap call
000024DC  43F9 0000267B           2082              LEA         clPer, A1           ; Display space
000024E2  103C 000E               2083              MOVE.B      #14, D0             ; command for trap call to display message
000024E6  4E4F                    2084              TRAP        #15                 ; trap call
000024E8  6000 0178               2085              BRA         endSUB              ; go to the end of the subroutine
000024EC                          2086              
000024EC  43F9 00002719           2087  displayA1D  LEA         dispA1, A1          ; Display space
000024F2  103C 000E               2088              MOVE.B      #14, D0             ; command for trap call to display message
000024F6  4E4F                    2089              TRAP        #15                 ; trap call
000024F8  43F9 0000267B           2090              LEA         clPer, A1           ; Display space
000024FE  103C 000E               2091              MOVE.B      #14, D0             ; command for trap call to display message
00002502  4E4F                    2092              TRAP        #15                 ; trap call
00002504  6000 015C               2093              BRA         endSUB              ; go to the end of the subroutine
00002508                          2094  
00002508  43F9 0000271C           2095  displayA2D  LEA         dispA2, A1          ; Display space
0000250E  103C 000E               2096              MOVE.B      #14, D0             ; command for trap call to display message
00002512  4E4F                    2097              TRAP        #15                 ; trap call
00002514  43F9 0000267B           2098              LEA         clPer, A1           ; Display space
0000251A  103C 000E               2099              MOVE.B      #14, D0             ; command for trap call to display message
0000251E  4E4F                    2100              TRAP        #15                 ; trap call
00002520  6000 0140               2101              BRA         endSUB              ; go to the end of the subroutine
00002524                          2102  
00002524  43F9 0000271F           2103  displayA3D  LEA         dispA3, A1          ; Display space
0000252A  103C 000E               2104              MOVE.B      #14, D0             ; command for trap call to display message
0000252E  4E4F                    2105              TRAP        #15                 ; trap call
00002530  43F9 0000267B           2106              LEA         clPer, A1           ; Display space
00002536  103C 000E               2107              MOVE.B      #14, D0             ; command for trap call to display message
0000253A  4E4F                    2108              TRAP        #15                 ; trap call
0000253C  6000 0124               2109              BRA         endSUB              ; go to the end of the subroutine
00002540                          2110  
00002540  43F9 00002722           2111  displayA4D  LEA         dispA4, A1          ; Display space
00002546  103C 000E               2112              MOVE.B      #14, D0             ; command for trap call to display message
0000254A  4E4F                    2113              TRAP        #15                 ; trap call
0000254C  43F9 0000267B           2114              LEA         clPer, A1           ; Display space
00002552  103C 000E               2115              MOVE.B      #14, D0             ; command for trap call to display message
00002556  4E4F                    2116              TRAP        #15                 ; trap call
00002558  6000 0108               2117              BRA         endSUB              ; go to the end of the subroutine
0000255C                          2118  
0000255C  43F9 00002725           2119  displayA5D  LEA         dispA5, A1          ; Display space
00002562  103C 000E               2120              MOVE.B      #14, D0             ; command for trap call to display message
00002566  4E4F                    2121              TRAP        #15                 ; trap call
00002568  43F9 0000267B           2122              LEA         clPer, A1           ; Display space
0000256E  103C 000E               2123              MOVE.B      #14, D0             ; command for trap call to display message
00002572  4E4F                    2124              TRAP        #15                 ; trap call
00002574  6000 00EC               2125              BRA         endSUB              ; go to the end of the subroutine
00002578                          2126  
00002578  43F9 00002728           2127  displayA6D  LEA         dispA6, A1          ; Display space
0000257E  103C 000E               2128              MOVE.B      #14, D0             ; command for trap call to display message
00002582  4E4F                    2129              TRAP        #15                 ; trap call
00002584  43F9 0000267B           2130              LEA         clPer, A1           ; Display space
0000258A  103C 000E               2131              MOVE.B      #14, D0             ; command for trap call to display message
0000258E  4E4F                    2132              TRAP        #15                 ; trap call
00002590  6000 00D0               2133              BRA         endSUB              ; go to the end of the subroutine
00002594                          2134  
00002594  43F9 0000272B           2135  displayA7D  LEA         dispA7, A1          ; Display space
0000259A  103C 000E               2136              MOVE.B      #14, D0             ; command for trap call to display message
0000259E  4E4F                    2137              TRAP        #15                 ; trap call
000025A0  43F9 0000267B           2138              LEA         clPer, A1           ; Display space
000025A6  103C 000E               2139              MOVE.B      #14, D0             ; command for trap call to display message
000025AA  4E4F                    2140              TRAP        #15                 ; trap call
000025AC  6000 00B4               2141              BRA         endSUB              ; go to the end of the subroutine
000025B0                          2142  
000025B0                          2143  
000025B0                          2144  ***********************************************************************************************************
000025B0                          2145  * Absolute Address
000025B0  B63C 0000               2146  pHex        CMP.B       #zero, D3
000025B4  6700 0012               2147              BEQ         AbsShort
000025B8  B63C 0001               2148              CMP.B       #one, D3
000025BC  6700 003C               2149              BEQ         AbsLong
000025C0  B63C 0004               2150              CMP.B       #four, D3
000025C4  6700 0066               2151              BEQ         DispImm
000025C8                          2152              
000025C8  43F9 00002679           2153  AbsShort    LEA         opPer, A1           ; Display space
000025CE  103C 000E               2154              MOVE.B      #14, D0             ; command for trap call to display message
000025D2  4E4F                    2155              TRAP        #15                 ; trap call
000025D4                          2156              
000025D4  43F9 00002675           2157              LEA         dispHex, A1         ; Display space
000025DA  103C 000E               2158              MOVE.B      #14, D0             ; command for trap call to display message
000025DE  4E4F                    2159              TRAP        #15                 ; trap call
000025E0                          2160              
000025E0  4241                    2161              CLR         D1
000025E2  3218                    2162              MOVE.W      (A0)+, D1
000025E4                          2163              
000025E4  103C 0003               2164              MOVE.B      #3, D0
000025E8  4E4F                    2165              TRAP        #15
000025EA                          2166              
000025EA  43F9 0000267B           2167              LEA         clPer, A1           ; Display space
000025F0  103C 000E               2168              MOVE.B      #14, D0             ; command for trap call to display message
000025F4  4E4F                    2169              TRAP        #15                 ; trap call
000025F6                          2170              
000025F6  6000 006A               2171              BRA         endSub
000025FA                          2172              
000025FA  43F9 00002679           2173  AbsLong     LEA         opPer, A1           ; Display space
00002600  103C 000E               2174              MOVE.B      #14, D0             ; command for trap call to display message
00002604  4E4F                    2175              TRAP        #15                 ; trap call
00002606                          2176              
00002606  43F9 00002675           2177              LEA         dispHex, A1         ; Display space
0000260C  103C 000E               2178              MOVE.B      #14, D0             ; command for trap call to display message
00002610  4E4F                    2179              TRAP        #15                 ; trap call
00002612                          2180              
00002612  4241                    2181              CLR         D1
00002614  2218                    2182              MOVE.L      (A0)+, D1
00002616                          2183              
00002616  103C 0003               2184              MOVE.B      #3, D0
0000261A  4E4F                    2185              TRAP        #15
0000261C                          2186              
0000261C  43F9 0000267B           2187              LEA         clPer, A1           ; Display space
00002622  103C 000E               2188              MOVE.B      #14, D0             ; command for trap call to display message
00002626  4E4F                    2189              TRAP        #15                 ; trap call
00002628                          2190              
00002628  6000 0038               2191              BRA         endSub
0000262C                          2192  
0000262C  43F9 00002673           2193  DispImm     LEA         hashTag, A1         ; Display space
00002632  103C 000E               2194              MOVE.B      #14, D0             ; command for trap call to display message
00002636  4E4F                    2195              TRAP        #15                 ; trap call
00002638                          2196              
00002638  4241                    2197              CLR         D1
0000263A  3218                    2198              MOVE.W      (A0)+, D1
0000263C                          2199  
0000263C  43F9 00002675           2200              LEA         dispHex, A1         ; Display space
00002642  103C 000E               2201              MOVE.B      #14, D0             ; command for trap call to display message
00002646  4E4F                    2202              TRAP        #15                 ; trap call
00002648                          2203              
00002648  103C 0003               2204              MOVE.B      #3, D0
0000264C  4E4F                    2205              TRAP        #15
0000264E                          2206  
0000264E  6000 0012               2207              BRA         endSub
00002652                          2208  
00002652                          2209  invalid
00002652                          2210  
00002652  43F9 00002748           2211              LEA         inv, A1         ; Display space
00002658  103C 000E               2212              MOVE.B      #14, D0             ; command for trap call to display message
0000265C  4E4F                    2213              TRAP        #15                 ; trap call
0000265E                          2214              
0000265E  6000 0008               2215              BRA         endProg
00002662                          2216  
00002662                          2217  endSUB
00002662                          2218          
00002662  4CDF 7EFF               2219          MOVEM.L  (SP)+, D0-D7/A1-A6
00002666  4E75                    2220          RTS
00002668                          2221  
00002668                          2222  ***********************************************************************************************************
00002668                          2223  ***********************************************************************************************************
00002668                          2224  ***********************************************************************************************************
00002668                          2225  
00002668                          2226  printInvalid
00002668                          2227  endPROG    
00002668                          2228  
00002668  FFFF FFFF               2229      SIMHALT                             ; halt simulator
0000266C                          2230  
0000266C= 20 0D 0A 00             2231  newLine     DC.B    ' ', CR, LF, 0
00002670= 20 20 00                2232  space       DC.B    '  ', 0
00002673                          2233  
00002673= 23 00                   2234  hashTag     DC.B    '#', 0
00002675= 24 00                   2235  dispHex     DC.B    '$', 0
00002677= 2C 00                   2236  comma       DC.B    ',', 0
00002679                          2237  
00002679= 28 00                   2238  opPer       DC.B    '(', 0
0000267B= 29 00                   2239  clPer       DC.B    ')', 0
0000267D= 2D 00                   2240  dec         DC.B    '-', 0
0000267F= 2B 00                   2241  inc         DC.B    '+', 0
00002681= 2F 00                   2242  slash       DC.B    '/', 0
00002683                          2243  
00002683= 28 53 50 29 00          2244  stack       DC.B    '(SP)', 0
00002688                          2245  
00002688= 4F 52 49 00             2246  ORImatch    DC.B    'ORI', 0
0000268C= 43 4D 50 49 00          2247  CMPImatch   DC.B    'CMPI', 0
00002691= 42 43 4C 52 00          2248  BCLRmatch   DC.B    'BCLR', 0
00002696= 4D 4F 56 45 00          2249  MOVEmatch   DC.B    'MOVE', 0
0000269B= 4D 4F 56 45 41 00       2250  MOVEAmatch  DC.B    'MOVEA', 0
000026A1= 4E 45 47 00             2251  NEGmatch    DC.B    'NEG', 0
000026A5= 52 54 53 00             2252  RTSmatch    DC.B    'RTS', 0
000026A9= 4A 53 52 00             2253  JSRmatch    DC.B    'JSR', 0
000026AD= 4D 4F 56 45 4D 00       2254  MOVEMmatch  DC.B    'MOVEM', 0
000026B3= 4C 45 41 00             2255  LEAmatch    DC.B    'LEA', 0
000026B7= 53 55 42 51 00          2256  SUBQmatch   DC.B    'SUBQ', 0
000026BC= 42 52 41 00             2257  BRAmatch    DC.B    'BRA', 0
000026C0= 42 43 53 00             2258  BCSmatch    DC.B    'BCS', 0
000026C4= 42 56 43 00             2259  BVCmatch    DC.B    'BVC', 0
000026C8= 42 47 45 00             2260  BGEmatch    DC.B    'BGE', 0
000026CC= 42 4C 54 00             2261  BLTmatch    DC.B    'BLT', 0
000026D0= 44 49 56 53 00          2262  DIVSmatch   DC.B    'DIVS', 0
000026D5= 4F 52 00                2263  ORmatch     DC.B    'OR', 0
000026D8= 53 55 42 00             2264  SUBmatch    DC.B    'SUB', 0
000026DC= 45 4F 52 00             2265  EORmatch    DC.B    'EOR', 0
000026E0= 43 4D 50 00             2266  CMPmatch    DC.B    'CMP', 0
000026E4= 4D 55 4C 53 00          2267  MULSmatch   DC.B    'MULS', 0
000026E9= 41 44 44 00             2268  ADDmatch    DC.B    'ADD', 0
000026ED= 41 44 44 41 00          2269  ADDAmatch   DC.B    'ADDA', 0
000026F2= 4C 53 52 00             2270  LSRmatch    DC.B    'LSR', 0
000026F6= 4C 53 4C 00             2271  LSLmatch    DC.B    'LSL', 0
000026FA= 41 53 52 00             2272  ASRmatch    DC.B    'ASR', 0
000026FE= 41 53 4C 00             2273  ASLmatch    DC.B    'ASL', 0
00002702= 52 4F 52 00             2274  RORmatch    DC.B    'ROR', 0
00002706= 52 4F 4C 00             2275  ROLmatch    DC.B    'ROL', 0
0000270A                          2276   
0000270A= 2E 42 00                2277  dispByte    DC.B    '.B', 0
0000270D= 2E 57 00                2278  dispWord    DC.B    '.W', 0
00002710= 2E 4C 00                2279  dispLong    DC.B    '.L', 0
00002713                          2280  
00002713= 41 6E 00                2281  dispAn      DC.B    'An', 0
00002716= 41 30 00                2282  dispA0      DC.B    'A0', 0
00002719= 41 31 00                2283  dispA1      DC.B    'A1', 0
0000271C= 41 32 00                2284  dispA2      DC.B    'A2', 0
0000271F= 41 33 00                2285  dispA3      DC.B    'A3', 0
00002722= 41 34 00                2286  dispA4      DC.B    'A4', 0
00002725= 41 35 00                2287  dispA5      DC.B    'A5', 0
00002728= 41 36 00                2288  dispA6      DC.B    'A6', 0
0000272B= 41 37 00                2289  dispA7      DC.B    'A7', 0
0000272E                          2290  
0000272E= 44 00                   2291  dispD       DC.B    'D',  0
00002730= 44 30 00                2292  dispD0      DC.B    'D0', 0
00002733= 44 31 00                2293  dispD1      DC.B    'D1', 0
00002736= 44 32 00                2294  dispD2      DC.B    'D2', 0
00002739= 44 33 00                2295  dispD3      DC.B    'D3', 0
0000273C= 44 34 00                2296  dispD4      DC.B    'D4', 0
0000273F= 44 35 00                2297  dispD5      DC.B    'D5', 0
00002742= 44 36 00                2298  dispD6      DC.B    'D6', 0
00002745= 44 37 00                2299  dispD7      DC.B    'D7', 0  
00002748                          2300  
00002748                          2301  
00002748= 49 6E 76 61 6C 69 ...   2302  inv      DC.B    'Invalid', 0  
00002750                          2303             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             25FA
ABSSHORT            25C8
ADDAMATCH           26ED
ADDMATCH            26E9
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ADDR0CONT           1E5C
ADDR1CONT           1E9C
ADDR2CONT           1EDC
ADDR3CONT           1F1C
ADDR4CONT           1F5C
ADDR5CONT           1F9C
ADDR6CONT           1FDC
ADDRREG0            1E3C
ADDRREG1            1E6C
ADDRREG2            1EAC
ADDRREG3            1EEC
ADDRREG4            1F2C
ADDRREG5            1F6C
ADDRREG6            1FAC
ADDRREG7            1FEC
ASLMATCH            26FE
ASRMATCH            26FA
BCLRMATCH           2691
BCSMATCH            26C0
BGEMATCH            26C8
BLTMATCH            26CC
BRAEIGHT            1118
BRAELEVEN           111C
BRAFIVE             10E8
BRAFOUR             10CC
BRAFOURTEEN         1120
BRAMATCH            26BC
BRANINE             1118
BRAONE              10C0
BRASIX              10EC
BRATHIRTEEN         1120
BRATHREE            10C8
BRATWELVE           111C
BRATWO              10C4
BRAZERO             1090
BVCMATCH            26C4
CHECKDR             1B1C
CLPER               267B
CMPIMATCH           268C
CMPMATCH            26E0
COMMA               2677
CR                  D
DATAREG0            1BE6
DATAREG1            1C16
DATAREG2            1C56
DATAREG3            1C96
DATAREG4            1CD6
DATAREG5            1D16
DATAREG6            1D56
DATAREG7            1D96
DEC                 267D
DISPA0              2716
DISPA1              2719
DISPA2              271C
DISPA3              271F
DISPA4              2722
DISPA5              2725
DISPA6              2728
DISPA7              272B
DISPAN              2713
DISPBYTE            270A
DISPD               272E
DISPD0              2730
DISPD1              2733
DISPD2              2736
DISPD3              2739
DISPD4              273C
DISPD5              273F
DISPD6              2742
DISPD7              2745
DISPHEX             2675
DISPIMM             262C
DISPLAYA0           2140
DISPLAYA0A          220C
DISPLAYA0D          24D0
DISPLAYA0P          2338
DISPLAYA1           2150
DISPLAYA1A          2228
DISPLAYA1D          24EC
DISPLAYA1P          2360
DISPLAYA2           2160
DISPLAYA2A          2244
DISPLAYA2D          2508
DISPLAYA2P          2388
DISPLAYA3           2170
DISPLAYA3A          2260
DISPLAYA3D          2524
DISPLAYA3P          23B0
DISPLAYA4           2180
DISPLAYA4A          227C
DISPLAYA4D          2540
DISPLAYA4P          23D8
DISPLAYA5           2190
DISPLAYA5A          2298
DISPLAYA5D          255C
DISPLAYA5P          2400
DISPLAYA6           21A0
DISPLAYA6A          22B4
DISPLAYA6D          2578
DISPLAYA6P          2428
DISPLAYA7           21B0
DISPLAYA7A          22D0
DISPLAYA7D          2594
DISPLAYA7P          2450
DISPLAYD0           2080
DISPLAYD1           2090
DISPLAYD2           20A0
DISPLAYD3           20B0
DISPLAYD4           20C0
DISPLAYD5           20D0
DISPLAYD6           20E0
DISPLAYD7           20F0
DISPLONG            2710
DISPWORD            270D
DIVSMATCH           26D0
EIGHT               8
ELEVEN              B
ENDMOVE             1FFC
ENDMOVE1            2002
ENDPROG             2668
ENDSUB              2662
EORMATCH            26DC
FIFTEEN             F
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             2673
INC                 267F
INV                 2748
INVALID             2652
JSRMATCH            26A9
LEAMATCH            26B3
LF                  A
LOOP                100C
LSLMATCH            26F6
LSRMATCH            26F2
MASK0               0
MASK1               1
MASK2               2
MASK3               4
MASK4               8
MASK5               10
MASK6               20
MASK7               40
MASK8               80
MASKA               5
MASKB               A
MASKC               14
MASKD               28
MASKE               50
MASKF               A0
MOVEAMATCH          269B
MOVEMATCH           2696
MOVEMBRA            1AD0
MOVEML              1B00
MOVEMMATCH          26AD
MOVEMW              1AE4
MULSMATCH           26E4
NEGMATCH            26A1
NEWLINE             266C
NINE                9
ONE                 1
OPASL               1A88
OPASR               1A94
OPBCLR              144A
OPBCS               1A40
OPBGE               1A58
OPBLT               1A64
OPBRA               1A28
OPBVC               1A4C
OPCMPI              12BC
OPCMPIB             12DE
OPCMPIL             13D4
OPCMPIW             1350
OPDYNBCLR           14AE
OPJSR               189A
OPLEA               199C
OPLSL               1AA0
OPLSR               1AAC
OPMOVEAL            1634
OPMOVEAW            172A
OPMOVEB             151C
OPMOVEL             15A0
OPMOVEM             1912
OPMOVEMLEA          18F6
OPMOVEW             169C
OPMULS              1A7C
OPNEG               1792
OPNEGB              17C0
OPNEGL              1800
OPNEGW              1840
OPORI               1154
OPORIB              1182
OPORIL              124E
OPORIW              11E8
OPPER               2679
OPROL               1AB8
OPROR               1AC4
OPRTS               18DA
OPRTSJSR            1880
OPSUB               1A70
OPSUBQ              1A1C
ORIMATCH            2688
ORMATCH             26D5
PADDRDEC            2478
PADDRDIR            21C0
PADDRPOST           22EC
PADDRREG            2100
PDATAREG            2040
PHEX                25B0
PRINTEA             2008
PRINTINVALID        2668
PRINTMEM            1DA6
PRINTMEMNOW         1DAA
PRINTREGMEM         1B5A
PRINTSTACK          1B32
REG0CONT            1C06
REG1CONT            1C46
REG2CONT            1C86
REG3CONT            1CC6
REG4CONT            1D06
REG5CONT            1D46
REG6CONT            1D86
ROLMATCH            2706
RORMATCH            2702
RTSMATCH            26A5
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SKIPPRINTEA         198C
SLASH               2681
SPACE               2670
STACK               2683
START               1000
SUBMATCH            26D8
SUBQMATCH           26B7
TEST_END            3100
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
