00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 2014-12-06 21:10:59

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Motorola 68k Disassembler
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =00003009                 11  test_end    EQU     $00003009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00003000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00003009             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 134C                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 0084                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0080                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 0094                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0090                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00B4                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00C2                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00BE                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00D0                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 00CC                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 00C4                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                102          AND.B       #secNib, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 03CA                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 0516                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                108          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 0680                109          BEQ         opBCLR
000010A6  C47C 0001                110          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                111          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 06D8                112          BEQ         opDynBCLR
000010B2  6000 12AC                113          BRA         printInvalid
000010B6                           114          
000010B6                           115          
000010B6  6000 073E                116  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           117  
000010BA  6000 07BE                118  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BE                           119  
000010BE                           120  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BE                           121  
000010BE  6000 08B4                122          BRA         opMOVEW
000010C2                           123  
000010C2  4242                     124  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010C4  1401                     125          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010C6  C43C 000F                126          AND.B       #secNib, D2             ; set first nibble to 0
000010CA                           127   
000010CA  B43C 0004                128          CMP.B       #four, D2           ; compare second nibble to 4
000010CE  6700 099E                129          BEQ         opNEG               ; branch to NEG method
000010D2  B43C 000E                130          CMP.B       #fourteen, D2       ; compare second nibble to E
000010D6  6700 0A84                131          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010DA  6000 0AF6                132          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010DE                           133  
000010DE  6000 0B26                134  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010E2                           135  
000010E2  4242                     136  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010E4  1401                     137          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010E6  C43C 000F                138          AND.B       #$0F, D2             ; set first nibble to 0
000010EA                           139   
000010EA  B43C 0000                140          CMP.B       #zero, D2           ; compare second nibble to 0
000010EE  6700 0B22                141          BEQ         opBRA               ; branch to BRA method
000010F2  B43C 0005                142          CMP.B       #five, D2           ; compare second nibble to 5
000010F6  6700 0B52                143          BEQ         opBCS               ; branch to BCS method
000010FA  B43C 0008                144          CMP.B       #eight, D2          ; compare second nibble to 8
000010FE  6700 0B56                145          BEQ         opBVC               ; branch to BCS method
00001102  B43C 000C                146          CMP.B       #twelve, D2         ; compare second nibble to 12
00001106  6700 0B5A                147          BEQ         opBGE               ; branch to BGE method
0000110A  6000 0B62                148          BRA         opBLT               ; otherwise, branch to BLT method
0000110E                           149  
0000110E                           150  braEight                                ; there are two opCodes available DIVS, or OR
0000110E  4242                     151              CLR     D2
00001110  1401                     152              MOVE.B  D1,D2
00001112  C438 000F                153              AND.B   $0F,D2
00001116  EE42                     154              ASR     #seven,D2
00001118  B43C 0007                155              CMP.B   #seven,D2
0000111C  6700 0152                156              BEQ     opDIVS              ; If bits 8 - 6 are equal to 7, we have DIVS
00001120  6000 005E                157              BRA     opOR                ; else opcode is OR
00001124                           158  
00001124  6000 0B54                159  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
00001128                           160  
00001128                           161  braEleven                               ; there are two opCodes available EOR, or CMP
00001128  4242                     162              CLR     D2
0000112A  E141                     163              ASL     #8,D1
0000112C  1218                     164              MOVE.B  (A0)+,D1
0000112E  3401                     165              MOVE.W  D1,D2
00001130  EC42                     166              ASR     #six,D2
00001132  C47C 0007                167              AND     #$07,D2
00001136  B43C 0003                168              CMP.B   #three,D2
0000113A  6D00 0230                169              BLT     opCMP               ; If opmode bits are less than 3, we have CMP
0000113E  6000 0140                170              BRA     opEOR               ; Else its EOR
00001142                           171              
00001142                           172  
00001142  6000 0B6A                173  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
00001146                           174    
00001146                           175  braThirteen ; there are two opCodes available ADD, or ADDA
00001146                           176  
00001146  4242                     177  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
00001148  1401                     178              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000114A  C438 000F                179              AND.B       $0F, D2             ; set first nibble to 0
0000114E                           180   
0000114E  B43C 0000                181              CMP.B       #zero, D2           ; compare second nibble to 0
00001152  6700 0B72                182              BEQ         opASR               ; branch to ASR method
00001156  B43C 0001                183              CMP.B       #one, D2            ; compare second nibble to 1
0000115A  6700 0B5E                184              BEQ         opASL               ; branch to ASL method
0000115E  B43C 0002                185              CMP.B       #two, D2            ; compare second nibble to 2
00001162  6700 0B7A                186              BEQ         opLSR               ; branch to LSR method
00001166  B43C 0003                187              CMP.B       #three, D2          ; compare second nibble to 3
0000116A  6700 0B66                188              BEQ         opLSL               ; branch to LSL method
0000116E  B43C 0006                189              CMP.B       #six, D2            ; compare second nibble to 6
00001172  6700 0B82                190              BEQ         opROR               ; branch to ROR method
00001176  6000 0B72                191              BRA         opROL               ; otherwise, branch to ROL method
0000117A                           192              
0000117A                           193  
0000117A                           194  
0000117A                           195  ***********************************************************************************************************
0000117A                           196  *
0000117A                           197  *               BCC OPCODE
0000117A                           198  *
0000117A                           199  ***********************************************************************************************************
0000117A                           200          
0000117A  4242                     201  opBCC       CLR     D2
0000117C                           202              ; Determine Condition (4 bits)
0000117C                           203              ; Determine Displacement AFTER condition (8 bits)
0000117C  6000 FE8E                204              BRA     LOOP
00001180                           205              
00001180                           206              
00001180                           207  ***********************************************************************************************************
00001180                           208  *
00001180                           209  *               OR OPCODE
00001180                           210  *
00001180                           211  ***********************************************************************************************************
00001180                           212  
00001180  43F9 000023C6            213  opOR        LEA         ORmatch,A1
00001186  103C 000E                214              MOVE.B      #14,D0
0000118A  4E4F                     215              TRAP        #15
0000118C                           216              
0000118C  4242                     217              CLR         D2
0000118E                           218              
0000118E  1218                     219              MOVE.B      (A0)+,D1
00001190  1401                     220              MOVE.B      D1,D2
00001192  EE42                     221              ASR         #seven,D2           ; Move bits 7 places over to find opmode
00001194  B43C 0004                222              CMP.B       #four,D2
00001198  6700 0012                223              BEQ         opORB               ; Byte in opmode
0000119C  B43C 0005                224              CMP.B       #five,D2
000011A0  6700 004A                225              BEQ         opORW               ; Word in opmode
000011A4  B43C 0006                226              CMP.B       #six,D2
000011A8  6700 0082                227              BEQ         opORL               ; Long in opmode
000011AC                           228              
000011AC  43F9 000023FB            229  opORB       LEA         dispByte,A1
000011B2  103C 000E                230              MOVE.B      #14,D0
000011B6  4E4F                     231              TRAP        #15
000011B8                           232              
000011B8  43F9 00002368            233              LEA         space, A1           ; Display space
000011BE  103C 000E                234              MOVE.B      #14, D0             ; command for trap call to display message
000011C2  4E4F                     235              TRAP        #15                 ; trap call
000011C4                           236              
000011C4  4EB9 00001D10            237              JSR         printEA         ; Determines the "left" operand register
000011CA                           238              
000011CA  43F9 0000236F            239              LEA         comma, A1           ; Display space
000011D0  103C 000E                240              MOVE.B      #14, D0             ; command for trap call to display message
000011D4  4E4F                     241              TRAP        #15                 ; trap call
000011D6                           242              
000011D6  4EB9 00001D02            243              JSR         findRege
000011DC                           244              
000011DC  43F9 00002364            245              LEA         newLine,A1
000011E2  103C 000E                246              MOVE.B      #14,D0
000011E6  4E4F                     247              TRAP        #15                ; trap call
000011E8                           248              
000011E8  6000 FE22                249              BRA         LOOP
000011EC                           250              
000011EC                           251              
000011EC  43F9 000023FE            252  opORW       LEA         dispWord,A1
000011F2  103C 000E                253              MOVE.B      #14,D0
000011F6  4E4F                     254              TRAP        #15
000011F8                           255              
000011F8  43F9 00002368            256              LEA         space, A1           ; Display space
000011FE  103C 000E                257              MOVE.B      #14, D0             ; command for trap call to display message
00001202  4E4F                     258              TRAP        #15                 ; trap call
00001204                           259              
00001204  4EB9 00001D10            260              JSR         printEA         ; Determines the "left" operand register
0000120A                           261              
0000120A  43F9 0000236F            262              LEA         comma, A1           ; Display space
00001210  103C 000E                263              MOVE.B      #14, D0             ; command for trap call to display message
00001214  4E4F                     264              TRAP        #15                 ; trap call
00001216                           265              
00001216  4EB9 00001D02            266              JSR         findRege
0000121C                           267              
0000121C  43F9 00002364            268              LEA         newLine,A1
00001222  103C 000E                269              MOVE.B      #14,D0
00001226  4E4F                     270              TRAP        #15                ; trap call
00001228                           271              
00001228  6000 FDE2                272              BRA         LOOP
0000122C                           273              
0000122C  43F9 00002401            274  opORL       LEA         dispLong,A1
00001232  103C 000E                275              MOVE.B      #14,D0
00001236  4E4F                     276              TRAP        #15
00001238                           277              
00001238  43F9 00002368            278              LEA         space, A1           ; Display space
0000123E  103C 000E                279              MOVE.B      #14, D0             ; command for trap call to display message
00001242  4E4F                     280              TRAP        #15                 ; trap call
00001244                           281              
00001244  4EB9 00001D10            282              JSR         printEA         ; Determines the "left" operand register
0000124A                           283              
0000124A  43F9 0000236F            284              LEA         comma, A1           ; Display space
00001250  103C 000E                285              MOVE.B      #14, D0             ; command for trap call to display message
00001254  4E4F                     286              TRAP        #15                 ; trap call
00001256                           287              
00001256  4EB9 00001D02            288              JSR         findRege
0000125C                           289              
0000125C  43F9 00002364            290              LEA         newLine,A1
00001262  103C 000E                291              MOVE.B      #14,D0
00001266  4E4F                     292              TRAP        #15                ; trap call
00001268                           293              
00001268  6000 FDA2                294              BRA         LOOP
0000126C                           295              
0000126C                           296              
0000126C  6000 FD9E                297              BRA     LOOP
00001270                           298              
00001270                           299  ***********************************************************************************************************
00001270                           300  *
00001270                           301  *               DIVS OPCODE
00001270                           302  *
00001270                           303  ***********************************************************************************************************
00001270                           304  
00001270  43F9 000023C1            305  opDIVS      LEA     DIVSmatch,A1
00001276  103C 000E                306              MOVE.B  #14,D0
0000127A  4E4F                     307              TRAP    #15
0000127C                           308      
0000127C  6000 FD8E                309              BRA     LOOP
00001280                           310              
00001280                           311  **********************************************************************************************************
00001280                           312  *
00001280                           313  *               EOR OPCODE
00001280                           314  *
00001280                           315  ***********************************************************************************************************
00001280                           316  
00001280  43F9 000023CD            317  opEOR       LEA         EORmatch,A1
00001286  103C 000E                318              MOVE.B      #14,D0
0000128A  4E4F                     319              TRAP        #15
0000128C                           320              
0000128C  4242                     321              CLR         D2
0000128E                           322              
0000128E  1218                     323              MOVE.B      (A0)+,D1
00001290  1401                     324              MOVE.B      D1,D2
00001292  EE42                     325              ASR         #seven,D2           ; Move bits 7 places over to find opmode
00001294  B43C 0004                326              CMP.B       #four,D2
00001298  6700 0012                327              BEQ         opEORB              ; Byte in opmode
0000129C  B43C 0005                328              CMP.B       #five,D2
000012A0  6700 004A                329              BEQ         opEORW              ; Word in opmode
000012A4  B43C 0006                330              CMP.B       #six,D2
000012A8  6700 0082                331              BEQ         opEORL              ; Long in opmode
000012AC                           332              
000012AC  43F9 000023FB            333  opEORB      LEA         dispByte,A1
000012B2  103C 000E                334              MOVE.B      #14,D0
000012B6  4E4F                     335              TRAP        #15
000012B8                           336              
000012B8  43F9 00002368            337              LEA         space, A1           ; Display space
000012BE  103C 000E                338              MOVE.B      #14, D0             ; command for trap call to display message
000012C2  4E4F                     339              TRAP        #15                 ; trap call
000012C4                           340              
000012C4  4EB9 00001D10            341              JSR         printEA         ; Determines the "left" operand register
000012CA                           342              
000012CA  43F9 0000236F            343              LEA         comma, A1           ; Display space
000012D0  103C 000E                344              MOVE.B      #14, D0             ; command for trap call to display message
000012D4  4E4F                     345              TRAP        #15                 ; trap call
000012D6                           346              
000012D6  4EB9 00001D02            347              JSR         findRege
000012DC                           348              
000012DC  43F9 00002364            349              LEA         newLine,A1
000012E2  103C 000E                350              MOVE.B      #14,D0
000012E6  4E4F                     351              TRAP        #15                ; trap call
000012E8                           352              
000012E8  6000 FD22                353              BRA         LOOP
000012EC                           354              
000012EC                           355              
000012EC  43F9 000023FE            356  opEORW      LEA         dispWord,A1
000012F2  103C 000E                357              MOVE.B      #14,D0
000012F6  4E4F                     358              TRAP        #15
000012F8                           359              
000012F8  43F9 00002368            360              LEA         space, A1           ; Display space
000012FE  103C 000E                361              MOVE.B      #14, D0             ; command for trap call to display message
00001302  4E4F                     362              TRAP        #15                 ; trap call
00001304                           363              
00001304  4EB9 00001D10            364              JSR         printEA         ; Determines the "left" operand register
0000130A                           365              
0000130A  43F9 0000236F            366              LEA         comma, A1           ; Display space
00001310  103C 000E                367              MOVE.B      #14, D0             ; command for trap call to display message
00001314  4E4F                     368              TRAP        #15                 ; trap call
00001316                           369              
00001316  4EB9 00001D02            370              JSR         findRege
0000131C                           371              
0000131C  43F9 00002364            372              LEA         newLine,A1
00001322  103C 000E                373              MOVE.B      #14,D0
00001326  4E4F                     374              TRAP        #15                ; trap call
00001328                           375              
00001328  6000 FCE2                376              BRA         LOOP
0000132C                           377              
0000132C  43F9 00002401            378  opEORL      LEA         dispLong,A1
00001332  103C 000E                379              MOVE.B      #14,D0
00001336  4E4F                     380              TRAP        #15
00001338                           381              
00001338  43F9 00002368            382              LEA         space, A1           ; Display space
0000133E  103C 000E                383              MOVE.B      #14, D0             ; command for trap call to display message
00001342  4E4F                     384              TRAP        #15                 ; trap call
00001344                           385              
00001344  4EB9 00001D10            386              JSR         printEA         ; Determines the "left" operand register
0000134A                           387              
0000134A  43F9 0000236F            388              LEA         comma, A1           ; Display space
00001350  103C 000E                389              MOVE.B      #14, D0             ; command for trap call to display message
00001354  4E4F                     390              TRAP        #15                 ; trap call
00001356                           391              
00001356  4EB9 00001D02            392              JSR         findRege
0000135C                           393              
0000135C  43F9 00002364            394              LEA         newLine,A1
00001362  103C 000E                395              MOVE.B      #14,D0
00001366  4E4F                     396              TRAP        #15                ; trap call
00001368                           397              
00001368  6000 FCA2                398              BRA         LOOP
0000136C                           399  
0000136C                           400  ***********************************************************************************************************
0000136C                           401  *
0000136C                           402  *               CMP OPCODE
0000136C                           403  *
0000136C                           404  ***********************************************************************************************************
0000136C                           405  
0000136C  43F9 000023D1            406  opCMP       LEA         CMPmatch,A1
00001372  103C 000E                407              MOVE.B      #14,D0
00001376  4E4F                     408              TRAP        #15
00001378                           409              
00001378  4242                     410              CLR         D2
0000137A                           411              
0000137A  1401                     412              MOVE.B      D1,D2
0000137C  EC42                     413              ASR         #six,D2         ; Move bits 7 places over to find opmode
0000137E  C47C 0007                414              AND         #$07,D2
00001382  B43C 0000                415              CMP.B       #zero,D2
00001386  6700 0016                416              BEQ         opCMPB              ; Byte in opmode
0000138A  B43C 0001                417              CMP.B       #one,D2
0000138E  6700 004E                418              BEQ         opCMPW              ; Word in opmode
00001392  B43C 0002                419              CMP.B       #two,D2
00001396  6700 0086                420              BEQ         opCMPL              ; Long in opmode
0000139A                           421              
0000139A  6000 0FC4                422              BRA         printInvalid        ; Incorrect input
0000139E                           423  
0000139E  43F9 000023FB            424  opCMPB      LEA         dispByte,A1
000013A4  103C 000E                425              MOVE.B      #14,D0
000013A8  4E4F                     426              TRAP        #15
000013AA                           427              
000013AA  43F9 00002368            428              LEA         space, A1           ; Display space
000013B0  103C 000E                429              MOVE.B      #14, D0             ; command for trap call to display message
000013B4  4E4F                     430              TRAP        #15                 ; trap call
000013B6                           431              
000013B6  4EB9 00001D10            432              JSR         printEA         ; Determines the "left" operand register
000013BC                           433              
000013BC  43F9 0000236F            434              LEA         comma, A1           ; Display space
000013C2  103C 000E                435              MOVE.B      #14, D0             ; command for trap call to display message
000013C6  4E4F                     436              TRAP        #15                 ; trap call
000013C8                           437              
000013C8  4EB9 00001D02            438              JSR         findRege
000013CE                           439              
000013CE  43F9 00002364            440              LEA         newLine,A1
000013D4  103C 000E                441              MOVE.B      #14,D0
000013D8  4E4F                     442              TRAP        #15
000013DA                           443              
000013DA  6000 FC30                444              BRA         LOOP
000013DE                           445              
000013DE  43F9 000023FE            446  opCMPW      LEA         dispWord,A1
000013E4  103C 000E                447              MOVE.B      #14,D0
000013E8  4E4F                     448              TRAP        #15
000013EA                           449              
000013EA  43F9 00002368            450              LEA         space, A1           ; Display space
000013F0  103C 000E                451              MOVE.B      #14, D0             ; command for trap call to display message
000013F4  4E4F                     452              TRAP        #15                 ; trap call
000013F6                           453              
000013F6  4EB9 00001D10            454              JSR         printEA         ; Determines the "left" operand register
000013FC                           455              
000013FC  43F9 0000236F            456              LEA         comma, A1           ; Display space
00001402  103C 000E                457              MOVE.B      #14, D0             ; command for trap call to display message
00001406  4E4F                     458              TRAP        #15                 ; trap call
00001408                           459              
00001408  4EB9 00001D02            460              JSR         findRege
0000140E                           461              
0000140E  43F9 00002364            462              LEA         newLine,A1
00001414  103C 000E                463              MOVE.B      #14,D0
00001418  4E4F                     464              TRAP        #15                ; trap call
0000141A                           465              
0000141A  6000 FBF0                466              BRA         LOOP
0000141E                           467  
0000141E  43F9 00002401            468  opCMPL      LEA         dispLong,A1
00001424  103C 000E                469              MOVE.B      #14,D0
00001428  4E4F                     470              TRAP        #15
0000142A                           471              
0000142A  43F9 00002368            472              LEA         space, A1           ; Display space
00001430  103C 000E                473              MOVE.B      #14, D0             ; command for trap call to display message
00001434  4E4F                     474              TRAP        #15                 ; trap call
00001436                           475              
00001436  4EB9 00001D10            476              JSR         printEA         ; Determines the "left" operand register
0000143C                           477              
0000143C  43F9 0000236F            478              LEA         comma, A1           ; Display space
00001442  103C 000E                479              MOVE.B      #14, D0             ; command for trap call to display message
00001446  4E4F                     480              TRAP        #15                 ; trap call
00001448                           481              
00001448  4EB9 00001D02            482              JSR         findRege
0000144E                           483              
0000144E  43F9 00002364            484              LEA         newLine,A1
00001454  103C 000E                485              MOVE.B      #14,D0
00001458  4E4F                     486              TRAP        #15                 ; trap call
0000145A                           487              
0000145A  6000 FBB0                488              BRA         LOOP
0000145E                           489              
0000145E                           490  ***********************************************************************************************************
0000145E                           491  *
0000145E                           492  *               ORI OPCODE
0000145E                           493  *
0000145E                           494  ***********************************************************************************************************
0000145E                           495  
0000145E  43F9 00002379            496  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
00001464  103C 000E                497          MOVE.B      #14, D0             ; command for trap call to display message
00001468  4E4F                     498          TRAP        #15                 ; trap call
0000146A                           499          
0000146A  1218                     500          MOVE.B      (A0)+, D1
0000146C  1401                     501          MOVE.B      D1,D2               ; copy data over
0000146E  EC42                     502          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001470  B43C 0000                503          CMP.B       #zero,D2
00001474  6700 0016                504          BEQ         opORIB
00001478  B43C 0001                505          CMP.B       #one,D2
0000147C  6700 0070                506          BEQ         opORIW
00001480  B43C 0002                507          CMP.B       #two,D2
00001484  6700 00CA                508          BEQ         opORIL
00001488                           509          
00001488  6000 0ED6                510          BRA         printInvalid
0000148C                           511          
0000148C  43F9 000023FB            512  opORIB  LEA         dispByte, A1        ; Display byte
00001492  103C 000E                513          MOVE.B      #14, D0             ; command for trap call to display message
00001496  4E4F                     514          TRAP        #15                 ; trap call
00001498                           515          
00001498  43F9 00002368            516          LEA         space, A1           ; Display space
0000149E  103C 000E                517          MOVE.B      #14, D0             ; command for trap call to display message
000014A2  4E4F                     518          TRAP        #15                 ; trap call
000014A4                           519          
000014A4  4242                     520          CLR         D2
000014A6  1401                     521          MOVE.B      D1,D2
000014A8  E642                     522          ASR         #three,D2
000014AA  C47C 0007                523          AND         #seven,D2
000014AE  4243                     524          CLR         D3        
000014B0  1601                     525          MOVE.B      D1,D3
000014B2  C67C 0007                526          AND         #seven,D3
000014B6                           527          
000014B6  4241                     528          CLR         D1
000014B8  3218                     529          MOVE.W      (A0)+, D1
000014BA                           530          
000014BA  43F9 0000236B            531          LEA         hashTag, A1           ; Display space
000014C0  103C 000E                532          MOVE.B      #14, D0             ; command for trap call to display message
000014C4  4E4F                     533          TRAP        #15                 ; trap call
000014C6                           534          
000014C6  103C 0003                535          MOVE.B      #3, D0
000014CA  4E4F                     536          TRAP        #15
000014CC                           537          
000014CC  43F9 0000236F            538          LEA         comma, A1           ; Display space
000014D2  103C 000E                539          MOVE.B      #14, D0             ; command for trap call to display message
000014D6  4E4F                     540          TRAP        #15                 ; trap call
000014D8                           541          
000014D8  4EB9 00001D10            542          JSR         printEA
000014DE                           543          
000014DE  43F9 00002364            544          LEA         newLine, A1           ; Display space
000014E4  103C 000E                545          MOVE.B      #14, D0             ; command for trap call to display message
000014E8  4E4F                     546          TRAP        #15                 ; trap call
000014EA                           547          
000014EA  6000 FB20                548          BRA         LOOP
000014EE                           549          
000014EE                           550          
000014EE  43F9 000023FE            551  opORIW  LEA         dispWord, A1        ; Display byte
000014F4  103C 000E                552          MOVE.B      #14, D0             ; command for trap call to display message
000014F8  4E4F                     553          TRAP        #15                 ; trap call
000014FA                           554          
000014FA  43F9 00002368            555          LEA         space, A1           ; Display space
00001500  103C 000E                556          MOVE.B      #14, D0             ; command for trap call to display message
00001504  4E4F                     557          TRAP        #15                 ; trap call
00001506                           558          
00001506  4242                     559          CLR         D2
00001508  1401                     560          MOVE.B      D1,D2
0000150A  E642                     561          ASR         #three,D2
0000150C  C47C 0007                562          AND         #seven,D2
00001510  4243                     563          CLR         D3        
00001512  1601                     564          MOVE.B      D1,D3
00001514  C67C 0007                565          AND         #seven,D3
00001518                           566          
00001518  4241                     567          CLR         D1
0000151A  3218                     568          MOVE.W      (A0)+, D1
0000151C                           569          
0000151C  43F9 0000236B            570          LEA         hashTag, A1           ; Display space
00001522  103C 000E                571          MOVE.B      #14, D0             ; command for trap call to display message
00001526  4E4F                     572          TRAP        #15                 ; trap call
00001528                           573          
00001528  103C 0003                574          MOVE.B      #3, D0
0000152C  4E4F                     575          TRAP        #15
0000152E                           576          
0000152E  43F9 0000236F            577          LEA         comma, A1           ; Display space
00001534  103C 000E                578          MOVE.B      #14, D0             ; command for trap call to display message
00001538  4E4F                     579          TRAP        #15                 ; trap call
0000153A                           580          
0000153A  4EB9 00001D10            581          JSR         printEA
00001540                           582          
00001540  43F9 00002364            583          LEA         newLine, A1           ; Display space
00001546  103C 000E                584          MOVE.B      #14, D0             ; command for trap call to display message
0000154A  4E4F                     585          TRAP        #15                 ; trap call
0000154C                           586          
0000154C  6000 FABE                587          BRA         LOOP
00001550                           588       
00001550  43F9 00002401            589  opORIL  LEA         dispLong, A1        ; Display byte
00001556  103C 000E                590          MOVE.B      #14, D0             ; command for trap call to display message
0000155A  4E4F                     591          TRAP        #15                 ; trap call
0000155C                           592          
0000155C  43F9 00002368            593          LEA         space, A1           ; Display space
00001562  103C 000E                594          MOVE.B      #14, D0             ; command for trap call to display message
00001566  4E4F                     595          TRAP        #15                 ; trap call
00001568                           596          
00001568  4242                     597          CLR         D2
0000156A  1401                     598          MOVE.B      D1,D2
0000156C  E642                     599          ASR         #three,D2
0000156E  C47C 0007                600          AND         #seven,D2
00001572  4243                     601          CLR         D3        
00001574  1601                     602          MOVE.B      D1,D3
00001576  C67C 0007                603          AND         #seven,D3
0000157A                           604          
0000157A  4241                     605          CLR         D1
0000157C  2218                     606          MOVE.L      (A0)+, D1
0000157E                           607          
0000157E  43F9 0000236B            608          LEA         hashTag, A1           ; Display space
00001584  103C 000E                609          MOVE.B      #14, D0             ; command for trap call to display message
00001588  4E4F                     610          TRAP        #15                 ; trap call
0000158A                           611          
0000158A  103C 0003                612          MOVE.B      #3, D0
0000158E  4E4F                     613          TRAP        #15
00001590                           614          
00001590  43F9 0000236F            615          LEA         comma, A1           ; Display space
00001596  103C 000E                616          MOVE.B      #14, D0             ; command for trap call to display message
0000159A  4E4F                     617          TRAP        #15                 ; trap call
0000159C                           618          
0000159C  4EB9 00001D10            619          JSR         printEA
000015A2                           620          
000015A2  43F9 00002364            621          LEA         newLine, A1           ; Display space
000015A8  103C 000E                622          MOVE.B      #14, D0             ; command for trap call to display message
000015AC  4E4F                     623          TRAP        #15                 ; trap call
000015AE                           624          
000015AE  6000 FA5C                625          BRA         LOOP
000015B2                           626           
000015B2  43F9 0000237D            627  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000015B8  103C 000E                628          MOVE.B      #14, D0             ; command for trap call to display message
000015BC  4E4F                     629          TRAP        #15                 ; trap call
000015BE                           630                  
000015BE  1218                     631          MOVE.B      (A0)+, D1
000015C0  1401                     632          MOVE.B      D1,D2               ; copy data over
000015C2  EC42                     633          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000015C4  B43C 0000                634          CMP.B       #zero,D2
000015C8  6700 0034                635          BEQ         opCMPIB
000015CC  B43C 0001                636          CMP.B       #one,D2
000015D0  6700 008E                637          BEQ         opCMPIW
000015D4  B43C 0002                638          CMP.B       #two,D2
000015D8  6700 00E8                639          BEQ         opCMPIL
000015DC                           640          
000015DC  1401                     641          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000015DE  E542                     642          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
000015E0  1802                     643          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
000015E2  4242                     644          CLR         D2                  ; Clear out data register
000015E4  1404                     645          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
000015E6  EA42                     646          ASR         #five,D2            ; Shift the register out to get just the mode
000015E8  1802                     647          MOVE.B      D2,D4               ; Store mode into D4
000015EA  4242                     648          CLR         D2
000015EC                           649          
000015EC  1401                     650          MOVE.B      D1,D2               ; Getting the EA register
000015EE  EB42                     651          ASL         #five,D2
000015F0  1A02                     652          MOVE.B      D2,D5               ; Move just the register into D5
000015F2  4242                     653          CLR         D2                  ; Clearing D2 to put data back
000015F4  1405                     654          MOVE.B      D5,D2               ; Putting back the register
000015F6  EA42                     655          ASR         #five,D2            ; Shifting bits in order to read the register
000015F8  1A02                     656          MOVE.B      D2,D5               ; Store register into D5
000015FA                           657          
000015FA  6000 FA10                658          BRA         LOOP                ; go back to the loop
000015FE                           659  
000015FE  43F9 000023FB            660  opCMPIB LEA         dispByte, A1        ; Display byte
00001604  103C 000E                661          MOVE.B      #14, D0             ; command for trap call to display message
00001608  4E4F                     662          TRAP        #15                 ; trap call
0000160A                           663          
0000160A  43F9 00002368            664          LEA         space, A1           ; Display space
00001610  103C 000E                665          MOVE.B      #14, D0             ; command for trap call to display message
00001614  4E4F                     666          TRAP        #15                 ; trap call
00001616                           667          
00001616  4242                     668          CLR         D2
00001618  1401                     669          MOVE.B      D1,D2
0000161A  E642                     670          ASR         #three,D2
0000161C  C47C 0007                671          AND         #seven,D2
00001620  4243                     672          CLR         D3        
00001622  1601                     673          MOVE.B      D1,D3
00001624  C67C 0007                674          AND         #seven,D3
00001628                           675          
00001628  4241                     676          CLR         D1
0000162A  3218                     677          MOVE.W      (A0)+, D1
0000162C                           678          
0000162C  43F9 0000236B            679          LEA         hashTag, A1           ; Display space
00001632  103C 000E                680          MOVE.B      #14, D0             ; command for trap call to display message
00001636  4E4F                     681          TRAP        #15                 ; trap call
00001638                           682          
00001638  103C 0003                683          MOVE.B      #3, D0
0000163C  4E4F                     684          TRAP        #15
0000163E                           685          
0000163E  43F9 0000236F            686          LEA         comma, A1           ; Display space
00001644  103C 000E                687          MOVE.B      #14, D0             ; command for trap call to display message
00001648  4E4F                     688          TRAP        #15                 ; trap call
0000164A                           689          
0000164A  4EB9 00001D10            690          JSR         printEA
00001650                           691          
00001650  43F9 00002364            692          LEA         newLine, A1           ; Display space
00001656  103C 000E                693          MOVE.B      #14, D0             ; command for trap call to display message
0000165A  4E4F                     694          TRAP        #15                 ; trap call
0000165C                           695  
0000165C  6000 F9AE                696          BRA         LOOP
00001660                           697  
00001660  43F9 000023FE            698  opCMPIW LEA         dispWord, A1        ; Display byte
00001666  103C 000E                699          MOVE.B      #14, D0             ; command for trap call to display message
0000166A  4E4F                     700          TRAP        #15                 ; trap call
0000166C                           701          
0000166C  43F9 00002368            702          LEA         space, A1           ; Display space
00001672  103C 000E                703          MOVE.B      #14, D0             ; command for trap call to display message
00001676  4E4F                     704          TRAP        #15                 ; trap call
00001678                           705          
00001678  4242                     706          CLR         D2
0000167A  1401                     707          MOVE.B      D1,D2
0000167C  E642                     708          ASR         #three,D2
0000167E  C47C 0007                709          AND         #seven,D2
00001682  4243                     710          CLR         D3        
00001684  1601                     711          MOVE.B      D1,D3
00001686  C67C 0007                712          AND         #seven,D3
0000168A                           713          
0000168A  4241                     714          CLR         D1
0000168C  3218                     715          MOVE.W      (A0)+, D1
0000168E                           716          
0000168E  43F9 0000236B            717          LEA         hashTag, A1           ; Display space
00001694  103C 000E                718          MOVE.B      #14, D0             ; command for trap call to display message
00001698  4E4F                     719          TRAP        #15                 ; trap call
0000169A                           720          
0000169A  103C 0003                721          MOVE.B      #3, D0
0000169E  4E4F                     722          TRAP        #15
000016A0                           723          
000016A0  43F9 0000236F            724          LEA         comma, A1           ; Display space
000016A6  103C 000E                725          MOVE.B      #14, D0             ; command for trap call to display message
000016AA  4E4F                     726          TRAP        #15                 ; trap call
000016AC                           727          
000016AC  4EB9 00001D10            728          JSR         printEA
000016B2                           729          
000016B2  43F9 00002364            730          LEA         newLine, A1           ; Display space
000016B8  103C 000E                731          MOVE.B      #14, D0             ; command for trap call to display message
000016BC  4E4F                     732          TRAP        #15                 ; trap call
000016BE  6000 F94C                733          BRA         LOOP
000016C2                           734  
000016C2  43F9 00002401            735  opCMPIL LEA         dispLong, A1        ; Display byte
000016C8  103C 000E                736          MOVE.B      #14, D0             ; command for trap call to display message
000016CC  4E4F                     737          TRAP        #15                 ; trap call
000016CE                           738          
000016CE  43F9 00002368            739          LEA         space, A1           ; Display space
000016D4  103C 000E                740          MOVE.B      #14, D0             ; command for trap call to display message
000016D8  4E4F                     741          TRAP        #15                 ; trap call
000016DA                           742          
000016DA  4242                     743          CLR         D2
000016DC  1401                     744          MOVE.B      D1,D2
000016DE  E642                     745          ASR         #three,D2
000016E0  C47C 0007                746          AND         #seven,D2
000016E4  4243                     747          CLR         D3        
000016E6  1601                     748          MOVE.B      D1,D3
000016E8  C67C 0007                749          AND         #seven,D3
000016EC                           750          
000016EC  4241                     751          CLR         D1
000016EE  3218                     752          MOVE.W      (A0)+, D1
000016F0                           753          
000016F0  43F9 0000236B            754          LEA         hashTag, A1           ; Display space
000016F6  103C 000E                755          MOVE.B      #14, D0             ; command for trap call to display message
000016FA  4E4F                     756          TRAP        #15                 ; trap call
000016FC                           757          
000016FC  103C 0003                758          MOVE.B      #3, D0
00001700  4E4F                     759          TRAP        #15
00001702                           760          
00001702  43F9 0000236F            761          LEA         comma, A1           ; Display space
00001708  103C 000E                762          MOVE.B      #14, D0             ; command for trap call to display message
0000170C  4E4F                     763          TRAP        #15                 ; trap call
0000170E                           764          
0000170E  4EB9 00001D10            765          JSR         printEA
00001714                           766          
00001714  43F9 00002364            767          LEA         newLine, A1           ; Display space
0000171A  103C 000E                768          MOVE.B      #14, D0             ; command for trap call to display message
0000171E  4E4F                     769          TRAP        #15                 ; trap call
00001720                           770          
00001720  6000 F8EA                771          BRA         LOOP
00001724                           772  
00001724  43F9 00002382            773  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000172A  103C 000E                774                  MOVE.B      #14, D0             ; command for trap call to display message
0000172E  4E4F                     775                  TRAP        #15                 ; trap call
00001730                           776  
00001730  43F9 00002368            777                  LEA         space, A1           ; Display space
00001736  103C 000E                778                  MOVE.B      #14, D0             ; command for trap call to display message
0000173A  4E4F                     779                  TRAP        #15                 ; trap call
0000173C                           780                  
0000173C  4242                     781                  CLR         D2
0000173E  1218                     782                  MOVE.B      (A0)+, D1
00001740  1401                     783                  MOVE.B      D1,D2               ; copy data over
00001742  E642                     784                  ASR         #three,D2           ; Shift to the right to remove register
00001744  C47C 0007                785                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
00001748                           786                  
00001748  4243                     787                  CLR         D3                  ; Clear D3 so we can move D1 in
0000174A  1601                     788                  MOVE.B      D1,D3               ; Move othr byte in
0000174C  C67C 0007                789                  AND         #seven,D3           ; Set everything besides register to 0
00001750                           790                  
00001750  4241                     791                  CLR         D1
00001752  3218                     792                  MOVE.W      (A0)+, D1
00001754                           793                 
00001754                           794                  
00001754  43F9 0000236B            795                  LEA         hashTag, A1           ; Display space
0000175A  103C 000E                796                  MOVE.B      #14, D0             ; command for trap call to display message
0000175E  4E4F                     797                  TRAP        #15                 ; trap call
00001760                           798          
00001760  103C 0003                799                  MOVE.B      #3, D0
00001764  4E4F                     800                  TRAP        #15
00001766                           801          
00001766  43F9 0000236F            802                  LEA         comma, A1           ; Display space
0000176C  103C 000E                803                  MOVE.B      #14, D0             ; command for trap call to display message
00001770  4E4F                     804                  TRAP        #15                 ; trap call
00001772                           805                  
00001772  4EB9 00001D10            806                  JSR         printEA
00001778                           807          
00001778  43F9 00002364            808                  LEA         newLine, A1           ; Display space
0000177E  103C 000E                809                  MOVE.B      #14, D0             ; command for trap call to display message
00001782  4E4F                     810                  TRAP        #15                 ; trap call
00001784                           811                  
00001784                           812                  
00001784  6000 F886                813                  BRA         LOOP                
00001788                           814          
00001788                           815  opDynBCLR       
00001788  4241                     816                  CLR         D1
0000178A  1218                     817                  MOVE.B      (A0)+,D1            ; Copy second byte in
0000178C  1601                     818                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
0000178E  E243                     819                  ASR         #one,D3             ; Shift register over to the end
00001790  C67C 0007                820                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
00001794                           821                  
00001794  1401                     822                  MOVE.B      D1,D2
00001796  EC42                     823                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
00001798  B47C 0002                824                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
0000179C  6600 0BC2                825                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
000017A0                           826  
000017A0                           827                  
000017A0  43F9 00002382            828                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
000017A6  103C 000E                829                  MOVE.B      #14, D0             ; command for trap call to display message
000017AA  4E4F                     830                  TRAP        #15                 ; trap call  
000017AC                           831                  
000017AC  43F9 00002368            832                  LEA         space, A1           ; Display space
000017B2  103C 000E                833                  MOVE.B      #14, D0             ; command for trap call to display message
000017B6  4E4F                     834                  TRAP        #15                 ; trap call
000017B8                           835                  
000017B8  143C 0000                836                  MOVE.B      #zero,D2                
000017BC  4EB9 00001D10            837                  JSR         printEA
000017C2                           838                  
000017C2  43F9 0000236F            839                  LEA         comma, A1           ; Display space
000017C8  103C 000E                840                  MOVE.B      #14, D0             ; command for trap call to display message
000017CC  4E4F                     841                  TRAP        #15                 ; trap call
000017CE                           842                  
000017CE  4242                     843                  CLR         D2
000017D0  1401                     844                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000017D2  E642                     845                  ASR         #three,D2           ; Remove/shift the register out
000017D4  C47C 0007                846                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000017D8                           847                  
000017D8  4243                     848                  CLR         D3                  ; Clearing D3 to avoid mashing data
000017DA  1601                     849                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000017DC  C67C 0007                850                  AND         #seven,D3           ; Change all bits except for register bits to 0
000017E0                           851                  
000017E0                           852  
000017E0  4EB9 00001D10            853                  JSR         printEA
000017E6                           854          
000017E6  43F9 00002364            855                  LEA         newLine, A1           ; Display space
000017EC  103C 000E                856                  MOVE.B      #14, D0             ; command for trap call to display message
000017F0  4E4F                     857                  TRAP        #15                 ; trap call            
000017F2                           858  
000017F2                           859  
000017F2  6000 F818                860                  BRA         LOOP                ; go back to the loop
000017F6                           861   
000017F6                           862  opMOVEB 
000017F6  43F9 00002387            863          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
000017FC  103C 000E                864          MOVE.B      #14, D0             ; command for trap call to display message
00001800  4E4F                     865          TRAP        #15                 ; trap call
00001802  43F9 000023FB            866          LEA         dispByte, A1        ; display byte
00001808  103C 000E                867          MOVE.B      #14, D0             ; command for trap call to display message
0000180C  4E4F                     868          TRAP        #15                 ; trap call
0000180E  43F9 00002368            869          LEA         space, A1           ; create spaces
00001814  103C 000E                870          MOVE.B      #14, D0             ; command for trap call to display message
00001818  4E4F                     871          TRAP        #15                 ; trap call
0000181A                           872          
0000181A                           873          
0000181A  4245                     874          CLR         D5                  ; Clear D5
0000181C  1A01                     875          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000181E  E245                     876          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001820  CA7C 0007                877          AND         #seven,D5
00001824                           878          
00001824  4244                     879          CLR         D4                  ; Clear out D4
00001826  1801                     880          MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001828  C87C 0001                881          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000182C                           882          
0000182C  4241                     883          CLR          D1
0000182E  4242                     884          CLR          D2
00001830  1218                     885          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001832  1401                     886          MOVE.B      D1,D2
00001834  EC42                     887          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001836  D842                     888          ADD         D2,D4               ; Adds the remaining bits to D4
00001838                           889          
00001838  4242                     890          CLR         D2
0000183A  1401                     891          MOVE.B      D1,D2               ; Copy new byte over to D2
0000183C  E642                     892          ASR         #three,D2           ; Shift source register out
0000183E  C47C 0007                893          AND         #seven,D2           ; Set everything to 0 except for the mode
00001842                           894          
00001842  4243                     895          CLR         D3
00001844  1601                     896          MOVE.B      D1,D3
00001846  C67C 0007                897          AND         #seven,D3
0000184A                           898          
0000184A  4EB9 00001D10            899          JSR         printEA
00001850                           900          
00001850  43F9 0000236F            901          LEA         comma, A1           ; Display space
00001856  103C 000E                902          MOVE.B      #14, D0             ; command for trap call to display message
0000185A  4E4F                     903          TRAP        #15                 ; trap call
0000185C                           904          
0000185C  4242                     905          CLR         D2
0000185E  4243                     906          CLR         D3
00001860  1404                     907          MOVE.B      D4,D2
00001862  1605                     908          MOVE.B      D5,D3
00001864                           909          
00001864  4EB9 00001D10            910          JSR         printEA
0000186A                           911          
0000186A                           912          
0000186A  43F9 00002364            913          LEA         newLine, A1           ; Display space
00001870  103C 000E                914          MOVE.B      #14, D0             ; command for trap call to display message
00001874  4E4F                     915          TRAP        #15                 ; trap call            
00001876                           916  
00001876                           917  
00001876  6000 F794                918          BRA         LOOP                ; go back to the loop
0000187A                           919          
0000187A                           920  opMOVEL     
0000187A                           921          
0000187A  4245                     922              CLR         D5                  ; Clear D5
0000187C  1A01                     923              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000187E  E245                     924              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001880  CA7C 0007                925              AND         #seven,D5
00001884                           926          
00001884  4244                     927              CLR         D4                  ; Clear out D4
00001886  1801                     928              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001888  C87C 0001                929              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000188C                           930          
0000188C  4241                     931              CLR          D1
0000188E  4242                     932              CLR          D2
00001890  1218                     933              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001892  1401                     934              MOVE.B      D1,D2
00001894  EC42                     935              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001896  D842                     936              ADD         D2,D4               ; Adds the remaining bits to D4
00001898                           937          
00001898  B87C 0001                938              CMP         #one,D4             ; Check if it is MOVEA
0000189C  6700 006C                939              BEQ         opMOVEAL            ; If it is, branch off
000018A0                           940              
000018A0  43F9 00002387            941              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000018A6  103C 000E                942              MOVE.B      #14, D0             ; command for trap call to display message
000018AA  4E4F                     943              TRAP        #15                 ; trap call  
000018AC                           944              
000018AC                           945              
000018AC  43F9 00002401            946              LEA         dispLong,A1
000018B2  103C 000E                947              MOVE.B      #14, D0             ; command for trap call to display message
000018B6  4E4F                     948              TRAP        #15                 ; trap call
000018B8                           949              
000018B8  43F9 00002368            950              LEA         space, A1           ; create spaces
000018BE  103C 000E                951              MOVE.B      #14, D0             ; command for trap call to display message
000018C2  4E4F                     952              TRAP        #15                 ; trap call
000018C4                           953          
000018C4  4242                     954              CLR         D2
000018C6  1401                     955              MOVE.B      D1,D2               ; Copy new byte over to D2
000018C8  E642                     956              ASR         #three,D2           ; Shift source register out
000018CA  C47C 0007                957              AND         #seven,D2           ; Set everything to 0 except for the mode
000018CE                           958          
000018CE  4243                     959              CLR         D3
000018D0  1601                     960              MOVE.B      D1,D3
000018D2  C67C 0007                961              AND         #seven,D3
000018D6                           962              
000018D6  4241                     963              CLR         D1                  ; Clear D1
000018D8  2218                     964              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
000018DA                           965              
000018DA  4EB9 00001D10            966              JSR         printEA
000018E0                           967              
000018E0  43F9 0000236F            968              LEA         comma, A1           ; Display comma
000018E6  103C 000E                969              MOVE.B      #14, D0             ; command for trap call to display message
000018EA  4E4F                     970              TRAP        #15                 ; trap call
000018EC                           971          
000018EC  4242                     972              CLR         D2
000018EE  4243                     973              CLR         D3
000018F0  1404                     974              MOVE.B      D4,D2
000018F2  1605                     975              MOVE.B      D5,D3
000018F4                           976              
000018F4                           977  
000018F4                           978              
000018F4  4EB9 00001D10            979              JSR         printEA
000018FA                           980          
000018FA                           981          
000018FA  43F9 00002364            982              LEA         newLine, A1           ; Display space
00001900  103C 000E                983              MOVE.B      #14, D0             ; command for trap call to display message
00001904  4E4F                     984              TRAP        #15                 ; trap call            
00001906                           985  
00001906                           986  
00001906  6000 F704                987              BRA         LOOP                ; go back to the loop
0000190A                           988              
0000190A                           989  opMOVEAL
0000190A                           990  
0000190A  43F9 0000238C            991              LEA         MOVEAmatch,A1
00001910  103C 000E                992              MOVE.B      #14, D0             ; command for trap call to display message
00001914  4E4F                     993              TRAP        #15                 ; trap call
00001916                           994              
00001916  43F9 00002401            995              LEA         dispLong,A1
0000191C  103C 000E                996              MOVE.B      #14, D0             ; command for trap call to display message
00001920  4E4F                     997              TRAP        #15                 ; trap call
00001922                           998              
00001922                           999  
00001922  43F9 00002368           1000              LEA         space, A1           ; create spaces
00001928  103C 000E               1001              MOVE.B      #14, D0             ; command for trap call to display message
0000192C  4E4F                    1002              TRAP        #15                 ; trap call
0000192E                          1003              
0000192E  4242                    1004              CLR         D2
00001930  1401                    1005              MOVE.B      D1,D2               ; Copy new byte over to D2
00001932  E642                    1006              ASR         #three,D2           ; Shift source register out
00001934  C47C 0007               1007              AND         #seven,D2           ; Set everything to 0 except for the mode
00001938                          1008          
00001938  4243                    1009              CLR         D3
0000193A  1601                    1010              MOVE.B      D1,D3
0000193C  C67C 0007               1011              AND         #seven,D3
00001940                          1012              
00001940  4241                    1013              CLR         D1                  ; Clear D1
00001942  3218                    1014              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001944                          1015              
00001944                          1016              
00001944  4EB9 00001D10           1017              JSR         printEA
0000194A                          1018              
0000194A  43F9 0000236F           1019              LEA         comma, A1           ; Display comma
00001950  103C 000E               1020              MOVE.B      #14, D0             ; command for trap call to display message
00001954  4E4F                    1021              TRAP        #15                 ; trap call
00001956                          1022  
00001956  4242                    1023              CLR         D2
00001958  4243                    1024              CLR         D3
0000195A  1404                    1025              MOVE.B      D4,D2
0000195C  1605                    1026              MOVE.B      D5,D3
0000195E                          1027          
0000195E  4EB9 00001D10           1028              JSR         printEA
00001964                          1029          
00001964                          1030          
00001964  43F9 00002364           1031              LEA         newLine, A1           ; Display space
0000196A  103C 000E               1032              MOVE.B      #14, D0             ; command for trap call to display message
0000196E  4E4F                    1033              TRAP        #15                 ; trap call            
00001970                          1034  
00001970                          1035  
00001970  6000 F69A               1036              BRA         LOOP                ; go back to the loop
00001974                          1037  
00001974                          1038  opMOVEW
00001974                          1039          
00001974  4245                    1040              CLR         D5                  ; Clear D5
00001976  1A01                    1041              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001978  E245                    1042              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
0000197A  CA7C 0007               1043              AND         #seven,D5
0000197E                          1044          
0000197E  4244                    1045              CLR         D4                  ; Clear out D4
00001980  1801                    1046              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001982  C87C 0001               1047              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001986                          1048          
00001986  4241                    1049              CLR          D1
00001988  4242                    1050              CLR          D2
0000198A  1218                    1051              MOVE.B      (A0)+,D1            ; Copy byte into D1
0000198C  1401                    1052              MOVE.B      D1,D2
0000198E  EC42                    1053              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001990  D842                    1054              ADD         D2,D4               ; Adds the remaining bits to D4
00001992                          1055          
00001992  B87C 0001               1056              CMP         #one,D4             ; Check if it is MOVEA
00001996  6700 006C               1057              BEQ         opMOVEAW            ; If it is, branch off
0000199A                          1058              
0000199A  43F9 00002387           1059              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000019A0  103C 000E               1060              MOVE.B      #14, D0             ; command for trap call to display message
000019A4  4E4F                    1061              TRAP        #15                 ; trap call  
000019A6                          1062              
000019A6  43F9 000023FE           1063              LEA         dispWord,A1
000019AC  103C 000E               1064              MOVE.B      #14, D0             ; command for trap call to display message
000019B0  4E4F                    1065              TRAP        #15                 ; trap call
000019B2                          1066              
000019B2  43F9 00002368           1067              LEA         space, A1           ; create spaces
000019B8  103C 000E               1068              MOVE.B      #14, D0             ; command for trap call to display message
000019BC  4E4F                    1069              TRAP        #15                 ; trap call
000019BE                          1070          
000019BE  4242                    1071              CLR         D2
000019C0  1401                    1072              MOVE.B      D1,D2               ; Copy new byte over to D2
000019C2  E642                    1073              ASR         #three,D2           ; Shift source register out
000019C4  C47C 0007               1074              AND         #seven,D2           ; Set everything to 0 except for the mode
000019C8                          1075          
000019C8  4243                    1076              CLR         D3
000019CA  1601                    1077              MOVE.B      D1,D3
000019CC  C67C 0007               1078              AND         #seven,D3
000019D0                          1079              
000019D0  4241                    1080              CLR         D1                  ; Clear D1
000019D2  3218                    1081              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
000019D4                          1082              
000019D4  4EB9 00001D10           1083              JSR         printEA
000019DA                          1084              
000019DA  43F9 0000236F           1085              LEA         comma, A1           ; Display comma
000019E0  103C 000E               1086              MOVE.B      #14, D0             ; command for trap call to display message
000019E4  4E4F                    1087              TRAP        #15                 ; trap call
000019E6                          1088          
000019E6  4242                    1089              CLR         D2
000019E8  4243                    1090              CLR         D3
000019EA  1404                    1091              MOVE.B      D4,D2
000019EC  1605                    1092              MOVE.B      D5,D3
000019EE                          1093              
000019EE                          1094  
000019EE                          1095              
000019EE  4EB9 00001D10           1096              JSR         printEA
000019F4                          1097          
000019F4                          1098          
000019F4  43F9 00002364           1099              LEA         newLine, A1           ; Display space
000019FA  103C 000E               1100              MOVE.B      #14, D0             ; command for trap call to display message
000019FE  4E4F                    1101              TRAP        #15                 ; trap call            
00001A00                          1102  
00001A00                          1103  
00001A00  6000 F60A               1104              BRA         LOOP                ; go back to the loop
00001A04                          1105  opMOVEAW  
00001A04  43F9 0000238C           1106              LEA         MOVEAmatch,A1
00001A0A  103C 000E               1107              MOVE.B      #14, D0             ; command for trap call to display message
00001A0E  4E4F                    1108              TRAP        #15                 ; trap call
00001A10                          1109              
00001A10  43F9 000023FE           1110              LEA         dispWord,A1
00001A16  103C 000E               1111              MOVE.B      #14, D0             ; command for trap call to display message
00001A1A  4E4F                    1112              TRAP        #15                 ; trap call
00001A1C                          1113              
00001A1C                          1114  
00001A1C  43F9 00002368           1115              LEA         space, A1           ; create spaces
00001A22  103C 000E               1116              MOVE.B      #14, D0             ; command for trap call to display message
00001A26  4E4F                    1117              TRAP        #15                 ; trap call
00001A28                          1118              
00001A28  4242                    1119              CLR         D2
00001A2A  1401                    1120              MOVE.B      D1,D2               ; Copy new byte over to D2
00001A2C  E642                    1121              ASR         #three,D2           ; Shift source register out
00001A2E  C47C 0007               1122              AND         #seven,D2           ; Set everything to 0 except for the mode
00001A32                          1123          
00001A32  4243                    1124              CLR         D3
00001A34  1601                    1125              MOVE.B      D1,D3
00001A36  C67C 0007               1126              AND         #seven,D3
00001A3A                          1127              
00001A3A  4241                    1128              CLR         D1                  ; Clear D1
00001A3C  3218                    1129              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001A3E                          1130              
00001A3E                          1131              
00001A3E  4EB9 00001D10           1132              JSR         printEA
00001A44                          1133              
00001A44  43F9 0000236F           1134              LEA         comma, A1           ; Display comma
00001A4A  103C 000E               1135              MOVE.B      #14, D0             ; command for trap call to display message
00001A4E  4E4F                    1136              TRAP        #15                 ; trap call
00001A50                          1137  
00001A50  4242                    1138              CLR         D2
00001A52  4243                    1139              CLR         D3
00001A54  1404                    1140              MOVE.B      D4,D2
00001A56  1605                    1141              MOVE.B      D5,D3
00001A58                          1142          
00001A58  4EB9 00001D10           1143              JSR         printEA
00001A5E                          1144          
00001A5E                          1145          
00001A5E  43F9 00002364           1146              LEA         newLine, A1           ; Display space
00001A64  103C 000E               1147              MOVE.B      #14, D0             ; command for trap call to display message
00001A68  4E4F                    1148              TRAP        #15                 ; trap call            
00001A6A                          1149  
00001A6A                          1150  
00001A6A  6000 F5A0               1151              BRA         LOOP                ; go back to the loop
00001A6E                          1152  
00001A6E                          1153  opNEG   
00001A6E  43F9 00002392           1154              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001A74  103C 000E               1155              MOVE.B      #14, D0             ; command for trap call to display message
00001A78  4E4F                    1156              TRAP        #15                 ; trap call
00001A7A                          1157          
00001A7A                          1158          
00001A7A  1218                    1159              MOVE.B      (A0)+, D1
00001A7C  1401                    1160              MOVE.B      D1,D2               ; copy data over
00001A7E  EC42                    1161              ASR         #six,D2
00001A80                          1162              
00001A80  B47C 0000               1163              CMP         #zero,D2
00001A84  6700 0016               1164              BEQ         opNEGB
00001A88  B47C 0001               1165              CMP         #one,D2
00001A8C  6700 004E               1166              BEQ         opNEGL
00001A90  B47C 0002               1167              CMP         #two,D2
00001A94  6700 0086               1168              BEQ         opNEGW
00001A98  6000 08C0               1169              BRA         INVALID
00001A9C                          1170  opNEGB
00001A9C                          1171  
00001A9C  43F9 000023FB           1172              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001AA2  103C 000E               1173              MOVE.B      #14, D0             ; command for trap call to display message
00001AA6  4E4F                    1174              TRAP        #15                 ; trap call
00001AA8                          1175          
00001AA8  43F9 00002368           1176              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001AAE  103C 000E               1177              MOVE.B      #14, D0             ; command for trap call to display message
00001AB2  4E4F                    1178              TRAP        #15                 ; trap call
00001AB4                          1179          
00001AB4  4242                    1180              CLR         D2                  ; Clear Data register 2
00001AB6  3401                    1181              MOVE        D1,D2               ; Move byte into D2
00001AB8  E642                    1182              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001ABA  C47C 0007               1183              AND         #seven,D2           ; Stores mode
00001ABE                          1184              
00001ABE  4243                    1185              CLR         D3
00001AC0  3601                    1186              MOVE        D1,D3
00001AC2  C67C 0007               1187              AND         #seven,D3
00001AC6                          1188          
00001AC6  4EB9 00001D10           1189              JSR         printEA
00001ACC                          1190                  
00001ACC  43F9 00002364           1191              LEA         newLine, A1           ; Display space
00001AD2  103C 000E               1192              MOVE.B      #14, D0             ; command for trap call to display message
00001AD6  4E4F                    1193              TRAP        #15                 ; trap call  
00001AD8                          1194          
00001AD8  6000 F532               1195              BRA         LOOP
00001ADC                          1196                  
00001ADC                          1197  
00001ADC                          1198  opNEGL
00001ADC                          1199  
00001ADC  43F9 00002401           1200              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001AE2  103C 000E               1201              MOVE.B      #14, D0             ; command for trap call to display message
00001AE6  4E4F                    1202              TRAP        #15                 ; trap call
00001AE8                          1203  
00001AE8  43F9 00002368           1204              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001AEE  103C 000E               1205              MOVE.B      #14, D0             ; command for trap call to display message
00001AF2  4E4F                    1206              TRAP        #15                 ; trap call
00001AF4                          1207                  
00001AF4  4242                    1208              CLR         D2                  ; Clear Data register 2
00001AF6  3401                    1209              MOVE        D1,D2               ; Move byte into D2
00001AF8  E642                    1210              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001AFA  C47C 0007               1211              AND         #seven,D2           ; Stores mode
00001AFE                          1212          
00001AFE  4243                    1213              CLR         D3
00001B00  3601                    1214              MOVE        D1,D3
00001B02  C67C 0007               1215              AND         #seven,D3
00001B06                          1216          
00001B06  4EB9 00001D10           1217              JSR         printEA
00001B0C                          1218                      
00001B0C  43F9 00002364           1219              LEA         newLine, A1         ; Display space
00001B12  103C 000E               1220              MOVE.B      #14, D0             ; command for trap call to display message
00001B16  4E4F                    1221              TRAP        #15                 ; trap call  
00001B18                          1222          
00001B18  6000 F4F2               1223              BRA         LOOP
00001B1C                          1224          
00001B1C                          1225  
00001B1C                          1226  opNEGW
00001B1C                          1227  
00001B1C  43F9 000023FE           1228              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001B22  103C 000E               1229              MOVE.B      #14, D0             ; command for trap call to display message
00001B26  4E4F                    1230              TRAP        #15                 ; trap call
00001B28                          1231          
00001B28  43F9 00002368           1232              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001B2E  103C 000E               1233              MOVE.B      #14, D0             ; command for trap call to display message
00001B32  4E4F                    1234              TRAP        #15                 ; trap call        
00001B34                          1235                  
00001B34  4242                    1236              CLR         D2                  ; Clear Data register 2
00001B36  3401                    1237              MOVE        D1,D2               ; Move byte into D2
00001B38  E642                    1238              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001B3A  C47C 0007               1239              AND         #seven,D2           ; Stores mode
00001B3E                          1240          
00001B3E  4243                    1241              CLR         D3
00001B40  3601                    1242              MOVE        D1,D3
00001B42  C67C 0007               1243              AND         #seven,D3
00001B46                          1244          
00001B46  4EB9 00001D10           1245              JSR         printEA
00001B4C                          1246              
00001B4C  43F9 00002364           1247              LEA         newLine, A1           ; Display space
00001B52  103C 000E               1248              MOVE.B      #14, D0             ; command for trap call to display message
00001B56  4E4F                    1249              TRAP        #15                 ; trap call  
00001B58                          1250          
00001B58  6000 F4B2               1251              BRA         LOOP
00001B5C                          1252  
00001B5C                          1253  opRTSJSR
00001B5C                          1254          
00001B5C  1218                    1255              MOVE.B      (A0)+, D1
00001B5E                          1256              
00001B5E  1401                    1257              MOVE.B      D1,D2               ; copy data over
00001B60  B47C 0075               1258              CMP         #117,D2
00001B64  6700 0050               1259              BEQ         opRTS
00001B68                          1260              
00001B68  EC42                    1261              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
00001B6A  B47C 0002               1262              CMP         #two,D2             ; Checking if it is JSR
00001B6E  6700 0006               1263              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001B72                          1264  
00001B72  6000 07E6               1265              BRA         invalid
00001B76                          1266  
00001B76                          1267  opJSR
00001B76                          1268                        
00001B76  43F9 0000239A           1269              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001B7C  103C 000E               1270              MOVE.B      #14, D0             ; command for trap call to display message
00001B80  4E4F                    1271              TRAP        #15                 ; trap call
00001B82                          1272              
00001B82  43F9 00002368           1273              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001B88  103C 000E               1274              MOVE.B      #14, D0             ; command for trap call to display message
00001B8C  4E4F                    1275              TRAP        #15                 ; trap call
00001B8E                          1276              
00001B8E  4242                    1277              CLR         D2
00001B90  4243                    1278              CLR         D3
00001B92                          1279              
00001B92  1401                    1280              MOVE.B      D1,D2
00001B94  E642                    1281              ASR         #three,D2
00001B96  C47C 0007               1282              AND         #seven,D2
00001B9A                          1283              
00001B9A  1601                    1284              MOVE.B      D1,D3
00001B9C  C67C 0007               1285              AND         #seven,D3
00001BA0                          1286              
00001BA0  4EB9 00001D10           1287              JSR         printEA
00001BA6                          1288              
00001BA6  43F9 00002364           1289              LEA         newLine, A1           ; Display space
00001BAC  103C 000E               1290              MOVE.B      #14, D0             ; command for trap call to display message
00001BB0  4E4F                    1291              TRAP        #15                 ; trap call  
00001BB2                          1292              
00001BB2  6000 F458               1293              BRA         loop            
00001BB6                          1294  opRTS
00001BB6                          1295  
00001BB6  43F9 00002396           1296              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
00001BBC  103C 000E               1297              MOVE.B      #14, D0             ; command for trap call to display message
00001BC0  4E4F                    1298              TRAP        #15                 ; trap call
00001BC2                          1299              
00001BC2  43F9 00002364           1300              LEA         newLine, A1           ; Display space
00001BC8  103C 000E               1301              MOVE.B      #14, D0             ; command for trap call to display message
00001BCC  4E4F                    1302              TRAP        #15                 ; trap call 
00001BCE                          1303              
00001BCE  6000 F43C               1304              BRA         loop
00001BD2                          1305  
00001BD2                          1306  opMOVEMLEA
00001BD2  4242                    1307              CLR         D2                  ; Clear D2
00001BD4  1401                    1308              MOVE.B      D1,D2               ; Copy byte over
00001BD6  C47C 000F               1309              AND         #secNib,D2          ; Check only the second nibble
00001BDA  B47C 000C               1310              CMP         #twelve,D2          ; Compare the second nibble to twelve
00001BDE  6700 000E               1311              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
00001BE2  B47C 0008               1312              CMP         #eight,D2           ; Compare the second nibble to eight
00001BE6  6700 0006               1313              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
00001BEA  6000 001A               1314              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
00001BEE                          1315              
00001BEE                          1316  opMOVEM
00001BEE                          1317  
00001BEE  43F9 00002396           1318              LEA         RTSMatch, A1       ; we know that the opcode will be MOVEM, so load A1 to print message
00001BF4  103C 000E               1319              MOVE.B      #14, D0             ; command for trap call to display message
00001BF8  4E4F                    1320              TRAP        #15                 ; trap call
00001BFA                          1321              
00001BFA  4244                    1322              CLR         D4                  ; Clearing D4 to store dr field
00001BFC  1801                    1323              MOVE.B      D1,D4               ; Moving byte to find dr field
00001BFE  E444                    1324              ASR         #two,D4             ; Moving dr field to readable spot
00001C00  C87C 0001               1325              AND         #one,D4             ; seting everything except dr to 0
00001C04                          1326              
00001C04  1218                    1327              MOVE.B      (A0)+, D1
00001C06                          1328              
00001C06                          1329  
00001C06                          1330  opLEA
00001C06                          1331  
00001C06                          1332  ***********************************************************************************************************
00001C06                          1333  *
00001C06                          1334  *               SUBQ OPCODE
00001C06                          1335  *
00001C06                          1336  ***********************************************************************************************************
00001C06                          1337  
00001C06                          1338  opSUBQ      
00001C06  43F9 000023A8           1339              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
00001C0C  103C 000E               1340              MOVE.B      #14, D0             ; command for trap call to display message
00001C10  4E4F                    1341              TRAP        #15                 ; trap call
00001C12                          1342  
00001C12                          1343  ***********************************************************************************************************
00001C12                          1344  *
00001C12                          1345  *               BRA OPCODE
00001C12                          1346  *
00001C12                          1347  ***********************************************************************************************************
00001C12                          1348              
00001C12  43F9 000023AD           1349  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001C18  103C 000E               1350          MOVE.B      #14, D0             ; command for trap call to display message
00001C1C  4E4F                    1351          TRAP        #15                 ; trap call
00001C1E                          1352          
00001C1E  4242                    1353          CLR         D2
00001C20  4243                    1354          CLR         D3      
00001C22                          1355  
00001C22  43F9 00002368           1356          LEA         space,A1
00001C28  103C 000E               1357          MOVE.B      #14,D0
00001C2C  4E4F                    1358          TRAP        #15
00001C2E                          1359          
00001C2E  143C 0007               1360          MOVE.B      #seven,D2
00001C32  1218                    1361          MOVE.B      (A0)+,D1
00001C34  4EB9 00001D10           1362          JSR         printEA
00001C3A                          1363          
00001C3A  43F9 00002364           1364          LEA         newLine, A1           ; create new line
00001C40  103C 000E               1365          MOVE.B      #14, D0             ; command for trap call to display message
00001C44  4E4F                    1366          TRAP        #15                 ; trap call
00001C46                          1367  
00001C46  6000 F3C4               1368          BRA         LOOP
00001C4A                          1369          
00001C4A                          1370          
00001C4A  43F9 000023B1           1371  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001C50  103C 000E               1372          MOVE.B      #14, D0             ; command for trap call to display message
00001C54  4E4F                    1373          TRAP        #15                 ; trap call
00001C56                          1374  
00001C56  43F9 000023B5           1375  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001C5C  103C 000E               1376          MOVE.B      #14, D0             ; command for trap call to display message
00001C60  4E4F                    1377          TRAP        #15                 ; trap call
00001C62                          1378  
00001C62  43F9 000023B9           1379  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001C68  103C 000E               1380          MOVE.B      #14, D0             ; command for trap call to display message
00001C6C  4E4F                    1381          TRAP        #15                 ; trap call
00001C6E                          1382  
00001C6E  43F9 000023BD           1383  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001C74  103C 000E               1384          MOVE.B      #14, D0             ; command for trap call to display message
00001C78  4E4F                    1385          TRAP        #15                 ; trap call
00001C7A                          1386  
00001C7A                          1387  ***********************************************************************************************************
00001C7A                          1388  *
00001C7A                          1389  *               SUB OPCODE
00001C7A                          1390  *
00001C7A                          1391  ***********************************************************************************************************
00001C7A                          1392  
00001C7A  43F9 000023C9           1393  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001C80  103C 000E               1394          MOVE.B      #14, D0             ; command for trap call to display message
00001C84  4E4F                    1395          TRAP        #15                 ; trap call
00001C86                          1396          
00001C86                          1397          
00001C86                          1398          
00001C86  43F9 00002368           1399          LEA         space,A1
00001C8C  103C 000E               1400          MOVE.B      #14,D0
00001C90  4E4F                    1401          TRAP        #15
00001C92                          1402          
00001C92  1218                    1403          MOVE.B      (A0)+,D1
00001C94  1401                    1404          MOVE.B      D1,D2
00001C96  E842                    1405          ASR         #4,D2
00001C98                          1406          
00001C98  4EB9 00001D10           1407          JSR         printEA
00001C9E                          1408          
00001C9E  43F9 00002364           1409          LEA         newLine,A1
00001CA4  103C 000E               1410          MOVE.B      #14,D0
00001CA8  4E4F                    1411          TRAP        #15
00001CAA                          1412          
00001CAA  6000 F360               1413          BRA         LOOP
00001CAE                          1414          
00001CAE                          1415          
00001CAE                          1416          
00001CAE  43F9 000023D5           1417  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001CB4  103C 000E               1418          MOVE.B      #14, D0             ; command for trap call to display message
00001CB8  4E4F                    1419          TRAP        #15                 ; trap call
00001CBA                          1420  
00001CBA  43F9 000023EF           1421  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001CC0  103C 000E               1422          MOVE.B      #14, D0             ; command for trap call to display message
00001CC4  4E4F                    1423          TRAP        #15                 ; trap call
00001CC6                          1424  
00001CC6  43F9 000023EB           1425  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001CCC  103C 000E               1426          MOVE.B      #14, D0             ; command for trap call to display message
00001CD0  4E4F                    1427          TRAP        #15                 ; trap call
00001CD2                          1428  
00001CD2  43F9 000023E7           1429  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00001CD8  103C 000E               1430          MOVE.B      #14, D0             ; command for trap call to display message
00001CDC  4E4F                    1431          TRAP        #15                 ; trap call
00001CDE                          1432  
00001CDE  43F9 000023E3           1433  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001CE4  103C 000E               1434          MOVE.B      #14, D0             ; command for trap call to display message
00001CE8  4E4F                    1435          TRAP        #15                 ; trap call
00001CEA                          1436  
00001CEA  43F9 000023F7           1437  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001CF0  103C 000E               1438          MOVE.B      #14, D0             ; command for trap call to display message
00001CF4  4E4F                    1439          TRAP        #15                 ; trap call
00001CF6                          1440  
00001CF6  43F9 000023F3           1441  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001CFC  103C 000E               1442          MOVE.B      #14, D0             ; command for trap call to display message
00001D00  4E4F                    1443          TRAP        #15                 ; trap call
00001D02                          1444  
00001D02                          1445  ***********************************************************************************************************
00001D02                          1446  *
00001D02                          1447  *                                           Register Finder
00001D02                          1448  *
00001D02                          1449  ***********************************************************************************************************
00001D02  48E7 FF7E               1450  findRege    MOVEM.L     D0-D7/A1-A6, -(SP)
00001D06                          1451  
00001D06  1218                    1452              MOVE.B      (A0)+,D1
00001D08  1401                    1453              MOVE.B      D1,D2
00001D0A                          1454              
00001D0A  E842                    1455              ASR         #four,D2
00001D0C                          1456              
00001D0C  6000 003A               1457              BRA         pDataReg
00001D10                          1458          
00001D10                          1459  ***********************************************************************************************************
00001D10                          1460  *
00001D10                          1461  *                                           EA Print Check
00001D10                          1462  *
00001D10                          1463  ***********************************************************************************************************
00001D10  48E7 FF7E               1464  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00001D14                          1465  
00001D14  B43C 0000               1466              CMP.B       #zero, D2
00001D18  6700 002E               1467              BEQ         pDataReg
00001D1C  B43C 0001               1468              CMP.B       #one, D2
00001D20  6700 00E6               1469              BEQ         pAddrReg
00001D24  B43C 0002               1470              CMP.B       #two, D2
00001D28  6700 019E               1471              BEQ         pAddrDir
00001D2C  B43C 0003               1472              CMP.B       #three, D2
00001D30  6700 02C2               1473              BEQ         pAddrPost
00001D34  B43C 0004               1474              CMP.B       #four, D2
00001D38  6700 0446               1475              BEQ         pAddrDec
00001D3C  B43C 0007               1476              CMP.B       #seven, D2
00001D40  6700 0576               1477              BEQ         pHex
00001D44  6000 0614               1478              BRA         invalid
00001D48                          1479  
00001D48                          1480  ***********************************************************************************************************
00001D48                          1481  * Data Register        
00001D48  B63C 0000               1482  pDataReg    CMP.B   #zero,D3
00001D4C  6700 003A               1483              BEQ     displayD0
00001D50  B63C 0001               1484              CMP.B   #one,D3
00001D54  6700 0042               1485              BEQ     displayD1
00001D58  B63C 0002               1486              CMP.B   #two,D3
00001D5C  6700 004A               1487              BEQ     displayD2
00001D60  B63C 0003               1488              CMP.B   #three,D3
00001D64  6700 0052               1489              BEQ     displayD3
00001D68  B63C 0004               1490              CMP.B   #four,D3
00001D6C  6700 005A               1491              BEQ     displayD4
00001D70  B63C 0005               1492              CMP.B   #five,D3
00001D74  6700 0062               1493              BEQ     displayD5
00001D78  B63C 0006               1494              CMP.B   #six,D3
00001D7C  6700 006A               1495              BEQ     displayD6
00001D80  B63C 0007               1496              CMP.B   #seven,D3
00001D84  6700 0072               1497              BEQ     displayD7
00001D88                          1498              
00001D88  43F9 0000241E           1499  displayD0   LEA         dispD0, A1          ; Display space
00001D8E  103C 000E               1500              MOVE.B      #14, D0             ; command for trap call to display message
00001D92  4E4F                    1501              TRAP        #15                 ; trap call
00001D94  6000 05C4               1502              BRA         endSUB              ; go to the end of the subroutine
00001D98                          1503              
00001D98  43F9 00002421           1504  displayD1   LEA         dispD1, A1          ; Display space
00001D9E  103C 000E               1505              MOVE.B      #14, D0             ; command for trap call to display message
00001DA2  4E4F                    1506              TRAP        #15                 ; trap call
00001DA4  6000 05B4               1507              BRA         endSUB              ; go to the end of the subroutine
00001DA8                          1508  
00001DA8  43F9 00002424           1509  displayD2   LEA         dispD2, A1          ; Display space
00001DAE  103C 000E               1510              MOVE.B      #14, D0             ; command for trap call to display message
00001DB2  4E4F                    1511              TRAP        #15                 ; trap call
00001DB4  6000 05A4               1512              BRA         endSUB              ; go to the end of the subroutine
00001DB8                          1513  
00001DB8  43F9 00002427           1514  displayD3   LEA         dispD3, A1          ; Display space
00001DBE  103C 000E               1515              MOVE.B      #14, D0             ; command for trap call to display message
00001DC2  4E4F                    1516              TRAP        #15                 ; trap call
00001DC4  6000 0594               1517              BRA         endSUB              ; go to the end of the subroutine
00001DC8                          1518  
00001DC8  43F9 0000242A           1519  displayD4   LEA         dispD4, A1          ; Display space
00001DCE  103C 000E               1520              MOVE.B      #14, D0             ; command for trap call to display message
00001DD2  4E4F                    1521              TRAP        #15                 ; trap call
00001DD4  6000 0584               1522              BRA         endSUB              ; go to the end of the subroutine
00001DD8                          1523  
00001DD8  43F9 0000242D           1524  displayD5   LEA         dispD5, A1          ; Display space
00001DDE  103C 000E               1525              MOVE.B      #14, D0             ; command for trap call to display message
00001DE2  4E4F                    1526              TRAP        #15                 ; trap call
00001DE4  6000 0574               1527              BRA         endSUB              ; go to the end of the subroutine
00001DE8                          1528  
00001DE8  43F9 00002430           1529  displayD6   LEA         dispD6, A1          ; Display space
00001DEE  103C 000E               1530              MOVE.B      #14, D0             ; command for trap call to display message
00001DF2  4E4F                    1531              TRAP        #15                 ; trap call
00001DF4  6000 0564               1532              BRA         endSUB              ; go to the end of the subroutine
00001DF8                          1533  
00001DF8  43F9 00002433           1534  displayD7   LEA         dispD7, A1          ; Display space
00001DFE  103C 000E               1535              MOVE.B      #14, D0             ; command for trap call to display message
00001E02  4E4F                    1536              TRAP        #15                 ; trap call
00001E04  6000 0554               1537              BRA         endSUB              ; go to the end of the subroutine
00001E08                          1538  ***********************************************************************************************************
00001E08                          1539  * Address Register
00001E08  B63C 0000               1540  pAddrReg    CMP.B   #zero,D3
00001E0C  6700 003A               1541              BEQ     displayA0
00001E10  B63C 0001               1542              CMP.B   #one,D3
00001E14  6700 0042               1543              BEQ     displayA1
00001E18  B63C 0002               1544              CMP.B   #two,D3
00001E1C  6700 004A               1545              BEQ     displayA2
00001E20  B63C 0003               1546              CMP.B   #three,D3
00001E24  6700 0052               1547              BEQ     displayA3
00001E28  B63C 0004               1548              CMP.B   #four,D3
00001E2C  6700 005A               1549              BEQ     displayA4
00001E30  B63C 0005               1550              CMP.B   #five,D3
00001E34  6700 0062               1551              BEQ     displayA5
00001E38  B63C 0006               1552              CMP.B   #six,D3
00001E3C  6700 006A               1553              BEQ     displayA6
00001E40  B63C 0007               1554              CMP.B   #seven,D3
00001E44  6700 0072               1555              BEQ     displayA7
00001E48                          1556              
00001E48  43F9 00002404           1557  displayA0   LEA         dispA0, A1          ; Display space
00001E4E  103C 000E               1558              MOVE.B      #14, D0             ; command for trap call to display message
00001E52  4E4F                    1559              TRAP        #15                 ; trap call
00001E54  6000 0504               1560              BRA         endSUB              ; go to the end of the subroutine
00001E58                          1561              
00001E58  43F9 00002407           1562  displayA1   LEA         dispA1, A1          ; Display space
00001E5E  103C 000E               1563              MOVE.B      #14, D0             ; command for trap call to display message
00001E62  4E4F                    1564              TRAP        #15                 ; trap call
00001E64  6000 04F4               1565              BRA         endSUB              ; go to the end of the subroutine
00001E68                          1566  
00001E68  43F9 0000240A           1567  displayA2   LEA         dispA2, A1          ; Display space
00001E6E  103C 000E               1568              MOVE.B      #14, D0             ; command for trap call to display message
00001E72  4E4F                    1569              TRAP        #15                 ; trap call
00001E74  6000 04E4               1570              BRA         endSUB              ; go to the end of the subroutine
00001E78                          1571  
00001E78  43F9 0000240D           1572  displayA3   LEA         dispA3, A1          ; Display space
00001E7E  103C 000E               1573              MOVE.B      #14, D0             ; command for trap call to display message
00001E82  4E4F                    1574              TRAP        #15                 ; trap call
00001E84  6000 04D4               1575              BRA         endSUB              ; go to the end of the subroutine
00001E88                          1576  
00001E88  43F9 00002410           1577  displayA4   LEA         dispA4, A1          ; Display space
00001E8E  103C 000E               1578              MOVE.B      #14, D0             ; command for trap call to display message
00001E92  4E4F                    1579              TRAP        #15                 ; trap call
00001E94  6000 04C4               1580              BRA         endSUB              ; go to the end of the subroutine
00001E98                          1581  
00001E98  43F9 00002413           1582  displayA5   LEA         dispA5, A1          ; Display space
00001E9E  103C 000E               1583              MOVE.B      #14, D0             ; command for trap call to display message
00001EA2  4E4F                    1584              TRAP        #15                 ; trap call
00001EA4  6000 04B4               1585              BRA         endSUB              ; go to the end of the subroutine
00001EA8                          1586  
00001EA8  43F9 00002416           1587  displayA6   LEA         dispA6, A1          ; Display space
00001EAE  103C 000E               1588              MOVE.B      #14, D0             ; command for trap call to display message
00001EB2  4E4F                    1589              TRAP        #15                 ; trap call
00001EB4  6000 04A4               1590              BRA         endSUB              ; go to the end of the subroutine
00001EB8                          1591  
00001EB8  43F9 00002419           1592  displayA7   LEA         dispA7, A1          ; Display space
00001EBE  103C 000E               1593              MOVE.B      #14, D0             ; command for trap call to display message
00001EC2  4E4F                    1594              TRAP        #15                 ; trap call
00001EC4  6000 0494               1595              BRA         endSUB              ; go to the end of the subroutine
00001EC8                          1596  
00001EC8                          1597  ***********************************************************************************************************
00001EC8                          1598  * Address Register Direct
00001EC8                          1599  
00001EC8  43F9 00002371           1600  pAddrDir    LEA         opPer, A1           ; Display space
00001ECE  103C 000E               1601              MOVE.B      #14, D0             ; command for trap call to display message
00001ED2  4E4F                    1602              TRAP        #15                 ; trap call
00001ED4                          1603              
00001ED4  B63C 0000               1604              CMP.B   #zero,D3
00001ED8  6700 003A               1605              BEQ     displayA0A
00001EDC  B63C 0001               1606              CMP.B   #one,D3
00001EE0  6700 004E               1607              BEQ     displayA1A
00001EE4  B63C 0002               1608              CMP.B   #two,D3
00001EE8  6700 0062               1609              BEQ     displayA2A
00001EEC  B63C 0003               1610              CMP.B   #three,D3
00001EF0  6700 0076               1611              BEQ     displayA3A
00001EF4  B63C 0004               1612              CMP.B   #four,D3
00001EF8  6700 008A               1613              BEQ     displayA4A
00001EFC  B63C 0005               1614              CMP.B   #five,D3
00001F00  6700 009E               1615              BEQ     displayA5A
00001F04  B63C 0006               1616              CMP.B   #six,D3
00001F08  6700 00B2               1617              BEQ     displayA6A
00001F0C  B63C 0007               1618              CMP.B   #seven,D3
00001F10  6700 00C6               1619              BEQ     displayA7A
00001F14                          1620              
00001F14  43F9 00002404           1621  displayA0A  LEA         dispA0, A1          ; Display space
00001F1A  103C 000E               1622              MOVE.B      #14, D0             ; command for trap call to display message
00001F1E  4E4F                    1623              TRAP        #15                 ; trap call
00001F20  43F9 00002373           1624              LEA         clPer, A1           ; Display space
00001F26  103C 000E               1625              MOVE.B      #14, D0             ; command for trap call to display message
00001F2A  4E4F                    1626              TRAP        #15                 ; trap call
00001F2C  6000 042C               1627              BRA         endSUB              ; go to the end of the subroutine
00001F30                          1628              
00001F30  43F9 00002407           1629  displayA1A  LEA         dispA1, A1          ; Display space
00001F36  103C 000E               1630              MOVE.B      #14, D0             ; command for trap call to display message
00001F3A  4E4F                    1631              TRAP        #15                 ; trap call
00001F3C  43F9 00002373           1632              LEA         clPer, A1           ; Display space
00001F42  103C 000E               1633              MOVE.B      #14, D0             ; command for trap call to display message
00001F46  4E4F                    1634              TRAP        #15                 ; trap call
00001F48  6000 0410               1635              BRA         endSUB              ; go to the end of the subroutine
00001F4C                          1636  
00001F4C  43F9 0000240A           1637  displayA2A  LEA         dispA2, A1          ; Display space
00001F52  103C 000E               1638              MOVE.B      #14, D0             ; command for trap call to display message
00001F56  4E4F                    1639              TRAP        #15                 ; trap call
00001F58  43F9 00002373           1640              LEA         clPer, A1           ; Display space
00001F5E  103C 000E               1641              MOVE.B      #14, D0             ; command for trap call to display message
00001F62  4E4F                    1642              TRAP        #15                 ; trap call
00001F64  6000 03F4               1643              BRA         endSUB              ; go to the end of the subroutine
00001F68                          1644  
00001F68  43F9 0000240D           1645  displayA3A  LEA         dispA3, A1          ; Display space
00001F6E  103C 000E               1646              MOVE.B      #14, D0             ; command for trap call to display message
00001F72  4E4F                    1647              TRAP        #15                 ; trap call
00001F74  43F9 00002373           1648              LEA         clPer, A1           ; Display space
00001F7A  103C 000E               1649              MOVE.B      #14, D0             ; command for trap call to display message
00001F7E  4E4F                    1650              TRAP        #15                 ; trap call
00001F80  6000 03D8               1651              BRA         endSUB              ; go to the end of the subroutine
00001F84                          1652  
00001F84  43F9 00002410           1653  displayA4A  LEA         dispA4, A1          ; Display space
00001F8A  103C 000E               1654              MOVE.B      #14, D0             ; command for trap call to display message
00001F8E  4E4F                    1655              TRAP        #15                 ; trap call
00001F90  43F9 00002373           1656              LEA         clPer, A1           ; Display space
00001F96  103C 000E               1657              MOVE.B      #14, D0             ; command for trap call to display message
00001F9A  4E4F                    1658              TRAP        #15                 ; trap call
00001F9C  6000 03BC               1659              BRA         endSUB              ; go to the end of the subroutine
00001FA0                          1660  
00001FA0  43F9 00002413           1661  displayA5A  LEA         dispA5, A1          ; Display space
00001FA6  103C 000E               1662              MOVE.B      #14, D0             ; command for trap call to display message
00001FAA  4E4F                    1663              TRAP        #15                 ; trap call
00001FAC  43F9 00002373           1664              LEA         clPer, A1           ; Display space
00001FB2  103C 000E               1665              MOVE.B      #14, D0             ; command for trap call to display message
00001FB6  4E4F                    1666              TRAP        #15                 ; trap call
00001FB8  6000 03A0               1667              BRA         endSUB              ; go to the end of the subroutine
00001FBC                          1668  
00001FBC  43F9 00002416           1669  displayA6A  LEA         dispA6, A1          ; Display space
00001FC2  103C 000E               1670              MOVE.B      #14, D0             ; command for trap call to display message
00001FC6  4E4F                    1671              TRAP        #15                 ; trap call
00001FC8  43F9 00002373           1672              LEA         clPer, A1           ; Display space
00001FCE  103C 000E               1673              MOVE.B      #14, D0             ; command for trap call to display message
00001FD2  4E4F                    1674              TRAP        #15                 ; trap call
00001FD4  6000 0384               1675              BRA         endSUB              ; go to the end of the subroutine
00001FD8                          1676  
00001FD8  43F9 00002419           1677  displayA7A  LEA         dispA7, A1          ; Display space
00001FDE  103C 000E               1678              MOVE.B      #14, D0             ; command for trap call to display message
00001FE2  4E4F                    1679              TRAP        #15                 ; trap call
00001FE4  43F9 00002373           1680              LEA         clPer, A1           ; Display space
00001FEA  103C 000E               1681              MOVE.B      #14, D0             ; command for trap call to display message
00001FEE  4E4F                    1682              TRAP        #15                 ; trap call
00001FF0  6000 0368               1683              BRA         endSUB              ; go to the end of the subroutine
00001FF4                          1684              
00001FF4                          1685  ***********************************************************************************************************
00001FF4                          1686  * Addr Postincrement
00001FF4                          1687              
00001FF4  43F9 00002371           1688  pAddrPost   LEA         opPer, A1           ; Display space
00001FFA  103C 000E               1689              MOVE.B      #14, D0             ; command for trap call to display message
00001FFE  4E4F                    1690              TRAP        #15                 ; trap call
00002000                          1691              
00002000  B63C 0000               1692              CMP.B   #zero,D3
00002004  6700 003A               1693              BEQ     displayA0P
00002008  B63C 0001               1694              CMP.B   #one,D3
0000200C  6700 005A               1695              BEQ     displayA1P
00002010  B63C 0002               1696              CMP.B   #two,D3
00002014  6700 007A               1697              BEQ     displayA2P
00002018  B63C 0003               1698              CMP.B   #three,D3
0000201C  6700 009A               1699              BEQ     displayA3P
00002020  B63C 0004               1700              CMP.B   #four,D3
00002024  6700 00BA               1701              BEQ     displayA4P
00002028  B63C 0005               1702              CMP.B   #five,D3
0000202C  6700 00DA               1703              BEQ     displayA5P
00002030  B63C 0006               1704              CMP.B   #six,D3
00002034  6700 00FA               1705              BEQ     displayA6P
00002038  B63C 0007               1706              CMP.B   #seven,D3
0000203C  6700 011A               1707              BEQ     displayA7P
00002040                          1708              
00002040  43F9 00002404           1709  displayA0P  LEA         dispA0, A1          ; Display space
00002046  103C 000E               1710              MOVE.B      #14, D0             ; command for trap call to display message
0000204A  4E4F                    1711              TRAP        #15                 ; trap call
0000204C  43F9 00002373           1712              LEA         clPer, A1           ; Display space
00002052  103C 000E               1713              MOVE.B      #14, D0             ; command for trap call to display message
00002056  4E4F                    1714              TRAP        #15                 ; trap call
00002058  43F9 00002377           1715              LEA         inc, A1             ; Display space
0000205E  103C 000E               1716              MOVE.B      #14, D0             ; command for trap call to display message
00002062  4E4F                    1717              TRAP        #15                 ; trap call
00002064  6000 02F4               1718              BRA         endSUB              ; go to the end of the subroutine
00002068                          1719              
00002068  43F9 00002407           1720  displayA1P  LEA         dispA1, A1          ; Display space
0000206E  103C 000E               1721              MOVE.B      #14, D0             ; command for trap call to display message
00002072  4E4F                    1722              TRAP        #15                 ; trap call
00002074  43F9 00002373           1723              LEA         clPer, A1           ; Display space
0000207A  103C 000E               1724              MOVE.B      #14, D0             ; command for trap call to display message
0000207E  4E4F                    1725              TRAP        #15                 ; trap call
00002080  43F9 00002377           1726              LEA         inc, A1             ; Display space
00002086  103C 000E               1727              MOVE.B      #14, D0             ; command for trap call to display message
0000208A  4E4F                    1728              TRAP        #15                 ; trap call
0000208C  6000 02CC               1729              BRA         endSUB              ; go to the end of the subroutine
00002090                          1730  
00002090  43F9 0000240A           1731  displayA2P  LEA         dispA2, A1          ; Display space
00002096  103C 000E               1732              MOVE.B      #14, D0             ; command for trap call to display message
0000209A  4E4F                    1733              TRAP        #15                 ; trap call
0000209C  43F9 00002373           1734              LEA         clPer, A1           ; Display space
000020A2  103C 000E               1735              MOVE.B      #14, D0             ; command for trap call to display message
000020A6  4E4F                    1736              TRAP        #15                 ; trap call
000020A8  43F9 00002377           1737              LEA         inc, A1             ; Display space
000020AE  103C 000E               1738              MOVE.B      #14, D0             ; command for trap call to display message
000020B2  4E4F                    1739              TRAP        #15                 ; trap call
000020B4  6000 02A4               1740              BRA         endSUB              ; go to the end of the subroutine
000020B8                          1741  
000020B8  43F9 0000240D           1742  displayA3P  LEA         dispA3, A1          ; Display space
000020BE  103C 000E               1743              MOVE.B      #14, D0             ; command for trap call to display message
000020C2  4E4F                    1744              TRAP        #15                 ; trap call
000020C4  43F9 00002373           1745              LEA         clPer, A1           ; Display space
000020CA  103C 000E               1746              MOVE.B      #14, D0             ; command for trap call to display message
000020CE  4E4F                    1747              TRAP        #15                 ; trap call
000020D0  43F9 00002377           1748              LEA         inc, A1             ; Display space
000020D6  103C 000E               1749              MOVE.B      #14, D0             ; command for trap call to display message
000020DA  4E4F                    1750              TRAP        #15                 ; trap call
000020DC  6000 027C               1751              BRA         endSUB              ; go to the end of the subroutine
000020E0                          1752  
000020E0  43F9 00002410           1753  displayA4P  LEA         dispA4, A1          ; Display space
000020E6  103C 000E               1754              MOVE.B      #14, D0             ; command for trap call to display message
000020EA  4E4F                    1755              TRAP        #15                 ; trap call
000020EC  43F9 00002373           1756              LEA         clPer, A1           ; Display space
000020F2  103C 000E               1757              MOVE.B      #14, D0             ; command for trap call to display message
000020F6  4E4F                    1758              TRAP        #15                 ; trap call
000020F8  43F9 00002377           1759              LEA         inc, A1             ; Display space
000020FE  103C 000E               1760              MOVE.B      #14, D0             ; command for trap call to display message
00002102  4E4F                    1761              TRAP        #15                 ; trap call
00002104  6000 0254               1762              BRA         endSUB              ; go to the end of the subroutine
00002108                          1763  
00002108  43F9 00002413           1764  displayA5P  LEA         dispA5, A1          ; Display space
0000210E  103C 000E               1765              MOVE.B      #14, D0             ; command for trap call to display message
00002112  4E4F                    1766              TRAP        #15                 ; trap call
00002114  43F9 00002373           1767              LEA         clPer, A1           ; Display space
0000211A  103C 000E               1768              MOVE.B      #14, D0             ; command for trap call to display message
0000211E  4E4F                    1769              TRAP        #15                 ; trap call
00002120  43F9 00002377           1770              LEA         inc, A1             ; Display space
00002126  103C 000E               1771              MOVE.B      #14, D0             ; command for trap call to display message
0000212A  4E4F                    1772              TRAP        #15                 ; trap call
0000212C  6000 022C               1773              BRA         endSUB              ; go to the end of the subroutine
00002130                          1774  
00002130  43F9 00002416           1775  displayA6P  LEA         dispA6, A1          ; Display space
00002136  103C 000E               1776              MOVE.B      #14, D0             ; command for trap call to display message
0000213A  4E4F                    1777              TRAP        #15                 ; trap call
0000213C  43F9 00002373           1778              LEA         clPer, A1           ; Display space
00002142  103C 000E               1779              MOVE.B      #14, D0             ; command for trap call to display message
00002146  4E4F                    1780              TRAP        #15                 ; trap call
00002148  43F9 00002377           1781              LEA         inc, A1             ; Display space
0000214E  103C 000E               1782              MOVE.B      #14, D0             ; command for trap call to display message
00002152  4E4F                    1783              TRAP        #15                 ; trap call
00002154  6000 0204               1784              BRA         endSUB              ; go to the end of the subroutine
00002158                          1785  
00002158  43F9 00002419           1786  displayA7P  LEA         dispA7, A1          ; Display space
0000215E  103C 000E               1787              MOVE.B      #14, D0             ; command for trap call to display message
00002162  4E4F                    1788              TRAP        #15                 ; trap call
00002164  43F9 00002373           1789              LEA         clPer, A1           ; Display space
0000216A  103C 000E               1790              MOVE.B      #14, D0             ; command for trap call to display message
0000216E  4E4F                    1791              TRAP        #15                 ; trap call
00002170  43F9 00002377           1792              LEA         inc, A1             ; Display space
00002176  103C 000E               1793              MOVE.B      #14, D0             ; command for trap call to display message
0000217A  4E4F                    1794              TRAP        #15                 ; trap call
0000217C  6000 01DC               1795              BRA         endSUB              ; go to the end of the subroutine
00002180                          1796  
00002180                          1797  ***********************************************************************************************************
00002180                          1798  * Addr Postdecrement
00002180                          1799  
00002180  43F9 00002375           1800  pAddrDec    LEA         dec, A1             ; Display space
00002186  103C 000E               1801              MOVE.B      #14, D0             ; command for trap call to display message
0000218A  4E4F                    1802              TRAP        #15                 ; trap call
0000218C                          1803              
0000218C  43F9 00002371           1804              LEA         opPer, A1           ; Display space
00002192  103C 000E               1805              MOVE.B      #14, D0             ; command for trap call to display message
00002196  4E4F                    1806              TRAP        #15                 ; trap call
00002198                          1807              
00002198  B63C 0000               1808              CMP.B   #zero,D3
0000219C  6700 003A               1809              BEQ     displayA0D
000021A0  B63C 0001               1810              CMP.B   #one,D3
000021A4  6700 004E               1811              BEQ     displayA1D
000021A8  B63C 0002               1812              CMP.B   #two,D3
000021AC  6700 0062               1813              BEQ     displayA2D
000021B0  B63C 0003               1814              CMP.B   #three,D3
000021B4  6700 0076               1815              BEQ     displayA3D
000021B8  B63C 0004               1816              CMP.B   #four,D3
000021BC  6700 008A               1817              BEQ     displayA4D
000021C0  B63C 0005               1818              CMP.B   #five,D3
000021C4  6700 009E               1819              BEQ     displayA5D
000021C8  B63C 0006               1820              CMP.B   #six,D3
000021CC  6700 00B2               1821              BEQ     displayA6D
000021D0  B63C 0007               1822              CMP.B   #seven,D3
000021D4  6700 00C6               1823              BEQ     displayA7D
000021D8                          1824              
000021D8  43F9 00002404           1825  displayA0D  LEA         dispA0, A1          ; Display space
000021DE  103C 000E               1826              MOVE.B      #14, D0             ; command for trap call to display message
000021E2  4E4F                    1827              TRAP        #15                 ; trap call
000021E4  43F9 00002373           1828              LEA         clPer, A1           ; Display space
000021EA  103C 000E               1829              MOVE.B      #14, D0             ; command for trap call to display message
000021EE  4E4F                    1830              TRAP        #15                 ; trap call
000021F0  6000 0168               1831              BRA         endSUB              ; go to the end of the subroutine
000021F4                          1832              
000021F4  43F9 00002407           1833  displayA1D  LEA         dispA1, A1          ; Display space
000021FA  103C 000E               1834              MOVE.B      #14, D0             ; command for trap call to display message
000021FE  4E4F                    1835              TRAP        #15                 ; trap call
00002200  43F9 00002373           1836              LEA         clPer, A1           ; Display space
00002206  103C 000E               1837              MOVE.B      #14, D0             ; command for trap call to display message
0000220A  4E4F                    1838              TRAP        #15                 ; trap call
0000220C  6000 014C               1839              BRA         endSUB              ; go to the end of the subroutine
00002210                          1840  
00002210  43F9 0000240A           1841  displayA2D  LEA         dispA2, A1          ; Display space
00002216  103C 000E               1842              MOVE.B      #14, D0             ; command for trap call to display message
0000221A  4E4F                    1843              TRAP        #15                 ; trap call
0000221C  43F9 00002373           1844              LEA         clPer, A1           ; Display space
00002222  103C 000E               1845              MOVE.B      #14, D0             ; command for trap call to display message
00002226  4E4F                    1846              TRAP        #15                 ; trap call
00002228  6000 0130               1847              BRA         endSUB              ; go to the end of the subroutine
0000222C                          1848  
0000222C  43F9 0000240D           1849  displayA3D  LEA         dispA3, A1          ; Display space
00002232  103C 000E               1850              MOVE.B      #14, D0             ; command for trap call to display message
00002236  4E4F                    1851              TRAP        #15                 ; trap call
00002238  43F9 00002373           1852              LEA         clPer, A1           ; Display space
0000223E  103C 000E               1853              MOVE.B      #14, D0             ; command for trap call to display message
00002242  4E4F                    1854              TRAP        #15                 ; trap call
00002244  6000 0114               1855              BRA         endSUB              ; go to the end of the subroutine
00002248                          1856  
00002248  43F9 00002410           1857  displayA4D  LEA         dispA4, A1          ; Display space
0000224E  103C 000E               1858              MOVE.B      #14, D0             ; command for trap call to display message
00002252  4E4F                    1859              TRAP        #15                 ; trap call
00002254  43F9 00002373           1860              LEA         clPer, A1           ; Display space
0000225A  103C 000E               1861              MOVE.B      #14, D0             ; command for trap call to display message
0000225E  4E4F                    1862              TRAP        #15                 ; trap call
00002260  6000 00F8               1863              BRA         endSUB              ; go to the end of the subroutine
00002264                          1864  
00002264  43F9 00002413           1865  displayA5D  LEA         dispA5, A1          ; Display space
0000226A  103C 000E               1866              MOVE.B      #14, D0             ; command for trap call to display message
0000226E  4E4F                    1867              TRAP        #15                 ; trap call
00002270  43F9 00002373           1868              LEA         clPer, A1           ; Display space
00002276  103C 000E               1869              MOVE.B      #14, D0             ; command for trap call to display message
0000227A  4E4F                    1870              TRAP        #15                 ; trap call
0000227C  6000 00DC               1871              BRA         endSUB              ; go to the end of the subroutine
00002280                          1872  
00002280  43F9 00002416           1873  displayA6D  LEA         dispA6, A1          ; Display space
00002286  103C 000E               1874              MOVE.B      #14, D0             ; command for trap call to display message
0000228A  4E4F                    1875              TRAP        #15                 ; trap call
0000228C  43F9 00002373           1876              LEA         clPer, A1           ; Display space
00002292  103C 000E               1877              MOVE.B      #14, D0             ; command for trap call to display message
00002296  4E4F                    1878              TRAP        #15                 ; trap call
00002298  6000 00C0               1879              BRA         endSUB              ; go to the end of the subroutine
0000229C                          1880  
0000229C  43F9 00002419           1881  displayA7D  LEA         dispA7, A1          ; Display space
000022A2  103C 000E               1882              MOVE.B      #14, D0             ; command for trap call to display message
000022A6  4E4F                    1883              TRAP        #15                 ; trap call
000022A8  43F9 00002373           1884              LEA         clPer, A1           ; Display space
000022AE  103C 000E               1885              MOVE.B      #14, D0             ; command for trap call to display message
000022B2  4E4F                    1886              TRAP        #15                 ; trap call
000022B4  6000 00A4               1887              BRA         endSUB              ; go to the end of the subroutine
000022B8                          1888  
000022B8                          1889  
000022B8                          1890  ***********************************************************************************************************
000022B8                          1891  * Absolute Address
000022B8  B63C 0000               1892  pHex        CMP.B       #zero, D3
000022BC  6700 0012               1893              BEQ         AbsShort
000022C0  B63C 0001               1894              CMP.B       #one, D3
000022C4  6700 003C               1895              BEQ         AbsLong
000022C8  B63C 0004               1896              CMP.B       #four, D3
000022CC  6700 0066               1897              BEQ         DispImm
000022D0                          1898              
000022D0  43F9 00002371           1899  AbsShort    LEA         opPer, A1           ; Display space
000022D6  103C 000E               1900              MOVE.B      #14, D0             ; command for trap call to display message
000022DA  4E4F                    1901              TRAP        #15                 ; trap call
000022DC                          1902              
000022DC  43F9 0000236D           1903              LEA         dispHex, A1         ; Display space
000022E2  103C 000E               1904              MOVE.B      #14, D0             ; command for trap call to display message
000022E6  4E4F                    1905              TRAP        #15                 ; trap call
000022E8                          1906              
000022E8  4241                    1907              CLR         D1
000022EA  3218                    1908              MOVE.W      (A0)+, D1
000022EC                          1909              
000022EC  103C 0003               1910              MOVE.B      #3, D0
000022F0  4E4F                    1911              TRAP        #15
000022F2                          1912              
000022F2  43F9 00002373           1913              LEA         clPer, A1           ; Display space
000022F8  103C 000E               1914              MOVE.B      #14, D0             ; command for trap call to display message
000022FC  4E4F                    1915              TRAP        #15                 ; trap call
000022FE                          1916              
000022FE  6000 005A               1917              BRA         endSub
00002302                          1918              
00002302  43F9 00002371           1919  AbsLong     LEA         opPer, A1           ; Display space
00002308  103C 000E               1920              MOVE.B      #14, D0             ; command for trap call to display message
0000230C  4E4F                    1921              TRAP        #15                 ; trap call
0000230E                          1922              
0000230E  43F9 0000236D           1923              LEA         dispHex, A1         ; Display space
00002314  103C 000E               1924              MOVE.B      #14, D0             ; command for trap call to display message
00002318  4E4F                    1925              TRAP        #15                 ; trap call
0000231A                          1926              
0000231A  4241                    1927              CLR         D1
0000231C  2218                    1928              MOVE.L      (A0)+, D1
0000231E                          1929              
0000231E  103C 0003               1930              MOVE.B      #3, D0
00002322  4E4F                    1931              TRAP        #15
00002324                          1932              
00002324  43F9 00002373           1933              LEA         clPer, A1           ; Display space
0000232A  103C 000E               1934              MOVE.B      #14, D0             ; command for trap call to display message
0000232E  4E4F                    1935              TRAP        #15                 ; trap call
00002330                          1936              
00002330  6000 0028               1937              BRA         endSub
00002334                          1938  
00002334  43F9 0000236B           1939  DispImm     LEA         hashTag, A1         ; Display space
0000233A  103C 000E               1940              MOVE.B      #14, D0             ; command for trap call to display message
0000233E  4E4F                    1941              TRAP        #15                 ; trap call
00002340                          1942              
00002340  4241                    1943              CLR         D1
00002342  3218                    1944              MOVE.W      (A0)+, D1
00002344                          1945  
00002344  43F9 0000236D           1946              LEA         dispHex, A1         ; Display space
0000234A  103C 000E               1947              MOVE.B      #14, D0             ; command for trap call to display message
0000234E  4E4F                    1948              TRAP        #15                 ; trap call
00002350                          1949              
00002350  103C 0003               1950              MOVE.B      #3, D0
00002354  4E4F                    1951              TRAP        #15
00002356                          1952  
00002356  6000 0002               1953              BRA         endSub
0000235A                          1954  
0000235A                          1955  invalid
0000235A                          1956  
0000235A                          1957  endSUB
0000235A                          1958          
0000235A  4CDF 7EFF               1959          MOVEM.L  (SP)+, D0-D7/A1-A6
0000235E  4E75                    1960          RTS
00002360                          1961  
00002360                          1962  ***********************************************************************************************************
00002360                          1963  ***********************************************************************************************************
00002360                          1964  ***********************************************************************************************************
00002360                          1965  
00002360                          1966  printInvalid
00002360                          1967  endPROG    
00002360                          1968  
00002360  FFFF FFFF               1969      SIMHALT                             ; halt simulator
00002364                          1970  
00002364= 20 0D 0A 00             1971  newLine     DC.B    ' ', CR, LF, 0
00002368= 20 20 00                1972  space       DC.B    '  ', 0
0000236B                          1973  
0000236B= 23 00                   1974  hashTag     DC.B    '#', 0
0000236D= 24 00                   1975  dispHex     DC.B    '$', 0
0000236F= 2C 00                   1976  comma       DC.B    ',', 0
00002371                          1977  
00002371= 28 00                   1978  opPer       DC.B    '(', 0
00002373= 29 00                   1979  clPer       DC.B    ')', 0
00002375= 2D 00                   1980  dec         DC.B    '-', 0
00002377= 2B 00                   1981  inc         DC.B    '+', 0
00002379                          1982  
00002379= 4F 52 49 00             1983  ORImatch    DC.B    'ORI', 0
0000237D= 43 4D 50 49 00          1984  CMPImatch   DC.B    'CMPI', 0
00002382= 42 43 4C 52 00          1985  BCLRmatch   DC.B    'BCLR', 0
00002387= 4D 4F 56 45 00          1986  MOVEmatch   DC.B    'MOVE', 0
0000238C= 4D 4F 56 45 41 00       1987  MOVEAmatch  DC.B    'MOVEA', 0
00002392= 4E 45 47 00             1988  NEGmatch    DC.B    'NEG', 0
00002396= 52 54 53 00             1989  RTSmatch    DC.B    'RTS', 0
0000239A= 4A 53 52 00             1990  JSRmatch    DC.B    'JSR', 0
0000239E= 4D 4F 56 45 4D 00       1991  MOVEMmatch  DC.B    'MOVEM', 0
000023A4= 4C 45 41 00             1992  LEAmatch    DC.B    'LEA', 0
000023A8= 53 55 42 51 00          1993  SUBQmatch   DC.B    'SUBQ', 0
000023AD= 42 52 41 00             1994  BRAmatch    DC.B    'BRA', 0
000023B1= 42 43 53 00             1995  BCSmatch    DC.B    'BCS', 0
000023B5= 42 56 43 00             1996  BVCmatch    DC.B    'BVC', 0
000023B9= 42 47 45 00             1997  BGEmatch    DC.B    'BGE', 0
000023BD= 42 4C 54 00             1998  BLTmatch    DC.B    'BLT', 0
000023C1= 44 49 56 53 00          1999  DIVSmatch   DC.B    'DIVS', 0
000023C6= 4F 52 00                2000  ORmatch     DC.B    'OR', 0
000023C9= 53 55 42 00             2001  SUBmatch    DC.B    'SUB', 0
000023CD= 45 4F 52 00             2002  EORmatch    DC.B    'EOR', 0
000023D1= 43 4D 50 00             2003  CMPmatch    DC.B    'CMP', 0
000023D5= 4D 55 4C 53 00          2004  MULSmatch   DC.B    'MULS', 0
000023DA= 41 44 44 00             2005  ADDmatch    DC.B    'ADD', 0
000023DE= 41 44 44 41 00          2006  ADDAmatch   DC.B    'ADDA', 0
000023E3= 4C 53 52 00             2007  LSRmatch    DC.B    'LSR', 0
000023E7= 4C 53 4C 00             2008  LSLmatch    DC.B    'LSL', 0
000023EB= 41 53 52 00             2009  ASRmatch    DC.B    'ASR', 0
000023EF= 41 53 4C 00             2010  ASLmatch    DC.B    'ASL', 0
000023F3= 52 4F 52 00             2011  RORmatch    DC.B    'ROR', 0
000023F7= 52 4F 4C 00             2012  ROLmatch    DC.B    'ROL', 0
000023FB                          2013   
000023FB= 2E 42 00                2014  dispByte    DC.B    '.B', 0
000023FE= 2E 57 00                2015  dispWord    DC.B    '.W', 0
00002401= 2E 4C 00                2016  dispLong    DC.B    '.L', 0
00002404                          2017  
00002404= 41 30 00                2018  dispA0      DC.B    'A0', 0
00002407= 41 31 00                2019  dispA1      DC.B    'A1', 0
0000240A= 41 32 00                2020  dispA2      DC.B    'A2', 0
0000240D= 41 33 00                2021  dispA3      DC.B    'A3', 0
00002410= 41 34 00                2022  dispA4      DC.B    'A4', 0
00002413= 41 35 00                2023  dispA5      DC.B    'A5', 0
00002416= 41 36 00                2024  dispA6      DC.B    'A6', 0
00002419= 41 37 00                2025  dispA7      DC.B    'A7', 0
0000241C                          2026  
0000241C= 44 00                   2027  dispD       DC.B    'D',0
0000241E= 44 30 00                2028  dispD0      DC.B    'D0', 0
00002421= 44 31 00                2029  dispD1      DC.B    'D1', 0
00002424= 44 32 00                2030  dispD2      DC.B    'D2', 0
00002427= 44 33 00                2031  dispD3      DC.B    'D3', 0
0000242A= 44 34 00                2032  dispD4      DC.B    'D4', 0
0000242D= 44 35 00                2033  dispD5      DC.B    'D5', 0
00002430= 44 36 00                2034  dispD6      DC.B    'D6', 0
00002433= 44 37 00                2035  dispD7      DC.B    'D7', 0  
00002436                          2036             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             2302
ABSSHORT            22D0
ADDAMATCH           23DE
ADDMATCH            23DA
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            23EF
ASRMATCH            23EB
BCLRMATCH           2382
BCSMATCH            23B1
BGEMATCH            23B9
BLTMATCH            23BD
BRAEIGHT            110E
BRAELEVEN           1128
BRAFIVE             10DE
BRAFOUR             10C2
BRAFOURTEEN         1146
BRAMATCH            23AD
BRANINE             1124
BRAONE              10B6
BRASIX              10E2
BRATHIRTEEN         1146
BRATHREE            10BE
BRATWELVE           1142
BRATWO              10BA
BRAZERO             1086
BVCMATCH            23B5
CLPER               2373
CMPIMATCH           237D
CMPMATCH            23D1
COMMA               236F
CR                  D
DEC                 2375
DISPA0              2404
DISPA1              2407
DISPA2              240A
DISPA3              240D
DISPA4              2410
DISPA5              2413
DISPA6              2416
DISPA7              2419
DISPBYTE            23FB
DISPD               241C
DISPD0              241E
DISPD1              2421
DISPD2              2424
DISPD3              2427
DISPD4              242A
DISPD5              242D
DISPD6              2430
DISPD7              2433
DISPHEX             236D
DISPIMM             2334
DISPLAYA0           1E48
DISPLAYA0A          1F14
DISPLAYA0D          21D8
DISPLAYA0P          2040
DISPLAYA1           1E58
DISPLAYA1A          1F30
DISPLAYA1D          21F4
DISPLAYA1P          2068
DISPLAYA2           1E68
DISPLAYA2A          1F4C
DISPLAYA2D          2210
DISPLAYA2P          2090
DISPLAYA3           1E78
DISPLAYA3A          1F68
DISPLAYA3D          222C
DISPLAYA3P          20B8
DISPLAYA4           1E88
DISPLAYA4A          1F84
DISPLAYA4D          2248
DISPLAYA4P          20E0
DISPLAYA5           1E98
DISPLAYA5A          1FA0
DISPLAYA5D          2264
DISPLAYA5P          2108
DISPLAYA6           1EA8
DISPLAYA6A          1FBC
DISPLAYA6D          2280
DISPLAYA6P          2130
DISPLAYA7           1EB8
DISPLAYA7A          1FD8
DISPLAYA7D          229C
DISPLAYA7P          2158
DISPLAYD0           1D88
DISPLAYD1           1D98
DISPLAYD2           1DA8
DISPLAYD3           1DB8
DISPLAYD4           1DC8
DISPLAYD5           1DD8
DISPLAYD6           1DE8
DISPLAYD7           1DF8
DISPLONG            2401
DISPWORD            23FE
DIVSMATCH           23C1
EIGHT               8
ELEVEN              B
ENDPROG             2360
ENDSUB              235A
EORMATCH            23CD
FINDREGE            1D02
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             236B
INC                 2377
INVALID             235A
JSRMATCH            239A
LEAMATCH            23A4
LF                  A
LOOP                100C
LSLMATCH            23E7
LSRMATCH            23E3
MOVEAMATCH          238C
MOVEMATCH           2387
MOVEMMATCH          239E
MULSMATCH           23D5
NEGMATCH            2392
NEWLINE             2364
NINE                9
ONE                 1
OPASL               1CBA
OPASR               1CC6
OPBCC               117A
OPBCLR              1724
OPBCS               1C4A
OPBGE               1C62
OPBLT               1C6E
OPBRA               1C12
OPBVC               1C56
OPCMP               136C
OPCMPB              139E
OPCMPI              15B2
OPCMPIB             15FE
OPCMPIL             16C2
OPCMPIW             1660
OPCMPL              141E
OPCMPW              13DE
OPDIVS              1270
OPDYNBCLR           1788
OPEOR               1280
OPEORB              12AC
OPEORL              132C
OPEORW              12EC
OPJSR               1B76
OPLEA               1C06
OPLSL               1CD2
OPLSR               1CDE
OPMOVEAL            190A
OPMOVEAW            1A04
OPMOVEB             17F6
OPMOVEL             187A
OPMOVEM             1BEE
OPMOVEMLEA          1BD2
OPMOVEW             1974
OPMULS              1CAE
OPNEG               1A6E
OPNEGB              1A9C
OPNEGL              1ADC
OPNEGW              1B1C
OPOR                1180
OPORB               11AC
OPORI               145E
OPORIB              148C
OPORIL              1550
OPORIW              14EE
OPORL               122C
OPORW               11EC
OPPER               2371
OPROL               1CEA
OPROR               1CF6
OPRTS               1BB6
OPRTSJSR            1B5C
OPSUB               1C7A
OPSUBQ              1C06
ORIMATCH            2379
ORMATCH             23C6
PADDRDEC            2180
PADDRDIR            1EC8
PADDRPOST           1FF4
PADDRREG            1E08
PDATAREG            1D48
PHEX                22B8
PRINTEA             1D10
PRINTINVALID        2360
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
ROLMATCH            23F7
RORMATCH            23F3
RTSMATCH            2396
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               2368
START               1000
SUBMATCH            23C9
SUBQMATCH           23A8
TEST_END            3009
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
