00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 12/9/2014 9:13:28 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =00003100                 11  test_end    EQU     $00003100   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000  =0000000F                 27  fifteen     EQU     $0F         ; defined hex value 15
00000000                            28  
00000000  =00000000                 29  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 30  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 31  s1L         EQU     %0010       ; long size 1
00000000                            32              
00000000  =00000000                 33  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 34  s2L         EQU     %0001       ; long size 2
00000000                            35  
00000000  =00000001                 36  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 37  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 38  s3L         EQU     %0010       ; long size 3
00000000                            39  
00000000  =00000000                 40  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 41  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 42  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 43  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 44  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 45  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            46  
00000000                            47              
00000000                            48  
00000000  =00000000                 49  mask0       EQU     %00000000
00000000  =00000001                 50  mask1       EQU     %00000001
00000000  =00000002                 51  mask2       EQU     %00000010
00000000  =00000004                 52  mask3       EQU     %00000100
00000000  =00000008                 53  mask4       EQU     %00001000
00000000  =00000010                 54  mask5       EQU     %00010000
00000000  =00000020                 55  mask6       EQU     %00100000
00000000  =00000040                 56  mask7       EQU     %01000000
00000000  =00000080                 57  mask8       EQU     %10000000
00000000                            58  
00000000  =00000005                 59  maskA       EQU     %00000101
00000000  =0000000A                 60  maskB       EQU     %00001010
00000000  =00000014                 61  maskC       EQU     %00010100
00000000  =00000028                 62  maskD       EQU     %00101000
00000000  =00000050                 63  maskE       EQU     %01010000
00000000  =000000A0                 64  maskF       EQU     %10100000
00000000                            65  
00000000                            66  
00000000  =000000F0                 67  firstNib    EQU     $F0
00000000  =0000000F                 68  secNib      EQU     $0F
00000000                            69               
00001000                            70              ORG    $1000
00001000                            71  START:                                  ; first instruction of program
00001000                            72        
00001000  207C 00003000             73          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00003100             74          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            75            
0000100C  4241                      76  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      77          CLR         D2                  ; clear out D2
00001010  B1CA                      78          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 1636                 79          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      80          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      81          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      82          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            83          
0000101C  B43C 0000                 84          CMP.B       #zero, D2           ; compare with 0
00001020  6700 006E                 85          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 86          CMP.B       #one, D2            ; compare with 1
00001028  6700 0096                 87          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 88          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0092                 89          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 90          CMP.B       #three, D2          ; compare with 3
00001038  6700 008E                 91          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 92          CMP.B       #four, D2           ; compare with 4
00001040  6700 008A                 93          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 94          CMP.B       #five, D2           ; compare with 5
00001048  6700 009E                 95          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 96          CMP.B       #six, D2            ; compare with 6
00001050  6700 009A                 97          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 98          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00BE                 99          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                100          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00B6                101          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                102          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00B2                103          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                104          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00AA                105          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                106          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 00A6                107          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                108          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 009E                109          BEQ         braFourteen         ; branch out to fourteen method
00001084  B43C 000F                110          CMP.B       #fifteen,D2
00001088  6700 15C0                111          BEQ         endProg
0000108C  6000 FF7E                112          BRA         loop
00001090                           113  
00001090  4242                     114  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001092  1401                     115          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001094  C43C 000F                116          AND.B       #secNib, D2             ; set first nibble to 0
00001098                           117   
00001098  B43C 0000                118          CMP.B       #zero, D2           ; compare second nibble to 0
0000109C  6700 00B6                119          BEQ         opORI               ; branch to ORI method
000010A0  B43C 000C                120          CMP.B       #twelve, D2         ; compare second nibble to 12
000010A4  6700 0216                121          BEQ         opCMPI              ; branch to CMPI method
000010A8  B43C 0008                122          CMP.B       #eight,D2           ; Test for static BCLR
000010AC  6700 037E                123          BEQ         opBCLR
000010B0  C47C 0001                124          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010B4  B43C 0001                125          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010B8  6700 03D6                126          BEQ         opDynBCLR
000010BC  6000 158C                127          BRA         printInvalid
000010C0                           128          
000010C0                           129          
000010C0  6000 043C                130  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010C4                           131  
000010C4  6000 04BC                132  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010C8                           133  
000010C8                           134  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010C8                           135  
000010C8  6000 05B4                136          BRA         opMOVEW
000010CC                           137  
000010CC  4242                     138  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010CE  1401                     139          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010D0  C43C 000F                140          AND.B       #secNib, D2             ; set first nibble to 0
000010D4                           141   
000010D4  B43C 0004                142          CMP.B       #four, D2           ; compare second nibble to 4
000010D8  6700 069A                143          BEQ         opNEG               ; branch to NEG method
000010DC  B43C 000E                144          CMP.B       #fourteen, D2       ; compare second nibble to E
000010E0  6700 0780                145          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010E4  6000 07F2                146          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010E8                           147  
000010E8  6000 0914                148  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010EC                           149  
000010EC  4242                     150  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010EE  1401                     151          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010F0  C438 000F                152          AND.B       $0F, D2             ; set first nibble to 0
000010F4                           153   
000010F4  B43C 0000                154          CMP.B       #zero, D2           ; compare second nibble to 0
000010F8  6700 0910                155          BEQ         opBRA               ; branch to BRA method
000010FC  B43C 0005                156          CMP.B       #five, D2           ; compare second nibble to 5
00001100  6700 0920                157          BEQ         opBCS               ; branch to BCS method
00001104  B43C 0008                158          CMP.B       #eight, D2          ; compare second nibble to 8
00001108  6700 0924                159          BEQ         opBVC               ; branch to BCS method
0000110C  B43C 000C                160          CMP.B       #twelve, D2         ; compare second nibble to 12
00001110  6700 0928                161          BEQ         opBGE               ; branch to BGE method
00001114  6000 0930                162          BRA         opBLT               ; otherwise, branch to BLT method
00001118                           163  
00001118                           164  braEight    ; there are two opCodes available DIVS, or OR
00001118                           165  
00001118  6000 0938                166  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000111C                           167  
0000111C                           168  braEleven   ; there are two opCodes available EOR, or CMP
0000111C                           169  
0000111C  6000 0940                170  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
00001120                           171    
00001120                           172  braThirteen ; there are two opCodes available ADD, or ADDA
00001120                           173  
00001120  4242                     174  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
00001122  1401                     175              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001124  C438 000F                176              AND.B       $0F, D2             ; set first nibble to 0
00001128                           177   
00001128  B43C 0000                178              CMP.B       #zero, D2           ; compare second nibble to 0
0000112C  6700 0948                179              BEQ         opASR               ; branch to ASR method
00001130  B43C 0001                180              CMP.B       #one, D2            ; compare second nibble to 1
00001134  6700 0934                181              BEQ         opASL               ; branch to ASL method
00001138  B43C 0002                182              CMP.B       #two, D2            ; compare second nibble to 2
0000113C  6700 0950                183              BEQ         opLSR               ; branch to LSR method
00001140  B43C 0003                184              CMP.B       #three, D2          ; compare second nibble to 3
00001144  6700 093C                185              BEQ         opLSL               ; branch to LSL method
00001148  B43C 0006                186              CMP.B       #six, D2            ; compare second nibble to 6
0000114C  6700 0958                187              BEQ         opROR               ; branch to ROR method
00001150  6000 0948                188              BRA         opROL               ; otherwise, branch to ROL method
00001154                           189  
00001154  43F9 0000266A            190  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
0000115A  103C 000E                191          MOVE.B      #14, D0             ; command for trap call to display message
0000115E  4E4F                     192          TRAP        #15                 ; trap call
00001160                           193          
00001160  1218                     194          MOVE.B      (A0)+, D1
00001162  1401                     195          MOVE.B      D1,D2               ; copy data over
00001164  EC42                     196          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001166  B43C 0000                197          CMP.B       #zero,D2
0000116A  6700 0016                198          BEQ         opORIB
0000116E  B43C 0001                199          CMP.B       #one,D2
00001172  6700 0074                200          BEQ         opORIW
00001176  B43C 0002                201          CMP.B       #two,D2
0000117A  6700 00D2                202          BEQ         opORIL
0000117E                           203          
0000117E  6000 14CA                204          BRA         printInvalid
00001182                           205          
00001182  43F9 000026EC            206  opORIB  LEA         dispByte, A1        ; Display byte
00001188  103C 000E                207          MOVE.B      #14, D0             ; command for trap call to display message
0000118C  4E4F                     208          TRAP        #15                 ; trap call
0000118E                           209          
0000118E  43F9 00002652            210          LEA         space, A1           ; Display space
00001194  103C 000E                211          MOVE.B      #14, D0             ; command for trap call to display message
00001198  4E4F                     212          TRAP        #15                 ; trap call
0000119A                           213          
0000119A  4244                     214          CLR         D4
0000119C  1801                     215          MOVE.B      D1,D4
0000119E  E644                     216          ASR         #three,D4
000011A0  C87C 0007                217          AND         #seven,D4
000011A4  4245                     218          CLR         D5        
000011A6  1A01                     219          MOVE.B      D1,D5
000011A8  CA7C 0007                220          AND         #seven,D5
000011AC                           221          
000011AC  4243                     222          CLR         D3
000011AE  4242                     223          CLR         D2
000011B0  163C 0004                224          MOVE.B      #four,D3
000011B4  143C 0007                225          MOVE.B      #seven,D2
000011B8                           226  
000011B8  4EB9 00001FEA            227          JSR         printEA
000011BE                           228          
000011BE  43F9 00002659            229          LEA         comma, A1           ; Display space
000011C4  103C 000E                230          MOVE.B      #14, D0             ; command for trap call to display message
000011C8  4E4F                     231          TRAP        #15                 ; trap call
000011CA                           232          
000011CA  4242                     233          CLR         D2
000011CC  4243                     234          CLR         D3
000011CE  1404                     235          MOVE.B      D4,D2
000011D0  1605                     236          MOVE.B      D5,D3
000011D2                           237          
000011D2  4EB9 00001FEA            238          JSR         printEA
000011D8                           239          
000011D8  43F9 0000264E            240          LEA         newLine, A1           ; Display space
000011DE  103C 000E                241          MOVE.B      #14, D0             ; command for trap call to display message
000011E2  4E4F                     242          TRAP        #15                 ; trap call
000011E4                           243          
000011E4  6000 FE26                244          BRA         LOOP
000011E8                           245          
000011E8                           246          
000011E8  43F9 000026EF            247  opORIW  LEA         dispWord, A1        ; Display byte
000011EE  103C 000E                248          MOVE.B      #14, D0             ; command for trap call to display message
000011F2  4E4F                     249          TRAP        #15                 ; trap call
000011F4                           250          
000011F4  43F9 00002652            251          LEA         space, A1           ; Display space
000011FA  103C 000E                252          MOVE.B      #14, D0             ; command for trap call to display message
000011FE  4E4F                     253          TRAP        #15                 ; trap call
00001200                           254          
00001200  4244                     255          CLR         D4
00001202  1801                     256          MOVE.B      D1,D4
00001204  E644                     257          ASR         #three,D4
00001206  C87C 0007                258          AND         #seven,D4
0000120A  4245                     259          CLR         D5        
0000120C  1A01                     260          MOVE.B      D1,D5
0000120E  CA7C 0007                261          AND         #seven,D5
00001212                           262          
00001212  4243                     263          CLR         D3
00001214  4242                     264          CLR         D2
00001216  163C 0004                265          MOVE.B      #four,D3
0000121A  143C 0007                266          MOVE.B      #seven,D2
0000121E                           267          
0000121E  4EB9 00001FEA            268          JSR         printEA
00001224                           269          
00001224  43F9 00002659            270          LEA         comma, A1           ; Display space
0000122A  103C 000E                271          MOVE.B      #14, D0             ; command for trap call to display message
0000122E  4E4F                     272          TRAP        #15                 ; trap call
00001230                           273          
00001230  4242                     274          CLR         D2
00001232  4243                     275          CLR         D3
00001234  1404                     276          MOVE.B      D4,D2
00001236  1605                     277          MOVE.B      D5,D3
00001238                           278                  
00001238  4EB9 00001FEA            279          JSR         printEA
0000123E                           280          
0000123E  43F9 0000264E            281          LEA         newLine, A1           ; Display space
00001244  103C 000E                282          MOVE.B      #14, D0             ; command for trap call to display message
00001248  4E4F                     283          TRAP        #15                 ; trap call
0000124A                           284          
0000124A  6000 FDC0                285          BRA         LOOP
0000124E                           286       
0000124E  43F9 000026F2            287  opORIL  LEA         dispLong, A1        ; Display byte
00001254  103C 000E                288          MOVE.B      #14, D0             ; command for trap call to display message
00001258  4E4F                     289          TRAP        #15                 ; trap call
0000125A                           290          
0000125A  43F9 00002652            291          LEA         space, A1           ; Display space
00001260  103C 000E                292          MOVE.B      #14, D0             ; command for trap call to display message
00001264  4E4F                     293          TRAP        #15                 ; trap call
00001266                           294          
00001266  4244                     295          CLR         D4
00001268  1801                     296          MOVE.B      D1,D4
0000126A  E644                     297          ASR         #three,D4
0000126C  C87C 0007                298          AND         #seven,D4
00001270  4245                     299          CLR         D5        
00001272  1A01                     300          MOVE.B      D1,D5
00001274  CA7C 0007                301          AND         #seven,D5
00001278  1C3C 0001                302          MOVE.B      #one,D6
0000127C                           303          
0000127C  4243                     304          CLR         D3
0000127E  4242                     305          CLR         D2
00001280  163C 0004                306          MOVE.B      #four,D3
00001284  143C 0007                307          MOVE.B      #seven,D2      
00001288                           308          
00001288  4EB9 00001FEA            309          JSR         printEA        
0000128E                           310          
0000128E  4243                     311          CLR         D3
00001290  4242                     312          CLR         D2
00001292  163C 0004                313          MOVE.B      #four,D3
00001296  143C 0007                314          MOVE.B      #seven,D2
0000129A                           315          
0000129A  43F9 00002659            316          LEA         comma, A1           ; Display space
000012A0  103C 000E                317          MOVE.B      #14, D0             ; command for trap call to display message
000012A4  4E4F                     318          TRAP        #15                 ; trap call
000012A6                           319          
000012A6  4EB9 00001FEA            320          JSR         printEA
000012AC                           321          
000012AC  43F9 0000264E            322          LEA         newLine, A1           ; Display space
000012B2  103C 000E                323          MOVE.B      #14, D0             ; command for trap call to display message
000012B6  4E4F                     324          TRAP        #15                 ; trap call
000012B8                           325          
000012B8  6000 FD52                326          BRA         LOOP
000012BC                           327           
000012BC                           328  opCMPI  
000012BC                           329  
000012BC                           330                  
000012BC  1218                     331          MOVE.B      (A0)+, D1
000012BE  1401                     332          MOVE.B      D1,D2               ; copy data over
000012C0  EC42                     333          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000012C2  B43C 0000                334          CMP.B       #zero,D2
000012C6  6700 0016                335          BEQ         opCMPIB
000012CA  B43C 0001                336          CMP.B       #one,D2
000012CE  6700 0080                337          BEQ         opCMPIW
000012D2  B43C 0002                338          CMP.B       #two,D2
000012D6  6700 00E6                339          BEQ         opCMPIL
000012DA  6000 1358                340          BRA         invalid
000012DE                           341  
000012DE                           342  opCMPIB 
000012DE                           343  
000012DE  43F9 0000266E            344          LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000012E4  103C 000E                345          MOVE.B      #14, D0             ; command for trap call to display message
000012E8  4E4F                     346          TRAP        #15                 ; trap call
000012EA                           347          
000012EA  43F9 000026EC            348          LEA         dispByte, A1        ; Display byte
000012F0  103C 000E                349          MOVE.B      #14, D0             ; command for trap call to display message
000012F4  4E4F                     350          TRAP        #15                 ; trap call
000012F6                           351          
000012F6  43F9 00002652            352          LEA         space, A1           ; Display space
000012FC  103C 000E                353          MOVE.B      #14, D0             ; command for trap call to display message
00001300  4E4F                     354          TRAP        #15                 ; trap call
00001302                           355          
00001302  4244                     356          CLR         D4
00001304  1801                     357          MOVE.B      D1,D4
00001306  E644                     358          ASR         #three,D4
00001308  C87C 0007                359          AND         #seven,D4
0000130C  4245                     360          CLR         D5        
0000130E  1A01                     361          MOVE.B      D1,D5
00001310  CA7C 0007                362          AND         #seven,D5
00001314                           363          
00001314  4243                     364          CLR         D3
00001316  4242                     365          CLR         D2
00001318  163C 0004                366          MOVE.B      #four,D3
0000131C  143C 0007                367          MOVE.B      #seven,D2      
00001320                           368          
00001320  4EB9 00001FEA            369          JSR         printEA  
00001326                           370              
00001326  43F9 00002659            371          LEA         comma, A1           ; Display space
0000132C  103C 000E                372          MOVE.B      #14, D0             ; command for trap call to display message
00001330  4E4F                     373          TRAP        #15                 ; trap call
00001332                           374          
00001332  4242                     375          CLR         D2
00001334  4243                     376          CLR         D3
00001336  1404                     377          MOVE.B      D4,D2
00001338  1605                     378          MOVE.B      D5,D3        
0000133A                           379          
0000133A  4EB9 00001FEA            380          JSR         printEA
00001340                           381          
00001340  43F9 0000264E            382          LEA         newLine, A1           ; Display space
00001346  103C 000E                383          MOVE.B      #14, D0             ; command for trap call to display message
0000134A  4E4F                     384          TRAP        #15                 ; trap call
0000134C                           385  
0000134C  6000 FCBE                386          BRA         LOOP
00001350                           387  
00001350                           388  opCMPIW 
00001350  43F9 0000266E            389          LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001356  103C 000E                390          MOVE.B      #14, D0             ; command for trap call to display message
0000135A  4E4F                     391          TRAP        #15                 ; trap call
0000135C                           392          
0000135C  43F9 000026EF            393          LEA         dispWord, A1        ; Display byte
00001362  103C 000E                394          MOVE.B      #14, D0             ; command for trap call to display message
00001366  4E4F                     395          TRAP        #15                 ; trap call
00001368                           396          
00001368  43F9 00002652            397          LEA         space, A1           ; Display space
0000136E  103C 000E                398          MOVE.B      #14, D0             ; command for trap call to display message
00001372  4E4F                     399          TRAP        #15                 ; trap call
00001374                           400          
00001374  4242                     401          CLR         D2
00001376  1401                     402          MOVE.B      D1,D2
00001378  E642                     403          ASR         #three,D2
0000137A  C47C 0007                404          AND         #seven,D2
0000137E  4243                     405          CLR         D3        
00001380  1601                     406          MOVE.B      D1,D3
00001382  C67C 0007                407          AND         #seven,D3
00001386                           408          
00001386  4241                     409          CLR         D1
00001388  3218                     410          MOVE.W      (A0)+, D1
0000138A                           411          
0000138A  43F9 00002655            412          LEA         hashTag, A1           ; Display space
00001390  103C 000E                413          MOVE.B      #14, D0             ; command for trap call to display message
00001394  4E4F                     414          TRAP        #15                 ; trap call
00001396                           415          
00001396  103C 0003                416          MOVE.B      #3, D0
0000139A  4E4F                     417          TRAP        #15
0000139C                           418          
0000139C  43F9 00002659            419          LEA         comma, A1           ; Display space
000013A2  103C 000E                420          MOVE.B      #14, D0             ; command for trap call to display message
000013A6  4E4F                     421          TRAP        #15                 ; trap call
000013A8                           422          
000013A8  4EB9 00001FEA            423          JSR         printEA
000013AE                           424          
000013AE  43F9 0000264E            425          LEA         newLine, A1           ; Display space
000013B4  103C 000E                426          MOVE.B      #14, D0             ; command for trap call to display message
000013B8  4E4F                     427          TRAP        #15                 ; trap call
000013BA  6000 FC50                428          BRA         LOOP
000013BE                           429  
000013BE                           430  opCMPIL 
000013BE  43F9 0000266E            431          LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000013C4  103C 000E                432          MOVE.B      #14, D0             ; command for trap call to display message
000013C8  4E4F                     433          TRAP        #15                 ; trap call
000013CA                           434          
000013CA  43F9 000026F2            435          LEA         dispLong, A1        ; Display byte
000013D0  103C 000E                436          MOVE.B      #14, D0             ; command for trap call to display message
000013D4  4E4F                     437          TRAP        #15                 ; trap call
000013D6                           438          
000013D6  43F9 00002652            439          LEA         space, A1           ; Display space
000013DC  103C 000E                440          MOVE.B      #14, D0             ; command for trap call to display message
000013E0  4E4F                     441          TRAP        #15                 ; trap call
000013E2                           442          
000013E2  4242                     443          CLR         D2
000013E4  1401                     444          MOVE.B      D1,D2
000013E6  E642                     445          ASR         #three,D2
000013E8  C47C 0007                446          AND         #seven,D2
000013EC  4243                     447          CLR         D3        
000013EE  1601                     448          MOVE.B      D1,D3
000013F0  C67C 0007                449          AND         #seven,D3
000013F4                           450          
000013F4  4241                     451          CLR         D1
000013F6  3218                     452          MOVE.W      (A0)+, D1
000013F8                           453          
000013F8  43F9 00002655            454          LEA         hashTag, A1           ; Display space
000013FE  103C 000E                455          MOVE.B      #14, D0             ; command for trap call to display message
00001402  4E4F                     456          TRAP        #15                 ; trap call
00001404                           457          
00001404  103C 0003                458          MOVE.B      #3, D0
00001408  4E4F                     459          TRAP        #15
0000140A                           460          
0000140A  43F9 00002659            461          LEA         comma, A1           ; Display space
00001410  103C 000E                462          MOVE.B      #14, D0             ; command for trap call to display message
00001414  4E4F                     463          TRAP        #15                 ; trap call
00001416                           464          
00001416  4EB9 00001FEA            465          JSR         printEA
0000141C                           466          
0000141C  43F9 0000264E            467          LEA         newLine, A1           ; Display space
00001422  103C 000E                468          MOVE.B      #14, D0             ; command for trap call to display message
00001426  4E4F                     469          TRAP        #15                 ; trap call
00001428                           470          
00001428  6000 FBE2                471          BRA         LOOP
0000142C                           472  
0000142C  43F9 00002673            473  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001432  103C 000E                474                  MOVE.B      #14, D0             ; command for trap call to display message
00001436  4E4F                     475                  TRAP        #15                 ; trap call
00001438                           476  
00001438  43F9 00002652            477                  LEA         space, A1           ; Display space
0000143E  103C 000E                478                  MOVE.B      #14, D0             ; command for trap call to display message
00001442  4E4F                     479                  TRAP        #15                 ; trap call
00001444                           480                  
00001444  4242                     481                  CLR         D2
00001446  1218                     482                  MOVE.B      (A0)+, D1
00001448  1401                     483                  MOVE.B      D1,D2               ; copy data over
0000144A  E642                     484                  ASR         #three,D2           ; Shift to the right to remove register
0000144C  C47C 0007                485                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
00001450                           486                  
00001450  4243                     487                  CLR         D3                  ; Clear D3 so we can move D1 in
00001452  1601                     488                  MOVE.B      D1,D3               ; Move othr byte in
00001454  C67C 0007                489                  AND         #seven,D3           ; Set everything besides register to 0
00001458                           490                  
00001458  4241                     491                  CLR         D1
0000145A  3218                     492                  MOVE.W      (A0)+, D1
0000145C                           493                 
0000145C                           494                  
0000145C  43F9 00002655            495                  LEA         hashTag, A1           ; Display space
00001462  103C 000E                496                  MOVE.B      #14, D0             ; command for trap call to display message
00001466  4E4F                     497                  TRAP        #15                 ; trap call
00001468                           498          
00001468  103C 0003                499                  MOVE.B      #3, D0
0000146C  4E4F                     500                  TRAP        #15
0000146E                           501          
0000146E  43F9 00002659            502                  LEA         comma, A1           ; Display space
00001474  103C 000E                503                  MOVE.B      #14, D0             ; command for trap call to display message
00001478  4E4F                     504                  TRAP        #15                 ; trap call
0000147A                           505                  
0000147A  4EB9 00001FEA            506                  JSR         printEA
00001480                           507          
00001480  43F9 0000264E            508                  LEA         newLine, A1           ; Display space
00001486  103C 000E                509                  MOVE.B      #14, D0             ; command for trap call to display message
0000148A  4E4F                     510                  TRAP        #15                 ; trap call
0000148C                           511                  
0000148C                           512                  
0000148C  6000 FB7E                513                  BRA         LOOP                
00001490                           514          
00001490                           515  opDynBCLR       
00001490  4241                     516                  CLR         D1
00001492  1218                     517                  MOVE.B      (A0)+,D1            ; Copy second byte in
00001494  1601                     518                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
00001496  E243                     519                  ASR         #one,D3             ; Shift register over to the end
00001498  C67C 0007                520                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
0000149C                           521                  
0000149C  1401                     522                  MOVE.B      D1,D2
0000149E  EC42                     523                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
000014A0  B47C 0002                524                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
000014A4  6600 11A4                525                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
000014A8                           526  
000014A8                           527                  
000014A8  43F9 00002673            528                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
000014AE  103C 000E                529                  MOVE.B      #14, D0             ; command for trap call to display message
000014B2  4E4F                     530                  TRAP        #15                 ; trap call  
000014B4                           531                  
000014B4  43F9 00002652            532                  LEA         space, A1           ; Display space
000014BA  103C 000E                533                  MOVE.B      #14, D0             ; command for trap call to display message
000014BE  4E4F                     534                  TRAP        #15                 ; trap call
000014C0                           535                  
000014C0  143C 0000                536                  MOVE.B      #zero,D2                
000014C4  4EB9 00001FEA            537                  JSR         printEA
000014CA                           538                  
000014CA  43F9 00002659            539                  LEA         comma, A1           ; Display space
000014D0  103C 000E                540                  MOVE.B      #14, D0             ; command for trap call to display message
000014D4  4E4F                     541                  TRAP        #15                 ; trap call
000014D6                           542                  
000014D6  4242                     543                  CLR         D2
000014D8  1401                     544                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000014DA  E642                     545                  ASR         #three,D2           ; Remove/shift the register out
000014DC  C47C 0007                546                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000014E0                           547                  
000014E0  4243                     548                  CLR         D3                  ; Clearing D3 to avoid mashing data
000014E2  1601                     549                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000014E4  C67C 0007                550                  AND         #seven,D3           ; Change all bits except for register bits to 0
000014E8                           551                  
000014E8                           552  
000014E8  4EB9 00001FEA            553                  JSR         printEA
000014EE                           554          
000014EE  43F9 0000264E            555                  LEA         newLine, A1           ; Display space
000014F4  103C 000E                556                  MOVE.B      #14, D0             ; command for trap call to display message
000014F8  4E4F                     557                  TRAP        #15                 ; trap call            
000014FA                           558  
000014FA                           559  
000014FA  6000 FB10                560                  BRA         LOOP                ; go back to the loop
000014FE                           561   
000014FE                           562  opMOVEB 
000014FE  43F9 00002678            563          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
00001504  103C 000E                564          MOVE.B      #14, D0             ; command for trap call to display message
00001508  4E4F                     565          TRAP        #15                 ; trap call
0000150A  43F9 000026EC            566          LEA         dispByte, A1        ; display byte
00001510  103C 000E                567          MOVE.B      #14, D0             ; command for trap call to display message
00001514  4E4F                     568          TRAP        #15                 ; trap call
00001516  43F9 00002652            569          LEA         space, A1           ; create spaces
0000151C  103C 000E                570          MOVE.B      #14, D0             ; command for trap call to display message
00001520  4E4F                     571          TRAP        #15                 ; trap call
00001522                           572          
00001522                           573          
00001522  4245                     574          CLR         D5                  ; Clear D5
00001524  1A01                     575          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001526  E245                     576          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001528  CA7C 0007                577          AND         #seven,D5
0000152C                           578          
0000152C  4244                     579          CLR         D4                  ; Clear out D4
0000152E  1801                     580          MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001530  C87C 0001                581          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001534                           582          
00001534  4241                     583          CLR          D1
00001536  4242                     584          CLR          D2
00001538  1218                     585          MOVE.B      (A0)+,D1            ; Copy byte into D1
0000153A  1401                     586          MOVE.B      D1,D2
0000153C  EC42                     587          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000153E  D842                     588          ADD         D2,D4               ; Adds the remaining bits to D4
00001540                           589          
00001540  4242                     590          CLR         D2
00001542  1401                     591          MOVE.B      D1,D2               ; Copy new byte over to D2
00001544  E642                     592          ASR         #three,D2           ; Shift source register out
00001546  C47C 0007                593          AND         #seven,D2           ; Set everything to 0 except for the mode
0000154A                           594          
0000154A  4243                     595          CLR         D3
0000154C  1601                     596          MOVE.B      D1,D3
0000154E  C67C 0007                597          AND         #seven,D3
00001552                           598          
00001552  4EB9 00001FEA            599          JSR         printEA
00001558                           600          
00001558  43F9 00002659            601          LEA         comma, A1           ; Display space
0000155E  103C 000E                602          MOVE.B      #14, D0             ; command for trap call to display message
00001562  4E4F                     603          TRAP        #15                 ; trap call
00001564                           604          
00001564  4242                     605          CLR         D2
00001566  4243                     606          CLR         D3
00001568  1404                     607          MOVE.B      D4,D2
0000156A  1605                     608          MOVE.B      D5,D3
0000156C                           609          
0000156C  4EB9 00001FEA            610          JSR         printEA
00001572                           611          
00001572                           612          
00001572  43F9 0000264E            613          LEA         newLine, A1           ; Display space
00001578  103C 000E                614          MOVE.B      #14, D0             ; command for trap call to display message
0000157C  4E4F                     615          TRAP        #15                 ; trap call            
0000157E                           616  
0000157E                           617  
0000157E  6000 FA8C                618          BRA         LOOP                ; go back to the loop
00001582                           619          
00001582                           620  opMOVEL     
00001582                           621          
00001582  4245                     622              CLR         D5                  ; Clear D5
00001584  1A01                     623              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001586  E245                     624              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001588  CA7C 0007                625              AND         #seven,D5
0000158C                           626          
0000158C  4244                     627              CLR         D4                  ; Clear out D4
0000158E  1801                     628              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001590  C87C 0001                629              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001594                           630          
00001594  4241                     631              CLR          D1
00001596  4242                     632              CLR          D2
00001598  1218                     633              MOVE.B      (A0)+,D1            ; Copy byte into D1
0000159A  1401                     634              MOVE.B      D1,D2
0000159C  EC42                     635              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000159E  D842                     636              ADD         D2,D4               ; Adds the remaining bits to D4
000015A0                           637          
000015A0  B87C 0001                638              CMP         #one,D4             ; Check if it is MOVEA
000015A4  6700 0070                639              BEQ         opMOVEAL            ; If it is, branch off
000015A8                           640              
000015A8  43F9 00002678            641              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000015AE  103C 000E                642              MOVE.B      #14, D0             ; command for trap call to display message
000015B2  4E4F                     643              TRAP        #15                 ; trap call  
000015B4                           644              
000015B4                           645              
000015B4  43F9 000026F2            646              LEA         dispLong,A1
000015BA  103C 000E                647              MOVE.B      #14, D0             ; command for trap call to display message
000015BE  4E4F                     648              TRAP        #15                 ; trap call
000015C0                           649              
000015C0  43F9 00002652            650              LEA         space, A1           ; create spaces
000015C6  103C 000E                651              MOVE.B      #14, D0             ; command for trap call to display message
000015CA  4E4F                     652              TRAP        #15                 ; trap call
000015CC                           653          
000015CC  4242                     654              CLR         D2
000015CE  1401                     655              MOVE.B      D1,D2               ; Copy new byte over to D2
000015D0  E642                     656              ASR         #three,D2           ; Shift source register out
000015D2  C47C 0007                657              AND         #seven,D2           ; Set everything to 0 except for the mode
000015D6                           658          
000015D6  4243                     659              CLR         D3
000015D8  1601                     660              MOVE.B      D1,D3
000015DA  C67C 0007                661              AND         #seven,D3
000015DE                           662              
000015DE  4246                     663              CLR         D6
000015E0  1C3C 0001                664              MOVE.B      #1,D6
000015E4  4EB9 00001FEA            665              JSR         printEA
000015EA  4246                     666              CLR         D6
000015EC                           667              
000015EC  43F9 00002659            668              LEA         comma, A1           ; Display comma
000015F2  103C 000E                669              MOVE.B      #14, D0             ; command for trap call to display message
000015F6  4E4F                     670              TRAP        #15                 ; trap call
000015F8                           671          
000015F8  4242                     672              CLR         D2
000015FA  4243                     673              CLR         D3
000015FC  1404                     674              MOVE.B      D4,D2
000015FE  1605                     675              MOVE.B      D5,D3
00001600                           676              
00001600                           677  
00001600                           678              
00001600  4EB9 00001FEA            679              JSR         printEA
00001606                           680          
00001606                           681          
00001606  43F9 0000264E            682              LEA         newLine, A1           ; Display space
0000160C  103C 000E                683              MOVE.B      #14, D0             ; command for trap call to display message
00001610  4E4F                     684              TRAP        #15                 ; trap call            
00001612                           685  
00001612                           686  
00001612  6000 F9F8                687              BRA         LOOP                ; go back to the loop
00001616                           688              
00001616                           689  opMOVEAL
00001616                           690  
00001616  43F9 0000267D            691              LEA         MOVEAmatch,A1
0000161C  103C 000E                692              MOVE.B      #14, D0             ; command for trap call to display message
00001620  4E4F                     693              TRAP        #15                 ; trap call
00001622                           694              
00001622  43F9 000026F2            695              LEA         dispLong,A1
00001628  103C 000E                696              MOVE.B      #14, D0             ; command for trap call to display message
0000162C  4E4F                     697              TRAP        #15                 ; trap call
0000162E                           698              
0000162E                           699  
0000162E  43F9 00002652            700              LEA         space, A1           ; create spaces
00001634  103C 000E                701              MOVE.B      #14, D0             ; command for trap call to display message
00001638  4E4F                     702              TRAP        #15                 ; trap call
0000163A                           703              
0000163A  4242                     704              CLR         D2
0000163C  1401                     705              MOVE.B      D1,D2               ; Copy new byte over to D2
0000163E  E642                     706              ASR         #three,D2           ; Shift source register out
00001640  C47C 0007                707              AND         #seven,D2           ; Set everything to 0 except for the mode
00001644                           708          
00001644  4243                     709              CLR         D3
00001646  1601                     710              MOVE.B      D1,D3
00001648  C67C 0007                711              AND         #seven,D3
0000164C                           712              
0000164C  4241                     713              CLR         D1                  ; Clear D1
0000164E                           714              
0000164E                           715              
0000164E  4EB9 00001FEA            716              JSR         printEA
00001654                           717              
00001654  43F9 00002659            718              LEA         comma, A1           ; Display comma
0000165A  103C 000E                719              MOVE.B      #14, D0             ; command for trap call to display message
0000165E  4E4F                     720              TRAP        #15                 ; trap call
00001660                           721  
00001660  4242                     722              CLR         D2
00001662  4243                     723              CLR         D3
00001664  1404                     724              MOVE.B      D4,D2
00001666  1605                     725              MOVE.B      D5,D3
00001668                           726          
00001668  4EB9 00001FEA            727              JSR         printEA
0000166E                           728          
0000166E                           729          
0000166E  43F9 0000264E            730              LEA         newLine, A1           ; Display space
00001674  103C 000E                731              MOVE.B      #14, D0             ; command for trap call to display message
00001678  4E4F                     732              TRAP        #15                 ; trap call            
0000167A                           733  
0000167A                           734  
0000167A  6000 F990                735              BRA         LOOP                ; go back to the loop
0000167E                           736  
0000167E                           737  opMOVEW
0000167E                           738          
0000167E  4245                     739              CLR         D5                  ; Clear D5
00001680  1A01                     740              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001682  E245                     741              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001684  CA7C 0007                742              AND         #seven,D5
00001688                           743          
00001688  4244                     744              CLR         D4                  ; Clear out D4
0000168A  1801                     745              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000168C  C87C 0001                746              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001690                           747          
00001690  4241                     748              CLR          D1
00001692  4242                     749              CLR          D2
00001694  1218                     750              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001696  1401                     751              MOVE.B      D1,D2
00001698  EC42                     752              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000169A  D842                     753              ADD         D2,D4               ; Adds the remaining bits to D4
0000169C                           754          
0000169C  B87C 0001                755              CMP         #one,D4             ; Check if it is MOVEA
000016A0  6700 006A                756              BEQ         opMOVEAW            ; If it is, branch off
000016A4                           757              
000016A4  43F9 00002678            758              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000016AA  103C 000E                759              MOVE.B      #14, D0             ; command for trap call to display message
000016AE  4E4F                     760              TRAP        #15                 ; trap call  
000016B0                           761              
000016B0  43F9 000026EF            762              LEA         dispWord,A1
000016B6  103C 000E                763              MOVE.B      #14, D0             ; command for trap call to display message
000016BA  4E4F                     764              TRAP        #15                 ; trap call
000016BC                           765              
000016BC  43F9 00002652            766              LEA         space, A1           ; create spaces
000016C2  103C 000E                767              MOVE.B      #14, D0             ; command for trap call to display message
000016C6  4E4F                     768              TRAP        #15                 ; trap call
000016C8                           769          
000016C8  4242                     770              CLR         D2
000016CA  1401                     771              MOVE.B      D1,D2               ; Copy new byte over to D2
000016CC  E642                     772              ASR         #three,D2           ; Shift source register out
000016CE  C47C 0007                773              AND         #seven,D2           ; Set everything to 0 except for the mode
000016D2                           774          
000016D2  4243                     775              CLR         D3
000016D4  1601                     776              MOVE.B      D1,D3
000016D6  C67C 0007                777              AND         #seven,D3
000016DA                           778              
000016DA  4241                     779              CLR         D1                  ; Clear D1
000016DC                           780              
000016DC  4EB9 00001FEA            781              JSR         printEA
000016E2                           782              
000016E2  43F9 00002659            783              LEA         comma, A1           ; Display comma
000016E8  103C 000E                784              MOVE.B      #14, D0             ; command for trap call to display message
000016EC  4E4F                     785              TRAP        #15                 ; trap call
000016EE                           786          
000016EE  4242                     787              CLR         D2
000016F0  4243                     788              CLR         D3
000016F2  1404                     789              MOVE.B      D4,D2
000016F4  1605                     790              MOVE.B      D5,D3
000016F6                           791              
000016F6                           792  
000016F6                           793              
000016F6  4EB9 00001FEA            794              JSR         printEA
000016FC                           795          
000016FC                           796          
000016FC  43F9 0000264E            797              LEA         newLine, A1           ; Display space
00001702  103C 000E                798              MOVE.B      #14, D0             ; command for trap call to display message
00001706  4E4F                     799              TRAP        #15                 ; trap call            
00001708                           800  
00001708                           801  
00001708  6000 F902                802              BRA         LOOP                ; go back to the loop
0000170C                           803  opMOVEAW  
0000170C  43F9 0000267D            804              LEA         MOVEAmatch,A1
00001712  103C 000E                805              MOVE.B      #14, D0             ; command for trap call to display message
00001716  4E4F                     806              TRAP        #15                 ; trap call
00001718                           807              
00001718  43F9 000026EF            808              LEA         dispWord,A1
0000171E  103C 000E                809              MOVE.B      #14, D0             ; command for trap call to display message
00001722  4E4F                     810              TRAP        #15                 ; trap call
00001724                           811              
00001724                           812  
00001724  43F9 00002652            813              LEA         space, A1           ; create spaces
0000172A  103C 000E                814              MOVE.B      #14, D0             ; command for trap call to display message
0000172E  4E4F                     815              TRAP        #15                 ; trap call
00001730                           816              
00001730  4242                     817              CLR         D2
00001732  1401                     818              MOVE.B      D1,D2               ; Copy new byte over to D2
00001734  E642                     819              ASR         #three,D2           ; Shift source register out
00001736  C47C 0007                820              AND         #seven,D2           ; Set everything to 0 except for the mode
0000173A                           821          
0000173A  4243                     822              CLR         D3
0000173C  1601                     823              MOVE.B      D1,D3
0000173E  C67C 0007                824              AND         #seven,D3
00001742                           825              
00001742  4241                     826              CLR         D1                  ; Clear D1
00001744                           827              
00001744                           828              
00001744  4EB9 00001FEA            829              JSR         printEA
0000174A                           830              
0000174A  43F9 00002659            831              LEA         comma, A1           ; Display comma
00001750  103C 000E                832              MOVE.B      #14, D0             ; command for trap call to display message
00001754  4E4F                     833              TRAP        #15                 ; trap call
00001756                           834  
00001756  4242                     835              CLR         D2
00001758  4243                     836              CLR         D3
0000175A  1404                     837              MOVE.B      D4,D2
0000175C  1605                     838              MOVE.B      D5,D3
0000175E                           839          
0000175E  4EB9 00001FEA            840              JSR         printEA
00001764                           841          
00001764                           842          
00001764  43F9 0000264E            843              LEA         newLine, A1           ; Display space
0000176A  103C 000E                844              MOVE.B      #14, D0             ; command for trap call to display message
0000176E  4E4F                     845              TRAP        #15                 ; trap call            
00001770                           846  
00001770                           847  
00001770  6000 F89A                848              BRA         LOOP                ; go back to the loop
00001774                           849  
00001774                           850  opNEG   
00001774  43F9 00002683            851              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
0000177A  103C 000E                852              MOVE.B      #14, D0             ; command for trap call to display message
0000177E  4E4F                     853              TRAP        #15                 ; trap call
00001780                           854          
00001780                           855          
00001780  1218                     856              MOVE.B      (A0)+, D1
00001782  1401                     857              MOVE.B      D1,D2               ; copy data over
00001784  EC42                     858              ASR         #six,D2
00001786                           859              
00001786  B47C 0000                860              CMP         #zero,D2
0000178A  6700 0016                861              BEQ         opNEGB
0000178E  B47C 0001                862              CMP         #one,D2
00001792  6700 008E                863              BEQ         opNEGW
00001796  B47C 0002                864              CMP         #two,D2
0000179A  6700 0046                865              BEQ         opNEGL
0000179E  6000 0E94                866              BRA         invalid
000017A2                           867  opNEGB
000017A2                           868  
000017A2  43F9 000026EC            869              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
000017A8  103C 000E                870              MOVE.B      #14, D0             ; command for trap call to display message
000017AC  4E4F                     871              TRAP        #15                 ; trap call
000017AE                           872          
000017AE  43F9 00002652            873              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000017B4  103C 000E                874              MOVE.B      #14, D0             ; command for trap call to display message
000017B8  4E4F                     875              TRAP        #15                 ; trap call
000017BA                           876          
000017BA  4242                     877              CLR         D2                  ; Clear Data register 2
000017BC  3401                     878              MOVE        D1,D2               ; Move byte into D2
000017BE  E642                     879              ASR         #three,D2           ; Shift mode into place and moves mode into place
000017C0  C47C 0007                880              AND         #seven,D2           ; Stores mode
000017C4                           881              
000017C4  4243                     882              CLR         D3
000017C6  3601                     883              MOVE        D1,D3
000017C8  C67C 0007                884              AND         #seven,D3
000017CC                           885          
000017CC  4EB9 00001FEA            886              JSR         printEA
000017D2                           887                  
000017D2  43F9 0000264E            888              LEA         newLine, A1           ; Display space
000017D8  103C 000E                889              MOVE.B      #14, D0             ; command for trap call to display message
000017DC  4E4F                     890              TRAP        #15                 ; trap call  
000017DE                           891          
000017DE  6000 F82C                892              BRA         LOOP
000017E2                           893                  
000017E2                           894  
000017E2                           895  opNEGL
000017E2                           896  
000017E2  43F9 000026F2            897              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
000017E8  103C 000E                898              MOVE.B      #14, D0             ; command for trap call to display message
000017EC  4E4F                     899              TRAP        #15                 ; trap call
000017EE                           900  
000017EE  43F9 00002652            901              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000017F4  103C 000E                902              MOVE.B      #14, D0             ; command for trap call to display message
000017F8  4E4F                     903              TRAP        #15                 ; trap call
000017FA                           904                  
000017FA  4242                     905              CLR         D2                  ; Clear Data register 2
000017FC  3401                     906              MOVE        D1,D2               ; Move byte into D2
000017FE  E642                     907              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001800  C47C 0007                908              AND         #seven,D2           ; Stores mode
00001804                           909          
00001804  4243                     910              CLR         D3
00001806  3601                     911              MOVE        D1,D3
00001808  C67C 0007                912              AND         #seven,D3
0000180C                           913          
0000180C  4EB9 00001FEA            914              JSR         printEA
00001812                           915                      
00001812  43F9 0000264E            916              LEA         newLine, A1         ; Display space
00001818  103C 000E                917              MOVE.B      #14, D0             ; command for trap call to display message
0000181C  4E4F                     918              TRAP        #15                 ; trap call  
0000181E                           919          
0000181E  6000 F7EC                920              BRA         LOOP
00001822                           921          
00001822                           922  
00001822                           923  opNEGW
00001822                           924  
00001822  43F9 000026EF            925              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001828  103C 000E                926              MOVE.B      #14, D0             ; command for trap call to display message
0000182C  4E4F                     927              TRAP        #15                 ; trap call
0000182E                           928          
0000182E  43F9 00002652            929              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001834  103C 000E                930              MOVE.B      #14, D0             ; command for trap call to display message
00001838  4E4F                     931              TRAP        #15                 ; trap call        
0000183A                           932                  
0000183A  4242                     933              CLR         D2                  ; Clear Data register 2
0000183C  3401                     934              MOVE        D1,D2               ; Move byte into D2
0000183E  E642                     935              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001840  C47C 0007                936              AND         #seven,D2           ; Stores mode
00001844                           937          
00001844  4243                     938              CLR         D3
00001846  3601                     939              MOVE        D1,D3
00001848  C67C 0007                940              AND         #seven,D3
0000184C                           941          
0000184C  4EB9 00001FEA            942              JSR         printEA
00001852                           943              
00001852  43F9 0000264E            944              LEA         newLine, A1           ; Display space
00001858  103C 000E                945              MOVE.B      #14, D0             ; command for trap call to display message
0000185C  4E4F                     946              TRAP        #15                 ; trap call  
0000185E                           947          
0000185E  6000 F7AC                948              BRA         LOOP
00001862                           949  
00001862                           950  opRTSJSR
00001862                           951          
00001862  1218                     952              MOVE.B      (A0)+, D1
00001864                           953              
00001864  1401                     954              MOVE.B      D1,D2               ; copy data over
00001866  B47C 0075                955              CMP         #117,D2
0000186A  6700 0050                956              BEQ         opRTS
0000186E                           957              
0000186E  EC42                     958              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
00001870  B47C 0002                959              CMP         #two,D2             ; Checking if it is JSR
00001874  6700 0006                960              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001878                           961  
00001878  6000 0DBA                962              BRA         invalid
0000187C                           963  
0000187C                           964  opJSR
0000187C                           965                        
0000187C  43F9 0000268B            966              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001882  103C 000E                967              MOVE.B      #14, D0             ; command for trap call to display message
00001886  4E4F                     968              TRAP        #15                 ; trap call
00001888                           969              
00001888  43F9 00002652            970              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000188E  103C 000E                971              MOVE.B      #14, D0             ; command for trap call to display message
00001892  4E4F                     972              TRAP        #15                 ; trap call
00001894                           973              
00001894  4242                     974              CLR         D2
00001896  4243                     975              CLR         D3
00001898                           976              
00001898  1401                     977              MOVE.B      D1,D2
0000189A  E642                     978              ASR         #three,D2
0000189C  C47C 0007                979              AND         #seven,D2
000018A0                           980              
000018A0  1601                     981              MOVE.B      D1,D3
000018A2  C67C 0007                982              AND         #seven,D3
000018A6                           983              
000018A6  4EB9 00001FEA            984              JSR         printEA
000018AC                           985              
000018AC  43F9 0000264E            986              LEA         newLine, A1           ; Display space
000018B2  103C 000E                987              MOVE.B      #14, D0             ; command for trap call to display message
000018B6  4E4F                     988              TRAP        #15                 ; trap call  
000018B8                           989              
000018B8  6000 F752                990              BRA         loop            
000018BC                           991  opRTS
000018BC                           992  
000018BC  43F9 00002687            993              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
000018C2  103C 000E                994              MOVE.B      #14, D0             ; command for trap call to display message
000018C6  4E4F                     995              TRAP        #15                 ; trap call
000018C8                           996              
000018C8  43F9 0000264E            997              LEA         newLine, A1           ; Display space
000018CE  103C 000E                998              MOVE.B      #14, D0             ; command for trap call to display message
000018D2  4E4F                     999              TRAP        #15                 ; trap call 
000018D4                          1000              
000018D4  6000 F736               1001              BRA         loop
000018D8                          1002  
000018D8                          1003  opMOVEMLEA
000018D8  4242                    1004              CLR         D2                  ; Clear D2
000018DA  1401                    1005              MOVE.B      D1,D2               ; Copy byte over
000018DC  C47C 000F               1006              AND         #secNib,D2          ; Check only the second nibble
000018E0  B47C 000C               1007              CMP         #twelve,D2          ; Compare the second nibble to twelve
000018E4  6700 000E               1008              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
000018E8  B47C 0008               1009              CMP         #eight,D2           ; Compare the second nibble to eight
000018EC  6700 0006               1010              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
000018F0  6000 008C               1011              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
000018F4                          1012              
000018F4                          1013  opMOVEM            
000018F4  4246                    1014              CLR         D6                  ; Clearing D4 to store dr field
000018F6  1C01                    1015              MOVE.B      D1,D6               ; Moving byte to find dr field
000018F8  E446                    1016              ASR         #two,D6             ; Moving dr field to readable spot
000018FA  CC7C 0001               1017              AND         #one,D6             ; seting everything except dr to 0
000018FE                          1018  
000018FE  4241                    1019              CLR         D1  
00001900  1218                    1020              MOVE.B      (A0)+, D1           ; Taking in next byte
00001902                          1021              
00001902  4245                    1022              CLR         D5
00001904  1A01                    1023              MOVE.B      D1,D5               ; Using D6 to check if this is indeed MOVEM
00001906  EE45                    1024              ASR         #seven,D5
00001908  CA7C 0001               1025              AND         #one,D5
0000190C  BA7C 0001               1026              CMP         #one,D5             ; This bit should be one if this is MOVEM
00001910  6600 0D22               1027              BNE         invalid             ; If this is not 1 then this is not moveM
00001914  4245                    1028              CLR         D5
00001916                          1029              
00001916  43F9 0000268F           1030              LEA         MOVEMMatch, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
0000191C  103C 000E               1031              MOVE.B      #14, D0             ; command for trap call to display message
00001920  4E4F                    1032              TRAP        #15                 ; trap call
00001922                          1033              
00001922  4245                    1034              CLR         D5                  ; Clearing D5 to store size
00001924  1A01                    1035              MOVE.B      D1,D5               ; Moving byte that contains bit for size
00001926  EC45                    1036              ASR         #six,D5            ; Moving size bit to the very right to read
00001928  CA7C 0001               1037              AND         #one,D5             ; Isolating the one bit for size
0000192C                          1038              
0000192C  4242                    1039              CLR         D2                  ; Storing EA mode in D2
0000192E  1401                    1040              MOVE.B      D1,D2
00001930  E642                    1041              ASR         #three,D2
00001932  C47C 0007               1042              AND         #seven,D2
00001936                          1043              
00001936  4243                    1044              CLR         D3                  ; Storing EA register into D3
00001938  1601                    1045              MOVE.B      D1,D3
0000193A  C67C 0007               1046              AND         #seven,D3
0000193E                          1047              
0000193E  4EB9 00001AB2           1048              JSR         MOVEMBRA
00001944                          1049              
00001944  B47C 0003               1050              CMP         #three,D2
00001948  6700 0024               1051              BEQ         skipPrintEA
0000194C                          1052              
0000194C  43F9 00002659           1053              LEA         comma, A1           ; Display comma
00001952  103C 000E               1054              MOVE.B      #14, D0             ; command for trap call to display message
00001956  4E4F                    1055              TRAP        #15                 ; trap call
00001958                          1056              
00001958                          1057  
00001958  4EB9 00001FEA           1058              JSR         printEA
0000195E                          1059              
0000195E  43F9 0000264E           1060              LEA         newline, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001964  103C 000E               1061              MOVE.B      #14, D0             ; command for trap call to display message
00001968  4E4F                    1062              TRAP        #15                 ; trap call            
0000196A                          1063  
0000196A  6000 F6A0               1064              BRA         loop            
0000196E                          1065  
0000196E                          1066  skipPrintEA 
0000196E                          1067  
0000196E  43F9 0000264E           1068              LEA         newline, A1        
00001974  103C 000E               1069              MOVE.B      #14, D0             ; command for trap call to display message
00001978  4E4F                    1070              TRAP        #15                 ; trap call            
0000197A                          1071  
0000197A  6000 F690               1072              BRA         loop 
0000197E                          1073  opLEA
0000197E  4244                    1074              CLR         D4                  ; Clearing space for source register
00001980  1801                    1075              MOVE.B      D1,D4               ; Moving byte to isolate register
00001982  E244                    1076              ASR         #one,D4
00001984  C87C 0007               1077              AND         #seven,D4           ; Isolated register
00001988                          1078  
00001988  4245                    1079              CLR         D5                  ; Clearing D5 to check if bits match LEA static bits
0000198A  1A01                    1080              MOVE.B      D1,D5
0000198C  CA7C 0001               1081              AND         #one,D5
00001990  E545                    1082              ASL         #two,D5
00001992                          1083              
00001992  1218                    1084              MOVE.B      (A0)+, D1           ; Taking in next byte
00001994                          1085              
00001994  1C01                    1086              MOVE.B      D1,D6
00001996  EC46                    1087              ASR         #six,D6
00001998  DA46                    1088              ADD         D6,D5
0000199A  4246                    1089              CLR         D6
0000199C                          1090  
0000199C  BA7C 0007               1091              CMP         #seven,D5
000019A0  6600 0C92               1092              BNE         invalid   
000019A4                          1093              
000019A4  43F9 00002695           1094              LEA         LEAmatch, A1        ; we know that the opcode will be LEA, so load A1 to print message
000019AA  103C 000E               1095              MOVE.B      #14, D0             ; command for trap call to display message
000019AE  4E4F                    1096              TRAP        #15                 ; trap call            
000019B0                          1097  
000019B0  43F9 00002652           1098              LEA         space, A1         ; we know that the opcode will be MOVEM, so load A1 to print message
000019B6  103C 000E               1099              MOVE.B      #14, D0             ; command for trap call to display message
000019BA  4E4F                    1100              TRAP        #15                 ; trap call            
000019BC                          1101              
000019BC  4242                    1102              CLR         D2
000019BE  1401                    1103              MOVE.B      D1,D2
000019C0  E642                    1104              ASR         #three,D2
000019C2  C47C 0007               1105              AND         #seven,D2
000019C6                          1106              
000019C6  4243                    1107              CLR         D3
000019C8  1601                    1108              MOVE.B      D1,D3
000019CA  C67C 0007               1109              AND         #seven,D3
000019CE                          1110              
000019CE  4EB9 00001FEA           1111              JSR         printEA
000019D4                          1112              
000019D4  43F9 00002659           1113              LEA         comma, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
000019DA  103C 000E               1114              MOVE.B      #14, D0             ; command for trap call to display message
000019DE  4E4F                    1115              TRAP        #15                 ; trap call            
000019E0                          1116              
000019E0                          1117              
000019E0  4243                    1118              CLR         D3
000019E2  1604                    1119              MOVE.B      D4,D3
000019E4  143C 0001               1120              MOVE.B      #one,D2
000019E8                          1121              
000019E8  4EB9 00001FEA           1122              JSR         printEA             ; Prints out source address
000019EE                          1123              
000019EE  43F9 0000264E           1124              LEA         newline, A1         ; Prints new line
000019F4  103C 000E               1125              MOVE.B      #14, D0             ; command for trap call to display message
000019F8  4E4F                    1126              TRAP        #15                 ; trap call
000019FA                          1127  
000019FA  6000 F610               1128              BRA         loop            
000019FE                          1129              
000019FE                          1130              
000019FE                          1131             
000019FE                          1132  
000019FE                          1133  
000019FE                          1134  opSUBQ      
000019FE  43F9 00002699           1135              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
00001A04  103C 000E               1136              MOVE.B      #14, D0             ; command for trap call to display message
00001A08  4E4F                    1137              TRAP        #15                 ; trap call
00001A0A                          1138  
00001A0A  43F9 0000269E           1139  opBRA       LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001A10  103C 000E               1140              MOVE.B      #14, D0             ; command for trap call to display message
00001A14  4E4F                    1141              TRAP        #15                 ; trap call
00001A16  43F9 00002652           1142              LEA         space, A1           ; create spaces
00001A1C  103C 000E               1143              MOVE.B      #14, D0             ; command for trap call to display message
00001A20  4E4F                    1144              TRAP        #15                 ; trap call
00001A22                          1145  
00001A22  43F9 000026A2           1146  opBCS       LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001A28  103C 000E               1147              MOVE.B      #14, D0             ; command for trap call to display message
00001A2C  4E4F                    1148              TRAP        #15                 ; trap call
00001A2E                          1149  
00001A2E  43F9 000026A6           1150  opBVC       LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001A34  103C 000E               1151              MOVE.B      #14, D0             ; command for trap call to display message
00001A38  4E4F                    1152              TRAP        #15                 ; trap call
00001A3A                          1153  
00001A3A  43F9 000026AA           1154  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001A40  103C 000E               1155          MOVE.B      #14, D0             ; command for trap call to display message
00001A44  4E4F                    1156          TRAP        #15                 ; trap call
00001A46                          1157  
00001A46  43F9 000026AE           1158  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001A4C  103C 000E               1159          MOVE.B      #14, D0             ; command for trap call to display message
00001A50  4E4F                    1160          TRAP        #15                 ; trap call
00001A52                          1161  
00001A52  43F9 000026BA           1162  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001A58  103C 000E               1163          MOVE.B      #14, D0             ; command for trap call to display message
00001A5C  4E4F                    1164          TRAP        #15                 ; trap call
00001A5E                          1165  
00001A5E  43F9 000026C6           1166  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001A64  103C 000E               1167          MOVE.B      #14, D0             ; command for trap call to display message
00001A68  4E4F                    1168          TRAP        #15                 ; trap call
00001A6A                          1169  
00001A6A  43F9 000026E0           1170  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001A70  103C 000E               1171          MOVE.B      #14, D0             ; command for trap call to display message
00001A74  4E4F                    1172          TRAP        #15                 ; trap call
00001A76                          1173  
00001A76  43F9 000026DC           1174  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001A7C  103C 000E               1175          MOVE.B      #14, D0             ; command for trap call to display message
00001A80  4E4F                    1176          TRAP        #15                 ; trap call
00001A82                          1177  
00001A82  43F9 000026D8           1178  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00001A88  103C 000E               1179          MOVE.B      #14, D0             ; command for trap call to display message
00001A8C  4E4F                    1180          TRAP        #15                 ; trap call
00001A8E                          1181  
00001A8E  43F9 000026D4           1182  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001A94  103C 000E               1183          MOVE.B      #14, D0             ; command for trap call to display message
00001A98  4E4F                    1184          TRAP        #15                 ; trap call
00001A9A                          1185  
00001A9A  43F9 000026E8           1186  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001AA0  103C 000E               1187          MOVE.B      #14, D0             ; command for trap call to display message
00001AA4  4E4F                    1188          TRAP        #15                 ; trap call
00001AA6                          1189  
00001AA6                          1190  opROR   
00001AA6  43F9 000026E4           1191          LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001AAC  103C 000E               1192          MOVE.B      #14, D0             ; command for trap call to display message
00001AB0  4E4F                    1193          TRAP        #15                 ; trap call
00001AB2                          1194  
00001AB2                          1195  
00001AB2  48E7 FF7E               1196  MOVEMBRA    MOVEM.L  D0-D7/A1-A6, -(SP)     ; Branches off depending on size bit
00001AB6  BA7C 0000               1197              CMP      #zero,D5
00001ABA  6700 000A               1198              BEQ      MOVEMW
00001ABE  BA7C 0001               1199              CMP      #one, D5
00001AC2  6700 001E               1200              BEQ      MOVEML
00001AC6                          1201              
00001AC6                          1202  MOVEMW     
00001AC6  43F9 000026EF           1203              LEA         dispWord, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001ACC  103C 000E               1204              MOVE.B      #14, D0             ; command for trap call to display message
00001AD0  4E4F                    1205              TRAP        #15                 ; trap call
00001AD2                          1206  
00001AD2  43F9 00002652           1207              LEA         space, A1           ; we know that the opcode will be ROR, so load A1 to print message
00001AD8  103C 000E               1208              MOVE.B      #14, D0             ; command for trap call to display message
00001ADC  4E4F                    1209              TRAP        #15                 ; trap call
00001ADE                          1210              
00001ADE  6000 001E               1211              BRA         CheckDR
00001AE2                          1212  
00001AE2                          1213  MOVEML   
00001AE2  43F9 000026F2           1214              LEA         dispLong, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001AE8  103C 000E               1215              MOVE.B      #14, D0             ; command for trap call to display message
00001AEC  4E4F                    1216              TRAP        #15                 ; trap call
00001AEE                          1217  
00001AEE  43F9 00002652           1218              LEA         space, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001AF4  103C 000E               1219              MOVE.B      #14, D0             ; command for trap call to display message
00001AF8  4E4F                    1220              TRAP        #15                 ; trap call
00001AFA                          1221           
00001AFA                          1222  
00001AFA  6000 0002               1223              BRA         CheckDR
00001AFE                          1224  
00001AFE                          1225  CheckDR     
00001AFE                          1226              
00001AFE                          1227                
00001AFE  3218                    1228              MOVE.W      (A0)+, D1           ; Taking in next word
00001B00  BC7C 0000               1229              CMP         #zero,D6
00001B04  6700 0036               1230              BEQ         printRegMem
00001B08  BC7C 0001               1231              CMP         #one,D6
00001B0C  6700 0006               1232              BEQ         printStack
00001B10  6000 0B22               1233              BRA         invalid
00001B14                          1234              
00001B14                          1235  printStack 
00001B14  43F9 00002665           1236              LEA         stack,A1
00001B1A  103C 000E               1237              MOVE.B      #14, D0             ; command for trap call to display message
00001B1E  4E4F                    1238              TRAP        #15                 ; trap call
00001B20                          1239  
00001B20  43F9 00002661           1240              LEA         inc,A1
00001B26  103C 000E               1241              MOVE.B      #14, D0             ; command for trap call to display message
00001B2A  4E4F                    1242              TRAP        #15                 ; trap call
00001B2C                          1243              
00001B2C  43F9 00002659           1244              LEA         comma,A1
00001B32  103C 000E               1245              MOVE.B      #14, D0             ; command for trap call to display message
00001B36  4E4F                    1246              TRAP        #15                 ; trap call
00001B38                          1247              
00001B38                          1248              
00001B38  6000 0002               1249              BRA         printRegMem
00001B3C                          1250             
00001B3C                          1251  printRegMem 
00001B3C  4244                    1252              CLR         D4                  ; Using D4 to store predecrement mode addresses
00001B3E  1801                    1253              MOVE.B      D1,D4               ; Stores bits for D0-D7
00001B40                          1254              
00001B40  4245                    1255              CLR         D5
00001B42  1A01                    1256              MOVE.B      D1,D5
00001B44  CA7C 0001               1257              AND         #mask1,D5
00001B48  BA7C 0001               1258              CMP         #mask1,D5
00001B4C  6700 007A               1259              BEQ         DataReg0
00001B50                          1260              
00001B50  4245                    1261              CLR         D5
00001B52  1A01                    1262              MOVE.B      D1,D5
00001B54  CA7C 0002               1263              AND         #mask2,D5
00001B58  BA7C 0002               1264              CMP         #mask2,D5
00001B5C  6700 009A               1265              BEQ         DataReg1
00001B60                          1266  
00001B60  4245                    1267              CLR         D5
00001B62  1A01                    1268              MOVE.B      D1,D5
00001B64  CA7C 0004               1269              AND         #mask3,D5
00001B68  BA7C 0004               1270              CMP         #mask3,D5
00001B6C  6700 00CA               1271              BEQ         DataReg2            
00001B70                          1272              
00001B70  4245                    1273              CLR         D5
00001B72  1A01                    1274              MOVE.B      D1,D5
00001B74  CA7C 0008               1275              AND         #mask4,D5
00001B78  BA7C 0008               1276              CMP         #mask4,D5
00001B7C  6700 00FA               1277              BEQ         DataReg3            
00001B80                          1278              
00001B80  4245                    1279              CLR         D5
00001B82  1A01                    1280              MOVE.B      D1,D5
00001B84  CA7C 0010               1281              AND         #mask5,D5
00001B88  BA7C 0010               1282              CMP         #mask5,D5
00001B8C  6700 012A               1283              BEQ         DataReg4
00001B90                          1284  
00001B90  4245                    1285              CLR         D5
00001B92  1A01                    1286              MOVE.B      D1,D5
00001B94  CA7C 0020               1287              AND         #mask6,D5
00001B98  BA7C 0020               1288              CMP         #mask6,D5
00001B9C  6700 015A               1289              BEQ         DataReg5
00001BA0                          1290  
00001BA0  4245                    1291              CLR         D5
00001BA2  1A01                    1292              MOVE.B      D1,D5
00001BA4  CA7C 0040               1293              AND         #mask7,D5
00001BA8  BA7C 0040               1294              CMP         #mask7,D5
00001BAC  6700 018A               1295              BEQ         DataReg6
00001BB0                          1296  
00001BB0  4245                    1297              CLR         D5
00001BB2  1A01                    1298              MOVE.B      D1,D5
00001BB4  CA7C 0080               1299              AND         #mask8,D5
00001BB8  BA7C 0080               1300              CMP         #mask8,D5
00001BBC  6700 01BA               1301              BEQ         DataReg7
00001BC0                          1302              
00001BC0  6000 0A72               1303              BRA         invalid
00001BC4  6000 0A6E               1304              BRA         invalid        
00001BC8                          1305              
00001BC8                          1306  DataReg0
00001BC8  43F9 00002712           1307              LEA         dispD0, A1          ; Output string D0
00001BCE  103C 000E               1308              MOVE.B      #14, D0             ; command for trap call to display message
00001BD2  4E4F                    1309              TRAP        #15                 ; trap call
00001BD4                          1310              
00001BD4  4245                    1311              CLR         D5
00001BD6  1A01                    1312              MOVE.B      D1,D5
00001BD8  CA7C 0002               1313              AND         #mask2,D5
00001BDC  BA7C 0002               1314              CMP         #mask2,D5
00001BE0  6700 0006               1315              BEQ         Reg0Cont
00001BE4  6000 01A2               1316              BRA         printMem
00001BE8                          1317  Reg0Cont        
00001BE8  43F9 0000265F           1318              LEA         dec, A1             ; Output -
00001BEE  103C 000E               1319              MOVE.B      #14, D0             ; command for trap call to display message
00001BF2  4E4F                    1320              TRAP        #15                 ; trap call        
00001BF4  6000 0002               1321              BRA         DataReg1
00001BF8                          1322  
00001BF8                          1323  DataReg1
00001BF8  4245                    1324              CLR         D5
00001BFA  1A01                    1325              MOVE.B      D1,D5
00001BFC  CA7C 0005               1326              AND         #maskA,D5
00001C00  BA7C 0005               1327              CMP         #maskA,D5
00001C04  6700 0032               1328              BEQ         DataReg2
00001C08                          1329              
00001C08  43F9 00002715           1330              LEA         dispD1, A1          ; Output string D0
00001C0E  103C 000E               1331              MOVE.B      #14, D0             ; command for trap call to display message
00001C12  4E4F                    1332              TRAP        #15                 ; trap call
00001C14                          1333              
00001C14  4245                    1334              CLR         D5
00001C16  1A01                    1335              MOVE.B      D1,D5
00001C18  CA7C 0004               1336              AND         #mask3,D5
00001C1C  BA7C 0004               1337              CMP         #mask3,D5
00001C20  6700 0006               1338              BEQ         Reg1Cont
00001C24  6000 0162               1339              BRA         printMem
00001C28                          1340  Reg1Cont        
00001C28  43F9 0000265F           1341              LEA         dec, A1             ; Output -
00001C2E  103C 000E               1342              MOVE.B      #14, D0             ; command for trap call to display message
00001C32  4E4F                    1343              TRAP        #15                 ; trap call        
00001C34  6000 0002               1344              BRA         DataReg2
00001C38                          1345  
00001C38                          1346  
00001C38                          1347  DataReg2
00001C38  4245                    1348              CLR         D5
00001C3A  1A01                    1349              MOVE.B      D1,D5
00001C3C  CA7C 000A               1350              AND         #maskB,D5
00001C40  BA7C 000A               1351              CMP         #maskB,D5
00001C44  6700 0032               1352              BEQ         DataReg3
00001C48                          1353              
00001C48                          1354              
00001C48  43F9 00002718           1355              LEA         dispD2, A1          ; Output string D0
00001C4E  103C 000E               1356              MOVE.B      #14, D0             ; command for trap call to display message
00001C52  4E4F                    1357              TRAP        #15                 ; trap call
00001C54                          1358              
00001C54  4245                    1359              CLR         D5
00001C56  1A01                    1360              MOVE.B      D1,D5
00001C58  CA7C 0008               1361              AND         #mask4,D5
00001C5C  BA7C 0008               1362              CMP         #mask4,D5
00001C60  6700 0006               1363              BEQ         Reg2Cont
00001C64  6000 0122               1364              BRA         printMem
00001C68                          1365  Reg2Cont        
00001C68  43F9 0000265F           1366              LEA         dec, A1             ; Output -
00001C6E  103C 000E               1367              MOVE.B      #14, D0             ; command for trap call to display message
00001C72  4E4F                    1368              TRAP        #15                 ; trap call        
00001C74  6000 0002               1369              BRA         DataReg3
00001C78                          1370  
00001C78                          1371  DataReg3
00001C78  4245                    1372              CLR         D5
00001C7A  1A01                    1373              MOVE.B      D1,D5
00001C7C  CA7C 0014               1374              AND         #maskC,D5
00001C80  BA7C 0014               1375              CMP         #maskC,D5
00001C84  6700 0032               1376              BEQ         DataReg4
00001C88                          1377              
00001C88  43F9 0000271B           1378              LEA         dispD3, A1          ; Output string D0
00001C8E  103C 000E               1379              MOVE.B      #14, D0             ; command for trap call to display message
00001C92  4E4F                    1380              TRAP        #15                 ; trap call
00001C94                          1381              
00001C94  4245                    1382              CLR         D5
00001C96  1A01                    1383              MOVE.B      D1,D5
00001C98  CA7C 0010               1384              AND         #mask5,D5
00001C9C  BA7C 0010               1385              CMP         #mask5,D5
00001CA0  6700 0006               1386              BEQ         Reg3Cont
00001CA4  6000 00E2               1387              BRA         printMem
00001CA8                          1388  Reg3Cont        
00001CA8  43F9 0000265F           1389              LEA         dec, A1             ; Output -
00001CAE  103C 000E               1390              MOVE.B      #14, D0             ; command for trap call to display message
00001CB2  4E4F                    1391              TRAP        #15                 ; trap call        
00001CB4  6000 0002               1392              BRA         DataReg4
00001CB8                          1393  
00001CB8                          1394  
00001CB8                          1395  DataReg4
00001CB8  4245                    1396              CLR         D5
00001CBA  1A01                    1397              MOVE.B      D1,D5
00001CBC  CA7C 0028               1398              AND         #maskD,D5
00001CC0  BA7C 0028               1399              CMP         #maskD,D5
00001CC4  6700 0032               1400              BEQ         DataReg5
00001CC8                          1401              
00001CC8  43F9 0000271E           1402              LEA         dispD4, A1          ; Output string D0
00001CCE  103C 000E               1403              MOVE.B      #14, D0             ; command for trap call to display message
00001CD2  4E4F                    1404              TRAP        #15                 ; trap call
00001CD4                          1405              
00001CD4  4245                    1406              CLR         D5
00001CD6  1A01                    1407              MOVE.B      D1,D5
00001CD8  CA7C 0020               1408              AND         #mask6,D5
00001CDC  BA7C 0020               1409              CMP         #mask6,D5
00001CE0  6700 0006               1410              BEQ         Reg4Cont
00001CE4  6000 00A2               1411              BRA         printMem
00001CE8                          1412  Reg4Cont        
00001CE8  43F9 0000265F           1413              LEA         dec, A1             ; Output -
00001CEE  103C 000E               1414              MOVE.B      #14, D0             ; command for trap call to display message
00001CF2  4E4F                    1415              TRAP        #15                 ; trap call        
00001CF4  6000 0002               1416              BRA         DataReg5
00001CF8                          1417  
00001CF8                          1418  DataReg5
00001CF8  4245                    1419              CLR         D5
00001CFA  1A01                    1420              MOVE.B      D1,D5
00001CFC  CA7C 0050               1421              AND         #maskE,D5
00001D00  BA7C 0050               1422              CMP         #maskE,D5
00001D04  6700 0032               1423              BEQ         DataReg6
00001D08                          1424              
00001D08  43F9 00002721           1425              LEA         dispD5, A1          ; Output string D0
00001D0E  103C 000E               1426              MOVE.B      #14, D0             ; command for trap call to display message
00001D12  4E4F                    1427              TRAP        #15                 ; trap call
00001D14                          1428              
00001D14  4245                    1429              CLR         D5
00001D16  1A01                    1430              MOVE.B      D1,D5
00001D18  CA7C 0040               1431              AND         #mask7,D5
00001D1C  BA7C 0040               1432              CMP         #mask7,D5
00001D20  6700 0006               1433              BEQ         Reg5Cont
00001D24  6000 0062               1434              BRA         printMem
00001D28                          1435  Reg5Cont        
00001D28  43F9 0000265F           1436              LEA         dec, A1             ; Output -
00001D2E  103C 000E               1437              MOVE.B      #14, D0             ; command for trap call to display message
00001D32  4E4F                    1438              TRAP        #15                 ; trap call        
00001D34  6000 0042               1439              BRA         DataReg7
00001D38                          1440  
00001D38                          1441  DataReg6
00001D38  4245                    1442              CLR         D5
00001D3A  1A01                    1443              MOVE.B      D1,D5
00001D3C  CA7C 00A0               1444              AND         #maskF,D5
00001D40  BA7C 00A0               1445              CMP         #maskF,D5
00001D44  6700 0032               1446              BEQ         DataReg7
00001D48                          1447  
00001D48  43F9 00002724           1448              LEA         dispD6, A1          ; Output string D0
00001D4E  103C 000E               1449              MOVE.B      #14, D0             ; command for trap call to display message
00001D52  4E4F                    1450              TRAP        #15                 ; trap call
00001D54                          1451              
00001D54  4245                    1452              CLR         D5
00001D56  1A01                    1453              MOVE.B      D1,D5
00001D58  CA7C 0080               1454              AND         #mask8,D5
00001D5C  BA7C 0080               1455              CMP         #mask8,D5
00001D60  6700 0006               1456              BEQ         Reg6Cont
00001D64  6000 0022               1457              BRA         printMem
00001D68                          1458  Reg6Cont        
00001D68  43F9 0000265F           1459              LEA         dec, A1             ; Output -
00001D6E  103C 000E               1460              MOVE.B      #14, D0             ; command for trap call to display message
00001D72  4E4F                    1461              TRAP        #15                 ; trap call        
00001D74  6000 0002               1462              BRA         DataReg7
00001D78                          1463  
00001D78                          1464  DataReg7    
00001D78  43F9 00002727           1465              LEA         dispD7, A1             ; Output -
00001D7E  103C 000E               1466              MOVE.B      #14, D0             ; command for trap call to display message
00001D82  4E4F                    1467              TRAP        #15                 ; trap call        
00001D84  6000 0002               1468              BRA         printMem            
00001D88                          1469  printMem                                    ; Made this function in order to reuse if DR is 1
00001D88  6000 0002               1470              BRA         printMemNow
00001D8C                          1471  printMemNow               
00001D8C  43F9 00002663           1472              LEA         slash, A1           ; Display slash
00001D92  103C 000E               1473              MOVE.B      #14, D0             ; command for trap call to display message
00001D96  4E4F                    1474              TRAP        #15                 ; trap call
00001D98                          1475           
00001D98  4244                    1476              CLR         D4                  ; Using D4 to store predecrement mode addresses
00001D9A  3801                    1477              MOVE.W      D1,D4               ; Stores bits for D0-D7
00001D9C  E044                    1478              ASR         #eight,D4
00001D9E                          1479              
00001D9E  4245                    1480              CLR         D5
00001DA0  1A04                    1481              MOVE.B      D4,D5
00001DA2  CA7C 0001               1482              AND         #mask1,D5
00001DA6  BA7C 0001               1483              CMP         #mask1,D5
00001DAA  6700 0072               1484              BEQ         AddrReg0
00001DAE                          1485              
00001DAE  4245                    1486              CLR         D5
00001DB0  1A04                    1487              MOVE.B      D4,D5
00001DB2  CA7C 0002               1488              AND         #mask2,D5
00001DB6  BA7C 0002               1489              CMP         #mask2,D5
00001DBA  6700 0092               1490              BEQ         AddrReg1
00001DBE                          1491  
00001DBE  4245                    1492              CLR         D5
00001DC0  1A04                    1493              MOVE.B      D4,D5
00001DC2  CA7C 0004               1494              AND         #mask3,D5
00001DC6  BA7C 0004               1495              CMP         #mask3,D5
00001DCA  6700 00C2               1496              BEQ         AddrReg2            
00001DCE                          1497              
00001DCE  4245                    1498              CLR         D5
00001DD0  1A04                    1499              MOVE.B      D4,D5
00001DD2  CA7C 0008               1500              AND         #mask4,D5
00001DD6  BA7C 0008               1501              CMP         #mask4,D5
00001DDA  6700 00F2               1502              BEQ         AddrReg3            
00001DDE                          1503              
00001DDE  4245                    1504              CLR         D5
00001DE0  1A04                    1505              MOVE.B      D4,D5
00001DE2  CA7C 0010               1506              AND         #mask5,D5
00001DE6  BA7C 0010               1507              CMP         #mask5,D5
00001DEA  6700 0122               1508              BEQ         AddrReg4
00001DEE                          1509  
00001DEE  4245                    1510              CLR         D5
00001DF0  1A04                    1511              MOVE.B      D4,D5
00001DF2  CA7C 0020               1512              AND         #mask6,D5
00001DF6  BA7C 0020               1513              CMP         #mask6,D5
00001DFA  6700 0152               1514              BEQ         AddrReg5
00001DFE                          1515  
00001DFE  4245                    1516              CLR         D5
00001E00  1A04                    1517              MOVE.B      D4,D5
00001E02  CA7C 0040               1518              AND         #mask7,D5
00001E06  BA7C 0040               1519              CMP         #mask7,D5
00001E0A  6700 0182               1520              BEQ         AddrReg6
00001E0E                          1521  
00001E0E  4245                    1522              CLR         D5
00001E10  1A04                    1523              MOVE.B      D4,D5
00001E12  CA7C 0080               1524              AND         #mask8,D5
00001E16  BA7C 0080               1525              CMP         #mask8,D5
00001E1A  6700 01B2               1526              BEQ         AddrReg7
00001E1E                          1527  AddrReg0
00001E1E  43F9 000026F8           1528              LEA         dispA0, A1          ; Output string D0
00001E24  103C 000E               1529              MOVE.B      #14, D0             ; command for trap call to display message
00001E28  4E4F                    1530              TRAP        #15                 ; trap call
00001E2A                          1531              
00001E2A  4245                    1532              CLR         D5
00001E2C  1A01                    1533              MOVE.B      D1,D5
00001E2E  CA7C 0002               1534              AND         #mask2,D5
00001E32  BA7C 0002               1535              CMP         #mask2,D5
00001E36  6700 0006               1536              BEQ         Addr0Cont
00001E3A  6000 01A2               1537              BRA         endMOVE
00001E3E                          1538  Addr0Cont        
00001E3E  43F9 0000265F           1539              LEA         dec, A1             ; Output -
00001E44  103C 000E               1540              MOVE.B      #14, D0             ; command for trap call to display message
00001E48  4E4F                    1541              TRAP        #15                 ; trap call        
00001E4A  6000 0002               1542              BRA         AddrReg1
00001E4E                          1543  
00001E4E                          1544  AddrReg1
00001E4E  4245                    1545              CLR         D5
00001E50  1A04                    1546              MOVE.B      D4,D5
00001E52  CA7C 0005               1547              AND         #maskA,D5
00001E56  BA7C 0005               1548              CMP         #maskA,D5
00001E5A  6700 0032               1549              BEQ         AddrReg2
00001E5E                          1550              
00001E5E  43F9 000026FB           1551              LEA         dispA1, A1          ; Output string D0
00001E64  103C 000E               1552              MOVE.B      #14, D0             ; command for trap call to display message
00001E68  4E4F                    1553              TRAP        #15                 ; trap call
00001E6A                          1554              
00001E6A  4245                    1555              CLR         D5
00001E6C  1A04                    1556              MOVE.B      D4,D5
00001E6E  CA7C 0004               1557              AND         #mask3,D5
00001E72  BA7C 0004               1558              CMP         #mask3,D5
00001E76  6700 0006               1559              BEQ         Addr1Cont
00001E7A  6000 0162               1560              BRA         endMOVE
00001E7E                          1561  Addr1Cont        
00001E7E  43F9 0000265F           1562              LEA         dec, A1             ; Output -
00001E84  103C 000E               1563              MOVE.B      #14, D0             ; command for trap call to display message
00001E88  4E4F                    1564              TRAP        #15                 ; trap call        
00001E8A  6000 0002               1565              BRA         AddrReg2
00001E8E                          1566  
00001E8E                          1567  
00001E8E                          1568  AddrReg2
00001E8E  4245                    1569              CLR         D5
00001E90  1A04                    1570              MOVE.B      D4,D5
00001E92  CA7C 000A               1571              AND         #maskB,D5
00001E96  BA7C 000A               1572              CMP         #maskB,D5
00001E9A  6700 0032               1573              BEQ         AddrReg3
00001E9E                          1574              
00001E9E                          1575              
00001E9E  43F9 000026FE           1576              LEA         dispA2, A1          ; Output string D0
00001EA4  103C 000E               1577              MOVE.B      #14, D0             ; command for trap call to display message
00001EA8  4E4F                    1578              TRAP        #15                 ; trap call
00001EAA                          1579              
00001EAA  4245                    1580              CLR         D5
00001EAC  1A04                    1581              MOVE.B      D4,D5
00001EAE  CA7C 0008               1582              AND         #mask4,D5
00001EB2  BA7C 0008               1583              CMP         #mask4,D5
00001EB6  6700 0006               1584              BEQ         Addr2Cont
00001EBA  6000 0122               1585              BRA         endMOVE
00001EBE                          1586  Addr2Cont        
00001EBE  43F9 0000265F           1587              LEA         dec, A1             ; Output -
00001EC4  103C 000E               1588              MOVE.B      #14, D0             ; command for trap call to display message
00001EC8  4E4F                    1589              TRAP        #15                 ; trap call        
00001ECA  6000 0002               1590              BRA         AddrReg3
00001ECE                          1591  
00001ECE                          1592  AddrReg3
00001ECE  4245                    1593              CLR         D5
00001ED0  1A04                    1594              MOVE.B      D4,D5
00001ED2  CA7C 0014               1595              AND         #maskC,D5
00001ED6  BA7C 0014               1596              CMP         #maskC,D5
00001EDA  6700 0032               1597              BEQ         AddrReg4
00001EDE                          1598              
00001EDE  43F9 00002701           1599              LEA         dispA3, A1          ; Output string D0
00001EE4  103C 000E               1600              MOVE.B      #14, D0             ; command for trap call to display message
00001EE8  4E4F                    1601              TRAP        #15                 ; trap call
00001EEA                          1602              
00001EEA  4245                    1603              CLR         D5
00001EEC  1A04                    1604              MOVE.B      D4,D5
00001EEE  CA7C 0010               1605              AND         #mask5,D5
00001EF2  BA7C 0010               1606              CMP         #mask5,D5
00001EF6  6700 0006               1607              BEQ         Addr3Cont
00001EFA  6000 00E2               1608              BRA         endMOVE
00001EFE                          1609  Addr3Cont        
00001EFE  43F9 0000265F           1610              LEA         dec, A1             ; Output -
00001F04  103C 000E               1611              MOVE.B      #14, D0             ; command for trap call to display message
00001F08  4E4F                    1612              TRAP        #15                 ; trap call        
00001F0A  6000 0002               1613              BRA         AddrReg4
00001F0E                          1614  
00001F0E                          1615  
00001F0E                          1616  AddrReg4
00001F0E  4245                    1617              CLR         D5
00001F10  1A04                    1618              MOVE.B      D4,D5
00001F12  CA7C 0028               1619              AND         #maskD,D5
00001F16  BA7C 0028               1620              CMP         #maskD,D5
00001F1A  6700 0032               1621              BEQ         AddrReg5
00001F1E                          1622              
00001F1E  43F9 00002704           1623              LEA         dispA4, A1          ; Output string D0
00001F24  103C 000E               1624              MOVE.B      #14, D0             ; command for trap call to display message
00001F28  4E4F                    1625              TRAP        #15                 ; trap call
00001F2A                          1626              
00001F2A  4245                    1627              CLR         D5
00001F2C  1A04                    1628              MOVE.B      D4,D5
00001F2E  CA7C 0020               1629              AND         #mask6,D5
00001F32  BA7C 0020               1630              CMP         #mask6,D5
00001F36  6700 0006               1631              BEQ         Addr4Cont
00001F3A  6000 00A2               1632              BRA         endMOVE
00001F3E                          1633  Addr4Cont        
00001F3E  43F9 0000265F           1634              LEA         dec, A1             ; Output -
00001F44  103C 000E               1635              MOVE.B      #14, D0             ; command for trap call to display message
00001F48  4E4F                    1636              TRAP        #15                 ; trap call        
00001F4A  6000 0002               1637              BRA         AddrReg5
00001F4E                          1638  AddrReg5
00001F4E  4245                    1639              CLR         D5
00001F50  1A04                    1640              MOVE.B      D4,D5
00001F52  CA7C 0050               1641              AND         #maskE,D5
00001F56  BA7C 0050               1642              CMP         #maskE,D5
00001F5A  6700 0032               1643              BEQ         AddrReg6
00001F5E                          1644              
00001F5E  43F9 00002707           1645              LEA         dispA5, A1          ; Output string D0
00001F64  103C 000E               1646              MOVE.B      #14, D0             ; command for trap call to display message
00001F68  4E4F                    1647              TRAP        #15                 ; trap call
00001F6A                          1648              
00001F6A  4245                    1649              CLR         D5
00001F6C  1A04                    1650              MOVE.B      D4,D5
00001F6E  CA7C 0040               1651              AND         #mask7,D5
00001F72  BA7C 0040               1652              CMP         #mask7,D5
00001F76  6700 0006               1653              BEQ         Addr5Cont
00001F7A  6000 0062               1654              BRA         endMOVE
00001F7E                          1655  Addr5Cont        
00001F7E  43F9 0000265F           1656              LEA         dec, A1             ; Output -
00001F84  103C 000E               1657              MOVE.B      #14, D0             ; command for trap call to display message
00001F88  4E4F                    1658              TRAP        #15                 ; trap call        
00001F8A  6000 0042               1659              BRA         AddrReg7
00001F8E                          1660  
00001F8E                          1661  AddrReg6
00001F8E  4245                    1662              CLR         D5
00001F90  1A04                    1663              MOVE.B      D4,D5
00001F92  CA7C 00A0               1664              AND         #maskF,D5
00001F96  BA7C 00A0               1665              CMP         #maskF,D5
00001F9A  6700 0032               1666              BEQ         AddrReg7
00001F9E                          1667  
00001F9E  43F9 0000270A           1668              LEA         dispA6, A1          ; Output string D0
00001FA4  103C 000E               1669              MOVE.B      #14, D0             ; command for trap call to display message
00001FA8  4E4F                    1670              TRAP        #15                 ; trap call
00001FAA                          1671              
00001FAA  4245                    1672              CLR         D5
00001FAC  1A04                    1673              MOVE.B      D4,D5
00001FAE  CA7C 0080               1674              AND         #mask8,D5
00001FB2  BA7C 0080               1675              CMP         #mask8,D5
00001FB6  6700 0006               1676              BEQ         Addr6Cont
00001FBA  6000 0022               1677              BRA         endMOVE
00001FBE                          1678  Addr6Cont        
00001FBE  43F9 0000265F           1679              LEA         dec, A1             ; Output -
00001FC4  103C 000E               1680              MOVE.B      #14, D0             ; command for trap call to display message
00001FC8  4E4F                    1681              TRAP        #15                 ; trap call        
00001FCA  6000 0002               1682              BRA         AddrReg7
00001FCE                          1683  
00001FCE                          1684  AddrReg7    
00001FCE  43F9 0000270D           1685              LEA         dispA7, A1          ; Output -
00001FD4  103C 000E               1686              MOVE.B      #14, D0             ; command for trap call to display message
00001FD8  4E4F                    1687              TRAP        #15                 ; trap call        
00001FDA  6000 0002               1688              BRA         endMOVE
00001FDE                          1689  
00001FDE                          1690  
00001FDE                          1691  
00001FDE                          1692  
00001FDE                          1693  endMOVE
00001FDE  4CDF 7EFF               1694              MOVEM.L  (SP)+, D0-D7/A1-A6
00001FE2  4E75                    1695              RTS
00001FE4                          1696  endMove1                                    ; Used if MOVEM has DR is 1
00001FE4  4CDF 7EFF               1697              MOVEM.L  (SP)+, D0-D7/A1-A6
00001FE8  4E75                    1698              RTS
00001FEA                          1699  
00001FEA                          1700  ***********************************************************************************************************
00001FEA                          1701  *
00001FEA                          1702  *                                           EA Print Check
00001FEA                          1703  *
00001FEA                          1704  ***********************************************************************************************************
00001FEA  48E7 FF7E               1705  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00001FEE                          1706  
00001FEE                          1707  
00001FEE  B43C 0000               1708              CMP.B       #zero, D2
00001FF2  6700 002E               1709              BEQ         pDataReg
00001FF6  B43C 0001               1710              CMP.B       #one, D2
00001FFA  6700 00E6               1711              BEQ         pAddrReg
00001FFE  B43C 0002               1712              CMP.B       #two, D2
00002002  6700 019E               1713              BEQ         pAddrDir
00002006  B43C 0003               1714              CMP.B       #three, D2
0000200A  6700 02C2               1715              BEQ         pAddrPost
0000200E  B43C 0004               1716              CMP.B       #four, D2
00002012  6700 0446               1717              BEQ         pAddrDec
00002016  B43C 0007               1718              CMP.B       #seven, D2
0000201A  6700 0576               1719              BEQ         pHex
0000201E  6000 0614               1720              BRA         invalid
00002022                          1721  
00002022                          1722  ***********************************************************************************************************
00002022                          1723  * Data Register        
00002022  B63C 0000               1724  pDataReg    CMP.B   #zero,D3
00002026  6700 003A               1725              BEQ     displayD0
0000202A  B63C 0001               1726              CMP.B   #one,D3
0000202E  6700 0042               1727              BEQ     displayD1
00002032  B63C 0002               1728              CMP.B   #two,D3
00002036  6700 004A               1729              BEQ     displayD2
0000203A  B63C 0003               1730              CMP.B   #three,D3
0000203E  6700 0052               1731              BEQ     displayD3
00002042  B63C 0004               1732              CMP.B   #four,D3
00002046  6700 005A               1733              BEQ     displayD4
0000204A  B63C 0005               1734              CMP.B   #five,D3
0000204E  6700 0062               1735              BEQ     displayD5
00002052  B63C 0006               1736              CMP.B   #six,D3
00002056  6700 006A               1737              BEQ     displayD6
0000205A  B63C 0007               1738              CMP.B   #seven,D3
0000205E  6700 0072               1739              BEQ     displayD7
00002062                          1740              
00002062  43F9 00002712           1741  displayD0   LEA         dispD0, A1          ; Display space
00002068  103C 000E               1742              MOVE.B      #14, D0             ; command for trap call to display message
0000206C  4E4F                    1743              TRAP        #15                 ; trap call
0000206E  6000 05D4               1744              BRA         endSUB              ; go to the end of the subroutine
00002072                          1745              
00002072  43F9 00002715           1746  displayD1   LEA         dispD1, A1          ; Display space
00002078  103C 000E               1747              MOVE.B      #14, D0             ; command for trap call to display message
0000207C  4E4F                    1748              TRAP        #15                 ; trap call
0000207E  6000 05C4               1749              BRA         endSUB              ; go to the end of the subroutine
00002082                          1750  
00002082  43F9 00002718           1751  displayD2   LEA         dispD2, A1          ; Display space
00002088  103C 000E               1752              MOVE.B      #14, D0             ; command for trap call to display message
0000208C  4E4F                    1753              TRAP        #15                 ; trap call
0000208E  6000 05B4               1754              BRA         endSUB              ; go to the end of the subroutine
00002092                          1755  
00002092  43F9 0000271B           1756  displayD3   LEA         dispD3, A1          ; Display space
00002098  103C 000E               1757              MOVE.B      #14, D0             ; command for trap call to display message
0000209C  4E4F                    1758              TRAP        #15                 ; trap call
0000209E  6000 05A4               1759              BRA         endSUB              ; go to the end of the subroutine
000020A2                          1760  
000020A2  43F9 0000271E           1761  displayD4   LEA         dispD4, A1          ; Display space
000020A8  103C 000E               1762              MOVE.B      #14, D0             ; command for trap call to display message
000020AC  4E4F                    1763              TRAP        #15                 ; trap call
000020AE  6000 0594               1764              BRA         endSUB              ; go to the end of the subroutine
000020B2                          1765  
000020B2  43F9 00002721           1766  displayD5   LEA         dispD5, A1          ; Display space
000020B8  103C 000E               1767              MOVE.B      #14, D0             ; command for trap call to display message
000020BC  4E4F                    1768              TRAP        #15                 ; trap call
000020BE  6000 0584               1769              BRA         endSUB              ; go to the end of the subroutine
000020C2                          1770  
000020C2  43F9 00002724           1771  displayD6   LEA         dispD6, A1          ; Display space
000020C8  103C 000E               1772              MOVE.B      #14, D0             ; command for trap call to display message
000020CC  4E4F                    1773              TRAP        #15                 ; trap call
000020CE  6000 0574               1774              BRA         endSUB              ; go to the end of the subroutine
000020D2                          1775  
000020D2  43F9 00002727           1776  displayD7   LEA         dispD7, A1          ; Display space
000020D8  103C 000E               1777              MOVE.B      #14, D0             ; command for trap call to display message
000020DC  4E4F                    1778              TRAP        #15                 ; trap call
000020DE  6000 0564               1779              BRA         endSUB              ; go to the end of the subroutine
000020E2                          1780  ***********************************************************************************************************
000020E2                          1781  * Address Register
000020E2  B63C 0000               1782  pAddrReg    CMP.B   #zero,D3
000020E6  6700 003A               1783              BEQ     displayA0
000020EA  B63C 0001               1784              CMP.B   #one,D3
000020EE  6700 0042               1785              BEQ     displayA1
000020F2  B63C 0002               1786              CMP.B   #two,D3
000020F6  6700 004A               1787              BEQ     displayA2
000020FA  B63C 0003               1788              CMP.B   #three,D3
000020FE  6700 0052               1789              BEQ     displayA3
00002102  B63C 0004               1790              CMP.B   #four,D3
00002106  6700 005A               1791              BEQ     displayA4
0000210A  B63C 0005               1792              CMP.B   #five,D3
0000210E  6700 0062               1793              BEQ     displayA5
00002112  B63C 0006               1794              CMP.B   #six,D3
00002116  6700 006A               1795              BEQ     displayA6
0000211A  B63C 0007               1796              CMP.B   #seven,D3
0000211E  6700 0072               1797              BEQ     displayA7
00002122                          1798              
00002122  43F9 000026F8           1799  displayA0   LEA         dispA0, A1          ; Display space
00002128  103C 000E               1800              MOVE.B      #14, D0             ; command for trap call to display message
0000212C  4E4F                    1801              TRAP        #15                 ; trap call
0000212E  6000 0514               1802              BRA         endSUB              ; go to the end of the subroutine
00002132                          1803              
00002132  43F9 000026FB           1804  displayA1   LEA         dispA1, A1          ; Display space
00002138  103C 000E               1805              MOVE.B      #14, D0             ; command for trap call to display message
0000213C  4E4F                    1806              TRAP        #15                 ; trap call
0000213E  6000 0504               1807              BRA         endSUB              ; go to the end of the subroutine
00002142                          1808  
00002142  43F9 000026FE           1809  displayA2   LEA         dispA2, A1          ; Display space
00002148  103C 000E               1810              MOVE.B      #14, D0             ; command for trap call to display message
0000214C  4E4F                    1811              TRAP        #15                 ; trap call
0000214E  6000 04F4               1812              BRA         endSUB              ; go to the end of the subroutine
00002152                          1813  
00002152  43F9 00002701           1814  displayA3   LEA         dispA3, A1          ; Display space
00002158  103C 000E               1815              MOVE.B      #14, D0             ; command for trap call to display message
0000215C  4E4F                    1816              TRAP        #15                 ; trap call
0000215E  6000 04E4               1817              BRA         endSUB              ; go to the end of the subroutine
00002162                          1818  
00002162  43F9 00002704           1819  displayA4   LEA         dispA4, A1          ; Display space
00002168  103C 000E               1820              MOVE.B      #14, D0             ; command for trap call to display message
0000216C  4E4F                    1821              TRAP        #15                 ; trap call
0000216E  6000 04D4               1822              BRA         endSUB              ; go to the end of the subroutine
00002172                          1823  
00002172  43F9 00002707           1824  displayA5   LEA         dispA5, A1          ; Display space
00002178  103C 000E               1825              MOVE.B      #14, D0             ; command for trap call to display message
0000217C  4E4F                    1826              TRAP        #15                 ; trap call
0000217E  6000 04C4               1827              BRA         endSUB              ; go to the end of the subroutine
00002182                          1828  
00002182  43F9 0000270A           1829  displayA6   LEA         dispA6, A1          ; Display space
00002188  103C 000E               1830              MOVE.B      #14, D0             ; command for trap call to display message
0000218C  4E4F                    1831              TRAP        #15                 ; trap call
0000218E  6000 04B4               1832              BRA         endSUB              ; go to the end of the subroutine
00002192                          1833  
00002192  43F9 0000270D           1834  displayA7   LEA         dispA7, A1          ; Display space
00002198  103C 000E               1835              MOVE.B      #14, D0             ; command for trap call to display message
0000219C  4E4F                    1836              TRAP        #15                 ; trap call
0000219E  6000 04A4               1837              BRA         endSUB              ; go to the end of the subroutine
000021A2                          1838  
000021A2                          1839  ***********************************************************************************************************
000021A2                          1840  * Address Register Direct
000021A2                          1841  
000021A2  43F9 0000265B           1842  pAddrDir    LEA         opPer, A1           ; Display space
000021A8  103C 000E               1843              MOVE.B      #14, D0             ; command for trap call to display message
000021AC  4E4F                    1844              TRAP        #15                 ; trap call
000021AE                          1845              
000021AE  B63C 0000               1846              CMP.B   #zero,D3
000021B2  6700 003A               1847              BEQ     displayA0A
000021B6  B63C 0001               1848              CMP.B   #one,D3
000021BA  6700 004E               1849              BEQ     displayA1A
000021BE  B63C 0002               1850              CMP.B   #two,D3
000021C2  6700 0062               1851              BEQ     displayA2A
000021C6  B63C 0003               1852              CMP.B   #three,D3
000021CA  6700 0076               1853              BEQ     displayA3A
000021CE  B63C 0004               1854              CMP.B   #four,D3
000021D2  6700 008A               1855              BEQ     displayA4A
000021D6  B63C 0005               1856              CMP.B   #five,D3
000021DA  6700 009E               1857              BEQ     displayA5A
000021DE  B63C 0006               1858              CMP.B   #six,D3
000021E2  6700 00B2               1859              BEQ     displayA6A
000021E6  B63C 0007               1860              CMP.B   #seven,D3
000021EA  6700 00C6               1861              BEQ     displayA7A
000021EE                          1862              
000021EE  43F9 000026F8           1863  displayA0A  LEA         dispA0, A1          ; Display space
000021F4  103C 000E               1864              MOVE.B      #14, D0             ; command for trap call to display message
000021F8  4E4F                    1865              TRAP        #15                 ; trap call
000021FA  43F9 0000265D           1866              LEA         clPer, A1           ; Display space
00002200  103C 000E               1867              MOVE.B      #14, D0             ; command for trap call to display message
00002204  4E4F                    1868              TRAP        #15                 ; trap call
00002206  6000 043C               1869              BRA         endSUB              ; go to the end of the subroutine
0000220A                          1870              
0000220A  43F9 000026FB           1871  displayA1A  LEA         dispA1, A1          ; Display space
00002210  103C 000E               1872              MOVE.B      #14, D0             ; command for trap call to display message
00002214  4E4F                    1873              TRAP        #15                 ; trap call
00002216  43F9 0000265D           1874              LEA         clPer, A1           ; Display space
0000221C  103C 000E               1875              MOVE.B      #14, D0             ; command for trap call to display message
00002220  4E4F                    1876              TRAP        #15                 ; trap call
00002222  6000 0420               1877              BRA         endSUB              ; go to the end of the subroutine
00002226                          1878  
00002226  43F9 000026FE           1879  displayA2A  LEA         dispA2, A1          ; Display space
0000222C  103C 000E               1880              MOVE.B      #14, D0             ; command for trap call to display message
00002230  4E4F                    1881              TRAP        #15                 ; trap call
00002232  43F9 0000265D           1882              LEA         clPer, A1           ; Display space
00002238  103C 000E               1883              MOVE.B      #14, D0             ; command for trap call to display message
0000223C  4E4F                    1884              TRAP        #15                 ; trap call
0000223E  6000 0404               1885              BRA         endSUB              ; go to the end of the subroutine
00002242                          1886  
00002242  43F9 00002701           1887  displayA3A  LEA         dispA3, A1          ; Display space
00002248  103C 000E               1888              MOVE.B      #14, D0             ; command for trap call to display message
0000224C  4E4F                    1889              TRAP        #15                 ; trap call
0000224E  43F9 0000265D           1890              LEA         clPer, A1           ; Display space
00002254  103C 000E               1891              MOVE.B      #14, D0             ; command for trap call to display message
00002258  4E4F                    1892              TRAP        #15                 ; trap call
0000225A  6000 03E8               1893              BRA         endSUB              ; go to the end of the subroutine
0000225E                          1894  
0000225E  43F9 00002704           1895  displayA4A  LEA         dispA4, A1          ; Display space
00002264  103C 000E               1896              MOVE.B      #14, D0             ; command for trap call to display message
00002268  4E4F                    1897              TRAP        #15                 ; trap call
0000226A  43F9 0000265D           1898              LEA         clPer, A1           ; Display space
00002270  103C 000E               1899              MOVE.B      #14, D0             ; command for trap call to display message
00002274  4E4F                    1900              TRAP        #15                 ; trap call
00002276  6000 03CC               1901              BRA         endSUB              ; go to the end of the subroutine
0000227A                          1902  
0000227A  43F9 00002707           1903  displayA5A  LEA         dispA5, A1          ; Display space
00002280  103C 000E               1904              MOVE.B      #14, D0             ; command for trap call to display message
00002284  4E4F                    1905              TRAP        #15                 ; trap call
00002286  43F9 0000265D           1906              LEA         clPer, A1           ; Display space
0000228C  103C 000E               1907              MOVE.B      #14, D0             ; command for trap call to display message
00002290  4E4F                    1908              TRAP        #15                 ; trap call
00002292  6000 03B0               1909              BRA         endSUB              ; go to the end of the subroutine
00002296                          1910  
00002296  43F9 0000270A           1911  displayA6A  LEA         dispA6, A1          ; Display space
0000229C  103C 000E               1912              MOVE.B      #14, D0             ; command for trap call to display message
000022A0  4E4F                    1913              TRAP        #15                 ; trap call
000022A2  43F9 0000265D           1914              LEA         clPer, A1           ; Display space
000022A8  103C 000E               1915              MOVE.B      #14, D0             ; command for trap call to display message
000022AC  4E4F                    1916              TRAP        #15                 ; trap call
000022AE  6000 0394               1917              BRA         endSUB              ; go to the end of the subroutine
000022B2                          1918  
000022B2  43F9 0000270D           1919  displayA7A  LEA         dispA7, A1          ; Display space
000022B8  103C 000E               1920              MOVE.B      #14, D0             ; command for trap call to display message
000022BC  4E4F                    1921              TRAP        #15                 ; trap call
000022BE  43F9 0000265D           1922              LEA         clPer, A1           ; Display space
000022C4  103C 000E               1923              MOVE.B      #14, D0             ; command for trap call to display message
000022C8  4E4F                    1924              TRAP        #15                 ; trap call
000022CA  6000 0378               1925              BRA         endSUB              ; go to the end of the subroutine
000022CE                          1926              
000022CE                          1927  ***********************************************************************************************************
000022CE                          1928  * Addr Postincrement
000022CE                          1929              
000022CE  43F9 0000265B           1930  pAddrPost   LEA         opPer, A1           ; Display space
000022D4  103C 000E               1931              MOVE.B      #14, D0             ; command for trap call to display message
000022D8  4E4F                    1932              TRAP        #15                 ; trap call
000022DA                          1933              
000022DA  B63C 0000               1934              CMP.B   #zero,D3
000022DE  6700 003A               1935              BEQ     displayA0P
000022E2  B63C 0001               1936              CMP.B   #one,D3
000022E6  6700 005A               1937              BEQ     displayA1P
000022EA  B63C 0002               1938              CMP.B   #two,D3
000022EE  6700 007A               1939              BEQ     displayA2P
000022F2  B63C 0003               1940              CMP.B   #three,D3
000022F6  6700 009A               1941              BEQ     displayA3P
000022FA  B63C 0004               1942              CMP.B   #four,D3
000022FE  6700 00BA               1943              BEQ     displayA4P
00002302  B63C 0005               1944              CMP.B   #five,D3
00002306  6700 00DA               1945              BEQ     displayA5P
0000230A  B63C 0006               1946              CMP.B   #six,D3
0000230E  6700 00FA               1947              BEQ     displayA6P
00002312  B63C 0007               1948              CMP.B   #seven,D3
00002316  6700 011A               1949              BEQ     displayA7P
0000231A                          1950              
0000231A  43F9 000026F8           1951  displayA0P  LEA         dispA0, A1          ; Display space
00002320  103C 000E               1952              MOVE.B      #14, D0             ; command for trap call to display message
00002324  4E4F                    1953              TRAP        #15                 ; trap call
00002326  43F9 0000265D           1954              LEA         clPer, A1           ; Display space
0000232C  103C 000E               1955              MOVE.B      #14, D0             ; command for trap call to display message
00002330  4E4F                    1956              TRAP        #15                 ; trap call
00002332  43F9 00002661           1957              LEA         inc, A1             ; Display space
00002338  103C 000E               1958              MOVE.B      #14, D0             ; command for trap call to display message
0000233C  4E4F                    1959              TRAP        #15                 ; trap call
0000233E  6000 0304               1960              BRA         endSUB              ; go to the end of the subroutine
00002342                          1961              
00002342  43F9 000026FB           1962  displayA1P  LEA         dispA1, A1          ; Display space
00002348  103C 000E               1963              MOVE.B      #14, D0             ; command for trap call to display message
0000234C  4E4F                    1964              TRAP        #15                 ; trap call
0000234E  43F9 0000265D           1965              LEA         clPer, A1           ; Display space
00002354  103C 000E               1966              MOVE.B      #14, D0             ; command for trap call to display message
00002358  4E4F                    1967              TRAP        #15                 ; trap call
0000235A  43F9 00002661           1968              LEA         inc, A1             ; Display space
00002360  103C 000E               1969              MOVE.B      #14, D0             ; command for trap call to display message
00002364  4E4F                    1970              TRAP        #15                 ; trap call
00002366  6000 02DC               1971              BRA         endSUB              ; go to the end of the subroutine
0000236A                          1972  
0000236A  43F9 000026FE           1973  displayA2P  LEA         dispA2, A1          ; Display space
00002370  103C 000E               1974              MOVE.B      #14, D0             ; command for trap call to display message
00002374  4E4F                    1975              TRAP        #15                 ; trap call
00002376  43F9 0000265D           1976              LEA         clPer, A1           ; Display space
0000237C  103C 000E               1977              MOVE.B      #14, D0             ; command for trap call to display message
00002380  4E4F                    1978              TRAP        #15                 ; trap call
00002382  43F9 00002661           1979              LEA         inc, A1             ; Display space
00002388  103C 000E               1980              MOVE.B      #14, D0             ; command for trap call to display message
0000238C  4E4F                    1981              TRAP        #15                 ; trap call
0000238E  6000 02B4               1982              BRA         endSUB              ; go to the end of the subroutine
00002392                          1983  
00002392  43F9 00002701           1984  displayA3P  LEA         dispA3, A1          ; Display space
00002398  103C 000E               1985              MOVE.B      #14, D0             ; command for trap call to display message
0000239C  4E4F                    1986              TRAP        #15                 ; trap call
0000239E  43F9 0000265D           1987              LEA         clPer, A1           ; Display space
000023A4  103C 000E               1988              MOVE.B      #14, D0             ; command for trap call to display message
000023A8  4E4F                    1989              TRAP        #15                 ; trap call
000023AA  43F9 00002661           1990              LEA         inc, A1             ; Display space
000023B0  103C 000E               1991              MOVE.B      #14, D0             ; command for trap call to display message
000023B4  4E4F                    1992              TRAP        #15                 ; trap call
000023B6  6000 028C               1993              BRA         endSUB              ; go to the end of the subroutine
000023BA                          1994  
000023BA  43F9 00002704           1995  displayA4P  LEA         dispA4, A1          ; Display space
000023C0  103C 000E               1996              MOVE.B      #14, D0             ; command for trap call to display message
000023C4  4E4F                    1997              TRAP        #15                 ; trap call
000023C6  43F9 0000265D           1998              LEA         clPer, A1           ; Display space
000023CC  103C 000E               1999              MOVE.B      #14, D0             ; command for trap call to display message
000023D0  4E4F                    2000              TRAP        #15                 ; trap call
000023D2  43F9 00002661           2001              LEA         inc, A1             ; Display space
000023D8  103C 000E               2002              MOVE.B      #14, D0             ; command for trap call to display message
000023DC  4E4F                    2003              TRAP        #15                 ; trap call
000023DE  6000 0264               2004              BRA         endSUB              ; go to the end of the subroutine
000023E2                          2005  
000023E2  43F9 00002707           2006  displayA5P  LEA         dispA5, A1          ; Display space
000023E8  103C 000E               2007              MOVE.B      #14, D0             ; command for trap call to display message
000023EC  4E4F                    2008              TRAP        #15                 ; trap call
000023EE  43F9 0000265D           2009              LEA         clPer, A1           ; Display space
000023F4  103C 000E               2010              MOVE.B      #14, D0             ; command for trap call to display message
000023F8  4E4F                    2011              TRAP        #15                 ; trap call
000023FA  43F9 00002661           2012              LEA         inc, A1             ; Display space
00002400  103C 000E               2013              MOVE.B      #14, D0             ; command for trap call to display message
00002404  4E4F                    2014              TRAP        #15                 ; trap call
00002406  6000 023C               2015              BRA         endSUB              ; go to the end of the subroutine
0000240A                          2016  
0000240A  43F9 0000270A           2017  displayA6P  LEA         dispA6, A1          ; Display space
00002410  103C 000E               2018              MOVE.B      #14, D0             ; command for trap call to display message
00002414  4E4F                    2019              TRAP        #15                 ; trap call
00002416  43F9 0000265D           2020              LEA         clPer, A1           ; Display space
0000241C  103C 000E               2021              MOVE.B      #14, D0             ; command for trap call to display message
00002420  4E4F                    2022              TRAP        #15                 ; trap call
00002422  43F9 00002661           2023              LEA         inc, A1             ; Display space
00002428  103C 000E               2024              MOVE.B      #14, D0             ; command for trap call to display message
0000242C  4E4F                    2025              TRAP        #15                 ; trap call
0000242E  6000 0214               2026              BRA         endSUB              ; go to the end of the subroutine
00002432                          2027  
00002432  43F9 0000270D           2028  displayA7P  LEA         dispA7, A1          ; Display space
00002438  103C 000E               2029              MOVE.B      #14, D0             ; command for trap call to display message
0000243C  4E4F                    2030              TRAP        #15                 ; trap call
0000243E  43F9 0000265D           2031              LEA         clPer, A1           ; Display space
00002444  103C 000E               2032              MOVE.B      #14, D0             ; command for trap call to display message
00002448  4E4F                    2033              TRAP        #15                 ; trap call
0000244A  43F9 00002661           2034              LEA         inc, A1             ; Display space
00002450  103C 000E               2035              MOVE.B      #14, D0             ; command for trap call to display message
00002454  4E4F                    2036              TRAP        #15                 ; trap call
00002456  6000 01EC               2037              BRA         endSUB              ; go to the end of the subroutine
0000245A                          2038  
0000245A                          2039  ***********************************************************************************************************
0000245A                          2040  * Addr Postdecrement
0000245A                          2041  
0000245A  43F9 0000265F           2042  pAddrDec    LEA         dec, A1             ; Display space
00002460  103C 000E               2043              MOVE.B      #14, D0             ; command for trap call to display message
00002464  4E4F                    2044              TRAP        #15                 ; trap call
00002466                          2045              
00002466  43F9 0000265B           2046              LEA         opPer, A1           ; Display space
0000246C  103C 000E               2047              MOVE.B      #14, D0             ; command for trap call to display message
00002470  4E4F                    2048              TRAP        #15                 ; trap call
00002472                          2049              
00002472  B63C 0000               2050              CMP.B   #zero,D3
00002476  6700 003A               2051              BEQ     displayA0D
0000247A  B63C 0001               2052              CMP.B   #one,D3
0000247E  6700 004E               2053              BEQ     displayA1D
00002482  B63C 0002               2054              CMP.B   #two,D3
00002486  6700 0062               2055              BEQ     displayA2D
0000248A  B63C 0003               2056              CMP.B   #three,D3
0000248E  6700 0076               2057              BEQ     displayA3D
00002492  B63C 0004               2058              CMP.B   #four,D3
00002496  6700 008A               2059              BEQ     displayA4D
0000249A  B63C 0005               2060              CMP.B   #five,D3
0000249E  6700 009E               2061              BEQ     displayA5D
000024A2  B63C 0006               2062              CMP.B   #six,D3
000024A6  6700 00B2               2063              BEQ     displayA6D
000024AA  B63C 0007               2064              CMP.B   #seven,D3
000024AE  6700 00C6               2065              BEQ     displayA7D
000024B2                          2066              
000024B2  43F9 000026F8           2067  displayA0D  LEA         dispA0, A1          ; Display space
000024B8  103C 000E               2068              MOVE.B      #14, D0             ; command for trap call to display message
000024BC  4E4F                    2069              TRAP        #15                 ; trap call
000024BE  43F9 0000265D           2070              LEA         clPer, A1           ; Display space
000024C4  103C 000E               2071              MOVE.B      #14, D0             ; command for trap call to display message
000024C8  4E4F                    2072              TRAP        #15                 ; trap call
000024CA  6000 0178               2073              BRA         endSUB              ; go to the end of the subroutine
000024CE                          2074              
000024CE  43F9 000026FB           2075  displayA1D  LEA         dispA1, A1          ; Display space
000024D4  103C 000E               2076              MOVE.B      #14, D0             ; command for trap call to display message
000024D8  4E4F                    2077              TRAP        #15                 ; trap call
000024DA  43F9 0000265D           2078              LEA         clPer, A1           ; Display space
000024E0  103C 000E               2079              MOVE.B      #14, D0             ; command for trap call to display message
000024E4  4E4F                    2080              TRAP        #15                 ; trap call
000024E6  6000 015C               2081              BRA         endSUB              ; go to the end of the subroutine
000024EA                          2082  
000024EA  43F9 000026FE           2083  displayA2D  LEA         dispA2, A1          ; Display space
000024F0  103C 000E               2084              MOVE.B      #14, D0             ; command for trap call to display message
000024F4  4E4F                    2085              TRAP        #15                 ; trap call
000024F6  43F9 0000265D           2086              LEA         clPer, A1           ; Display space
000024FC  103C 000E               2087              MOVE.B      #14, D0             ; command for trap call to display message
00002500  4E4F                    2088              TRAP        #15                 ; trap call
00002502  6000 0140               2089              BRA         endSUB              ; go to the end of the subroutine
00002506                          2090  
00002506  43F9 00002701           2091  displayA3D  LEA         dispA3, A1          ; Display space
0000250C  103C 000E               2092              MOVE.B      #14, D0             ; command for trap call to display message
00002510  4E4F                    2093              TRAP        #15                 ; trap call
00002512  43F9 0000265D           2094              LEA         clPer, A1           ; Display space
00002518  103C 000E               2095              MOVE.B      #14, D0             ; command for trap call to display message
0000251C  4E4F                    2096              TRAP        #15                 ; trap call
0000251E  6000 0124               2097              BRA         endSUB              ; go to the end of the subroutine
00002522                          2098  
00002522  43F9 00002704           2099  displayA4D  LEA         dispA4, A1          ; Display space
00002528  103C 000E               2100              MOVE.B      #14, D0             ; command for trap call to display message
0000252C  4E4F                    2101              TRAP        #15                 ; trap call
0000252E  43F9 0000265D           2102              LEA         clPer, A1           ; Display space
00002534  103C 000E               2103              MOVE.B      #14, D0             ; command for trap call to display message
00002538  4E4F                    2104              TRAP        #15                 ; trap call
0000253A  6000 0108               2105              BRA         endSUB              ; go to the end of the subroutine
0000253E                          2106  
0000253E  43F9 00002707           2107  displayA5D  LEA         dispA5, A1          ; Display space
00002544  103C 000E               2108              MOVE.B      #14, D0             ; command for trap call to display message
00002548  4E4F                    2109              TRAP        #15                 ; trap call
0000254A  43F9 0000265D           2110              LEA         clPer, A1           ; Display space
00002550  103C 000E               2111              MOVE.B      #14, D0             ; command for trap call to display message
00002554  4E4F                    2112              TRAP        #15                 ; trap call
00002556  6000 00EC               2113              BRA         endSUB              ; go to the end of the subroutine
0000255A                          2114  
0000255A  43F9 0000270A           2115  displayA6D  LEA         dispA6, A1          ; Display space
00002560  103C 000E               2116              MOVE.B      #14, D0             ; command for trap call to display message
00002564  4E4F                    2117              TRAP        #15                 ; trap call
00002566  43F9 0000265D           2118              LEA         clPer, A1           ; Display space
0000256C  103C 000E               2119              MOVE.B      #14, D0             ; command for trap call to display message
00002570  4E4F                    2120              TRAP        #15                 ; trap call
00002572  6000 00D0               2121              BRA         endSUB              ; go to the end of the subroutine
00002576                          2122  
00002576  43F9 0000270D           2123  displayA7D  LEA         dispA7, A1          ; Display space
0000257C  103C 000E               2124              MOVE.B      #14, D0             ; command for trap call to display message
00002580  4E4F                    2125              TRAP        #15                 ; trap call
00002582  43F9 0000265D           2126              LEA         clPer, A1           ; Display space
00002588  103C 000E               2127              MOVE.B      #14, D0             ; command for trap call to display message
0000258C  4E4F                    2128              TRAP        #15                 ; trap call
0000258E  6000 00B4               2129              BRA         endSUB              ; go to the end of the subroutine
00002592                          2130  
00002592                          2131  
00002592                          2132  ***********************************************************************************************************
00002592                          2133  * Absolute Address
00002592  B63C 0000               2134  pHex        CMP.B       #zero, D3
00002596  6700 0012               2135              BEQ         AbsShort
0000259A  B63C 0001               2136              CMP.B       #one, D3
0000259E  6700 003C               2137              BEQ         AbsLong
000025A2  B63C 0004               2138              CMP.B       #four, D3
000025A6  6700 0066               2139              BEQ         DispImm
000025AA                          2140              
000025AA  43F9 0000265B           2141  AbsShort    LEA         opPer, A1           ; Display space
000025B0  103C 000E               2142              MOVE.B      #14, D0             ; command for trap call to display message
000025B4  4E4F                    2143              TRAP        #15                 ; trap call
000025B6                          2144              
000025B6  43F9 00002657           2145              LEA         dispHex, A1         ; Display space
000025BC  103C 000E               2146              MOVE.B      #14, D0             ; command for trap call to display message
000025C0  4E4F                    2147              TRAP        #15                 ; trap call
000025C2                          2148              
000025C2  4241                    2149              CLR         D1
000025C4  3218                    2150              MOVE.W      (A0)+, D1
000025C6                          2151              
000025C6  103C 0003               2152              MOVE.B      #3, D0
000025CA  4E4F                    2153              TRAP        #15
000025CC                          2154              
000025CC  43F9 0000265D           2155              LEA         clPer, A1           ; Display space
000025D2  103C 000E               2156              MOVE.B      #14, D0             ; command for trap call to display message
000025D6  4E4F                    2157              TRAP        #15                 ; trap call
000025D8                          2158              
000025D8  6000 006A               2159              BRA         endSub
000025DC                          2160              
000025DC  43F9 0000265B           2161  AbsLong     LEA         opPer, A1           ; Display space
000025E2  103C 000E               2162              MOVE.B      #14, D0             ; command for trap call to display message
000025E6  4E4F                    2163              TRAP        #15                 ; trap call
000025E8                          2164              
000025E8  43F9 00002657           2165              LEA         dispHex, A1         ; Display space
000025EE  103C 000E               2166              MOVE.B      #14, D0             ; command for trap call to display message
000025F2  4E4F                    2167              TRAP        #15                 ; trap call
000025F4                          2168              
000025F4  4241                    2169              CLR         D1
000025F6  2218                    2170              MOVE.L      (A0)+, D1
000025F8                          2171              
000025F8  103C 0003               2172              MOVE.B      #3, D0
000025FC  4E4F                    2173              TRAP        #15
000025FE                          2174              
000025FE  43F9 0000265D           2175              LEA         clPer, A1           ; Display space
00002604  103C 000E               2176              MOVE.B      #14, D0             ; command for trap call to display message
00002608  4E4F                    2177              TRAP        #15                 ; trap call
0000260A                          2178              
0000260A  6000 0038               2179              BRA         endSub
0000260E                          2180  
0000260E  43F9 00002655           2181  DispImm     LEA         hashTag, A1         ; Display space
00002614  103C 000E               2182              MOVE.B      #14, D0             ; command for trap call to display message
00002618  4E4F                    2183              TRAP        #15                 ; trap call
0000261A                          2184              
0000261A  4241                    2185              CLR         D1
0000261C  3218                    2186              MOVE.W      (A0)+, D1
0000261E                          2187  
0000261E  43F9 00002657           2188              LEA         dispHex, A1         ; Display space
00002624  103C 000E               2189              MOVE.B      #14, D0             ; command for trap call to display message
00002628  4E4F                    2190              TRAP        #15                 ; trap call
0000262A                          2191              
0000262A  103C 0003               2192              MOVE.B      #3, D0
0000262E  4E4F                    2193              TRAP        #15
00002630                          2194  
00002630  6000 0012               2195              BRA         endSub
00002634                          2196  
00002634                          2197  invalid
00002634                          2198  
00002634  43F9 0000272A           2199              LEA         inv, A1         ; Display space
0000263A  103C 000E               2200              MOVE.B      #14, D0             ; command for trap call to display message
0000263E  4E4F                    2201              TRAP        #15                 ; trap call
00002640                          2202              
00002640  6000 0008               2203              BRA         endProg
00002644                          2204  
00002644                          2205  endSUB
00002644                          2206          
00002644  4CDF 7EFF               2207          MOVEM.L  (SP)+, D0-D7/A1-A6
00002648  4E75                    2208          RTS
0000264A                          2209  
0000264A                          2210  ***********************************************************************************************************
0000264A                          2211  ***********************************************************************************************************
0000264A                          2212  ***********************************************************************************************************
0000264A                          2213  
0000264A                          2214  printInvalid
0000264A                          2215  endPROG    
0000264A                          2216  
0000264A  FFFF FFFF               2217      SIMHALT                             ; halt simulator
0000264E                          2218  
0000264E= 20 0D 0A 00             2219  newLine     DC.B    ' ', CR, LF, 0
00002652= 20 20 00                2220  space       DC.B    '  ', 0
00002655                          2221  
00002655= 23 00                   2222  hashTag     DC.B    '#', 0
00002657= 24 00                   2223  dispHex     DC.B    '$', 0
00002659= 2C 00                   2224  comma       DC.B    ',', 0
0000265B                          2225  
0000265B= 28 00                   2226  opPer       DC.B    '(', 0
0000265D= 29 00                   2227  clPer       DC.B    ')', 0
0000265F= 2D 00                   2228  dec         DC.B    '-', 0
00002661= 2B 00                   2229  inc         DC.B    '+', 0
00002663= 2F 00                   2230  slash       DC.B    '/', 0
00002665                          2231  
00002665= 28 53 50 29 00          2232  stack       DC.B    '(SP)', 0
0000266A                          2233  
0000266A= 4F 52 49 00             2234  ORImatch    DC.B    'ORI', 0
0000266E= 43 4D 50 49 00          2235  CMPImatch   DC.B    'CMPI', 0
00002673= 42 43 4C 52 00          2236  BCLRmatch   DC.B    'BCLR', 0
00002678= 4D 4F 56 45 00          2237  MOVEmatch   DC.B    'MOVE', 0
0000267D= 4D 4F 56 45 41 00       2238  MOVEAmatch  DC.B    'MOVEA', 0
00002683= 4E 45 47 00             2239  NEGmatch    DC.B    'NEG', 0
00002687= 52 54 53 00             2240  RTSmatch    DC.B    'RTS', 0
0000268B= 4A 53 52 00             2241  JSRmatch    DC.B    'JSR', 0
0000268F= 4D 4F 56 45 4D 00       2242  MOVEMmatch  DC.B    'MOVEM', 0
00002695= 4C 45 41 00             2243  LEAmatch    DC.B    'LEA', 0
00002699= 53 55 42 51 00          2244  SUBQmatch   DC.B    'SUBQ', 0
0000269E= 42 52 41 00             2245  BRAmatch    DC.B    'BRA', 0
000026A2= 42 43 53 00             2246  BCSmatch    DC.B    'BCS', 0
000026A6= 42 56 43 00             2247  BVCmatch    DC.B    'BVC', 0
000026AA= 42 47 45 00             2248  BGEmatch    DC.B    'BGE', 0
000026AE= 42 4C 54 00             2249  BLTmatch    DC.B    'BLT', 0
000026B2= 44 49 56 53 00          2250  DIVSmatch   DC.B    'DIVS', 0
000026B7= 4F 52 00                2251  ORmatch     DC.B    'OR', 0
000026BA= 53 55 42 00             2252  SUBmatch    DC.B    'SUB', 0
000026BE= 45 4F 52 00             2253  EORmatch    DC.B    'EOR', 0
000026C2= 43 4D 50 00             2254  CMPmatch    DC.B    'CMP', 0
000026C6= 4D 55 4C 53 00          2255  MULSmatch   DC.B    'MULS', 0
000026CB= 41 44 44 00             2256  ADDmatch    DC.B    'ADD', 0
000026CF= 41 44 44 41 00          2257  ADDAmatch   DC.B    'ADDA', 0
000026D4= 4C 53 52 00             2258  LSRmatch    DC.B    'LSR', 0
000026D8= 4C 53 4C 00             2259  LSLmatch    DC.B    'LSL', 0
000026DC= 41 53 52 00             2260  ASRmatch    DC.B    'ASR', 0
000026E0= 41 53 4C 00             2261  ASLmatch    DC.B    'ASL', 0
000026E4= 52 4F 52 00             2262  RORmatch    DC.B    'ROR', 0
000026E8= 52 4F 4C 00             2263  ROLmatch    DC.B    'ROL', 0
000026EC                          2264   
000026EC= 2E 42 00                2265  dispByte    DC.B    '.B', 0
000026EF= 2E 57 00                2266  dispWord    DC.B    '.W', 0
000026F2= 2E 4C 00                2267  dispLong    DC.B    '.L', 0
000026F5                          2268  
000026F5= 41 6E 00                2269  dispAn      DC.B    'An', 0
000026F8= 41 30 00                2270  dispA0      DC.B    'A0', 0
000026FB= 41 31 00                2271  dispA1      DC.B    'A1', 0
000026FE= 41 32 00                2272  dispA2      DC.B    'A2', 0
00002701= 41 33 00                2273  dispA3      DC.B    'A3', 0
00002704= 41 34 00                2274  dispA4      DC.B    'A4', 0
00002707= 41 35 00                2275  dispA5      DC.B    'A5', 0
0000270A= 41 36 00                2276  dispA6      DC.B    'A6', 0
0000270D= 41 37 00                2277  dispA7      DC.B    'A7', 0
00002710                          2278  
00002710= 44 00                   2279  dispD       DC.B    'D',  0
00002712= 44 30 00                2280  dispD0      DC.B    'D0', 0
00002715= 44 31 00                2281  dispD1      DC.B    'D1', 0
00002718= 44 32 00                2282  dispD2      DC.B    'D2', 0
0000271B= 44 33 00                2283  dispD3      DC.B    'D3', 0
0000271E= 44 34 00                2284  dispD4      DC.B    'D4', 0
00002721= 44 35 00                2285  dispD5      DC.B    'D5', 0
00002724= 44 36 00                2286  dispD6      DC.B    'D6', 0
00002727= 44 37 00                2287  dispD7      DC.B    'D7', 0  
0000272A                          2288  
0000272A                          2289  
0000272A= 49 6E 76 61 6C 69 ...   2290  inv      DC.B    'Invalid', 0  
00002732                          2291             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             25DC
ABSSHORT            25AA
ADDAMATCH           26CF
ADDMATCH            26CB
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ADDR0CONT           1E3E
ADDR1CONT           1E7E
ADDR2CONT           1EBE
ADDR3CONT           1EFE
ADDR4CONT           1F3E
ADDR5CONT           1F7E
ADDR6CONT           1FBE
ADDRREG0            1E1E
ADDRREG1            1E4E
ADDRREG2            1E8E
ADDRREG3            1ECE
ADDRREG4            1F0E
ADDRREG5            1F4E
ADDRREG6            1F8E
ADDRREG7            1FCE
ASLMATCH            26E0
ASRMATCH            26DC
BCLRMATCH           2673
BCSMATCH            26A2
BGEMATCH            26AA
BLTMATCH            26AE
BRAEIGHT            1118
BRAELEVEN           111C
BRAFIVE             10E8
BRAFOUR             10CC
BRAFOURTEEN         1120
BRAMATCH            269E
BRANINE             1118
BRAONE              10C0
BRASIX              10EC
BRATHIRTEEN         1120
BRATHREE            10C8
BRATWELVE           111C
BRATWO              10C4
BRAZERO             1090
BVCMATCH            26A6
CHECKDR             1AFE
CLPER               265D
CMPIMATCH           266E
CMPMATCH            26C2
COMMA               2659
CR                  D
DATAREG0            1BC8
DATAREG1            1BF8
DATAREG2            1C38
DATAREG3            1C78
DATAREG4            1CB8
DATAREG5            1CF8
DATAREG6            1D38
DATAREG7            1D78
DEC                 265F
DISPA0              26F8
DISPA1              26FB
DISPA2              26FE
DISPA3              2701
DISPA4              2704
DISPA5              2707
DISPA6              270A
DISPA7              270D
DISPAN              26F5
DISPBYTE            26EC
DISPD               2710
DISPD0              2712
DISPD1              2715
DISPD2              2718
DISPD3              271B
DISPD4              271E
DISPD5              2721
DISPD6              2724
DISPD7              2727
DISPHEX             2657
DISPIMM             260E
DISPLAYA0           2122
DISPLAYA0A          21EE
DISPLAYA0D          24B2
DISPLAYA0P          231A
DISPLAYA1           2132
DISPLAYA1A          220A
DISPLAYA1D          24CE
DISPLAYA1P          2342
DISPLAYA2           2142
DISPLAYA2A          2226
DISPLAYA2D          24EA
DISPLAYA2P          236A
DISPLAYA3           2152
DISPLAYA3A          2242
DISPLAYA3D          2506
DISPLAYA3P          2392
DISPLAYA4           2162
DISPLAYA4A          225E
DISPLAYA4D          2522
DISPLAYA4P          23BA
DISPLAYA5           2172
DISPLAYA5A          227A
DISPLAYA5D          253E
DISPLAYA5P          23E2
DISPLAYA6           2182
DISPLAYA6A          2296
DISPLAYA6D          255A
DISPLAYA6P          240A
DISPLAYA7           2192
DISPLAYA7A          22B2
DISPLAYA7D          2576
DISPLAYA7P          2432
DISPLAYD0           2062
DISPLAYD1           2072
DISPLAYD2           2082
DISPLAYD3           2092
DISPLAYD4           20A2
DISPLAYD5           20B2
DISPLAYD6           20C2
DISPLAYD7           20D2
DISPLONG            26F2
DISPWORD            26EF
DIVSMATCH           26B2
EIGHT               8
ELEVEN              B
ENDMOVE             1FDE
ENDMOVE1            1FE4
ENDPROG             264A
ENDSUB              2644
EORMATCH            26BE
FIFTEEN             F
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             2655
INC                 2661
INV                 272A
INVALID             2634
JSRMATCH            268B
LEAMATCH            2695
LF                  A
LOOP                100C
LSLMATCH            26D8
LSRMATCH            26D4
MASK0               0
MASK1               1
MASK2               2
MASK3               4
MASK4               8
MASK5               10
MASK6               20
MASK7               40
MASK8               80
MASKA               5
MASKB               A
MASKC               14
MASKD               28
MASKE               50
MASKF               A0
MOVEAMATCH          267D
MOVEMATCH           2678
MOVEMBRA            1AB2
MOVEML              1AE2
MOVEMMATCH          268F
MOVEMW              1AC6
MULSMATCH           26C6
NEGMATCH            2683
NEWLINE             264E
NINE                9
ONE                 1
OPASL               1A6A
OPASR               1A76
OPBCLR              142C
OPBCS               1A22
OPBGE               1A3A
OPBLT               1A46
OPBRA               1A0A
OPBVC               1A2E
OPCMPI              12BC
OPCMPIB             12DE
OPCMPIL             13BE
OPCMPIW             1350
OPDYNBCLR           1490
OPJSR               187C
OPLEA               197E
OPLSL               1A82
OPLSR               1A8E
OPMOVEAL            1616
OPMOVEAW            170C
OPMOVEB             14FE
OPMOVEL             1582
OPMOVEM             18F4
OPMOVEMLEA          18D8
OPMOVEW             167E
OPMULS              1A5E
OPNEG               1774
OPNEGB              17A2
OPNEGL              17E2
OPNEGW              1822
OPORI               1154
OPORIB              1182
OPORIL              124E
OPORIW              11E8
OPPER               265B
OPROL               1A9A
OPROR               1AA6
OPRTS               18BC
OPRTSJSR            1862
OPSUB               1A52
OPSUBQ              19FE
ORIMATCH            266A
ORMATCH             26B7
PADDRDEC            245A
PADDRDIR            21A2
PADDRPOST           22CE
PADDRREG            20E2
PDATAREG            2022
PHEX                2592
PRINTEA             1FEA
PRINTINVALID        264A
PRINTMEM            1D88
PRINTMEMNOW         1D8C
PRINTREGMEM         1B3C
PRINTSTACK          1B14
REG0CONT            1BE8
REG1CONT            1C28
REG2CONT            1C68
REG3CONT            1CA8
REG4CONT            1CE8
REG5CONT            1D28
REG6CONT            1D68
ROLMATCH            26E8
RORMATCH            26E4
RTSMATCH            2687
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SKIPPRINTEA         196E
SLASH               2663
SPACE               2652
STACK               2665
START               1000
SUBMATCH            26BA
SUBQMATCH           2699
TEST_END            3100
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
