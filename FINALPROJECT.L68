00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 12/6/2014 10:52:07 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =00003100                 11  test_end    EQU     $00003100   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000  =0000000F                 27  fifteen     EQU     $0F         ; defined hex value 15
00000000                            28  
00000000  =00000000                 29  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 30  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 31  s1L         EQU     %0010       ; long size 1
00000000                            32              
00000000  =00000000                 33  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 34  s2L         EQU     %0001       ; long size 2
00000000                            35  
00000000  =00000001                 36  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 37  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 38  s3L         EQU     %0010       ; long size 3
00000000                            39  
00000000  =00000000                 40  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 41  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 42  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 43  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 44  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 45  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            46  
00000000                            47              
00000000                            48  
00000000  =00000000                 49  mask0       EQU     %00000000
00000000  =00000001                 50  mask1       EQU     %00000001
00000000  =00000002                 51  mask2       EQU     %00000010
00000000  =00000004                 52  mask3       EQU     %00000100
00000000  =00000008                 53  mask4       EQU     %00001000
00000000  =00000010                 54  mask5       EQU     %00010000
00000000  =00000020                 55  mask6       EQU     %00100000
00000000  =00000040                 56  mask7       EQU     %01000000
00000000  =00000080                 57  mask8       EQU     %10000000
00000000                            58  
00000000  =00000005                 59  maskA       EQU     %00000101
00000000  =0000000A                 60  maskB       EQU     %00001010
00000000  =00000014                 61  maskC       EQU     %00010100
00000000  =00000028                 62  maskD       EQU     %00101000
00000000  =00000050                 63  maskE       EQU     %01010000
00000000  =000000A0                 64  maskF       EQU     %10100000
00000000                            65  
00000000                            66  
00000000  =000000F0                 67  firstNib    EQU     $F0
00000000  =0000000F                 68  secNib      EQU     $0F
00000000                            69               
00001000                            70              ORG    $1000
00001000                            71  START:                                  ; first instruction of program
00001000                            72        
00001000  207C 00003000             73          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00003100             74          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            75            
0000100C  4241                      76  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      77          CLR         D2                  ; clear out D2
00001010  B1CA                      78          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 161E                 79          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      80          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      81          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      82          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            83          
0000101C  B43C 0000                 84          CMP.B       #zero, D2           ; compare with 0
00001020  6700 006E                 85          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 86          CMP.B       #one, D2            ; compare with 1
00001028  6700 0096                 87          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 88          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0092                 89          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 90          CMP.B       #three, D2          ; compare with 3
00001038  6700 008E                 91          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 92          CMP.B       #four, D2           ; compare with 4
00001040  6700 008A                 93          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 94          CMP.B       #five, D2           ; compare with 5
00001048  6700 009E                 95          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 96          CMP.B       #six, D2            ; compare with 6
00001050  6700 009A                 97          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 98          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00BE                 99          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                100          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00B6                101          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                102          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00B2                103          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                104          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00AA                105          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                106          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 00A6                107          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                108          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 009E                109          BEQ         braFourteen         ; branch out to fourteen method
00001084  B43C 000F                110          CMP.B       #fifteen,D2
00001088  6700 15A8                111          BEQ         endProg
0000108C  6000 FF7E                112          BRA         loop
00001090                           113  
00001090  4242                     114  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001092  1401                     115          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001094  C43C 000F                116          AND.B       #secNib, D2             ; set first nibble to 0
00001098                           117   
00001098  B43C 0000                118          CMP.B       #zero, D2           ; compare second nibble to 0
0000109C  6700 00B6                119          BEQ         opORI               ; branch to ORI method
000010A0  B43C 000C                120          CMP.B       #twelve, D2         ; compare second nibble to 12
000010A4  6700 0202                121          BEQ         opCMPI              ; branch to CMPI method
000010A8  B43C 0008                122          CMP.B       #eight,D2           ; Test for static BCLR
000010AC  6700 036C                123          BEQ         opBCLR
000010B0  C47C 0001                124          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010B4  B43C 0001                125          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010B8  6700 03C4                126          BEQ         opDynBCLR
000010BC  6000 1574                127          BRA         printInvalid
000010C0                           128          
000010C0                           129          
000010C0  6000 042A                130  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010C4                           131  
000010C4  6000 04AA                132  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010C8                           133  
000010C8                           134  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010C8                           135  
000010C8  6000 059C                136          BRA         opMOVEW
000010CC                           137  
000010CC  4242                     138  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010CE  1401                     139          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010D0  C43C 000F                140          AND.B       #secNib, D2             ; set first nibble to 0
000010D4                           141   
000010D4  B43C 0004                142          CMP.B       #four, D2           ; compare second nibble to 4
000010D8  6700 0682                143          BEQ         opNEG               ; branch to NEG method
000010DC  B43C 000E                144          CMP.B       #fourteen, D2       ; compare second nibble to E
000010E0  6700 0768                145          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010E4  6000 07DA                146          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010E8                           147  
000010E8  6000 08FC                148  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010EC                           149  
000010EC  4242                     150  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010EE  1401                     151          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010F0  C438 000F                152          AND.B       $0F, D2             ; set first nibble to 0
000010F4                           153   
000010F4  B43C 0000                154          CMP.B       #zero, D2           ; compare second nibble to 0
000010F8  6700 08F8                155          BEQ         opBRA               ; branch to BRA method
000010FC  B43C 0005                156          CMP.B       #five, D2           ; compare second nibble to 5
00001100  6700 0908                157          BEQ         opBCS               ; branch to BCS method
00001104  B43C 0008                158          CMP.B       #eight, D2          ; compare second nibble to 8
00001108  6700 090C                159          BEQ         opBVC               ; branch to BCS method
0000110C  B43C 000C                160          CMP.B       #twelve, D2         ; compare second nibble to 12
00001110  6700 0910                161          BEQ         opBGE               ; branch to BGE method
00001114  6000 0918                162          BRA         opBLT               ; otherwise, branch to BLT method
00001118                           163  
00001118                           164  braEight    ; there are two opCodes available DIVS, or OR
00001118                           165  
00001118  6000 0920                166  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000111C                           167  
0000111C                           168  braEleven   ; there are two opCodes available EOR, or CMP
0000111C                           169  
0000111C  6000 0928                170  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
00001120                           171    
00001120                           172  braThirteen ; there are two opCodes available ADD, or ADDA
00001120                           173  
00001120  4242                     174  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
00001122  1401                     175              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001124  C438 000F                176              AND.B       $0F, D2             ; set first nibble to 0
00001128                           177   
00001128  B43C 0000                178              CMP.B       #zero, D2           ; compare second nibble to 0
0000112C  6700 0930                179              BEQ         opASR               ; branch to ASR method
00001130  B43C 0001                180              CMP.B       #one, D2            ; compare second nibble to 1
00001134  6700 091C                181              BEQ         opASL               ; branch to ASL method
00001138  B43C 0002                182              CMP.B       #two, D2            ; compare second nibble to 2
0000113C  6700 0938                183              BEQ         opLSR               ; branch to LSR method
00001140  B43C 0003                184              CMP.B       #three, D2          ; compare second nibble to 3
00001144  6700 0924                185              BEQ         opLSL               ; branch to LSL method
00001148  B43C 0006                186              CMP.B       #six, D2            ; compare second nibble to 6
0000114C  6700 0940                187              BEQ         opROR               ; branch to ROR method
00001150  6000 0930                188              BRA         opROL               ; otherwise, branch to ROL method
00001154                           189  
00001154  43F9 00002652            190  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
0000115A  103C 000E                191          MOVE.B      #14, D0             ; command for trap call to display message
0000115E  4E4F                     192          TRAP        #15                 ; trap call
00001160                           193          
00001160  1218                     194          MOVE.B      (A0)+, D1
00001162  1401                     195          MOVE.B      D1,D2               ; copy data over
00001164  EC42                     196          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001166  B43C 0000                197          CMP.B       #zero,D2
0000116A  6700 0016                198          BEQ         opORIB
0000116E  B43C 0001                199          CMP.B       #one,D2
00001172  6700 0070                200          BEQ         opORIW
00001176  B43C 0002                201          CMP.B       #two,D2
0000117A  6700 00CA                202          BEQ         opORIL
0000117E                           203          
0000117E  6000 14B2                204          BRA         printInvalid
00001182                           205          
00001182  43F9 000026D4            206  opORIB  LEA         dispByte, A1        ; Display byte
00001188  103C 000E                207          MOVE.B      #14, D0             ; command for trap call to display message
0000118C  4E4F                     208          TRAP        #15                 ; trap call
0000118E                           209          
0000118E  43F9 0000263A            210          LEA         space, A1           ; Display space
00001194  103C 000E                211          MOVE.B      #14, D0             ; command for trap call to display message
00001198  4E4F                     212          TRAP        #15                 ; trap call
0000119A                           213          
0000119A  4242                     214          CLR         D2
0000119C  1401                     215          MOVE.B      D1,D2
0000119E  E642                     216          ASR         #three,D2
000011A0  C47C 0007                217          AND         #seven,D2
000011A4  4243                     218          CLR         D3        
000011A6  1601                     219          MOVE.B      D1,D3
000011A8  C67C 0007                220          AND         #seven,D3
000011AC                           221          
000011AC  4241                     222          CLR         D1
000011AE  3218                     223          MOVE.W      (A0)+, D1
000011B0                           224          
000011B0  43F9 0000263D            225          LEA         hashTag, A1           ; Display space
000011B6  103C 000E                226          MOVE.B      #14, D0             ; command for trap call to display message
000011BA  4E4F                     227          TRAP        #15                 ; trap call
000011BC                           228          
000011BC  103C 0003                229          MOVE.B      #3, D0
000011C0  4E4F                     230          TRAP        #15
000011C2                           231          
000011C2  43F9 00002641            232          LEA         comma, A1           ; Display space
000011C8  103C 000E                233          MOVE.B      #14, D0             ; command for trap call to display message
000011CC  4E4F                     234          TRAP        #15                 ; trap call
000011CE                           235          
000011CE  4EB9 00001FD2            236          JSR         printEA
000011D4                           237          
000011D4  43F9 00002636            238          LEA         newLine, A1           ; Display space
000011DA  103C 000E                239          MOVE.B      #14, D0             ; command for trap call to display message
000011DE  4E4F                     240          TRAP        #15                 ; trap call
000011E0                           241          
000011E0  6000 FE2A                242          BRA         LOOP
000011E4                           243          
000011E4                           244          
000011E4  43F9 000026D7            245  opORIW  LEA         dispWord, A1        ; Display byte
000011EA  103C 000E                246          MOVE.B      #14, D0             ; command for trap call to display message
000011EE  4E4F                     247          TRAP        #15                 ; trap call
000011F0                           248          
000011F0  43F9 0000263A            249          LEA         space, A1           ; Display space
000011F6  103C 000E                250          MOVE.B      #14, D0             ; command for trap call to display message
000011FA  4E4F                     251          TRAP        #15                 ; trap call
000011FC                           252          
000011FC  4242                     253          CLR         D2
000011FE  1401                     254          MOVE.B      D1,D2
00001200  E642                     255          ASR         #three,D2
00001202  C47C 0007                256          AND         #seven,D2
00001206  4243                     257          CLR         D3        
00001208  1601                     258          MOVE.B      D1,D3
0000120A  C67C 0007                259          AND         #seven,D3
0000120E                           260          
0000120E  4241                     261          CLR         D1
00001210  3218                     262          MOVE.W      (A0)+, D1
00001212                           263          
00001212  43F9 0000263D            264          LEA         hashTag, A1           ; Display space
00001218  103C 000E                265          MOVE.B      #14, D0             ; command for trap call to display message
0000121C  4E4F                     266          TRAP        #15                 ; trap call
0000121E                           267          
0000121E  103C 0003                268          MOVE.B      #3, D0
00001222  4E4F                     269          TRAP        #15
00001224                           270          
00001224  43F9 00002641            271          LEA         comma, A1           ; Display space
0000122A  103C 000E                272          MOVE.B      #14, D0             ; command for trap call to display message
0000122E  4E4F                     273          TRAP        #15                 ; trap call
00001230                           274          
00001230  4EB9 00001FD2            275          JSR         printEA
00001236                           276          
00001236  43F9 00002636            277          LEA         newLine, A1           ; Display space
0000123C  103C 000E                278          MOVE.B      #14, D0             ; command for trap call to display message
00001240  4E4F                     279          TRAP        #15                 ; trap call
00001242                           280          
00001242  6000 FDC8                281          BRA         LOOP
00001246                           282       
00001246  43F9 000026DA            283  opORIL  LEA         dispLong, A1        ; Display byte
0000124C  103C 000E                284          MOVE.B      #14, D0             ; command for trap call to display message
00001250  4E4F                     285          TRAP        #15                 ; trap call
00001252                           286          
00001252  43F9 0000263A            287          LEA         space, A1           ; Display space
00001258  103C 000E                288          MOVE.B      #14, D0             ; command for trap call to display message
0000125C  4E4F                     289          TRAP        #15                 ; trap call
0000125E                           290          
0000125E  4242                     291          CLR         D2
00001260  1401                     292          MOVE.B      D1,D2
00001262  E642                     293          ASR         #three,D2
00001264  C47C 0007                294          AND         #seven,D2
00001268  4243                     295          CLR         D3        
0000126A  1601                     296          MOVE.B      D1,D3
0000126C  C67C 0007                297          AND         #seven,D3
00001270                           298          
00001270  4241                     299          CLR         D1
00001272  2218                     300          MOVE.L      (A0)+, D1
00001274                           301          
00001274  43F9 0000263D            302          LEA         hashTag, A1           ; Display space
0000127A  103C 000E                303          MOVE.B      #14, D0             ; command for trap call to display message
0000127E  4E4F                     304          TRAP        #15                 ; trap call
00001280                           305          
00001280  103C 0003                306          MOVE.B      #3, D0
00001284  4E4F                     307          TRAP        #15
00001286                           308          
00001286  43F9 00002641            309          LEA         comma, A1           ; Display space
0000128C  103C 000E                310          MOVE.B      #14, D0             ; command for trap call to display message
00001290  4E4F                     311          TRAP        #15                 ; trap call
00001292                           312          
00001292  4EB9 00001FD2            313          JSR         printEA
00001298                           314          
00001298  43F9 00002636            315          LEA         newLine, A1           ; Display space
0000129E  103C 000E                316          MOVE.B      #14, D0             ; command for trap call to display message
000012A2  4E4F                     317          TRAP        #15                 ; trap call
000012A4                           318          
000012A4  6000 FD66                319          BRA         LOOP
000012A8                           320           
000012A8  43F9 00002656            321  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000012AE  103C 000E                322          MOVE.B      #14, D0             ; command for trap call to display message
000012B2  4E4F                     323          TRAP        #15                 ; trap call
000012B4                           324                  
000012B4  1218                     325          MOVE.B      (A0)+, D1
000012B6  1401                     326          MOVE.B      D1,D2               ; copy data over
000012B8  EC42                     327          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000012BA  B43C 0000                328          CMP.B       #zero,D2
000012BE  6700 0034                329          BEQ         opCMPIB
000012C2  B43C 0001                330          CMP.B       #one,D2
000012C6  6700 008E                331          BEQ         opCMPIW
000012CA  B43C 0002                332          CMP.B       #two,D2
000012CE  6700 00E8                333          BEQ         opCMPIL
000012D2                           334          
000012D2  1401                     335          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000012D4  E542                     336          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
000012D6  1802                     337          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
000012D8  4242                     338          CLR         D2                  ; Clear out data register
000012DA  1404                     339          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
000012DC  EA42                     340          ASR         #five,D2            ; Shift the register out to get just the mode
000012DE  1802                     341          MOVE.B      D2,D4               ; Store mode into D4
000012E0  4242                     342          CLR         D2
000012E2                           343          
000012E2  1401                     344          MOVE.B      D1,D2               ; Getting the EA register
000012E4  EB42                     345          ASL         #five,D2
000012E6  1A02                     346          MOVE.B      D2,D5               ; Move just the register into D5
000012E8  4242                     347          CLR         D2                  ; Clearing D2 to put data back
000012EA  1405                     348          MOVE.B      D5,D2               ; Putting back the register
000012EC  EA42                     349          ASR         #five,D2            ; Shifting bits in order to read the register
000012EE  1A02                     350          MOVE.B      D2,D5               ; Store register into D5
000012F0                           351          
000012F0  6000 FD1A                352          BRA         LOOP                ; go back to the loop
000012F4                           353  
000012F4  43F9 000026D4            354  opCMPIB LEA         dispByte, A1        ; Display byte
000012FA  103C 000E                355          MOVE.B      #14, D0             ; command for trap call to display message
000012FE  4E4F                     356          TRAP        #15                 ; trap call
00001300                           357          
00001300  43F9 0000263A            358          LEA         space, A1           ; Display space
00001306  103C 000E                359          MOVE.B      #14, D0             ; command for trap call to display message
0000130A  4E4F                     360          TRAP        #15                 ; trap call
0000130C                           361          
0000130C  4242                     362          CLR         D2
0000130E  1401                     363          MOVE.B      D1,D2
00001310  E642                     364          ASR         #three,D2
00001312  C47C 0007                365          AND         #seven,D2
00001316  4243                     366          CLR         D3        
00001318  1601                     367          MOVE.B      D1,D3
0000131A  C67C 0007                368          AND         #seven,D3
0000131E                           369          
0000131E  4241                     370          CLR         D1
00001320  3218                     371          MOVE.W      (A0)+, D1
00001322                           372          
00001322  43F9 0000263D            373          LEA         hashTag, A1           ; Display space
00001328  103C 000E                374          MOVE.B      #14, D0             ; command for trap call to display message
0000132C  4E4F                     375          TRAP        #15                 ; trap call
0000132E                           376          
0000132E  103C 0003                377          MOVE.B      #3, D0
00001332  4E4F                     378          TRAP        #15
00001334                           379          
00001334  43F9 00002641            380          LEA         comma, A1           ; Display space
0000133A  103C 000E                381          MOVE.B      #14, D0             ; command for trap call to display message
0000133E  4E4F                     382          TRAP        #15                 ; trap call
00001340                           383          
00001340  4EB9 00001FD2            384          JSR         printEA
00001346                           385          
00001346  43F9 00002636            386          LEA         newLine, A1           ; Display space
0000134C  103C 000E                387          MOVE.B      #14, D0             ; command for trap call to display message
00001350  4E4F                     388          TRAP        #15                 ; trap call
00001352                           389  
00001352  6000 FCB8                390          BRA         LOOP
00001356                           391  
00001356  43F9 000026D7            392  opCMPIW LEA         dispWord, A1        ; Display byte
0000135C  103C 000E                393          MOVE.B      #14, D0             ; command for trap call to display message
00001360  4E4F                     394          TRAP        #15                 ; trap call
00001362                           395          
00001362  43F9 0000263A            396          LEA         space, A1           ; Display space
00001368  103C 000E                397          MOVE.B      #14, D0             ; command for trap call to display message
0000136C  4E4F                     398          TRAP        #15                 ; trap call
0000136E                           399          
0000136E  4242                     400          CLR         D2
00001370  1401                     401          MOVE.B      D1,D2
00001372  E642                     402          ASR         #three,D2
00001374  C47C 0007                403          AND         #seven,D2
00001378  4243                     404          CLR         D3        
0000137A  1601                     405          MOVE.B      D1,D3
0000137C  C67C 0007                406          AND         #seven,D3
00001380                           407          
00001380  4241                     408          CLR         D1
00001382  3218                     409          MOVE.W      (A0)+, D1
00001384                           410          
00001384  43F9 0000263D            411          LEA         hashTag, A1           ; Display space
0000138A  103C 000E                412          MOVE.B      #14, D0             ; command for trap call to display message
0000138E  4E4F                     413          TRAP        #15                 ; trap call
00001390                           414          
00001390  103C 0003                415          MOVE.B      #3, D0
00001394  4E4F                     416          TRAP        #15
00001396                           417          
00001396  43F9 00002641            418          LEA         comma, A1           ; Display space
0000139C  103C 000E                419          MOVE.B      #14, D0             ; command for trap call to display message
000013A0  4E4F                     420          TRAP        #15                 ; trap call
000013A2                           421          
000013A2  4EB9 00001FD2            422          JSR         printEA
000013A8                           423          
000013A8  43F9 00002636            424          LEA         newLine, A1           ; Display space
000013AE  103C 000E                425          MOVE.B      #14, D0             ; command for trap call to display message
000013B2  4E4F                     426          TRAP        #15                 ; trap call
000013B4  6000 FC56                427          BRA         LOOP
000013B8                           428  
000013B8  43F9 000026DA            429  opCMPIL LEA         dispLong, A1        ; Display byte
000013BE  103C 000E                430          MOVE.B      #14, D0             ; command for trap call to display message
000013C2  4E4F                     431          TRAP        #15                 ; trap call
000013C4                           432          
000013C4  43F9 0000263A            433          LEA         space, A1           ; Display space
000013CA  103C 000E                434          MOVE.B      #14, D0             ; command for trap call to display message
000013CE  4E4F                     435          TRAP        #15                 ; trap call
000013D0                           436          
000013D0  4242                     437          CLR         D2
000013D2  1401                     438          MOVE.B      D1,D2
000013D4  E642                     439          ASR         #three,D2
000013D6  C47C 0007                440          AND         #seven,D2
000013DA  4243                     441          CLR         D3        
000013DC  1601                     442          MOVE.B      D1,D3
000013DE  C67C 0007                443          AND         #seven,D3
000013E2                           444          
000013E2  4241                     445          CLR         D1
000013E4  3218                     446          MOVE.W      (A0)+, D1
000013E6                           447          
000013E6  43F9 0000263D            448          LEA         hashTag, A1           ; Display space
000013EC  103C 000E                449          MOVE.B      #14, D0             ; command for trap call to display message
000013F0  4E4F                     450          TRAP        #15                 ; trap call
000013F2                           451          
000013F2  103C 0003                452          MOVE.B      #3, D0
000013F6  4E4F                     453          TRAP        #15
000013F8                           454          
000013F8  43F9 00002641            455          LEA         comma, A1           ; Display space
000013FE  103C 000E                456          MOVE.B      #14, D0             ; command for trap call to display message
00001402  4E4F                     457          TRAP        #15                 ; trap call
00001404                           458          
00001404  4EB9 00001FD2            459          JSR         printEA
0000140A                           460          
0000140A  43F9 00002636            461          LEA         newLine, A1           ; Display space
00001410  103C 000E                462          MOVE.B      #14, D0             ; command for trap call to display message
00001414  4E4F                     463          TRAP        #15                 ; trap call
00001416                           464          
00001416  6000 FBF4                465          BRA         LOOP
0000141A                           466  
0000141A  43F9 0000265B            467  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001420  103C 000E                468                  MOVE.B      #14, D0             ; command for trap call to display message
00001424  4E4F                     469                  TRAP        #15                 ; trap call
00001426                           470  
00001426  43F9 0000263A            471                  LEA         space, A1           ; Display space
0000142C  103C 000E                472                  MOVE.B      #14, D0             ; command for trap call to display message
00001430  4E4F                     473                  TRAP        #15                 ; trap call
00001432                           474                  
00001432  4242                     475                  CLR         D2
00001434  1218                     476                  MOVE.B      (A0)+, D1
00001436  1401                     477                  MOVE.B      D1,D2               ; copy data over
00001438  E642                     478                  ASR         #three,D2           ; Shift to the right to remove register
0000143A  C47C 0007                479                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
0000143E                           480                  
0000143E  4243                     481                  CLR         D3                  ; Clear D3 so we can move D1 in
00001440  1601                     482                  MOVE.B      D1,D3               ; Move othr byte in
00001442  C67C 0007                483                  AND         #seven,D3           ; Set everything besides register to 0
00001446                           484                  
00001446  4241                     485                  CLR         D1
00001448  3218                     486                  MOVE.W      (A0)+, D1
0000144A                           487                 
0000144A                           488                  
0000144A  43F9 0000263D            489                  LEA         hashTag, A1           ; Display space
00001450  103C 000E                490                  MOVE.B      #14, D0             ; command for trap call to display message
00001454  4E4F                     491                  TRAP        #15                 ; trap call
00001456                           492          
00001456  103C 0003                493                  MOVE.B      #3, D0
0000145A  4E4F                     494                  TRAP        #15
0000145C                           495          
0000145C  43F9 00002641            496                  LEA         comma, A1           ; Display space
00001462  103C 000E                497                  MOVE.B      #14, D0             ; command for trap call to display message
00001466  4E4F                     498                  TRAP        #15                 ; trap call
00001468                           499                  
00001468  4EB9 00001FD2            500                  JSR         printEA
0000146E                           501          
0000146E  43F9 00002636            502                  LEA         newLine, A1           ; Display space
00001474  103C 000E                503                  MOVE.B      #14, D0             ; command for trap call to display message
00001478  4E4F                     504                  TRAP        #15                 ; trap call
0000147A                           505                  
0000147A                           506                  
0000147A  6000 FB90                507                  BRA         LOOP                
0000147E                           508          
0000147E                           509  opDynBCLR       
0000147E  4241                     510                  CLR         D1
00001480  1218                     511                  MOVE.B      (A0)+,D1            ; Copy second byte in
00001482  1601                     512                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
00001484  E243                     513                  ASR         #one,D3             ; Shift register over to the end
00001486  C67C 0007                514                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
0000148A                           515                  
0000148A  1401                     516                  MOVE.B      D1,D2
0000148C  EC42                     517                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
0000148E  B47C 0002                518                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
00001492  6600 119E                519                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
00001496                           520  
00001496                           521                  
00001496  43F9 0000265B            522                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
0000149C  103C 000E                523                  MOVE.B      #14, D0             ; command for trap call to display message
000014A0  4E4F                     524                  TRAP        #15                 ; trap call  
000014A2                           525                  
000014A2  43F9 0000263A            526                  LEA         space, A1           ; Display space
000014A8  103C 000E                527                  MOVE.B      #14, D0             ; command for trap call to display message
000014AC  4E4F                     528                  TRAP        #15                 ; trap call
000014AE                           529                  
000014AE  143C 0000                530                  MOVE.B      #zero,D2                
000014B2  4EB9 00001FD2            531                  JSR         printEA
000014B8                           532                  
000014B8  43F9 00002641            533                  LEA         comma, A1           ; Display space
000014BE  103C 000E                534                  MOVE.B      #14, D0             ; command for trap call to display message
000014C2  4E4F                     535                  TRAP        #15                 ; trap call
000014C4                           536                  
000014C4  4242                     537                  CLR         D2
000014C6  1401                     538                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000014C8  E642                     539                  ASR         #three,D2           ; Remove/shift the register out
000014CA  C47C 0007                540                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000014CE                           541                  
000014CE  4243                     542                  CLR         D3                  ; Clearing D3 to avoid mashing data
000014D0  1601                     543                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000014D2  C67C 0007                544                  AND         #seven,D3           ; Change all bits except for register bits to 0
000014D6                           545                  
000014D6                           546  
000014D6  4EB9 00001FD2            547                  JSR         printEA
000014DC                           548          
000014DC  43F9 00002636            549                  LEA         newLine, A1           ; Display space
000014E2  103C 000E                550                  MOVE.B      #14, D0             ; command for trap call to display message
000014E6  4E4F                     551                  TRAP        #15                 ; trap call            
000014E8                           552  
000014E8                           553  
000014E8  6000 FB22                554                  BRA         LOOP                ; go back to the loop
000014EC                           555   
000014EC                           556  opMOVEB 
000014EC  43F9 00002660            557          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
000014F2  103C 000E                558          MOVE.B      #14, D0             ; command for trap call to display message
000014F6  4E4F                     559          TRAP        #15                 ; trap call
000014F8  43F9 000026D4            560          LEA         dispByte, A1        ; display byte
000014FE  103C 000E                561          MOVE.B      #14, D0             ; command for trap call to display message
00001502  4E4F                     562          TRAP        #15                 ; trap call
00001504  43F9 0000263A            563          LEA         space, A1           ; create spaces
0000150A  103C 000E                564          MOVE.B      #14, D0             ; command for trap call to display message
0000150E  4E4F                     565          TRAP        #15                 ; trap call
00001510                           566          
00001510                           567          
00001510  4245                     568          CLR         D5                  ; Clear D5
00001512  1A01                     569          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001514  E245                     570          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001516  CA7C 0007                571          AND         #seven,D5
0000151A                           572          
0000151A  4244                     573          CLR         D4                  ; Clear out D4
0000151C  1801                     574          MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000151E  C87C 0001                575          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001522                           576          
00001522  4241                     577          CLR          D1
00001524  4242                     578          CLR          D2
00001526  1218                     579          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001528  1401                     580          MOVE.B      D1,D2
0000152A  EC42                     581          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000152C  D842                     582          ADD         D2,D4               ; Adds the remaining bits to D4
0000152E                           583          
0000152E  4242                     584          CLR         D2
00001530  1401                     585          MOVE.B      D1,D2               ; Copy new byte over to D2
00001532  E642                     586          ASR         #three,D2           ; Shift source register out
00001534  C47C 0007                587          AND         #seven,D2           ; Set everything to 0 except for the mode
00001538                           588          
00001538  4243                     589          CLR         D3
0000153A  1601                     590          MOVE.B      D1,D3
0000153C  C67C 0007                591          AND         #seven,D3
00001540                           592          
00001540  4EB9 00001FD2            593          JSR         printEA
00001546                           594          
00001546  43F9 00002641            595          LEA         comma, A1           ; Display space
0000154C  103C 000E                596          MOVE.B      #14, D0             ; command for trap call to display message
00001550  4E4F                     597          TRAP        #15                 ; trap call
00001552                           598          
00001552  4242                     599          CLR         D2
00001554  4243                     600          CLR         D3
00001556  1404                     601          MOVE.B      D4,D2
00001558  1605                     602          MOVE.B      D5,D3
0000155A                           603          
0000155A  4EB9 00001FD2            604          JSR         printEA
00001560                           605          
00001560                           606          
00001560  43F9 00002636            607          LEA         newLine, A1           ; Display space
00001566  103C 000E                608          MOVE.B      #14, D0             ; command for trap call to display message
0000156A  4E4F                     609          TRAP        #15                 ; trap call            
0000156C                           610  
0000156C                           611  
0000156C  6000 FA9E                612          BRA         LOOP                ; go back to the loop
00001570                           613          
00001570                           614  opMOVEL     
00001570                           615          
00001570  4245                     616              CLR         D5                  ; Clear D5
00001572  1A01                     617              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001574  E245                     618              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001576  CA7C 0007                619              AND         #seven,D5
0000157A                           620          
0000157A  4244                     621              CLR         D4                  ; Clear out D4
0000157C  1801                     622              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000157E  C87C 0001                623              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001582                           624          
00001582  4241                     625              CLR          D1
00001584  4242                     626              CLR          D2
00001586  1218                     627              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001588  1401                     628              MOVE.B      D1,D2
0000158A  EC42                     629              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000158C  D842                     630              ADD         D2,D4               ; Adds the remaining bits to D4
0000158E                           631          
0000158E  B87C 0001                632              CMP         #one,D4             ; Check if it is MOVEA
00001592  6700 006A                633              BEQ         opMOVEAL            ; If it is, branch off
00001596                           634              
00001596  43F9 00002660            635              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
0000159C  103C 000E                636              MOVE.B      #14, D0             ; command for trap call to display message
000015A0  4E4F                     637              TRAP        #15                 ; trap call  
000015A2                           638              
000015A2                           639              
000015A2  43F9 000026DA            640              LEA         dispLong,A1
000015A8  103C 000E                641              MOVE.B      #14, D0             ; command for trap call to display message
000015AC  4E4F                     642              TRAP        #15                 ; trap call
000015AE                           643              
000015AE  43F9 0000263A            644              LEA         space, A1           ; create spaces
000015B4  103C 000E                645              MOVE.B      #14, D0             ; command for trap call to display message
000015B8  4E4F                     646              TRAP        #15                 ; trap call
000015BA                           647          
000015BA  4242                     648              CLR         D2
000015BC  1401                     649              MOVE.B      D1,D2               ; Copy new byte over to D2
000015BE  E642                     650              ASR         #three,D2           ; Shift source register out
000015C0  C47C 0007                651              AND         #seven,D2           ; Set everything to 0 except for the mode
000015C4                           652          
000015C4  4243                     653              CLR         D3
000015C6  1601                     654              MOVE.B      D1,D3
000015C8  C67C 0007                655              AND         #seven,D3
000015CC                           656              
000015CC  4241                     657              CLR         D1                  ; Clear D1
000015CE                           658              
000015CE  4EB9 00001FD2            659              JSR         printEA
000015D4                           660              
000015D4  43F9 00002641            661              LEA         comma, A1           ; Display comma
000015DA  103C 000E                662              MOVE.B      #14, D0             ; command for trap call to display message
000015DE  4E4F                     663              TRAP        #15                 ; trap call
000015E0                           664          
000015E0  4242                     665              CLR         D2
000015E2  4243                     666              CLR         D3
000015E4  1404                     667              MOVE.B      D4,D2
000015E6  1605                     668              MOVE.B      D5,D3
000015E8                           669              
000015E8                           670  
000015E8                           671              
000015E8  4EB9 00001FD2            672              JSR         printEA
000015EE                           673          
000015EE                           674          
000015EE  43F9 00002636            675              LEA         newLine, A1           ; Display space
000015F4  103C 000E                676              MOVE.B      #14, D0             ; command for trap call to display message
000015F8  4E4F                     677              TRAP        #15                 ; trap call            
000015FA                           678  
000015FA                           679  
000015FA  6000 FA10                680              BRA         LOOP                ; go back to the loop
000015FE                           681              
000015FE                           682  opMOVEAL
000015FE                           683  
000015FE  43F9 00002665            684              LEA         MOVEAmatch,A1
00001604  103C 000E                685              MOVE.B      #14, D0             ; command for trap call to display message
00001608  4E4F                     686              TRAP        #15                 ; trap call
0000160A                           687              
0000160A  43F9 000026DA            688              LEA         dispLong,A1
00001610  103C 000E                689              MOVE.B      #14, D0             ; command for trap call to display message
00001614  4E4F                     690              TRAP        #15                 ; trap call
00001616                           691              
00001616                           692  
00001616  43F9 0000263A            693              LEA         space, A1           ; create spaces
0000161C  103C 000E                694              MOVE.B      #14, D0             ; command for trap call to display message
00001620  4E4F                     695              TRAP        #15                 ; trap call
00001622                           696              
00001622  4242                     697              CLR         D2
00001624  1401                     698              MOVE.B      D1,D2               ; Copy new byte over to D2
00001626  E642                     699              ASR         #three,D2           ; Shift source register out
00001628  C47C 0007                700              AND         #seven,D2           ; Set everything to 0 except for the mode
0000162C                           701          
0000162C  4243                     702              CLR         D3
0000162E  1601                     703              MOVE.B      D1,D3
00001630  C67C 0007                704              AND         #seven,D3
00001634                           705              
00001634  4241                     706              CLR         D1                  ; Clear D1
00001636                           707              
00001636                           708              
00001636  4EB9 00001FD2            709              JSR         printEA
0000163C                           710              
0000163C  43F9 00002641            711              LEA         comma, A1           ; Display comma
00001642  103C 000E                712              MOVE.B      #14, D0             ; command for trap call to display message
00001646  4E4F                     713              TRAP        #15                 ; trap call
00001648                           714  
00001648  4242                     715              CLR         D2
0000164A  4243                     716              CLR         D3
0000164C  1404                     717              MOVE.B      D4,D2
0000164E  1605                     718              MOVE.B      D5,D3
00001650                           719          
00001650  4EB9 00001FD2            720              JSR         printEA
00001656                           721          
00001656                           722          
00001656  43F9 00002636            723              LEA         newLine, A1           ; Display space
0000165C  103C 000E                724              MOVE.B      #14, D0             ; command for trap call to display message
00001660  4E4F                     725              TRAP        #15                 ; trap call            
00001662                           726  
00001662                           727  
00001662  6000 F9A8                728              BRA         LOOP                ; go back to the loop
00001666                           729  
00001666                           730  opMOVEW
00001666                           731          
00001666  4245                     732              CLR         D5                  ; Clear D5
00001668  1A01                     733              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000166A  E245                     734              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
0000166C  CA7C 0007                735              AND         #seven,D5
00001670                           736          
00001670  4244                     737              CLR         D4                  ; Clear out D4
00001672  1801                     738              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001674  C87C 0001                739              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001678                           740          
00001678  4241                     741              CLR          D1
0000167A  4242                     742              CLR          D2
0000167C  1218                     743              MOVE.B      (A0)+,D1            ; Copy byte into D1
0000167E  1401                     744              MOVE.B      D1,D2
00001680  EC42                     745              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001682  D842                     746              ADD         D2,D4               ; Adds the remaining bits to D4
00001684                           747          
00001684  B87C 0001                748              CMP         #one,D4             ; Check if it is MOVEA
00001688  6700 006A                749              BEQ         opMOVEAW            ; If it is, branch off
0000168C                           750              
0000168C  43F9 00002660            751              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001692  103C 000E                752              MOVE.B      #14, D0             ; command for trap call to display message
00001696  4E4F                     753              TRAP        #15                 ; trap call  
00001698                           754              
00001698  43F9 000026D7            755              LEA         dispWord,A1
0000169E  103C 000E                756              MOVE.B      #14, D0             ; command for trap call to display message
000016A2  4E4F                     757              TRAP        #15                 ; trap call
000016A4                           758              
000016A4  43F9 0000263A            759              LEA         space, A1           ; create spaces
000016AA  103C 000E                760              MOVE.B      #14, D0             ; command for trap call to display message
000016AE  4E4F                     761              TRAP        #15                 ; trap call
000016B0                           762          
000016B0  4242                     763              CLR         D2
000016B2  1401                     764              MOVE.B      D1,D2               ; Copy new byte over to D2
000016B4  E642                     765              ASR         #three,D2           ; Shift source register out
000016B6  C47C 0007                766              AND         #seven,D2           ; Set everything to 0 except for the mode
000016BA                           767          
000016BA  4243                     768              CLR         D3
000016BC  1601                     769              MOVE.B      D1,D3
000016BE  C67C 0007                770              AND         #seven,D3
000016C2                           771              
000016C2  4241                     772              CLR         D1                  ; Clear D1
000016C4                           773              
000016C4  4EB9 00001FD2            774              JSR         printEA
000016CA                           775              
000016CA  43F9 00002641            776              LEA         comma, A1           ; Display comma
000016D0  103C 000E                777              MOVE.B      #14, D0             ; command for trap call to display message
000016D4  4E4F                     778              TRAP        #15                 ; trap call
000016D6                           779          
000016D6  4242                     780              CLR         D2
000016D8  4243                     781              CLR         D3
000016DA  1404                     782              MOVE.B      D4,D2
000016DC  1605                     783              MOVE.B      D5,D3
000016DE                           784              
000016DE                           785  
000016DE                           786              
000016DE  4EB9 00001FD2            787              JSR         printEA
000016E4                           788          
000016E4                           789          
000016E4  43F9 00002636            790              LEA         newLine, A1           ; Display space
000016EA  103C 000E                791              MOVE.B      #14, D0             ; command for trap call to display message
000016EE  4E4F                     792              TRAP        #15                 ; trap call            
000016F0                           793  
000016F0                           794  
000016F0  6000 F91A                795              BRA         LOOP                ; go back to the loop
000016F4                           796  opMOVEAW  
000016F4  43F9 00002665            797              LEA         MOVEAmatch,A1
000016FA  103C 000E                798              MOVE.B      #14, D0             ; command for trap call to display message
000016FE  4E4F                     799              TRAP        #15                 ; trap call
00001700                           800              
00001700  43F9 000026D7            801              LEA         dispWord,A1
00001706  103C 000E                802              MOVE.B      #14, D0             ; command for trap call to display message
0000170A  4E4F                     803              TRAP        #15                 ; trap call
0000170C                           804              
0000170C                           805  
0000170C  43F9 0000263A            806              LEA         space, A1           ; create spaces
00001712  103C 000E                807              MOVE.B      #14, D0             ; command for trap call to display message
00001716  4E4F                     808              TRAP        #15                 ; trap call
00001718                           809              
00001718  4242                     810              CLR         D2
0000171A  1401                     811              MOVE.B      D1,D2               ; Copy new byte over to D2
0000171C  E642                     812              ASR         #three,D2           ; Shift source register out
0000171E  C47C 0007                813              AND         #seven,D2           ; Set everything to 0 except for the mode
00001722                           814          
00001722  4243                     815              CLR         D3
00001724  1601                     816              MOVE.B      D1,D3
00001726  C67C 0007                817              AND         #seven,D3
0000172A                           818              
0000172A  4241                     819              CLR         D1                  ; Clear D1
0000172C                           820              
0000172C                           821              
0000172C  4EB9 00001FD2            822              JSR         printEA
00001732                           823              
00001732  43F9 00002641            824              LEA         comma, A1           ; Display comma
00001738  103C 000E                825              MOVE.B      #14, D0             ; command for trap call to display message
0000173C  4E4F                     826              TRAP        #15                 ; trap call
0000173E                           827  
0000173E  4242                     828              CLR         D2
00001740  4243                     829              CLR         D3
00001742  1404                     830              MOVE.B      D4,D2
00001744  1605                     831              MOVE.B      D5,D3
00001746                           832          
00001746  4EB9 00001FD2            833              JSR         printEA
0000174C                           834          
0000174C                           835          
0000174C  43F9 00002636            836              LEA         newLine, A1           ; Display space
00001752  103C 000E                837              MOVE.B      #14, D0             ; command for trap call to display message
00001756  4E4F                     838              TRAP        #15                 ; trap call            
00001758                           839  
00001758                           840  
00001758  6000 F8B2                841              BRA         LOOP                ; go back to the loop
0000175C                           842  
0000175C                           843  opNEG   
0000175C  43F9 0000266B            844              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001762  103C 000E                845              MOVE.B      #14, D0             ; command for trap call to display message
00001766  4E4F                     846              TRAP        #15                 ; trap call
00001768                           847          
00001768                           848          
00001768  1218                     849              MOVE.B      (A0)+, D1
0000176A  1401                     850              MOVE.B      D1,D2               ; copy data over
0000176C  EC42                     851              ASR         #six,D2
0000176E                           852              
0000176E  B47C 0000                853              CMP         #zero,D2
00001772  6700 0016                854              BEQ         opNEGB
00001776  B47C 0001                855              CMP         #one,D2
0000177A  6700 008E                856              BEQ         opNEGW
0000177E  B47C 0002                857              CMP         #two,D2
00001782  6700 0046                858              BEQ         opNEGL
00001786  6000 0E94                859              BRA         invalid
0000178A                           860  opNEGB
0000178A                           861  
0000178A  43F9 000026D4            862              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001790  103C 000E                863              MOVE.B      #14, D0             ; command for trap call to display message
00001794  4E4F                     864              TRAP        #15                 ; trap call
00001796                           865          
00001796  43F9 0000263A            866              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000179C  103C 000E                867              MOVE.B      #14, D0             ; command for trap call to display message
000017A0  4E4F                     868              TRAP        #15                 ; trap call
000017A2                           869          
000017A2  4242                     870              CLR         D2                  ; Clear Data register 2
000017A4  3401                     871              MOVE        D1,D2               ; Move byte into D2
000017A6  E642                     872              ASR         #three,D2           ; Shift mode into place and moves mode into place
000017A8  C47C 0007                873              AND         #seven,D2           ; Stores mode
000017AC                           874              
000017AC  4243                     875              CLR         D3
000017AE  3601                     876              MOVE        D1,D3
000017B0  C67C 0007                877              AND         #seven,D3
000017B4                           878          
000017B4  4EB9 00001FD2            879              JSR         printEA
000017BA                           880                  
000017BA  43F9 00002636            881              LEA         newLine, A1           ; Display space
000017C0  103C 000E                882              MOVE.B      #14, D0             ; command for trap call to display message
000017C4  4E4F                     883              TRAP        #15                 ; trap call  
000017C6                           884          
000017C6  6000 F844                885              BRA         LOOP
000017CA                           886                  
000017CA                           887  
000017CA                           888  opNEGL
000017CA                           889  
000017CA  43F9 000026DA            890              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
000017D0  103C 000E                891              MOVE.B      #14, D0             ; command for trap call to display message
000017D4  4E4F                     892              TRAP        #15                 ; trap call
000017D6                           893  
000017D6  43F9 0000263A            894              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000017DC  103C 000E                895              MOVE.B      #14, D0             ; command for trap call to display message
000017E0  4E4F                     896              TRAP        #15                 ; trap call
000017E2                           897                  
000017E2  4242                     898              CLR         D2                  ; Clear Data register 2
000017E4  3401                     899              MOVE        D1,D2               ; Move byte into D2
000017E6  E642                     900              ASR         #three,D2           ; Shift mode into place and moves mode into place
000017E8  C47C 0007                901              AND         #seven,D2           ; Stores mode
000017EC                           902          
000017EC  4243                     903              CLR         D3
000017EE  3601                     904              MOVE        D1,D3
000017F0  C67C 0007                905              AND         #seven,D3
000017F4                           906          
000017F4  4EB9 00001FD2            907              JSR         printEA
000017FA                           908                      
000017FA  43F9 00002636            909              LEA         newLine, A1         ; Display space
00001800  103C 000E                910              MOVE.B      #14, D0             ; command for trap call to display message
00001804  4E4F                     911              TRAP        #15                 ; trap call  
00001806                           912          
00001806  6000 F804                913              BRA         LOOP
0000180A                           914          
0000180A                           915  
0000180A                           916  opNEGW
0000180A                           917  
0000180A  43F9 000026D7            918              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001810  103C 000E                919              MOVE.B      #14, D0             ; command for trap call to display message
00001814  4E4F                     920              TRAP        #15                 ; trap call
00001816                           921          
00001816  43F9 0000263A            922              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000181C  103C 000E                923              MOVE.B      #14, D0             ; command for trap call to display message
00001820  4E4F                     924              TRAP        #15                 ; trap call        
00001822                           925                  
00001822  4242                     926              CLR         D2                  ; Clear Data register 2
00001824  3401                     927              MOVE        D1,D2               ; Move byte into D2
00001826  E642                     928              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001828  C47C 0007                929              AND         #seven,D2           ; Stores mode
0000182C                           930          
0000182C  4243                     931              CLR         D3
0000182E  3601                     932              MOVE        D1,D3
00001830  C67C 0007                933              AND         #seven,D3
00001834                           934          
00001834  4EB9 00001FD2            935              JSR         printEA
0000183A                           936              
0000183A  43F9 00002636            937              LEA         newLine, A1           ; Display space
00001840  103C 000E                938              MOVE.B      #14, D0             ; command for trap call to display message
00001844  4E4F                     939              TRAP        #15                 ; trap call  
00001846                           940          
00001846  6000 F7C4                941              BRA         LOOP
0000184A                           942  
0000184A                           943  opRTSJSR
0000184A                           944          
0000184A  1218                     945              MOVE.B      (A0)+, D1
0000184C                           946              
0000184C  1401                     947              MOVE.B      D1,D2               ; copy data over
0000184E  B47C 0075                948              CMP         #117,D2
00001852  6700 0050                949              BEQ         opRTS
00001856                           950              
00001856  EC42                     951              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
00001858  B47C 0002                952              CMP         #two,D2             ; Checking if it is JSR
0000185C  6700 0006                953              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001860                           954  
00001860  6000 0DBA                955              BRA         invalid
00001864                           956  
00001864                           957  opJSR
00001864                           958                        
00001864  43F9 00002673            959              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
0000186A  103C 000E                960              MOVE.B      #14, D0             ; command for trap call to display message
0000186E  4E4F                     961              TRAP        #15                 ; trap call
00001870                           962              
00001870  43F9 0000263A            963              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001876  103C 000E                964              MOVE.B      #14, D0             ; command for trap call to display message
0000187A  4E4F                     965              TRAP        #15                 ; trap call
0000187C                           966              
0000187C  4242                     967              CLR         D2
0000187E  4243                     968              CLR         D3
00001880                           969              
00001880  1401                     970              MOVE.B      D1,D2
00001882  E642                     971              ASR         #three,D2
00001884  C47C 0007                972              AND         #seven,D2
00001888                           973              
00001888  1601                     974              MOVE.B      D1,D3
0000188A  C67C 0007                975              AND         #seven,D3
0000188E                           976              
0000188E  4EB9 00001FD2            977              JSR         printEA
00001894                           978              
00001894  43F9 00002636            979              LEA         newLine, A1           ; Display space
0000189A  103C 000E                980              MOVE.B      #14, D0             ; command for trap call to display message
0000189E  4E4F                     981              TRAP        #15                 ; trap call  
000018A0                           982              
000018A0  6000 F76A                983              BRA         loop            
000018A4                           984  opRTS
000018A4                           985  
000018A4  43F9 0000266F            986              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
000018AA  103C 000E                987              MOVE.B      #14, D0             ; command for trap call to display message
000018AE  4E4F                     988              TRAP        #15                 ; trap call
000018B0                           989              
000018B0  43F9 00002636            990              LEA         newLine, A1           ; Display space
000018B6  103C 000E                991              MOVE.B      #14, D0             ; command for trap call to display message
000018BA  4E4F                     992              TRAP        #15                 ; trap call 
000018BC                           993              
000018BC  6000 F74E                994              BRA         loop
000018C0                           995  
000018C0                           996  opMOVEMLEA
000018C0  4242                     997              CLR         D2                  ; Clear D2
000018C2  1401                     998              MOVE.B      D1,D2               ; Copy byte over
000018C4  C47C 000F                999              AND         #secNib,D2          ; Check only the second nibble
000018C8  B47C 000C               1000              CMP         #twelve,D2          ; Compare the second nibble to twelve
000018CC  6700 000E               1001              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
000018D0  B47C 0008               1002              CMP         #eight,D2           ; Compare the second nibble to eight
000018D4  6700 0006               1003              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
000018D8  6000 008C               1004              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
000018DC                          1005              
000018DC                          1006  opMOVEM            
000018DC  4246                    1007              CLR         D6                  ; Clearing D4 to store dr field
000018DE  1C01                    1008              MOVE.B      D1,D6               ; Moving byte to find dr field
000018E0  E446                    1009              ASR         #two,D6             ; Moving dr field to readable spot
000018E2  CC7C 0001               1010              AND         #one,D6             ; seting everything except dr to 0
000018E6                          1011  
000018E6  4241                    1012              CLR         D1  
000018E8  1218                    1013              MOVE.B      (A0)+, D1           ; Taking in next byte
000018EA                          1014              
000018EA  4245                    1015              CLR         D5
000018EC  1A01                    1016              MOVE.B      D1,D5               ; Using D6 to check if this is indeed MOVEM
000018EE  EC45                    1017              ASR         #six,D5
000018F0  CA7C 0001               1018              AND         #one,D5
000018F4  BA7C 0001               1019              CMP         #one,D5             ; This bit should be one if this is MOVEM
000018F8  6600 0D22               1020              BNE         invalid             ; If this is not 1 then this is not moveM
000018FC  4245                    1021              CLR         D5
000018FE                          1022              
000018FE  43F9 00002677           1023              LEA         MOVEMMatch, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001904  103C 000E               1024              MOVE.B      #14, D0             ; command for trap call to display message
00001908  4E4F                    1025              TRAP        #15                 ; trap call
0000190A                          1026              
0000190A  4245                    1027              CLR         D5                  ; Clearing D5 to store size
0000190C  1A01                    1028              MOVE.B      D1,D5               ; Moving byte that contains bit for size
0000190E  EA45                    1029              ASR         #five,D5            ; Moving size bit to the very right to read
00001910  CA7C 0001               1030              AND         #one,D5             ; Isolating the one bit for size
00001914                          1031              
00001914  4242                    1032              CLR         D2                  ; Storing EA mode in D2
00001916  1401                    1033              MOVE.B      D1,D2
00001918  E642                    1034              ASR         #three,D2
0000191A  C47C 0007               1035              AND         #seven,D2
0000191E                          1036              
0000191E  4243                    1037              CLR         D3                  ; Storing EA register into D3
00001920  1601                    1038              MOVE.B      D1,D3
00001922  C67C 0007               1039              AND         #seven,D3
00001926                          1040              
00001926  4EB9 00001A9A           1041              JSR         MOVEMBRA
0000192C                          1042              
0000192C  B47C 0003               1043              CMP         #three,D2
00001930  6700 0024               1044              BEQ         skipPrintEA
00001934                          1045              
00001934  43F9 00002641           1046              LEA         comma, A1           ; Display comma
0000193A  103C 000E               1047              MOVE.B      #14, D0             ; command for trap call to display message
0000193E  4E4F                    1048              TRAP        #15                 ; trap call
00001940                          1049              
00001940                          1050  
00001940  4EB9 00001FD2           1051              JSR         printEA
00001946                          1052              
00001946  43F9 00002636           1053              LEA         newline, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
0000194C  103C 000E               1054              MOVE.B      #14, D0             ; command for trap call to display message
00001950  4E4F                    1055              TRAP        #15                 ; trap call            
00001952                          1056  
00001952  6000 F6B8               1057              BRA         loop            
00001956                          1058  
00001956                          1059  skipPrintEA 
00001956                          1060  
00001956  43F9 00002636           1061              LEA         newline, A1        
0000195C  103C 000E               1062              MOVE.B      #14, D0             ; command for trap call to display message
00001960  4E4F                    1063              TRAP        #15                 ; trap call            
00001962                          1064  
00001962  6000 F6A8               1065              BRA         loop 
00001966                          1066  opLEA
00001966  4244                    1067              CLR         D4                  ; Clearing space for source register
00001968  1801                    1068              MOVE.B      D1,D4               ; Moving byte to isolate register
0000196A  E244                    1069              ASR         #one,D4
0000196C  C87C 0007               1070              AND         #seven,D4           ; Isolated register
00001970                          1071  
00001970  4245                    1072              CLR         D5                  ; Clearing D5 to check if bits match LEA static bits
00001972  1A01                    1073              MOVE.B      D1,D5
00001974  CA7C 0001               1074              AND         #one,D5
00001978  E545                    1075              ASL         #two,D5
0000197A                          1076              
0000197A  1218                    1077              MOVE.B      (A0)+, D1           ; Taking in next byte
0000197C                          1078              
0000197C  1C01                    1079              MOVE.B      D1,D6
0000197E  EC46                    1080              ASR         #six,D6
00001980  DA46                    1081              ADD         D6,D5
00001982  4246                    1082              CLR         D6
00001984                          1083  
00001984  BA7C 0007               1084              CMP         #seven,D5
00001988  6600 0C92               1085              BNE         invalid   
0000198C                          1086              
0000198C  43F9 0000267D           1087              LEA         LEAmatch, A1        ; we know that the opcode will be LEA, so load A1 to print message
00001992  103C 000E               1088              MOVE.B      #14, D0             ; command for trap call to display message
00001996  4E4F                    1089              TRAP        #15                 ; trap call            
00001998                          1090  
00001998  43F9 0000263A           1091              LEA         space, A1         ; we know that the opcode will be MOVEM, so load A1 to print message
0000199E  103C 000E               1092              MOVE.B      #14, D0             ; command for trap call to display message
000019A2  4E4F                    1093              TRAP        #15                 ; trap call            
000019A4                          1094              
000019A4  4242                    1095              CLR         D2
000019A6  1401                    1096              MOVE.B      D1,D2
000019A8  E642                    1097              ASR         #three,D2
000019AA  C47C 0007               1098              AND         #seven,D2
000019AE                          1099              
000019AE  4243                    1100              CLR         D3
000019B0  1601                    1101              MOVE.B      D1,D3
000019B2  C67C 0007               1102              AND         #seven,D3
000019B6                          1103              
000019B6  4EB9 00001FD2           1104              JSR         printEA
000019BC                          1105              
000019BC  43F9 00002641           1106              LEA         comma, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
000019C2  103C 000E               1107              MOVE.B      #14, D0             ; command for trap call to display message
000019C6  4E4F                    1108              TRAP        #15                 ; trap call            
000019C8                          1109              
000019C8                          1110              
000019C8  4243                    1111              CLR         D3
000019CA  1604                    1112              MOVE.B      D4,D3
000019CC  143C 0001               1113              MOVE.B      #one,D2
000019D0                          1114              
000019D0  4EB9 00001FD2           1115              JSR         printEA             ; Prints out source address
000019D6                          1116              
000019D6  43F9 00002636           1117              LEA         newline, A1         ; Prints new line
000019DC  103C 000E               1118              MOVE.B      #14, D0             ; command for trap call to display message
000019E0  4E4F                    1119              TRAP        #15                 ; trap call
000019E2                          1120  
000019E2  6000 F628               1121              BRA         loop            
000019E6                          1122              
000019E6                          1123              
000019E6                          1124             
000019E6                          1125  
000019E6                          1126  
000019E6                          1127  opSUBQ      
000019E6  43F9 00002681           1128              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
000019EC  103C 000E               1129              MOVE.B      #14, D0             ; command for trap call to display message
000019F0  4E4F                    1130              TRAP        #15                 ; trap call
000019F2                          1131  
000019F2  43F9 00002686           1132  opBRA       LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
000019F8  103C 000E               1133              MOVE.B      #14, D0             ; command for trap call to display message
000019FC  4E4F                    1134              TRAP        #15                 ; trap call
000019FE  43F9 0000263A           1135              LEA         space, A1           ; create spaces
00001A04  103C 000E               1136              MOVE.B      #14, D0             ; command for trap call to display message
00001A08  4E4F                    1137              TRAP        #15                 ; trap call
00001A0A                          1138  
00001A0A  43F9 0000268A           1139  opBCS       LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001A10  103C 000E               1140              MOVE.B      #14, D0             ; command for trap call to display message
00001A14  4E4F                    1141              TRAP        #15                 ; trap call
00001A16                          1142  
00001A16  43F9 0000268E           1143  opBVC       LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001A1C  103C 000E               1144              MOVE.B      #14, D0             ; command for trap call to display message
00001A20  4E4F                    1145              TRAP        #15                 ; trap call
00001A22                          1146  
00001A22  43F9 00002692           1147  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001A28  103C 000E               1148          MOVE.B      #14, D0             ; command for trap call to display message
00001A2C  4E4F                    1149          TRAP        #15                 ; trap call
00001A2E                          1150  
00001A2E  43F9 00002696           1151  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001A34  103C 000E               1152          MOVE.B      #14, D0             ; command for trap call to display message
00001A38  4E4F                    1153          TRAP        #15                 ; trap call
00001A3A                          1154  
00001A3A  43F9 000026A2           1155  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001A40  103C 000E               1156          MOVE.B      #14, D0             ; command for trap call to display message
00001A44  4E4F                    1157          TRAP        #15                 ; trap call
00001A46                          1158  
00001A46  43F9 000026AE           1159  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001A4C  103C 000E               1160          MOVE.B      #14, D0             ; command for trap call to display message
00001A50  4E4F                    1161          TRAP        #15                 ; trap call
00001A52                          1162  
00001A52  43F9 000026C8           1163  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001A58  103C 000E               1164          MOVE.B      #14, D0             ; command for trap call to display message
00001A5C  4E4F                    1165          TRAP        #15                 ; trap call
00001A5E                          1166  
00001A5E  43F9 000026C4           1167  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001A64  103C 000E               1168          MOVE.B      #14, D0             ; command for trap call to display message
00001A68  4E4F                    1169          TRAP        #15                 ; trap call
00001A6A                          1170  
00001A6A  43F9 000026C0           1171  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00001A70  103C 000E               1172          MOVE.B      #14, D0             ; command for trap call to display message
00001A74  4E4F                    1173          TRAP        #15                 ; trap call
00001A76                          1174  
00001A76  43F9 000026BC           1175  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001A7C  103C 000E               1176          MOVE.B      #14, D0             ; command for trap call to display message
00001A80  4E4F                    1177          TRAP        #15                 ; trap call
00001A82                          1178  
00001A82  43F9 000026D0           1179  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001A88  103C 000E               1180          MOVE.B      #14, D0             ; command for trap call to display message
00001A8C  4E4F                    1181          TRAP        #15                 ; trap call
00001A8E                          1182  
00001A8E                          1183  opROR   
00001A8E  43F9 000026CC           1184          LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001A94  103C 000E               1185          MOVE.B      #14, D0             ; command for trap call to display message
00001A98  4E4F                    1186          TRAP        #15                 ; trap call
00001A9A                          1187  
00001A9A                          1188  
00001A9A  48E7 FF7E               1189  MOVEMBRA    MOVEM.L  D0-D7/A1-A6, -(SP)     ; Branches off depending on size bit
00001A9E  BA7C 0000               1190              CMP      #zero,D5
00001AA2  6700 000A               1191              BEQ      MOVEMW
00001AA6  BA7C 0001               1192              CMP      #one, D5
00001AAA  6700 001E               1193              BEQ      MOVEML
00001AAE                          1194              
00001AAE                          1195  MOVEMW     
00001AAE  43F9 000026D7           1196              LEA         dispWord, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001AB4  103C 000E               1197              MOVE.B      #14, D0             ; command for trap call to display message
00001AB8  4E4F                    1198              TRAP        #15                 ; trap call
00001ABA                          1199  
00001ABA  43F9 0000263A           1200              LEA         space, A1           ; we know that the opcode will be ROR, so load A1 to print message
00001AC0  103C 000E               1201              MOVE.B      #14, D0             ; command for trap call to display message
00001AC4  4E4F                    1202              TRAP        #15                 ; trap call
00001AC6                          1203              
00001AC6  6000 001E               1204              BRA         CheckDR
00001ACA                          1205  
00001ACA                          1206  MOVEML   
00001ACA  43F9 000026DA           1207              LEA         dispLong, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001AD0  103C 000E               1208              MOVE.B      #14, D0             ; command for trap call to display message
00001AD4  4E4F                    1209              TRAP        #15                 ; trap call
00001AD6                          1210  
00001AD6  43F9 0000263A           1211              LEA         space, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001ADC  103C 000E               1212              MOVE.B      #14, D0             ; command for trap call to display message
00001AE0  4E4F                    1213              TRAP        #15                 ; trap call
00001AE2                          1214           
00001AE2                          1215  
00001AE2  6000 0002               1216              BRA         CheckDR
00001AE6                          1217  
00001AE6                          1218  CheckDR     
00001AE6                          1219              
00001AE6                          1220                
00001AE6  3218                    1221              MOVE.W      (A0)+, D1           ; Taking in next word
00001AE8  BC7C 0000               1222              CMP         #zero,D6
00001AEC  6700 0036               1223              BEQ         printRegMem
00001AF0  BC7C 0001               1224              CMP         #one,D6
00001AF4  6700 0006               1225              BEQ         printStack
00001AF8  6000 0B22               1226              BRA         invalid
00001AFC                          1227              
00001AFC                          1228  printStack 
00001AFC  43F9 0000264D           1229              LEA         stack,A1
00001B02  103C 000E               1230              MOVE.B      #14, D0             ; command for trap call to display message
00001B06  4E4F                    1231              TRAP        #15                 ; trap call
00001B08                          1232  
00001B08  43F9 00002649           1233              LEA         inc,A1
00001B0E  103C 000E               1234              MOVE.B      #14, D0             ; command for trap call to display message
00001B12  4E4F                    1235              TRAP        #15                 ; trap call
00001B14                          1236              
00001B14  43F9 00002641           1237              LEA         comma,A1
00001B1A  103C 000E               1238              MOVE.B      #14, D0             ; command for trap call to display message
00001B1E  4E4F                    1239              TRAP        #15                 ; trap call
00001B20                          1240              
00001B20                          1241              
00001B20  6000 0002               1242              BRA         printRegMem
00001B24                          1243             
00001B24                          1244  printRegMem 
00001B24  4244                    1245              CLR         D4                  ; Using D4 to store predecrement mode addresses
00001B26  1801                    1246              MOVE.B      D1,D4               ; Stores bits for D0-D7
00001B28                          1247              
00001B28  4245                    1248              CLR         D5
00001B2A  1A01                    1249              MOVE.B      D1,D5
00001B2C  CA7C 0001               1250              AND         #mask1,D5
00001B30  BA7C 0001               1251              CMP         #mask1,D5
00001B34  6700 007A               1252              BEQ         DataReg0
00001B38                          1253              
00001B38  4245                    1254              CLR         D5
00001B3A  1A01                    1255              MOVE.B      D1,D5
00001B3C  CA7C 0002               1256              AND         #mask2,D5
00001B40  BA7C 0002               1257              CMP         #mask2,D5
00001B44  6700 009A               1258              BEQ         DataReg1
00001B48                          1259  
00001B48  4245                    1260              CLR         D5
00001B4A  1A01                    1261              MOVE.B      D1,D5
00001B4C  CA7C 0004               1262              AND         #mask3,D5
00001B50  BA7C 0004               1263              CMP         #mask3,D5
00001B54  6700 00CA               1264              BEQ         DataReg2            
00001B58                          1265              
00001B58  4245                    1266              CLR         D5
00001B5A  1A01                    1267              MOVE.B      D1,D5
00001B5C  CA7C 0008               1268              AND         #mask4,D5
00001B60  BA7C 0008               1269              CMP         #mask4,D5
00001B64  6700 00FA               1270              BEQ         DataReg3            
00001B68                          1271              
00001B68  4245                    1272              CLR         D5
00001B6A  1A01                    1273              MOVE.B      D1,D5
00001B6C  CA7C 0010               1274              AND         #mask5,D5
00001B70  BA7C 0010               1275              CMP         #mask5,D5
00001B74  6700 012A               1276              BEQ         DataReg4
00001B78                          1277  
00001B78  4245                    1278              CLR         D5
00001B7A  1A01                    1279              MOVE.B      D1,D5
00001B7C  CA7C 0020               1280              AND         #mask6,D5
00001B80  BA7C 0020               1281              CMP         #mask6,D5
00001B84  6700 015A               1282              BEQ         DataReg5
00001B88                          1283  
00001B88  4245                    1284              CLR         D5
00001B8A  1A01                    1285              MOVE.B      D1,D5
00001B8C  CA7C 0040               1286              AND         #mask7,D5
00001B90  BA7C 0040               1287              CMP         #mask7,D5
00001B94  6700 018A               1288              BEQ         DataReg6
00001B98                          1289  
00001B98  4245                    1290              CLR         D5
00001B9A  1A01                    1291              MOVE.B      D1,D5
00001B9C  CA7C 0080               1292              AND         #mask8,D5
00001BA0  BA7C 0080               1293              CMP         #mask8,D5
00001BA4  6700 01BA               1294              BEQ         DataReg7
00001BA8                          1295              
00001BA8  6000 0A72               1296              BRA         invalid
00001BAC  6000 0A6E               1297              BRA         invalid        
00001BB0                          1298              
00001BB0                          1299  DataReg0
00001BB0  43F9 000026FA           1300              LEA         dispD0, A1          ; Output string D0
00001BB6  103C 000E               1301              MOVE.B      #14, D0             ; command for trap call to display message
00001BBA  4E4F                    1302              TRAP        #15                 ; trap call
00001BBC                          1303              
00001BBC  4245                    1304              CLR         D5
00001BBE  1A01                    1305              MOVE.B      D1,D5
00001BC0  CA7C 0002               1306              AND         #mask2,D5
00001BC4  BA7C 0002               1307              CMP         #mask2,D5
00001BC8  6700 0006               1308              BEQ         Reg0Cont
00001BCC  6000 01A2               1309              BRA         printMem
00001BD0                          1310  Reg0Cont        
00001BD0  43F9 00002647           1311              LEA         dec, A1             ; Output -
00001BD6  103C 000E               1312              MOVE.B      #14, D0             ; command for trap call to display message
00001BDA  4E4F                    1313              TRAP        #15                 ; trap call        
00001BDC  6000 0002               1314              BRA         DataReg1
00001BE0                          1315  
00001BE0                          1316  DataReg1
00001BE0  4245                    1317              CLR         D5
00001BE2  1A01                    1318              MOVE.B      D1,D5
00001BE4  CA7C 0005               1319              AND         #maskA,D5
00001BE8  BA7C 0005               1320              CMP         #maskA,D5
00001BEC  6700 0032               1321              BEQ         DataReg2
00001BF0                          1322              
00001BF0  43F9 000026FD           1323              LEA         dispD1, A1          ; Output string D0
00001BF6  103C 000E               1324              MOVE.B      #14, D0             ; command for trap call to display message
00001BFA  4E4F                    1325              TRAP        #15                 ; trap call
00001BFC                          1326              
00001BFC  4245                    1327              CLR         D5
00001BFE  1A01                    1328              MOVE.B      D1,D5
00001C00  CA7C 0004               1329              AND         #mask3,D5
00001C04  BA7C 0004               1330              CMP         #mask3,D5
00001C08  6700 0006               1331              BEQ         Reg1Cont
00001C0C  6000 0162               1332              BRA         printMem
00001C10                          1333  Reg1Cont        
00001C10  43F9 00002647           1334              LEA         dec, A1             ; Output -
00001C16  103C 000E               1335              MOVE.B      #14, D0             ; command for trap call to display message
00001C1A  4E4F                    1336              TRAP        #15                 ; trap call        
00001C1C  6000 0002               1337              BRA         DataReg2
00001C20                          1338  
00001C20                          1339  
00001C20                          1340  DataReg2
00001C20  4245                    1341              CLR         D5
00001C22  1A01                    1342              MOVE.B      D1,D5
00001C24  CA7C 000A               1343              AND         #maskB,D5
00001C28  BA7C 000A               1344              CMP         #maskB,D5
00001C2C  6700 0032               1345              BEQ         DataReg3
00001C30                          1346              
00001C30                          1347              
00001C30  43F9 00002700           1348              LEA         dispD2, A1          ; Output string D0
00001C36  103C 000E               1349              MOVE.B      #14, D0             ; command for trap call to display message
00001C3A  4E4F                    1350              TRAP        #15                 ; trap call
00001C3C                          1351              
00001C3C  4245                    1352              CLR         D5
00001C3E  1A01                    1353              MOVE.B      D1,D5
00001C40  CA7C 0008               1354              AND         #mask4,D5
00001C44  BA7C 0008               1355              CMP         #mask4,D5
00001C48  6700 0006               1356              BEQ         Reg2Cont
00001C4C  6000 0122               1357              BRA         printMem
00001C50                          1358  Reg2Cont        
00001C50  43F9 00002647           1359              LEA         dec, A1             ; Output -
00001C56  103C 000E               1360              MOVE.B      #14, D0             ; command for trap call to display message
00001C5A  4E4F                    1361              TRAP        #15                 ; trap call        
00001C5C  6000 0002               1362              BRA         DataReg3
00001C60                          1363  
00001C60                          1364  DataReg3
00001C60  4245                    1365              CLR         D5
00001C62  1A01                    1366              MOVE.B      D1,D5
00001C64  CA7C 0014               1367              AND         #maskC,D5
00001C68  BA7C 0014               1368              CMP         #maskC,D5
00001C6C  6700 0032               1369              BEQ         DataReg4
00001C70                          1370              
00001C70  43F9 00002703           1371              LEA         dispD3, A1          ; Output string D0
00001C76  103C 000E               1372              MOVE.B      #14, D0             ; command for trap call to display message
00001C7A  4E4F                    1373              TRAP        #15                 ; trap call
00001C7C                          1374              
00001C7C  4245                    1375              CLR         D5
00001C7E  1A01                    1376              MOVE.B      D1,D5
00001C80  CA7C 0010               1377              AND         #mask5,D5
00001C84  BA7C 0010               1378              CMP         #mask5,D5
00001C88  6700 0006               1379              BEQ         Reg3Cont
00001C8C  6000 00E2               1380              BRA         printMem
00001C90                          1381  Reg3Cont        
00001C90  43F9 00002647           1382              LEA         dec, A1             ; Output -
00001C96  103C 000E               1383              MOVE.B      #14, D0             ; command for trap call to display message
00001C9A  4E4F                    1384              TRAP        #15                 ; trap call        
00001C9C  6000 0002               1385              BRA         DataReg4
00001CA0                          1386  
00001CA0                          1387  
00001CA0                          1388  DataReg4
00001CA0  4245                    1389              CLR         D5
00001CA2  1A01                    1390              MOVE.B      D1,D5
00001CA4  CA7C 0028               1391              AND         #maskD,D5
00001CA8  BA7C 0028               1392              CMP         #maskD,D5
00001CAC  6700 0032               1393              BEQ         DataReg5
00001CB0                          1394              
00001CB0  43F9 00002706           1395              LEA         dispD4, A1          ; Output string D0
00001CB6  103C 000E               1396              MOVE.B      #14, D0             ; command for trap call to display message
00001CBA  4E4F                    1397              TRAP        #15                 ; trap call
00001CBC                          1398              
00001CBC  4245                    1399              CLR         D5
00001CBE  1A01                    1400              MOVE.B      D1,D5
00001CC0  CA7C 0020               1401              AND         #mask6,D5
00001CC4  BA7C 0020               1402              CMP         #mask6,D5
00001CC8  6700 0006               1403              BEQ         Reg4Cont
00001CCC  6000 00A2               1404              BRA         printMem
00001CD0                          1405  Reg4Cont        
00001CD0  43F9 00002647           1406              LEA         dec, A1             ; Output -
00001CD6  103C 000E               1407              MOVE.B      #14, D0             ; command for trap call to display message
00001CDA  4E4F                    1408              TRAP        #15                 ; trap call        
00001CDC  6000 0002               1409              BRA         DataReg5
00001CE0                          1410  
00001CE0                          1411  DataReg5
00001CE0  4245                    1412              CLR         D5
00001CE2  1A01                    1413              MOVE.B      D1,D5
00001CE4  CA7C 0050               1414              AND         #maskE,D5
00001CE8  BA7C 0050               1415              CMP         #maskE,D5
00001CEC  6700 0032               1416              BEQ         DataReg6
00001CF0                          1417              
00001CF0  43F9 00002709           1418              LEA         dispD5, A1          ; Output string D0
00001CF6  103C 000E               1419              MOVE.B      #14, D0             ; command for trap call to display message
00001CFA  4E4F                    1420              TRAP        #15                 ; trap call
00001CFC                          1421              
00001CFC  4245                    1422              CLR         D5
00001CFE  1A01                    1423              MOVE.B      D1,D5
00001D00  CA7C 0040               1424              AND         #mask7,D5
00001D04  BA7C 0040               1425              CMP         #mask7,D5
00001D08  6700 0006               1426              BEQ         Reg5Cont
00001D0C  6000 0062               1427              BRA         printMem
00001D10                          1428  Reg5Cont        
00001D10  43F9 00002647           1429              LEA         dec, A1             ; Output -
00001D16  103C 000E               1430              MOVE.B      #14, D0             ; command for trap call to display message
00001D1A  4E4F                    1431              TRAP        #15                 ; trap call        
00001D1C  6000 0042               1432              BRA         DataReg7
00001D20                          1433  
00001D20                          1434  DataReg6
00001D20  4245                    1435              CLR         D5
00001D22  1A01                    1436              MOVE.B      D1,D5
00001D24  CA7C 00A0               1437              AND         #maskF,D5
00001D28  BA7C 00A0               1438              CMP         #maskF,D5
00001D2C  6700 0032               1439              BEQ         DataReg7
00001D30                          1440  
00001D30  43F9 0000270C           1441              LEA         dispD6, A1          ; Output string D0
00001D36  103C 000E               1442              MOVE.B      #14, D0             ; command for trap call to display message
00001D3A  4E4F                    1443              TRAP        #15                 ; trap call
00001D3C                          1444              
00001D3C  4245                    1445              CLR         D5
00001D3E  1A01                    1446              MOVE.B      D1,D5
00001D40  CA7C 0080               1447              AND         #mask8,D5
00001D44  BA7C 0080               1448              CMP         #mask8,D5
00001D48  6700 0006               1449              BEQ         Reg6Cont
00001D4C  6000 0022               1450              BRA         printMem
00001D50                          1451  Reg6Cont        
00001D50  43F9 00002647           1452              LEA         dec, A1             ; Output -
00001D56  103C 000E               1453              MOVE.B      #14, D0             ; command for trap call to display message
00001D5A  4E4F                    1454              TRAP        #15                 ; trap call        
00001D5C  6000 0002               1455              BRA         DataReg7
00001D60                          1456  
00001D60                          1457  DataReg7    
00001D60  43F9 0000270F           1458              LEA         dispD7, A1             ; Output -
00001D66  103C 000E               1459              MOVE.B      #14, D0             ; command for trap call to display message
00001D6A  4E4F                    1460              TRAP        #15                 ; trap call        
00001D6C  6000 0002               1461              BRA         printMem            
00001D70                          1462  printMem                                    ; Made this function in order to reuse if DR is 1
00001D70  6000 0002               1463              BRA         printMemNow
00001D74                          1464  printMemNow               
00001D74  43F9 0000264B           1465              LEA         slash, A1           ; Display slash
00001D7A  103C 000E               1466              MOVE.B      #14, D0             ; command for trap call to display message
00001D7E  4E4F                    1467              TRAP        #15                 ; trap call
00001D80                          1468           
00001D80  4244                    1469              CLR         D4                  ; Using D4 to store predecrement mode addresses
00001D82  3801                    1470              MOVE.W      D1,D4               ; Stores bits for D0-D7
00001D84  E044                    1471              ASR         #eight,D4
00001D86                          1472              
00001D86  4245                    1473              CLR         D5
00001D88  1A04                    1474              MOVE.B      D4,D5
00001D8A  CA7C 0001               1475              AND         #mask1,D5
00001D8E  BA7C 0001               1476              CMP         #mask1,D5
00001D92  6700 0072               1477              BEQ         AddrReg0
00001D96                          1478              
00001D96  4245                    1479              CLR         D5
00001D98  1A04                    1480              MOVE.B      D4,D5
00001D9A  CA7C 0002               1481              AND         #mask2,D5
00001D9E  BA7C 0002               1482              CMP         #mask2,D5
00001DA2  6700 0092               1483              BEQ         AddrReg1
00001DA6                          1484  
00001DA6  4245                    1485              CLR         D5
00001DA8  1A04                    1486              MOVE.B      D4,D5
00001DAA  CA7C 0004               1487              AND         #mask3,D5
00001DAE  BA7C 0004               1488              CMP         #mask3,D5
00001DB2  6700 00C2               1489              BEQ         AddrReg2            
00001DB6                          1490              
00001DB6  4245                    1491              CLR         D5
00001DB8  1A04                    1492              MOVE.B      D4,D5
00001DBA  CA7C 0008               1493              AND         #mask4,D5
00001DBE  BA7C 0008               1494              CMP         #mask4,D5
00001DC2  6700 00F2               1495              BEQ         AddrReg3            
00001DC6                          1496              
00001DC6  4245                    1497              CLR         D5
00001DC8  1A04                    1498              MOVE.B      D4,D5
00001DCA  CA7C 0010               1499              AND         #mask5,D5
00001DCE  BA7C 0010               1500              CMP         #mask5,D5
00001DD2  6700 0122               1501              BEQ         AddrReg4
00001DD6                          1502  
00001DD6  4245                    1503              CLR         D5
00001DD8  1A04                    1504              MOVE.B      D4,D5
00001DDA  CA7C 0020               1505              AND         #mask6,D5
00001DDE  BA7C 0020               1506              CMP         #mask6,D5
00001DE2  6700 0152               1507              BEQ         AddrReg5
00001DE6                          1508  
00001DE6  4245                    1509              CLR         D5
00001DE8  1A04                    1510              MOVE.B      D4,D5
00001DEA  CA7C 0040               1511              AND         #mask7,D5
00001DEE  BA7C 0040               1512              CMP         #mask7,D5
00001DF2  6700 0182               1513              BEQ         AddrReg6
00001DF6                          1514  
00001DF6  4245                    1515              CLR         D5
00001DF8  1A04                    1516              MOVE.B      D4,D5
00001DFA  CA7C 0080               1517              AND         #mask8,D5
00001DFE  BA7C 0080               1518              CMP         #mask8,D5
00001E02  6700 01B2               1519              BEQ         AddrReg7
00001E06                          1520  AddrReg0
00001E06  43F9 000026E0           1521              LEA         dispA0, A1          ; Output string D0
00001E0C  103C 000E               1522              MOVE.B      #14, D0             ; command for trap call to display message
00001E10  4E4F                    1523              TRAP        #15                 ; trap call
00001E12                          1524              
00001E12  4245                    1525              CLR         D5
00001E14  1A01                    1526              MOVE.B      D1,D5
00001E16  CA7C 0002               1527              AND         #mask2,D5
00001E1A  BA7C 0002               1528              CMP         #mask2,D5
00001E1E  6700 0006               1529              BEQ         Addr0Cont
00001E22  6000 01A2               1530              BRA         endMOVE
00001E26                          1531  Addr0Cont        
00001E26  43F9 00002647           1532              LEA         dec, A1             ; Output -
00001E2C  103C 000E               1533              MOVE.B      #14, D0             ; command for trap call to display message
00001E30  4E4F                    1534              TRAP        #15                 ; trap call        
00001E32  6000 0002               1535              BRA         AddrReg1
00001E36                          1536  
00001E36                          1537  AddrReg1
00001E36  4245                    1538              CLR         D5
00001E38  1A04                    1539              MOVE.B      D4,D5
00001E3A  CA7C 0005               1540              AND         #maskA,D5
00001E3E  BA7C 0005               1541              CMP         #maskA,D5
00001E42  6700 0032               1542              BEQ         AddrReg2
00001E46                          1543              
00001E46  43F9 000026E3           1544              LEA         dispA1, A1          ; Output string D0
00001E4C  103C 000E               1545              MOVE.B      #14, D0             ; command for trap call to display message
00001E50  4E4F                    1546              TRAP        #15                 ; trap call
00001E52                          1547              
00001E52  4245                    1548              CLR         D5
00001E54  1A04                    1549              MOVE.B      D4,D5
00001E56  CA7C 0004               1550              AND         #mask3,D5
00001E5A  BA7C 0004               1551              CMP         #mask3,D5
00001E5E  6700 0006               1552              BEQ         Addr1Cont
00001E62  6000 0162               1553              BRA         endMOVE
00001E66                          1554  Addr1Cont        
00001E66  43F9 00002647           1555              LEA         dec, A1             ; Output -
00001E6C  103C 000E               1556              MOVE.B      #14, D0             ; command for trap call to display message
00001E70  4E4F                    1557              TRAP        #15                 ; trap call        
00001E72  6000 0002               1558              BRA         AddrReg2
00001E76                          1559  
00001E76                          1560  
00001E76                          1561  AddrReg2
00001E76  4245                    1562              CLR         D5
00001E78  1A04                    1563              MOVE.B      D4,D5
00001E7A  CA7C 000A               1564              AND         #maskB,D5
00001E7E  BA7C 000A               1565              CMP         #maskB,D5
00001E82  6700 0032               1566              BEQ         AddrReg3
00001E86                          1567              
00001E86                          1568              
00001E86  43F9 000026E6           1569              LEA         dispA2, A1          ; Output string D0
00001E8C  103C 000E               1570              MOVE.B      #14, D0             ; command for trap call to display message
00001E90  4E4F                    1571              TRAP        #15                 ; trap call
00001E92                          1572              
00001E92  4245                    1573              CLR         D5
00001E94  1A04                    1574              MOVE.B      D4,D5
00001E96  CA7C 0008               1575              AND         #mask4,D5
00001E9A  BA7C 0008               1576              CMP         #mask4,D5
00001E9E  6700 0006               1577              BEQ         Addr2Cont
00001EA2  6000 0122               1578              BRA         endMOVE
00001EA6                          1579  Addr2Cont        
00001EA6  43F9 00002647           1580              LEA         dec, A1             ; Output -
00001EAC  103C 000E               1581              MOVE.B      #14, D0             ; command for trap call to display message
00001EB0  4E4F                    1582              TRAP        #15                 ; trap call        
00001EB2  6000 0002               1583              BRA         AddrReg3
00001EB6                          1584  
00001EB6                          1585  AddrReg3
00001EB6  4245                    1586              CLR         D5
00001EB8  1A04                    1587              MOVE.B      D4,D5
00001EBA  CA7C 0014               1588              AND         #maskC,D5
00001EBE  BA7C 0014               1589              CMP         #maskC,D5
00001EC2  6700 0032               1590              BEQ         AddrReg4
00001EC6                          1591              
00001EC6  43F9 000026E9           1592              LEA         dispA3, A1          ; Output string D0
00001ECC  103C 000E               1593              MOVE.B      #14, D0             ; command for trap call to display message
00001ED0  4E4F                    1594              TRAP        #15                 ; trap call
00001ED2                          1595              
00001ED2  4245                    1596              CLR         D5
00001ED4  1A04                    1597              MOVE.B      D4,D5
00001ED6  CA7C 0010               1598              AND         #mask5,D5
00001EDA  BA7C 0010               1599              CMP         #mask5,D5
00001EDE  6700 0006               1600              BEQ         Addr3Cont
00001EE2  6000 00E2               1601              BRA         endMOVE
00001EE6                          1602  Addr3Cont        
00001EE6  43F9 00002647           1603              LEA         dec, A1             ; Output -
00001EEC  103C 000E               1604              MOVE.B      #14, D0             ; command for trap call to display message
00001EF0  4E4F                    1605              TRAP        #15                 ; trap call        
00001EF2  6000 0002               1606              BRA         AddrReg4
00001EF6                          1607  
00001EF6                          1608  
00001EF6                          1609  AddrReg4
00001EF6  4245                    1610              CLR         D5
00001EF8  1A04                    1611              MOVE.B      D4,D5
00001EFA  CA7C 0028               1612              AND         #maskD,D5
00001EFE  BA7C 0028               1613              CMP         #maskD,D5
00001F02  6700 0032               1614              BEQ         AddrReg5
00001F06                          1615              
00001F06  43F9 000026EC           1616              LEA         dispA4, A1          ; Output string D0
00001F0C  103C 000E               1617              MOVE.B      #14, D0             ; command for trap call to display message
00001F10  4E4F                    1618              TRAP        #15                 ; trap call
00001F12                          1619              
00001F12  4245                    1620              CLR         D5
00001F14  1A04                    1621              MOVE.B      D4,D5
00001F16  CA7C 0020               1622              AND         #mask6,D5
00001F1A  BA7C 0020               1623              CMP         #mask6,D5
00001F1E  6700 0006               1624              BEQ         Addr4Cont
00001F22  6000 00A2               1625              BRA         endMOVE
00001F26                          1626  Addr4Cont        
00001F26  43F9 00002647           1627              LEA         dec, A1             ; Output -
00001F2C  103C 000E               1628              MOVE.B      #14, D0             ; command for trap call to display message
00001F30  4E4F                    1629              TRAP        #15                 ; trap call        
00001F32  6000 0002               1630              BRA         AddrReg5
00001F36                          1631  AddrReg5
00001F36  4245                    1632              CLR         D5
00001F38  1A04                    1633              MOVE.B      D4,D5
00001F3A  CA7C 0050               1634              AND         #maskE,D5
00001F3E  BA7C 0050               1635              CMP         #maskE,D5
00001F42  6700 0032               1636              BEQ         AddrReg6
00001F46                          1637              
00001F46  43F9 000026EF           1638              LEA         dispA5, A1          ; Output string D0
00001F4C  103C 000E               1639              MOVE.B      #14, D0             ; command for trap call to display message
00001F50  4E4F                    1640              TRAP        #15                 ; trap call
00001F52                          1641              
00001F52  4245                    1642              CLR         D5
00001F54  1A04                    1643              MOVE.B      D4,D5
00001F56  CA7C 0040               1644              AND         #mask7,D5
00001F5A  BA7C 0040               1645              CMP         #mask7,D5
00001F5E  6700 0006               1646              BEQ         Addr5Cont
00001F62  6000 0062               1647              BRA         endMOVE
00001F66                          1648  Addr5Cont        
00001F66  43F9 00002647           1649              LEA         dec, A1             ; Output -
00001F6C  103C 000E               1650              MOVE.B      #14, D0             ; command for trap call to display message
00001F70  4E4F                    1651              TRAP        #15                 ; trap call        
00001F72  6000 0042               1652              BRA         AddrReg7
00001F76                          1653  
00001F76                          1654  AddrReg6
00001F76  4245                    1655              CLR         D5
00001F78  1A04                    1656              MOVE.B      D4,D5
00001F7A  CA7C 00A0               1657              AND         #maskF,D5
00001F7E  BA7C 00A0               1658              CMP         #maskF,D5
00001F82  6700 0032               1659              BEQ         AddrReg7
00001F86                          1660  
00001F86  43F9 000026F2           1661              LEA         dispA6, A1          ; Output string D0
00001F8C  103C 000E               1662              MOVE.B      #14, D0             ; command for trap call to display message
00001F90  4E4F                    1663              TRAP        #15                 ; trap call
00001F92                          1664              
00001F92  4245                    1665              CLR         D5
00001F94  1A04                    1666              MOVE.B      D4,D5
00001F96  CA7C 0080               1667              AND         #mask8,D5
00001F9A  BA7C 0080               1668              CMP         #mask8,D5
00001F9E  6700 0006               1669              BEQ         Addr6Cont
00001FA2  6000 0022               1670              BRA         endMOVE
00001FA6                          1671  Addr6Cont        
00001FA6  43F9 00002647           1672              LEA         dec, A1             ; Output -
00001FAC  103C 000E               1673              MOVE.B      #14, D0             ; command for trap call to display message
00001FB0  4E4F                    1674              TRAP        #15                 ; trap call        
00001FB2  6000 0002               1675              BRA         AddrReg7
00001FB6                          1676  
00001FB6                          1677  AddrReg7    
00001FB6  43F9 000026F5           1678              LEA         dispA7, A1          ; Output -
00001FBC  103C 000E               1679              MOVE.B      #14, D0             ; command for trap call to display message
00001FC0  4E4F                    1680              TRAP        #15                 ; trap call        
00001FC2  6000 0002               1681              BRA         endMOVE
00001FC6                          1682  
00001FC6                          1683  
00001FC6                          1684  
00001FC6                          1685  
00001FC6                          1686  endMOVE
00001FC6  4CDF 7EFF               1687              MOVEM.L  (SP)+, D0-D7/A1-A6
00001FCA  4E75                    1688              RTS
00001FCC                          1689  endMove1                                    ; Used if MOVEM has DR is 1
00001FCC  4CDF 7EFF               1690              MOVEM.L  (SP)+, D0-D7/A1-A6
00001FD0  4E75                    1691              RTS
00001FD2                          1692  
00001FD2                          1693  ***********************************************************************************************************
00001FD2                          1694  *
00001FD2                          1695  *                                           EA Print Check
00001FD2                          1696  *
00001FD2                          1697  ***********************************************************************************************************
00001FD2  48E7 FF7E               1698  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00001FD6                          1699  
00001FD6                          1700  
00001FD6  B43C 0000               1701              CMP.B       #zero, D2
00001FDA  6700 002E               1702              BEQ         pDataReg
00001FDE  B43C 0001               1703              CMP.B       #one, D2
00001FE2  6700 00E6               1704              BEQ         pAddrReg
00001FE6  B43C 0002               1705              CMP.B       #two, D2
00001FEA  6700 019E               1706              BEQ         pAddrDir
00001FEE  B43C 0003               1707              CMP.B       #three, D2
00001FF2  6700 02C2               1708              BEQ         pAddrPost
00001FF6  B43C 0004               1709              CMP.B       #four, D2
00001FFA  6700 0446               1710              BEQ         pAddrDec
00001FFE  B43C 0007               1711              CMP.B       #seven, D2
00002002  6700 0576               1712              BEQ         pHex
00002006  6000 0614               1713              BRA         invalid
0000200A                          1714  
0000200A                          1715  ***********************************************************************************************************
0000200A                          1716  * Data Register        
0000200A  B63C 0000               1717  pDataReg    CMP.B   #zero,D3
0000200E  6700 003A               1718              BEQ     displayD0
00002012  B63C 0001               1719              CMP.B   #one,D3
00002016  6700 0042               1720              BEQ     displayD1
0000201A  B63C 0002               1721              CMP.B   #two,D3
0000201E  6700 004A               1722              BEQ     displayD2
00002022  B63C 0003               1723              CMP.B   #three,D3
00002026  6700 0052               1724              BEQ     displayD3
0000202A  B63C 0004               1725              CMP.B   #four,D3
0000202E  6700 005A               1726              BEQ     displayD4
00002032  B63C 0005               1727              CMP.B   #five,D3
00002036  6700 0062               1728              BEQ     displayD5
0000203A  B63C 0006               1729              CMP.B   #six,D3
0000203E  6700 006A               1730              BEQ     displayD6
00002042  B63C 0007               1731              CMP.B   #seven,D3
00002046  6700 0072               1732              BEQ     displayD7
0000204A                          1733              
0000204A  43F9 000026FA           1734  displayD0   LEA         dispD0, A1          ; Display space
00002050  103C 000E               1735              MOVE.B      #14, D0             ; command for trap call to display message
00002054  4E4F                    1736              TRAP        #15                 ; trap call
00002056  6000 05D4               1737              BRA         endSUB              ; go to the end of the subroutine
0000205A                          1738              
0000205A  43F9 000026FD           1739  displayD1   LEA         dispD1, A1          ; Display space
00002060  103C 000E               1740              MOVE.B      #14, D0             ; command for trap call to display message
00002064  4E4F                    1741              TRAP        #15                 ; trap call
00002066  6000 05C4               1742              BRA         endSUB              ; go to the end of the subroutine
0000206A                          1743  
0000206A  43F9 00002700           1744  displayD2   LEA         dispD2, A1          ; Display space
00002070  103C 000E               1745              MOVE.B      #14, D0             ; command for trap call to display message
00002074  4E4F                    1746              TRAP        #15                 ; trap call
00002076  6000 05B4               1747              BRA         endSUB              ; go to the end of the subroutine
0000207A                          1748  
0000207A  43F9 00002703           1749  displayD3   LEA         dispD3, A1          ; Display space
00002080  103C 000E               1750              MOVE.B      #14, D0             ; command for trap call to display message
00002084  4E4F                    1751              TRAP        #15                 ; trap call
00002086  6000 05A4               1752              BRA         endSUB              ; go to the end of the subroutine
0000208A                          1753  
0000208A  43F9 00002706           1754  displayD4   LEA         dispD4, A1          ; Display space
00002090  103C 000E               1755              MOVE.B      #14, D0             ; command for trap call to display message
00002094  4E4F                    1756              TRAP        #15                 ; trap call
00002096  6000 0594               1757              BRA         endSUB              ; go to the end of the subroutine
0000209A                          1758  
0000209A  43F9 00002709           1759  displayD5   LEA         dispD5, A1          ; Display space
000020A0  103C 000E               1760              MOVE.B      #14, D0             ; command for trap call to display message
000020A4  4E4F                    1761              TRAP        #15                 ; trap call
000020A6  6000 0584               1762              BRA         endSUB              ; go to the end of the subroutine
000020AA                          1763  
000020AA  43F9 0000270C           1764  displayD6   LEA         dispD6, A1          ; Display space
000020B0  103C 000E               1765              MOVE.B      #14, D0             ; command for trap call to display message
000020B4  4E4F                    1766              TRAP        #15                 ; trap call
000020B6  6000 0574               1767              BRA         endSUB              ; go to the end of the subroutine
000020BA                          1768  
000020BA  43F9 0000270F           1769  displayD7   LEA         dispD7, A1          ; Display space
000020C0  103C 000E               1770              MOVE.B      #14, D0             ; command for trap call to display message
000020C4  4E4F                    1771              TRAP        #15                 ; trap call
000020C6  6000 0564               1772              BRA         endSUB              ; go to the end of the subroutine
000020CA                          1773  ***********************************************************************************************************
000020CA                          1774  * Address Register
000020CA  B63C 0000               1775  pAddrReg    CMP.B   #zero,D3
000020CE  6700 003A               1776              BEQ     displayA0
000020D2  B63C 0001               1777              CMP.B   #one,D3
000020D6  6700 0042               1778              BEQ     displayA1
000020DA  B63C 0002               1779              CMP.B   #two,D3
000020DE  6700 004A               1780              BEQ     displayA2
000020E2  B63C 0003               1781              CMP.B   #three,D3
000020E6  6700 0052               1782              BEQ     displayA3
000020EA  B63C 0004               1783              CMP.B   #four,D3
000020EE  6700 005A               1784              BEQ     displayA4
000020F2  B63C 0005               1785              CMP.B   #five,D3
000020F6  6700 0062               1786              BEQ     displayA5
000020FA  B63C 0006               1787              CMP.B   #six,D3
000020FE  6700 006A               1788              BEQ     displayA6
00002102  B63C 0007               1789              CMP.B   #seven,D3
00002106  6700 0072               1790              BEQ     displayA7
0000210A                          1791              
0000210A  43F9 000026E0           1792  displayA0   LEA         dispA0, A1          ; Display space
00002110  103C 000E               1793              MOVE.B      #14, D0             ; command for trap call to display message
00002114  4E4F                    1794              TRAP        #15                 ; trap call
00002116  6000 0514               1795              BRA         endSUB              ; go to the end of the subroutine
0000211A                          1796              
0000211A  43F9 000026E3           1797  displayA1   LEA         dispA1, A1          ; Display space
00002120  103C 000E               1798              MOVE.B      #14, D0             ; command for trap call to display message
00002124  4E4F                    1799              TRAP        #15                 ; trap call
00002126  6000 0504               1800              BRA         endSUB              ; go to the end of the subroutine
0000212A                          1801  
0000212A  43F9 000026E6           1802  displayA2   LEA         dispA2, A1          ; Display space
00002130  103C 000E               1803              MOVE.B      #14, D0             ; command for trap call to display message
00002134  4E4F                    1804              TRAP        #15                 ; trap call
00002136  6000 04F4               1805              BRA         endSUB              ; go to the end of the subroutine
0000213A                          1806  
0000213A  43F9 000026E9           1807  displayA3   LEA         dispA3, A1          ; Display space
00002140  103C 000E               1808              MOVE.B      #14, D0             ; command for trap call to display message
00002144  4E4F                    1809              TRAP        #15                 ; trap call
00002146  6000 04E4               1810              BRA         endSUB              ; go to the end of the subroutine
0000214A                          1811  
0000214A  43F9 000026EC           1812  displayA4   LEA         dispA4, A1          ; Display space
00002150  103C 000E               1813              MOVE.B      #14, D0             ; command for trap call to display message
00002154  4E4F                    1814              TRAP        #15                 ; trap call
00002156  6000 04D4               1815              BRA         endSUB              ; go to the end of the subroutine
0000215A                          1816  
0000215A  43F9 000026EF           1817  displayA5   LEA         dispA5, A1          ; Display space
00002160  103C 000E               1818              MOVE.B      #14, D0             ; command for trap call to display message
00002164  4E4F                    1819              TRAP        #15                 ; trap call
00002166  6000 04C4               1820              BRA         endSUB              ; go to the end of the subroutine
0000216A                          1821  
0000216A  43F9 000026F2           1822  displayA6   LEA         dispA6, A1          ; Display space
00002170  103C 000E               1823              MOVE.B      #14, D0             ; command for trap call to display message
00002174  4E4F                    1824              TRAP        #15                 ; trap call
00002176  6000 04B4               1825              BRA         endSUB              ; go to the end of the subroutine
0000217A                          1826  
0000217A  43F9 000026F5           1827  displayA7   LEA         dispA7, A1          ; Display space
00002180  103C 000E               1828              MOVE.B      #14, D0             ; command for trap call to display message
00002184  4E4F                    1829              TRAP        #15                 ; trap call
00002186  6000 04A4               1830              BRA         endSUB              ; go to the end of the subroutine
0000218A                          1831  
0000218A                          1832  ***********************************************************************************************************
0000218A                          1833  * Address Register Direct
0000218A                          1834  
0000218A  43F9 00002643           1835  pAddrDir    LEA         opPer, A1           ; Display space
00002190  103C 000E               1836              MOVE.B      #14, D0             ; command for trap call to display message
00002194  4E4F                    1837              TRAP        #15                 ; trap call
00002196                          1838              
00002196  B63C 0000               1839              CMP.B   #zero,D3
0000219A  6700 003A               1840              BEQ     displayA0A
0000219E  B63C 0001               1841              CMP.B   #one,D3
000021A2  6700 004E               1842              BEQ     displayA1A
000021A6  B63C 0002               1843              CMP.B   #two,D3
000021AA  6700 0062               1844              BEQ     displayA2A
000021AE  B63C 0003               1845              CMP.B   #three,D3
000021B2  6700 0076               1846              BEQ     displayA3A
000021B6  B63C 0004               1847              CMP.B   #four,D3
000021BA  6700 008A               1848              BEQ     displayA4A
000021BE  B63C 0005               1849              CMP.B   #five,D3
000021C2  6700 009E               1850              BEQ     displayA5A
000021C6  B63C 0006               1851              CMP.B   #six,D3
000021CA  6700 00B2               1852              BEQ     displayA6A
000021CE  B63C 0007               1853              CMP.B   #seven,D3
000021D2  6700 00C6               1854              BEQ     displayA7A
000021D6                          1855              
000021D6  43F9 000026E0           1856  displayA0A  LEA         dispA0, A1          ; Display space
000021DC  103C 000E               1857              MOVE.B      #14, D0             ; command for trap call to display message
000021E0  4E4F                    1858              TRAP        #15                 ; trap call
000021E2  43F9 00002645           1859              LEA         clPer, A1           ; Display space
000021E8  103C 000E               1860              MOVE.B      #14, D0             ; command for trap call to display message
000021EC  4E4F                    1861              TRAP        #15                 ; trap call
000021EE  6000 043C               1862              BRA         endSUB              ; go to the end of the subroutine
000021F2                          1863              
000021F2  43F9 000026E3           1864  displayA1A  LEA         dispA1, A1          ; Display space
000021F8  103C 000E               1865              MOVE.B      #14, D0             ; command for trap call to display message
000021FC  4E4F                    1866              TRAP        #15                 ; trap call
000021FE  43F9 00002645           1867              LEA         clPer, A1           ; Display space
00002204  103C 000E               1868              MOVE.B      #14, D0             ; command for trap call to display message
00002208  4E4F                    1869              TRAP        #15                 ; trap call
0000220A  6000 0420               1870              BRA         endSUB              ; go to the end of the subroutine
0000220E                          1871  
0000220E  43F9 000026E6           1872  displayA2A  LEA         dispA2, A1          ; Display space
00002214  103C 000E               1873              MOVE.B      #14, D0             ; command for trap call to display message
00002218  4E4F                    1874              TRAP        #15                 ; trap call
0000221A  43F9 00002645           1875              LEA         clPer, A1           ; Display space
00002220  103C 000E               1876              MOVE.B      #14, D0             ; command for trap call to display message
00002224  4E4F                    1877              TRAP        #15                 ; trap call
00002226  6000 0404               1878              BRA         endSUB              ; go to the end of the subroutine
0000222A                          1879  
0000222A  43F9 000026E9           1880  displayA3A  LEA         dispA3, A1          ; Display space
00002230  103C 000E               1881              MOVE.B      #14, D0             ; command for trap call to display message
00002234  4E4F                    1882              TRAP        #15                 ; trap call
00002236  43F9 00002645           1883              LEA         clPer, A1           ; Display space
0000223C  103C 000E               1884              MOVE.B      #14, D0             ; command for trap call to display message
00002240  4E4F                    1885              TRAP        #15                 ; trap call
00002242  6000 03E8               1886              BRA         endSUB              ; go to the end of the subroutine
00002246                          1887  
00002246  43F9 000026EC           1888  displayA4A  LEA         dispA4, A1          ; Display space
0000224C  103C 000E               1889              MOVE.B      #14, D0             ; command for trap call to display message
00002250  4E4F                    1890              TRAP        #15                 ; trap call
00002252  43F9 00002645           1891              LEA         clPer, A1           ; Display space
00002258  103C 000E               1892              MOVE.B      #14, D0             ; command for trap call to display message
0000225C  4E4F                    1893              TRAP        #15                 ; trap call
0000225E  6000 03CC               1894              BRA         endSUB              ; go to the end of the subroutine
00002262                          1895  
00002262  43F9 000026EF           1896  displayA5A  LEA         dispA5, A1          ; Display space
00002268  103C 000E               1897              MOVE.B      #14, D0             ; command for trap call to display message
0000226C  4E4F                    1898              TRAP        #15                 ; trap call
0000226E  43F9 00002645           1899              LEA         clPer, A1           ; Display space
00002274  103C 000E               1900              MOVE.B      #14, D0             ; command for trap call to display message
00002278  4E4F                    1901              TRAP        #15                 ; trap call
0000227A  6000 03B0               1902              BRA         endSUB              ; go to the end of the subroutine
0000227E                          1903  
0000227E  43F9 000026F2           1904  displayA6A  LEA         dispA6, A1          ; Display space
00002284  103C 000E               1905              MOVE.B      #14, D0             ; command for trap call to display message
00002288  4E4F                    1906              TRAP        #15                 ; trap call
0000228A  43F9 00002645           1907              LEA         clPer, A1           ; Display space
00002290  103C 000E               1908              MOVE.B      #14, D0             ; command for trap call to display message
00002294  4E4F                    1909              TRAP        #15                 ; trap call
00002296  6000 0394               1910              BRA         endSUB              ; go to the end of the subroutine
0000229A                          1911  
0000229A  43F9 000026F5           1912  displayA7A  LEA         dispA7, A1          ; Display space
000022A0  103C 000E               1913              MOVE.B      #14, D0             ; command for trap call to display message
000022A4  4E4F                    1914              TRAP        #15                 ; trap call
000022A6  43F9 00002645           1915              LEA         clPer, A1           ; Display space
000022AC  103C 000E               1916              MOVE.B      #14, D0             ; command for trap call to display message
000022B0  4E4F                    1917              TRAP        #15                 ; trap call
000022B2  6000 0378               1918              BRA         endSUB              ; go to the end of the subroutine
000022B6                          1919              
000022B6                          1920  ***********************************************************************************************************
000022B6                          1921  * Addr Postincrement
000022B6                          1922              
000022B6  43F9 00002643           1923  pAddrPost   LEA         opPer, A1           ; Display space
000022BC  103C 000E               1924              MOVE.B      #14, D0             ; command for trap call to display message
000022C0  4E4F                    1925              TRAP        #15                 ; trap call
000022C2                          1926              
000022C2  B63C 0000               1927              CMP.B   #zero,D3
000022C6  6700 003A               1928              BEQ     displayA0P
000022CA  B63C 0001               1929              CMP.B   #one,D3
000022CE  6700 005A               1930              BEQ     displayA1P
000022D2  B63C 0002               1931              CMP.B   #two,D3
000022D6  6700 007A               1932              BEQ     displayA2P
000022DA  B63C 0003               1933              CMP.B   #three,D3
000022DE  6700 009A               1934              BEQ     displayA3P
000022E2  B63C 0004               1935              CMP.B   #four,D3
000022E6  6700 00BA               1936              BEQ     displayA4P
000022EA  B63C 0005               1937              CMP.B   #five,D3
000022EE  6700 00DA               1938              BEQ     displayA5P
000022F2  B63C 0006               1939              CMP.B   #six,D3
000022F6  6700 00FA               1940              BEQ     displayA6P
000022FA  B63C 0007               1941              CMP.B   #seven,D3
000022FE  6700 011A               1942              BEQ     displayA7P
00002302                          1943              
00002302  43F9 000026E0           1944  displayA0P  LEA         dispA0, A1          ; Display space
00002308  103C 000E               1945              MOVE.B      #14, D0             ; command for trap call to display message
0000230C  4E4F                    1946              TRAP        #15                 ; trap call
0000230E  43F9 00002645           1947              LEA         clPer, A1           ; Display space
00002314  103C 000E               1948              MOVE.B      #14, D0             ; command for trap call to display message
00002318  4E4F                    1949              TRAP        #15                 ; trap call
0000231A  43F9 00002649           1950              LEA         inc, A1             ; Display space
00002320  103C 000E               1951              MOVE.B      #14, D0             ; command for trap call to display message
00002324  4E4F                    1952              TRAP        #15                 ; trap call
00002326  6000 0304               1953              BRA         endSUB              ; go to the end of the subroutine
0000232A                          1954              
0000232A  43F9 000026E3           1955  displayA1P  LEA         dispA1, A1          ; Display space
00002330  103C 000E               1956              MOVE.B      #14, D0             ; command for trap call to display message
00002334  4E4F                    1957              TRAP        #15                 ; trap call
00002336  43F9 00002645           1958              LEA         clPer, A1           ; Display space
0000233C  103C 000E               1959              MOVE.B      #14, D0             ; command for trap call to display message
00002340  4E4F                    1960              TRAP        #15                 ; trap call
00002342  43F9 00002649           1961              LEA         inc, A1             ; Display space
00002348  103C 000E               1962              MOVE.B      #14, D0             ; command for trap call to display message
0000234C  4E4F                    1963              TRAP        #15                 ; trap call
0000234E  6000 02DC               1964              BRA         endSUB              ; go to the end of the subroutine
00002352                          1965  
00002352  43F9 000026E6           1966  displayA2P  LEA         dispA2, A1          ; Display space
00002358  103C 000E               1967              MOVE.B      #14, D0             ; command for trap call to display message
0000235C  4E4F                    1968              TRAP        #15                 ; trap call
0000235E  43F9 00002645           1969              LEA         clPer, A1           ; Display space
00002364  103C 000E               1970              MOVE.B      #14, D0             ; command for trap call to display message
00002368  4E4F                    1971              TRAP        #15                 ; trap call
0000236A  43F9 00002649           1972              LEA         inc, A1             ; Display space
00002370  103C 000E               1973              MOVE.B      #14, D0             ; command for trap call to display message
00002374  4E4F                    1974              TRAP        #15                 ; trap call
00002376  6000 02B4               1975              BRA         endSUB              ; go to the end of the subroutine
0000237A                          1976  
0000237A  43F9 000026E9           1977  displayA3P  LEA         dispA3, A1          ; Display space
00002380  103C 000E               1978              MOVE.B      #14, D0             ; command for trap call to display message
00002384  4E4F                    1979              TRAP        #15                 ; trap call
00002386  43F9 00002645           1980              LEA         clPer, A1           ; Display space
0000238C  103C 000E               1981              MOVE.B      #14, D0             ; command for trap call to display message
00002390  4E4F                    1982              TRAP        #15                 ; trap call
00002392  43F9 00002649           1983              LEA         inc, A1             ; Display space
00002398  103C 000E               1984              MOVE.B      #14, D0             ; command for trap call to display message
0000239C  4E4F                    1985              TRAP        #15                 ; trap call
0000239E  6000 028C               1986              BRA         endSUB              ; go to the end of the subroutine
000023A2                          1987  
000023A2  43F9 000026EC           1988  displayA4P  LEA         dispA4, A1          ; Display space
000023A8  103C 000E               1989              MOVE.B      #14, D0             ; command for trap call to display message
000023AC  4E4F                    1990              TRAP        #15                 ; trap call
000023AE  43F9 00002645           1991              LEA         clPer, A1           ; Display space
000023B4  103C 000E               1992              MOVE.B      #14, D0             ; command for trap call to display message
000023B8  4E4F                    1993              TRAP        #15                 ; trap call
000023BA  43F9 00002649           1994              LEA         inc, A1             ; Display space
000023C0  103C 000E               1995              MOVE.B      #14, D0             ; command for trap call to display message
000023C4  4E4F                    1996              TRAP        #15                 ; trap call
000023C6  6000 0264               1997              BRA         endSUB              ; go to the end of the subroutine
000023CA                          1998  
000023CA  43F9 000026EF           1999  displayA5P  LEA         dispA5, A1          ; Display space
000023D0  103C 000E               2000              MOVE.B      #14, D0             ; command for trap call to display message
000023D4  4E4F                    2001              TRAP        #15                 ; trap call
000023D6  43F9 00002645           2002              LEA         clPer, A1           ; Display space
000023DC  103C 000E               2003              MOVE.B      #14, D0             ; command for trap call to display message
000023E0  4E4F                    2004              TRAP        #15                 ; trap call
000023E2  43F9 00002649           2005              LEA         inc, A1             ; Display space
000023E8  103C 000E               2006              MOVE.B      #14, D0             ; command for trap call to display message
000023EC  4E4F                    2007              TRAP        #15                 ; trap call
000023EE  6000 023C               2008              BRA         endSUB              ; go to the end of the subroutine
000023F2                          2009  
000023F2  43F9 000026F2           2010  displayA6P  LEA         dispA6, A1          ; Display space
000023F8  103C 000E               2011              MOVE.B      #14, D0             ; command for trap call to display message
000023FC  4E4F                    2012              TRAP        #15                 ; trap call
000023FE  43F9 00002645           2013              LEA         clPer, A1           ; Display space
00002404  103C 000E               2014              MOVE.B      #14, D0             ; command for trap call to display message
00002408  4E4F                    2015              TRAP        #15                 ; trap call
0000240A  43F9 00002649           2016              LEA         inc, A1             ; Display space
00002410  103C 000E               2017              MOVE.B      #14, D0             ; command for trap call to display message
00002414  4E4F                    2018              TRAP        #15                 ; trap call
00002416  6000 0214               2019              BRA         endSUB              ; go to the end of the subroutine
0000241A                          2020  
0000241A  43F9 000026F5           2021  displayA7P  LEA         dispA7, A1          ; Display space
00002420  103C 000E               2022              MOVE.B      #14, D0             ; command for trap call to display message
00002424  4E4F                    2023              TRAP        #15                 ; trap call
00002426  43F9 00002645           2024              LEA         clPer, A1           ; Display space
0000242C  103C 000E               2025              MOVE.B      #14, D0             ; command for trap call to display message
00002430  4E4F                    2026              TRAP        #15                 ; trap call
00002432  43F9 00002649           2027              LEA         inc, A1             ; Display space
00002438  103C 000E               2028              MOVE.B      #14, D0             ; command for trap call to display message
0000243C  4E4F                    2029              TRAP        #15                 ; trap call
0000243E  6000 01EC               2030              BRA         endSUB              ; go to the end of the subroutine
00002442                          2031  
00002442                          2032  ***********************************************************************************************************
00002442                          2033  * Addr Postdecrement
00002442                          2034  
00002442  43F9 00002647           2035  pAddrDec    LEA         dec, A1             ; Display space
00002448  103C 000E               2036              MOVE.B      #14, D0             ; command for trap call to display message
0000244C  4E4F                    2037              TRAP        #15                 ; trap call
0000244E                          2038              
0000244E  43F9 00002643           2039              LEA         opPer, A1           ; Display space
00002454  103C 000E               2040              MOVE.B      #14, D0             ; command for trap call to display message
00002458  4E4F                    2041              TRAP        #15                 ; trap call
0000245A                          2042              
0000245A  B63C 0000               2043              CMP.B   #zero,D3
0000245E  6700 003A               2044              BEQ     displayA0D
00002462  B63C 0001               2045              CMP.B   #one,D3
00002466  6700 004E               2046              BEQ     displayA1D
0000246A  B63C 0002               2047              CMP.B   #two,D3
0000246E  6700 0062               2048              BEQ     displayA2D
00002472  B63C 0003               2049              CMP.B   #three,D3
00002476  6700 0076               2050              BEQ     displayA3D
0000247A  B63C 0004               2051              CMP.B   #four,D3
0000247E  6700 008A               2052              BEQ     displayA4D
00002482  B63C 0005               2053              CMP.B   #five,D3
00002486  6700 009E               2054              BEQ     displayA5D
0000248A  B63C 0006               2055              CMP.B   #six,D3
0000248E  6700 00B2               2056              BEQ     displayA6D
00002492  B63C 0007               2057              CMP.B   #seven,D3
00002496  6700 00C6               2058              BEQ     displayA7D
0000249A                          2059              
0000249A  43F9 000026E0           2060  displayA0D  LEA         dispA0, A1          ; Display space
000024A0  103C 000E               2061              MOVE.B      #14, D0             ; command for trap call to display message
000024A4  4E4F                    2062              TRAP        #15                 ; trap call
000024A6  43F9 00002645           2063              LEA         clPer, A1           ; Display space
000024AC  103C 000E               2064              MOVE.B      #14, D0             ; command for trap call to display message
000024B0  4E4F                    2065              TRAP        #15                 ; trap call
000024B2  6000 0178               2066              BRA         endSUB              ; go to the end of the subroutine
000024B6                          2067              
000024B6  43F9 000026E3           2068  displayA1D  LEA         dispA1, A1          ; Display space
000024BC  103C 000E               2069              MOVE.B      #14, D0             ; command for trap call to display message
000024C0  4E4F                    2070              TRAP        #15                 ; trap call
000024C2  43F9 00002645           2071              LEA         clPer, A1           ; Display space
000024C8  103C 000E               2072              MOVE.B      #14, D0             ; command for trap call to display message
000024CC  4E4F                    2073              TRAP        #15                 ; trap call
000024CE  6000 015C               2074              BRA         endSUB              ; go to the end of the subroutine
000024D2                          2075  
000024D2  43F9 000026E6           2076  displayA2D  LEA         dispA2, A1          ; Display space
000024D8  103C 000E               2077              MOVE.B      #14, D0             ; command for trap call to display message
000024DC  4E4F                    2078              TRAP        #15                 ; trap call
000024DE  43F9 00002645           2079              LEA         clPer, A1           ; Display space
000024E4  103C 000E               2080              MOVE.B      #14, D0             ; command for trap call to display message
000024E8  4E4F                    2081              TRAP        #15                 ; trap call
000024EA  6000 0140               2082              BRA         endSUB              ; go to the end of the subroutine
000024EE                          2083  
000024EE  43F9 000026E9           2084  displayA3D  LEA         dispA3, A1          ; Display space
000024F4  103C 000E               2085              MOVE.B      #14, D0             ; command for trap call to display message
000024F8  4E4F                    2086              TRAP        #15                 ; trap call
000024FA  43F9 00002645           2087              LEA         clPer, A1           ; Display space
00002500  103C 000E               2088              MOVE.B      #14, D0             ; command for trap call to display message
00002504  4E4F                    2089              TRAP        #15                 ; trap call
00002506  6000 0124               2090              BRA         endSUB              ; go to the end of the subroutine
0000250A                          2091  
0000250A  43F9 000026EC           2092  displayA4D  LEA         dispA4, A1          ; Display space
00002510  103C 000E               2093              MOVE.B      #14, D0             ; command for trap call to display message
00002514  4E4F                    2094              TRAP        #15                 ; trap call
00002516  43F9 00002645           2095              LEA         clPer, A1           ; Display space
0000251C  103C 000E               2096              MOVE.B      #14, D0             ; command for trap call to display message
00002520  4E4F                    2097              TRAP        #15                 ; trap call
00002522  6000 0108               2098              BRA         endSUB              ; go to the end of the subroutine
00002526                          2099  
00002526  43F9 000026EF           2100  displayA5D  LEA         dispA5, A1          ; Display space
0000252C  103C 000E               2101              MOVE.B      #14, D0             ; command for trap call to display message
00002530  4E4F                    2102              TRAP        #15                 ; trap call
00002532  43F9 00002645           2103              LEA         clPer, A1           ; Display space
00002538  103C 000E               2104              MOVE.B      #14, D0             ; command for trap call to display message
0000253C  4E4F                    2105              TRAP        #15                 ; trap call
0000253E  6000 00EC               2106              BRA         endSUB              ; go to the end of the subroutine
00002542                          2107  
00002542  43F9 000026F2           2108  displayA6D  LEA         dispA6, A1          ; Display space
00002548  103C 000E               2109              MOVE.B      #14, D0             ; command for trap call to display message
0000254C  4E4F                    2110              TRAP        #15                 ; trap call
0000254E  43F9 00002645           2111              LEA         clPer, A1           ; Display space
00002554  103C 000E               2112              MOVE.B      #14, D0             ; command for trap call to display message
00002558  4E4F                    2113              TRAP        #15                 ; trap call
0000255A  6000 00D0               2114              BRA         endSUB              ; go to the end of the subroutine
0000255E                          2115  
0000255E  43F9 000026F5           2116  displayA7D  LEA         dispA7, A1          ; Display space
00002564  103C 000E               2117              MOVE.B      #14, D0             ; command for trap call to display message
00002568  4E4F                    2118              TRAP        #15                 ; trap call
0000256A  43F9 00002645           2119              LEA         clPer, A1           ; Display space
00002570  103C 000E               2120              MOVE.B      #14, D0             ; command for trap call to display message
00002574  4E4F                    2121              TRAP        #15                 ; trap call
00002576  6000 00B4               2122              BRA         endSUB              ; go to the end of the subroutine
0000257A                          2123  
0000257A                          2124  
0000257A                          2125  ***********************************************************************************************************
0000257A                          2126  * Absolute Address
0000257A  B63C 0000               2127  pHex        CMP.B       #zero, D3
0000257E  6700 0012               2128              BEQ         AbsShort
00002582  B63C 0001               2129              CMP.B       #one, D3
00002586  6700 003C               2130              BEQ         AbsLong
0000258A  B63C 0004               2131              CMP.B       #four, D3
0000258E  6700 0066               2132              BEQ         DispImm
00002592                          2133              
00002592  43F9 00002643           2134  AbsShort    LEA         opPer, A1           ; Display space
00002598  103C 000E               2135              MOVE.B      #14, D0             ; command for trap call to display message
0000259C  4E4F                    2136              TRAP        #15                 ; trap call
0000259E                          2137              
0000259E  43F9 0000263F           2138              LEA         dispHex, A1         ; Display space
000025A4  103C 000E               2139              MOVE.B      #14, D0             ; command for trap call to display message
000025A8  4E4F                    2140              TRAP        #15                 ; trap call
000025AA                          2141              
000025AA  4241                    2142              CLR         D1
000025AC  3218                    2143              MOVE.W      (A0)+, D1
000025AE                          2144              
000025AE  103C 0003               2145              MOVE.B      #3, D0
000025B2  4E4F                    2146              TRAP        #15
000025B4                          2147              
000025B4  43F9 00002645           2148              LEA         clPer, A1           ; Display space
000025BA  103C 000E               2149              MOVE.B      #14, D0             ; command for trap call to display message
000025BE  4E4F                    2150              TRAP        #15                 ; trap call
000025C0                          2151              
000025C0  6000 006A               2152              BRA         endSub
000025C4                          2153              
000025C4  43F9 00002643           2154  AbsLong     LEA         opPer, A1           ; Display space
000025CA  103C 000E               2155              MOVE.B      #14, D0             ; command for trap call to display message
000025CE  4E4F                    2156              TRAP        #15                 ; trap call
000025D0                          2157              
000025D0  43F9 0000263F           2158              LEA         dispHex, A1         ; Display space
000025D6  103C 000E               2159              MOVE.B      #14, D0             ; command for trap call to display message
000025DA  4E4F                    2160              TRAP        #15                 ; trap call
000025DC                          2161              
000025DC  4241                    2162              CLR         D1
000025DE  2218                    2163              MOVE.L      (A0)+, D1
000025E0                          2164              
000025E0  103C 0003               2165              MOVE.B      #3, D0
000025E4  4E4F                    2166              TRAP        #15
000025E6                          2167              
000025E6  43F9 00002645           2168              LEA         clPer, A1           ; Display space
000025EC  103C 000E               2169              MOVE.B      #14, D0             ; command for trap call to display message
000025F0  4E4F                    2170              TRAP        #15                 ; trap call
000025F2                          2171              
000025F2  6000 0038               2172              BRA         endSub
000025F6                          2173  
000025F6  43F9 0000263D           2174  DispImm     LEA         hashTag, A1         ; Display space
000025FC  103C 000E               2175              MOVE.B      #14, D0             ; command for trap call to display message
00002600  4E4F                    2176              TRAP        #15                 ; trap call
00002602                          2177              
00002602  4241                    2178              CLR         D1
00002604  3218                    2179              MOVE.W      (A0)+, D1
00002606                          2180  
00002606  43F9 0000263F           2181              LEA         dispHex, A1         ; Display space
0000260C  103C 000E               2182              MOVE.B      #14, D0             ; command for trap call to display message
00002610  4E4F                    2183              TRAP        #15                 ; trap call
00002612                          2184              
00002612  103C 0003               2185              MOVE.B      #3, D0
00002616  4E4F                    2186              TRAP        #15
00002618                          2187  
00002618  6000 0012               2188              BRA         endSub
0000261C                          2189  
0000261C                          2190  invalid
0000261C                          2191  
0000261C  43F9 00002712           2192              LEA         inv, A1         ; Display space
00002622  103C 000E               2193              MOVE.B      #14, D0             ; command for trap call to display message
00002626  4E4F                    2194              TRAP        #15                 ; trap call
00002628                          2195              
00002628  6000 0008               2196              BRA         endProg
0000262C                          2197  
0000262C                          2198  endSUB
0000262C                          2199          
0000262C  4CDF 7EFF               2200          MOVEM.L  (SP)+, D0-D7/A1-A6
00002630  4E75                    2201          RTS
00002632                          2202  
00002632                          2203  ***********************************************************************************************************
00002632                          2204  ***********************************************************************************************************
00002632                          2205  ***********************************************************************************************************
00002632                          2206  
00002632                          2207  printInvalid
00002632                          2208  endPROG    
00002632                          2209  
00002632  FFFF FFFF               2210      SIMHALT                             ; halt simulator
00002636                          2211  
00002636= 20 0D 0A 00             2212  newLine     DC.B    ' ', CR, LF, 0
0000263A= 20 20 00                2213  space       DC.B    '  ', 0
0000263D                          2214  
0000263D= 23 00                   2215  hashTag     DC.B    '#', 0
0000263F= 24 00                   2216  dispHex     DC.B    '$', 0
00002641= 2C 00                   2217  comma       DC.B    ',', 0
00002643                          2218  
00002643= 28 00                   2219  opPer       DC.B    '(', 0
00002645= 29 00                   2220  clPer       DC.B    ')', 0
00002647= 2D 00                   2221  dec         DC.B    '-', 0
00002649= 2B 00                   2222  inc         DC.B    '+', 0
0000264B= 2F 00                   2223  slash       DC.B    '/', 0
0000264D                          2224  
0000264D= 28 53 50 29 00          2225  stack       DC.B    '(SP)', 0
00002652                          2226  
00002652= 4F 52 49 00             2227  ORImatch    DC.B    'ORI', 0
00002656= 43 4D 50 49 00          2228  CMPImatch   DC.B    'CMPI', 0
0000265B= 42 43 4C 52 00          2229  BCLRmatch   DC.B    'BCLR', 0
00002660= 4D 4F 56 45 00          2230  MOVEmatch   DC.B    'MOVE', 0
00002665= 4D 4F 56 45 41 00       2231  MOVEAmatch  DC.B    'MOVEA', 0
0000266B= 4E 45 47 00             2232  NEGmatch    DC.B    'NEG', 0
0000266F= 52 54 53 00             2233  RTSmatch    DC.B    'RTS', 0
00002673= 4A 53 52 00             2234  JSRmatch    DC.B    'JSR', 0
00002677= 4D 4F 56 45 4D 00       2235  MOVEMmatch  DC.B    'MOVEM', 0
0000267D= 4C 45 41 00             2236  LEAmatch    DC.B    'LEA', 0
00002681= 53 55 42 51 00          2237  SUBQmatch   DC.B    'SUBQ', 0
00002686= 42 52 41 00             2238  BRAmatch    DC.B    'BRA', 0
0000268A= 42 43 53 00             2239  BCSmatch    DC.B    'BCS', 0
0000268E= 42 56 43 00             2240  BVCmatch    DC.B    'BVC', 0
00002692= 42 47 45 00             2241  BGEmatch    DC.B    'BGE', 0
00002696= 42 4C 54 00             2242  BLTmatch    DC.B    'BLT', 0
0000269A= 44 49 56 53 00          2243  DIVSmatch   DC.B    'DIVS', 0
0000269F= 4F 52 00                2244  ORmatch     DC.B    'OR', 0
000026A2= 53 55 42 00             2245  SUBmatch    DC.B    'SUB', 0
000026A6= 45 4F 52 00             2246  EORmatch    DC.B    'EOR', 0
000026AA= 43 4D 50 00             2247  CMPmatch    DC.B    'CMP', 0
000026AE= 4D 55 4C 53 00          2248  MULSmatch   DC.B    'MULS', 0
000026B3= 41 44 44 00             2249  ADDmatch    DC.B    'ADD', 0
000026B7= 41 44 44 41 00          2250  ADDAmatch   DC.B    'ADDA', 0
000026BC= 4C 53 52 00             2251  LSRmatch    DC.B    'LSR', 0
000026C0= 4C 53 4C 00             2252  LSLmatch    DC.B    'LSL', 0
000026C4= 41 53 52 00             2253  ASRmatch    DC.B    'ASR', 0
000026C8= 41 53 4C 00             2254  ASLmatch    DC.B    'ASL', 0
000026CC= 52 4F 52 00             2255  RORmatch    DC.B    'ROR', 0
000026D0= 52 4F 4C 00             2256  ROLmatch    DC.B    'ROL', 0
000026D4                          2257   
000026D4= 2E 42 00                2258  dispByte    DC.B    '.B', 0
000026D7= 2E 57 00                2259  dispWord    DC.B    '.W', 0
000026DA= 2E 4C 00                2260  dispLong    DC.B    '.L', 0
000026DD                          2261  
000026DD= 41 6E 00                2262  dispAn      DC.B    'An', 0
000026E0= 41 30 00                2263  dispA0      DC.B    'A0', 0
000026E3= 41 31 00                2264  dispA1      DC.B    'A1', 0
000026E6= 41 32 00                2265  dispA2      DC.B    'A2', 0
000026E9= 41 33 00                2266  dispA3      DC.B    'A3', 0
000026EC= 41 34 00                2267  dispA4      DC.B    'A4', 0
000026EF= 41 35 00                2268  dispA5      DC.B    'A5', 0
000026F2= 41 36 00                2269  dispA6      DC.B    'A6', 0
000026F5= 41 37 00                2270  dispA7      DC.B    'A7', 0
000026F8                          2271  
000026F8= 44 00                   2272  dispD       DC.B    'D',  0
000026FA= 44 30 00                2273  dispD0      DC.B    'D0', 0
000026FD= 44 31 00                2274  dispD1      DC.B    'D1', 0
00002700= 44 32 00                2275  dispD2      DC.B    'D2', 0
00002703= 44 33 00                2276  dispD3      DC.B    'D3', 0
00002706= 44 34 00                2277  dispD4      DC.B    'D4', 0
00002709= 44 35 00                2278  dispD5      DC.B    'D5', 0
0000270C= 44 36 00                2279  dispD6      DC.B    'D6', 0
0000270F= 44 37 00                2280  dispD7      DC.B    'D7', 0  
00002712                          2281  
00002712                          2282  
00002712= 49 6E 76 61 6C 69 ...   2283  inv      DC.B    'Invalid', 0  
0000271A                          2284             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             25C4
ABSSHORT            2592
ADDAMATCH           26B7
ADDMATCH            26B3
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ADDR0CONT           1E26
ADDR1CONT           1E66
ADDR2CONT           1EA6
ADDR3CONT           1EE6
ADDR4CONT           1F26
ADDR5CONT           1F66
ADDR6CONT           1FA6
ADDRREG0            1E06
ADDRREG1            1E36
ADDRREG2            1E76
ADDRREG3            1EB6
ADDRREG4            1EF6
ADDRREG5            1F36
ADDRREG6            1F76
ADDRREG7            1FB6
ASLMATCH            26C8
ASRMATCH            26C4
BCLRMATCH           265B
BCSMATCH            268A
BGEMATCH            2692
BLTMATCH            2696
BRAEIGHT            1118
BRAELEVEN           111C
BRAFIVE             10E8
BRAFOUR             10CC
BRAFOURTEEN         1120
BRAMATCH            2686
BRANINE             1118
BRAONE              10C0
BRASIX              10EC
BRATHIRTEEN         1120
BRATHREE            10C8
BRATWELVE           111C
BRATWO              10C4
BRAZERO             1090
BVCMATCH            268E
CHECKDR             1AE6
CLPER               2645
CMPIMATCH           2656
CMPMATCH            26AA
COMMA               2641
CR                  D
DATAREG0            1BB0
DATAREG1            1BE0
DATAREG2            1C20
DATAREG3            1C60
DATAREG4            1CA0
DATAREG5            1CE0
DATAREG6            1D20
DATAREG7            1D60
DEC                 2647
DISPA0              26E0
DISPA1              26E3
DISPA2              26E6
DISPA3              26E9
DISPA4              26EC
DISPA5              26EF
DISPA6              26F2
DISPA7              26F5
DISPAN              26DD
DISPBYTE            26D4
DISPD               26F8
DISPD0              26FA
DISPD1              26FD
DISPD2              2700
DISPD3              2703
DISPD4              2706
DISPD5              2709
DISPD6              270C
DISPD7              270F
DISPHEX             263F
DISPIMM             25F6
DISPLAYA0           210A
DISPLAYA0A          21D6
DISPLAYA0D          249A
DISPLAYA0P          2302
DISPLAYA1           211A
DISPLAYA1A          21F2
DISPLAYA1D          24B6
DISPLAYA1P          232A
DISPLAYA2           212A
DISPLAYA2A          220E
DISPLAYA2D          24D2
DISPLAYA2P          2352
DISPLAYA3           213A
DISPLAYA3A          222A
DISPLAYA3D          24EE
DISPLAYA3P          237A
DISPLAYA4           214A
DISPLAYA4A          2246
DISPLAYA4D          250A
DISPLAYA4P          23A2
DISPLAYA5           215A
DISPLAYA5A          2262
DISPLAYA5D          2526
DISPLAYA5P          23CA
DISPLAYA6           216A
DISPLAYA6A          227E
DISPLAYA6D          2542
DISPLAYA6P          23F2
DISPLAYA7           217A
DISPLAYA7A          229A
DISPLAYA7D          255E
DISPLAYA7P          241A
DISPLAYD0           204A
DISPLAYD1           205A
DISPLAYD2           206A
DISPLAYD3           207A
DISPLAYD4           208A
DISPLAYD5           209A
DISPLAYD6           20AA
DISPLAYD7           20BA
DISPLONG            26DA
DISPWORD            26D7
DIVSMATCH           269A
EIGHT               8
ELEVEN              B
ENDMOVE             1FC6
ENDMOVE1            1FCC
ENDPROG             2632
ENDSUB              262C
EORMATCH            26A6
FIFTEEN             F
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             263D
INC                 2649
INV                 2712
INVALID             261C
JSRMATCH            2673
LEAMATCH            267D
LF                  A
LOOP                100C
LSLMATCH            26C0
LSRMATCH            26BC
MASK0               0
MASK1               1
MASK2               2
MASK3               4
MASK4               8
MASK5               10
MASK6               20
MASK7               40
MASK8               80
MASKA               5
MASKB               A
MASKC               14
MASKD               28
MASKE               50
MASKF               A0
MOVEAMATCH          2665
MOVEMATCH           2660
MOVEMBRA            1A9A
MOVEML              1ACA
MOVEMMATCH          2677
MOVEMW              1AAE
MULSMATCH           26AE
NEGMATCH            266B
NEWLINE             2636
NINE                9
ONE                 1
OPASL               1A52
OPASR               1A5E
OPBCLR              141A
OPBCS               1A0A
OPBGE               1A22
OPBLT               1A2E
OPBRA               19F2
OPBVC               1A16
OPCMPI              12A8
OPCMPIB             12F4
OPCMPIL             13B8
OPCMPIW             1356
OPDYNBCLR           147E
OPJSR               1864
OPLEA               1966
OPLSL               1A6A
OPLSR               1A76
OPMOVEAL            15FE
OPMOVEAW            16F4
OPMOVEB             14EC
OPMOVEL             1570
OPMOVEM             18DC
OPMOVEMLEA          18C0
OPMOVEW             1666
OPMULS              1A46
OPNEG               175C
OPNEGB              178A
OPNEGL              17CA
OPNEGW              180A
OPORI               1154
OPORIB              1182
OPORIL              1246
OPORIW              11E4
OPPER               2643
OPROL               1A82
OPROR               1A8E
OPRTS               18A4
OPRTSJSR            184A
OPSUB               1A3A
OPSUBQ              19E6
ORIMATCH            2652
ORMATCH             269F
PADDRDEC            2442
PADDRDIR            218A
PADDRPOST           22B6
PADDRREG            20CA
PDATAREG            200A
PHEX                257A
PRINTEA             1FD2
PRINTINVALID        2632
PRINTMEM            1D70
PRINTMEMNOW         1D74
PRINTREGMEM         1B24
PRINTSTACK          1AFC
REG0CONT            1BD0
REG1CONT            1C10
REG2CONT            1C50
REG3CONT            1C90
REG4CONT            1CD0
REG5CONT            1D10
REG6CONT            1D50
ROLMATCH            26D0
RORMATCH            26CC
RTSMATCH            266F
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SKIPPRINTEA         1956
SLASH               264B
SPACE               263A
STACK               264D
START               1000
SUBMATCH            26A2
SUBQMATCH           2681
TEST_END            3100
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
