00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 11/30/2014 7:06:13 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =0000300F                 11  test_end    EQU     $0000300F   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00003000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 0000300F             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 1696                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 0080                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0078                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 008C                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0088                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00AC                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00A4                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00A0                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 0098                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 0094                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 008C                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                102          AND.B       #secNib, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 00EA                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 0236                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                108          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 03A0                109          BEQ         opBCLR
000010A6  C47C 0001                110          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                111          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 03F8                112          BEQ         opDynBCLR
000010B2  6000 15F6                113          BRA         printInvalid
000010B6                           114          
000010B6                           115          
000010B6  6000 045E                116  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           117  
000010BA                           118  braTwo  ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BA                           119  
000010BA                           120  braThree ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BA                           121  
000010BA  4242                     122  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010BC  1401                     123          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010BE  C438 000F                124          AND.B       $0F, D2             ; set first nibble to 0
000010C2                           125   
000010C2  B43C 0004                126          CMP.B       #four, D2           ; compare second nibble to 4
000010C6  6700 04D2                127          BEQ         opNEG               ; branch to NEG method
000010CA  B43C 000E                128          CMP.B       #fourteen, D2       ; compare second nibble to E
000010CE  6700 04D6                129          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010D2  6000 04D2                130          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010D6                           131  
000010D6  6000 04CE                132  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010DA                           133  
000010DA  4242                     134  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010DC  1401                     135          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010DE  C438 000F                136          AND.B       $0F, D2             ; set first nibble to 0
000010E2                           137   
000010E2  B43C 0000                138          CMP.B       #zero, D2           ; compare second nibble to 0
000010E6  6700 04CA                139          BEQ         opBRA               ; branch to BRA method
000010EA  B43C 0005                140          CMP.B       #five, D2           ; compare second nibble to 5
000010EE  6700 04DA                141          BEQ         opBCS               ; branch to BCS method
000010F2  B43C 0008                142          CMP.B       #eight, D2          ; compare second nibble to 8
000010F6  6700 04DE                143          BEQ         opBVC               ; branch to BCS method
000010FA  B43C 000C                144          CMP.B       #twelve, D2         ; compare second nibble to 12
000010FE  6700 04E2                145          BEQ         opBGE               ; branch to BGE method
00001102  6000 04EA                146          BRA         opBLT               ; otherwise, branch to BLT method
00001106                           147  
00001106                           148  braEight    ; there are two opCodes available DIVS, or OR
00001106                           149  
00001106  6000 04F2                150  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000110A                           151  
0000110A                           152  braEleven   ; there are two opCodes available EOR, or CMP
0000110A                           153  
0000110A  6000 04FA                154  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
0000110E                           155    
0000110E                           156  braThirteen ; there are two opCodes available ADD, or ADDA
0000110E                           157  
0000110E  E141                     158  braFourteen ASL.W       #eight,D1
00001110  1218                     159              MOVE.B      (A0)+, D1
00001112                           160              
00001112  4242                     161              CLR         D2
00001114  1401                     162              MOVE.B      D1, D2
00001116  EC82                     163              ASR.L       #six, D2
00001118                           164              
00001118  B43C 0003                165              CMP.B       #three, D2
0000111C  6700 0006                166              BEQ         memShifts
00001120  6000 0040                167              BRA         regShifts
00001124                           168  
00001124  4242                     169  memShifts   CLR         D2                  ; first nibble is E, 5 opcodes are possible 
00001126  3401                     170              MOVE.W      D1, D2              ; clear out D2 and copy D1 back in
00001128  E082                     171              ASR.L       #eight,D2
0000112A  C47C 000F                172              AND         #$0F, D2            ; set first nibble to 0
0000112E                           173   
0000112E  B43C 0000                174              CMP.B       #zero, D2           ; compare second nibble to 0
00001132  6700 052A                175              BEQ         opASR               ; branch to ASR method
00001136  B43C 0001                176              CMP.B       #one, D2            ; compare second nibble to 1
0000113A  6700 04D6                177              BEQ         opASL               ; branch to ASL method
0000113E  B43C 0002                178              CMP.B       #two, D2            ; compare second nibble to 2
00001142  6700 05B2                179              BEQ         opLSR               ; branch to LSR method
00001146  B43C 0003                180              CMP.B       #three, D2          ; compare second nibble to 3
0000114A  6700 055E                181              BEQ         opLSL               ; branch to LSL method
0000114E  B43C 0006                182              CMP.B       #six, D2            ; compare second nibble to 6
00001152  6700 063A                183              BEQ         opROR               ; branch to ROR method
00001156  B43C 0007                184              CMP.B       #seven, D2          ; compare second nibble to 7
0000115A  6700 05E6                185              BEQ         opROL               ; branch to ROL method
0000115E  6000 154A                186              BRA         printInvalid        ; otherwise, invalid
00001162                           187              
00001162  B43C 0000                188  regShifts   CMP.B       #zero, D2           
00001166  6700 0672                189              BEQ         memSB
0000116A  B43C 0001                190              CMP.B       #one, D2
0000116E  6700 08F4                191              BEQ         memSW
00001172  B43C 0002                192              CMP.B       #two, D2
00001176  6700 0B76                193              BEQ         memSL
0000117A  6000 152E                194              BRA         printInvalid
0000117E                           195  
0000117E  43F9 000026C3            196  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
00001184  103C 000E                197          MOVE.B      #14, D0             ; command for trap call to display message
00001188  4E4F                     198          TRAP        #15                 ; trap call
0000118A                           199          
0000118A  1218                     200          MOVE.B      (A0)+, D1
0000118C  1401                     201          MOVE.B      D1,D2               ; copy data over
0000118E  EC42                     202          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001190  B43C 0000                203          CMP.B       #zero,D2
00001194  6700 0016                204          BEQ         opORIB
00001198  B43C 0001                205          CMP.B       #one,D2
0000119C  6700 0070                206          BEQ         opORIW
000011A0  B43C 0002                207          CMP.B       #two,D2
000011A4  6700 00CA                208          BEQ         opORIL
000011A8                           209          
000011A8  6000 1500                210          BRA         printInvalid
000011AC                           211          
000011AC  43F9 00002745            212  opORIB  LEA         dispByte, A1        ; Display byte
000011B2  103C 000E                213          MOVE.B      #14, D0             ; command for trap call to display message
000011B6  4E4F                     214          TRAP        #15                 ; trap call
000011B8                           215          
000011B8  43F9 000026B2            216          LEA         space, A1           ; Display space
000011BE  103C 000E                217          MOVE.B      #14, D0             ; command for trap call to display message
000011C2  4E4F                     218          TRAP        #15                 ; trap call
000011C4                           219          
000011C4  4242                     220          CLR         D2
000011C6  1401                     221          MOVE.B      D1,D2
000011C8  E642                     222          ASR         #three,D2
000011CA  C47C 0007                223          AND         #seven,D2
000011CE  4243                     224          CLR         D3        
000011D0  1601                     225          MOVE.B      D1,D3
000011D2  C67C 0007                226          AND         #seven,D3
000011D6                           227          
000011D6  4241                     228          CLR         D1
000011D8  3218                     229          MOVE.W      (A0)+, D1
000011DA                           230          
000011DA  43F9 000026B5            231          LEA         hashTag, A1           ; Display space
000011E0  103C 000E                232          MOVE.B      #14, D0             ; command for trap call to display message
000011E4  4E4F                     233          TRAP        #15                 ; trap call
000011E6                           234          
000011E6  103C 0003                235          MOVE.B      #3, D0
000011EA  4E4F                     236          TRAP        #15
000011EC                           237          
000011EC  43F9 000026B9            238          LEA         comma, A1           ; Display space
000011F2  103C 000E                239          MOVE.B      #14, D0             ; command for trap call to display message
000011F6  4E4F                     240          TRAP        #15                 ; trap call
000011F8                           241          
000011F8  4EB9 00002050            242          JSR         printEA
000011FE                           243          
000011FE  43F9 000026AE            244          LEA         newLine, A1           ; Display space
00001204  103C 000E                245          MOVE.B      #14, D0             ; command for trap call to display message
00001208  4E4F                     246          TRAP        #15                 ; trap call
0000120A                           247          
0000120A  6000 FE00                248          BRA         LOOP
0000120E                           249          
0000120E                           250          
0000120E  43F9 00002748            251  opORIW  LEA         dispWord, A1        ; Display byte
00001214  103C 000E                252          MOVE.B      #14, D0             ; command for trap call to display message
00001218  4E4F                     253          TRAP        #15                 ; trap call
0000121A                           254          
0000121A  43F9 000026B2            255          LEA         space, A1           ; Display space
00001220  103C 000E                256          MOVE.B      #14, D0             ; command for trap call to display message
00001224  4E4F                     257          TRAP        #15                 ; trap call
00001226                           258          
00001226  4242                     259          CLR         D2
00001228  1401                     260          MOVE.B      D1,D2
0000122A  E642                     261          ASR         #three,D2
0000122C  C47C 0007                262          AND         #seven,D2
00001230  4243                     263          CLR         D3        
00001232  1601                     264          MOVE.B      D1,D3
00001234  C67C 0007                265          AND         #seven,D3
00001238                           266          
00001238  4241                     267          CLR         D1
0000123A  3218                     268          MOVE.W      (A0)+, D1
0000123C                           269          
0000123C  43F9 000026B5            270          LEA         hashTag, A1           ; Display space
00001242  103C 000E                271          MOVE.B      #14, D0             ; command for trap call to display message
00001246  4E4F                     272          TRAP        #15                 ; trap call
00001248                           273          
00001248  103C 0003                274          MOVE.B      #3, D0
0000124C  4E4F                     275          TRAP        #15
0000124E                           276          
0000124E  43F9 000026B9            277          LEA         comma, A1           ; Display space
00001254  103C 000E                278          MOVE.B      #14, D0             ; command for trap call to display message
00001258  4E4F                     279          TRAP        #15                 ; trap call
0000125A                           280          
0000125A  4EB9 00002050            281          JSR         printEA
00001260                           282          
00001260  43F9 000026AE            283          LEA         newLine, A1           ; Display space
00001266  103C 000E                284          MOVE.B      #14, D0             ; command for trap call to display message
0000126A  4E4F                     285          TRAP        #15                 ; trap call
0000126C                           286          
0000126C  6000 FD9E                287          BRA         LOOP
00001270                           288       
00001270  43F9 0000274B            289  opORIL  LEA         dispLong, A1        ; Display byte
00001276  103C 000E                290          MOVE.B      #14, D0             ; command for trap call to display message
0000127A  4E4F                     291          TRAP        #15                 ; trap call
0000127C                           292          
0000127C  43F9 000026B2            293          LEA         space, A1           ; Display space
00001282  103C 000E                294          MOVE.B      #14, D0             ; command for trap call to display message
00001286  4E4F                     295          TRAP        #15                 ; trap call
00001288                           296          
00001288  4242                     297          CLR         D2
0000128A  1401                     298          MOVE.B      D1,D2
0000128C  E642                     299          ASR         #three,D2
0000128E  C47C 0007                300          AND         #seven,D2
00001292  4243                     301          CLR         D3        
00001294  1601                     302          MOVE.B      D1,D3
00001296  C67C 0007                303          AND         #seven,D3
0000129A                           304          
0000129A  4241                     305          CLR         D1
0000129C  2218                     306          MOVE.L      (A0)+, D1
0000129E                           307          
0000129E  43F9 000026B5            308          LEA         hashTag, A1           ; Display space
000012A4  103C 000E                309          MOVE.B      #14, D0             ; command for trap call to display message
000012A8  4E4F                     310          TRAP        #15                 ; trap call
000012AA                           311          
000012AA  103C 0003                312          MOVE.B      #3, D0
000012AE  4E4F                     313          TRAP        #15
000012B0                           314          
000012B0  43F9 000026B9            315          LEA         comma, A1           ; Display space
000012B6  103C 000E                316          MOVE.B      #14, D0             ; command for trap call to display message
000012BA  4E4F                     317          TRAP        #15                 ; trap call
000012BC                           318          
000012BC  4EB9 00002050            319          JSR         printEA
000012C2                           320          
000012C2  43F9 000026AE            321          LEA         newLine, A1           ; Display space
000012C8  103C 000E                322          MOVE.B      #14, D0             ; command for trap call to display message
000012CC  4E4F                     323          TRAP        #15                 ; trap call
000012CE                           324          
000012CE  6000 FD3C                325          BRA         LOOP
000012D2                           326           
000012D2  43F9 000026C7            327  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000012D8  103C 000E                328          MOVE.B      #14, D0             ; command for trap call to display message
000012DC  4E4F                     329          TRAP        #15                 ; trap call
000012DE                           330                  
000012DE  1218                     331          MOVE.B      (A0)+, D1
000012E0  1401                     332          MOVE.B      D1,D2               ; copy data over
000012E2  EC42                     333          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000012E4  B43C 0000                334          CMP.B       #zero,D2
000012E8  6700 0034                335          BEQ         opCMPIB
000012EC  B43C 0001                336          CMP.B       #one,D2
000012F0  6700 008E                337          BEQ         opCMPIW
000012F4  B43C 0002                338          CMP.B       #two,D2
000012F8  6700 00E8                339          BEQ         opCMPIL
000012FC                           340          
000012FC  1401                     341          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000012FE  E542                     342          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
00001300  1802                     343          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
00001302  4242                     344          CLR         D2                  ; Clear out data register
00001304  1404                     345          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
00001306  EA42                     346          ASR         #five,D2            ; Shift the register out to get just the mode
00001308  1802                     347          MOVE.B      D2,D4               ; Store mode into D4
0000130A  4242                     348          CLR         D2
0000130C                           349          
0000130C  1401                     350          MOVE.B      D1,D2               ; Getting the EA register
0000130E  EB42                     351          ASL         #five,D2
00001310  1A02                     352          MOVE.B      D2,D5               ; Move just the register into D5
00001312  4242                     353          CLR         D2                  ; Clearing D2 to put data back
00001314  1405                     354          MOVE.B      D5,D2               ; Putting back the register
00001316  EA42                     355          ASR         #five,D2            ; Shifting bits in order to read the register
00001318  1A02                     356          MOVE.B      D2,D5               ; Store register into D5
0000131A                           357          
0000131A  6000 FCF0                358          BRA         LOOP                ; go back to the loop
0000131E                           359  
0000131E  43F9 00002745            360  opCMPIB LEA         dispByte, A1        ; Display byte
00001324  103C 000E                361          MOVE.B      #14, D0             ; command for trap call to display message
00001328  4E4F                     362          TRAP        #15                 ; trap call
0000132A                           363          
0000132A  43F9 000026B2            364          LEA         space, A1           ; Display space
00001330  103C 000E                365          MOVE.B      #14, D0             ; command for trap call to display message
00001334  4E4F                     366          TRAP        #15                 ; trap call
00001336                           367          
00001336  4242                     368          CLR         D2
00001338  1401                     369          MOVE.B      D1,D2
0000133A  E642                     370          ASR         #three,D2
0000133C  C47C 0007                371          AND         #seven,D2
00001340  4243                     372          CLR         D3        
00001342  1601                     373          MOVE.B      D1,D3
00001344  C67C 0007                374          AND         #seven,D3
00001348                           375          
00001348  4241                     376          CLR         D1
0000134A  3218                     377          MOVE.W      (A0)+, D1
0000134C                           378          
0000134C  43F9 000026B5            379          LEA         hashTag, A1           ; Display space
00001352  103C 000E                380          MOVE.B      #14, D0             ; command for trap call to display message
00001356  4E4F                     381          TRAP        #15                 ; trap call
00001358                           382          
00001358  103C 0003                383          MOVE.B      #3, D0
0000135C  4E4F                     384          TRAP        #15
0000135E                           385          
0000135E  43F9 000026B9            386          LEA         comma, A1           ; Display space
00001364  103C 000E                387          MOVE.B      #14, D0             ; command for trap call to display message
00001368  4E4F                     388          TRAP        #15                 ; trap call
0000136A                           389          
0000136A  4EB9 00002050            390          JSR         printEA
00001370                           391          
00001370  43F9 000026AE            392          LEA         newLine, A1           ; Display space
00001376  103C 000E                393          MOVE.B      #14, D0             ; command for trap call to display message
0000137A  4E4F                     394          TRAP        #15                 ; trap call
0000137C                           395  
0000137C  6000 FC8E                396          BRA         LOOP
00001380                           397  
00001380  43F9 00002748            398  opCMPIW LEA         dispWord, A1        ; Display byte
00001386  103C 000E                399          MOVE.B      #14, D0             ; command for trap call to display message
0000138A  4E4F                     400          TRAP        #15                 ; trap call
0000138C                           401          
0000138C  43F9 000026B2            402          LEA         space, A1           ; Display space
00001392  103C 000E                403          MOVE.B      #14, D0             ; command for trap call to display message
00001396  4E4F                     404          TRAP        #15                 ; trap call
00001398                           405          
00001398  4242                     406          CLR         D2
0000139A  1401                     407          MOVE.B      D1,D2
0000139C  E642                     408          ASR         #three,D2
0000139E  C47C 0007                409          AND         #seven,D2
000013A2  4243                     410          CLR         D3        
000013A4  1601                     411          MOVE.B      D1,D3
000013A6  C67C 0007                412          AND         #seven,D3
000013AA                           413          
000013AA  4241                     414          CLR         D1
000013AC  3218                     415          MOVE.W      (A0)+, D1
000013AE                           416          
000013AE  43F9 000026B5            417          LEA         hashTag, A1           ; Display space
000013B4  103C 000E                418          MOVE.B      #14, D0             ; command for trap call to display message
000013B8  4E4F                     419          TRAP        #15                 ; trap call
000013BA                           420          
000013BA  103C 0003                421          MOVE.B      #3, D0
000013BE  4E4F                     422          TRAP        #15
000013C0                           423          
000013C0  43F9 000026B9            424          LEA         comma, A1           ; Display space
000013C6  103C 000E                425          MOVE.B      #14, D0             ; command for trap call to display message
000013CA  4E4F                     426          TRAP        #15                 ; trap call
000013CC                           427          
000013CC  4EB9 00002050            428          JSR         printEA
000013D2                           429          
000013D2  43F9 000026AE            430          LEA         newLine, A1           ; Display space
000013D8  103C 000E                431          MOVE.B      #14, D0             ; command for trap call to display message
000013DC  4E4F                     432          TRAP        #15                 ; trap call
000013DE  6000 FC2C                433          BRA         LOOP
000013E2                           434  
000013E2  43F9 0000274B            435  opCMPIL LEA         dispLong, A1        ; Display byte
000013E8  103C 000E                436          MOVE.B      #14, D0             ; command for trap call to display message
000013EC  4E4F                     437          TRAP        #15                 ; trap call
000013EE                           438          
000013EE  43F9 000026B2            439          LEA         space, A1           ; Display space
000013F4  103C 000E                440          MOVE.B      #14, D0             ; command for trap call to display message
000013F8  4E4F                     441          TRAP        #15                 ; trap call
000013FA                           442          
000013FA  4242                     443          CLR         D2
000013FC  1401                     444          MOVE.B      D1,D2
000013FE  E642                     445          ASR         #three,D2
00001400  C47C 0007                446          AND         #seven,D2
00001404  4243                     447          CLR         D3        
00001406  1601                     448          MOVE.B      D1,D3
00001408  C67C 0007                449          AND         #seven,D3
0000140C                           450          
0000140C  4241                     451          CLR         D1
0000140E  3218                     452          MOVE.W      (A0)+, D1
00001410                           453          
00001410  43F9 000026B5            454          LEA         hashTag, A1           ; Display space
00001416  103C 000E                455          MOVE.B      #14, D0             ; command for trap call to display message
0000141A  4E4F                     456          TRAP        #15                 ; trap call
0000141C                           457          
0000141C  103C 0003                458          MOVE.B      #3, D0
00001420  4E4F                     459          TRAP        #15
00001422                           460          
00001422  43F9 000026B9            461          LEA         comma, A1           ; Display space
00001428  103C 000E                462          MOVE.B      #14, D0             ; command for trap call to display message
0000142C  4E4F                     463          TRAP        #15                 ; trap call
0000142E                           464          
0000142E  4EB9 00002050            465          JSR         printEA
00001434                           466          
00001434  43F9 000026AE            467          LEA         newLine, A1           ; Display space
0000143A  103C 000E                468          MOVE.B      #14, D0             ; command for trap call to display message
0000143E  4E4F                     469          TRAP        #15                 ; trap call
00001440                           470          
00001440  6000 FBCA                471          BRA         LOOP
00001444                           472  
00001444  43F9 000026CC            473  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000144A  103C 000E                474                  MOVE.B      #14, D0             ; command for trap call to display message
0000144E  4E4F                     475                  TRAP        #15                 ; trap call
00001450                           476  
00001450  43F9 000026B2            477                  LEA         space, A1           ; Display space
00001456  103C 000E                478                  MOVE.B      #14, D0             ; command for trap call to display message
0000145A  4E4F                     479                  TRAP        #15                 ; trap call
0000145C                           480                  
0000145C  4242                     481                  CLR         D2
0000145E  1218                     482                  MOVE.B      (A0)+, D1
00001460  1401                     483                  MOVE.B      D1,D2               ; copy data over
00001462  E642                     484                  ASR         #three,D2           ; Shift to the right to remove register
00001464  C47C 0007                485                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
00001468                           486                  
00001468  4243                     487                  CLR         D3                  ; Clear D3 so we can move D1 in
0000146A  1601                     488                  MOVE.B      D1,D3               ; Move othr byte in
0000146C  C67C 0007                489                  AND         #seven,D3           ; Set everything besides register to 0
00001470                           490                  
00001470  4241                     491                  CLR         D1
00001472  3218                     492                  MOVE.W      (A0)+, D1
00001474                           493                 
00001474                           494                  
00001474  43F9 000026B5            495                  LEA         hashTag, A1           ; Display space
0000147A  103C 000E                496                  MOVE.B      #14, D0             ; command for trap call to display message
0000147E  4E4F                     497                  TRAP        #15                 ; trap call
00001480                           498          
00001480  103C 0003                499                  MOVE.B      #3, D0
00001484  4E4F                     500                  TRAP        #15
00001486                           501          
00001486  43F9 000026B9            502                  LEA         comma, A1           ; Display space
0000148C  103C 000E                503                  MOVE.B      #14, D0             ; command for trap call to display message
00001490  4E4F                     504                  TRAP        #15                 ; trap call
00001492                           505                  
00001492  4EB9 00002050            506                  JSR         printEA
00001498                           507          
00001498  43F9 000026AE            508                  LEA         newLine, A1           ; Display space
0000149E  103C 000E                509                  MOVE.B      #14, D0             ; command for trap call to display message
000014A2  4E4F                     510                  TRAP        #15                 ; trap call
000014A4                           511                  
000014A4                           512                  
000014A4  6000 FB66                513                  BRA         LOOP                
000014A8                           514          
000014A8                           515  opDynBCLR       
000014A8  4241                     516                  CLR         D1
000014AA  1218                     517                  MOVE.B      (A0)+,D1            ; Copy second byte in
000014AC  1601                     518                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
000014AE  E243                     519                  ASR         #one,D3             ; Shift register over to the end
000014B0  C67C 0007                520                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
000014B4                           521                  
000014B4  1401                     522                  MOVE.B      D1,D2
000014B6  EC42                     523                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
000014B8  B47C 0002                524                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
000014BC  6600 11EC                525                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
000014C0                           526  
000014C0                           527                  
000014C0  43F9 000026CC            528                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
000014C6  103C 000E                529                  MOVE.B      #14, D0             ; command for trap call to display message
000014CA  4E4F                     530                  TRAP        #15                 ; trap call  
000014CC                           531                  
000014CC  43F9 000026B2            532                  LEA         space, A1           ; Display space
000014D2  103C 000E                533                  MOVE.B      #14, D0             ; command for trap call to display message
000014D6  4E4F                     534                  TRAP        #15                 ; trap call
000014D8                           535                  
000014D8  143C 0000                536                  MOVE.B      #zero,D2                
000014DC  4EB9 00002050            537                  JSR         printEA
000014E2                           538                  
000014E2  43F9 000026B9            539                  LEA         comma, A1           ; Display space
000014E8  103C 000E                540                  MOVE.B      #14, D0             ; command for trap call to display message
000014EC  4E4F                     541                  TRAP        #15                 ; trap call
000014EE                           542                  
000014EE  4242                     543                  CLR         D2
000014F0  1401                     544                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000014F2  E642                     545                  ASR         #three,D2           ; Remove/shift the register out
000014F4  C47C 0007                546                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000014F8                           547                  
000014F8  4243                     548                  CLR         D3                  ; Clearing D3 to avoid mashing data
000014FA  1601                     549                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000014FC  C67C 0007                550                  AND         #seven,D3           ; Change all bits except for register bits to 0
00001500                           551                  
00001500                           552  
00001500  4EB9 00002050            553                  JSR         printEA
00001506                           554          
00001506  43F9 000026AE            555                  LEA         newLine, A1           ; Display space
0000150C  103C 000E                556                  MOVE.B      #14, D0             ; command for trap call to display message
00001510  4E4F                     557                  TRAP        #15                 ; trap call            
00001512                           558  
00001512                           559  
00001512  6000 FAF8                560                  BRA         LOOP                ; go back to the loop
00001516                           561   
00001516  43F9 000026D1            562  opMOVEB LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
0000151C  103C 000E                563          MOVE.B      #14, D0             ; command for trap call to display message
00001520  4E4F                     564          TRAP        #15                 ; trap call
00001522  43F9 00002745            565          LEA         dispByte, A1        ; display byte
00001528  103C 000E                566          MOVE.B      #14, D0             ; command for trap call to display message
0000152C  4E4F                     567          TRAP        #15                 ; trap call
0000152E  43F9 000026B2            568          LEA         space, A1           ; create spaces
00001534  103C 000E                569          MOVE.B      #14, D0             ; command for trap call to display message
00001538  4E4F                     570          TRAP        #15                 ; trap call
0000153A                           571          
0000153A                           572          
0000153A  4245                     573          CLR         D5                  ; Clear D5
0000153C  1A01                     574          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000153E  E245                     575          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001540  CA7C 0007                576          AND         #seven,D5
00001544                           577          
00001544  4244                     578          CLR         D4                  ; Clear out D4
00001546  1801                     579          MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001548  C87C 0001                580          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000154C                           581          
0000154C  4241                     582          CLR          D1
0000154E  4242                     583          CLR          D2
00001550  1218                     584          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001552  1401                     585          MOVE.B      D1,D2
00001554  EC42                     586          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001556  D842                     587          ADD         D2,D4               ; Adds the remaining bits to D4
00001558                           588          
00001558  4242                     589          CLR         D2
0000155A  1401                     590          MOVE.B      D1,D2               ; Copy new byte over to D2
0000155C  E642                     591          ASR         #three,D2           ; Shift source register out
0000155E  C47C 0007                592          AND         #seven,D2           ; Set everything to 0 except for the mode
00001562                           593          
00001562  4243                     594          CLR         D3
00001564  1601                     595          MOVE.B      D1,D3
00001566  C67C 0007                596          AND         #seven,D3
0000156A                           597          
0000156A  4EB9 00002050            598          JSR         printEA
00001570                           599          
00001570  43F9 000026B9            600          LEA         comma, A1           ; Display space
00001576  103C 000E                601          MOVE.B      #14, D0             ; command for trap call to display message
0000157A  4E4F                     602          TRAP        #15                 ; trap call
0000157C                           603          
0000157C  4242                     604          CLR         D2
0000157E  4243                     605          CLR         D3
00001580  1404                     606          MOVE.B      D4,D2
00001582  1605                     607          MOVE.B      D5,D3
00001584                           608          
00001584  4EB9 00002050            609          JSR         printEA
0000158A                           610          
0000158A                           611          
0000158A  43F9 000026AE            612          LEA         newLine, A1           ; Display space
00001590  103C 000E                613          MOVE.B      #14, D0             ; command for trap call to display message
00001594  4E4F                     614          TRAP        #15                 ; trap call            
00001596                           615  
00001596                           616  
00001596  6000 FA74                617          BRA         LOOP                ; go back to the loop
0000159A                           618          
0000159A                           619  
0000159A  43F9 000026DC            620  opNEG   LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
000015A0  103C 000E                621          MOVE.B      #14, D0             ; command for trap call to display message
000015A4  4E4F                     622          TRAP        #15                 ; trap call
000015A6                           623  
000015A6                           624  opRTSJSR
000015A6                           625  
000015A6                           626  opMOVEMLEA
000015A6                           627  
000015A6  43F9 000026F2            628  opSUBQ  LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
000015AC  103C 000E                629          MOVE.B      #14, D0             ; command for trap call to display message
000015B0  4E4F                     630          TRAP        #15                 ; trap call
000015B2                           631  
000015B2  43F9 000026F7            632  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
000015B8  103C 000E                633          MOVE.B      #14, D0             ; command for trap call to display message
000015BC  4E4F                     634          TRAP        #15                 ; trap call
000015BE  43F9 000026B2            635          LEA         space, A1           ; create spaces
000015C4  103C 000E                636          MOVE.B      #14, D0             ; command for trap call to display message
000015C8  4E4F                     637          TRAP        #15                 ; trap call
000015CA                           638  
000015CA  43F9 000026FB            639  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
000015D0  103C 000E                640          MOVE.B      #14, D0             ; command for trap call to display message
000015D4  4E4F                     641          TRAP        #15                 ; trap call
000015D6                           642  
000015D6  43F9 000026FF            643  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
000015DC  103C 000E                644          MOVE.B      #14, D0             ; command for trap call to display message
000015E0  4E4F                     645          TRAP        #15                 ; trap call
000015E2                           646  
000015E2  43F9 00002703            647  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
000015E8  103C 000E                648          MOVE.B      #14, D0             ; command for trap call to display message
000015EC  4E4F                     649          TRAP        #15                 ; trap call
000015EE                           650  
000015EE  43F9 00002707            651  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
000015F4  103C 000E                652          MOVE.B      #14, D0             ; command for trap call to display message
000015F8  4E4F                     653          TRAP        #15                 ; trap call
000015FA                           654  
000015FA  43F9 00002713            655  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001600  103C 000E                656          MOVE.B      #14, D0             ; command for trap call to display message
00001604  4E4F                     657          TRAP        #15                 ; trap call
00001606                           658  
00001606  43F9 0000271F            659  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
0000160C  103C 000E                660          MOVE.B      #14, D0             ; command for trap call to display message
00001610  4E4F                     661          TRAP        #15                 ; trap call
00001612                           662  
00001612  43F9 00002739            663  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001618  103C 000E                664          MOVE.B      #14, D0             ; command for trap call to display message
0000161C  4E4F                     665          TRAP        #15                 ; trap call
0000161E                           666          
0000161E  43F9 00002748            667          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001624  103C 000E                668          MOVE.B      #14, D0             ; command for trap call to display message
00001628  4E4F                     669          TRAP        #15                 ; trap call
0000162A                           670          
0000162A  43F9 000026B2            671          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001630  103C 000E                672          MOVE.B      #14, D0             ; command for trap call to display message
00001634  4E4F                     673          TRAP        #15                 ; trap call
00001636                           674          
00001636  4242                     675          CLR         D2
00001638  4243                     676          CLR         D3
0000163A  1401                     677          MOVE.B      D1,D2
0000163C  1601                     678          MOVE.B      D1,D3
0000163E                           679          
0000163E  E602                     680          ASR.B       #three, D2
00001640  C47C 0007                681          AND         #seven, D2
00001644  C67C 0007                682          AND         #seven, D3        
00001648                           683          
00001648  4EB9 00002050            684          JSR         printEA
0000164E                           685          
0000164E  43F9 000026AE            686          LEA         newLine, A1           ; Display space
00001654  103C 000E                687          MOVE.B      #14, D0             ; command for trap call to display message
00001658  4E4F                     688          TRAP        #15                 ; trap call
0000165A                           689          
0000165A  6000 F9B0                690          BRA         LOOP
0000165E                           691  
0000165E  43F9 00002735            692  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001664  103C 000E                693          MOVE.B      #14, D0             ; command for trap call to display message
00001668  4E4F                     694          TRAP        #15                 ; trap call
0000166A                           695          
0000166A  43F9 00002748            696          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001670  103C 000E                697          MOVE.B      #14, D0             ; command for trap call to display message
00001674  4E4F                     698          TRAP        #15                 ; trap call
00001676                           699          
00001676  43F9 000026B2            700          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000167C  103C 000E                701          MOVE.B      #14, D0             ; command for trap call to display message
00001680  4E4F                     702          TRAP        #15                 ; trap call
00001682                           703          
00001682  4242                     704          CLR         D2
00001684  4243                     705          CLR         D3
00001686  1401                     706          MOVE.B      D1,D2
00001688  1601                     707          MOVE.B      D1,D3
0000168A                           708          
0000168A  E602                     709          ASR.B       #three, D2
0000168C  C47C 0007                710          AND         #seven, D2
00001690  C67C 0007                711          AND         #seven, D3        
00001694                           712          
00001694  4EB9 00002050            713          JSR         printEA
0000169A                           714          
0000169A  43F9 000026AE            715          LEA         newLine, A1           ; Display space
000016A0  103C 000E                716          MOVE.B      #14, D0             ; command for trap call to display message
000016A4  4E4F                     717          TRAP        #15                 ; trap call
000016A6                           718          
000016A6  6000 F964                719          BRA         LOOP
000016AA                           720  
000016AA  43F9 00002731            721  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
000016B0  103C 000E                722          MOVE.B      #14, D0             ; command for trap call to display message
000016B4  4E4F                     723          TRAP        #15                 ; trap call
000016B6                           724          
000016B6  43F9 00002748            725          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000016BC  103C 000E                726          MOVE.B      #14, D0             ; command for trap call to display message
000016C0  4E4F                     727          TRAP        #15                 ; trap call
000016C2                           728          
000016C2  43F9 000026B2            729          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
000016C8  103C 000E                730          MOVE.B      #14, D0             ; command for trap call to display message
000016CC  4E4F                     731          TRAP        #15                 ; trap call
000016CE                           732          
000016CE  4242                     733          CLR         D2
000016D0  4243                     734          CLR         D3
000016D2  1401                     735          MOVE.B      D1,D2
000016D4  1601                     736          MOVE.B      D1,D3
000016D6                           737          
000016D6  E602                     738          ASR.B       #three, D2
000016D8  C47C 0007                739          AND         #seven, D2
000016DC  C67C 0007                740          AND         #seven, D3        
000016E0                           741          
000016E0  4EB9 00002050            742          JSR         printEA
000016E6                           743          
000016E6  43F9 000026AE            744          LEA         newLine, A1           ; Display space
000016EC  103C 000E                745          MOVE.B      #14, D0             ; command for trap call to display message
000016F0  4E4F                     746          TRAP        #15                 ; trap call
000016F2                           747          
000016F2  6000 F918                748          BRA         LOOP
000016F6                           749  
000016F6  43F9 0000272D            750  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
000016FC  103C 000E                751          MOVE.B      #14, D0             ; command for trap call to display message
00001700  4E4F                     752          TRAP        #15                 ; trap call
00001702                           753          
00001702  43F9 00002748            754          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001708  103C 000E                755          MOVE.B      #14, D0             ; command for trap call to display message
0000170C  4E4F                     756          TRAP        #15                 ; trap call
0000170E                           757          
0000170E  43F9 000026B2            758          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001714  103C 000E                759          MOVE.B      #14, D0             ; command for trap call to display message
00001718  4E4F                     760          TRAP        #15                 ; trap call
0000171A                           761          
0000171A  4242                     762          CLR         D2
0000171C  4243                     763          CLR         D3
0000171E  1401                     764          MOVE.B      D1,D2
00001720  1601                     765          MOVE.B      D1,D3
00001722                           766          
00001722  E602                     767          ASR.B       #three, D2
00001724  C47C 0007                768          AND         #seven, D2
00001728  C67C 0007                769          AND         #seven, D3        
0000172C                           770          
0000172C  4EB9 00002050            771          JSR         printEA
00001732                           772          
00001732  43F9 000026AE            773          LEA         newLine, A1           ; Display space
00001738  103C 000E                774          MOVE.B      #14, D0             ; command for trap call to display message
0000173C  4E4F                     775          TRAP        #15                 ; trap call
0000173E                           776          
0000173E  6000 F8CC                777          BRA         LOOP
00001742                           778  
00001742  43F9 00002741            779  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001748  103C 000E                780          MOVE.B      #14, D0             ; command for trap call to display message
0000174C  4E4F                     781          TRAP        #15                 ; trap call
0000174E                           782          
0000174E  43F9 00002748            783          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001754  103C 000E                784          MOVE.B      #14, D0             ; command for trap call to display message
00001758  4E4F                     785          TRAP        #15                 ; trap call
0000175A                           786          
0000175A  43F9 000026B2            787          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001760  103C 000E                788          MOVE.B      #14, D0             ; command for trap call to display message
00001764  4E4F                     789          TRAP        #15                 ; trap call
00001766                           790          
00001766  4242                     791          CLR         D2
00001768  4243                     792          CLR         D3
0000176A  1401                     793          MOVE.B      D1,D2
0000176C  1601                     794          MOVE.B      D1,D3
0000176E                           795          
0000176E  E602                     796          ASR.B       #three, D2
00001770  C47C 0007                797          AND         #seven, D2
00001774  C67C 0007                798          AND         #seven, D3        
00001778                           799          
00001778  4EB9 00002050            800          JSR         printEA
0000177E                           801          
0000177E  43F9 000026AE            802          LEA         newLine, A1           ; Display space
00001784  103C 000E                803          MOVE.B      #14, D0             ; command for trap call to display message
00001788  4E4F                     804          TRAP        #15                 ; trap call
0000178A                           805          
0000178A  6000 F880                806          BRA         LOOP
0000178E                           807  
0000178E  43F9 0000273D            808  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001794  103C 000E                809          MOVE.B      #14, D0             ; command for trap call to display message
00001798  4E4F                     810          TRAP        #15                 ; trap call
0000179A                           811          
0000179A  43F9 00002748            812          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000017A0  103C 000E                813          MOVE.B      #14, D0             ; command for trap call to display message
000017A4  4E4F                     814          TRAP        #15                 ; trap call
000017A6                           815          
000017A6  43F9 000026B2            816          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
000017AC  103C 000E                817          MOVE.B      #14, D0             ; command for trap call to display message
000017B0  4E4F                     818          TRAP        #15                 ; trap call
000017B2                           819          
000017B2  4242                     820          CLR         D2
000017B4  4243                     821          CLR         D3
000017B6  1401                     822          MOVE.B      D1,D2
000017B8  1601                     823          MOVE.B      D1,D3
000017BA                           824          
000017BA  E602                     825          ASR.B       #three, D2
000017BC  C47C 0007                826          AND         #seven, D2
000017C0  C67C 0007                827          AND         #seven, D3        
000017C4                           828          
000017C4  4EB9 00002050            829          JSR         printEA
000017CA                           830          
000017CA  43F9 000026AE            831          LEA         newLine, A1           ; Display space
000017D0  103C 000E                832          MOVE.B      #14, D0             ; command for trap call to display message
000017D4  4E4F                     833          TRAP        #15                 ; trap call
000017D6                           834          
000017D6  6000 F834                835          BRA         LOOP
000017DA                           836          
000017DA  4242                     837  memSB   CLR         D2
000017DC  1401                     838          MOVE.B      D1,D2
000017DE  E642                     839          ASR         #three, D2
000017E0                           840          
000017E0  C47C 0007                841          AND         #$07, D2
000017E4                           842          
000017E4  B43C 0000                843          CMP.B       #zero, D2
000017E8  6700 002E                844          BEQ         opASBI
000017EC  B43C 0004                845          CMP.B       #four, D2
000017F0  6700 0088                846          BEQ         opASBR
000017F4  B43C 0001                847          CMP.B       #one, D2
000017F8  6700 00E2                848          BEQ         opLSBI
000017FC  B43C 0005                849          CMP.B       #five, D2
00001800  6700 013C                850          BEQ         opLSBR
00001804  B43C 0003                851          CMP.B       #three, D2
00001808  6700 0196                852          BEQ         opROBI
0000180C  B43C 0007                853          CMP.B       #seven, D2
00001810  6700 01F0                854          BEQ         opROBR
00001814  6000 0E94                855          BRA         printInvalid
00001818                           856          
00001818  4242                     857  opASBI  CLR         D2
0000181A  3401                     858          MOVE.W      D1, D2
0000181C  E042                     859          ASR         #eight, D2
0000181E  C47C 0001                860          AND         #$01, D2
00001822                           861      
00001822  B43C 0000                862          CMP.B       #zero, D2
00001826  6700 000E                863          BEQ         opASRBI
0000182A  B43C 0001                864          CMP.B       #one, D2
0000182E  6700 0028                865          BEQ         opASLBI
00001832  6000 0E76                866          BRA         printInvalid
00001836                           867          
00001836  43F9 00002735            868  opASRBI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000183C  103C 000E                869          MOVE.B      #14, D0             ; command for trap call to display message
00001840  4E4F                     870          TRAP        #15                 ; trap call
00001842                           871  
00001842  43F9 00002745            872          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001848  103C 000E                873          MOVE.B      #14, D0             ; command for trap call to display message
0000184C  4E4F                     874          TRAP        #15                 ; trap call
0000184E                           875          
0000184E  4EB9 00001F78            876          JSR         PrntImm
00001854                           877          
00001854  6000 F7B6                878          BRA         LOOP
00001858                           879  
00001858  43F9 00002739            880  opASLBI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000185E  103C 000E                881          MOVE.B      #14, D0             ; command for trap call to display message
00001862  4E4F                     882          TRAP        #15                 ; trap call
00001864                           883  
00001864  43F9 00002745            884          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000186A  103C 000E                885          MOVE.B      #14, D0             ; command for trap call to display message
0000186E  4E4F                     886          TRAP        #15                 ; trap call
00001870                           887          
00001870  4EB9 00001F78            888          JSR         PrntImm
00001876                           889          
00001876  6000 F794                890          BRA         LOOP
0000187A                           891  
0000187A  4242                     892  opASBR  CLR         D2
0000187C  3401                     893          MOVE.W      D1, D2
0000187E  E042                     894          ASR         #eight, D2
00001880  C47C 0001                895          AND         #$01, D2
00001884                           896      
00001884  B43C 0000                897          CMP.B       #zero, D2
00001888  6700 000E                898          BEQ         opASRBR
0000188C  B43C 0001                899          CMP.B       #one, D2
00001890  6700 0028                900          BEQ         opASLBR
00001894  6000 0E14                901          BRA         printInvalid 
00001898                           902          
00001898  43F9 00002735            903  opASRBR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000189E  103C 000E                904          MOVE.B      #14, D0             ; command for trap call to display message
000018A2  4E4F                     905          TRAP        #15                 ; trap call
000018A4                           906  
000018A4  43F9 00002745            907          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000018AA  103C 000E                908          MOVE.B      #14, D0             ; command for trap call to display message
000018AE  4E4F                     909          TRAP        #15                 ; trap call
000018B0                           910          
000018B0  4EB9 00001FD4            911          JSR         PrntReg
000018B6                           912          
000018B6  6000 F754                913          BRA         LOOP
000018BA                           914  
000018BA  43F9 00002739            915  opASLBR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000018C0  103C 000E                916          MOVE.B      #14, D0             ; command for trap call to display message
000018C4  4E4F                     917          TRAP        #15                 ; trap call
000018C6                           918  
000018C6  43F9 00002745            919          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000018CC  103C 000E                920          MOVE.B      #14, D0             ; command for trap call to display message
000018D0  4E4F                     921          TRAP        #15                 ; trap call
000018D2                           922          
000018D2  4EB9 00001FD4            923          JSR         PrntReg
000018D8                           924          
000018D8  6000 F732                925          BRA         LOOP
000018DC                           926  
000018DC  4242                     927  opLSBI  CLR         D2
000018DE  3401                     928          MOVE.W      D1, D2
000018E0  E042                     929          ASR         #eight, D2
000018E2  C47C 0001                930          AND         #$01, D2
000018E6                           931      
000018E6  B43C 0000                932          CMP.B       #zero, D2
000018EA  6700 000E                933          BEQ         opLSRBI
000018EE  B43C 0001                934          CMP.B       #one, D2
000018F2  6700 0028                935          BEQ         opLSLBI
000018F6  6000 0DB2                936          BRA         printInvalid 
000018FA                           937          
000018FA  43F9 0000272D            938  opLSRBI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001900  103C 000E                939          MOVE.B      #14, D0             ; command for trap call to display message
00001904  4E4F                     940          TRAP        #15                 ; trap call
00001906                           941  
00001906  43F9 00002745            942          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000190C  103C 000E                943          MOVE.B      #14, D0             ; command for trap call to display message
00001910  4E4F                     944          TRAP        #15                 ; trap call
00001912                           945          
00001912  4EB9 00001F78            946          JSR         PrntImm
00001918                           947          
00001918  6000 F6F2                948          BRA         LOOP
0000191C                           949  
0000191C                           950  
0000191C  43F9 00002731            951  opLSLBI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001922  103C 000E                952          MOVE.B      #14, D0             ; command for trap call to display message
00001926  4E4F                     953          TRAP        #15                 ; trap call
00001928                           954  
00001928  43F9 00002745            955          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000192E  103C 000E                956          MOVE.B      #14, D0             ; command for trap call to display message
00001932  4E4F                     957          TRAP        #15                 ; trap call
00001934                           958          
00001934  4EB9 00001F78            959          JSR         PrntImm
0000193A                           960          
0000193A  6000 F6D0                961          BRA         LOOP
0000193E                           962  
0000193E                           963  
0000193E  4242                     964  opLSBR  CLR         D2
00001940  3401                     965          MOVE.W      D1, D2
00001942  E042                     966          ASR         #eight, D2
00001944  C47C 0001                967          AND         #$01, D2
00001948                           968      
00001948  B43C 0000                969          CMP.B       #zero, D2
0000194C  6700 000E                970          BEQ         opLSRBR
00001950  B43C 0001                971          CMP.B       #one, D2
00001954  6700 0028                972          BEQ         opLSLBR
00001958  6000 0D50                973          BRA         printInvalid 
0000195C                           974          
0000195C  43F9 0000272D            975  opLSRBR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001962  103C 000E                976          MOVE.B      #14, D0             ; command for trap call to display message
00001966  4E4F                     977          TRAP        #15                 ; trap call
00001968                           978  
00001968  43F9 00002745            979          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000196E  103C 000E                980          MOVE.B      #14, D0             ; command for trap call to display message
00001972  4E4F                     981          TRAP        #15                 ; trap call
00001974                           982          
00001974  4EB9 00001FD4            983          JSR         PrntReg
0000197A                           984          
0000197A  6000 F690                985          BRA         LOOP
0000197E                           986          
0000197E  43F9 00002731            987  opLSLBR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001984  103C 000E                988          MOVE.B      #14, D0             ; command for trap call to display message
00001988  4E4F                     989          TRAP        #15                 ; trap call
0000198A                           990  
0000198A  43F9 00002745            991          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001990  103C 000E                992          MOVE.B      #14, D0             ; command for trap call to display message
00001994  4E4F                     993          TRAP        #15                 ; trap call
00001996                           994          
00001996  4EB9 00001FD4            995          JSR         PrntReg
0000199C                           996          
0000199C  6000 F66E                997          BRA         LOOP
000019A0                           998  
000019A0                           999  
000019A0                          1000  
000019A0  4242                    1001  opROBI  CLR         D2
000019A2  3401                    1002          MOVE.W      D1, D2
000019A4  E042                    1003          ASR         #eight, D2
000019A6  C47C 0001               1004          AND         #$01, D2
000019AA                          1005      
000019AA  B43C 0000               1006          CMP.B       #zero, D2
000019AE  6700 000E               1007          BEQ         opRORBI
000019B2  B43C 0001               1008          CMP.B       #one, D2
000019B6  6700 0028               1009          BEQ         opROLBI
000019BA  6000 0CEE               1010          BRA         printInvalid 
000019BE                          1011          
000019BE  43F9 0000273D           1012  opRORBI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000019C4  103C 000E               1013          MOVE.B      #14, D0             ; command for trap call to display message
000019C8  4E4F                    1014          TRAP        #15                 ; trap call
000019CA                          1015  
000019CA  43F9 00002745           1016          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000019D0  103C 000E               1017          MOVE.B      #14, D0             ; command for trap call to display message
000019D4  4E4F                    1018          TRAP        #15                 ; trap call
000019D6                          1019          
000019D6  4EB9 00001F78           1020          JSR         PrntImm
000019DC                          1021          
000019DC  6000 F62E               1022          BRA         LOOP
000019E0                          1023  
000019E0  43F9 00002741           1024  opROLBI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000019E6  103C 000E               1025          MOVE.B      #14, D0             ; command for trap call to display message
000019EA  4E4F                    1026          TRAP        #15                 ; trap call
000019EC                          1027  
000019EC  43F9 00002745           1028          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
000019F2  103C 000E               1029          MOVE.B      #14, D0             ; command for trap call to display message
000019F6  4E4F                    1030          TRAP        #15                 ; trap call
000019F8                          1031          
000019F8  4EB9 00001F78           1032          JSR         PrntImm
000019FE                          1033          
000019FE  6000 F60C               1034          BRA         LOOP
00001A02                          1035  
00001A02  4242                    1036  opROBR  CLR         D2
00001A04  3401                    1037          MOVE.W      D1, D2
00001A06  E042                    1038          ASR         #eight, D2
00001A08  C47C 0001               1039          AND         #$01, D2
00001A0C                          1040      
00001A0C  B43C 0000               1041          CMP.B       #zero, D2
00001A10  6700 000E               1042          BEQ         opRORBR
00001A14  B43C 0001               1043          CMP.B       #one, D2
00001A18  6700 0028               1044          BEQ         opROLBR
00001A1C  6000 0C8C               1045          BRA         printInvalid     
00001A20                          1046          
00001A20  43F9 0000273D           1047  opRORBR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001A26  103C 000E               1048          MOVE.B      #14, D0             ; command for trap call to display message
00001A2A  4E4F                    1049          TRAP        #15                 ; trap call
00001A2C                          1050  
00001A2C  43F9 00002745           1051          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001A32  103C 000E               1052          MOVE.B      #14, D0             ; command for trap call to display message
00001A36  4E4F                    1053          TRAP        #15                 ; trap call
00001A38                          1054          
00001A38  4EB9 00001FD4           1055          JSR         PrntReg
00001A3E                          1056          
00001A3E  6000 F5CC               1057          BRA         LOOP
00001A42                          1058  
00001A42  43F9 00002741           1059  opROLBR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001A48  103C 000E               1060          MOVE.B      #14, D0             ; command for trap call to display message
00001A4C  4E4F                    1061          TRAP        #15                 ; trap call
00001A4E                          1062  
00001A4E  43F9 00002745           1063          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001A54  103C 000E               1064          MOVE.B      #14, D0             ; command for trap call to display message
00001A58  4E4F                    1065          TRAP        #15                 ; trap call
00001A5A                          1066          
00001A5A  4EB9 00001FD4           1067          JSR         PrntReg
00001A60                          1068          
00001A60  6000 F5AA               1069          BRA         LOOP       
00001A64                          1070  
00001A64  4242                    1071  memSW   CLR         D2
00001A66  1401                    1072          MOVE.B      D1,D2
00001A68  E642                    1073          ASR         #three, D2
00001A6A                          1074          
00001A6A  C47C 0007               1075          AND         #$07, D2
00001A6E                          1076          
00001A6E  B43C 0000               1077          CMP.B       #zero, D2
00001A72  6700 002E               1078          BEQ         opASWI
00001A76  B43C 0004               1079          CMP.B       #four, D2
00001A7A  6700 0088               1080          BEQ         opASWR
00001A7E  B43C 0001               1081          CMP.B       #one, D2
00001A82  6700 00E2               1082          BEQ         opLSWI
00001A86  B43C 0005               1083          CMP.B       #five, D2
00001A8A  6700 013C               1084          BEQ         opLSWR
00001A8E  B43C 0003               1085          CMP.B       #three, D2
00001A92  6700 0196               1086          BEQ         opROWI
00001A96  B43C 0007               1087          CMP.B       #seven, D2
00001A9A  6700 01F0               1088          BEQ         opROWR
00001A9E  6000 0C0A               1089          BRA         printInvalid
00001AA2                          1090          
00001AA2  4242                    1091  opASWI  CLR         D2
00001AA4  3401                    1092          MOVE.W      D1, D2
00001AA6  E042                    1093          ASR         #eight, D2
00001AA8  C47C 0001               1094          AND         #$01, D2
00001AAC                          1095      
00001AAC  B43C 0000               1096          CMP.B       #zero, D2
00001AB0  6700 000E               1097          BEQ         opASRWI
00001AB4  B43C 0001               1098          CMP.B       #one, D2
00001AB8  6700 0028               1099          BEQ         opASLWI
00001ABC  6000 0BEC               1100          BRA         printInvalid
00001AC0                          1101          
00001AC0  43F9 00002735           1102  opASRWI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001AC6  103C 000E               1103          MOVE.B      #14, D0             ; command for trap call to display message
00001ACA  4E4F                    1104          TRAP        #15                 ; trap call
00001ACC                          1105  
00001ACC  43F9 00002748           1106          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001AD2  103C 000E               1107          MOVE.B      #14, D0             ; command for trap call to display message
00001AD6  4E4F                    1108          TRAP        #15                 ; trap call
00001AD8                          1109          
00001AD8  4EB9 00001F78           1110          JSR         PrntImm
00001ADE                          1111          
00001ADE  6000 F52C               1112          BRA         LOOP
00001AE2                          1113  
00001AE2  43F9 00002739           1114  opASLWI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001AE8  103C 000E               1115          MOVE.B      #14, D0             ; command for trap call to display message
00001AEC  4E4F                    1116          TRAP        #15                 ; trap call
00001AEE                          1117  
00001AEE  43F9 00002748           1118          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001AF4  103C 000E               1119          MOVE.B      #14, D0             ; command for trap call to display message
00001AF8  4E4F                    1120          TRAP        #15                 ; trap call
00001AFA                          1121          
00001AFA  4EB9 00001F78           1122          JSR         PrntImm
00001B00                          1123          
00001B00  6000 F50A               1124          BRA         LOOP
00001B04                          1125  
00001B04  4242                    1126  opASWR  CLR         D2
00001B06  3401                    1127          MOVE.W      D1, D2
00001B08  E042                    1128          ASR         #eight, D2
00001B0A  C47C 0001               1129          AND         #$01, D2
00001B0E                          1130      
00001B0E  B43C 0000               1131          CMP.B       #zero, D2
00001B12  6700 000E               1132          BEQ         opASRWR
00001B16  B43C 0001               1133          CMP.B       #one, D2
00001B1A  6700 0028               1134          BEQ         opASLWR
00001B1E  6000 0B8A               1135          BRA         printInvalid 
00001B22                          1136          
00001B22  43F9 00002735           1137  opASRWR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001B28  103C 000E               1138          MOVE.B      #14, D0             ; command for trap call to display message
00001B2C  4E4F                    1139          TRAP        #15                 ; trap call
00001B2E                          1140  
00001B2E  43F9 00002748           1141          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001B34  103C 000E               1142          MOVE.B      #14, D0             ; command for trap call to display message
00001B38  4E4F                    1143          TRAP        #15                 ; trap call
00001B3A                          1144          
00001B3A  4EB9 00001FD4           1145          JSR         PrntReg
00001B40                          1146          
00001B40  6000 F4CA               1147          BRA         LOOP
00001B44                          1148  
00001B44  43F9 00002739           1149  opASLWR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001B4A  103C 000E               1150          MOVE.B      #14, D0             ; command for trap call to display message
00001B4E  4E4F                    1151          TRAP        #15                 ; trap call
00001B50                          1152  
00001B50  43F9 00002748           1153          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001B56  103C 000E               1154          MOVE.B      #14, D0             ; command for trap call to display message
00001B5A  4E4F                    1155          TRAP        #15                 ; trap call
00001B5C                          1156          
00001B5C  4EB9 00001FD4           1157          JSR         PrntReg
00001B62                          1158          
00001B62  6000 F4A8               1159          BRA         LOOP
00001B66                          1160  
00001B66  4242                    1161  opLSWI  CLR         D2
00001B68  3401                    1162          MOVE.W      D1, D2
00001B6A  E042                    1163          ASR         #eight, D2
00001B6C  C47C 0001               1164          AND         #$01, D2
00001B70                          1165      
00001B70  B43C 0000               1166          CMP.B       #zero, D2
00001B74  6700 000E               1167          BEQ         opLSRWI
00001B78  B43C 0001               1168          CMP.B       #one, D2
00001B7C  6700 0028               1169          BEQ         opLSLWI
00001B80  6000 0B28               1170          BRA         printInvalid 
00001B84                          1171          
00001B84  43F9 0000272D           1172  opLSRWI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001B8A  103C 000E               1173          MOVE.B      #14, D0             ; command for trap call to display message
00001B8E  4E4F                    1174          TRAP        #15                 ; trap call
00001B90                          1175  
00001B90  43F9 00002748           1176          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001B96  103C 000E               1177          MOVE.B      #14, D0             ; command for trap call to display message
00001B9A  4E4F                    1178          TRAP        #15                 ; trap call
00001B9C                          1179          
00001B9C  4EB9 00001F78           1180          JSR         PrntImm
00001BA2                          1181          
00001BA2  6000 F468               1182          BRA         LOOP
00001BA6                          1183  
00001BA6                          1184  
00001BA6  43F9 00002731           1185  opLSLWI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001BAC  103C 000E               1186          MOVE.B      #14, D0             ; command for trap call to display message
00001BB0  4E4F                    1187          TRAP        #15                 ; trap call
00001BB2                          1188  
00001BB2  43F9 00002748           1189          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001BB8  103C 000E               1190          MOVE.B      #14, D0             ; command for trap call to display message
00001BBC  4E4F                    1191          TRAP        #15                 ; trap call
00001BBE                          1192          
00001BBE  4EB9 00001F78           1193          JSR         PrntImm
00001BC4                          1194          
00001BC4  6000 F446               1195          BRA         LOOP
00001BC8                          1196  
00001BC8                          1197  
00001BC8  4242                    1198  opLSWR  CLR         D2
00001BCA  3401                    1199          MOVE.W      D1, D2
00001BCC  E042                    1200          ASR         #eight, D2
00001BCE  C47C 0001               1201          AND         #$01, D2
00001BD2                          1202      
00001BD2  B43C 0000               1203          CMP.B       #zero, D2
00001BD6  6700 000E               1204          BEQ         opLSRWR
00001BDA  B43C 0001               1205          CMP.B       #one, D2
00001BDE  6700 0028               1206          BEQ         opLSLWR
00001BE2  6000 0AC6               1207          BRA         printInvalid 
00001BE6                          1208          
00001BE6  43F9 0000272D           1209  opLSRWR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001BEC  103C 000E               1210          MOVE.B      #14, D0             ; command for trap call to display message
00001BF0  4E4F                    1211          TRAP        #15                 ; trap call
00001BF2                          1212  
00001BF2  43F9 00002748           1213          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001BF8  103C 000E               1214          MOVE.B      #14, D0             ; command for trap call to display message
00001BFC  4E4F                    1215          TRAP        #15                 ; trap call
00001BFE                          1216          
00001BFE  4EB9 00001FD4           1217          JSR         PrntReg
00001C04                          1218          
00001C04  6000 F406               1219          BRA         LOOP
00001C08                          1220          
00001C08  43F9 00002731           1221  opLSLWR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001C0E  103C 000E               1222          MOVE.B      #14, D0             ; command for trap call to display message
00001C12  4E4F                    1223          TRAP        #15                 ; trap call
00001C14                          1224  
00001C14  43F9 00002748           1225          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001C1A  103C 000E               1226          MOVE.B      #14, D0             ; command for trap call to display message
00001C1E  4E4F                    1227          TRAP        #15                 ; trap call
00001C20                          1228          
00001C20  4EB9 00001FD4           1229          JSR         PrntReg
00001C26                          1230          
00001C26  6000 F3E4               1231          BRA         LOOP
00001C2A                          1232  
00001C2A                          1233  
00001C2A                          1234  
00001C2A  4242                    1235  opROWI  CLR         D2
00001C2C  3401                    1236          MOVE.W      D1, D2
00001C2E  E042                    1237          ASR         #eight, D2
00001C30  C47C 0001               1238          AND         #$01, D2
00001C34                          1239      
00001C34  B43C 0000               1240          CMP.B       #zero, D2
00001C38  6700 000E               1241          BEQ         opRORWI
00001C3C  B43C 0001               1242          CMP.B       #one, D2
00001C40  6700 0028               1243          BEQ         opROLWI
00001C44  6000 0A64               1244          BRA         printInvalid 
00001C48                          1245          
00001C48  43F9 0000273D           1246  opRORWI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001C4E  103C 000E               1247          MOVE.B      #14, D0             ; command for trap call to display message
00001C52  4E4F                    1248          TRAP        #15                 ; trap call
00001C54                          1249  
00001C54  43F9 00002748           1250          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001C5A  103C 000E               1251          MOVE.B      #14, D0             ; command for trap call to display message
00001C5E  4E4F                    1252          TRAP        #15                 ; trap call
00001C60                          1253          
00001C60  4EB9 00001F78           1254          JSR         PrntImm
00001C66                          1255          
00001C66  6000 F3A4               1256          BRA         LOOP
00001C6A                          1257  
00001C6A  43F9 00002741           1258  opROLWI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001C70  103C 000E               1259          MOVE.B      #14, D0             ; command for trap call to display message
00001C74  4E4F                    1260          TRAP        #15                 ; trap call
00001C76                          1261  
00001C76  43F9 00002748           1262          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001C7C  103C 000E               1263          MOVE.B      #14, D0             ; command for trap call to display message
00001C80  4E4F                    1264          TRAP        #15                 ; trap call
00001C82                          1265          
00001C82  4EB9 00001F78           1266          JSR         PrntImm
00001C88                          1267          
00001C88  6000 F382               1268          BRA         LOOP
00001C8C                          1269  
00001C8C  4242                    1270  opROWR  CLR         D2
00001C8E  3401                    1271          MOVE.W      D1, D2
00001C90  E042                    1272          ASR         #eight, D2
00001C92  C47C 0001               1273          AND         #$01, D2
00001C96                          1274      
00001C96  B43C 0000               1275          CMP.B       #zero, D2
00001C9A  6700 000E               1276          BEQ         opRORWR
00001C9E  B43C 0001               1277          CMP.B       #one, D2
00001CA2  6700 0028               1278          BEQ         opROLWR
00001CA6  6000 0A02               1279          BRA         printInvalid     
00001CAA                          1280          
00001CAA  43F9 0000273D           1281  opRORWR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001CB0  103C 000E               1282          MOVE.B      #14, D0             ; command for trap call to display message
00001CB4  4E4F                    1283          TRAP        #15                 ; trap call
00001CB6                          1284  
00001CB6  43F9 00002748           1285          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001CBC  103C 000E               1286          MOVE.B      #14, D0             ; command for trap call to display message
00001CC0  4E4F                    1287          TRAP        #15                 ; trap call
00001CC2                          1288          
00001CC2  4EB9 00001FD4           1289          JSR         PrntReg
00001CC8                          1290          
00001CC8  6000 F342               1291          BRA         LOOP
00001CCC                          1292  
00001CCC  43F9 00002741           1293  opROLWR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001CD2  103C 000E               1294          MOVE.B      #14, D0             ; command for trap call to display message
00001CD6  4E4F                    1295          TRAP        #15                 ; trap call
00001CD8                          1296  
00001CD8  43F9 00002748           1297          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001CDE  103C 000E               1298          MOVE.B      #14, D0             ; command for trap call to display message
00001CE2  4E4F                    1299          TRAP        #15                 ; trap call
00001CE4                          1300          
00001CE4  4EB9 00001FD4           1301          JSR         PrntReg
00001CEA                          1302          
00001CEA  6000 F320               1303          BRA         LOOP
00001CEE                          1304  
00001CEE  4242                    1305  memSL   CLR         D2
00001CF0  1401                    1306          MOVE.B      D1,D2
00001CF2  E642                    1307          ASR         #three, D2
00001CF4                          1308          
00001CF4  C47C 0007               1309          AND         #$07, D2
00001CF8                          1310          
00001CF8  B43C 0000               1311          CMP.B       #zero, D2
00001CFC  6700 002E               1312          BEQ         opASLI
00001D00  B43C 0004               1313          CMP.B       #four, D2
00001D04  6700 0088               1314          BEQ         opASLR
00001D08  B43C 0001               1315          CMP.B       #one, D2
00001D0C  6700 00E2               1316          BEQ         opLSLI
00001D10  B43C 0005               1317          CMP.B       #five, D2
00001D14  6700 013C               1318          BEQ         opLSLR
00001D18  B43C 0003               1319          CMP.B       #three, D2
00001D1C  6700 0196               1320          BEQ         opROLI
00001D20  B43C 0007               1321          CMP.B       #seven, D2
00001D24  6700 01F0               1322          BEQ         opROLR
00001D28  6000 0980               1323          BRA         printInvalid
00001D2C                          1324          
00001D2C  4242                    1325  opASLI  CLR         D2
00001D2E  3401                    1326          MOVE.W      D1, D2
00001D30  E042                    1327          ASR         #eight, D2
00001D32  C47C 0001               1328          AND         #$01, D2
00001D36                          1329      
00001D36  B43C 0000               1330          CMP.B       #zero, D2
00001D3A  6700 000E               1331          BEQ         opASRLI
00001D3E  B43C 0001               1332          CMP.B       #one, D2
00001D42  6700 0028               1333          BEQ         opASLLI
00001D46  6000 0962               1334          BRA         printInvalid
00001D4A                          1335          
00001D4A  43F9 00002735           1336  opASRLI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001D50  103C 000E               1337          MOVE.B      #14, D0             ; command for trap call to display message
00001D54  4E4F                    1338          TRAP        #15                 ; trap call
00001D56                          1339  
00001D56  43F9 0000274B           1340          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001D5C  103C 000E               1341          MOVE.B      #14, D0             ; command for trap call to display message
00001D60  4E4F                    1342          TRAP        #15                 ; trap call
00001D62                          1343          
00001D62  4EB9 00001F78           1344          JSR         PrntImm
00001D68                          1345          
00001D68  6000 F2A2               1346          BRA         LOOP
00001D6C                          1347  
00001D6C  43F9 00002739           1348  opASLLI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001D72  103C 000E               1349          MOVE.B      #14, D0             ; command for trap call to display message
00001D76  4E4F                    1350          TRAP        #15                 ; trap call
00001D78                          1351  
00001D78  43F9 0000274B           1352          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001D7E  103C 000E               1353          MOVE.B      #14, D0             ; command for trap call to display message
00001D82  4E4F                    1354          TRAP        #15                 ; trap call
00001D84                          1355          
00001D84  4EB9 00001F78           1356          JSR         PrntImm
00001D8A                          1357          
00001D8A  6000 F280               1358          BRA         LOOP
00001D8E                          1359  
00001D8E  4242                    1360  opASLR  CLR         D2
00001D90  3401                    1361          MOVE.W      D1, D2
00001D92  E042                    1362          ASR         #eight, D2
00001D94  C47C 0001               1363          AND         #$01, D2
00001D98                          1364      
00001D98  B43C 0000               1365          CMP.B       #zero, D2
00001D9C  6700 000E               1366          BEQ         opASRLR
00001DA0  B43C 0001               1367          CMP.B       #one, D2
00001DA4  6700 0028               1368          BEQ         opASLLR
00001DA8  6000 0900               1369          BRA         printInvalid 
00001DAC                          1370          
00001DAC  43F9 00002735           1371  opASRLR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001DB2  103C 000E               1372          MOVE.B      #14, D0             ; command for trap call to display message
00001DB6  4E4F                    1373          TRAP        #15                 ; trap call
00001DB8                          1374  
00001DB8  43F9 0000274B           1375          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001DBE  103C 000E               1376          MOVE.B      #14, D0             ; command for trap call to display message
00001DC2  4E4F                    1377          TRAP        #15                 ; trap call
00001DC4                          1378          
00001DC4  4EB9 00001FD4           1379          JSR         PrntReg
00001DCA                          1380          
00001DCA  6000 F240               1381          BRA         LOOP
00001DCE                          1382  
00001DCE  43F9 00002739           1383  opASLLR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001DD4  103C 000E               1384          MOVE.B      #14, D0             ; command for trap call to display message
00001DD8  4E4F                    1385          TRAP        #15                 ; trap call
00001DDA                          1386  
00001DDA  43F9 0000274B           1387          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001DE0  103C 000E               1388          MOVE.B      #14, D0             ; command for trap call to display message
00001DE4  4E4F                    1389          TRAP        #15                 ; trap call
00001DE6                          1390          
00001DE6  4EB9 00001FD4           1391          JSR         PrntReg
00001DEC                          1392          
00001DEC  6000 F21E               1393          BRA         LOOP
00001DF0                          1394  
00001DF0  4242                    1395  opLSLI  CLR         D2
00001DF2  3401                    1396          MOVE.W      D1, D2
00001DF4  E042                    1397          ASR         #eight, D2
00001DF6  C47C 0001               1398          AND         #$01, D2
00001DFA                          1399      
00001DFA  B43C 0000               1400          CMP.B       #zero, D2
00001DFE  6700 000E               1401          BEQ         opLSRLI
00001E02  B43C 0001               1402          CMP.B       #one, D2
00001E06  6700 0028               1403          BEQ         opLSLLI
00001E0A  6000 089E               1404          BRA         printInvalid 
00001E0E                          1405          
00001E0E  43F9 0000272D           1406  opLSRLI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001E14  103C 000E               1407          MOVE.B      #14, D0             ; command for trap call to display message
00001E18  4E4F                    1408          TRAP        #15                 ; trap call
00001E1A                          1409  
00001E1A  43F9 0000274B           1410          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001E20  103C 000E               1411          MOVE.B      #14, D0             ; command for trap call to display message
00001E24  4E4F                    1412          TRAP        #15                 ; trap call
00001E26                          1413          
00001E26  4EB9 00001F78           1414          JSR         PrntImm
00001E2C                          1415          
00001E2C  6000 F1DE               1416          BRA         LOOP
00001E30                          1417  
00001E30                          1418  
00001E30  43F9 00002731           1419  opLSLLI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001E36  103C 000E               1420          MOVE.B      #14, D0             ; command for trap call to display message
00001E3A  4E4F                    1421          TRAP        #15                 ; trap call
00001E3C                          1422  
00001E3C  43F9 0000274B           1423          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001E42  103C 000E               1424          MOVE.B      #14, D0             ; command for trap call to display message
00001E46  4E4F                    1425          TRAP        #15                 ; trap call
00001E48                          1426          
00001E48  4EB9 00001F78           1427          JSR         PrntImm
00001E4E                          1428          
00001E4E  6000 F1BC               1429          BRA         LOOP
00001E52                          1430  
00001E52                          1431  
00001E52  4242                    1432  opLSLR  CLR         D2
00001E54  3401                    1433          MOVE.W      D1, D2
00001E56  E042                    1434          ASR         #eight, D2
00001E58  C47C 0001               1435          AND         #$01, D2
00001E5C                          1436      
00001E5C  B43C 0000               1437          CMP.B       #zero, D2
00001E60  6700 000E               1438          BEQ         opLSRLR
00001E64  B43C 0001               1439          CMP.B       #one, D2
00001E68  6700 0028               1440          BEQ         opLSLLR
00001E6C  6000 083C               1441          BRA         printInvalid 
00001E70                          1442          
00001E70  43F9 0000272D           1443  opLSRLR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001E76  103C 000E               1444          MOVE.B      #14, D0             ; command for trap call to display message
00001E7A  4E4F                    1445          TRAP        #15                 ; trap call
00001E7C                          1446  
00001E7C  43F9 0000274B           1447          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001E82  103C 000E               1448          MOVE.B      #14, D0             ; command for trap call to display message
00001E86  4E4F                    1449          TRAP        #15                 ; trap call
00001E88                          1450          
00001E88  4EB9 00001FD4           1451          JSR         PrntReg
00001E8E                          1452          
00001E8E  6000 F17C               1453          BRA         LOOP
00001E92                          1454          
00001E92  43F9 00002731           1455  opLSLLR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001E98  103C 000E               1456          MOVE.B      #14, D0             ; command for trap call to display message
00001E9C  4E4F                    1457          TRAP        #15                 ; trap call
00001E9E                          1458  
00001E9E  43F9 0000274B           1459          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001EA4  103C 000E               1460          MOVE.B      #14, D0             ; command for trap call to display message
00001EA8  4E4F                    1461          TRAP        #15                 ; trap call
00001EAA                          1462          
00001EAA  4EB9 00001FD4           1463          JSR         PrntReg
00001EB0                          1464          
00001EB0  6000 F15A               1465          BRA         LOOP
00001EB4                          1466  
00001EB4                          1467  
00001EB4                          1468  
00001EB4  4242                    1469  opROLI  CLR         D2
00001EB6  3401                    1470          MOVE.W      D1, D2
00001EB8  E042                    1471          ASR         #eight, D2
00001EBA  C47C 0001               1472          AND         #$01, D2
00001EBE                          1473      
00001EBE  B43C 0000               1474          CMP.B       #zero, D2
00001EC2  6700 000E               1475          BEQ         opRORLI
00001EC6  B43C 0001               1476          CMP.B       #one, D2
00001ECA  6700 0028               1477          BEQ         opROLLI
00001ECE  6000 07DA               1478          BRA         printInvalid 
00001ED2                          1479          
00001ED2  43F9 0000273D           1480  opRORLI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001ED8  103C 000E               1481          MOVE.B      #14, D0             ; command for trap call to display message
00001EDC  4E4F                    1482          TRAP        #15                 ; trap call
00001EDE                          1483  
00001EDE  43F9 0000274B           1484          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001EE4  103C 000E               1485          MOVE.B      #14, D0             ; command for trap call to display message
00001EE8  4E4F                    1486          TRAP        #15                 ; trap call
00001EEA                          1487          
00001EEA  4EB9 00001F78           1488          JSR         PrntImm
00001EF0                          1489          
00001EF0  6000 F11A               1490          BRA         LOOP
00001EF4                          1491  
00001EF4  43F9 00002741           1492  opROLLI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001EFA  103C 000E               1493          MOVE.B      #14, D0             ; command for trap call to display message
00001EFE  4E4F                    1494          TRAP        #15                 ; trap call
00001F00                          1495  
00001F00  43F9 0000274B           1496          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F06  103C 000E               1497          MOVE.B      #14, D0             ; command for trap call to display message
00001F0A  4E4F                    1498          TRAP        #15                 ; trap call
00001F0C                          1499          
00001F0C  4EB9 00001F78           1500          JSR         PrntImm
00001F12                          1501          
00001F12  6000 F0F8               1502          BRA         LOOP
00001F16                          1503  
00001F16  4242                    1504  opROLR  CLR         D2
00001F18  3401                    1505          MOVE.W      D1, D2
00001F1A  E042                    1506          ASR         #eight, D2
00001F1C  C47C 0001               1507          AND         #$01, D2
00001F20                          1508      
00001F20  B43C 0000               1509          CMP.B       #zero, D2
00001F24  6700 000E               1510          BEQ         opRORLR
00001F28  B43C 0001               1511          CMP.B       #one, D2
00001F2C  6700 0028               1512          BEQ         opROLLR
00001F30  6000 0778               1513          BRA         printInvalid     
00001F34                          1514          
00001F34  43F9 0000273D           1515  opRORLR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F3A  103C 000E               1516          MOVE.B      #14, D0             ; command for trap call to display message
00001F3E  4E4F                    1517          TRAP        #15                 ; trap call
00001F40                          1518  
00001F40  43F9 0000274B           1519          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F46  103C 000E               1520          MOVE.B      #14, D0             ; command for trap call to display message
00001F4A  4E4F                    1521          TRAP        #15                 ; trap call
00001F4C                          1522          
00001F4C  4EB9 00001FD4           1523          JSR         PrntReg
00001F52                          1524          
00001F52  6000 F0B8               1525          BRA         LOOP
00001F56                          1526  
00001F56  43F9 00002741           1527  opROLLR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F5C  103C 000E               1528          MOVE.B      #14, D0             ; command for trap call to display message
00001F60  4E4F                    1529          TRAP        #15                 ; trap call
00001F62                          1530  
00001F62  43F9 0000274B           1531          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F68  103C 000E               1532          MOVE.B      #14, D0             ; command for trap call to display message
00001F6C  4E4F                    1533          TRAP        #15                 ; trap call
00001F6E                          1534          
00001F6E  4EB9 00001FD4           1535          JSR         PrntReg
00001F74                          1536          
00001F74  6000 F096               1537          BRA         LOOP
00001F78                          1538          
00001F78  48E7 FF7E               1539  PrntImm MOVEM.L D0-D7/A1-A6, -(SP)
00001F7C                          1540          
00001F7C  43F9 000026B2           1541          LEA         space, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F82  103C 000E               1542          MOVE.B      #14, D0             ; command for trap call to display message
00001F86  4E4F                    1543          TRAP        #15                 ; trap call
00001F88                          1544          
00001F88  43F9 000026B5           1545          LEA         hashTag, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F8E  103C 000E               1546          MOVE.B      #14, D0             ; command for trap call to display message
00001F92  4E4F                    1547          TRAP        #15                 ; trap call
00001F94                          1548          
00001F94  4242                    1549          CLR         D2
00001F96  3401                    1550          MOVE.W      D1, D2
00001F98  E042                    1551          ASR         #eight, D2
00001F9A  E242                    1552          ASR         #one, D2
00001F9C  C47C 0007               1553          AND         #$07, D2
00001FA0                          1554          
00001FA0  4EB9 00002026           1555          JSR         MemShiftImm
00001FA6                          1556          
00001FA6  43F9 000026B9           1557          LEA         comma, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001FAC  103C 000E               1558          MOVE.B      #14, D0             ; command for trap call to display message
00001FB0  4E4F                    1559          TRAP        #15                 ; trap call
00001FB2                          1560          
00001FB2  4242                    1561          CLR         D2
00001FB4  4243                    1562          CLR         D3
00001FB6  1601                    1563          MOVE.B      D1,D3
00001FB8  C67C 0007               1564          AND         #$07, D3
00001FBC                          1565          
00001FBC  4EB9 00002050           1566          JSR         printEA
00001FC2                          1567          
00001FC2  43F9 000026AE           1568          LEA         newLine, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001FC8  103C 000E               1569          MOVE.B      #14, D0             ; command for trap call to display message
00001FCC  4E4F                    1570          TRAP        #15                 ; trap call
00001FCE                          1571          
00001FCE  4CDF 7EFF               1572          MOVEM.L  (SP)+, D0-D7/A1-A6
00001FD2  4E75                    1573          RTS
00001FD4                          1574          
00001FD4  48E7 FF7E               1575  PrntReg MOVEM.L D0-D7/A1-A6, -(SP)
00001FD8                          1576          
00001FD8  43F9 000026B2           1577          LEA         space, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001FDE  103C 000E               1578          MOVE.B      #14, D0             ; command for trap call to display message
00001FE2  4E4F                    1579          TRAP        #15                 ; trap call
00001FE4                          1580          
00001FE4  4242                    1581          CLR         D2
00001FE6  4243                    1582          CLR         D3
00001FE8  3601                    1583          MOVE.W      D1, D3
00001FEA  E043                    1584          ASR         #eight, D3
00001FEC  E243                    1585          ASR         #one, D3
00001FEE  C67C 0007               1586          AND         #$07, D3
00001FF2                          1587          
00001FF2  4EB9 00002050           1588          JSR         printEA
00001FF8                          1589          
00001FF8  43F9 000026B9           1590          LEA         comma, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001FFE  103C 000E               1591          MOVE.B      #14, D0             ; command for trap call to display message
00002002  4E4F                    1592          TRAP        #15                 ; trap call
00002004                          1593          
00002004  4242                    1594          CLR         D2
00002006  4243                    1595          CLR         D3
00002008  1601                    1596          MOVE.B      D1,D3
0000200A  C67C 0007               1597          AND         #$07, D3
0000200E                          1598          
0000200E  4EB9 00002050           1599          JSR         printEA
00002014                          1600          
00002014  43F9 000026AE           1601          LEA         newLine, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000201A  103C 000E               1602          MOVE.B      #14, D0             ; command for trap call to display message
0000201E  4E4F                    1603          TRAP        #15                 ; trap call
00002020                          1604          
00002020  4CDF 7EFF               1605          MOVEM.L  (SP)+, D0-D7/A1-A6
00002024  4E75                    1606          RTS
00002026                          1607          
00002026  48E7 FF7E               1608  MemShiftImm     MOVEM.L D0-D7/A1-A6, -(SP)
0000202A  4241                    1609                  CLR     D1
0000202C                          1610                  
0000202C  1202                    1611                  MOVE.B  D2, D1
0000202E  B23C 0000               1612                  CMP.B   #zero, D1
00002032  6700 000C               1613                  BEQ     displayEight
00002036                          1614                  
00002036  103C 0003               1615                  MOVE.B  #3, D0
0000203A  4E4F                    1616                  TRAP    #15
0000203C  6000 000C               1617                  BRA     endSubroutine
00002040                          1618                  
00002040  123C 0008               1619  displayEight    MOVE.B  #$08, D1
00002044  103C 0003               1620                  MOVE.B  #3, D0
00002048  4E4F                    1621                  TRAP    #15                
0000204A                          1622  endSubroutine
0000204A  4CDF 7EFF               1623                  MOVEM.L  (SP)+, D0-D7/A1-A6
0000204E  4E75                    1624                  RTS
00002050                          1625          
00002050                          1626  
00002050                          1627  ***********************************************************************************************************
00002050                          1628  *
00002050                          1629  *                                           EA Print Check
00002050                          1630  *
00002050                          1631  ***********************************************************************************************************
00002050  48E7 FF7E               1632  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00002054                          1633  
00002054  B43C 0000               1634              CMP.B       #zero, D2
00002058  6700 002E               1635              BEQ         pDataReg
0000205C  B43C 0001               1636              CMP.B       #one, D2
00002060  6700 00E6               1637              BEQ         pAddrReg
00002064  B43C 0002               1638              CMP.B       #two, D2
00002068  6700 019E               1639              BEQ         pAddrDir
0000206C  B43C 0003               1640              CMP.B       #three, D2
00002070  6700 02C2               1641              BEQ         pAddrPost
00002074  B43C 0004               1642              CMP.B       #four, D2
00002078  6700 0446               1643              BEQ         pAddrDec
0000207C  B43C 0007               1644              CMP.B       #seven, D2
00002080  6700 0576               1645              BEQ         pHex
00002084  6000 061E               1646              BRA         invalid
00002088                          1647  
00002088                          1648  ***********************************************************************************************************
00002088                          1649  * Data Register        
00002088  B63C 0000               1650  pDataReg    CMP.B   #zero,D3
0000208C  6700 003A               1651              BEQ     displayD0
00002090  B63C 0001               1652              CMP.B   #one,D3
00002094  6700 0042               1653              BEQ     displayD1
00002098  B63C 0002               1654              CMP.B   #two,D3
0000209C  6700 004A               1655              BEQ     displayD2
000020A0  B63C 0003               1656              CMP.B   #three,D3
000020A4  6700 0052               1657              BEQ     displayD3
000020A8  B63C 0004               1658              CMP.B   #four,D3
000020AC  6700 005A               1659              BEQ     displayD4
000020B0  B63C 0005               1660              CMP.B   #five,D3
000020B4  6700 0062               1661              BEQ     displayD5
000020B8  B63C 0006               1662              CMP.B   #six,D3
000020BC  6700 006A               1663              BEQ     displayD6
000020C0  B63C 0007               1664              CMP.B   #seven,D3
000020C4  6700 0072               1665              BEQ     displayD7
000020C8                          1666              
000020C8  43F9 00002768           1667  displayD0   LEA         dispD0, A1          ; Display space
000020CE  103C 000E               1668              MOVE.B      #14, D0             ; command for trap call to display message
000020D2  4E4F                    1669              TRAP        #15                 ; trap call
000020D4  6000 05CE               1670              BRA         endSUB              ; go to the end of the subroutine
000020D8                          1671              
000020D8  43F9 0000276B           1672  displayD1   LEA         dispD1, A1          ; Display space
000020DE  103C 000E               1673              MOVE.B      #14, D0             ; command for trap call to display message
000020E2  4E4F                    1674              TRAP        #15                 ; trap call
000020E4  6000 05BE               1675              BRA         endSUB              ; go to the end of the subroutine
000020E8                          1676  
000020E8  43F9 0000276E           1677  displayD2   LEA         dispD2, A1          ; Display space
000020EE  103C 000E               1678              MOVE.B      #14, D0             ; command for trap call to display message
000020F2  4E4F                    1679              TRAP        #15                 ; trap call
000020F4  6000 05AE               1680              BRA         endSUB              ; go to the end of the subroutine
000020F8                          1681  
000020F8  43F9 00002771           1682  displayD3   LEA         dispD3, A1          ; Display space
000020FE  103C 000E               1683              MOVE.B      #14, D0             ; command for trap call to display message
00002102  4E4F                    1684              TRAP        #15                 ; trap call
00002104  6000 059E               1685              BRA         endSUB              ; go to the end of the subroutine
00002108                          1686  
00002108  43F9 00002774           1687  displayD4   LEA         dispD4, A1          ; Display space
0000210E  103C 000E               1688              MOVE.B      #14, D0             ; command for trap call to display message
00002112  4E4F                    1689              TRAP        #15                 ; trap call
00002114  6000 058E               1690              BRA         endSUB              ; go to the end of the subroutine
00002118                          1691  
00002118  43F9 00002777           1692  displayD5   LEA         dispD5, A1          ; Display space
0000211E  103C 000E               1693              MOVE.B      #14, D0             ; command for trap call to display message
00002122  4E4F                    1694              TRAP        #15                 ; trap call
00002124  6000 057E               1695              BRA         endSUB              ; go to the end of the subroutine
00002128                          1696  
00002128  43F9 0000277A           1697  displayD6   LEA         dispD6, A1          ; Display space
0000212E  103C 000E               1698              MOVE.B      #14, D0             ; command for trap call to display message
00002132  4E4F                    1699              TRAP        #15                 ; trap call
00002134  6000 056E               1700              BRA         endSUB              ; go to the end of the subroutine
00002138                          1701  
00002138  43F9 0000277D           1702  displayD7   LEA         dispD7, A1          ; Display space
0000213E  103C 000E               1703              MOVE.B      #14, D0             ; command for trap call to display message
00002142  4E4F                    1704              TRAP        #15                 ; trap call
00002144  6000 055E               1705              BRA         endSUB              ; go to the end of the subroutine
00002148                          1706  ***********************************************************************************************************
00002148                          1707  * Address Register
00002148  B63C 0000               1708  pAddrReg    CMP.B   #zero,D3
0000214C  6700 003A               1709              BEQ     displayA0
00002150  B63C 0001               1710              CMP.B   #one,D3
00002154  6700 0042               1711              BEQ     displayA1
00002158  B63C 0002               1712              CMP.B   #two,D3
0000215C  6700 004A               1713              BEQ     displayA2
00002160  B63C 0003               1714              CMP.B   #three,D3
00002164  6700 0052               1715              BEQ     displayA3
00002168  B63C 0004               1716              CMP.B   #four,D3
0000216C  6700 005A               1717              BEQ     displayA4
00002170  B63C 0005               1718              CMP.B   #five,D3
00002174  6700 0062               1719              BEQ     displayA5
00002178  B63C 0006               1720              CMP.B   #six,D3
0000217C  6700 006A               1721              BEQ     displayA6
00002180  B63C 0007               1722              CMP.B   #seven,D3
00002184  6700 0072               1723              BEQ     displayA7
00002188                          1724              
00002188  43F9 0000274E           1725  displayA0   LEA         dispA0, A1          ; Display space
0000218E  103C 000E               1726              MOVE.B      #14, D0             ; command for trap call to display message
00002192  4E4F                    1727              TRAP        #15                 ; trap call
00002194  6000 050E               1728              BRA         endSUB              ; go to the end of the subroutine
00002198                          1729              
00002198  43F9 00002751           1730  displayA1   LEA         dispA1, A1          ; Display space
0000219E  103C 000E               1731              MOVE.B      #14, D0             ; command for trap call to display message
000021A2  4E4F                    1732              TRAP        #15                 ; trap call
000021A4  6000 04FE               1733              BRA         endSUB              ; go to the end of the subroutine
000021A8                          1734  
000021A8  43F9 00002754           1735  displayA2   LEA         dispA2, A1          ; Display space
000021AE  103C 000E               1736              MOVE.B      #14, D0             ; command for trap call to display message
000021B2  4E4F                    1737              TRAP        #15                 ; trap call
000021B4  6000 04EE               1738              BRA         endSUB              ; go to the end of the subroutine
000021B8                          1739  
000021B8  43F9 00002757           1740  displayA3   LEA         dispA3, A1          ; Display space
000021BE  103C 000E               1741              MOVE.B      #14, D0             ; command for trap call to display message
000021C2  4E4F                    1742              TRAP        #15                 ; trap call
000021C4  6000 04DE               1743              BRA         endSUB              ; go to the end of the subroutine
000021C8                          1744  
000021C8  43F9 0000275A           1745  displayA4   LEA         dispA4, A1          ; Display space
000021CE  103C 000E               1746              MOVE.B      #14, D0             ; command for trap call to display message
000021D2  4E4F                    1747              TRAP        #15                 ; trap call
000021D4  6000 04CE               1748              BRA         endSUB              ; go to the end of the subroutine
000021D8                          1749  
000021D8  43F9 0000275D           1750  displayA5   LEA         dispA5, A1          ; Display space
000021DE  103C 000E               1751              MOVE.B      #14, D0             ; command for trap call to display message
000021E2  4E4F                    1752              TRAP        #15                 ; trap call
000021E4  6000 04BE               1753              BRA         endSUB              ; go to the end of the subroutine
000021E8                          1754  
000021E8  43F9 00002760           1755  displayA6   LEA         dispA6, A1          ; Display space
000021EE  103C 000E               1756              MOVE.B      #14, D0             ; command for trap call to display message
000021F2  4E4F                    1757              TRAP        #15                 ; trap call
000021F4  6000 04AE               1758              BRA         endSUB              ; go to the end of the subroutine
000021F8                          1759  
000021F8  43F9 00002763           1760  displayA7   LEA         dispA7, A1          ; Display space
000021FE  103C 000E               1761              MOVE.B      #14, D0             ; command for trap call to display message
00002202  4E4F                    1762              TRAP        #15                 ; trap call
00002204  6000 049E               1763              BRA         endSUB              ; go to the end of the subroutine
00002208                          1764  
00002208                          1765  ***********************************************************************************************************
00002208                          1766  * Address Register Direct
00002208                          1767  
00002208  43F9 000026BB           1768  pAddrDir    LEA         opPer, A1           ; Display space
0000220E  103C 000E               1769              MOVE.B      #14, D0             ; command for trap call to display message
00002212  4E4F                    1770              TRAP        #15                 ; trap call
00002214                          1771              
00002214  B63C 0000               1772              CMP.B   #zero,D3
00002218  6700 003A               1773              BEQ     displayA0A
0000221C  B63C 0001               1774              CMP.B   #one,D3
00002220  6700 004E               1775              BEQ     displayA1A
00002224  B63C 0002               1776              CMP.B   #two,D3
00002228  6700 0062               1777              BEQ     displayA2A
0000222C  B63C 0003               1778              CMP.B   #three,D3
00002230  6700 0076               1779              BEQ     displayA3A
00002234  B63C 0004               1780              CMP.B   #four,D3
00002238  6700 008A               1781              BEQ     displayA4A
0000223C  B63C 0005               1782              CMP.B   #five,D3
00002240  6700 009E               1783              BEQ     displayA5A
00002244  B63C 0006               1784              CMP.B   #six,D3
00002248  6700 00B2               1785              BEQ     displayA6A
0000224C  B63C 0007               1786              CMP.B   #seven,D3
00002250  6700 00C6               1787              BEQ     displayA7A
00002254                          1788              
00002254  43F9 0000274E           1789  displayA0A  LEA         dispA0, A1          ; Display space
0000225A  103C 000E               1790              MOVE.B      #14, D0             ; command for trap call to display message
0000225E  4E4F                    1791              TRAP        #15                 ; trap call
00002260  43F9 000026BD           1792              LEA         clPer, A1           ; Display space
00002266  103C 000E               1793              MOVE.B      #14, D0             ; command for trap call to display message
0000226A  4E4F                    1794              TRAP        #15                 ; trap call
0000226C  6000 0436               1795              BRA         endSUB              ; go to the end of the subroutine
00002270                          1796              
00002270  43F9 00002751           1797  displayA1A  LEA         dispA1, A1          ; Display space
00002276  103C 000E               1798              MOVE.B      #14, D0             ; command for trap call to display message
0000227A  4E4F                    1799              TRAP        #15                 ; trap call
0000227C  43F9 000026BD           1800              LEA         clPer, A1           ; Display space
00002282  103C 000E               1801              MOVE.B      #14, D0             ; command for trap call to display message
00002286  4E4F                    1802              TRAP        #15                 ; trap call
00002288  6000 041A               1803              BRA         endSUB              ; go to the end of the subroutine
0000228C                          1804  
0000228C  43F9 00002754           1805  displayA2A  LEA         dispA2, A1          ; Display space
00002292  103C 000E               1806              MOVE.B      #14, D0             ; command for trap call to display message
00002296  4E4F                    1807              TRAP        #15                 ; trap call
00002298  43F9 000026BD           1808              LEA         clPer, A1           ; Display space
0000229E  103C 000E               1809              MOVE.B      #14, D0             ; command for trap call to display message
000022A2  4E4F                    1810              TRAP        #15                 ; trap call
000022A4  6000 03FE               1811              BRA         endSUB              ; go to the end of the subroutine
000022A8                          1812  
000022A8  43F9 00002757           1813  displayA3A  LEA         dispA3, A1          ; Display space
000022AE  103C 000E               1814              MOVE.B      #14, D0             ; command for trap call to display message
000022B2  4E4F                    1815              TRAP        #15                 ; trap call
000022B4  43F9 000026BD           1816              LEA         clPer, A1           ; Display space
000022BA  103C 000E               1817              MOVE.B      #14, D0             ; command for trap call to display message
000022BE  4E4F                    1818              TRAP        #15                 ; trap call
000022C0  6000 03E2               1819              BRA         endSUB              ; go to the end of the subroutine
000022C4                          1820  
000022C4  43F9 0000275A           1821  displayA4A  LEA         dispA4, A1          ; Display space
000022CA  103C 000E               1822              MOVE.B      #14, D0             ; command for trap call to display message
000022CE  4E4F                    1823              TRAP        #15                 ; trap call
000022D0  43F9 000026BD           1824              LEA         clPer, A1           ; Display space
000022D6  103C 000E               1825              MOVE.B      #14, D0             ; command for trap call to display message
000022DA  4E4F                    1826              TRAP        #15                 ; trap call
000022DC  6000 03C6               1827              BRA         endSUB              ; go to the end of the subroutine
000022E0                          1828  
000022E0  43F9 0000275D           1829  displayA5A  LEA         dispA5, A1          ; Display space
000022E6  103C 000E               1830              MOVE.B      #14, D0             ; command for trap call to display message
000022EA  4E4F                    1831              TRAP        #15                 ; trap call
000022EC  43F9 000026BD           1832              LEA         clPer, A1           ; Display space
000022F2  103C 000E               1833              MOVE.B      #14, D0             ; command for trap call to display message
000022F6  4E4F                    1834              TRAP        #15                 ; trap call
000022F8  6000 03AA               1835              BRA         endSUB              ; go to the end of the subroutine
000022FC                          1836  
000022FC  43F9 00002760           1837  displayA6A  LEA         dispA6, A1          ; Display space
00002302  103C 000E               1838              MOVE.B      #14, D0             ; command for trap call to display message
00002306  4E4F                    1839              TRAP        #15                 ; trap call
00002308  43F9 000026BD           1840              LEA         clPer, A1           ; Display space
0000230E  103C 000E               1841              MOVE.B      #14, D0             ; command for trap call to display message
00002312  4E4F                    1842              TRAP        #15                 ; trap call
00002314  6000 038E               1843              BRA         endSUB              ; go to the end of the subroutine
00002318                          1844  
00002318  43F9 00002763           1845  displayA7A  LEA         dispA7, A1          ; Display space
0000231E  103C 000E               1846              MOVE.B      #14, D0             ; command for trap call to display message
00002322  4E4F                    1847              TRAP        #15                 ; trap call
00002324  43F9 000026BD           1848              LEA         clPer, A1           ; Display space
0000232A  103C 000E               1849              MOVE.B      #14, D0             ; command for trap call to display message
0000232E  4E4F                    1850              TRAP        #15                 ; trap call
00002330  6000 0372               1851              BRA         endSUB              ; go to the end of the subroutine
00002334                          1852              
00002334                          1853  ***********************************************************************************************************
00002334                          1854  * Addr Postincrement
00002334                          1855              
00002334  43F9 000026BB           1856  pAddrPost   LEA         opPer, A1           ; Display space
0000233A  103C 000E               1857              MOVE.B      #14, D0             ; command for trap call to display message
0000233E  4E4F                    1858              TRAP        #15                 ; trap call
00002340                          1859              
00002340  B63C 0000               1860              CMP.B   #zero,D3
00002344  6700 003A               1861              BEQ     displayA0P
00002348  B63C 0001               1862              CMP.B   #one,D3
0000234C  6700 005A               1863              BEQ     displayA1P
00002350  B63C 0002               1864              CMP.B   #two,D3
00002354  6700 007A               1865              BEQ     displayA2P
00002358  B63C 0003               1866              CMP.B   #three,D3
0000235C  6700 009A               1867              BEQ     displayA3P
00002360  B63C 0004               1868              CMP.B   #four,D3
00002364  6700 00BA               1869              BEQ     displayA4P
00002368  B63C 0005               1870              CMP.B   #five,D3
0000236C  6700 00DA               1871              BEQ     displayA5P
00002370  B63C 0006               1872              CMP.B   #six,D3
00002374  6700 00FA               1873              BEQ     displayA6P
00002378  B63C 0007               1874              CMP.B   #seven,D3
0000237C  6700 011A               1875              BEQ     displayA7P
00002380                          1876              
00002380  43F9 0000274E           1877  displayA0P  LEA         dispA0, A1          ; Display space
00002386  103C 000E               1878              MOVE.B      #14, D0             ; command for trap call to display message
0000238A  4E4F                    1879              TRAP        #15                 ; trap call
0000238C  43F9 000026BD           1880              LEA         clPer, A1           ; Display space
00002392  103C 000E               1881              MOVE.B      #14, D0             ; command for trap call to display message
00002396  4E4F                    1882              TRAP        #15                 ; trap call
00002398  43F9 000026C1           1883              LEA         inc, A1             ; Display space
0000239E  103C 000E               1884              MOVE.B      #14, D0             ; command for trap call to display message
000023A2  4E4F                    1885              TRAP        #15                 ; trap call
000023A4  6000 02FE               1886              BRA         endSUB              ; go to the end of the subroutine
000023A8                          1887              
000023A8  43F9 00002751           1888  displayA1P  LEA         dispA1, A1          ; Display space
000023AE  103C 000E               1889              MOVE.B      #14, D0             ; command for trap call to display message
000023B2  4E4F                    1890              TRAP        #15                 ; trap call
000023B4  43F9 000026BD           1891              LEA         clPer, A1           ; Display space
000023BA  103C 000E               1892              MOVE.B      #14, D0             ; command for trap call to display message
000023BE  4E4F                    1893              TRAP        #15                 ; trap call
000023C0  43F9 000026C1           1894              LEA         inc, A1             ; Display space
000023C6  103C 000E               1895              MOVE.B      #14, D0             ; command for trap call to display message
000023CA  4E4F                    1896              TRAP        #15                 ; trap call
000023CC  6000 02D6               1897              BRA         endSUB              ; go to the end of the subroutine
000023D0                          1898  
000023D0  43F9 00002754           1899  displayA2P  LEA         dispA2, A1          ; Display space
000023D6  103C 000E               1900              MOVE.B      #14, D0             ; command for trap call to display message
000023DA  4E4F                    1901              TRAP        #15                 ; trap call
000023DC  43F9 000026BD           1902              LEA         clPer, A1           ; Display space
000023E2  103C 000E               1903              MOVE.B      #14, D0             ; command for trap call to display message
000023E6  4E4F                    1904              TRAP        #15                 ; trap call
000023E8  43F9 000026C1           1905              LEA         inc, A1             ; Display space
000023EE  103C 000E               1906              MOVE.B      #14, D0             ; command for trap call to display message
000023F2  4E4F                    1907              TRAP        #15                 ; trap call
000023F4  6000 02AE               1908              BRA         endSUB              ; go to the end of the subroutine
000023F8                          1909  
000023F8  43F9 00002757           1910  displayA3P  LEA         dispA3, A1          ; Display space
000023FE  103C 000E               1911              MOVE.B      #14, D0             ; command for trap call to display message
00002402  4E4F                    1912              TRAP        #15                 ; trap call
00002404  43F9 000026BD           1913              LEA         clPer, A1           ; Display space
0000240A  103C 000E               1914              MOVE.B      #14, D0             ; command for trap call to display message
0000240E  4E4F                    1915              TRAP        #15                 ; trap call
00002410  43F9 000026C1           1916              LEA         inc, A1             ; Display space
00002416  103C 000E               1917              MOVE.B      #14, D0             ; command for trap call to display message
0000241A  4E4F                    1918              TRAP        #15                 ; trap call
0000241C  6000 0286               1919              BRA         endSUB              ; go to the end of the subroutine
00002420                          1920  
00002420  43F9 0000275A           1921  displayA4P  LEA         dispA4, A1          ; Display space
00002426  103C 000E               1922              MOVE.B      #14, D0             ; command for trap call to display message
0000242A  4E4F                    1923              TRAP        #15                 ; trap call
0000242C  43F9 000026BD           1924              LEA         clPer, A1           ; Display space
00002432  103C 000E               1925              MOVE.B      #14, D0             ; command for trap call to display message
00002436  4E4F                    1926              TRAP        #15                 ; trap call
00002438  43F9 000026C1           1927              LEA         inc, A1             ; Display space
0000243E  103C 000E               1928              MOVE.B      #14, D0             ; command for trap call to display message
00002442  4E4F                    1929              TRAP        #15                 ; trap call
00002444  6000 025E               1930              BRA         endSUB              ; go to the end of the subroutine
00002448                          1931  
00002448  43F9 0000275D           1932  displayA5P  LEA         dispA5, A1          ; Display space
0000244E  103C 000E               1933              MOVE.B      #14, D0             ; command for trap call to display message
00002452  4E4F                    1934              TRAP        #15                 ; trap call
00002454  43F9 000026BD           1935              LEA         clPer, A1           ; Display space
0000245A  103C 000E               1936              MOVE.B      #14, D0             ; command for trap call to display message
0000245E  4E4F                    1937              TRAP        #15                 ; trap call
00002460  43F9 000026C1           1938              LEA         inc, A1             ; Display space
00002466  103C 000E               1939              MOVE.B      #14, D0             ; command for trap call to display message
0000246A  4E4F                    1940              TRAP        #15                 ; trap call
0000246C  6000 0236               1941              BRA         endSUB              ; go to the end of the subroutine
00002470                          1942  
00002470  43F9 00002760           1943  displayA6P  LEA         dispA6, A1          ; Display space
00002476  103C 000E               1944              MOVE.B      #14, D0             ; command for trap call to display message
0000247A  4E4F                    1945              TRAP        #15                 ; trap call
0000247C  43F9 000026BD           1946              LEA         clPer, A1           ; Display space
00002482  103C 000E               1947              MOVE.B      #14, D0             ; command for trap call to display message
00002486  4E4F                    1948              TRAP        #15                 ; trap call
00002488  43F9 000026C1           1949              LEA         inc, A1             ; Display space
0000248E  103C 000E               1950              MOVE.B      #14, D0             ; command for trap call to display message
00002492  4E4F                    1951              TRAP        #15                 ; trap call
00002494  6000 020E               1952              BRA         endSUB              ; go to the end of the subroutine
00002498                          1953  
00002498  43F9 00002763           1954  displayA7P  LEA         dispA7, A1          ; Display space
0000249E  103C 000E               1955              MOVE.B      #14, D0             ; command for trap call to display message
000024A2  4E4F                    1956              TRAP        #15                 ; trap call
000024A4  43F9 000026BD           1957              LEA         clPer, A1           ; Display space
000024AA  103C 000E               1958              MOVE.B      #14, D0             ; command for trap call to display message
000024AE  4E4F                    1959              TRAP        #15                 ; trap call
000024B0  43F9 000026C1           1960              LEA         inc, A1             ; Display space
000024B6  103C 000E               1961              MOVE.B      #14, D0             ; command for trap call to display message
000024BA  4E4F                    1962              TRAP        #15                 ; trap call
000024BC  6000 01E6               1963              BRA         endSUB              ; go to the end of the subroutine
000024C0                          1964  
000024C0                          1965  ***********************************************************************************************************
000024C0                          1966  * Addr Postdecrement
000024C0                          1967  
000024C0  43F9 000026BF           1968  pAddrDec    LEA         dec, A1             ; Display space
000024C6  103C 000E               1969              MOVE.B      #14, D0             ; command for trap call to display message
000024CA  4E4F                    1970              TRAP        #15                 ; trap call
000024CC                          1971              
000024CC  43F9 000026BB           1972              LEA         opPer, A1           ; Display space
000024D2  103C 000E               1973              MOVE.B      #14, D0             ; command for trap call to display message
000024D6  4E4F                    1974              TRAP        #15                 ; trap call
000024D8                          1975              
000024D8  B63C 0000               1976              CMP.B   #zero,D3
000024DC  6700 003A               1977              BEQ     displayA0D
000024E0  B63C 0001               1978              CMP.B   #one,D3
000024E4  6700 004E               1979              BEQ     displayA1D
000024E8  B63C 0002               1980              CMP.B   #two,D3
000024EC  6700 0062               1981              BEQ     displayA2D
000024F0  B63C 0003               1982              CMP.B   #three,D3
000024F4  6700 0076               1983              BEQ     displayA3D
000024F8  B63C 0004               1984              CMP.B   #four,D3
000024FC  6700 008A               1985              BEQ     displayA4D
00002500  B63C 0005               1986              CMP.B   #five,D3
00002504  6700 009E               1987              BEQ     displayA5D
00002508  B63C 0006               1988              CMP.B   #six,D3
0000250C  6700 00B2               1989              BEQ     displayA6D
00002510  B63C 0007               1990              CMP.B   #seven,D3
00002514  6700 00C6               1991              BEQ     displayA7D
00002518                          1992              
00002518  43F9 0000274E           1993  displayA0D  LEA         dispA0, A1          ; Display space
0000251E  103C 000E               1994              MOVE.B      #14, D0             ; command for trap call to display message
00002522  4E4F                    1995              TRAP        #15                 ; trap call
00002524  43F9 000026BD           1996              LEA         clPer, A1           ; Display space
0000252A  103C 000E               1997              MOVE.B      #14, D0             ; command for trap call to display message
0000252E  4E4F                    1998              TRAP        #15                 ; trap call
00002530  6000 0172               1999              BRA         endSUB              ; go to the end of the subroutine
00002534                          2000              
00002534  43F9 00002751           2001  displayA1D  LEA         dispA1, A1          ; Display space
0000253A  103C 000E               2002              MOVE.B      #14, D0             ; command for trap call to display message
0000253E  4E4F                    2003              TRAP        #15                 ; trap call
00002540  43F9 000026BD           2004              LEA         clPer, A1           ; Display space
00002546  103C 000E               2005              MOVE.B      #14, D0             ; command for trap call to display message
0000254A  4E4F                    2006              TRAP        #15                 ; trap call
0000254C  6000 0156               2007              BRA         endSUB              ; go to the end of the subroutine
00002550                          2008  
00002550  43F9 00002754           2009  displayA2D  LEA         dispA2, A1          ; Display space
00002556  103C 000E               2010              MOVE.B      #14, D0             ; command for trap call to display message
0000255A  4E4F                    2011              TRAP        #15                 ; trap call
0000255C  43F9 000026BD           2012              LEA         clPer, A1           ; Display space
00002562  103C 000E               2013              MOVE.B      #14, D0             ; command for trap call to display message
00002566  4E4F                    2014              TRAP        #15                 ; trap call
00002568  6000 013A               2015              BRA         endSUB              ; go to the end of the subroutine
0000256C                          2016  
0000256C  43F9 00002757           2017  displayA3D  LEA         dispA3, A1          ; Display space
00002572  103C 000E               2018              MOVE.B      #14, D0             ; command for trap call to display message
00002576  4E4F                    2019              TRAP        #15                 ; trap call
00002578  43F9 000026BD           2020              LEA         clPer, A1           ; Display space
0000257E  103C 000E               2021              MOVE.B      #14, D0             ; command for trap call to display message
00002582  4E4F                    2022              TRAP        #15                 ; trap call
00002584  6000 011E               2023              BRA         endSUB              ; go to the end of the subroutine
00002588                          2024  
00002588  43F9 0000275A           2025  displayA4D  LEA         dispA4, A1          ; Display space
0000258E  103C 000E               2026              MOVE.B      #14, D0             ; command for trap call to display message
00002592  4E4F                    2027              TRAP        #15                 ; trap call
00002594  43F9 000026BD           2028              LEA         clPer, A1           ; Display space
0000259A  103C 000E               2029              MOVE.B      #14, D0             ; command for trap call to display message
0000259E  4E4F                    2030              TRAP        #15                 ; trap call
000025A0  6000 0102               2031              BRA         endSUB              ; go to the end of the subroutine
000025A4                          2032  
000025A4  43F9 0000275D           2033  displayA5D  LEA         dispA5, A1          ; Display space
000025AA  103C 000E               2034              MOVE.B      #14, D0             ; command for trap call to display message
000025AE  4E4F                    2035              TRAP        #15                 ; trap call
000025B0  43F9 000026BD           2036              LEA         clPer, A1           ; Display space
000025B6  103C 000E               2037              MOVE.B      #14, D0             ; command for trap call to display message
000025BA  4E4F                    2038              TRAP        #15                 ; trap call
000025BC  6000 00E6               2039              BRA         endSUB              ; go to the end of the subroutine
000025C0                          2040  
000025C0  43F9 00002760           2041  displayA6D  LEA         dispA6, A1          ; Display space
000025C6  103C 000E               2042              MOVE.B      #14, D0             ; command for trap call to display message
000025CA  4E4F                    2043              TRAP        #15                 ; trap call
000025CC  43F9 000026BD           2044              LEA         clPer, A1           ; Display space
000025D2  103C 000E               2045              MOVE.B      #14, D0             ; command for trap call to display message
000025D6  4E4F                    2046              TRAP        #15                 ; trap call
000025D8  6000 00CA               2047              BRA         endSUB              ; go to the end of the subroutine
000025DC                          2048  
000025DC  43F9 00002763           2049  displayA7D  LEA         dispA7, A1          ; Display space
000025E2  103C 000E               2050              MOVE.B      #14, D0             ; command for trap call to display message
000025E6  4E4F                    2051              TRAP        #15                 ; trap call
000025E8  43F9 000026BD           2052              LEA         clPer, A1           ; Display space
000025EE  103C 000E               2053              MOVE.B      #14, D0             ; command for trap call to display message
000025F2  4E4F                    2054              TRAP        #15                 ; trap call
000025F4  6000 00AE               2055              BRA         endSUB              ; go to the end of the subroutine
000025F8                          2056  ***********************************************************************************************************
000025F8                          2057  * Display Hex
000025F8                          2058  
000025F8  B63C 0000               2059  pHex        CMP.B       #zero, D3
000025FC  6700 0012               2060              BEQ         AbsShort
00002600  B63C 0001               2061              CMP.B       #one, D3
00002604  6700 003C               2062              BEQ         AbsLong
00002608  B63C 0004               2063              CMP.B       #four, D3
0000260C  6700 0066               2064              BEQ         DispImm
00002610                          2065              
00002610  43F9 000026BB           2066  AbsShort    LEA         opPer, A1           ; Display space
00002616  103C 000E               2067              MOVE.B      #14, D0             ; command for trap call to display message
0000261A  4E4F                    2068              TRAP        #15                 ; trap call
0000261C                          2069              
0000261C  43F9 000026B7           2070              LEA         dispHex, A1         ; Display space
00002622  103C 000E               2071              MOVE.B      #14, D0             ; command for trap call to display message
00002626  4E4F                    2072              TRAP        #15                 ; trap call
00002628                          2073              
00002628  4241                    2074              CLR         D1
0000262A  3218                    2075              MOVE.W      (A0)+, D1
0000262C                          2076              
0000262C  103C 0003               2077              MOVE.B      #3, D0
00002630  4E4F                    2078              TRAP        #15
00002632                          2079              
00002632  43F9 000026BD           2080              LEA         clPer, A1           ; Display space
00002638  103C 000E               2081              MOVE.B      #14, D0             ; command for trap call to display message
0000263C  4E4F                    2082              TRAP        #15                 ; trap call
0000263E                          2083              
0000263E  6000 0064               2084              BRA         endSub
00002642                          2085              
00002642  43F9 000026BB           2086  AbsLong     LEA         opPer, A1           ; Display space
00002648  103C 000E               2087              MOVE.B      #14, D0             ; command for trap call to display message
0000264C  4E4F                    2088              TRAP        #15                 ; trap call
0000264E                          2089              
0000264E  43F9 000026B7           2090              LEA         dispHex, A1         ; Display space
00002654  103C 000E               2091              MOVE.B      #14, D0             ; command for trap call to display message
00002658  4E4F                    2092              TRAP        #15                 ; trap call
0000265A                          2093              
0000265A  4241                    2094              CLR         D1
0000265C  2218                    2095              MOVE.L      (A0)+, D1
0000265E                          2096              
0000265E  103C 0003               2097              MOVE.B      #3, D0
00002662  4E4F                    2098              TRAP        #15
00002664                          2099              
00002664  43F9 000026BD           2100              LEA         clPer, A1           ; Display space
0000266A  103C 000E               2101              MOVE.B      #14, D0             ; command for trap call to display message
0000266E  4E4F                    2102              TRAP        #15                 ; trap call
00002670                          2103              
00002670  6000 0032               2104              BRA         endSub
00002674                          2105  
00002674  43F9 000026B5           2106  DispImm     LEA         hashTag, A1         ; Display space
0000267A  103C 000E               2107              MOVE.B      #14, D0             ; command for trap call to display message
0000267E  4E4F                    2108              TRAP        #15                 ; trap call
00002680                          2109              
00002680  4241                    2110              CLR         D1
00002682  3218                    2111              MOVE.W      (A0)+, D1
00002684                          2112              
00002684  103C 0003               2113              MOVE.B      #3, D0
00002688  4E4F                    2114              TRAP        #15
0000268A                          2115  
0000268A  43F9 000026B7           2116              LEA         dispHex, A1         ; Display space
00002690  103C 000E               2117              MOVE.B      #14, D0             ; command for trap call to display message
00002694  4E4F                    2118              TRAP        #15                 ; trap call
00002696                          2119              
00002696  4241                    2120              CLR         D1
00002698  3218                    2121              MOVE.W      (A0)+, D1
0000269A                          2122              
0000269A  103C 0003               2123              MOVE.B      #3, D0
0000269E  4E4F                    2124              TRAP        #15
000026A0                          2125  
000026A0  6000 0002               2126              BRA         endSub
000026A4                          2127  invalid
000026A4                          2128  
000026A4                          2129  endSUB
000026A4                          2130          
000026A4  4CDF 7EFF               2131              MOVEM.L  (SP)+, D0-D7/A1-A6
000026A8  4E75                    2132              RTS
000026AA                          2133  
000026AA                          2134  ***********************************************************************************************************
000026AA                          2135  ***********************************************************************************************************
000026AA                          2136  ***********************************************************************************************************
000026AA                          2137  
000026AA                          2138  printInvalid
000026AA                          2139  endPROG    
000026AA                          2140  
000026AA  FFFF FFFF               2141      SIMHALT                             ; halt simulator
000026AE                          2142  
000026AE= 20 0D 0A 00             2143  newLine     DC.B    ' ', CR, LF, 0
000026B2= 20 20 00                2144  space       DC.B    '  ', 0
000026B5                          2145  
000026B5= 23 00                   2146  hashTag     DC.B    '#', 0
000026B7= 24 00                   2147  dispHex     DC.B    '$', 0
000026B9= 2C 00                   2148  comma       DC.B    ',', 0
000026BB                          2149  
000026BB= 28 00                   2150  opPer       DC.B    '(', 0
000026BD= 29 00                   2151  clPer       DC.B    ')', 0
000026BF= 2D 00                   2152  dec         DC.B    '-', 0
000026C1= 2B 00                   2153  inc         DC.B    '+', 0
000026C3                          2154  
000026C3= 4F 52 49 00             2155  ORImatch    DC.B    'ORI', 0
000026C7= 43 4D 50 49 00          2156  CMPImatch   DC.B    'CMPI', 0
000026CC= 42 43 4C 52 00          2157  BCLRmatch   DC.B    'BCLR', 0
000026D1= 4D 4F 56 45 00          2158  MOVEmatch   DC.B    'MOVE', 0
000026D6= 4D 4F 56 45 41 00       2159  MOVEAmatch  DC.B    'MOVEA', 0
000026DC= 4E 45 47 00             2160  NEGmatch    DC.B    'NEG', 0
000026E0= 52 54 53 00             2161  RTSmatch    DC.B    'RTS', 0
000026E4= 4A 53 52 00             2162  JSRmatch    DC.B    'JSR', 0
000026E8= 4D 4F 56 45 4D 00       2163  MOVEMmatch  DC.B    'MOVEM', 0
000026EE= 4C 45 41 00             2164  LEAmatch    DC.B    'LEA', 0
000026F2= 53 55 42 51 00          2165  SUBQmatch   DC.B    'SUBQ', 0
000026F7= 42 52 41 00             2166  BRAmatch    DC.B    'BRA', 0
000026FB= 42 43 53 00             2167  BCSmatch    DC.B    'BCS', 0
000026FF= 42 56 43 00             2168  BVCmatch    DC.B    'BVC', 0
00002703= 42 47 45 00             2169  BGEmatch    DC.B    'BGE', 0
00002707= 42 4C 54 00             2170  BLTmatch    DC.B    'BLT', 0
0000270B= 44 49 56 53 00          2171  DIVSmatch   DC.B    'DIVS', 0
00002710= 4F 52 00                2172  ORmatch     DC.B    'OR', 0
00002713= 53 55 42 00             2173  SUBmatch    DC.B    'SUB', 0
00002717= 45 4F 52 00             2174  EORmatch    DC.B    'EOR', 0
0000271B= 43 4D 50 00             2175  CMPmatch    DC.B    'CMP', 0
0000271F= 4D 55 4C 53 00          2176  MULSmatch   DC.B    'MULS', 0
00002724= 41 44 44 00             2177  ADDmatch    DC.B    'ADD', 0
00002728= 41 44 44 41 00          2178  ADDAmatch   DC.B    'ADDA', 0
0000272D= 4C 53 52 00             2179  LSRmatch    DC.B    'LSR', 0
00002731= 4C 53 4C 00             2180  LSLmatch    DC.B    'LSL', 0
00002735= 41 53 52 00             2181  ASRmatch    DC.B    'ASR', 0
00002739= 41 53 4C 00             2182  ASLmatch    DC.B    'ASL', 0
0000273D= 52 4F 52 00             2183  RORmatch    DC.B    'ROR', 0
00002741= 52 4F 4C 00             2184  ROLmatch    DC.B    'ROL', 0
00002745                          2185   
00002745= 2E 42 00                2186  dispByte    DC.B    '.B', 0
00002748= 2E 57 00                2187  dispWord    DC.B    '.W', 0
0000274B= 2E 4C 00                2188  dispLong    DC.B    '.L', 0
0000274E                          2189  
0000274E= 41 30 00                2190  dispA0      DC.B    'A0', 0
00002751= 41 31 00                2191  dispA1      DC.B    'A1', 0
00002754= 41 32 00                2192  dispA2      DC.B    'A2', 0
00002757= 41 33 00                2193  dispA3      DC.B    'A3', 0
0000275A= 41 34 00                2194  dispA4      DC.B    'A4', 0
0000275D= 41 35 00                2195  dispA5      DC.B    'A5', 0
00002760= 41 36 00                2196  dispA6      DC.B    'A6', 0
00002763= 41 37 00                2197  dispA7      DC.B    'A7', 0
00002766                          2198  
00002766= 44 00                   2199  dispD       DC.B    'D',0
00002768= 44 30 00                2200  dispD0      DC.B    'D0', 0
0000276B= 44 31 00                2201  dispD1      DC.B    'D1', 0
0000276E= 44 32 00                2202  dispD2      DC.B    'D2', 0
00002771= 44 33 00                2203  dispD3      DC.B    'D3', 0
00002774= 44 34 00                2204  dispD4      DC.B    'D4', 0
00002777= 44 35 00                2205  dispD5      DC.B    'D5', 0
0000277A= 44 36 00                2206  dispD6      DC.B    'D6', 0
0000277D= 44 37 00                2207  dispD7      DC.B    'D7', 0 
00002780                          2208   
00002780                          2209             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             2642
ABSSHORT            2610
ADDAMATCH           2728
ADDMATCH            2724
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            2739
ASRMATCH            2735
BCLRMATCH           26CC
BCSMATCH            26FB
BGEMATCH            2703
BLTMATCH            2707
BRAEIGHT            1106
BRAELEVEN           110A
BRAFIVE             10D6
BRAFOUR             10BA
BRAFOURTEEN         110E
BRAMATCH            26F7
BRANINE             1106
BRAONE              10B6
BRASIX              10DA
BRATHIRTEEN         110E
BRATHREE            10BA
BRATWELVE           110A
BRATWO              10BA
BRAZERO             1086
BVCMATCH            26FF
CLPER               26BD
CMPIMATCH           26C7
CMPMATCH            271B
COMMA               26B9
CR                  D
DEC                 26BF
DISPA0              274E
DISPA1              2751
DISPA2              2754
DISPA3              2757
DISPA4              275A
DISPA5              275D
DISPA6              2760
DISPA7              2763
DISPBYTE            2745
DISPD               2766
DISPD0              2768
DISPD1              276B
DISPD2              276E
DISPD3              2771
DISPD4              2774
DISPD5              2777
DISPD6              277A
DISPD7              277D
DISPHEX             26B7
DISPIMM             2674
DISPLAYA0           2188
DISPLAYA0A          2254
DISPLAYA0D          2518
DISPLAYA0P          2380
DISPLAYA1           2198
DISPLAYA1A          2270
DISPLAYA1D          2534
DISPLAYA1P          23A8
DISPLAYA2           21A8
DISPLAYA2A          228C
DISPLAYA2D          2550
DISPLAYA2P          23D0
DISPLAYA3           21B8
DISPLAYA3A          22A8
DISPLAYA3D          256C
DISPLAYA3P          23F8
DISPLAYA4           21C8
DISPLAYA4A          22C4
DISPLAYA4D          2588
DISPLAYA4P          2420
DISPLAYA5           21D8
DISPLAYA5A          22E0
DISPLAYA5D          25A4
DISPLAYA5P          2448
DISPLAYA6           21E8
DISPLAYA6A          22FC
DISPLAYA6D          25C0
DISPLAYA6P          2470
DISPLAYA7           21F8
DISPLAYA7A          2318
DISPLAYA7D          25DC
DISPLAYA7P          2498
DISPLAYD0           20C8
DISPLAYD1           20D8
DISPLAYD2           20E8
DISPLAYD3           20F8
DISPLAYD4           2108
DISPLAYD5           2118
DISPLAYD6           2128
DISPLAYD7           2138
DISPLAYEIGHT        2040
DISPLONG            274B
DISPWORD            2748
DIVSMATCH           270B
EIGHT               8
ELEVEN              B
ENDPROG             26AA
ENDSUB              26A4
ENDSUBROUTINE       204A
EORMATCH            2717
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             26B5
INC                 26C1
INVALID             26A4
JSRMATCH            26E4
LEAMATCH            26EE
LF                  A
LOOP                100C
LSLMATCH            2731
LSRMATCH            272D
MEMSB               17DA
MEMSHIFTIMM         2026
MEMSHIFTS           1124
MEMSL               1CEE
MEMSW               1A64
MOVEAMATCH          26D6
MOVEMATCH           26D1
MOVEMMATCH          26E8
MULSMATCH           271F
NEGMATCH            26DC
NEWLINE             26AE
NINE                9
ONE                 1
OPASBI              1818
OPASBR              187A
OPASL               1612
OPASLBI             1858
OPASLBR             18BA
OPASLI              1D2C
OPASLLI             1D6C
OPASLLR             1DCE
OPASLR              1D8E
OPASLWI             1AE2
OPASLWR             1B44
OPASR               165E
OPASRBI             1836
OPASRBR             1898
OPASRLI             1D4A
OPASRLR             1DAC
OPASRWI             1AC0
OPASRWR             1B22
OPASWI              1AA2
OPASWR              1B04
OPBCLR              1444
OPBCS               15CA
OPBGE               15E2
OPBLT               15EE
OPBRA               15B2
OPBVC               15D6
OPCMPI              12D2
OPCMPIB             131E
OPCMPIL             13E2
OPCMPIW             1380
OPDYNBCLR           14A8
OPLSBI              18DC
OPLSBR              193E
OPLSL               16AA
OPLSLBI             191C
OPLSLBR             197E
OPLSLI              1DF0
OPLSLLI             1E30
OPLSLLR             1E92
OPLSLR              1E52
OPLSLWI             1BA6
OPLSLWR             1C08
OPLSR               16F6
OPLSRBI             18FA
OPLSRBR             195C
OPLSRLI             1E0E
OPLSRLR             1E70
OPLSRWI             1B84
OPLSRWR             1BE6
OPLSWI              1B66
OPLSWR              1BC8
OPMOVEB             1516
OPMOVEMLEA          15A6
OPMULS              1606
OPNEG               159A
OPORI               117E
OPORIB              11AC
OPORIL              1270
OPORIW              120E
OPPER               26BB
OPROBI              19A0
OPROBR              1A02
OPROL               1742
OPROLBI             19E0
OPROLBR             1A42
OPROLI              1EB4
OPROLLI             1EF4
OPROLLR             1F56
OPROLR              1F16
OPROLWI             1C6A
OPROLWR             1CCC
OPROR               178E
OPRORBI             19BE
OPRORBR             1A20
OPRORLI             1ED2
OPRORLR             1F34
OPRORWI             1C48
OPRORWR             1CAA
OPROWI              1C2A
OPROWR              1C8C
OPRTSJSR            15A6
OPSUB               15FA
OPSUBQ              15A6
ORIMATCH            26C3
ORMATCH             2710
PADDRDEC            24C0
PADDRDIR            2208
PADDRPOST           2334
PADDRREG            2148
PDATAREG            2088
PHEX                25F8
PRINTEA             2050
PRINTINVALID        26AA
PRNTIMM             1F78
PRNTREG             1FD4
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
REGSHIFTS           1162
ROLMATCH            2741
RORMATCH            273D
RTSMATCH            26E0
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               26B2
START               1000
SUBMATCH            2713
SUBQMATCH           26F2
TEST_END            300F
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
