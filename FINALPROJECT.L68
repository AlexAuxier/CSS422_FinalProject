00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 2014-12-07 15:54:17

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Motorola 68k Disassembler
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =00003009                 11  test_end    EQU     $00003009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00003000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00003009             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 1448                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 0084                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0080                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 0094                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0090                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00B4                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00C6                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00C2                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00D4                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 00D0                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 00C8                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                102          AND.B       #secNib, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 04D4                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 0620                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                108          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 078A                109          BEQ         opBCLR
000010A6  C47C 0001                110          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                111          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 07E2                112          BEQ         opDynBCLR
000010B2  6000 13A8                113          BRA         printInvalid
000010B6                           114          
000010B6                           115          
000010B6  6000 0848                116  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           117  
000010BA  6000 08C8                118  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BE                           119  
000010BE                           120  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BE                           121  
000010BE  6000 09BE                122          BRA         opMOVEW
000010C2                           123  
000010C2  4242                     124  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010C4  1401                     125          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010C6  C43C 000F                126          AND.B       #secNib, D2             ; set first nibble to 0
000010CA                           127   
000010CA  B43C 0004                128          CMP.B       #four, D2           ; compare second nibble to 4
000010CE  6700 0AA8                129          BEQ         opNEG               ; branch to NEG method
000010D2  B43C 000E                130          CMP.B       #fourteen, D2       ; compare second nibble to E
000010D6  6700 0B8E                131          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010DA  6000 0C00                132          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010DE                           133  
000010DE  6000 0C30                134  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010E2                           135  
000010E2  4242                     136  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010E4  1401                     137          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010E6  C43C 000F                138          AND.B       #$0F, D2             ; set first nibble to 0
000010EA                           139   
000010EA  B43C 0000                140          CMP.B       #zero, D2           ; compare second nibble to 0
000010EE  6700 0C2C                141          BEQ         opBRA               ; branch to BRA method
000010F2  B43C 0005                142          CMP.B       #five, D2           ; compare second nibble to 5
000010F6  6700 0C5C                143          BEQ         opBCS               ; branch to BCS method
000010FA  B43C 0008                144          CMP.B       #eight, D2          ; compare second nibble to 8
000010FE  6700 0C60                145          BEQ         opBVC               ; branch to BCS method
00001102  B43C 000C                146          CMP.B       #twelve, D2         ; compare second nibble to 12
00001106  6700 0C64                147          BEQ         opBGE               ; branch to BGE method
0000110A  6000 0C6C                148          BRA         opBLT               ; otherwise, branch to BLT method
0000110E                           149  
0000110E                           150  braEight                                ; there are two opCodes available DIVS, or OR
0000110E  4242                     151              CLR     D2
00001110  E141                     152              ASL     #8,D1
00001112  1218                     153              MOVE.B  (A0)+,D1
00001114  3401                     154              MOVE.W  D1,D2
00001116  EC42                     155              ASR     #six,D2
00001118  C47C 0007                156              AND     #$07,D2
0000111C  B43C 0007                157              CMP.B   #seven,D2
00001120  6700 01B4                158              BEQ     opDIVS              ; If bits 8 - 6 are equal to 7, we have DIVS
00001124  6000 005E                159              BRA     opOR                ; else opcode is OR
00001128                           160  
00001128  6000 0C5A                161  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000112C                           162  
0000112C                           163  braEleven                               ; there are two opCodes available EOR, or CMP
0000112C  4242                     164              CLR     D2
0000112E  E141                     165              ASL     #8,D1
00001130  1218                     166              MOVE.B  (A0)+,D1
00001132  3401                     167              MOVE.W  D1,D2
00001134  EC42                     168              ASR     #six,D2
00001136  C47C 0007                169              AND     #$07,D2
0000113A  B43C 0003                170              CMP.B   #three,D2
0000113E  6D00 02E8                171              BLT     opCMP               ; If opmode bits are less than 3, we have CMP
00001142  6000 01A2                172              BRA     opEOR               ; Else its EOR
00001146                           173              
00001146                           174  
00001146  6000 0C70                175  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
0000114A                           176    
0000114A                           177  braThirteen ; there are two opCodes available ADD, or ADDA
0000114A                           178  
0000114A  4242                     179  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
0000114C  1401                     180              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000114E  C438 000F                181              AND.B       $0F, D2             ; set first nibble to 0
00001152                           182   
00001152  B43C 0000                183              CMP.B       #zero, D2           ; compare second nibble to 0
00001156  6700 0C78                184              BEQ         opASR               ; branch to ASR method
0000115A  B43C 0001                185              CMP.B       #one, D2            ; compare second nibble to 1
0000115E  6700 0C64                186              BEQ         opASL               ; branch to ASL method
00001162  B43C 0002                187              CMP.B       #two, D2            ; compare second nibble to 2
00001166  6700 0C80                188              BEQ         opLSR               ; branch to LSR method
0000116A  B43C 0003                189              CMP.B       #three, D2          ; compare second nibble to 3
0000116E  6700 0C6C                190              BEQ         opLSL               ; branch to LSL method
00001172  B43C 0006                191              CMP.B       #six, D2            ; compare second nibble to 6
00001176  6700 0C88                192              BEQ         opROR               ; branch to ROR method
0000117A  6000 0C78                193              BRA         opROL               ; otherwise, branch to ROL method
0000117E                           194              
0000117E                           195  
0000117E                           196  
0000117E                           197  ***********************************************************************************************************
0000117E                           198  *
0000117E                           199  *               BCC OPCODE
0000117E                           200  *
0000117E                           201  ***********************************************************************************************************
0000117E                           202          
0000117E  4242                     203  opBCC       CLR     D2
00001180                           204              ; Determine Condition (4 bits)
00001180                           205              ; Determine Displacement AFTER condition (8 bits)
00001180  6000 FE8A                206              BRA     LOOP
00001184                           207              
00001184                           208              
00001184                           209  ***********************************************************************************************************
00001184                           210  *
00001184                           211  *               OR OPCODE
00001184                           212  *
00001184                           213  ***********************************************************************************************************
00001184                           214  
00001184  43F9 000024C2            215  opOR        LEA         ORmatch,A1
0000118A  103C 000E                216              MOVE.B      #14,D0
0000118E  4E4F                     217              TRAP        #15
00001190                           218              
00001190  4242                     219              CLR         D2
00001192                           220              
00001192  1218                     221              MOVE.B      (A0)+,D1
00001194  1401                     222              MOVE.B      D1,D2
00001196  EE42                     223              ASR         #seven,D2           ; Move bits 7 places over to find opmode
00001198                           224              
00001198                           225              ; These are for EA to Dn direction
00001198  B43C 0000                226              CMP.B       #zero,D2
0000119C  6700 002A                227              BEQ         opORB               ; Byte in opmode
000011A0  B43C 0001                228              CMP.B       #one,D2
000011A4  6700 007C                229              BEQ         opORW               ; Word in opmode
000011A8  B43C 0002                230              CMP.B       #two,D2
000011AC  6700 00CE                231              BEQ         opORL               ; Long in opmode
000011B0                           232              
000011B0                           233              ; These are for Dn to EA direction
000011B0  B43C 0004                234              CMP.B       #four,D2
000011B4  6700 0012                235              BEQ         opORB               ; Byte in opmode
000011B8  B43C 0005                236              CMP.B       #five,D2
000011BC  6700 0064                237              BEQ         opORW               ; Word in opmode
000011C0  B43C 0006                238              CMP.B       #six,D2
000011C4  6700 00B6                239              BEQ         opORL               ; Long in opmode
000011C8                           240              
000011C8  43F9 000024F7            241  opORB       LEA         dispByte,A1
000011CE  103C 000E                242              MOVE.B      #14,D0
000011D2  4E4F                     243              TRAP        #15
000011D4                           244              
000011D4  43F9 00002464            245              LEA         space, A1           ; Display space
000011DA  103C 000E                246              MOVE.B      #14, D0             ; command for trap call to display message
000011DE  4E4F                     247              TRAP        #15                 ; trap call
000011E0                           248              
000011E0  1401                     249              MOVE.B      D1,D2
000011E2  E642                     250              ASR         #3,D2
000011E4  C47C 0007                251              AND         #$07,D2
000011E8  1601                     252              MOVE.B      D1,D3
000011EA  C67C 0007                253              AND         #$07,D3
000011EE  4EB9 00001E0C            254              JSR         printEA         ; Determines the "left" operand register
000011F4                           255              
000011F4  43F9 0000246B            256              LEA         comma, A1           ; Display space
000011FA  103C 000E                257              MOVE.B      #14, D0             ; command for trap call to display message
000011FE  4E4F                     258              TRAP        #15                 ; trap call
00001200                           259              
00001200  4242                     260              CLR         D2
00001202  3601                     261              MOVE.W      D1,D3
00001204  E043                     262              ASR         #eight,D3
00001206  E243                     263              ASR         #one,D3
00001208  C67C 0007                264              AND         #$07,D3
0000120C  4EB9 00001E0C            265              JSR         printEA
00001212                           266              
00001212  43F9 00002460            267              LEA         newLine,A1
00001218  103C 000E                268              MOVE.B      #14,D0
0000121C  4E4F                     269              TRAP        #15
0000121E                           270              
0000121E  6000 FDEC                271              BRA         LOOP
00001222                           272              
00001222                           273              
00001222  43F9 000024FA            274  opORW       LEA         dispWord,A1
00001228  103C 000E                275              MOVE.B      #14,D0
0000122C  4E4F                     276              TRAP        #15
0000122E                           277              
0000122E  43F9 00002464            278              LEA         space, A1           ; Display space
00001234  103C 000E                279              MOVE.B      #14, D0             ; command for trap call to display message
00001238  4E4F                     280              TRAP        #15                 ; trap call
0000123A                           281              
0000123A  1401                     282              MOVE.B      D1,D2
0000123C  E642                     283              ASR         #3,D2
0000123E  C47C 0007                284              AND         #$07,D2
00001242  1601                     285              MOVE.B      D1,D3
00001244  C67C 0007                286              AND         #$07,D3
00001248  4EB9 00001E0C            287              JSR         printEA         ; Determines the "right" operand register
0000124E                           288              
0000124E  43F9 0000246B            289              LEA         comma, A1           ; Display space
00001254  103C 000E                290              MOVE.B      #14, D0             ; command for trap call to display message
00001258  4E4F                     291              TRAP        #15                 ; trap call
0000125A                           292              
0000125A  4242                     293              CLR         D2
0000125C  3601                     294              MOVE.W      D1,D3
0000125E  E043                     295              ASR         #eight,D3
00001260  E243                     296              ASR         #one,D3
00001262  C67C 0007                297              AND         #$07,D3
00001266  4EB9 00001E0C            298              JSR         printEA
0000126C                           299              
0000126C  43F9 00002460            300              LEA         newLine,A1
00001272  103C 000E                301              MOVE.B      #14,D0
00001276  4E4F                     302              TRAP        #15
00001278                           303              
00001278  6000 FD92                304              BRA         LOOP
0000127C                           305              
0000127C  43F9 000024FD            306  opORL       LEA         dispLong,A1
00001282  103C 000E                307              MOVE.B      #14,D0
00001286  4E4F                     308              TRAP        #15
00001288                           309              
00001288  43F9 00002464            310              LEA         space, A1           ; Display space
0000128E  103C 000E                311              MOVE.B      #14, D0             ; command for trap call to display message
00001292  4E4F                     312              TRAP        #15                 ; trap call
00001294                           313              
00001294  1401                     314              MOVE.B      D1,D2
00001296  E642                     315              ASR         #3,D2
00001298  C47C 0007                316              AND         #$07,D2
0000129C  1601                     317              MOVE.B      D1,D3
0000129E  C67C 0007                318              AND         #$07,D3
000012A2  4EB9 00001E0C            319              JSR         printEA         ; Determines the "left" operand register
000012A8                           320              
000012A8  43F9 0000246B            321              LEA         comma, A1           ; Display space
000012AE  103C 000E                322              MOVE.B      #14, D0             ; command for trap call to display message
000012B2  4E4F                     323              TRAP        #15                 ; trap call
000012B4                           324              
000012B4  4242                     325              CLR         D2
000012B6  3601                     326              MOVE.W      D1,D3
000012B8  E043                     327              ASR         #eight,D3
000012BA  E243                     328              ASR         #one,D3
000012BC  C67C 0007                329              AND         #$07,D3
000012C0  4EB9 00001E0C            330              JSR         printEA
000012C6                           331              
000012C6  43F9 00002460            332              LEA         newLine,A1
000012CC  103C 000E                333              MOVE.B      #14,D0
000012D0  4E4F                     334              TRAP        #15
000012D2                           335              
000012D2  6000 FD38                336              BRA         LOOP
000012D6                           337              
000012D6                           338  ***********************************************************************************************************
000012D6                           339  *
000012D6                           340  *               DIVS OPCODE
000012D6                           341  *
000012D6                           342  ***********************************************************************************************************
000012D6                           343  
000012D6  43F9 000024BD            344  opDIVS      LEA     DIVSmatch,A1
000012DC  103C 000E                345              MOVE.B  #14,D0
000012E0  4E4F                     346              TRAP    #15
000012E2                           347      
000012E2  6000 FD28                348              BRA     LOOP
000012E6                           349              
000012E6                           350  **********************************************************************************************************
000012E6                           351  *
000012E6                           352  *               EOR OPCODE
000012E6                           353  *
000012E6                           354  ***********************************************************************************************************
000012E6                           355  
000012E6  43F9 000024C9            356  opEOR       LEA         EORmatch,A1
000012EC  103C 000E                357              MOVE.B      #14,D0
000012F0  4E4F                     358              TRAP        #15
000012F2                           359              
000012F2  4242                     360              CLR         D2
000012F4                           361              
000012F4  1401                     362              MOVE.B      D1,D2
000012F6  EC42                     363              ASR         #six,D2         ; Move bits 7 places over to find opmode
000012F8  C47C 0007                364              AND         #$07,D2
000012FC  B43C 0004                365              CMP.B       #four,D2
00001300  6700 0016                366              BEQ         opEORB              ; Byte in opmode
00001304  B43C 0005                367              CMP.B       #five,D2
00001308  6700 0068                368              BEQ         opEORW              ; Word in opmode
0000130C  B43C 0006                369              CMP.B       #six,D2
00001310  6700 00BC                370              BEQ         opEORL              ; Long in opmode
00001314                           371              
00001314  6000 1146                372              BRA         printInvalid
00001318                           373              
00001318  43F9 000024F7            374  opEORB      LEA         dispByte,A1
0000131E  103C 000E                375              MOVE.B      #14,D0
00001322  4E4F                     376              TRAP        #15
00001324                           377              
00001324  43F9 00002464            378              LEA         space, A1           ; Display space
0000132A  103C 000E                379              MOVE.B      #14, D0             ; command for trap call to display message
0000132E  4E4F                     380              TRAP        #15                 ; trap call
00001330                           381              
00001330                           382  
00001330  1401                     383              MOVE.B      D1,D2
00001332  E642                     384              ASR         #3,D2
00001334  C47C 0007                385              AND         #$07,D2
00001338  1601                     386              MOVE.B      D1,D3
0000133A  C67C 0007                387              AND         #$07,D3
0000133E  4EB9 00001E0C            388              JSR         printEA         ; Determines the "left" operand register
00001344                           389              
00001344  43F9 0000246B            390              LEA         comma, A1           ; Display space
0000134A  103C 000E                391              MOVE.B      #14, D0             ; command for trap call to display message
0000134E  4E4F                     392              TRAP        #15                 ; trap call
00001350                           393              
00001350  4242                     394              CLR         D2
00001352  3601                     395              MOVE.W      D1,D3
00001354  E043                     396              ASR         #eight,D3
00001356  E243                     397              ASR         #one,D3
00001358  C67C 0007                398              AND         #$07,D3
0000135C  4EB9 00001E0C            399              JSR         printEA
00001362                           400              
00001362  43F9 00002460            401              LEA         newLine,A1
00001368  103C 000E                402              MOVE.B      #14,D0
0000136C  4E4F                     403              TRAP        #15
0000136E                           404              
0000136E  6000 FC9C                405              BRA         LOOP
00001372                           406              
00001372                           407              
00001372  43F9 000024FA            408  opEORW      LEA         dispWord,A1
00001378  103C 000E                409              MOVE.B      #14,D0
0000137C  4E4F                     410              TRAP        #15
0000137E                           411              
0000137E  43F9 00002464            412              LEA         space, A1           ; Display space
00001384  103C 000E                413              MOVE.B      #14, D0             ; command for trap call to display message
00001388  4E4F                     414              TRAP        #15                 ; trap call
0000138A                           415              
0000138A  4242                     416              CLR         D2
0000138C  1401                     417              MOVE.B      D1,D2
0000138E  E642                     418              ASR         #3,D2
00001390  C47C 0007                419              AND         #$07,D2
00001394  1601                     420              MOVE.B      D1,D3
00001396  C67C 0007                421              AND         #$07,D3
0000139A  4EB9 00001E0C            422              JSR         printEA         ; Determines the "left" operand register
000013A0                           423              
000013A0  43F9 0000246B            424              LEA         comma, A1           ; Display space
000013A6  103C 000E                425              MOVE.B      #14, D0             ; command for trap call to display message
000013AA  4E4F                     426              TRAP        #15                 ; trap call
000013AC                           427              
000013AC  4242                     428              CLR         D2
000013AE  3601                     429              MOVE.W      D1,D3
000013B0  E043                     430              ASR         #eight,D3
000013B2  E243                     431              ASR         #one,D3
000013B4  C67C 0007                432              AND         #$07,D3
000013B8  4EB9 00001E0C            433              JSR         printEA
000013BE                           434              
000013BE  43F9 00002460            435              LEA         newLine,A1
000013C4  103C 000E                436              MOVE.B      #14,D0
000013C8  4E4F                     437              TRAP        #15
000013CA                           438              
000013CA  6000 FC40                439              BRA         LOOP
000013CE                           440              
000013CE  43F9 000024FD            441  opEORL      LEA         dispLong,A1
000013D4  103C 000E                442              MOVE.B      #14,D0
000013D8  4E4F                     443              TRAP        #15
000013DA                           444              
000013DA  43F9 00002464            445              LEA         space, A1           ; Display space
000013E0  103C 000E                446              MOVE.B      #14, D0             ; command for trap call to display message
000013E4  4E4F                     447              TRAP        #15                 ; trap call
000013E6                           448              
000013E6  1401                     449              MOVE.B      D1,D2
000013E8  E642                     450              ASR         #3,D2
000013EA  C47C 0007                451              AND         #$07,D2
000013EE  1601                     452              MOVE.B      D1,D3
000013F0  C67C 0007                453              AND         #$07,D3
000013F4  4EB9 00001E0C            454              JSR         printEA         ; Determines the "left" operand register
000013FA                           455              
000013FA  43F9 0000246B            456              LEA         comma, A1           ; Display space
00001400  103C 000E                457              MOVE.B      #14, D0             ; command for trap call to display message
00001404  4E4F                     458              TRAP        #15                 ; trap call
00001406                           459              
00001406  4242                     460              CLR         D2
00001408  3601                     461              MOVE.W      D1,D3
0000140A  E043                     462              ASR         #eight,D3
0000140C  E243                     463              ASR         #one,D3
0000140E  C67C 0007                464              AND         #$07,D3
00001412  4EB9 00001E0C            465              JSR         printEA
00001418                           466              
00001418  43F9 00002460            467              LEA         newLine,A1
0000141E  103C 000E                468              MOVE.B      #14,D0
00001422  4E4F                     469              TRAP        #15
00001424                           470              
00001424  6000 FBE6                471              BRA         LOOP            ; trap call
00001428                           472              
00001428                           473  
00001428                           474  ***********************************************************************************************************
00001428                           475  *
00001428                           476  *               CMP OPCODE
00001428                           477  *
00001428                           478  ***********************************************************************************************************
00001428                           479  
00001428  43F9 000024CD            480  opCMP       LEA         CMPmatch,A1
0000142E  103C 000E                481              MOVE.B      #14,D0
00001432  4E4F                     482              TRAP        #15
00001434                           483              
00001434  4242                     484              CLR         D2
00001436                           485              
00001436  1401                     486              MOVE.B      D1,D2
00001438  EC42                     487              ASR         #six,D2         ; Move bits 7 places over to find opmode
0000143A  C47C 0007                488              AND         #$07,D2
0000143E  B43C 0000                489              CMP.B       #zero,D2
00001442  6700 0016                490              BEQ         opCMPB              ; Byte in opmode
00001446  B43C 0001                491              CMP.B       #one,D2
0000144A  6700 0068                492              BEQ         opCMPW              ; Word in opmode
0000144E  B43C 0002                493              CMP.B       #two,D2
00001452  6700 00BA                494              BEQ         opCMPL              ; Long in opmode
00001456                           495              
00001456  6000 1004                496              BRA         printInvalid        ; Incorrect input
0000145A                           497  
0000145A  43F9 000024F7            498  opCMPB      LEA         dispByte,A1
00001460  103C 000E                499              MOVE.B      #14,D0
00001464  4E4F                     500              TRAP        #15
00001466                           501              
00001466  43F9 00002464            502              LEA         space, A1           ; Display space
0000146C  103C 000E                503              MOVE.B      #14, D0             ; command for trap call to display message
00001470  4E4F                     504              TRAP        #15                 ; trap call
00001472                           505              
00001472  1401                     506              MOVE.B      D1,D2
00001474  E642                     507              ASR         #3,D2
00001476  C47C 0007                508              AND         #$07,D2
0000147A  1601                     509              MOVE.B      D1,D3
0000147C  C67C 0007                510              AND         #$07,D3
00001480  4EB9 00001E0C            511              JSR         printEA         ; Determines the "left" operand register
00001486                           512              
00001486  43F9 0000246B            513              LEA         comma, A1           ; Display space
0000148C  103C 000E                514              MOVE.B      #14, D0             ; command for trap call to display message
00001490  4E4F                     515              TRAP        #15                 ; trap call
00001492                           516              
00001492  4242                     517              CLR         D2
00001494  3601                     518              MOVE.W      D1,D3
00001496  E043                     519              ASR         #eight,D3
00001498  E243                     520              ASR         #one,D3
0000149A  C67C 0007                521              AND         #$07,D3
0000149E  4EB9 00001E0C            522              JSR         printEA
000014A4                           523              
000014A4  43F9 00002460            524              LEA         newLine,A1
000014AA  103C 000E                525              MOVE.B      #14,D0
000014AE  4E4F                     526              TRAP        #15
000014B0                           527              
000014B0  6000 FB5A                528              BRA         LOOP
000014B4                           529              
000014B4  43F9 000024FA            530  opCMPW      LEA         dispWord,A1
000014BA  103C 000E                531              MOVE.B      #14,D0
000014BE  4E4F                     532              TRAP        #15
000014C0                           533              
000014C0  43F9 00002464            534              LEA         space, A1           ; Display space
000014C6  103C 000E                535              MOVE.B      #14, D0             ; command for trap call to display message
000014CA  4E4F                     536              TRAP        #15                 ; trap call
000014CC                           537              
000014CC  1401                     538              MOVE.B      D1,D2
000014CE  E642                     539              ASR         #3,D2
000014D0  C47C 0007                540              AND         #$07,D2
000014D4  1601                     541              MOVE.B      D1,D3
000014D6  C67C 0007                542              AND         #$07,D3
000014DA  4EB9 00001E0C            543              JSR         printEA         ; Determines the "left" operand register
000014E0                           544              
000014E0  43F9 0000246B            545              LEA         comma, A1           ; Display space
000014E6  103C 000E                546              MOVE.B      #14, D0             ; command for trap call to display message
000014EA  4E4F                     547              TRAP        #15                 ; trap call
000014EC                           548              
000014EC  4242                     549              CLR         D2
000014EE  3601                     550              MOVE.W      D1,D3
000014F0  E043                     551              ASR         #eight,D3
000014F2  E243                     552              ASR         #one,D3
000014F4  C67C 0007                553              AND         #$07,D3
000014F8  4EB9 00001E0C            554              JSR         printEA
000014FE                           555              
000014FE  43F9 00002460            556              LEA         newLine,A1
00001504  103C 000E                557              MOVE.B      #14,D0
00001508  4E4F                     558              TRAP        #15
0000150A                           559              
0000150A  6000 FB00                560              BRA         LOOP
0000150E                           561  
0000150E  43F9 000024FD            562  opCMPL      LEA         dispLong,A1
00001514  103C 000E                563              MOVE.B      #14,D0
00001518  4E4F                     564              TRAP        #15
0000151A                           565              
0000151A  43F9 00002464            566              LEA         space, A1           ; Display space
00001520  103C 000E                567              MOVE.B      #14, D0             ; command for trap call to display message
00001524  4E4F                     568              TRAP        #15                 ; trap call
00001526                           569              
00001526  1401                     570              MOVE.B      D1,D2
00001528  E642                     571              ASR         #3,D2
0000152A  C47C 0007                572              AND         #$07,D2
0000152E  1601                     573              MOVE.B      D1,D3
00001530  C67C 0007                574              AND         #$07,D3
00001534  4EB9 00001E0C            575              JSR         printEA         ; Determines the "left" operand register
0000153A                           576              
0000153A  43F9 0000246B            577              LEA         comma, A1           ; Display space
00001540  103C 000E                578              MOVE.B      #14, D0             ; command for trap call to display message
00001544  4E4F                     579              TRAP        #15                 ; trap call
00001546                           580              
00001546  4242                     581              CLR         D2
00001548  3601                     582              MOVE.W      D1,D3
0000154A  E043                     583              ASR         #eight,D3
0000154C  E243                     584              ASR         #one,D3
0000154E  C67C 0007                585              AND         #$07,D3
00001552  4EB9 00001E0C            586              JSR         printEA
00001558                           587              
00001558  43F9 00002460            588              LEA         newLine,A1
0000155E  103C 000E                589              MOVE.B      #14,D0
00001562  4E4F                     590              TRAP        #15
00001564                           591              
00001564  6000 FAA6                592              BRA         LOOP
00001568                           593              
00001568                           594  ***********************************************************************************************************
00001568                           595  *
00001568                           596  *               ORI OPCODE
00001568                           597  *
00001568                           598  ***********************************************************************************************************
00001568                           599  
00001568  43F9 00002475            600  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
0000156E  103C 000E                601          MOVE.B      #14, D0             ; command for trap call to display message
00001572  4E4F                     602          TRAP        #15                 ; trap call
00001574                           603          
00001574  1218                     604          MOVE.B      (A0)+, D1
00001576  1401                     605          MOVE.B      D1,D2               ; copy data over
00001578  EC42                     606          ASR         #6,D2               ; shifts 6 bits over to read just the size        
0000157A  B43C 0000                607          CMP.B       #zero,D2
0000157E  6700 0016                608          BEQ         opORIB
00001582  B43C 0001                609          CMP.B       #one,D2
00001586  6700 0070                610          BEQ         opORIW
0000158A  B43C 0002                611          CMP.B       #two,D2
0000158E  6700 00CA                612          BEQ         opORIL
00001592                           613          
00001592  6000 0EC8                614          BRA         printInvalid
00001596                           615          
00001596  43F9 000024F7            616  opORIB  LEA         dispByte, A1        ; Display byte
0000159C  103C 000E                617          MOVE.B      #14, D0             ; command for trap call to display message
000015A0  4E4F                     618          TRAP        #15                 ; trap call
000015A2                           619          
000015A2  43F9 00002464            620          LEA         space, A1           ; Display space
000015A8  103C 000E                621          MOVE.B      #14, D0             ; command for trap call to display message
000015AC  4E4F                     622          TRAP        #15                 ; trap call
000015AE                           623          
000015AE  4242                     624          CLR         D2
000015B0  1401                     625          MOVE.B      D1,D2
000015B2  E642                     626          ASR         #three,D2
000015B4  C47C 0007                627          AND         #seven,D2
000015B8  4243                     628          CLR         D3        
000015BA  1601                     629          MOVE.B      D1,D3
000015BC  C67C 0007                630          AND         #seven,D3
000015C0                           631          
000015C0  4241                     632          CLR         D1
000015C2  3218                     633          MOVE.W      (A0)+, D1
000015C4                           634          
000015C4  43F9 00002467            635          LEA         hashTag, A1           ; Display space
000015CA  103C 000E                636          MOVE.B      #14, D0             ; command for trap call to display message
000015CE  4E4F                     637          TRAP        #15                 ; trap call
000015D0                           638          
000015D0  103C 0003                639          MOVE.B      #3, D0
000015D4  4E4F                     640          TRAP        #15
000015D6                           641          
000015D6  43F9 0000246B            642          LEA         comma, A1           ; Display space
000015DC  103C 000E                643          MOVE.B      #14, D0             ; command for trap call to display message
000015E0  4E4F                     644          TRAP        #15                 ; trap call
000015E2                           645          
000015E2  4EB9 00001E0C            646          JSR         printEA
000015E8                           647          
000015E8  43F9 00002460            648          LEA         newLine, A1           ; Display space
000015EE  103C 000E                649          MOVE.B      #14, D0             ; command for trap call to display message
000015F2  4E4F                     650          TRAP        #15                 ; trap call
000015F4                           651          
000015F4  6000 FA16                652          BRA         LOOP
000015F8                           653          
000015F8                           654          
000015F8  43F9 000024FA            655  opORIW  LEA         dispWord, A1        ; Display byte
000015FE  103C 000E                656          MOVE.B      #14, D0             ; command for trap call to display message
00001602  4E4F                     657          TRAP        #15                 ; trap call
00001604                           658          
00001604  43F9 00002464            659          LEA         space, A1           ; Display space
0000160A  103C 000E                660          MOVE.B      #14, D0             ; command for trap call to display message
0000160E  4E4F                     661          TRAP        #15                 ; trap call
00001610                           662          
00001610  4242                     663          CLR         D2
00001612  1401                     664          MOVE.B      D1,D2
00001614  E642                     665          ASR         #three,D2
00001616  C47C 0007                666          AND         #seven,D2
0000161A  4243                     667          CLR         D3        
0000161C  1601                     668          MOVE.B      D1,D3
0000161E  C67C 0007                669          AND         #seven,D3
00001622                           670          
00001622  4241                     671          CLR         D1
00001624  3218                     672          MOVE.W      (A0)+, D1
00001626                           673          
00001626  43F9 00002467            674          LEA         hashTag, A1           ; Display space
0000162C  103C 000E                675          MOVE.B      #14, D0             ; command for trap call to display message
00001630  4E4F                     676          TRAP        #15                 ; trap call
00001632                           677          
00001632  103C 0003                678          MOVE.B      #3, D0
00001636  4E4F                     679          TRAP        #15
00001638                           680          
00001638  43F9 0000246B            681          LEA         comma, A1           ; Display space
0000163E  103C 000E                682          MOVE.B      #14, D0             ; command for trap call to display message
00001642  4E4F                     683          TRAP        #15                 ; trap call
00001644                           684          
00001644  4EB9 00001E0C            685          JSR         printEA
0000164A                           686          
0000164A  43F9 00002460            687          LEA         newLine, A1           ; Display space
00001650  103C 000E                688          MOVE.B      #14, D0             ; command for trap call to display message
00001654  4E4F                     689          TRAP        #15                 ; trap call
00001656                           690          
00001656  6000 F9B4                691          BRA         LOOP
0000165A                           692       
0000165A  43F9 000024FD            693  opORIL  LEA         dispLong, A1        ; Display byte
00001660  103C 000E                694          MOVE.B      #14, D0             ; command for trap call to display message
00001664  4E4F                     695          TRAP        #15                 ; trap call
00001666                           696          
00001666  43F9 00002464            697          LEA         space, A1           ; Display space
0000166C  103C 000E                698          MOVE.B      #14, D0             ; command for trap call to display message
00001670  4E4F                     699          TRAP        #15                 ; trap call
00001672                           700          
00001672  4242                     701          CLR         D2
00001674  1401                     702          MOVE.B      D1,D2
00001676  E642                     703          ASR         #three,D2
00001678  C47C 0007                704          AND         #seven,D2
0000167C  4243                     705          CLR         D3        
0000167E  1601                     706          MOVE.B      D1,D3
00001680  C67C 0007                707          AND         #seven,D3
00001684                           708          
00001684  4241                     709          CLR         D1
00001686  2218                     710          MOVE.L      (A0)+, D1
00001688                           711          
00001688  43F9 00002467            712          LEA         hashTag, A1           ; Display space
0000168E  103C 000E                713          MOVE.B      #14, D0             ; command for trap call to display message
00001692  4E4F                     714          TRAP        #15                 ; trap call
00001694                           715          
00001694  103C 0003                716          MOVE.B      #3, D0
00001698  4E4F                     717          TRAP        #15
0000169A                           718          
0000169A  43F9 0000246B            719          LEA         comma, A1           ; Display space
000016A0  103C 000E                720          MOVE.B      #14, D0             ; command for trap call to display message
000016A4  4E4F                     721          TRAP        #15                 ; trap call
000016A6                           722          
000016A6  4EB9 00001E0C            723          JSR         printEA
000016AC                           724          
000016AC  43F9 00002460            725          LEA         newLine, A1           ; Display space
000016B2  103C 000E                726          MOVE.B      #14, D0             ; command for trap call to display message
000016B6  4E4F                     727          TRAP        #15                 ; trap call
000016B8                           728          
000016B8  6000 F952                729          BRA         LOOP
000016BC                           730           
000016BC  43F9 00002479            731  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000016C2  103C 000E                732          MOVE.B      #14, D0             ; command for trap call to display message
000016C6  4E4F                     733          TRAP        #15                 ; trap call
000016C8                           734                  
000016C8  1218                     735          MOVE.B      (A0)+, D1
000016CA  1401                     736          MOVE.B      D1,D2               ; copy data over
000016CC  EC42                     737          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000016CE  B43C 0000                738          CMP.B       #zero,D2
000016D2  6700 0034                739          BEQ         opCMPIB
000016D6  B43C 0001                740          CMP.B       #one,D2
000016DA  6700 008E                741          BEQ         opCMPIW
000016DE  B43C 0002                742          CMP.B       #two,D2
000016E2  6700 00E8                743          BEQ         opCMPIL
000016E6                           744          
000016E6  1401                     745          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000016E8  E542                     746          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
000016EA  1802                     747          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
000016EC  4242                     748          CLR         D2                  ; Clear out data register
000016EE  1404                     749          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
000016F0  EA42                     750          ASR         #five,D2            ; Shift the register out to get just the mode
000016F2  1802                     751          MOVE.B      D2,D4               ; Store mode into D4
000016F4  4242                     752          CLR         D2
000016F6                           753          
000016F6  1401                     754          MOVE.B      D1,D2               ; Getting the EA register
000016F8  EB42                     755          ASL         #five,D2
000016FA  1A02                     756          MOVE.B      D2,D5               ; Move just the register into D5
000016FC  4242                     757          CLR         D2                  ; Clearing D2 to put data back
000016FE  1405                     758          MOVE.B      D5,D2               ; Putting back the register
00001700  EA42                     759          ASR         #five,D2            ; Shifting bits in order to read the register
00001702  1A02                     760          MOVE.B      D2,D5               ; Store register into D5
00001704                           761          
00001704  6000 F906                762          BRA         LOOP                ; go back to the loop
00001708                           763  
00001708  43F9 000024F7            764  opCMPIB LEA         dispByte, A1        ; Display byte
0000170E  103C 000E                765          MOVE.B      #14, D0             ; command for trap call to display message
00001712  4E4F                     766          TRAP        #15                 ; trap call
00001714                           767          
00001714  43F9 00002464            768          LEA         space, A1           ; Display space
0000171A  103C 000E                769          MOVE.B      #14, D0             ; command for trap call to display message
0000171E  4E4F                     770          TRAP        #15                 ; trap call
00001720                           771          
00001720  4242                     772          CLR         D2
00001722  1401                     773          MOVE.B      D1,D2
00001724  E642                     774          ASR         #three,D2
00001726  C47C 0007                775          AND         #seven,D2
0000172A  4243                     776          CLR         D3        
0000172C  1601                     777          MOVE.B      D1,D3
0000172E  C67C 0007                778          AND         #seven,D3
00001732                           779          
00001732  4241                     780          CLR         D1
00001734  3218                     781          MOVE.W      (A0)+, D1
00001736                           782          
00001736  43F9 00002467            783          LEA         hashTag, A1           ; Display space
0000173C  103C 000E                784          MOVE.B      #14, D0             ; command for trap call to display message
00001740  4E4F                     785          TRAP        #15                 ; trap call
00001742                           786          
00001742  103C 0003                787          MOVE.B      #3, D0
00001746  4E4F                     788          TRAP        #15
00001748                           789          
00001748  43F9 0000246B            790          LEA         comma, A1           ; Display space
0000174E  103C 000E                791          MOVE.B      #14, D0             ; command for trap call to display message
00001752  4E4F                     792          TRAP        #15                 ; trap call
00001754                           793          
00001754  4EB9 00001E0C            794          JSR         printEA
0000175A                           795          
0000175A  43F9 00002460            796          LEA         newLine, A1           ; Display space
00001760  103C 000E                797          MOVE.B      #14, D0             ; command for trap call to display message
00001764  4E4F                     798          TRAP        #15                 ; trap call
00001766                           799  
00001766  6000 F8A4                800          BRA         LOOP
0000176A                           801  
0000176A  43F9 000024FA            802  opCMPIW LEA         dispWord, A1        ; Display byte
00001770  103C 000E                803          MOVE.B      #14, D0             ; command for trap call to display message
00001774  4E4F                     804          TRAP        #15                 ; trap call
00001776                           805          
00001776  43F9 00002464            806          LEA         space, A1           ; Display space
0000177C  103C 000E                807          MOVE.B      #14, D0             ; command for trap call to display message
00001780  4E4F                     808          TRAP        #15                 ; trap call
00001782                           809          
00001782  4242                     810          CLR         D2
00001784  1401                     811          MOVE.B      D1,D2
00001786  E642                     812          ASR         #three,D2
00001788  C47C 0007                813          AND         #seven,D2
0000178C  4243                     814          CLR         D3        
0000178E  1601                     815          MOVE.B      D1,D3
00001790  C67C 0007                816          AND         #seven,D3
00001794                           817          
00001794  4241                     818          CLR         D1
00001796  3218                     819          MOVE.W      (A0)+, D1
00001798                           820          
00001798  43F9 00002467            821          LEA         hashTag, A1           ; Display space
0000179E  103C 000E                822          MOVE.B      #14, D0             ; command for trap call to display message
000017A2  4E4F                     823          TRAP        #15                 ; trap call
000017A4                           824          
000017A4  103C 0003                825          MOVE.B      #3, D0
000017A8  4E4F                     826          TRAP        #15
000017AA                           827          
000017AA  43F9 0000246B            828          LEA         comma, A1           ; Display space
000017B0  103C 000E                829          MOVE.B      #14, D0             ; command for trap call to display message
000017B4  4E4F                     830          TRAP        #15                 ; trap call
000017B6                           831          
000017B6  4EB9 00001E0C            832          JSR         printEA
000017BC                           833          
000017BC  43F9 00002460            834          LEA         newLine, A1           ; Display space
000017C2  103C 000E                835          MOVE.B      #14, D0             ; command for trap call to display message
000017C6  4E4F                     836          TRAP        #15                 ; trap call
000017C8  6000 F842                837          BRA         LOOP
000017CC                           838  
000017CC  43F9 000024FD            839  opCMPIL LEA         dispLong, A1        ; Display byte
000017D2  103C 000E                840          MOVE.B      #14, D0             ; command for trap call to display message
000017D6  4E4F                     841          TRAP        #15                 ; trap call
000017D8                           842          
000017D8  43F9 00002464            843          LEA         space, A1           ; Display space
000017DE  103C 000E                844          MOVE.B      #14, D0             ; command for trap call to display message
000017E2  4E4F                     845          TRAP        #15                 ; trap call
000017E4                           846          
000017E4  4242                     847          CLR         D2
000017E6  1401                     848          MOVE.B      D1,D2
000017E8  E642                     849          ASR         #three,D2
000017EA  C47C 0007                850          AND         #seven,D2
000017EE  4243                     851          CLR         D3        
000017F0  1601                     852          MOVE.B      D1,D3
000017F2  C67C 0007                853          AND         #seven,D3
000017F6                           854          
000017F6  4241                     855          CLR         D1
000017F8  3218                     856          MOVE.W      (A0)+, D1
000017FA                           857          
000017FA  43F9 00002467            858          LEA         hashTag, A1           ; Display space
00001800  103C 000E                859          MOVE.B      #14, D0             ; command for trap call to display message
00001804  4E4F                     860          TRAP        #15                 ; trap call
00001806                           861          
00001806  103C 0003                862          MOVE.B      #3, D0
0000180A  4E4F                     863          TRAP        #15
0000180C                           864          
0000180C  43F9 0000246B            865          LEA         comma, A1           ; Display space
00001812  103C 000E                866          MOVE.B      #14, D0             ; command for trap call to display message
00001816  4E4F                     867          TRAP        #15                 ; trap call
00001818                           868          
00001818  4EB9 00001E0C            869          JSR         printEA
0000181E                           870          
0000181E  43F9 00002460            871          LEA         newLine, A1           ; Display space
00001824  103C 000E                872          MOVE.B      #14, D0             ; command for trap call to display message
00001828  4E4F                     873          TRAP        #15                 ; trap call
0000182A                           874          
0000182A  6000 F7E0                875          BRA         LOOP
0000182E                           876  
0000182E  43F9 0000247E            877  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001834  103C 000E                878                  MOVE.B      #14, D0             ; command for trap call to display message
00001838  4E4F                     879                  TRAP        #15                 ; trap call
0000183A                           880  
0000183A  43F9 00002464            881                  LEA         space, A1           ; Display space
00001840  103C 000E                882                  MOVE.B      #14, D0             ; command for trap call to display message
00001844  4E4F                     883                  TRAP        #15                 ; trap call
00001846                           884                  
00001846  4242                     885                  CLR         D2
00001848  1218                     886                  MOVE.B      (A0)+, D1
0000184A  1401                     887                  MOVE.B      D1,D2               ; copy data over
0000184C  E642                     888                  ASR         #three,D2           ; Shift to the right to remove register
0000184E  C47C 0007                889                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
00001852                           890                  
00001852  4243                     891                  CLR         D3                  ; Clear D3 so we can move D1 in
00001854  1601                     892                  MOVE.B      D1,D3               ; Move othr byte in
00001856  C67C 0007                893                  AND         #seven,D3           ; Set everything besides register to 0
0000185A                           894                  
0000185A  4241                     895                  CLR         D1
0000185C  3218                     896                  MOVE.W      (A0)+, D1
0000185E                           897                 
0000185E                           898                  
0000185E  43F9 00002467            899                  LEA         hashTag, A1           ; Display space
00001864  103C 000E                900                  MOVE.B      #14, D0             ; command for trap call to display message
00001868  4E4F                     901                  TRAP        #15                 ; trap call
0000186A                           902          
0000186A  103C 0003                903                  MOVE.B      #3, D0
0000186E  4E4F                     904                  TRAP        #15
00001870                           905          
00001870  43F9 0000246B            906                  LEA         comma, A1           ; Display space
00001876  103C 000E                907                  MOVE.B      #14, D0             ; command for trap call to display message
0000187A  4E4F                     908                  TRAP        #15                 ; trap call
0000187C                           909                  
0000187C  4EB9 00001E0C            910                  JSR         printEA
00001882                           911          
00001882  43F9 00002460            912                  LEA         newLine, A1           ; Display space
00001888  103C 000E                913                  MOVE.B      #14, D0             ; command for trap call to display message
0000188C  4E4F                     914                  TRAP        #15                 ; trap call
0000188E                           915                  
0000188E                           916                  
0000188E  6000 F77C                917                  BRA         LOOP                
00001892                           918          
00001892                           919  opDynBCLR       
00001892  4241                     920                  CLR         D1
00001894  1218                     921                  MOVE.B      (A0)+,D1            ; Copy second byte in
00001896  1601                     922                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
00001898  E243                     923                  ASR         #one,D3             ; Shift register over to the end
0000189A  C67C 0007                924                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
0000189E                           925                  
0000189E  1401                     926                  MOVE.B      D1,D2
000018A0  EC42                     927                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
000018A2  B47C 0002                928                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
000018A6  6600 0BB4                929                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
000018AA                           930  
000018AA                           931                  
000018AA  43F9 0000247E            932                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
000018B0  103C 000E                933                  MOVE.B      #14, D0             ; command for trap call to display message
000018B4  4E4F                     934                  TRAP        #15                 ; trap call  
000018B6                           935                  
000018B6  43F9 00002464            936                  LEA         space, A1           ; Display space
000018BC  103C 000E                937                  MOVE.B      #14, D0             ; command for trap call to display message
000018C0  4E4F                     938                  TRAP        #15                 ; trap call
000018C2                           939                  
000018C2  143C 0000                940                  MOVE.B      #zero,D2                
000018C6  4EB9 00001E0C            941                  JSR         printEA
000018CC                           942                  
000018CC  43F9 0000246B            943                  LEA         comma, A1           ; Display space
000018D2  103C 000E                944                  MOVE.B      #14, D0             ; command for trap call to display message
000018D6  4E4F                     945                  TRAP        #15                 ; trap call
000018D8                           946                  
000018D8  4242                     947                  CLR         D2
000018DA  1401                     948                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000018DC  E642                     949                  ASR         #three,D2           ; Remove/shift the register out
000018DE  C47C 0007                950                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000018E2                           951                  
000018E2  4243                     952                  CLR         D3                  ; Clearing D3 to avoid mashing data
000018E4  1601                     953                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000018E6  C67C 0007                954                  AND         #seven,D3           ; Change all bits except for register bits to 0
000018EA                           955                  
000018EA                           956  
000018EA  4EB9 00001E0C            957                  JSR         printEA
000018F0                           958          
000018F0  43F9 00002460            959                  LEA         newLine, A1           ; Display space
000018F6  103C 000E                960                  MOVE.B      #14, D0             ; command for trap call to display message
000018FA  4E4F                     961                  TRAP        #15                 ; trap call            
000018FC                           962  
000018FC                           963  
000018FC  6000 F70E                964                  BRA         LOOP                ; go back to the loop
00001900                           965   
00001900                           966  opMOVEB 
00001900  43F9 00002483            967          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
00001906  103C 000E                968          MOVE.B      #14, D0             ; command for trap call to display message
0000190A  4E4F                     969          TRAP        #15                 ; trap call
0000190C  43F9 000024F7            970          LEA         dispByte, A1        ; display byte
00001912  103C 000E                971          MOVE.B      #14, D0             ; command for trap call to display message
00001916  4E4F                     972          TRAP        #15                 ; trap call
00001918  43F9 00002464            973          LEA         space, A1           ; create spaces
0000191E  103C 000E                974          MOVE.B      #14, D0             ; command for trap call to display message
00001922  4E4F                     975          TRAP        #15                 ; trap call
00001924                           976          
00001924                           977          
00001924  4245                     978          CLR         D5                  ; Clear D5
00001926  1A01                     979          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001928  E245                     980          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
0000192A  CA7C 0007                981          AND         #seven,D5
0000192E                           982          
0000192E  4244                     983          CLR         D4                  ; Clear out D4
00001930  1801                     984          MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001932  C87C 0001                985          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001936                           986          
00001936  4241                     987          CLR          D1
00001938  4242                     988          CLR          D2
0000193A  1218                     989          MOVE.B      (A0)+,D1            ; Copy byte into D1
0000193C  1401                     990          MOVE.B      D1,D2
0000193E  EC42                     991          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001940  D842                     992          ADD         D2,D4               ; Adds the remaining bits to D4
00001942                           993          
00001942  4242                     994          CLR         D2
00001944  1401                     995          MOVE.B      D1,D2               ; Copy new byte over to D2
00001946  E642                     996          ASR         #three,D2           ; Shift source register out
00001948  C47C 0007                997          AND         #seven,D2           ; Set everything to 0 except for the mode
0000194C                           998          
0000194C  4243                     999          CLR         D3
0000194E  1601                    1000          MOVE.B      D1,D3
00001950  C67C 0007               1001          AND         #seven,D3
00001954                          1002          
00001954  4EB9 00001E0C           1003          JSR         printEA
0000195A                          1004          
0000195A  43F9 0000246B           1005          LEA         comma, A1           ; Display space
00001960  103C 000E               1006          MOVE.B      #14, D0             ; command for trap call to display message
00001964  4E4F                    1007          TRAP        #15                 ; trap call
00001966                          1008          
00001966  4242                    1009          CLR         D2
00001968  4243                    1010          CLR         D3
0000196A  1404                    1011          MOVE.B      D4,D2
0000196C  1605                    1012          MOVE.B      D5,D3
0000196E                          1013          
0000196E  4EB9 00001E0C           1014          JSR         printEA
00001974                          1015          
00001974                          1016          
00001974  43F9 00002460           1017          LEA         newLine, A1           ; Display space
0000197A  103C 000E               1018          MOVE.B      #14, D0             ; command for trap call to display message
0000197E  4E4F                    1019          TRAP        #15                 ; trap call            
00001980                          1020  
00001980                          1021  
00001980  6000 F68A               1022          BRA         LOOP                ; go back to the loop
00001984                          1023          
00001984                          1024  opMOVEL     
00001984                          1025          
00001984  4245                    1026              CLR         D5                  ; Clear D5
00001986  1A01                    1027              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001988  E245                    1028              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
0000198A  CA7C 0007               1029              AND         #seven,D5
0000198E                          1030          
0000198E  4244                    1031              CLR         D4                  ; Clear out D4
00001990  1801                    1032              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001992  C87C 0001               1033              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001996                          1034          
00001996  4241                    1035              CLR          D1
00001998  4242                    1036              CLR          D2
0000199A  1218                    1037              MOVE.B      (A0)+,D1            ; Copy byte into D1
0000199C  1401                    1038              MOVE.B      D1,D2
0000199E  EC42                    1039              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000019A0  D842                    1040              ADD         D2,D4               ; Adds the remaining bits to D4
000019A2                          1041          
000019A2  B87C 0001               1042              CMP         #one,D4             ; Check if it is MOVEA
000019A6  6700 006C               1043              BEQ         opMOVEAL            ; If it is, branch off
000019AA                          1044              
000019AA  43F9 00002483           1045              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000019B0  103C 000E               1046              MOVE.B      #14, D0             ; command for trap call to display message
000019B4  4E4F                    1047              TRAP        #15                 ; trap call  
000019B6                          1048              
000019B6                          1049              
000019B6  43F9 000024FD           1050              LEA         dispLong,A1
000019BC  103C 000E               1051              MOVE.B      #14, D0             ; command for trap call to display message
000019C0  4E4F                    1052              TRAP        #15                 ; trap call
000019C2                          1053              
000019C2  43F9 00002464           1054              LEA         space, A1           ; create spaces
000019C8  103C 000E               1055              MOVE.B      #14, D0             ; command for trap call to display message
000019CC  4E4F                    1056              TRAP        #15                 ; trap call
000019CE                          1057          
000019CE  4242                    1058              CLR         D2
000019D0  1401                    1059              MOVE.B      D1,D2               ; Copy new byte over to D2
000019D2  E642                    1060              ASR         #three,D2           ; Shift source register out
000019D4  C47C 0007               1061              AND         #seven,D2           ; Set everything to 0 except for the mode
000019D8                          1062          
000019D8  4243                    1063              CLR         D3
000019DA  1601                    1064              MOVE.B      D1,D3
000019DC  C67C 0007               1065              AND         #seven,D3
000019E0                          1066              
000019E0  4241                    1067              CLR         D1                  ; Clear D1
000019E2  2218                    1068              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
000019E4                          1069              
000019E4  4EB9 00001E0C           1070              JSR         printEA
000019EA                          1071              
000019EA  43F9 0000246B           1072              LEA         comma, A1           ; Display comma
000019F0  103C 000E               1073              MOVE.B      #14, D0             ; command for trap call to display message
000019F4  4E4F                    1074              TRAP        #15                 ; trap call
000019F6                          1075          
000019F6  4242                    1076              CLR         D2
000019F8  4243                    1077              CLR         D3
000019FA  1404                    1078              MOVE.B      D4,D2
000019FC  1605                    1079              MOVE.B      D5,D3
000019FE                          1080              
000019FE                          1081  
000019FE                          1082              
000019FE  4EB9 00001E0C           1083              JSR         printEA
00001A04                          1084          
00001A04                          1085          
00001A04  43F9 00002460           1086              LEA         newLine, A1           ; Display space
00001A0A  103C 000E               1087              MOVE.B      #14, D0             ; command for trap call to display message
00001A0E  4E4F                    1088              TRAP        #15                 ; trap call            
00001A10                          1089  
00001A10                          1090  
00001A10  6000 F5FA               1091              BRA         LOOP                ; go back to the loop
00001A14                          1092              
00001A14                          1093  opMOVEAL
00001A14                          1094  
00001A14  43F9 00002488           1095              LEA         MOVEAmatch,A1
00001A1A  103C 000E               1096              MOVE.B      #14, D0             ; command for trap call to display message
00001A1E  4E4F                    1097              TRAP        #15                 ; trap call
00001A20                          1098              
00001A20  43F9 000024FD           1099              LEA         dispLong,A1
00001A26  103C 000E               1100              MOVE.B      #14, D0             ; command for trap call to display message
00001A2A  4E4F                    1101              TRAP        #15                 ; trap call
00001A2C                          1102              
00001A2C                          1103  
00001A2C  43F9 00002464           1104              LEA         space, A1           ; create spaces
00001A32  103C 000E               1105              MOVE.B      #14, D0             ; command for trap call to display message
00001A36  4E4F                    1106              TRAP        #15                 ; trap call
00001A38                          1107              
00001A38  4242                    1108              CLR         D2
00001A3A  1401                    1109              MOVE.B      D1,D2               ; Copy new byte over to D2
00001A3C  E642                    1110              ASR         #three,D2           ; Shift source register out
00001A3E  C47C 0007               1111              AND         #seven,D2           ; Set everything to 0 except for the mode
00001A42                          1112          
00001A42  4243                    1113              CLR         D3
00001A44  1601                    1114              MOVE.B      D1,D3
00001A46  C67C 0007               1115              AND         #seven,D3
00001A4A                          1116              
00001A4A  4241                    1117              CLR         D1                  ; Clear D1
00001A4C  3218                    1118              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001A4E                          1119              
00001A4E                          1120              
00001A4E  4EB9 00001E0C           1121              JSR         printEA
00001A54                          1122              
00001A54  43F9 0000246B           1123              LEA         comma, A1           ; Display comma
00001A5A  103C 000E               1124              MOVE.B      #14, D0             ; command for trap call to display message
00001A5E  4E4F                    1125              TRAP        #15                 ; trap call
00001A60                          1126  
00001A60  4242                    1127              CLR         D2
00001A62  4243                    1128              CLR         D3
00001A64  1404                    1129              MOVE.B      D4,D2
00001A66  1605                    1130              MOVE.B      D5,D3
00001A68                          1131          
00001A68  4EB9 00001E0C           1132              JSR         printEA
00001A6E                          1133          
00001A6E                          1134          
00001A6E  43F9 00002460           1135              LEA         newLine, A1           ; Display space
00001A74  103C 000E               1136              MOVE.B      #14, D0             ; command for trap call to display message
00001A78  4E4F                    1137              TRAP        #15                 ; trap call            
00001A7A                          1138  
00001A7A                          1139  
00001A7A  6000 F590               1140              BRA         LOOP                ; go back to the loop
00001A7E                          1141  
00001A7E                          1142  opMOVEW
00001A7E                          1143          
00001A7E  4245                    1144              CLR         D5                  ; Clear D5
00001A80  1A01                    1145              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001A82  E245                    1146              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001A84  CA7C 0007               1147              AND         #seven,D5
00001A88                          1148          
00001A88  4244                    1149              CLR         D4                  ; Clear out D4
00001A8A  1801                    1150              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001A8C  C87C 0001               1151              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001A90                          1152          
00001A90  4241                    1153              CLR          D1
00001A92  4242                    1154              CLR          D2
00001A94  1218                    1155              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001A96  1401                    1156              MOVE.B      D1,D2
00001A98  EC42                    1157              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001A9A  D842                    1158              ADD         D2,D4               ; Adds the remaining bits to D4
00001A9C                          1159          
00001A9C  B87C 0001               1160              CMP         #one,D4             ; Check if it is MOVEA
00001AA0  6700 006C               1161              BEQ         opMOVEAW            ; If it is, branch off
00001AA4                          1162              
00001AA4  43F9 00002483           1163              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001AAA  103C 000E               1164              MOVE.B      #14, D0             ; command for trap call to display message
00001AAE  4E4F                    1165              TRAP        #15                 ; trap call  
00001AB0                          1166              
00001AB0  43F9 000024FA           1167              LEA         dispWord,A1
00001AB6  103C 000E               1168              MOVE.B      #14, D0             ; command for trap call to display message
00001ABA  4E4F                    1169              TRAP        #15                 ; trap call
00001ABC                          1170              
00001ABC  43F9 00002464           1171              LEA         space, A1           ; create spaces
00001AC2  103C 000E               1172              MOVE.B      #14, D0             ; command for trap call to display message
00001AC6  4E4F                    1173              TRAP        #15                 ; trap call
00001AC8                          1174          
00001AC8  4242                    1175              CLR         D2
00001ACA  1401                    1176              MOVE.B      D1,D2               ; Copy new byte over to D2
00001ACC  E642                    1177              ASR         #three,D2           ; Shift source register out
00001ACE  C47C 0007               1178              AND         #seven,D2           ; Set everything to 0 except for the mode
00001AD2                          1179          
00001AD2  4243                    1180              CLR         D3
00001AD4  1601                    1181              MOVE.B      D1,D3
00001AD6  C67C 0007               1182              AND         #seven,D3
00001ADA                          1183              
00001ADA  4241                    1184              CLR         D1                  ; Clear D1
00001ADC  3218                    1185              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001ADE                          1186              
00001ADE  4EB9 00001E0C           1187              JSR         printEA
00001AE4                          1188              
00001AE4  43F9 0000246B           1189              LEA         comma, A1           ; Display comma
00001AEA  103C 000E               1190              MOVE.B      #14, D0             ; command for trap call to display message
00001AEE  4E4F                    1191              TRAP        #15                 ; trap call
00001AF0                          1192          
00001AF0  4242                    1193              CLR         D2
00001AF2  4243                    1194              CLR         D3
00001AF4  1404                    1195              MOVE.B      D4,D2
00001AF6  1605                    1196              MOVE.B      D5,D3
00001AF8                          1197              
00001AF8                          1198  
00001AF8                          1199              
00001AF8  4EB9 00001E0C           1200              JSR         printEA
00001AFE                          1201          
00001AFE                          1202          
00001AFE  43F9 00002460           1203              LEA         newLine, A1           ; Display space
00001B04  103C 000E               1204              MOVE.B      #14, D0             ; command for trap call to display message
00001B08  4E4F                    1205              TRAP        #15                 ; trap call            
00001B0A                          1206  
00001B0A                          1207  
00001B0A  6000 F500               1208              BRA         LOOP                ; go back to the loop
00001B0E                          1209  opMOVEAW  
00001B0E  43F9 00002488           1210              LEA         MOVEAmatch,A1
00001B14  103C 000E               1211              MOVE.B      #14, D0             ; command for trap call to display message
00001B18  4E4F                    1212              TRAP        #15                 ; trap call
00001B1A                          1213              
00001B1A  43F9 000024FA           1214              LEA         dispWord,A1
00001B20  103C 000E               1215              MOVE.B      #14, D0             ; command for trap call to display message
00001B24  4E4F                    1216              TRAP        #15                 ; trap call
00001B26                          1217              
00001B26                          1218  
00001B26  43F9 00002464           1219              LEA         space, A1           ; create spaces
00001B2C  103C 000E               1220              MOVE.B      #14, D0             ; command for trap call to display message
00001B30  4E4F                    1221              TRAP        #15                 ; trap call
00001B32                          1222              
00001B32  4242                    1223              CLR         D2
00001B34  1401                    1224              MOVE.B      D1,D2               ; Copy new byte over to D2
00001B36  E642                    1225              ASR         #three,D2           ; Shift source register out
00001B38  C47C 0007               1226              AND         #seven,D2           ; Set everything to 0 except for the mode
00001B3C                          1227          
00001B3C  4243                    1228              CLR         D3
00001B3E  1601                    1229              MOVE.B      D1,D3
00001B40  C67C 0007               1230              AND         #seven,D3
00001B44                          1231              
00001B44  4241                    1232              CLR         D1                  ; Clear D1
00001B46  3218                    1233              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001B48                          1234              
00001B48                          1235              
00001B48  4EB9 00001E0C           1236              JSR         printEA
00001B4E                          1237              
00001B4E  43F9 0000246B           1238              LEA         comma, A1           ; Display comma
00001B54  103C 000E               1239              MOVE.B      #14, D0             ; command for trap call to display message
00001B58  4E4F                    1240              TRAP        #15                 ; trap call
00001B5A                          1241  
00001B5A  4242                    1242              CLR         D2
00001B5C  4243                    1243              CLR         D3
00001B5E  1404                    1244              MOVE.B      D4,D2
00001B60  1605                    1245              MOVE.B      D5,D3
00001B62                          1246          
00001B62  4EB9 00001E0C           1247              JSR         printEA
00001B68                          1248          
00001B68                          1249          
00001B68  43F9 00002460           1250              LEA         newLine, A1           ; Display space
00001B6E  103C 000E               1251              MOVE.B      #14, D0             ; command for trap call to display message
00001B72  4E4F                    1252              TRAP        #15                 ; trap call            
00001B74                          1253  
00001B74                          1254  
00001B74  6000 F496               1255              BRA         LOOP                ; go back to the loop
00001B78                          1256  
00001B78                          1257  opNEG   
00001B78  43F9 0000248E           1258              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001B7E  103C 000E               1259              MOVE.B      #14, D0             ; command for trap call to display message
00001B82  4E4F                    1260              TRAP        #15                 ; trap call
00001B84                          1261          
00001B84                          1262          
00001B84  1218                    1263              MOVE.B      (A0)+, D1
00001B86  1401                    1264              MOVE.B      D1,D2               ; copy data over
00001B88  EC42                    1265              ASR         #six,D2
00001B8A                          1266              
00001B8A  B47C 0000               1267              CMP         #zero,D2
00001B8E  6700 0016               1268              BEQ         opNEGB
00001B92  B47C 0001               1269              CMP         #one,D2
00001B96  6700 004E               1270              BEQ         opNEGL
00001B9A  B47C 0002               1271              CMP         #two,D2
00001B9E  6700 0086               1272              BEQ         opNEGW
00001BA2  6000 08B2               1273              BRA         INVALID
00001BA6                          1274  opNEGB
00001BA6                          1275  
00001BA6  43F9 000024F7           1276              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001BAC  103C 000E               1277              MOVE.B      #14, D0             ; command for trap call to display message
00001BB0  4E4F                    1278              TRAP        #15                 ; trap call
00001BB2                          1279          
00001BB2  43F9 00002464           1280              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001BB8  103C 000E               1281              MOVE.B      #14, D0             ; command for trap call to display message
00001BBC  4E4F                    1282              TRAP        #15                 ; trap call
00001BBE                          1283          
00001BBE  4242                    1284              CLR         D2                  ; Clear Data register 2
00001BC0  3401                    1285              MOVE        D1,D2               ; Move byte into D2
00001BC2  E642                    1286              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001BC4  C47C 0007               1287              AND         #seven,D2           ; Stores mode
00001BC8                          1288              
00001BC8  4243                    1289              CLR         D3
00001BCA  3601                    1290              MOVE        D1,D3
00001BCC  C67C 0007               1291              AND         #seven,D3
00001BD0                          1292          
00001BD0  4EB9 00001E0C           1293              JSR         printEA
00001BD6                          1294                  
00001BD6  43F9 00002460           1295              LEA         newLine, A1           ; Display space
00001BDC  103C 000E               1296              MOVE.B      #14, D0             ; command for trap call to display message
00001BE0  4E4F                    1297              TRAP        #15                 ; trap call  
00001BE2                          1298          
00001BE2  6000 F428               1299              BRA         LOOP
00001BE6                          1300                  
00001BE6                          1301  
00001BE6                          1302  opNEGL
00001BE6                          1303  
00001BE6  43F9 000024FD           1304              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001BEC  103C 000E               1305              MOVE.B      #14, D0             ; command for trap call to display message
00001BF0  4E4F                    1306              TRAP        #15                 ; trap call
00001BF2                          1307  
00001BF2  43F9 00002464           1308              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001BF8  103C 000E               1309              MOVE.B      #14, D0             ; command for trap call to display message
00001BFC  4E4F                    1310              TRAP        #15                 ; trap call
00001BFE                          1311                  
00001BFE  4242                    1312              CLR         D2                  ; Clear Data register 2
00001C00  3401                    1313              MOVE        D1,D2               ; Move byte into D2
00001C02  E642                    1314              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001C04  C47C 0007               1315              AND         #seven,D2           ; Stores mode
00001C08                          1316          
00001C08  4243                    1317              CLR         D3
00001C0A  3601                    1318              MOVE        D1,D3
00001C0C  C67C 0007               1319              AND         #seven,D3
00001C10                          1320          
00001C10  4EB9 00001E0C           1321              JSR         printEA
00001C16                          1322                      
00001C16  43F9 00002460           1323              LEA         newLine, A1         ; Display space
00001C1C  103C 000E               1324              MOVE.B      #14, D0             ; command for trap call to display message
00001C20  4E4F                    1325              TRAP        #15                 ; trap call  
00001C22                          1326          
00001C22  6000 F3E8               1327              BRA         LOOP
00001C26                          1328          
00001C26                          1329  
00001C26                          1330  opNEGW
00001C26                          1331  
00001C26  43F9 000024FA           1332              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001C2C  103C 000E               1333              MOVE.B      #14, D0             ; command for trap call to display message
00001C30  4E4F                    1334              TRAP        #15                 ; trap call
00001C32                          1335          
00001C32  43F9 00002464           1336              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001C38  103C 000E               1337              MOVE.B      #14, D0             ; command for trap call to display message
00001C3C  4E4F                    1338              TRAP        #15                 ; trap call        
00001C3E                          1339                  
00001C3E  4242                    1340              CLR         D2                  ; Clear Data register 2
00001C40  3401                    1341              MOVE        D1,D2               ; Move byte into D2
00001C42  E642                    1342              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001C44  C47C 0007               1343              AND         #seven,D2           ; Stores mode
00001C48                          1344          
00001C48  4243                    1345              CLR         D3
00001C4A  3601                    1346              MOVE        D1,D3
00001C4C  C67C 0007               1347              AND         #seven,D3
00001C50                          1348          
00001C50  4EB9 00001E0C           1349              JSR         printEA
00001C56                          1350              
00001C56  43F9 00002460           1351              LEA         newLine, A1           ; Display space
00001C5C  103C 000E               1352              MOVE.B      #14, D0             ; command for trap call to display message
00001C60  4E4F                    1353              TRAP        #15                 ; trap call  
00001C62                          1354          
00001C62  6000 F3A8               1355              BRA         LOOP
00001C66                          1356  
00001C66                          1357  opRTSJSR
00001C66                          1358          
00001C66  1218                    1359              MOVE.B      (A0)+, D1
00001C68                          1360              
00001C68  1401                    1361              MOVE.B      D1,D2               ; copy data over
00001C6A  B47C 0075               1362              CMP         #117,D2
00001C6E  6700 0050               1363              BEQ         opRTS
00001C72                          1364              
00001C72  EC42                    1365              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
00001C74  B47C 0002               1366              CMP         #two,D2             ; Checking if it is JSR
00001C78  6700 0006               1367              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001C7C                          1368  
00001C7C  6000 07D8               1369              BRA         invalid
00001C80                          1370  
00001C80                          1371  opJSR
00001C80                          1372                        
00001C80  43F9 00002496           1373              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001C86  103C 000E               1374              MOVE.B      #14, D0             ; command for trap call to display message
00001C8A  4E4F                    1375              TRAP        #15                 ; trap call
00001C8C                          1376              
00001C8C  43F9 00002464           1377              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001C92  103C 000E               1378              MOVE.B      #14, D0             ; command for trap call to display message
00001C96  4E4F                    1379              TRAP        #15                 ; trap call
00001C98                          1380              
00001C98  4242                    1381              CLR         D2
00001C9A  4243                    1382              CLR         D3
00001C9C                          1383              
00001C9C  1401                    1384              MOVE.B      D1,D2
00001C9E  E642                    1385              ASR         #three,D2
00001CA0  C47C 0007               1386              AND         #seven,D2
00001CA4                          1387              
00001CA4  1601                    1388              MOVE.B      D1,D3
00001CA6  C67C 0007               1389              AND         #seven,D3
00001CAA                          1390              
00001CAA  4EB9 00001E0C           1391              JSR         printEA
00001CB0                          1392              
00001CB0  43F9 00002460           1393              LEA         newLine, A1           ; Display space
00001CB6  103C 000E               1394              MOVE.B      #14, D0             ; command for trap call to display message
00001CBA  4E4F                    1395              TRAP        #15                 ; trap call  
00001CBC                          1396              
00001CBC  6000 F34E               1397              BRA         loop            
00001CC0                          1398  opRTS
00001CC0                          1399  
00001CC0  43F9 00002492           1400              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
00001CC6  103C 000E               1401              MOVE.B      #14, D0             ; command for trap call to display message
00001CCA  4E4F                    1402              TRAP        #15                 ; trap call
00001CCC                          1403              
00001CCC  43F9 00002460           1404              LEA         newLine, A1           ; Display space
00001CD2  103C 000E               1405              MOVE.B      #14, D0             ; command for trap call to display message
00001CD6  4E4F                    1406              TRAP        #15                 ; trap call 
00001CD8                          1407              
00001CD8  6000 F332               1408              BRA         loop
00001CDC                          1409  
00001CDC                          1410  opMOVEMLEA
00001CDC  4242                    1411              CLR         D2                  ; Clear D2
00001CDE  1401                    1412              MOVE.B      D1,D2               ; Copy byte over
00001CE0  C47C 000F               1413              AND         #secNib,D2          ; Check only the second nibble
00001CE4  B47C 000C               1414              CMP         #twelve,D2          ; Compare the second nibble to twelve
00001CE8  6700 000E               1415              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
00001CEC  B47C 0008               1416              CMP         #eight,D2           ; Compare the second nibble to eight
00001CF0  6700 0006               1417              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
00001CF4  6000 001A               1418              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
00001CF8                          1419              
00001CF8                          1420  opMOVEM
00001CF8                          1421  
00001CF8  43F9 00002492           1422              LEA         RTSMatch, A1       ; we know that the opcode will be MOVEM, so load A1 to print message
00001CFE  103C 000E               1423              MOVE.B      #14, D0             ; command for trap call to display message
00001D02  4E4F                    1424              TRAP        #15                 ; trap call
00001D04                          1425              
00001D04  4244                    1426              CLR         D4                  ; Clearing D4 to store dr field
00001D06  1801                    1427              MOVE.B      D1,D4               ; Moving byte to find dr field
00001D08  E444                    1428              ASR         #two,D4             ; Moving dr field to readable spot
00001D0A  C87C 0001               1429              AND         #one,D4             ; seting everything except dr to 0
00001D0E                          1430              
00001D0E  1218                    1431              MOVE.B      (A0)+, D1
00001D10                          1432              
00001D10                          1433  
00001D10                          1434  opLEA
00001D10                          1435  
00001D10                          1436  ***********************************************************************************************************
00001D10                          1437  *
00001D10                          1438  *               SUBQ OPCODE
00001D10                          1439  *
00001D10                          1440  ***********************************************************************************************************
00001D10                          1441  
00001D10                          1442  opSUBQ      
00001D10  43F9 000024A4           1443              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
00001D16  103C 000E               1444              MOVE.B      #14, D0             ; command for trap call to display message
00001D1A  4E4F                    1445              TRAP        #15                 ; trap call
00001D1C                          1446  
00001D1C                          1447  ***********************************************************************************************************
00001D1C                          1448  *
00001D1C                          1449  *               BRA OPCODE
00001D1C                          1450  *
00001D1C                          1451  ***********************************************************************************************************
00001D1C                          1452              
00001D1C  43F9 000024A9           1453  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001D22  103C 000E               1454          MOVE.B      #14, D0             ; command for trap call to display message
00001D26  4E4F                    1455          TRAP        #15                 ; trap call
00001D28                          1456          
00001D28  4242                    1457          CLR         D2
00001D2A  4243                    1458          CLR         D3      
00001D2C                          1459  
00001D2C  43F9 00002464           1460          LEA         space,A1
00001D32  103C 000E               1461          MOVE.B      #14,D0
00001D36  4E4F                    1462          TRAP        #15
00001D38                          1463          
00001D38  143C 0007               1464          MOVE.B      #seven,D2
00001D3C  1218                    1465          MOVE.B      (A0)+,D1
00001D3E  4EB9 00001E0C           1466          JSR         printEA
00001D44                          1467          
00001D44  43F9 00002460           1468          LEA         newLine, A1           ; create new line
00001D4A  103C 000E               1469          MOVE.B      #14, D0             ; command for trap call to display message
00001D4E  4E4F                    1470          TRAP        #15                 ; trap call
00001D50                          1471  
00001D50  6000 F2BA               1472          BRA         LOOP
00001D54                          1473          
00001D54                          1474          
00001D54  43F9 000024AD           1475  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001D5A  103C 000E               1476          MOVE.B      #14, D0             ; command for trap call to display message
00001D5E  4E4F                    1477          TRAP        #15                 ; trap call
00001D60                          1478  
00001D60  43F9 000024B1           1479  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001D66  103C 000E               1480          MOVE.B      #14, D0             ; command for trap call to display message
00001D6A  4E4F                    1481          TRAP        #15                 ; trap call
00001D6C                          1482  
00001D6C  43F9 000024B5           1483  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001D72  103C 000E               1484          MOVE.B      #14, D0             ; command for trap call to display message
00001D76  4E4F                    1485          TRAP        #15                 ; trap call
00001D78                          1486  
00001D78  43F9 000024B9           1487  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001D7E  103C 000E               1488          MOVE.B      #14, D0             ; command for trap call to display message
00001D82  4E4F                    1489          TRAP        #15                 ; trap call
00001D84                          1490  
00001D84                          1491  ***********************************************************************************************************
00001D84                          1492  *
00001D84                          1493  *               SUB OPCODE
00001D84                          1494  *
00001D84                          1495  ***********************************************************************************************************
00001D84                          1496  
00001D84  43F9 000024C5           1497  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001D8A  103C 000E               1498          MOVE.B      #14, D0             ; command for trap call to display message
00001D8E  4E4F                    1499          TRAP        #15                 ; trap call
00001D90                          1500          
00001D90                          1501          
00001D90                          1502          
00001D90  43F9 00002464           1503          LEA         space,A1
00001D96  103C 000E               1504          MOVE.B      #14,D0
00001D9A  4E4F                    1505          TRAP        #15
00001D9C                          1506          
00001D9C  1218                    1507          MOVE.B      (A0)+,D1
00001D9E  1401                    1508          MOVE.B      D1,D2
00001DA0  E842                    1509          ASR         #4,D2
00001DA2                          1510          
00001DA2  4EB9 00001E0C           1511          JSR         printEA
00001DA8                          1512          
00001DA8  43F9 00002460           1513          LEA         newLine,A1
00001DAE  103C 000E               1514          MOVE.B      #14,D0
00001DB2  4E4F                    1515          TRAP        #15
00001DB4                          1516          
00001DB4  6000 F256               1517          BRA         LOOP
00001DB8                          1518          
00001DB8                          1519          
00001DB8                          1520          
00001DB8  43F9 000024D1           1521  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001DBE  103C 000E               1522          MOVE.B      #14, D0             ; command for trap call to display message
00001DC2  4E4F                    1523          TRAP        #15                 ; trap call
00001DC4                          1524  
00001DC4  43F9 000024EB           1525  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001DCA  103C 000E               1526          MOVE.B      #14, D0             ; command for trap call to display message
00001DCE  4E4F                    1527          TRAP        #15                 ; trap call
00001DD0                          1528  
00001DD0  43F9 000024E7           1529  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001DD6  103C 000E               1530          MOVE.B      #14, D0             ; command for trap call to display message
00001DDA  4E4F                    1531          TRAP        #15                 ; trap call
00001DDC                          1532  
00001DDC  43F9 000024E3           1533  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00001DE2  103C 000E               1534          MOVE.B      #14, D0             ; command for trap call to display message
00001DE6  4E4F                    1535          TRAP        #15                 ; trap call
00001DE8                          1536  
00001DE8  43F9 000024DF           1537  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001DEE  103C 000E               1538          MOVE.B      #14, D0             ; command for trap call to display message
00001DF2  4E4F                    1539          TRAP        #15                 ; trap call
00001DF4                          1540  
00001DF4  43F9 000024F3           1541  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001DFA  103C 000E               1542          MOVE.B      #14, D0             ; command for trap call to display message
00001DFE  4E4F                    1543          TRAP        #15                 ; trap call
00001E00                          1544  
00001E00  43F9 000024EF           1545  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001E06  103C 000E               1546          MOVE.B      #14, D0             ; command for trap call to display message
00001E0A  4E4F                    1547          TRAP        #15                 ; trap call
00001E0C                          1548  
00001E0C                          1549  
00001E0C                          1550          
00001E0C                          1551  ***********************************************************************************************************
00001E0C                          1552  *
00001E0C                          1553  *                                           EA Print Check
00001E0C                          1554  *
00001E0C                          1555  ***********************************************************************************************************
00001E0C  48E7 FF7E               1556  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00001E10                          1557  
00001E10  B43C 0000               1558              CMP.B       #zero, D2
00001E14  6700 002E               1559              BEQ         pDataReg
00001E18  B43C 0001               1560              CMP.B       #one, D2
00001E1C  6700 00E6               1561              BEQ         pAddrReg
00001E20  B43C 0002               1562              CMP.B       #two, D2
00001E24  6700 019E               1563              BEQ         pAddrDir
00001E28  B43C 0003               1564              CMP.B       #three, D2
00001E2C  6700 02C2               1565              BEQ         pAddrPost
00001E30  B43C 0004               1566              CMP.B       #four, D2
00001E34  6700 0446               1567              BEQ         pAddrDec
00001E38  B43C 0007               1568              CMP.B       #seven, D2
00001E3C  6700 0576               1569              BEQ         pHex
00001E40  6000 0614               1570              BRA         invalid
00001E44                          1571  
00001E44                          1572  ***********************************************************************************************************
00001E44                          1573  * Data Register        
00001E44  B63C 0000               1574  pDataReg    CMP.B   #zero,D3
00001E48  6700 003A               1575              BEQ     displayD0
00001E4C  B63C 0001               1576              CMP.B   #one,D3
00001E50  6700 0042               1577              BEQ     displayD1
00001E54  B63C 0002               1578              CMP.B   #two,D3
00001E58  6700 004A               1579              BEQ     displayD2
00001E5C  B63C 0003               1580              CMP.B   #three,D3
00001E60  6700 0052               1581              BEQ     displayD3
00001E64  B63C 0004               1582              CMP.B   #four,D3
00001E68  6700 005A               1583              BEQ     displayD4
00001E6C  B63C 0005               1584              CMP.B   #five,D3
00001E70  6700 0062               1585              BEQ     displayD5
00001E74  B63C 0006               1586              CMP.B   #six,D3
00001E78  6700 006A               1587              BEQ     displayD6
00001E7C  B63C 0007               1588              CMP.B   #seven,D3
00001E80  6700 0072               1589              BEQ     displayD7
00001E84                          1590              
00001E84  43F9 0000251A           1591  displayD0   LEA         dispD0, A1          ; Display space
00001E8A  103C 000E               1592              MOVE.B      #14, D0             ; command for trap call to display message
00001E8E  4E4F                    1593              TRAP        #15                 ; trap call
00001E90  6000 05C4               1594              BRA         endSUB              ; go to the end of the subroutine
00001E94                          1595              
00001E94  43F9 0000251D           1596  displayD1   LEA         dispD1, A1          ; Display space
00001E9A  103C 000E               1597              MOVE.B      #14, D0             ; command for trap call to display message
00001E9E  4E4F                    1598              TRAP        #15                 ; trap call
00001EA0  6000 05B4               1599              BRA         endSUB              ; go to the end of the subroutine
00001EA4                          1600  
00001EA4  43F9 00002520           1601  displayD2   LEA         dispD2, A1          ; Display space
00001EAA  103C 000E               1602              MOVE.B      #14, D0             ; command for trap call to display message
00001EAE  4E4F                    1603              TRAP        #15                 ; trap call
00001EB0  6000 05A4               1604              BRA         endSUB              ; go to the end of the subroutine
00001EB4                          1605  
00001EB4  43F9 00002523           1606  displayD3   LEA         dispD3, A1          ; Display space
00001EBA  103C 000E               1607              MOVE.B      #14, D0             ; command for trap call to display message
00001EBE  4E4F                    1608              TRAP        #15                 ; trap call
00001EC0  6000 0594               1609              BRA         endSUB              ; go to the end of the subroutine
00001EC4                          1610  
00001EC4  43F9 00002526           1611  displayD4   LEA         dispD4, A1          ; Display space
00001ECA  103C 000E               1612              MOVE.B      #14, D0             ; command for trap call to display message
00001ECE  4E4F                    1613              TRAP        #15                 ; trap call
00001ED0  6000 0584               1614              BRA         endSUB              ; go to the end of the subroutine
00001ED4                          1615  
00001ED4  43F9 00002529           1616  displayD5   LEA         dispD5, A1          ; Display space
00001EDA  103C 000E               1617              MOVE.B      #14, D0             ; command for trap call to display message
00001EDE  4E4F                    1618              TRAP        #15                 ; trap call
00001EE0  6000 0574               1619              BRA         endSUB              ; go to the end of the subroutine
00001EE4                          1620  
00001EE4  43F9 0000252C           1621  displayD6   LEA         dispD6, A1          ; Display space
00001EEA  103C 000E               1622              MOVE.B      #14, D0             ; command for trap call to display message
00001EEE  4E4F                    1623              TRAP        #15                 ; trap call
00001EF0  6000 0564               1624              BRA         endSUB              ; go to the end of the subroutine
00001EF4                          1625  
00001EF4  43F9 0000252F           1626  displayD7   LEA         dispD7, A1          ; Display space
00001EFA  103C 000E               1627              MOVE.B      #14, D0             ; command for trap call to display message
00001EFE  4E4F                    1628              TRAP        #15                 ; trap call
00001F00  6000 0554               1629              BRA         endSUB              ; go to the end of the subroutine
00001F04                          1630  ***********************************************************************************************************
00001F04                          1631  * Address Register
00001F04  B63C 0000               1632  pAddrReg    CMP.B   #zero,D3
00001F08  6700 003A               1633              BEQ     displayA0
00001F0C  B63C 0001               1634              CMP.B   #one,D3
00001F10  6700 0042               1635              BEQ     displayA1
00001F14  B63C 0002               1636              CMP.B   #two,D3
00001F18  6700 004A               1637              BEQ     displayA2
00001F1C  B63C 0003               1638              CMP.B   #three,D3
00001F20  6700 0052               1639              BEQ     displayA3
00001F24  B63C 0004               1640              CMP.B   #four,D3
00001F28  6700 005A               1641              BEQ     displayA4
00001F2C  B63C 0005               1642              CMP.B   #five,D3
00001F30  6700 0062               1643              BEQ     displayA5
00001F34  B63C 0006               1644              CMP.B   #six,D3
00001F38  6700 006A               1645              BEQ     displayA6
00001F3C  B63C 0007               1646              CMP.B   #seven,D3
00001F40  6700 0072               1647              BEQ     displayA7
00001F44                          1648              
00001F44  43F9 00002500           1649  displayA0   LEA         dispA0, A1          ; Display space
00001F4A  103C 000E               1650              MOVE.B      #14, D0             ; command for trap call to display message
00001F4E  4E4F                    1651              TRAP        #15                 ; trap call
00001F50  6000 0504               1652              BRA         endSUB              ; go to the end of the subroutine
00001F54                          1653              
00001F54  43F9 00002503           1654  displayA1   LEA         dispA1, A1          ; Display space
00001F5A  103C 000E               1655              MOVE.B      #14, D0             ; command for trap call to display message
00001F5E  4E4F                    1656              TRAP        #15                 ; trap call
00001F60  6000 04F4               1657              BRA         endSUB              ; go to the end of the subroutine
00001F64                          1658  
00001F64  43F9 00002506           1659  displayA2   LEA         dispA2, A1          ; Display space
00001F6A  103C 000E               1660              MOVE.B      #14, D0             ; command for trap call to display message
00001F6E  4E4F                    1661              TRAP        #15                 ; trap call
00001F70  6000 04E4               1662              BRA         endSUB              ; go to the end of the subroutine
00001F74                          1663  
00001F74  43F9 00002509           1664  displayA3   LEA         dispA3, A1          ; Display space
00001F7A  103C 000E               1665              MOVE.B      #14, D0             ; command for trap call to display message
00001F7E  4E4F                    1666              TRAP        #15                 ; trap call
00001F80  6000 04D4               1667              BRA         endSUB              ; go to the end of the subroutine
00001F84                          1668  
00001F84  43F9 0000250C           1669  displayA4   LEA         dispA4, A1          ; Display space
00001F8A  103C 000E               1670              MOVE.B      #14, D0             ; command for trap call to display message
00001F8E  4E4F                    1671              TRAP        #15                 ; trap call
00001F90  6000 04C4               1672              BRA         endSUB              ; go to the end of the subroutine
00001F94                          1673  
00001F94  43F9 0000250F           1674  displayA5   LEA         dispA5, A1          ; Display space
00001F9A  103C 000E               1675              MOVE.B      #14, D0             ; command for trap call to display message
00001F9E  4E4F                    1676              TRAP        #15                 ; trap call
00001FA0  6000 04B4               1677              BRA         endSUB              ; go to the end of the subroutine
00001FA4                          1678  
00001FA4  43F9 00002512           1679  displayA6   LEA         dispA6, A1          ; Display space
00001FAA  103C 000E               1680              MOVE.B      #14, D0             ; command for trap call to display message
00001FAE  4E4F                    1681              TRAP        #15                 ; trap call
00001FB0  6000 04A4               1682              BRA         endSUB              ; go to the end of the subroutine
00001FB4                          1683  
00001FB4  43F9 00002515           1684  displayA7   LEA         dispA7, A1          ; Display space
00001FBA  103C 000E               1685              MOVE.B      #14, D0             ; command for trap call to display message
00001FBE  4E4F                    1686              TRAP        #15                 ; trap call
00001FC0  6000 0494               1687              BRA         endSUB              ; go to the end of the subroutine
00001FC4                          1688  
00001FC4                          1689  ***********************************************************************************************************
00001FC4                          1690  * Address Register Direct
00001FC4                          1691  
00001FC4  43F9 0000246D           1692  pAddrDir    LEA         opPer, A1           ; Display space
00001FCA  103C 000E               1693              MOVE.B      #14, D0             ; command for trap call to display message
00001FCE  4E4F                    1694              TRAP        #15                 ; trap call
00001FD0                          1695              
00001FD0  B63C 0000               1696              CMP.B   #zero,D3
00001FD4  6700 003A               1697              BEQ     displayA0A
00001FD8  B63C 0001               1698              CMP.B   #one,D3
00001FDC  6700 004E               1699              BEQ     displayA1A
00001FE0  B63C 0002               1700              CMP.B   #two,D3
00001FE4  6700 0062               1701              BEQ     displayA2A
00001FE8  B63C 0003               1702              CMP.B   #three,D3
00001FEC  6700 0076               1703              BEQ     displayA3A
00001FF0  B63C 0004               1704              CMP.B   #four,D3
00001FF4  6700 008A               1705              BEQ     displayA4A
00001FF8  B63C 0005               1706              CMP.B   #five,D3
00001FFC  6700 009E               1707              BEQ     displayA5A
00002000  B63C 0006               1708              CMP.B   #six,D3
00002004  6700 00B2               1709              BEQ     displayA6A
00002008  B63C 0007               1710              CMP.B   #seven,D3
0000200C  6700 00C6               1711              BEQ     displayA7A
00002010                          1712              
00002010  43F9 00002500           1713  displayA0A  LEA         dispA0, A1          ; Display space
00002016  103C 000E               1714              MOVE.B      #14, D0             ; command for trap call to display message
0000201A  4E4F                    1715              TRAP        #15                 ; trap call
0000201C  43F9 0000246F           1716              LEA         clPer, A1           ; Display space
00002022  103C 000E               1717              MOVE.B      #14, D0             ; command for trap call to display message
00002026  4E4F                    1718              TRAP        #15                 ; trap call
00002028  6000 042C               1719              BRA         endSUB              ; go to the end of the subroutine
0000202C                          1720              
0000202C  43F9 00002503           1721  displayA1A  LEA         dispA1, A1          ; Display space
00002032  103C 000E               1722              MOVE.B      #14, D0             ; command for trap call to display message
00002036  4E4F                    1723              TRAP        #15                 ; trap call
00002038  43F9 0000246F           1724              LEA         clPer, A1           ; Display space
0000203E  103C 000E               1725              MOVE.B      #14, D0             ; command for trap call to display message
00002042  4E4F                    1726              TRAP        #15                 ; trap call
00002044  6000 0410               1727              BRA         endSUB              ; go to the end of the subroutine
00002048                          1728  
00002048  43F9 00002506           1729  displayA2A  LEA         dispA2, A1          ; Display space
0000204E  103C 000E               1730              MOVE.B      #14, D0             ; command for trap call to display message
00002052  4E4F                    1731              TRAP        #15                 ; trap call
00002054  43F9 0000246F           1732              LEA         clPer, A1           ; Display space
0000205A  103C 000E               1733              MOVE.B      #14, D0             ; command for trap call to display message
0000205E  4E4F                    1734              TRAP        #15                 ; trap call
00002060  6000 03F4               1735              BRA         endSUB              ; go to the end of the subroutine
00002064                          1736  
00002064  43F9 00002509           1737  displayA3A  LEA         dispA3, A1          ; Display space
0000206A  103C 000E               1738              MOVE.B      #14, D0             ; command for trap call to display message
0000206E  4E4F                    1739              TRAP        #15                 ; trap call
00002070  43F9 0000246F           1740              LEA         clPer, A1           ; Display space
00002076  103C 000E               1741              MOVE.B      #14, D0             ; command for trap call to display message
0000207A  4E4F                    1742              TRAP        #15                 ; trap call
0000207C  6000 03D8               1743              BRA         endSUB              ; go to the end of the subroutine
00002080                          1744  
00002080  43F9 0000250C           1745  displayA4A  LEA         dispA4, A1          ; Display space
00002086  103C 000E               1746              MOVE.B      #14, D0             ; command for trap call to display message
0000208A  4E4F                    1747              TRAP        #15                 ; trap call
0000208C  43F9 0000246F           1748              LEA         clPer, A1           ; Display space
00002092  103C 000E               1749              MOVE.B      #14, D0             ; command for trap call to display message
00002096  4E4F                    1750              TRAP        #15                 ; trap call
00002098  6000 03BC               1751              BRA         endSUB              ; go to the end of the subroutine
0000209C                          1752  
0000209C  43F9 0000250F           1753  displayA5A  LEA         dispA5, A1          ; Display space
000020A2  103C 000E               1754              MOVE.B      #14, D0             ; command for trap call to display message
000020A6  4E4F                    1755              TRAP        #15                 ; trap call
000020A8  43F9 0000246F           1756              LEA         clPer, A1           ; Display space
000020AE  103C 000E               1757              MOVE.B      #14, D0             ; command for trap call to display message
000020B2  4E4F                    1758              TRAP        #15                 ; trap call
000020B4  6000 03A0               1759              BRA         endSUB              ; go to the end of the subroutine
000020B8                          1760  
000020B8  43F9 00002512           1761  displayA6A  LEA         dispA6, A1          ; Display space
000020BE  103C 000E               1762              MOVE.B      #14, D0             ; command for trap call to display message
000020C2  4E4F                    1763              TRAP        #15                 ; trap call
000020C4  43F9 0000246F           1764              LEA         clPer, A1           ; Display space
000020CA  103C 000E               1765              MOVE.B      #14, D0             ; command for trap call to display message
000020CE  4E4F                    1766              TRAP        #15                 ; trap call
000020D0  6000 0384               1767              BRA         endSUB              ; go to the end of the subroutine
000020D4                          1768  
000020D4  43F9 00002515           1769  displayA7A  LEA         dispA7, A1          ; Display space
000020DA  103C 000E               1770              MOVE.B      #14, D0             ; command for trap call to display message
000020DE  4E4F                    1771              TRAP        #15                 ; trap call
000020E0  43F9 0000246F           1772              LEA         clPer, A1           ; Display space
000020E6  103C 000E               1773              MOVE.B      #14, D0             ; command for trap call to display message
000020EA  4E4F                    1774              TRAP        #15                 ; trap call
000020EC  6000 0368               1775              BRA         endSUB              ; go to the end of the subroutine
000020F0                          1776              
000020F0                          1777  ***********************************************************************************************************
000020F0                          1778  * Addr Postincrement
000020F0                          1779              
000020F0  43F9 0000246D           1780  pAddrPost   LEA         opPer, A1           ; Display space
000020F6  103C 000E               1781              MOVE.B      #14, D0             ; command for trap call to display message
000020FA  4E4F                    1782              TRAP        #15                 ; trap call
000020FC                          1783              
000020FC  B63C 0000               1784              CMP.B   #zero,D3
00002100  6700 003A               1785              BEQ     displayA0P
00002104  B63C 0001               1786              CMP.B   #one,D3
00002108  6700 005A               1787              BEQ     displayA1P
0000210C  B63C 0002               1788              CMP.B   #two,D3
00002110  6700 007A               1789              BEQ     displayA2P
00002114  B63C 0003               1790              CMP.B   #three,D3
00002118  6700 009A               1791              BEQ     displayA3P
0000211C  B63C 0004               1792              CMP.B   #four,D3
00002120  6700 00BA               1793              BEQ     displayA4P
00002124  B63C 0005               1794              CMP.B   #five,D3
00002128  6700 00DA               1795              BEQ     displayA5P
0000212C  B63C 0006               1796              CMP.B   #six,D3
00002130  6700 00FA               1797              BEQ     displayA6P
00002134  B63C 0007               1798              CMP.B   #seven,D3
00002138  6700 011A               1799              BEQ     displayA7P
0000213C                          1800              
0000213C  43F9 00002500           1801  displayA0P  LEA         dispA0, A1          ; Display space
00002142  103C 000E               1802              MOVE.B      #14, D0             ; command for trap call to display message
00002146  4E4F                    1803              TRAP        #15                 ; trap call
00002148  43F9 0000246F           1804              LEA         clPer, A1           ; Display space
0000214E  103C 000E               1805              MOVE.B      #14, D0             ; command for trap call to display message
00002152  4E4F                    1806              TRAP        #15                 ; trap call
00002154  43F9 00002473           1807              LEA         inc, A1             ; Display space
0000215A  103C 000E               1808              MOVE.B      #14, D0             ; command for trap call to display message
0000215E  4E4F                    1809              TRAP        #15                 ; trap call
00002160  6000 02F4               1810              BRA         endSUB              ; go to the end of the subroutine
00002164                          1811              
00002164  43F9 00002503           1812  displayA1P  LEA         dispA1, A1          ; Display space
0000216A  103C 000E               1813              MOVE.B      #14, D0             ; command for trap call to display message
0000216E  4E4F                    1814              TRAP        #15                 ; trap call
00002170  43F9 0000246F           1815              LEA         clPer, A1           ; Display space
00002176  103C 000E               1816              MOVE.B      #14, D0             ; command for trap call to display message
0000217A  4E4F                    1817              TRAP        #15                 ; trap call
0000217C  43F9 00002473           1818              LEA         inc, A1             ; Display space
00002182  103C 000E               1819              MOVE.B      #14, D0             ; command for trap call to display message
00002186  4E4F                    1820              TRAP        #15                 ; trap call
00002188  6000 02CC               1821              BRA         endSUB              ; go to the end of the subroutine
0000218C                          1822  
0000218C  43F9 00002506           1823  displayA2P  LEA         dispA2, A1          ; Display space
00002192  103C 000E               1824              MOVE.B      #14, D0             ; command for trap call to display message
00002196  4E4F                    1825              TRAP        #15                 ; trap call
00002198  43F9 0000246F           1826              LEA         clPer, A1           ; Display space
0000219E  103C 000E               1827              MOVE.B      #14, D0             ; command for trap call to display message
000021A2  4E4F                    1828              TRAP        #15                 ; trap call
000021A4  43F9 00002473           1829              LEA         inc, A1             ; Display space
000021AA  103C 000E               1830              MOVE.B      #14, D0             ; command for trap call to display message
000021AE  4E4F                    1831              TRAP        #15                 ; trap call
000021B0  6000 02A4               1832              BRA         endSUB              ; go to the end of the subroutine
000021B4                          1833  
000021B4  43F9 00002509           1834  displayA3P  LEA         dispA3, A1          ; Display space
000021BA  103C 000E               1835              MOVE.B      #14, D0             ; command for trap call to display message
000021BE  4E4F                    1836              TRAP        #15                 ; trap call
000021C0  43F9 0000246F           1837              LEA         clPer, A1           ; Display space
000021C6  103C 000E               1838              MOVE.B      #14, D0             ; command for trap call to display message
000021CA  4E4F                    1839              TRAP        #15                 ; trap call
000021CC  43F9 00002473           1840              LEA         inc, A1             ; Display space
000021D2  103C 000E               1841              MOVE.B      #14, D0             ; command for trap call to display message
000021D6  4E4F                    1842              TRAP        #15                 ; trap call
000021D8  6000 027C               1843              BRA         endSUB              ; go to the end of the subroutine
000021DC                          1844  
000021DC  43F9 0000250C           1845  displayA4P  LEA         dispA4, A1          ; Display space
000021E2  103C 000E               1846              MOVE.B      #14, D0             ; command for trap call to display message
000021E6  4E4F                    1847              TRAP        #15                 ; trap call
000021E8  43F9 0000246F           1848              LEA         clPer, A1           ; Display space
000021EE  103C 000E               1849              MOVE.B      #14, D0             ; command for trap call to display message
000021F2  4E4F                    1850              TRAP        #15                 ; trap call
000021F4  43F9 00002473           1851              LEA         inc, A1             ; Display space
000021FA  103C 000E               1852              MOVE.B      #14, D0             ; command for trap call to display message
000021FE  4E4F                    1853              TRAP        #15                 ; trap call
00002200  6000 0254               1854              BRA         endSUB              ; go to the end of the subroutine
00002204                          1855  
00002204  43F9 0000250F           1856  displayA5P  LEA         dispA5, A1          ; Display space
0000220A  103C 000E               1857              MOVE.B      #14, D0             ; command for trap call to display message
0000220E  4E4F                    1858              TRAP        #15                 ; trap call
00002210  43F9 0000246F           1859              LEA         clPer, A1           ; Display space
00002216  103C 000E               1860              MOVE.B      #14, D0             ; command for trap call to display message
0000221A  4E4F                    1861              TRAP        #15                 ; trap call
0000221C  43F9 00002473           1862              LEA         inc, A1             ; Display space
00002222  103C 000E               1863              MOVE.B      #14, D0             ; command for trap call to display message
00002226  4E4F                    1864              TRAP        #15                 ; trap call
00002228  6000 022C               1865              BRA         endSUB              ; go to the end of the subroutine
0000222C                          1866  
0000222C  43F9 00002512           1867  displayA6P  LEA         dispA6, A1          ; Display space
00002232  103C 000E               1868              MOVE.B      #14, D0             ; command for trap call to display message
00002236  4E4F                    1869              TRAP        #15                 ; trap call
00002238  43F9 0000246F           1870              LEA         clPer, A1           ; Display space
0000223E  103C 000E               1871              MOVE.B      #14, D0             ; command for trap call to display message
00002242  4E4F                    1872              TRAP        #15                 ; trap call
00002244  43F9 00002473           1873              LEA         inc, A1             ; Display space
0000224A  103C 000E               1874              MOVE.B      #14, D0             ; command for trap call to display message
0000224E  4E4F                    1875              TRAP        #15                 ; trap call
00002250  6000 0204               1876              BRA         endSUB              ; go to the end of the subroutine
00002254                          1877  
00002254  43F9 00002515           1878  displayA7P  LEA         dispA7, A1          ; Display space
0000225A  103C 000E               1879              MOVE.B      #14, D0             ; command for trap call to display message
0000225E  4E4F                    1880              TRAP        #15                 ; trap call
00002260  43F9 0000246F           1881              LEA         clPer, A1           ; Display space
00002266  103C 000E               1882              MOVE.B      #14, D0             ; command for trap call to display message
0000226A  4E4F                    1883              TRAP        #15                 ; trap call
0000226C  43F9 00002473           1884              LEA         inc, A1             ; Display space
00002272  103C 000E               1885              MOVE.B      #14, D0             ; command for trap call to display message
00002276  4E4F                    1886              TRAP        #15                 ; trap call
00002278  6000 01DC               1887              BRA         endSUB              ; go to the end of the subroutine
0000227C                          1888  
0000227C                          1889  ***********************************************************************************************************
0000227C                          1890  * Addr Postdecrement
0000227C                          1891  
0000227C  43F9 00002471           1892  pAddrDec    LEA         dec, A1             ; Display space
00002282  103C 000E               1893              MOVE.B      #14, D0             ; command for trap call to display message
00002286  4E4F                    1894              TRAP        #15                 ; trap call
00002288                          1895              
00002288  43F9 0000246D           1896              LEA         opPer, A1           ; Display space
0000228E  103C 000E               1897              MOVE.B      #14, D0             ; command for trap call to display message
00002292  4E4F                    1898              TRAP        #15                 ; trap call
00002294                          1899              
00002294  B63C 0000               1900              CMP.B   #zero,D3
00002298  6700 003A               1901              BEQ     displayA0D
0000229C  B63C 0001               1902              CMP.B   #one,D3
000022A0  6700 004E               1903              BEQ     displayA1D
000022A4  B63C 0002               1904              CMP.B   #two,D3
000022A8  6700 0062               1905              BEQ     displayA2D
000022AC  B63C 0003               1906              CMP.B   #three,D3
000022B0  6700 0076               1907              BEQ     displayA3D
000022B4  B63C 0004               1908              CMP.B   #four,D3
000022B8  6700 008A               1909              BEQ     displayA4D
000022BC  B63C 0005               1910              CMP.B   #five,D3
000022C0  6700 009E               1911              BEQ     displayA5D
000022C4  B63C 0006               1912              CMP.B   #six,D3
000022C8  6700 00B2               1913              BEQ     displayA6D
000022CC  B63C 0007               1914              CMP.B   #seven,D3
000022D0  6700 00C6               1915              BEQ     displayA7D
000022D4                          1916              
000022D4  43F9 00002500           1917  displayA0D  LEA         dispA0, A1          ; Display space
000022DA  103C 000E               1918              MOVE.B      #14, D0             ; command for trap call to display message
000022DE  4E4F                    1919              TRAP        #15                 ; trap call
000022E0  43F9 0000246F           1920              LEA         clPer, A1           ; Display space
000022E6  103C 000E               1921              MOVE.B      #14, D0             ; command for trap call to display message
000022EA  4E4F                    1922              TRAP        #15                 ; trap call
000022EC  6000 0168               1923              BRA         endSUB              ; go to the end of the subroutine
000022F0                          1924              
000022F0  43F9 00002503           1925  displayA1D  LEA         dispA1, A1          ; Display space
000022F6  103C 000E               1926              MOVE.B      #14, D0             ; command for trap call to display message
000022FA  4E4F                    1927              TRAP        #15                 ; trap call
000022FC  43F9 0000246F           1928              LEA         clPer, A1           ; Display space
00002302  103C 000E               1929              MOVE.B      #14, D0             ; command for trap call to display message
00002306  4E4F                    1930              TRAP        #15                 ; trap call
00002308  6000 014C               1931              BRA         endSUB              ; go to the end of the subroutine
0000230C                          1932  
0000230C  43F9 00002506           1933  displayA2D  LEA         dispA2, A1          ; Display space
00002312  103C 000E               1934              MOVE.B      #14, D0             ; command for trap call to display message
00002316  4E4F                    1935              TRAP        #15                 ; trap call
00002318  43F9 0000246F           1936              LEA         clPer, A1           ; Display space
0000231E  103C 000E               1937              MOVE.B      #14, D0             ; command for trap call to display message
00002322  4E4F                    1938              TRAP        #15                 ; trap call
00002324  6000 0130               1939              BRA         endSUB              ; go to the end of the subroutine
00002328                          1940  
00002328  43F9 00002509           1941  displayA3D  LEA         dispA3, A1          ; Display space
0000232E  103C 000E               1942              MOVE.B      #14, D0             ; command for trap call to display message
00002332  4E4F                    1943              TRAP        #15                 ; trap call
00002334  43F9 0000246F           1944              LEA         clPer, A1           ; Display space
0000233A  103C 000E               1945              MOVE.B      #14, D0             ; command for trap call to display message
0000233E  4E4F                    1946              TRAP        #15                 ; trap call
00002340  6000 0114               1947              BRA         endSUB              ; go to the end of the subroutine
00002344                          1948  
00002344  43F9 0000250C           1949  displayA4D  LEA         dispA4, A1          ; Display space
0000234A  103C 000E               1950              MOVE.B      #14, D0             ; command for trap call to display message
0000234E  4E4F                    1951              TRAP        #15                 ; trap call
00002350  43F9 0000246F           1952              LEA         clPer, A1           ; Display space
00002356  103C 000E               1953              MOVE.B      #14, D0             ; command for trap call to display message
0000235A  4E4F                    1954              TRAP        #15                 ; trap call
0000235C  6000 00F8               1955              BRA         endSUB              ; go to the end of the subroutine
00002360                          1956  
00002360  43F9 0000250F           1957  displayA5D  LEA         dispA5, A1          ; Display space
00002366  103C 000E               1958              MOVE.B      #14, D0             ; command for trap call to display message
0000236A  4E4F                    1959              TRAP        #15                 ; trap call
0000236C  43F9 0000246F           1960              LEA         clPer, A1           ; Display space
00002372  103C 000E               1961              MOVE.B      #14, D0             ; command for trap call to display message
00002376  4E4F                    1962              TRAP        #15                 ; trap call
00002378  6000 00DC               1963              BRA         endSUB              ; go to the end of the subroutine
0000237C                          1964  
0000237C  43F9 00002512           1965  displayA6D  LEA         dispA6, A1          ; Display space
00002382  103C 000E               1966              MOVE.B      #14, D0             ; command for trap call to display message
00002386  4E4F                    1967              TRAP        #15                 ; trap call
00002388  43F9 0000246F           1968              LEA         clPer, A1           ; Display space
0000238E  103C 000E               1969              MOVE.B      #14, D0             ; command for trap call to display message
00002392  4E4F                    1970              TRAP        #15                 ; trap call
00002394  6000 00C0               1971              BRA         endSUB              ; go to the end of the subroutine
00002398                          1972  
00002398  43F9 00002515           1973  displayA7D  LEA         dispA7, A1          ; Display space
0000239E  103C 000E               1974              MOVE.B      #14, D0             ; command for trap call to display message
000023A2  4E4F                    1975              TRAP        #15                 ; trap call
000023A4  43F9 0000246F           1976              LEA         clPer, A1           ; Display space
000023AA  103C 000E               1977              MOVE.B      #14, D0             ; command for trap call to display message
000023AE  4E4F                    1978              TRAP        #15                 ; trap call
000023B0  6000 00A4               1979              BRA         endSUB              ; go to the end of the subroutine
000023B4                          1980  
000023B4                          1981  
000023B4                          1982  ***********************************************************************************************************
000023B4                          1983  * Absolute Address
000023B4  B63C 0000               1984  pHex        CMP.B       #zero, D3
000023B8  6700 0012               1985              BEQ         AbsShort
000023BC  B63C 0001               1986              CMP.B       #one, D3
000023C0  6700 003C               1987              BEQ         AbsLong
000023C4  B63C 0004               1988              CMP.B       #four, D3
000023C8  6700 0066               1989              BEQ         DispImm
000023CC                          1990              
000023CC  43F9 0000246D           1991  AbsShort    LEA         opPer, A1           ; Display space
000023D2  103C 000E               1992              MOVE.B      #14, D0             ; command for trap call to display message
000023D6  4E4F                    1993              TRAP        #15                 ; trap call
000023D8                          1994              
000023D8  43F9 00002469           1995              LEA         dispHex, A1         ; Display space
000023DE  103C 000E               1996              MOVE.B      #14, D0             ; command for trap call to display message
000023E2  4E4F                    1997              TRAP        #15                 ; trap call
000023E4                          1998              
000023E4  4241                    1999              CLR         D1
000023E6  3218                    2000              MOVE.W      (A0)+, D1
000023E8                          2001              
000023E8  103C 0003               2002              MOVE.B      #3, D0
000023EC  4E4F                    2003              TRAP        #15
000023EE                          2004              
000023EE  43F9 0000246F           2005              LEA         clPer, A1           ; Display space
000023F4  103C 000E               2006              MOVE.B      #14, D0             ; command for trap call to display message
000023F8  4E4F                    2007              TRAP        #15                 ; trap call
000023FA                          2008              
000023FA  6000 005A               2009              BRA         endSub
000023FE                          2010              
000023FE  43F9 0000246D           2011  AbsLong     LEA         opPer, A1           ; Display space
00002404  103C 000E               2012              MOVE.B      #14, D0             ; command for trap call to display message
00002408  4E4F                    2013              TRAP        #15                 ; trap call
0000240A                          2014              
0000240A  43F9 00002469           2015              LEA         dispHex, A1         ; Display space
00002410  103C 000E               2016              MOVE.B      #14, D0             ; command for trap call to display message
00002414  4E4F                    2017              TRAP        #15                 ; trap call
00002416                          2018              
00002416  4241                    2019              CLR         D1
00002418  2218                    2020              MOVE.L      (A0)+, D1
0000241A                          2021              
0000241A  103C 0003               2022              MOVE.B      #3, D0
0000241E  4E4F                    2023              TRAP        #15
00002420                          2024              
00002420  43F9 0000246F           2025              LEA         clPer, A1           ; Display space
00002426  103C 000E               2026              MOVE.B      #14, D0             ; command for trap call to display message
0000242A  4E4F                    2027              TRAP        #15                 ; trap call
0000242C                          2028              
0000242C  6000 0028               2029              BRA         endSub
00002430                          2030  
00002430  43F9 00002467           2031  DispImm     LEA         hashTag, A1         ; Display space
00002436  103C 000E               2032              MOVE.B      #14, D0             ; command for trap call to display message
0000243A  4E4F                    2033              TRAP        #15                 ; trap call
0000243C                          2034              
0000243C  4241                    2035              CLR         D1
0000243E  3218                    2036              MOVE.W      (A0)+, D1
00002440                          2037  
00002440  43F9 00002469           2038              LEA         dispHex, A1         ; Display space
00002446  103C 000E               2039              MOVE.B      #14, D0             ; command for trap call to display message
0000244A  4E4F                    2040              TRAP        #15                 ; trap call
0000244C                          2041              
0000244C  103C 0003               2042              MOVE.B      #3, D0
00002450  4E4F                    2043              TRAP        #15
00002452                          2044  
00002452  6000 0002               2045              BRA         endSub
00002456                          2046  
00002456                          2047  invalid
00002456                          2048  
00002456                          2049  endSUB
00002456                          2050          
00002456  4CDF 7EFF               2051          MOVEM.L  (SP)+, D0-D7/A1-A6
0000245A  4E75                    2052          RTS
0000245C                          2053  
0000245C                          2054  ***********************************************************************************************************
0000245C                          2055  ***********************************************************************************************************
0000245C                          2056  ***********************************************************************************************************
0000245C                          2057  
0000245C                          2058  printInvalid
0000245C                          2059  endPROG    
0000245C                          2060  
0000245C  FFFF FFFF               2061      SIMHALT                             ; halt simulator
00002460                          2062  
00002460= 20 0D 0A 00             2063  newLine     DC.B    ' ', CR, LF, 0
00002464= 20 20 00                2064  space       DC.B    '  ', 0
00002467                          2065  
00002467= 23 00                   2066  hashTag     DC.B    '#', 0
00002469= 24 00                   2067  dispHex     DC.B    '$', 0
0000246B= 2C 00                   2068  comma       DC.B    ',', 0
0000246D                          2069  
0000246D= 28 00                   2070  opPer       DC.B    '(', 0
0000246F= 29 00                   2071  clPer       DC.B    ')', 0
00002471= 2D 00                   2072  dec         DC.B    '-', 0
00002473= 2B 00                   2073  inc         DC.B    '+', 0
00002475                          2074  
00002475= 4F 52 49 00             2075  ORImatch    DC.B    'ORI', 0
00002479= 43 4D 50 49 00          2076  CMPImatch   DC.B    'CMPI', 0
0000247E= 42 43 4C 52 00          2077  BCLRmatch   DC.B    'BCLR', 0
00002483= 4D 4F 56 45 00          2078  MOVEmatch   DC.B    'MOVE', 0
00002488= 4D 4F 56 45 41 00       2079  MOVEAmatch  DC.B    'MOVEA', 0
0000248E= 4E 45 47 00             2080  NEGmatch    DC.B    'NEG', 0
00002492= 52 54 53 00             2081  RTSmatch    DC.B    'RTS', 0
00002496= 4A 53 52 00             2082  JSRmatch    DC.B    'JSR', 0
0000249A= 4D 4F 56 45 4D 00       2083  MOVEMmatch  DC.B    'MOVEM', 0
000024A0= 4C 45 41 00             2084  LEAmatch    DC.B    'LEA', 0
000024A4= 53 55 42 51 00          2085  SUBQmatch   DC.B    'SUBQ', 0
000024A9= 42 52 41 00             2086  BRAmatch    DC.B    'BRA', 0
000024AD= 42 43 53 00             2087  BCSmatch    DC.B    'BCS', 0
000024B1= 42 56 43 00             2088  BVCmatch    DC.B    'BVC', 0
000024B5= 42 47 45 00             2089  BGEmatch    DC.B    'BGE', 0
000024B9= 42 4C 54 00             2090  BLTmatch    DC.B    'BLT', 0
000024BD= 44 49 56 53 00          2091  DIVSmatch   DC.B    'DIVS', 0
000024C2= 4F 52 00                2092  ORmatch     DC.B    'OR', 0
000024C5= 53 55 42 00             2093  SUBmatch    DC.B    'SUB', 0
000024C9= 45 4F 52 00             2094  EORmatch    DC.B    'EOR', 0
000024CD= 43 4D 50 00             2095  CMPmatch    DC.B    'CMP', 0
000024D1= 4D 55 4C 53 00          2096  MULSmatch   DC.B    'MULS', 0
000024D6= 41 44 44 00             2097  ADDmatch    DC.B    'ADD', 0
000024DA= 41 44 44 41 00          2098  ADDAmatch   DC.B    'ADDA', 0
000024DF= 4C 53 52 00             2099  LSRmatch    DC.B    'LSR', 0
000024E3= 4C 53 4C 00             2100  LSLmatch    DC.B    'LSL', 0
000024E7= 41 53 52 00             2101  ASRmatch    DC.B    'ASR', 0
000024EB= 41 53 4C 00             2102  ASLmatch    DC.B    'ASL', 0
000024EF= 52 4F 52 00             2103  RORmatch    DC.B    'ROR', 0
000024F3= 52 4F 4C 00             2104  ROLmatch    DC.B    'ROL', 0
000024F7                          2105   
000024F7= 2E 42 00                2106  dispByte    DC.B    '.B', 0
000024FA= 2E 57 00                2107  dispWord    DC.B    '.W', 0
000024FD= 2E 4C 00                2108  dispLong    DC.B    '.L', 0
00002500                          2109  
00002500= 41 30 00                2110  dispA0      DC.B    'A0', 0
00002503= 41 31 00                2111  dispA1      DC.B    'A1', 0
00002506= 41 32 00                2112  dispA2      DC.B    'A2', 0
00002509= 41 33 00                2113  dispA3      DC.B    'A3', 0
0000250C= 41 34 00                2114  dispA4      DC.B    'A4', 0
0000250F= 41 35 00                2115  dispA5      DC.B    'A5', 0
00002512= 41 36 00                2116  dispA6      DC.B    'A6', 0
00002515= 41 37 00                2117  dispA7      DC.B    'A7', 0
00002518                          2118  
00002518= 44 00                   2119  dispD       DC.B    'D',0
0000251A= 44 30 00                2120  dispD0      DC.B    'D0', 0
0000251D= 44 31 00                2121  dispD1      DC.B    'D1', 0
00002520= 44 32 00                2122  dispD2      DC.B    'D2', 0
00002523= 44 33 00                2123  dispD3      DC.B    'D3', 0
00002526= 44 34 00                2124  dispD4      DC.B    'D4', 0
00002529= 44 35 00                2125  dispD5      DC.B    'D5', 0
0000252C= 44 36 00                2126  dispD6      DC.B    'D6', 0
0000252F= 44 37 00                2127  dispD7      DC.B    'D7', 0  
00002532                          2128             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             23FE
ABSSHORT            23CC
ADDAMATCH           24DA
ADDMATCH            24D6
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            24EB
ASRMATCH            24E7
BCLRMATCH           247E
BCSMATCH            24AD
BGEMATCH            24B5
BLTMATCH            24B9
BRAEIGHT            110E
BRAELEVEN           112C
BRAFIVE             10DE
BRAFOUR             10C2
BRAFOURTEEN         114A
BRAMATCH            24A9
BRANINE             1128
BRAONE              10B6
BRASIX              10E2
BRATHIRTEEN         114A
BRATHREE            10BE
BRATWELVE           1146
BRATWO              10BA
BRAZERO             1086
BVCMATCH            24B1
CLPER               246F
CMPIMATCH           2479
CMPMATCH            24CD
COMMA               246B
CR                  D
DEC                 2471
DISPA0              2500
DISPA1              2503
DISPA2              2506
DISPA3              2509
DISPA4              250C
DISPA5              250F
DISPA6              2512
DISPA7              2515
DISPBYTE            24F7
DISPD               2518
DISPD0              251A
DISPD1              251D
DISPD2              2520
DISPD3              2523
DISPD4              2526
DISPD5              2529
DISPD6              252C
DISPD7              252F
DISPHEX             2469
DISPIMM             2430
DISPLAYA0           1F44
DISPLAYA0A          2010
DISPLAYA0D          22D4
DISPLAYA0P          213C
DISPLAYA1           1F54
DISPLAYA1A          202C
DISPLAYA1D          22F0
DISPLAYA1P          2164
DISPLAYA2           1F64
DISPLAYA2A          2048
DISPLAYA2D          230C
DISPLAYA2P          218C
DISPLAYA3           1F74
DISPLAYA3A          2064
DISPLAYA3D          2328
DISPLAYA3P          21B4
DISPLAYA4           1F84
DISPLAYA4A          2080
DISPLAYA4D          2344
DISPLAYA4P          21DC
DISPLAYA5           1F94
DISPLAYA5A          209C
DISPLAYA5D          2360
DISPLAYA5P          2204
DISPLAYA6           1FA4
DISPLAYA6A          20B8
DISPLAYA6D          237C
DISPLAYA6P          222C
DISPLAYA7           1FB4
DISPLAYA7A          20D4
DISPLAYA7D          2398
DISPLAYA7P          2254
DISPLAYD0           1E84
DISPLAYD1           1E94
DISPLAYD2           1EA4
DISPLAYD3           1EB4
DISPLAYD4           1EC4
DISPLAYD5           1ED4
DISPLAYD6           1EE4
DISPLAYD7           1EF4
DISPLONG            24FD
DISPWORD            24FA
DIVSMATCH           24BD
EIGHT               8
ELEVEN              B
ENDPROG             245C
ENDSUB              2456
EORMATCH            24C9
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             2467
INC                 2473
INVALID             2456
JSRMATCH            2496
LEAMATCH            24A0
LF                  A
LOOP                100C
LSLMATCH            24E3
LSRMATCH            24DF
MOVEAMATCH          2488
MOVEMATCH           2483
MOVEMMATCH          249A
MULSMATCH           24D1
NEGMATCH            248E
NEWLINE             2460
NINE                9
ONE                 1
OPASL               1DC4
OPASR               1DD0
OPBCC               117E
OPBCLR              182E
OPBCS               1D54
OPBGE               1D6C
OPBLT               1D78
OPBRA               1D1C
OPBVC               1D60
OPCMP               1428
OPCMPB              145A
OPCMPI              16BC
OPCMPIB             1708
OPCMPIL             17CC
OPCMPIW             176A
OPCMPL              150E
OPCMPW              14B4
OPDIVS              12D6
OPDYNBCLR           1892
OPEOR               12E6
OPEORB              1318
OPEORL              13CE
OPEORW              1372
OPJSR               1C80
OPLEA               1D10
OPLSL               1DDC
OPLSR               1DE8
OPMOVEAL            1A14
OPMOVEAW            1B0E
OPMOVEB             1900
OPMOVEL             1984
OPMOVEM             1CF8
OPMOVEMLEA          1CDC
OPMOVEW             1A7E
OPMULS              1DB8
OPNEG               1B78
OPNEGB              1BA6
OPNEGL              1BE6
OPNEGW              1C26
OPOR                1184
OPORB               11C8
OPORI               1568
OPORIB              1596
OPORIL              165A
OPORIW              15F8
OPORL               127C
OPORW               1222
OPPER               246D
OPROL               1DF4
OPROR               1E00
OPRTS               1CC0
OPRTSJSR            1C66
OPSUB               1D84
OPSUBQ              1D10
ORIMATCH            2475
ORMATCH             24C2
PADDRDEC            227C
PADDRDIR            1FC4
PADDRPOST           20F0
PADDRREG            1F04
PDATAREG            1E44
PHEX                23B4
PRINTEA             1E0C
PRINTINVALID        245C
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
ROLMATCH            24F3
RORMATCH            24EF
RTSMATCH            2492
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               2464
START               1000
SUBMATCH            24C5
SUBQMATCH           24A4
TEST_END            3009
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
