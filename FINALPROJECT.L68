00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 2014-11-26 16:20:18

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00002000                 10  test_start  EQU     $00002000   ; defined starting address
00000000  =00002005                 11  test_end    EQU     $00002005   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00002000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00002005             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 093C                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 0088                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0084                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 007C                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0074                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 0088                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0084                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00A8                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00A0                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 009C                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 0094                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 0090                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 0088                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C438 000F                102          AND.B       $0F, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 00AA                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 0194                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0001                108          CMP.B       #one,D2             ; Test for static BCLR
000010A2  6700 01F4                109          BEQ         opStatBCLR          ; branch to BCLR
000010A6  B43C 0008                110          CMP.B       #eight,D2           ; Test for static BCLR
000010AA  6700 01BC                111          BEQ         opBCLR
000010AE  6000 08A0                112          BRA         printInvalid
000010B2                           113          
000010B2                           114          
000010B2  6000 0212                115  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010B6                           116  
000010B6                           117  braTwo  ; there are two opCodes available, MOVE.L, or MOVEA.L
000010B6                           118  
000010B6                           119  braThree ; there are two opCodes available, MOVE.W, or MOVEA.W
000010B6                           120  
000010B6  4242                     121  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010B8  1401                     122          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010BA  C438 000F                123          AND.B       $0F, D2             ; set first nibble to 0
000010BE                           124   
000010BE  B43C 0004                125          CMP.B       #four, D2           ; compare second nibble to 4
000010C2  6700 0226                126          BEQ         opNEG               ; branch to NEG method
000010C6  B43C 000E                127          CMP.B       #fourteen, D2       ; compare second nibble to E
000010CA  6700 022A                128          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010CE  6000 0226                129          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010D2                           130  
000010D2  6000 0222                131  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010D6                           132  
000010D6  4242                     133  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010D8  1401                     134          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010DA  C438 000F                135          AND.B       $0F, D2             ; set first nibble to 0
000010DE                           136   
000010DE  B43C 0000                137          CMP.B       #zero, D2           ; compare second nibble to 0
000010E2  6700 021E                138          BEQ         opBRA               ; branch to BRA method
000010E6  B43C 0005                139          CMP.B       #five, D2           ; compare second nibble to 5
000010EA  6700 022E                140          BEQ         opBCS               ; branch to BCS method
000010EE  B43C 0008                141          CMP.B       #eight, D2          ; compare second nibble to 8
000010F2  6700 0232                142          BEQ         opBVC               ; branch to BCS method
000010F6  B43C 000C                143          CMP.B       #twelve, D2         ; compare second nibble to 12
000010FA  6700 0236                144          BEQ         opBGE               ; branch to BGE method
000010FE  6000 023E                145          BRA         opBLT               ; otherwise, branch to BLT method
00001102                           146  
00001102                           147  braEight    ; there are two opCodes available DIVS, or OR
00001102                           148  
00001102  6000 0246                149  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
00001106                           150  
00001106                           151  braEleven   ; there are two opCodes available EOR, or CMP
00001106                           152  
00001106  6000 024E                153  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
0000110A                           154    
0000110A                           155  braThirteen ; there are two opCodes available ADD, or ADDA
0000110A                           156  
0000110A  4242                     157  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
0000110C  1401                     158              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000110E  C438 000F                159              AND.B       $0F, D2             ; set first nibble to 0
00001112                           160   
00001112  B43C 0000                161              CMP.B       #zero, D2           ; compare second nibble to 0
00001116  6700 0256                162              BEQ         opASR               ; branch to ASR method
0000111A  B43C 0001                163              CMP.B       #one, D2            ; compare second nibble to 1
0000111E  6700 0242                164              BEQ         opASL               ; branch to ASL method
00001122  B43C 0002                165              CMP.B       #two, D2            ; compare second nibble to 2
00001126  6700 025E                166              BEQ         opLSR               ; branch to LSR method
0000112A  B43C 0003                167              CMP.B       #three, D2          ; compare second nibble to 3
0000112E  6700 024A                168              BEQ         opLSL               ; branch to LSL method
00001132  B43C 0006                169              CMP.B       #six, D2            ; compare second nibble to 6
00001136  6700 0266                170              BEQ         opROR               ; branch to ROR method
0000113A  6000 0256                171              BRA         opROL               ; otherwise, branch to ROL method
0000113E                           172  
0000113E  43F9 00001969            173  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
00001144  103C 000E                174          MOVE.B      #14, D0             ; command for trap call to display message
00001148  4E4F                     175          TRAP        #15                 ; trap call
0000114A                           176          
0000114A  1218                     177          MOVE.B      (A0)+, D1
0000114C  1401                     178          MOVE.B      D1,D2               ; copy data over
0000114E  EC42                     179          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001150  B43C 0000                180          CMP.B       #zero,D2
00001154  6700 0016                181          BEQ         opORIB
00001158  B43C 0001                182          CMP.B       #one,D2
0000115C  6700 0070                183          BEQ         opORIW
00001160  B43C 0002                184          CMP.B       #two,D2
00001164  6700 00CA                185          BEQ         opORIL
00001168                           186          
00001168  6000 07E6                187          BRA         printInvalid
0000116C                           188          
0000116C  43F9 000019EB            189  opORIB  LEA         dispByte, A1        ; Display byte
00001172  103C 000E                190          MOVE.B      #14, D0             ; command for trap call to display message
00001176  4E4F                     191          TRAP        #15                 ; trap call
00001178                           192          
00001178  43F9 00001958            193          LEA         space, A1           ; Display space
0000117E  103C 000E                194          MOVE.B      #14, D0             ; command for trap call to display message
00001182  4E4F                     195          TRAP        #15                 ; trap call
00001184                           196          
00001184  4242                     197          CLR         D2
00001186  1401                     198          MOVE.B      D1,D2
00001188  E642                     199          ASR         #three,D2
0000118A  C47C 0007                200          AND         #seven,D2
0000118E  4243                     201          CLR         D3        
00001190  1601                     202          MOVE.B      D1,D3
00001192  C67C 0007                203          AND         #seven,D3
00001196                           204          
00001196  4241                     205          CLR         D1
00001198  3218                     206          MOVE.W      (A0)+, D1
0000119A                           207          
0000119A  43F9 0000195B            208          LEA         hashTag, A1           ; Display space
000011A0  103C 000E                209          MOVE.B      #14, D0             ; command for trap call to display message
000011A4  4E4F                     210          TRAP        #15                 ; trap call
000011A6                           211          
000011A6  103C 0003                212          MOVE.B      #3, D0
000011AA  4E4F                     213          TRAP        #15
000011AC                           214          
000011AC  43F9 0000195F            215          LEA         comma, A1           ; Display space
000011B2  103C 000E                216          MOVE.B      #14, D0             ; command for trap call to display message
000011B6  4E4F                     217          TRAP        #15                 ; trap call
000011B8                           218          
000011B8  4EB9 000013AA            219          JSR         printEA
000011BE                           220          
000011BE  43F9 00001954            221          LEA         newLine, A1           ; Display space
000011C4  103C 000E                222          MOVE.B      #14, D0             ; command for trap call to display message
000011C8  4E4F                     223          TRAP        #15                 ; trap call
000011CA                           224          
000011CA  6000 FE40                225          BRA         LOOP
000011CE                           226          
000011CE                           227          
000011CE  43F9 000019EB            228  opORIW  LEA         dispByte, A1        ; Display byte
000011D4  103C 000E                229          MOVE.B      #14, D0             ; command for trap call to display message
000011D8  4E4F                     230          TRAP        #15                 ; trap call
000011DA                           231          
000011DA  43F9 00001958            232          LEA         space, A1           ; Display space
000011E0  103C 000E                233          MOVE.B      #14, D0             ; command for trap call to display message
000011E4  4E4F                     234          TRAP        #15                 ; trap call
000011E6                           235          
000011E6  4242                     236          CLR         D2
000011E8  1401                     237          MOVE.B      D1,D2
000011EA  E642                     238          ASR         #three,D2
000011EC  C47C 0007                239          AND         #seven,D2
000011F0  4243                     240          CLR         D3        
000011F2  1601                     241          MOVE.B      D1,D3
000011F4  C67C 0007                242          AND         #seven,D3
000011F8                           243          
000011F8  4241                     244          CLR         D1
000011FA  3218                     245          MOVE.W      (A0)+, D1
000011FC                           246          
000011FC  43F9 0000195B            247          LEA         hashTag, A1           ; Display space
00001202  103C 000E                248          MOVE.B      #14, D0             ; command for trap call to display message
00001206  4E4F                     249          TRAP        #15                 ; trap call
00001208                           250          
00001208  103C 0003                251          MOVE.B      #3, D0
0000120C  4E4F                     252          TRAP        #15
0000120E                           253          
0000120E  43F9 0000195F            254          LEA         comma, A1           ; Display space
00001214  103C 000E                255          MOVE.B      #14, D0             ; command for trap call to display message
00001218  4E4F                     256          TRAP        #15                 ; trap call
0000121A                           257          
0000121A  4EB9 000013AA            258          JSR         printEA
00001220                           259          
00001220  43F9 00001954            260          LEA         newLine, A1           ; Display space
00001226  103C 000E                261          MOVE.B      #14, D0             ; command for trap call to display message
0000122A  4E4F                     262          TRAP        #15                 ; trap call
0000122C                           263          
0000122C  6000 FDDE                264          BRA         LOOP
00001230                           265       
00001230                           266  opORIL  
00001230                           267           
00001230  43F9 0000196D            268  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001236  103C 000E                269          MOVE.B      #14, D0             ; command for trap call to display message
0000123A  4E4F                     270          TRAP        #15                 ; trap call
0000123C                           271                  
0000123C  1218                     272          MOVE.B      (A0)+, D1
0000123E  1401                     273          MOVE.B      D1,D2               ; copy data over
00001240  EC42                     274          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001242  3602                     275          MOVE        D2,D3               ; store size into D3
00001244  4242                     276          CLR         D2
00001246                           277          
00001246  1401                     278          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
00001248  E542                     279          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
0000124A  1802                     280          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
0000124C  4242                     281          CLR         D2                  ; Clear out data register
0000124E  1404                     282          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
00001250  EA42                     283          ASR         #five,D2            ; Shift the register out to get just the mode
00001252  1802                     284          MOVE.B      D2,D4               ; Store mode into D4
00001254  4242                     285          CLR         D2
00001256                           286          
00001256  1401                     287          MOVE.B      D1,D2               ; Getting the EA register
00001258  EB42                     288          ASL         #five,D2
0000125A  1A02                     289          MOVE.B      D2,D5               ; Move just the register into D5
0000125C  4242                     290          CLR         D2                  ; Clearing D2 to put data back
0000125E  1405                     291          MOVE.B      D5,D2               ; Putting back the register
00001260  EA42                     292          ASR         #five,D2            ; Shifting bits in order to read the register
00001262  1A02                     293          MOVE.B      D2,D5               ; Store register into D5
00001264                           294          
00001264  6000 FDA6                295          BRA         LOOP                ; go back to the loop
00001268                           296  
00001268                           297  
00001268                           298  
00001268  43F9 00001972            299  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000126E  103C 000E                300                  MOVE.B      #14, D0             ; command for trap call to display message
00001272  4E4F                     301                  TRAP        #15                 ; trap call
00001274                           302                  
00001274  E242                     303                  ASR         #one,D2             ; Shift to the right to remove the 1
00001276  1602                     304                  MOVE.B      D2,D3               ; Store register into D3
00001278                           305                  
00001278  4242                     306                  CLR         D2
0000127A  1218                     307                  MOVE.B      (A0)+,D1
0000127C  1401                     308                  MOVE.B      D1,D2
0000127E  E442                     309                  ASR         #two,D2             ; Shift two bits over in order to put mode into the first nibble
00001280  C47C 000F                310                  AND         #secNib,D2          ; Clear first nibble
00001284  E242                     311                  ASR         #one,D2             ; shift to remove register and have just the mode
00001286  1802                     312                  MOVE.B      D2,D4               ; Move mode into D4
00001288  4242                     313                  CLR         D2
0000128A                           314                  
0000128A  1401                     315                  MOVE.B      D1,D2               ; Move data back into D2 to retrieve the register
0000128C  E342                     316                  ASL         #one,D2             ; shift one to the left to move node to other nibble
0000128E  C47C 000F                317                  AND         #secNib,D2          ; Clear other nibble
00001292  E242                     318                  ASR         #one,D2             ; Move register back 
00001294  1A02                     319                  MOVE.B      D2,D5               ; Store EA register
00001296                           320                  
00001296                           321  
00001296  4242                     322                  CLR         D2                
00001298                           323          
00001298  43F9 00001972            324  opStatBCLR      LEA         BCLRmatch, A1       ; we know that the opcode will be BCLR, so load A1 to print message
0000129E  103C 000E                325                  MOVE.B      #14, D0             ; command for trap call to display message
000012A2  4E4F                     326                  TRAP        #15                 ; trap call
000012A4                           327                  
000012A4  4242                     328                  CLR         D2
000012A6  1218                     329                  MOVE.B      (A0)+,D1
000012A8  1401                     330                  MOVE.B      D1,D2
000012AA  E442                     331                  ASR         #two,D2             ; Shift two bits over in order to put mode into the first nibble
000012AC  C47C 000F                332                  AND         #secNib,D2          ; Clear first nibble
000012B0  E242                     333                  ASR         #one,D2             ; shift to remove register and have just the mode
000012B2  1602                     334                  MOVE.B      D2,D3               ; Move mode into D3
000012B4  4242                     335                  CLR         D2
000012B6                           336                  
000012B6  1401                     337                  MOVE.B      D1,D2               ; Move data back into D2 to retrieve the register
000012B8  E342                     338                  ASL         #one,D2             ; shift one to the left to move node to other nibble
000012BA  C47C 000F                339                  AND         #secNib,D2          ; Clear other nibble
000012BE  E242                     340                  ASR         #one,D2             ; Move register back 
000012C0  1802                     341                  MOVE.B      D2,D4               ; Store register
000012C2                           342  
000012C2  6000 FD48                343                  BRA         LOOP                ; go back to the loop
000012C6                           344   
000012C6  43F9 00001977            345  opMOVEB LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
000012CC  103C 000E                346          MOVE.B      #14, D0             ; command for trap call to display message
000012D0  4E4F                     347          TRAP        #15                 ; trap call
000012D2  43F9 000019EB            348          LEA         dispByte, A1        ; display byte
000012D8  103C 000E                349          MOVE.B      #14, D0             ; command for trap call to display message
000012DC  4E4F                     350          TRAP        #15                 ; trap call
000012DE  43F9 00001958            351          LEA         space, A1           ; create spaces
000012E4  103C 000E                352          MOVE.B      #14, D0             ; command for trap call to display message
000012E8  4E4F                     353          TRAP        #15                 ; trap call
000012EA                           354  
000012EA  43F9 00001982            355  opNEG   LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
000012F0  103C 000E                356          MOVE.B      #14, D0             ; command for trap call to display message
000012F4  4E4F                     357          TRAP        #15                 ; trap call
000012F6                           358  
000012F6                           359  opRTSJSR
000012F6                           360  
000012F6                           361  opMOVEMLEA
000012F6                           362  
000012F6  43F9 00001998            363  opSUBQ  LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
000012FC  103C 000E                364          MOVE.B      #14, D0             ; command for trap call to display message
00001300  4E4F                     365          TRAP        #15                 ; trap call
00001302                           366  
00001302  43F9 0000199D            367  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001308  103C 000E                368          MOVE.B      #14, D0             ; command for trap call to display message
0000130C  4E4F                     369          TRAP        #15                 ; trap call
0000130E  43F9 00001958            370          LEA         space, A1           ; create spaces
00001314  103C 000E                371          MOVE.B      #14, D0             ; command for trap call to display message
00001318  4E4F                     372          TRAP        #15                 ; trap call
0000131A                           373  
0000131A  43F9 000019A1            374  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001320  103C 000E                375          MOVE.B      #14, D0             ; command for trap call to display message
00001324  4E4F                     376          TRAP        #15                 ; trap call
00001326                           377  
00001326  43F9 000019A5            378  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
0000132C  103C 000E                379          MOVE.B      #14, D0             ; command for trap call to display message
00001330  4E4F                     380          TRAP        #15                 ; trap call
00001332                           381  
00001332  43F9 000019A9            382  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001338  103C 000E                383          MOVE.B      #14, D0             ; command for trap call to display message
0000133C  4E4F                     384          TRAP        #15                 ; trap call
0000133E                           385  
0000133E  43F9 000019AD            386  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001344  103C 000E                387          MOVE.B      #14, D0             ; command for trap call to display message
00001348  4E4F                     388          TRAP        #15                 ; trap call
0000134A                           389  
0000134A  43F9 000019B9            390  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001350  103C 000E                391          MOVE.B      #14, D0             ; command for trap call to display message
00001354  4E4F                     392          TRAP        #15                 ; trap call
00001356                           393  
00001356  43F9 000019C5            394  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
0000135C  103C 000E                395          MOVE.B      #14, D0             ; command for trap call to display message
00001360  4E4F                     396          TRAP        #15                 ; trap call
00001362                           397  
00001362  43F9 000019DF            398  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001368  103C 000E                399          MOVE.B      #14, D0             ; command for trap call to display message
0000136C  4E4F                     400          TRAP        #15                 ; trap call
0000136E                           401  
0000136E  43F9 000019DB            402  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001374  103C 000E                403          MOVE.B      #14, D0             ; command for trap call to display message
00001378  4E4F                     404          TRAP        #15                 ; trap call
0000137A                           405  
0000137A  43F9 000019D7            406  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00001380  103C 000E                407          MOVE.B      #14, D0             ; command for trap call to display message
00001384  4E4F                     408          TRAP        #15                 ; trap call
00001386                           409  
00001386  43F9 000019D3            410  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
0000138C  103C 000E                411          MOVE.B      #14, D0             ; command for trap call to display message
00001390  4E4F                     412          TRAP        #15                 ; trap call
00001392                           413  
00001392  43F9 000019E7            414  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001398  103C 000E                415          MOVE.B      #14, D0             ; command for trap call to display message
0000139C  4E4F                     416          TRAP        #15                 ; trap call
0000139E                           417  
0000139E  43F9 000019E3            418  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
000013A4  103C 000E                419          MOVE.B      #14, D0             ; command for trap call to display message
000013A8  4E4F                     420          TRAP        #15                 ; trap call
000013AA                           421  
000013AA                           422  
000013AA                           423  ***********************************************************************************************************
000013AA                           424  *
000013AA                           425  *                                           EA Print Check
000013AA                           426  *
000013AA                           427  ***********************************************************************************************************
000013AA  48E7 FFFE                428  printEA     MOVEM.L  D0-D7/A0-A6, -(SP)
000013AE                           429  
000013AE  B43C 0000                430              CMP.B       #zero, D2
000013B2  6700 0026                431              BEQ         pDataReg
000013B6  B43C 0001                432              CMP.B       #one, D2
000013BA  6700 00DE                433              BEQ         pAddrReg
000013BE  B43C 0002                434              CMP.B       #two, D2
000013C2  6700 0196                435              BEQ         pAddrDir
000013C6  B43C 0003                436              CMP.B       #three, D2
000013CA  6700 02BA                437              BEQ         pAddrPost
000013CE  B43C 0004                438              CMP.B       #four, D2
000013D2  6700 043E                439              BEQ         pAddrDec
000013D6  6000 0572                440              BRA         invalid
000013DA                           441  
000013DA                           442  ***********************************************************************************************************
000013DA                           443  * Data Register        
000013DA  B63C 0000                444  pDataReg    CMP.B   #zero,D3
000013DE  6700 003A                445              BEQ     displayD0
000013E2  B63C 0001                446              CMP.B   #one,D3
000013E6  6700 0042                447              BEQ     displayD1
000013EA  B63C 0002                448              CMP.B   #two,D3
000013EE  6700 004A                449              BEQ     displayD2
000013F2  B63C 0003                450              CMP.B   #three,D3
000013F6  6700 0052                451              BEQ     displayD3
000013FA  B63C 0004                452              CMP.B   #four,D3
000013FE  6700 005A                453              BEQ     displayD4
00001402  B63C 0005                454              CMP.B   #five,D3
00001406  6700 0062                455              BEQ     displayD5
0000140A  B63C 0006                456              CMP.B   #six,D3
0000140E  6700 006A                457              BEQ     displayD6
00001412  B63C 0007                458              CMP.B   #seven,D3
00001416  6700 0072                459              BEQ     displayD7
0000141A                           460              
0000141A  43F9 00001A0C            461  displayD0   LEA         dispD0, A1          ; Display space
00001420  103C 000E                462              MOVE.B      #14, D0             ; command for trap call to display message
00001424  4E4F                     463              TRAP        #15                 ; trap call
00001426  6000 0522                464              BRA         endSUB              ; go to the end of the subroutine
0000142A                           465              
0000142A  43F9 00001A0F            466  displayD1   LEA         dispD1, A1          ; Display space
00001430  103C 000E                467              MOVE.B      #14, D0             ; command for trap call to display message
00001434  4E4F                     468              TRAP        #15                 ; trap call
00001436  6000 0512                469              BRA         endSUB              ; go to the end of the subroutine
0000143A                           470  
0000143A  43F9 00001A12            471  displayD2   LEA         dispD2, A1          ; Display space
00001440  103C 000E                472              MOVE.B      #14, D0             ; command for trap call to display message
00001444  4E4F                     473              TRAP        #15                 ; trap call
00001446  6000 0502                474              BRA         endSUB              ; go to the end of the subroutine
0000144A                           475  
0000144A  43F9 00001A15            476  displayD3   LEA         dispD3, A1          ; Display space
00001450  103C 000E                477              MOVE.B      #14, D0             ; command for trap call to display message
00001454  4E4F                     478              TRAP        #15                 ; trap call
00001456  6000 04F2                479              BRA         endSUB              ; go to the end of the subroutine
0000145A                           480  
0000145A  43F9 00001A18            481  displayD4   LEA         dispD4, A1          ; Display space
00001460  103C 000E                482              MOVE.B      #14, D0             ; command for trap call to display message
00001464  4E4F                     483              TRAP        #15                 ; trap call
00001466  6000 04E2                484              BRA         endSUB              ; go to the end of the subroutine
0000146A                           485  
0000146A  43F9 00001A1B            486  displayD5   LEA         dispD5, A1          ; Display space
00001470  103C 000E                487              MOVE.B      #14, D0             ; command for trap call to display message
00001474  4E4F                     488              TRAP        #15                 ; trap call
00001476  6000 04D2                489              BRA         endSUB              ; go to the end of the subroutine
0000147A                           490  
0000147A  43F9 00001A1E            491  displayD6   LEA         dispD6, A1          ; Display space
00001480  103C 000E                492              MOVE.B      #14, D0             ; command for trap call to display message
00001484  4E4F                     493              TRAP        #15                 ; trap call
00001486  6000 04C2                494              BRA         endSUB              ; go to the end of the subroutine
0000148A                           495  
0000148A  43F9 00001A21            496  displayD7   LEA         dispD7, A1          ; Display space
00001490  103C 000E                497              MOVE.B      #14, D0             ; command for trap call to display message
00001494  4E4F                     498              TRAP        #15                 ; trap call
00001496  6000 04B2                499              BRA         endSUB              ; go to the end of the subroutine
0000149A                           500  ***********************************************************************************************************
0000149A                           501  * Address Register
0000149A  B63C 0000                502  pAddrReg    CMP.B   #zero,D3
0000149E  6700 003A                503              BEQ     displayA0
000014A2  B63C 0001                504              CMP.B   #one,D3
000014A6  6700 0042                505              BEQ     displayA1
000014AA  B63C 0002                506              CMP.B   #two,D3
000014AE  6700 004A                507              BEQ     displayA2
000014B2  B63C 0003                508              CMP.B   #three,D3
000014B6  6700 0052                509              BEQ     displayA3
000014BA  B63C 0004                510              CMP.B   #four,D3
000014BE  6700 005A                511              BEQ     displayA4
000014C2  B63C 0005                512              CMP.B   #five,D3
000014C6  6700 0062                513              BEQ     displayA5
000014CA  B63C 0006                514              CMP.B   #six,D3
000014CE  6700 006A                515              BEQ     displayA6
000014D2  B63C 0007                516              CMP.B   #seven,D3
000014D6  6700 0072                517              BEQ     displayA7
000014DA                           518              
000014DA  43F9 000019F4            519  displayA0   LEA         dispA0, A1          ; Display space
000014E0  103C 000E                520              MOVE.B      #14, D0             ; command for trap call to display message
000014E4  4E4F                     521              TRAP        #15                 ; trap call
000014E6  6000 0462                522              BRA         endSUB              ; go to the end of the subroutine
000014EA                           523              
000014EA  43F9 000019F7            524  displayA1   LEA         dispA1, A1          ; Display space
000014F0  103C 000E                525              MOVE.B      #14, D0             ; command for trap call to display message
000014F4  4E4F                     526              TRAP        #15                 ; trap call
000014F6  6000 0452                527              BRA         endSUB              ; go to the end of the subroutine
000014FA                           528  
000014FA  43F9 000019FA            529  displayA2   LEA         dispA2, A1          ; Display space
00001500  103C 000E                530              MOVE.B      #14, D0             ; command for trap call to display message
00001504  4E4F                     531              TRAP        #15                 ; trap call
00001506  6000 0442                532              BRA         endSUB              ; go to the end of the subroutine
0000150A                           533  
0000150A  43F9 000019FD            534  displayA3   LEA         dispA3, A1          ; Display space
00001510  103C 000E                535              MOVE.B      #14, D0             ; command for trap call to display message
00001514  4E4F                     536              TRAP        #15                 ; trap call
00001516  6000 0432                537              BRA         endSUB              ; go to the end of the subroutine
0000151A                           538  
0000151A  43F9 00001A00            539  displayA4   LEA         dispA4, A1          ; Display space
00001520  103C 000E                540              MOVE.B      #14, D0             ; command for trap call to display message
00001524  4E4F                     541              TRAP        #15                 ; trap call
00001526  6000 0422                542              BRA         endSUB              ; go to the end of the subroutine
0000152A                           543  
0000152A  43F9 00001A03            544  displayA5   LEA         dispA5, A1          ; Display space
00001530  103C 000E                545              MOVE.B      #14, D0             ; command for trap call to display message
00001534  4E4F                     546              TRAP        #15                 ; trap call
00001536  6000 0412                547              BRA         endSUB              ; go to the end of the subroutine
0000153A                           548  
0000153A  43F9 00001A06            549  displayA6   LEA         dispA6, A1          ; Display space
00001540  103C 000E                550              MOVE.B      #14, D0             ; command for trap call to display message
00001544  4E4F                     551              TRAP        #15                 ; trap call
00001546  6000 0402                552              BRA         endSUB              ; go to the end of the subroutine
0000154A                           553  
0000154A  43F9 00001A09            554  displayA7   LEA         dispA7, A1          ; Display space
00001550  103C 000E                555              MOVE.B      #14, D0             ; command for trap call to display message
00001554  4E4F                     556              TRAP        #15                 ; trap call
00001556  6000 03F2                557              BRA         endSUB              ; go to the end of the subroutine
0000155A                           558  
0000155A                           559  ***********************************************************************************************************
0000155A                           560  * Address Register Direct
0000155A                           561  
0000155A  43F9 00001961            562  pAddrDir    LEA         opPer, A1           ; Display space
00001560  103C 000E                563              MOVE.B      #14, D0             ; command for trap call to display message
00001564  4E4F                     564              TRAP        #15                 ; trap call
00001566                           565              
00001566  B63C 0000                566              CMP.B   #zero,D3
0000156A  6700 003A                567              BEQ     displayA0A
0000156E  B63C 0001                568              CMP.B   #one,D3
00001572  6700 004E                569              BEQ     displayA1A
00001576  B63C 0002                570              CMP.B   #two,D3
0000157A  6700 0062                571              BEQ     displayA2A
0000157E  B63C 0003                572              CMP.B   #three,D3
00001582  6700 0076                573              BEQ     displayA3A
00001586  B63C 0004                574              CMP.B   #four,D3
0000158A  6700 008A                575              BEQ     displayA4A
0000158E  B63C 0005                576              CMP.B   #five,D3
00001592  6700 009E                577              BEQ     displayA5A
00001596  B63C 0006                578              CMP.B   #six,D3
0000159A  6700 00B2                579              BEQ     displayA6A
0000159E  B63C 0007                580              CMP.B   #seven,D3
000015A2  6700 00C6                581              BEQ     displayA7A
000015A6                           582              
000015A6  43F9 000019F4            583  displayA0A  LEA         dispA0, A1          ; Display space
000015AC  103C 000E                584              MOVE.B      #14, D0             ; command for trap call to display message
000015B0  4E4F                     585              TRAP        #15                 ; trap call
000015B2  43F9 00001963            586              LEA         clPer, A1           ; Display space
000015B8  103C 000E                587              MOVE.B      #14, D0             ; command for trap call to display message
000015BC  4E4F                     588              TRAP        #15                 ; trap call
000015BE  6000 038A                589              BRA         endSUB              ; go to the end of the subroutine
000015C2                           590              
000015C2  43F9 000019F7            591  displayA1A  LEA         dispA1, A1          ; Display space
000015C8  103C 000E                592              MOVE.B      #14, D0             ; command for trap call to display message
000015CC  4E4F                     593              TRAP        #15                 ; trap call
000015CE  43F9 00001963            594              LEA         clPer, A1           ; Display space
000015D4  103C 000E                595              MOVE.B      #14, D0             ; command for trap call to display message
000015D8  4E4F                     596              TRAP        #15                 ; trap call
000015DA  6000 036E                597              BRA         endSUB              ; go to the end of the subroutine
000015DE                           598  
000015DE  43F9 000019FA            599  displayA2A  LEA         dispA2, A1          ; Display space
000015E4  103C 000E                600              MOVE.B      #14, D0             ; command for trap call to display message
000015E8  4E4F                     601              TRAP        #15                 ; trap call
000015EA  43F9 00001963            602              LEA         clPer, A1           ; Display space
000015F0  103C 000E                603              MOVE.B      #14, D0             ; command for trap call to display message
000015F4  4E4F                     604              TRAP        #15                 ; trap call
000015F6  6000 0352                605              BRA         endSUB              ; go to the end of the subroutine
000015FA                           606  
000015FA  43F9 000019FD            607  displayA3A  LEA         dispA3, A1          ; Display space
00001600  103C 000E                608              MOVE.B      #14, D0             ; command for trap call to display message
00001604  4E4F                     609              TRAP        #15                 ; trap call
00001606  43F9 00001963            610              LEA         clPer, A1           ; Display space
0000160C  103C 000E                611              MOVE.B      #14, D0             ; command for trap call to display message
00001610  4E4F                     612              TRAP        #15                 ; trap call
00001612  6000 0336                613              BRA         endSUB              ; go to the end of the subroutine
00001616                           614  
00001616  43F9 00001A00            615  displayA4A  LEA         dispA4, A1          ; Display space
0000161C  103C 000E                616              MOVE.B      #14, D0             ; command for trap call to display message
00001620  4E4F                     617              TRAP        #15                 ; trap call
00001622  43F9 00001963            618              LEA         clPer, A1           ; Display space
00001628  103C 000E                619              MOVE.B      #14, D0             ; command for trap call to display message
0000162C  4E4F                     620              TRAP        #15                 ; trap call
0000162E  6000 031A                621              BRA         endSUB              ; go to the end of the subroutine
00001632                           622  
00001632  43F9 00001A03            623  displayA5A  LEA         dispA5, A1          ; Display space
00001638  103C 000E                624              MOVE.B      #14, D0             ; command for trap call to display message
0000163C  4E4F                     625              TRAP        #15                 ; trap call
0000163E  43F9 00001963            626              LEA         clPer, A1           ; Display space
00001644  103C 000E                627              MOVE.B      #14, D0             ; command for trap call to display message
00001648  4E4F                     628              TRAP        #15                 ; trap call
0000164A  6000 02FE                629              BRA         endSUB              ; go to the end of the subroutine
0000164E                           630  
0000164E  43F9 00001A06            631  displayA6A  LEA         dispA6, A1          ; Display space
00001654  103C 000E                632              MOVE.B      #14, D0             ; command for trap call to display message
00001658  4E4F                     633              TRAP        #15                 ; trap call
0000165A  43F9 00001963            634              LEA         clPer, A1           ; Display space
00001660  103C 000E                635              MOVE.B      #14, D0             ; command for trap call to display message
00001664  4E4F                     636              TRAP        #15                 ; trap call
00001666  6000 02E2                637              BRA         endSUB              ; go to the end of the subroutine
0000166A                           638  
0000166A  43F9 00001A09            639  displayA7A  LEA         dispA7, A1          ; Display space
00001670  103C 000E                640              MOVE.B      #14, D0             ; command for trap call to display message
00001674  4E4F                     641              TRAP        #15                 ; trap call
00001676  43F9 00001963            642              LEA         clPer, A1           ; Display space
0000167C  103C 000E                643              MOVE.B      #14, D0             ; command for trap call to display message
00001680  4E4F                     644              TRAP        #15                 ; trap call
00001682  6000 02C6                645              BRA         endSUB              ; go to the end of the subroutine
00001686                           646              
00001686                           647  ***********************************************************************************************************
00001686                           648  * Addr Postincrement
00001686                           649              
00001686  43F9 00001961            650  pAddrPost   LEA         opPer, A1           ; Display space
0000168C  103C 000E                651              MOVE.B      #14, D0             ; command for trap call to display message
00001690  4E4F                     652              TRAP        #15                 ; trap call
00001692                           653              
00001692  B63C 0000                654              CMP.B   #zero,D3
00001696  6700 003A                655              BEQ     displayA0P
0000169A  B63C 0001                656              CMP.B   #one,D3
0000169E  6700 005A                657              BEQ     displayA1P
000016A2  B63C 0002                658              CMP.B   #two,D3
000016A6  6700 007A                659              BEQ     displayA2P
000016AA  B63C 0003                660              CMP.B   #three,D3
000016AE  6700 009A                661              BEQ     displayA3P
000016B2  B63C 0004                662              CMP.B   #four,D3
000016B6  6700 00BA                663              BEQ     displayA4P
000016BA  B63C 0005                664              CMP.B   #five,D3
000016BE  6700 00DA                665              BEQ     displayA5P
000016C2  B63C 0006                666              CMP.B   #six,D3
000016C6  6700 00FA                667              BEQ     displayA6P
000016CA  B63C 0007                668              CMP.B   #seven,D3
000016CE  6700 011A                669              BEQ     displayA7P
000016D2                           670              
000016D2  43F9 000019F4            671  displayA0P  LEA         dispA0, A1          ; Display space
000016D8  103C 000E                672              MOVE.B      #14, D0             ; command for trap call to display message
000016DC  4E4F                     673              TRAP        #15                 ; trap call
000016DE  43F9 00001963            674              LEA         clPer, A1           ; Display space
000016E4  103C 000E                675              MOVE.B      #14, D0             ; command for trap call to display message
000016E8  4E4F                     676              TRAP        #15                 ; trap call
000016EA  43F9 00001967            677              LEA         inc, A1             ; Display space
000016F0  103C 000E                678              MOVE.B      #14, D0             ; command for trap call to display message
000016F4  4E4F                     679              TRAP        #15                 ; trap call
000016F6  6000 0252                680              BRA         endSUB              ; go to the end of the subroutine
000016FA                           681              
000016FA  43F9 000019F7            682  displayA1P  LEA         dispA1, A1          ; Display space
00001700  103C 000E                683              MOVE.B      #14, D0             ; command for trap call to display message
00001704  4E4F                     684              TRAP        #15                 ; trap call
00001706  43F9 00001963            685              LEA         clPer, A1           ; Display space
0000170C  103C 000E                686              MOVE.B      #14, D0             ; command for trap call to display message
00001710  4E4F                     687              TRAP        #15                 ; trap call
00001712  43F9 00001967            688              LEA         inc, A1             ; Display space
00001718  103C 000E                689              MOVE.B      #14, D0             ; command for trap call to display message
0000171C  4E4F                     690              TRAP        #15                 ; trap call
0000171E  6000 022A                691              BRA         endSUB              ; go to the end of the subroutine
00001722                           692  
00001722  43F9 000019FA            693  displayA2P  LEA         dispA2, A1          ; Display space
00001728  103C 000E                694              MOVE.B      #14, D0             ; command for trap call to display message
0000172C  4E4F                     695              TRAP        #15                 ; trap call
0000172E  43F9 00001963            696              LEA         clPer, A1           ; Display space
00001734  103C 000E                697              MOVE.B      #14, D0             ; command for trap call to display message
00001738  4E4F                     698              TRAP        #15                 ; trap call
0000173A  43F9 00001967            699              LEA         inc, A1             ; Display space
00001740  103C 000E                700              MOVE.B      #14, D0             ; command for trap call to display message
00001744  4E4F                     701              TRAP        #15                 ; trap call
00001746  6000 0202                702              BRA         endSUB              ; go to the end of the subroutine
0000174A                           703  
0000174A  43F9 000019FD            704  displayA3P  LEA         dispA3, A1          ; Display space
00001750  103C 000E                705              MOVE.B      #14, D0             ; command for trap call to display message
00001754  4E4F                     706              TRAP        #15                 ; trap call
00001756  43F9 00001963            707              LEA         clPer, A1           ; Display space
0000175C  103C 000E                708              MOVE.B      #14, D0             ; command for trap call to display message
00001760  4E4F                     709              TRAP        #15                 ; trap call
00001762  43F9 00001967            710              LEA         inc, A1             ; Display space
00001768  103C 000E                711              MOVE.B      #14, D0             ; command for trap call to display message
0000176C  4E4F                     712              TRAP        #15                 ; trap call
0000176E  6000 01DA                713              BRA         endSUB              ; go to the end of the subroutine
00001772                           714  
00001772  43F9 00001A00            715  displayA4P  LEA         dispA4, A1          ; Display space
00001778  103C 000E                716              MOVE.B      #14, D0             ; command for trap call to display message
0000177C  4E4F                     717              TRAP        #15                 ; trap call
0000177E  43F9 00001963            718              LEA         clPer, A1           ; Display space
00001784  103C 000E                719              MOVE.B      #14, D0             ; command for trap call to display message
00001788  4E4F                     720              TRAP        #15                 ; trap call
0000178A  43F9 00001967            721              LEA         inc, A1             ; Display space
00001790  103C 000E                722              MOVE.B      #14, D0             ; command for trap call to display message
00001794  4E4F                     723              TRAP        #15                 ; trap call
00001796  6000 01B2                724              BRA         endSUB              ; go to the end of the subroutine
0000179A                           725  
0000179A  43F9 00001A03            726  displayA5P  LEA         dispA5, A1          ; Display space
000017A0  103C 000E                727              MOVE.B      #14, D0             ; command for trap call to display message
000017A4  4E4F                     728              TRAP        #15                 ; trap call
000017A6  43F9 00001963            729              LEA         clPer, A1           ; Display space
000017AC  103C 000E                730              MOVE.B      #14, D0             ; command for trap call to display message
000017B0  4E4F                     731              TRAP        #15                 ; trap call
000017B2  43F9 00001967            732              LEA         inc, A1             ; Display space
000017B8  103C 000E                733              MOVE.B      #14, D0             ; command for trap call to display message
000017BC  4E4F                     734              TRAP        #15                 ; trap call
000017BE  6000 018A                735              BRA         endSUB              ; go to the end of the subroutine
000017C2                           736  
000017C2  43F9 00001A06            737  displayA6P  LEA         dispA6, A1          ; Display space
000017C8  103C 000E                738              MOVE.B      #14, D0             ; command for trap call to display message
000017CC  4E4F                     739              TRAP        #15                 ; trap call
000017CE  43F9 00001963            740              LEA         clPer, A1           ; Display space
000017D4  103C 000E                741              MOVE.B      #14, D0             ; command for trap call to display message
000017D8  4E4F                     742              TRAP        #15                 ; trap call
000017DA  43F9 00001967            743              LEA         inc, A1             ; Display space
000017E0  103C 000E                744              MOVE.B      #14, D0             ; command for trap call to display message
000017E4  4E4F                     745              TRAP        #15                 ; trap call
000017E6  6000 0162                746              BRA         endSUB              ; go to the end of the subroutine
000017EA                           747  
000017EA  43F9 00001A09            748  displayA7P  LEA         dispA7, A1          ; Display space
000017F0  103C 000E                749              MOVE.B      #14, D0             ; command for trap call to display message
000017F4  4E4F                     750              TRAP        #15                 ; trap call
000017F6  43F9 00001963            751              LEA         clPer, A1           ; Display space
000017FC  103C 000E                752              MOVE.B      #14, D0             ; command for trap call to display message
00001800  4E4F                     753              TRAP        #15                 ; trap call
00001802  43F9 00001967            754              LEA         inc, A1             ; Display space
00001808  103C 000E                755              MOVE.B      #14, D0             ; command for trap call to display message
0000180C  4E4F                     756              TRAP        #15                 ; trap call
0000180E  6000 013A                757              BRA         endSUB              ; go to the end of the subroutine
00001812                           758  
00001812                           759  ***********************************************************************************************************
00001812                           760  * Addr Postdecrement
00001812                           761  
00001812  43F9 00001965            762  pAddrDec    LEA         dec, A1             ; Display space
00001818  103C 000E                763              MOVE.B      #14, D0             ; command for trap call to display message
0000181C  4E4F                     764              TRAP        #15                 ; trap call
0000181E                           765              
0000181E  43F9 00001961            766              LEA         opPer, A1           ; Display space
00001824  103C 000E                767              MOVE.B      #14, D0             ; command for trap call to display message
00001828  4E4F                     768              TRAP        #15                 ; trap call
0000182A                           769              
0000182A  B63C 0000                770              CMP.B   #zero,D3
0000182E  6700 003A                771              BEQ     displayA0D
00001832  B63C 0001                772              CMP.B   #one,D3
00001836  6700 004E                773              BEQ     displayA1D
0000183A  B63C 0002                774              CMP.B   #two,D3
0000183E  6700 0062                775              BEQ     displayA2D
00001842  B63C 0003                776              CMP.B   #three,D3
00001846  6700 0076                777              BEQ     displayA3D
0000184A  B63C 0004                778              CMP.B   #four,D3
0000184E  6700 008A                779              BEQ     displayA4D
00001852  B63C 0005                780              CMP.B   #five,D3
00001856  6700 009E                781              BEQ     displayA5D
0000185A  B63C 0006                782              CMP.B   #six,D3
0000185E  6700 00B2                783              BEQ     displayA6D
00001862  B63C 0007                784              CMP.B   #seven,D3
00001866  6700 00C6                785              BEQ     displayA7D
0000186A                           786              
0000186A  43F9 000019F4            787  displayA0D  LEA         dispA0, A1          ; Display space
00001870  103C 000E                788              MOVE.B      #14, D0             ; command for trap call to display message
00001874  4E4F                     789              TRAP        #15                 ; trap call
00001876  43F9 00001963            790              LEA         clPer, A1           ; Display space
0000187C  103C 000E                791              MOVE.B      #14, D0             ; command for trap call to display message
00001880  4E4F                     792              TRAP        #15                 ; trap call
00001882  6000 00C6                793              BRA         endSUB              ; go to the end of the subroutine
00001886                           794              
00001886  43F9 000019F7            795  displayA1D  LEA         dispA1, A1          ; Display space
0000188C  103C 000E                796              MOVE.B      #14, D0             ; command for trap call to display message
00001890  4E4F                     797              TRAP        #15                 ; trap call
00001892  43F9 00001963            798              LEA         clPer, A1           ; Display space
00001898  103C 000E                799              MOVE.B      #14, D0             ; command for trap call to display message
0000189C  4E4F                     800              TRAP        #15                 ; trap call
0000189E  6000 00AA                801              BRA         endSUB              ; go to the end of the subroutine
000018A2                           802  
000018A2  43F9 000019FA            803  displayA2D  LEA         dispA2, A1          ; Display space
000018A8  103C 000E                804              MOVE.B      #14, D0             ; command for trap call to display message
000018AC  4E4F                     805              TRAP        #15                 ; trap call
000018AE  43F9 00001963            806              LEA         clPer, A1           ; Display space
000018B4  103C 000E                807              MOVE.B      #14, D0             ; command for trap call to display message
000018B8  4E4F                     808              TRAP        #15                 ; trap call
000018BA  6000 008E                809              BRA         endSUB              ; go to the end of the subroutine
000018BE                           810  
000018BE  43F9 000019FD            811  displayA3D  LEA         dispA3, A1          ; Display space
000018C4  103C 000E                812              MOVE.B      #14, D0             ; command for trap call to display message
000018C8  4E4F                     813              TRAP        #15                 ; trap call
000018CA  43F9 00001963            814              LEA         clPer, A1           ; Display space
000018D0  103C 000E                815              MOVE.B      #14, D0             ; command for trap call to display message
000018D4  4E4F                     816              TRAP        #15                 ; trap call
000018D6  6000 0072                817              BRA         endSUB              ; go to the end of the subroutine
000018DA                           818  
000018DA  43F9 00001A00            819  displayA4D  LEA         dispA4, A1          ; Display space
000018E0  103C 000E                820              MOVE.B      #14, D0             ; command for trap call to display message
000018E4  4E4F                     821              TRAP        #15                 ; trap call
000018E6  43F9 00001963            822              LEA         clPer, A1           ; Display space
000018EC  103C 000E                823              MOVE.B      #14, D0             ; command for trap call to display message
000018F0  4E4F                     824              TRAP        #15                 ; trap call
000018F2  6000 0056                825              BRA         endSUB              ; go to the end of the subroutine
000018F6                           826  
000018F6  43F9 00001A03            827  displayA5D  LEA         dispA5, A1          ; Display space
000018FC  103C 000E                828              MOVE.B      #14, D0             ; command for trap call to display message
00001900  4E4F                     829              TRAP        #15                 ; trap call
00001902  43F9 00001963            830              LEA         clPer, A1           ; Display space
00001908  103C 000E                831              MOVE.B      #14, D0             ; command for trap call to display message
0000190C  4E4F                     832              TRAP        #15                 ; trap call
0000190E  6000 003A                833              BRA         endSUB              ; go to the end of the subroutine
00001912                           834  
00001912  43F9 00001A06            835  displayA6D  LEA         dispA6, A1          ; Display space
00001918  103C 000E                836              MOVE.B      #14, D0             ; command for trap call to display message
0000191C  4E4F                     837              TRAP        #15                 ; trap call
0000191E  43F9 00001963            838              LEA         clPer, A1           ; Display space
00001924  103C 000E                839              MOVE.B      #14, D0             ; command for trap call to display message
00001928  4E4F                     840              TRAP        #15                 ; trap call
0000192A  6000 001E                841              BRA         endSUB              ; go to the end of the subroutine
0000192E                           842  
0000192E  43F9 00001A09            843  displayA7D  LEA         dispA7, A1          ; Display space
00001934  103C 000E                844              MOVE.B      #14, D0             ; command for trap call to display message
00001938  4E4F                     845              TRAP        #15                 ; trap call
0000193A  43F9 00001963            846              LEA         clPer, A1           ; Display space
00001940  103C 000E                847              MOVE.B      #14, D0             ; command for trap call to display message
00001944  4E4F                     848              TRAP        #15                 ; trap call
00001946  6000 0002                849              BRA         endSUB              ; go to the end of the subroutine
0000194A                           850  
0000194A                           851  
0000194A                           852  invalid
0000194A                           853  
0000194A                           854  endSUB
0000194A                           855          
0000194A  4CDF 7FFF                856          MOVEM.L  (SP)+, D0-D7/A0-A6
0000194E  4E75                     857          RTS
00001950                           858  
00001950                           859  ***********************************************************************************************************
00001950                           860  ***********************************************************************************************************
00001950                           861  ***********************************************************************************************************
00001950                           862  
00001950                           863  printInvalid
00001950                           864  endPROG    
00001950                           865  
00001950  FFFF FFFF                866      SIMHALT                             ; halt simulator
00001954                           867  
00001954= 20 0D 0A 00              868  newLine     DC.B    ' ', CR, LF, 0
00001958= 20 20 00                 869  space       DC.B    '  ', 0
0000195B                           870  
0000195B= 23 00                    871  hashTag     DC.B    '#', 0
0000195D= 24 00                    872  dispHex     DC.B    '$', 0
0000195F= 2C 00                    873  comma       DC.B    ',', 0
00001961                           874  
00001961= 28 00                    875  opPer       DC.B    '(', 0
00001963= 29 00                    876  clPer       DC.B    ')', 0
00001965= 2D 00                    877  dec         DC.B    '-', 0
00001967= 2B 00                    878  inc         DC.B    '+', 0
00001969                           879  
00001969= 4F 52 49 00              880  ORImatch    DC.B    'ORI', 0
0000196D= 43 4D 50 49 00           881  CMPImatch   DC.B    'CMPI', 0
00001972= 42 43 4C 52 00           882  BCLRmatch   DC.B    'BCLR', 0
00001977= 4D 4F 56 45 00           883  MOVEmatch   DC.B    'MOVE', 0
0000197C= 4D 4F 56 45 41 00        884  MOVEAmatch  DC.B    'MOVEA', 0
00001982= 4E 45 47 00              885  NEGmatch    DC.B    'NEG', 0
00001986= 52 54 53 00              886  RTSmatch    DC.B    'RTS', 0
0000198A= 4A 53 52 00              887  JSRmatch    DC.B    'JSR', 0
0000198E= 4D 4F 56 45 4D 00        888  MOVEMmatch  DC.B    'MOVEM', 0
00001994= 4C 45 41 00              889  LEAmatch    DC.B    'LEA', 0
00001998= 53 55 42 51 00           890  SUBQmatch   DC.B    'SUBQ', 0
0000199D= 42 52 41 00              891  BRAmatch    DC.B    'BRA', 0
000019A1= 42 43 53 00              892  BCSmatch    DC.B    'BCS', 0
000019A5= 42 56 43 00              893  BVCmatch    DC.B    'BVC', 0
000019A9= 42 47 45 00              894  BGEmatch    DC.B    'BGE', 0
000019AD= 42 4C 54 00              895  BLTmatch    DC.B    'BLT', 0
000019B1= 44 49 56 53 00           896  DIVSmatch   DC.B    'DIVS', 0
000019B6= 4F 52 00                 897  ORmatch     DC.B    'OR', 0
000019B9= 53 55 42 00              898  SUBmatch    DC.B    'SUB', 0
000019BD= 45 4F 52 00              899  EORmatch    DC.B    'EOR', 0
000019C1= 43 4D 50 00              900  CMPmatch    DC.B    'CMP', 0
000019C5= 4D 55 4C 53 00           901  MULSmatch   DC.B    'MULS', 0
000019CA= 41 44 44 00              902  ADDmatch    DC.B    'ADD', 0
000019CE= 41 44 44 41 00           903  ADDAmatch   DC.B    'ADDA', 0
000019D3= 4C 53 52 00              904  LSRmatch    DC.B    'LSR', 0
000019D7= 4C 53 4C 00              905  LSLmatch    DC.B    'LSL', 0
000019DB= 41 53 52 00              906  ASRmatch    DC.B    'ASR', 0
000019DF= 41 53 4C 00              907  ASLmatch    DC.B    'ASL', 0
000019E3= 52 4F 52 00              908  RORmatch    DC.B    'ROR', 0
000019E7= 52 4F 4C 00              909  ROLmatch    DC.B    'ROL', 0
000019EB                           910   
000019EB= 2E 42 00                 911  dispByte    DC.B    '.B', 0
000019EE= 2E 57 00                 912  dispWord    DC.B    '.W', 0
000019F1= 2E 4C 00                 913  dispLong    DC.B    '.L', 0
000019F4                           914  
000019F4= 41 30 00                 915  dispA0      DC.B    'A0', 0
000019F7= 41 31 00                 916  dispA1      DC.B    'A1', 0
000019FA= 41 32 00                 917  dispA2      DC.B    'A2', 0
000019FD= 41 33 00                 918  dispA3      DC.B    'A3', 0
00001A00= 41 34 00                 919  dispA4      DC.B    'A4', 0
00001A03= 41 35 00                 920  dispA5      DC.B    'A5', 0
00001A06= 41 36 00                 921  dispA6      DC.B    'A6', 0
00001A09= 41 37 00                 922  dispA7      DC.B    'A7', 0
00001A0C                           923  
00001A0C= 44 30 00                 924  dispD0      DC.B    'D0', 0
00001A0F= 44 31 00                 925  dispD1      DC.B    'D1', 0
00001A12= 44 32 00                 926  dispD2      DC.B    'D2', 0
00001A15= 44 33 00                 927  dispD3      DC.B    'D3', 0
00001A18= 44 34 00                 928  dispD4      DC.B    'D4', 0
00001A1B= 44 35 00                 929  dispD5      DC.B    'D5', 0
00001A1E= 44 36 00                 930  dispD6      DC.B    'D6', 0
00001A21= 44 37 00                 931  dispD7      DC.B    'D7', 0  
00001A24                           932             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAMATCH           19CE
ADDMATCH            19CA
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            19DF
ASRMATCH            19DB
BCLRMATCH           1972
BCSMATCH            19A1
BGEMATCH            19A9
BLTMATCH            19AD
BRAEIGHT            1102
BRAELEVEN           1106
BRAFIVE             10D2
BRAFOUR             10B6
BRAFOURTEEN         110A
BRAMATCH            199D
BRANINE             1102
BRAONE              10B2
BRASIX              10D6
BRATHIRTEEN         110A
BRATHREE            10B6
BRATWELVE           1106
BRATWO              10B6
BRAZERO             1086
BVCMATCH            19A5
CLPER               1963
CMPIMATCH           196D
CMPMATCH            19C1
COMMA               195F
CR                  D
DEC                 1965
DISPA0              19F4
DISPA1              19F7
DISPA2              19FA
DISPA3              19FD
DISPA4              1A00
DISPA5              1A03
DISPA6              1A06
DISPA7              1A09
DISPBYTE            19EB
DISPD0              1A0C
DISPD1              1A0F
DISPD2              1A12
DISPD3              1A15
DISPD4              1A18
DISPD5              1A1B
DISPD6              1A1E
DISPD7              1A21
DISPHEX             195D
DISPLAYA0           14DA
DISPLAYA0A          15A6
DISPLAYA0D          186A
DISPLAYA0P          16D2
DISPLAYA1           14EA
DISPLAYA1A          15C2
DISPLAYA1D          1886
DISPLAYA1P          16FA
DISPLAYA2           14FA
DISPLAYA2A          15DE
DISPLAYA2D          18A2
DISPLAYA2P          1722
DISPLAYA3           150A
DISPLAYA3A          15FA
DISPLAYA3D          18BE
DISPLAYA3P          174A
DISPLAYA4           151A
DISPLAYA4A          1616
DISPLAYA4D          18DA
DISPLAYA4P          1772
DISPLAYA5           152A
DISPLAYA5A          1632
DISPLAYA5D          18F6
DISPLAYA5P          179A
DISPLAYA6           153A
DISPLAYA6A          164E
DISPLAYA6D          1912
DISPLAYA6P          17C2
DISPLAYA7           154A
DISPLAYA7A          166A
DISPLAYA7D          192E
DISPLAYA7P          17EA
DISPLAYD0           141A
DISPLAYD1           142A
DISPLAYD2           143A
DISPLAYD3           144A
DISPLAYD4           145A
DISPLAYD5           146A
DISPLAYD6           147A
DISPLAYD7           148A
DISPLONG            19F1
DISPWORD            19EE
DIVSMATCH           19B1
EIGHT               8
ELEVEN              B
ENDPROG             1950
ENDSUB              194A
EORMATCH            19BD
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             195B
INC                 1967
INVALID             194A
JSRMATCH            198A
LEAMATCH            1994
LF                  A
LOOP                100C
LSLMATCH            19D7
LSRMATCH            19D3
MOVEAMATCH          197C
MOVEMATCH           1977
MOVEMMATCH          198E
MULSMATCH           19C5
NEGMATCH            1982
NEWLINE             1954
NINE                9
ONE                 1
OPASL               1362
OPASR               136E
OPBCLR              1268
OPBCS               131A
OPBGE               1332
OPBLT               133E
OPBRA               1302
OPBVC               1326
OPCMPI              1230
OPLSL               137A
OPLSR               1386
OPMOVEB             12C6
OPMOVEMLEA          12F6
OPMULS              1356
OPNEG               12EA
OPORI               113E
OPORIB              116C
OPORIL              1230
OPORIW              11CE
OPPER               1961
OPROL               1392
OPROR               139E
OPRTSJSR            12F6
OPSTATBCLR          1298
OPSUB               134A
OPSUBQ              12F6
ORIMATCH            1969
ORMATCH             19B6
PADDRDEC            1812
PADDRDIR            155A
PADDRPOST           1686
PADDRREG            149A
PDATAREG            13DA
PRINTEA             13AA
PRINTINVALID        1950
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
ROLMATCH            19E7
RORMATCH            19E3
RTSMATCH            1986
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               1958
START               1000
SUBMATCH            19B9
SUBQMATCH           1998
TEST_END            2005
TEST_START          2000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
