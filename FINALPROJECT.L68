00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 2014-12-06 11:55:04

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Motorola 68k Disassembler
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =00003009                 11  test_end    EQU     $00003009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00003000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00003009             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 112C                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 0084                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0080                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 0094                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0090                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00B4                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00AC                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00A8                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00B8                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 00B4                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 00AC                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                102          AND.B       #secNib, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 01AC                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 02F8                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                108          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 0462                109          BEQ         opBCLR
000010A6  C47C 0001                110          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                111          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 04BA                112          BEQ         opDynBCLR
000010B2  6000 108C                113          BRA         printInvalid
000010B6                           114          
000010B6                           115          
000010B6  6000 0520                116  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           117  
000010BA  6000 05A0                118  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BE                           119  
000010BE                           120  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BE                           121  
000010BE  6000 0696                122          BRA         opMOVEW
000010C2                           123  
000010C2  4242                     124  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010C4  1401                     125          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010C6  C43C 000F                126          AND.B       #secNib, D2             ; set first nibble to 0
000010CA                           127   
000010CA  B43C 0004                128          CMP.B       #four, D2           ; compare second nibble to 4
000010CE  6700 0780                129          BEQ         opNEG               ; branch to NEG method
000010D2  B43C 000E                130          CMP.B       #fourteen, D2       ; compare second nibble to E
000010D6  6700 0866                131          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010DA  6000 08D8                132          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010DE                           133  
000010DE  6000 0908                134  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010E2                           135  
000010E2  4242                     136  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010E4  1401                     137          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010E6  C43C 000F                138          AND.B       #$0F, D2             ; set first nibble to 0
000010EA                           139   
000010EA  B43C 0000                140          CMP.B       #zero, D2           ; compare second nibble to 0
000010EE  6700 0904                141          BEQ         opBRA               ; branch to BRA method
000010F2  B43C 0005                142          CMP.B       #five, D2           ; compare second nibble to 5
000010F6  6700 0934                143          BEQ         opBCS               ; branch to BCS method
000010FA  B43C 0008                144          CMP.B       #eight, D2          ; compare second nibble to 8
000010FE  6700 0938                145          BEQ         opBVC               ; branch to BCS method
00001102  B43C 000C                146          CMP.B       #twelve, D2         ; compare second nibble to 12
00001106  6700 093C                147          BEQ         opBGE               ; branch to BGE method
0000110A  6000 0944                148          BRA         opBLT               ; otherwise, branch to BLT method
0000110E                           149  
0000110E                           150  braEight                ; there are two opCodes available DIVS, or OR
0000110E                           151  
0000110E                           152              
0000110E                           153  
0000110E  6000 094C                154  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
00001112                           155  
00001112                           156  braEleven                               ; there are two opCodes available EOR, or CMP
00001112  4242                     157              CLR     D2
00001114  1401                     158              MOVE.B  D1,D2
00001116  C438 000F                159              AND.B   $0F,D2
0000111A  B43C 0003                160              CMP.B   #three,D2
0000111E  6D00 006C                161              BLT     opCMP
00001122  B43C 0003                162              CMP.B   #three,D2
00001126  6E00 0058                163              BGT     opEOR
0000112A                           164              
0000112A                           165  
0000112A  6000 0964                166  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
0000112E                           167    
0000112E                           168  braThirteen ; there are two opCodes available ADD, or ADDA
0000112E                           169  
0000112E  4242                     170  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
00001130  1401                     171              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001132  C438 000F                172              AND.B       $0F, D2             ; set first nibble to 0
00001136                           173   
00001136  B43C 0000                174              CMP.B       #zero, D2           ; compare second nibble to 0
0000113A  6700 096C                175              BEQ         opASR               ; branch to ASR method
0000113E  B43C 0001                176              CMP.B       #one, D2            ; compare second nibble to 1
00001142  6700 0958                177              BEQ         opASL               ; branch to ASL method
00001146  B43C 0002                178              CMP.B       #two, D2            ; compare second nibble to 2
0000114A  6700 0974                179              BEQ         opLSR               ; branch to LSR method
0000114E  B43C 0003                180              CMP.B       #three, D2          ; compare second nibble to 3
00001152  6700 0960                181              BEQ         opLSL               ; branch to LSL method
00001156  B43C 0006                182              CMP.B       #six, D2            ; compare second nibble to 6
0000115A  6700 097C                183              BEQ         opROR               ; branch to ROR method
0000115E  6000 096C                184              BRA         opROL               ; otherwise, branch to ROL method
00001162                           185              
00001162                           186  
00001162                           187  
00001162                           188  ***********************************************************************************************************
00001162                           189  *
00001162                           190  *               BCC OPCODE
00001162                           191  *
00001162                           192  ***********************************************************************************************************
00001162                           193          
00001162  4242                     194  opBCC       CLR     D2
00001164                           195              ; Determine Condition (4 bits)
00001164                           196              ; Determine Displacement AFTER condition (8 bits)
00001164  6000 FEA6                197              BRA     LOOP
00001168                           198              
00001168                           199              
00001168                           200  ***********************************************************************************************************
00001168                           201  *
00001168                           202  *               OR OPCODE
00001168                           203  *
00001168                           204  ***********************************************************************************************************
00001168                           205  
00001168  43F9 000021A6            206  opOR        LEA     ORmatch,A1
0000116E  103C 000E                207              MOVE.B  #14,D0
00001172  4E4F                     208              TRAP    #15
00001174                           209  
00001174                           210  ***********************************************************************************************************
00001174                           211  *
00001174                           212  *               DIVS OPCODE
00001174                           213  *
00001174                           214  ***********************************************************************************************************
00001174                           215  
00001174  43F9 000021A1            216  opDIVS      LEA     DIVSmatch,A1
0000117A  103C 000E                217              MOVE.B  #14,D0
0000117E  4E4F                     218              TRAP    #15
00001180                           219      
00001180                           220      
00001180                           221  **********************************************************************************************************
00001180                           222  *
00001180                           223  *               EOR OPCODE
00001180                           224  *
00001180                           225  ***********************************************************************************************************
00001180                           226  
00001180  43F9 000021AD            227  opEOR       LEA     EORmatch,A1
00001186  103C 000E                228              MOVE.B  #14,D0
0000118A  4E4F                     229              TRAP    #15
0000118C                           230  
0000118C                           231  ***********************************************************************************************************
0000118C                           232  *
0000118C                           233  *               CMP OPCODE
0000118C                           234  *
0000118C                           235  ***********************************************************************************************************
0000118C                           236  
0000118C  43F9 000021B1            237  opCMP       LEA         CMPmatch,A1
00001192  103C 000E                238              MOVE.B      #14,D0
00001196  4E4F                     239              TRAP        #15
00001198                           240              
00001198  4242                     241              CLR         D2
0000119A                           242              
0000119A  1218                     243              MOVE.B      (A0)+,D1
0000119C  1401                     244              MOVE.B      D1,D2
0000119E  EE42                     245              ASR         #seven,D2           ; Move bits 7 places over to find opmode
000011A0  B43C 0000                246              CMP.B       #zero,D2
000011A4  6700 0016                247              BEQ         opCMPB              ; Byte in opmode
000011A8  B43C 0001                248              CMP.B       #one,D2
000011AC  6700 005A                249              BEQ         opCMPW              ; Word in opmode
000011B0  B43C 0002                250              CMP.B       #two,D2
000011B4  6700 006E                251              BEQ         opCMPL              ; Long in opmode
000011B8                           252              
000011B8  6000 0F86                253              BRA         printInvalid        ; Incorrect input
000011BC                           254  
000011BC  43F9 000021DB            255  opCMPB      LEA         dispByte,A1
000011C2  103C 000E                256              MOVE.B      #14,D0
000011C6  4E4F                     257              TRAP        #15
000011C8                           258              
000011C8  43F9 00002148            259              LEA         space, A1           ; Display space
000011CE  103C 000E                260              MOVE.B      #14, D0             ; command for trap call to display message
000011D2  4E4F                     261              TRAP        #15                 ; trap call
000011D4                           262              
000011D4  4242                     263              CLR         D2
000011D6  1218                     264              MOVE.B      (A0)+,D1
000011D8  1401                     265              MOVE.B      D1,D2
000011DA  4EB9 00001AE4            266              JSR         findRege            ; Determines the "left" operand register
000011E0                           267              
000011E0  43F9 0000214F            268              LEA         comma, A1           ; Display space
000011E6  103C 000E                269              MOVE.B      #14, D0             ; command for trap call to display message
000011EA  4E4F                     270              TRAP        #15                 ; trap call
000011EC                           271              
000011EC                           272              
000011EC  1218                     273              MOVE.B      (A0)+,D1
000011EE  1401                     274              MOVE.B      D1,D2
000011F0  EE42                     275              ASR         #seven,D2           ; Move bits 7 places over to find opmode
000011F2  4EB9 00001AF0            276              JSR         printEA
000011F8                           277              
000011F8  43F9 00002144            278              LEA         newLine,A1
000011FE  103C 000E                279              MOVE.B      #14,D0
00001202  4E4F                     280              TRAP        #15
00001204                           281              
00001204  6000 FE06                282              BRA         LOOP
00001208                           283              
00001208  43F9 000021DE            284  opCMPW      LEA         dispWord,A1
0000120E  103C 000E                285              MOVE.B      #14,D0
00001212  4E4F                     286              TRAP        #15
00001214                           287              
00001214  43F9 00002148            288              LEA         space, A1           ; Display space
0000121A  103C 000E                289              MOVE.B      #14, D0             ; command for trap call to display message
0000121E  4E4F                     290              TRAP        #15                 ; trap call
00001220                           291              
00001220  6000 FDEA                292              BRA         LOOP
00001224                           293  
00001224  43F9 000021E1            294  opCMPL      LEA         dispLong,A1
0000122A  103C 000E                295              MOVE.B      #14,D0
0000122E  4E4F                     296              TRAP        #15
00001230                           297              
00001230  43F9 00002148            298              LEA         space, A1           ; Display space
00001236  103C 000E                299              MOVE.B      #14, D0             ; command for trap call to display message
0000123A  4E4F                     300              TRAP        #15                 ; trap call
0000123C                           301              
0000123C  6000 FDCE                302              BRA         LOOP
00001240                           303              
00001240                           304  ***********************************************************************************************************
00001240                           305  *
00001240                           306  *               ORI OPCODE
00001240                           307  *
00001240                           308  ***********************************************************************************************************
00001240                           309  
00001240  43F9 00002159            310  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
00001246  103C 000E                311          MOVE.B      #14, D0             ; command for trap call to display message
0000124A  4E4F                     312          TRAP        #15                 ; trap call
0000124C                           313          
0000124C  1218                     314          MOVE.B      (A0)+, D1
0000124E  1401                     315          MOVE.B      D1,D2               ; copy data over
00001250  EC42                     316          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001252  B43C 0000                317          CMP.B       #zero,D2
00001256  6700 0016                318          BEQ         opORIB
0000125A  B43C 0001                319          CMP.B       #one,D2
0000125E  6700 0070                320          BEQ         opORIW
00001262  B43C 0002                321          CMP.B       #two,D2
00001266  6700 00CA                322          BEQ         opORIL
0000126A                           323          
0000126A  6000 0ED4                324          BRA         printInvalid
0000126E                           325          
0000126E  43F9 000021DB            326  opORIB  LEA         dispByte, A1        ; Display byte
00001274  103C 000E                327          MOVE.B      #14, D0             ; command for trap call to display message
00001278  4E4F                     328          TRAP        #15                 ; trap call
0000127A                           329          
0000127A  43F9 00002148            330          LEA         space, A1           ; Display space
00001280  103C 000E                331          MOVE.B      #14, D0             ; command for trap call to display message
00001284  4E4F                     332          TRAP        #15                 ; trap call
00001286                           333          
00001286  4242                     334          CLR         D2
00001288  1401                     335          MOVE.B      D1,D2
0000128A  E642                     336          ASR         #three,D2
0000128C  C47C 0007                337          AND         #seven,D2
00001290  4243                     338          CLR         D3        
00001292  1601                     339          MOVE.B      D1,D3
00001294  C67C 0007                340          AND         #seven,D3
00001298                           341          
00001298  4241                     342          CLR         D1
0000129A  3218                     343          MOVE.W      (A0)+, D1
0000129C                           344          
0000129C  43F9 0000214B            345          LEA         hashTag, A1           ; Display space
000012A2  103C 000E                346          MOVE.B      #14, D0             ; command for trap call to display message
000012A6  4E4F                     347          TRAP        #15                 ; trap call
000012A8                           348          
000012A8  103C 0003                349          MOVE.B      #3, D0
000012AC  4E4F                     350          TRAP        #15
000012AE                           351          
000012AE  43F9 0000214F            352          LEA         comma, A1           ; Display space
000012B4  103C 000E                353          MOVE.B      #14, D0             ; command for trap call to display message
000012B8  4E4F                     354          TRAP        #15                 ; trap call
000012BA                           355          
000012BA  4EB9 00001AF0            356          JSR         printEA
000012C0                           357          
000012C0  43F9 00002144            358          LEA         newLine, A1           ; Display space
000012C6  103C 000E                359          MOVE.B      #14, D0             ; command for trap call to display message
000012CA  4E4F                     360          TRAP        #15                 ; trap call
000012CC                           361          
000012CC  6000 FD3E                362          BRA         LOOP
000012D0                           363          
000012D0                           364          
000012D0  43F9 000021DE            365  opORIW  LEA         dispWord, A1        ; Display byte
000012D6  103C 000E                366          MOVE.B      #14, D0             ; command for trap call to display message
000012DA  4E4F                     367          TRAP        #15                 ; trap call
000012DC                           368          
000012DC  43F9 00002148            369          LEA         space, A1           ; Display space
000012E2  103C 000E                370          MOVE.B      #14, D0             ; command for trap call to display message
000012E6  4E4F                     371          TRAP        #15                 ; trap call
000012E8                           372          
000012E8  4242                     373          CLR         D2
000012EA  1401                     374          MOVE.B      D1,D2
000012EC  E642                     375          ASR         #three,D2
000012EE  C47C 0007                376          AND         #seven,D2
000012F2  4243                     377          CLR         D3        
000012F4  1601                     378          MOVE.B      D1,D3
000012F6  C67C 0007                379          AND         #seven,D3
000012FA                           380          
000012FA  4241                     381          CLR         D1
000012FC  3218                     382          MOVE.W      (A0)+, D1
000012FE                           383          
000012FE  43F9 0000214B            384          LEA         hashTag, A1           ; Display space
00001304  103C 000E                385          MOVE.B      #14, D0             ; command for trap call to display message
00001308  4E4F                     386          TRAP        #15                 ; trap call
0000130A                           387          
0000130A  103C 0003                388          MOVE.B      #3, D0
0000130E  4E4F                     389          TRAP        #15
00001310                           390          
00001310  43F9 0000214F            391          LEA         comma, A1           ; Display space
00001316  103C 000E                392          MOVE.B      #14, D0             ; command for trap call to display message
0000131A  4E4F                     393          TRAP        #15                 ; trap call
0000131C                           394          
0000131C  4EB9 00001AF0            395          JSR         printEA
00001322                           396          
00001322  43F9 00002144            397          LEA         newLine, A1           ; Display space
00001328  103C 000E                398          MOVE.B      #14, D0             ; command for trap call to display message
0000132C  4E4F                     399          TRAP        #15                 ; trap call
0000132E                           400          
0000132E  6000 FCDC                401          BRA         LOOP
00001332                           402       
00001332  43F9 000021E1            403  opORIL  LEA         dispLong, A1        ; Display byte
00001338  103C 000E                404          MOVE.B      #14, D0             ; command for trap call to display message
0000133C  4E4F                     405          TRAP        #15                 ; trap call
0000133E                           406          
0000133E  43F9 00002148            407          LEA         space, A1           ; Display space
00001344  103C 000E                408          MOVE.B      #14, D0             ; command for trap call to display message
00001348  4E4F                     409          TRAP        #15                 ; trap call
0000134A                           410          
0000134A  4242                     411          CLR         D2
0000134C  1401                     412          MOVE.B      D1,D2
0000134E  E642                     413          ASR         #three,D2
00001350  C47C 0007                414          AND         #seven,D2
00001354  4243                     415          CLR         D3        
00001356  1601                     416          MOVE.B      D1,D3
00001358  C67C 0007                417          AND         #seven,D3
0000135C                           418          
0000135C  4241                     419          CLR         D1
0000135E  2218                     420          MOVE.L      (A0)+, D1
00001360                           421          
00001360  43F9 0000214B            422          LEA         hashTag, A1           ; Display space
00001366  103C 000E                423          MOVE.B      #14, D0             ; command for trap call to display message
0000136A  4E4F                     424          TRAP        #15                 ; trap call
0000136C                           425          
0000136C  103C 0003                426          MOVE.B      #3, D0
00001370  4E4F                     427          TRAP        #15
00001372                           428          
00001372  43F9 0000214F            429          LEA         comma, A1           ; Display space
00001378  103C 000E                430          MOVE.B      #14, D0             ; command for trap call to display message
0000137C  4E4F                     431          TRAP        #15                 ; trap call
0000137E                           432          
0000137E  4EB9 00001AF0            433          JSR         printEA
00001384                           434          
00001384  43F9 00002144            435          LEA         newLine, A1           ; Display space
0000138A  103C 000E                436          MOVE.B      #14, D0             ; command for trap call to display message
0000138E  4E4F                     437          TRAP        #15                 ; trap call
00001390                           438          
00001390  6000 FC7A                439          BRA         LOOP
00001394                           440           
00001394  43F9 0000215D            441  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000139A  103C 000E                442          MOVE.B      #14, D0             ; command for trap call to display message
0000139E  4E4F                     443          TRAP        #15                 ; trap call
000013A0                           444                  
000013A0  1218                     445          MOVE.B      (A0)+, D1
000013A2  1401                     446          MOVE.B      D1,D2               ; copy data over
000013A4  EC42                     447          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000013A6  B43C 0000                448          CMP.B       #zero,D2
000013AA  6700 0034                449          BEQ         opCMPIB
000013AE  B43C 0001                450          CMP.B       #one,D2
000013B2  6700 008E                451          BEQ         opCMPIW
000013B6  B43C 0002                452          CMP.B       #two,D2
000013BA  6700 00E8                453          BEQ         opCMPIL
000013BE                           454          
000013BE  1401                     455          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000013C0  E542                     456          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
000013C2  1802                     457          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
000013C4  4242                     458          CLR         D2                  ; Clear out data register
000013C6  1404                     459          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
000013C8  EA42                     460          ASR         #five,D2            ; Shift the register out to get just the mode
000013CA  1802                     461          MOVE.B      D2,D4               ; Store mode into D4
000013CC  4242                     462          CLR         D2
000013CE                           463          
000013CE  1401                     464          MOVE.B      D1,D2               ; Getting the EA register
000013D0  EB42                     465          ASL         #five,D2
000013D2  1A02                     466          MOVE.B      D2,D5               ; Move just the register into D5
000013D4  4242                     467          CLR         D2                  ; Clearing D2 to put data back
000013D6  1405                     468          MOVE.B      D5,D2               ; Putting back the register
000013D8  EA42                     469          ASR         #five,D2            ; Shifting bits in order to read the register
000013DA  1A02                     470          MOVE.B      D2,D5               ; Store register into D5
000013DC                           471          
000013DC  6000 FC2E                472          BRA         LOOP                ; go back to the loop
000013E0                           473  
000013E0  43F9 000021DB            474  opCMPIB LEA         dispByte, A1        ; Display byte
000013E6  103C 000E                475          MOVE.B      #14, D0             ; command for trap call to display message
000013EA  4E4F                     476          TRAP        #15                 ; trap call
000013EC                           477          
000013EC  43F9 00002148            478          LEA         space, A1           ; Display space
000013F2  103C 000E                479          MOVE.B      #14, D0             ; command for trap call to display message
000013F6  4E4F                     480          TRAP        #15                 ; trap call
000013F8                           481          
000013F8  4242                     482          CLR         D2
000013FA  1401                     483          MOVE.B      D1,D2
000013FC  E642                     484          ASR         #three,D2
000013FE  C47C 0007                485          AND         #seven,D2
00001402  4243                     486          CLR         D3        
00001404  1601                     487          MOVE.B      D1,D3
00001406  C67C 0007                488          AND         #seven,D3
0000140A                           489          
0000140A  4241                     490          CLR         D1
0000140C  3218                     491          MOVE.W      (A0)+, D1
0000140E                           492          
0000140E  43F9 0000214B            493          LEA         hashTag, A1           ; Display space
00001414  103C 000E                494          MOVE.B      #14, D0             ; command for trap call to display message
00001418  4E4F                     495          TRAP        #15                 ; trap call
0000141A                           496          
0000141A  103C 0003                497          MOVE.B      #3, D0
0000141E  4E4F                     498          TRAP        #15
00001420                           499          
00001420  43F9 0000214F            500          LEA         comma, A1           ; Display space
00001426  103C 000E                501          MOVE.B      #14, D0             ; command for trap call to display message
0000142A  4E4F                     502          TRAP        #15                 ; trap call
0000142C                           503          
0000142C  4EB9 00001AF0            504          JSR         printEA
00001432                           505          
00001432  43F9 00002144            506          LEA         newLine, A1           ; Display space
00001438  103C 000E                507          MOVE.B      #14, D0             ; command for trap call to display message
0000143C  4E4F                     508          TRAP        #15                 ; trap call
0000143E                           509  
0000143E  6000 FBCC                510          BRA         LOOP
00001442                           511  
00001442  43F9 000021DE            512  opCMPIW LEA         dispWord, A1        ; Display byte
00001448  103C 000E                513          MOVE.B      #14, D0             ; command for trap call to display message
0000144C  4E4F                     514          TRAP        #15                 ; trap call
0000144E                           515          
0000144E  43F9 00002148            516          LEA         space, A1           ; Display space
00001454  103C 000E                517          MOVE.B      #14, D0             ; command for trap call to display message
00001458  4E4F                     518          TRAP        #15                 ; trap call
0000145A                           519          
0000145A  4242                     520          CLR         D2
0000145C  1401                     521          MOVE.B      D1,D2
0000145E  E642                     522          ASR         #three,D2
00001460  C47C 0007                523          AND         #seven,D2
00001464  4243                     524          CLR         D3        
00001466  1601                     525          MOVE.B      D1,D3
00001468  C67C 0007                526          AND         #seven,D3
0000146C                           527          
0000146C  4241                     528          CLR         D1
0000146E  3218                     529          MOVE.W      (A0)+, D1
00001470                           530          
00001470  43F9 0000214B            531          LEA         hashTag, A1           ; Display space
00001476  103C 000E                532          MOVE.B      #14, D0             ; command for trap call to display message
0000147A  4E4F                     533          TRAP        #15                 ; trap call
0000147C                           534          
0000147C  103C 0003                535          MOVE.B      #3, D0
00001480  4E4F                     536          TRAP        #15
00001482                           537          
00001482  43F9 0000214F            538          LEA         comma, A1           ; Display space
00001488  103C 000E                539          MOVE.B      #14, D0             ; command for trap call to display message
0000148C  4E4F                     540          TRAP        #15                 ; trap call
0000148E                           541          
0000148E  4EB9 00001AF0            542          JSR         printEA
00001494                           543          
00001494  43F9 00002144            544          LEA         newLine, A1           ; Display space
0000149A  103C 000E                545          MOVE.B      #14, D0             ; command for trap call to display message
0000149E  4E4F                     546          TRAP        #15                 ; trap call
000014A0  6000 FB6A                547          BRA         LOOP
000014A4                           548  
000014A4  43F9 000021E1            549  opCMPIL LEA         dispLong, A1        ; Display byte
000014AA  103C 000E                550          MOVE.B      #14, D0             ; command for trap call to display message
000014AE  4E4F                     551          TRAP        #15                 ; trap call
000014B0                           552          
000014B0  43F9 00002148            553          LEA         space, A1           ; Display space
000014B6  103C 000E                554          MOVE.B      #14, D0             ; command for trap call to display message
000014BA  4E4F                     555          TRAP        #15                 ; trap call
000014BC                           556          
000014BC  4242                     557          CLR         D2
000014BE  1401                     558          MOVE.B      D1,D2
000014C0  E642                     559          ASR         #three,D2
000014C2  C47C 0007                560          AND         #seven,D2
000014C6  4243                     561          CLR         D3        
000014C8  1601                     562          MOVE.B      D1,D3
000014CA  C67C 0007                563          AND         #seven,D3
000014CE                           564          
000014CE  4241                     565          CLR         D1
000014D0  3218                     566          MOVE.W      (A0)+, D1
000014D2                           567          
000014D2  43F9 0000214B            568          LEA         hashTag, A1           ; Display space
000014D8  103C 000E                569          MOVE.B      #14, D0             ; command for trap call to display message
000014DC  4E4F                     570          TRAP        #15                 ; trap call
000014DE                           571          
000014DE  103C 0003                572          MOVE.B      #3, D0
000014E2  4E4F                     573          TRAP        #15
000014E4                           574          
000014E4  43F9 0000214F            575          LEA         comma, A1           ; Display space
000014EA  103C 000E                576          MOVE.B      #14, D0             ; command for trap call to display message
000014EE  4E4F                     577          TRAP        #15                 ; trap call
000014F0                           578          
000014F0  4EB9 00001AF0            579          JSR         printEA
000014F6                           580          
000014F6  43F9 00002144            581          LEA         newLine, A1           ; Display space
000014FC  103C 000E                582          MOVE.B      #14, D0             ; command for trap call to display message
00001500  4E4F                     583          TRAP        #15                 ; trap call
00001502                           584          
00001502  6000 FB08                585          BRA         LOOP
00001506                           586  
00001506  43F9 00002162            587  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000150C  103C 000E                588                  MOVE.B      #14, D0             ; command for trap call to display message
00001510  4E4F                     589                  TRAP        #15                 ; trap call
00001512                           590  
00001512  43F9 00002148            591                  LEA         space, A1           ; Display space
00001518  103C 000E                592                  MOVE.B      #14, D0             ; command for trap call to display message
0000151C  4E4F                     593                  TRAP        #15                 ; trap call
0000151E                           594                  
0000151E  4242                     595                  CLR         D2
00001520  1218                     596                  MOVE.B      (A0)+, D1
00001522  1401                     597                  MOVE.B      D1,D2               ; copy data over
00001524  E642                     598                  ASR         #three,D2           ; Shift to the right to remove register
00001526  C47C 0007                599                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
0000152A                           600                  
0000152A  4243                     601                  CLR         D3                  ; Clear D3 so we can move D1 in
0000152C  1601                     602                  MOVE.B      D1,D3               ; Move othr byte in
0000152E  C67C 0007                603                  AND         #seven,D3           ; Set everything besides register to 0
00001532                           604                  
00001532  4241                     605                  CLR         D1
00001534  3218                     606                  MOVE.W      (A0)+, D1
00001536                           607                 
00001536                           608                  
00001536  43F9 0000214B            609                  LEA         hashTag, A1           ; Display space
0000153C  103C 000E                610                  MOVE.B      #14, D0             ; command for trap call to display message
00001540  4E4F                     611                  TRAP        #15                 ; trap call
00001542                           612          
00001542  103C 0003                613                  MOVE.B      #3, D0
00001546  4E4F                     614                  TRAP        #15
00001548                           615          
00001548  43F9 0000214F            616                  LEA         comma, A1           ; Display space
0000154E  103C 000E                617                  MOVE.B      #14, D0             ; command for trap call to display message
00001552  4E4F                     618                  TRAP        #15                 ; trap call
00001554                           619                  
00001554  4EB9 00001AF0            620                  JSR         printEA
0000155A                           621          
0000155A  43F9 00002144            622                  LEA         newLine, A1           ; Display space
00001560  103C 000E                623                  MOVE.B      #14, D0             ; command for trap call to display message
00001564  4E4F                     624                  TRAP        #15                 ; trap call
00001566                           625                  
00001566                           626                  
00001566  6000 FAA4                627                  BRA         LOOP                
0000156A                           628          
0000156A                           629  opDynBCLR       
0000156A  4241                     630                  CLR         D1
0000156C  1218                     631                  MOVE.B      (A0)+,D1            ; Copy second byte in
0000156E  1601                     632                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
00001570  E243                     633                  ASR         #one,D3             ; Shift register over to the end
00001572  C67C 0007                634                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
00001576                           635                  
00001576  1401                     636                  MOVE.B      D1,D2
00001578  EC42                     637                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
0000157A  B47C 0002                638                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
0000157E  6600 0BC0                639                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
00001582                           640  
00001582                           641                  
00001582  43F9 00002162            642                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
00001588  103C 000E                643                  MOVE.B      #14, D0             ; command for trap call to display message
0000158C  4E4F                     644                  TRAP        #15                 ; trap call  
0000158E                           645                  
0000158E  43F9 00002148            646                  LEA         space, A1           ; Display space
00001594  103C 000E                647                  MOVE.B      #14, D0             ; command for trap call to display message
00001598  4E4F                     648                  TRAP        #15                 ; trap call
0000159A                           649                  
0000159A  143C 0000                650                  MOVE.B      #zero,D2                
0000159E  4EB9 00001AF0            651                  JSR         printEA
000015A4                           652                  
000015A4  43F9 0000214F            653                  LEA         comma, A1           ; Display space
000015AA  103C 000E                654                  MOVE.B      #14, D0             ; command for trap call to display message
000015AE  4E4F                     655                  TRAP        #15                 ; trap call
000015B0                           656                  
000015B0  4242                     657                  CLR         D2
000015B2  1401                     658                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000015B4  E642                     659                  ASR         #three,D2           ; Remove/shift the register out
000015B6  C47C 0007                660                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000015BA                           661                  
000015BA  4243                     662                  CLR         D3                  ; Clearing D3 to avoid mashing data
000015BC  1601                     663                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000015BE  C67C 0007                664                  AND         #seven,D3           ; Change all bits except for register bits to 0
000015C2                           665                  
000015C2                           666  
000015C2  4EB9 00001AF0            667                  JSR         printEA
000015C8                           668          
000015C8  43F9 00002144            669                  LEA         newLine, A1           ; Display space
000015CE  103C 000E                670                  MOVE.B      #14, D0             ; command for trap call to display message
000015D2  4E4F                     671                  TRAP        #15                 ; trap call            
000015D4                           672  
000015D4                           673  
000015D4  6000 FA36                674                  BRA         LOOP                ; go back to the loop
000015D8                           675   
000015D8                           676  opMOVEB 
000015D8  43F9 00002167            677          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
000015DE  103C 000E                678          MOVE.B      #14, D0             ; command for trap call to display message
000015E2  4E4F                     679          TRAP        #15                 ; trap call
000015E4  43F9 000021DB            680          LEA         dispByte, A1        ; display byte
000015EA  103C 000E                681          MOVE.B      #14, D0             ; command for trap call to display message
000015EE  4E4F                     682          TRAP        #15                 ; trap call
000015F0  43F9 00002148            683          LEA         space, A1           ; create spaces
000015F6  103C 000E                684          MOVE.B      #14, D0             ; command for trap call to display message
000015FA  4E4F                     685          TRAP        #15                 ; trap call
000015FC                           686          
000015FC                           687          
000015FC  4245                     688          CLR         D5                  ; Clear D5
000015FE  1A01                     689          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001600  E245                     690          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001602  CA7C 0007                691          AND         #seven,D5
00001606                           692          
00001606  4244                     693          CLR         D4                  ; Clear out D4
00001608  1801                     694          MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000160A  C87C 0001                695          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000160E                           696          
0000160E  4241                     697          CLR          D1
00001610  4242                     698          CLR          D2
00001612  1218                     699          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001614  1401                     700          MOVE.B      D1,D2
00001616  EC42                     701          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001618  D842                     702          ADD         D2,D4               ; Adds the remaining bits to D4
0000161A                           703          
0000161A  4242                     704          CLR         D2
0000161C  1401                     705          MOVE.B      D1,D2               ; Copy new byte over to D2
0000161E  E642                     706          ASR         #three,D2           ; Shift source register out
00001620  C47C 0007                707          AND         #seven,D2           ; Set everything to 0 except for the mode
00001624                           708          
00001624  4243                     709          CLR         D3
00001626  1601                     710          MOVE.B      D1,D3
00001628  C67C 0007                711          AND         #seven,D3
0000162C                           712          
0000162C  4EB9 00001AF0            713          JSR         printEA
00001632                           714          
00001632  43F9 0000214F            715          LEA         comma, A1           ; Display space
00001638  103C 000E                716          MOVE.B      #14, D0             ; command for trap call to display message
0000163C  4E4F                     717          TRAP        #15                 ; trap call
0000163E                           718          
0000163E  4242                     719          CLR         D2
00001640  4243                     720          CLR         D3
00001642  1404                     721          MOVE.B      D4,D2
00001644  1605                     722          MOVE.B      D5,D3
00001646                           723          
00001646  4EB9 00001AF0            724          JSR         printEA
0000164C                           725          
0000164C                           726          
0000164C  43F9 00002144            727          LEA         newLine, A1           ; Display space
00001652  103C 000E                728          MOVE.B      #14, D0             ; command for trap call to display message
00001656  4E4F                     729          TRAP        #15                 ; trap call            
00001658                           730  
00001658                           731  
00001658  6000 F9B2                732          BRA         LOOP                ; go back to the loop
0000165C                           733          
0000165C                           734  opMOVEL     
0000165C                           735          
0000165C  4245                     736              CLR         D5                  ; Clear D5
0000165E  1A01                     737              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001660  E245                     738              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001662  CA7C 0007                739              AND         #seven,D5
00001666                           740          
00001666  4244                     741              CLR         D4                  ; Clear out D4
00001668  1801                     742              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000166A  C87C 0001                743              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000166E                           744          
0000166E  4241                     745              CLR          D1
00001670  4242                     746              CLR          D2
00001672  1218                     747              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001674  1401                     748              MOVE.B      D1,D2
00001676  EC42                     749              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001678  D842                     750              ADD         D2,D4               ; Adds the remaining bits to D4
0000167A                           751          
0000167A  B87C 0001                752              CMP         #one,D4             ; Check if it is MOVEA
0000167E  6700 006C                753              BEQ         opMOVEAL            ; If it is, branch off
00001682                           754              
00001682  43F9 00002167            755              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001688  103C 000E                756              MOVE.B      #14, D0             ; command for trap call to display message
0000168C  4E4F                     757              TRAP        #15                 ; trap call  
0000168E                           758              
0000168E                           759              
0000168E  43F9 000021E1            760              LEA         dispLong,A1
00001694  103C 000E                761              MOVE.B      #14, D0             ; command for trap call to display message
00001698  4E4F                     762              TRAP        #15                 ; trap call
0000169A                           763              
0000169A  43F9 00002148            764              LEA         space, A1           ; create spaces
000016A0  103C 000E                765              MOVE.B      #14, D0             ; command for trap call to display message
000016A4  4E4F                     766              TRAP        #15                 ; trap call
000016A6                           767          
000016A6  4242                     768              CLR         D2
000016A8  1401                     769              MOVE.B      D1,D2               ; Copy new byte over to D2
000016AA  E642                     770              ASR         #three,D2           ; Shift source register out
000016AC  C47C 0007                771              AND         #seven,D2           ; Set everything to 0 except for the mode
000016B0                           772          
000016B0  4243                     773              CLR         D3
000016B2  1601                     774              MOVE.B      D1,D3
000016B4  C67C 0007                775              AND         #seven,D3
000016B8                           776              
000016B8  4241                     777              CLR         D1                  ; Clear D1
000016BA  2218                     778              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
000016BC                           779              
000016BC  4EB9 00001AF0            780              JSR         printEA
000016C2                           781              
000016C2  43F9 0000214F            782              LEA         comma, A1           ; Display comma
000016C8  103C 000E                783              MOVE.B      #14, D0             ; command for trap call to display message
000016CC  4E4F                     784              TRAP        #15                 ; trap call
000016CE                           785          
000016CE  4242                     786              CLR         D2
000016D0  4243                     787              CLR         D3
000016D2  1404                     788              MOVE.B      D4,D2
000016D4  1605                     789              MOVE.B      D5,D3
000016D6                           790              
000016D6                           791  
000016D6                           792              
000016D6  4EB9 00001AF0            793              JSR         printEA
000016DC                           794          
000016DC                           795          
000016DC  43F9 00002144            796              LEA         newLine, A1           ; Display space
000016E2  103C 000E                797              MOVE.B      #14, D0             ; command for trap call to display message
000016E6  4E4F                     798              TRAP        #15                 ; trap call            
000016E8                           799  
000016E8                           800  
000016E8  6000 F922                801              BRA         LOOP                ; go back to the loop
000016EC                           802              
000016EC                           803  opMOVEAL
000016EC                           804  
000016EC  43F9 0000216C            805              LEA         MOVEAmatch,A1
000016F2  103C 000E                806              MOVE.B      #14, D0             ; command for trap call to display message
000016F6  4E4F                     807              TRAP        #15                 ; trap call
000016F8                           808              
000016F8  43F9 000021E1            809              LEA         dispLong,A1
000016FE  103C 000E                810              MOVE.B      #14, D0             ; command for trap call to display message
00001702  4E4F                     811              TRAP        #15                 ; trap call
00001704                           812              
00001704                           813  
00001704  43F9 00002148            814              LEA         space, A1           ; create spaces
0000170A  103C 000E                815              MOVE.B      #14, D0             ; command for trap call to display message
0000170E  4E4F                     816              TRAP        #15                 ; trap call
00001710                           817              
00001710  4242                     818              CLR         D2
00001712  1401                     819              MOVE.B      D1,D2               ; Copy new byte over to D2
00001714  E642                     820              ASR         #three,D2           ; Shift source register out
00001716  C47C 0007                821              AND         #seven,D2           ; Set everything to 0 except for the mode
0000171A                           822          
0000171A  4243                     823              CLR         D3
0000171C  1601                     824              MOVE.B      D1,D3
0000171E  C67C 0007                825              AND         #seven,D3
00001722                           826              
00001722  4241                     827              CLR         D1                  ; Clear D1
00001724  3218                     828              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001726                           829              
00001726                           830              
00001726  4EB9 00001AF0            831              JSR         printEA
0000172C                           832              
0000172C  43F9 0000214F            833              LEA         comma, A1           ; Display comma
00001732  103C 000E                834              MOVE.B      #14, D0             ; command for trap call to display message
00001736  4E4F                     835              TRAP        #15                 ; trap call
00001738                           836  
00001738  4242                     837              CLR         D2
0000173A  4243                     838              CLR         D3
0000173C  1404                     839              MOVE.B      D4,D2
0000173E  1605                     840              MOVE.B      D5,D3
00001740                           841          
00001740  4EB9 00001AF0            842              JSR         printEA
00001746                           843          
00001746                           844          
00001746  43F9 00002144            845              LEA         newLine, A1           ; Display space
0000174C  103C 000E                846              MOVE.B      #14, D0             ; command for trap call to display message
00001750  4E4F                     847              TRAP        #15                 ; trap call            
00001752                           848  
00001752                           849  
00001752  6000 F8B8                850              BRA         LOOP                ; go back to the loop
00001756                           851  
00001756                           852  opMOVEW
00001756                           853          
00001756  4245                     854              CLR         D5                  ; Clear D5
00001758  1A01                     855              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000175A  E245                     856              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
0000175C  CA7C 0007                857              AND         #seven,D5
00001760                           858          
00001760  4244                     859              CLR         D4                  ; Clear out D4
00001762  1801                     860              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001764  C87C 0001                861              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001768                           862          
00001768  4241                     863              CLR          D1
0000176A  4242                     864              CLR          D2
0000176C  1218                     865              MOVE.B      (A0)+,D1            ; Copy byte into D1
0000176E  1401                     866              MOVE.B      D1,D2
00001770  EC42                     867              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001772  D842                     868              ADD         D2,D4               ; Adds the remaining bits to D4
00001774                           869          
00001774  B87C 0001                870              CMP         #one,D4             ; Check if it is MOVEA
00001778  6700 006C                871              BEQ         opMOVEAW            ; If it is, branch off
0000177C                           872              
0000177C  43F9 00002167            873              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001782  103C 000E                874              MOVE.B      #14, D0             ; command for trap call to display message
00001786  4E4F                     875              TRAP        #15                 ; trap call  
00001788                           876              
00001788  43F9 000021DE            877              LEA         dispWord,A1
0000178E  103C 000E                878              MOVE.B      #14, D0             ; command for trap call to display message
00001792  4E4F                     879              TRAP        #15                 ; trap call
00001794                           880              
00001794  43F9 00002148            881              LEA         space, A1           ; create spaces
0000179A  103C 000E                882              MOVE.B      #14, D0             ; command for trap call to display message
0000179E  4E4F                     883              TRAP        #15                 ; trap call
000017A0                           884          
000017A0  4242                     885              CLR         D2
000017A2  1401                     886              MOVE.B      D1,D2               ; Copy new byte over to D2
000017A4  E642                     887              ASR         #three,D2           ; Shift source register out
000017A6  C47C 0007                888              AND         #seven,D2           ; Set everything to 0 except for the mode
000017AA                           889          
000017AA  4243                     890              CLR         D3
000017AC  1601                     891              MOVE.B      D1,D3
000017AE  C67C 0007                892              AND         #seven,D3
000017B2                           893              
000017B2  4241                     894              CLR         D1                  ; Clear D1
000017B4  3218                     895              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
000017B6                           896              
000017B6  4EB9 00001AF0            897              JSR         printEA
000017BC                           898              
000017BC  43F9 0000214F            899              LEA         comma, A1           ; Display comma
000017C2  103C 000E                900              MOVE.B      #14, D0             ; command for trap call to display message
000017C6  4E4F                     901              TRAP        #15                 ; trap call
000017C8                           902          
000017C8  4242                     903              CLR         D2
000017CA  4243                     904              CLR         D3
000017CC  1404                     905              MOVE.B      D4,D2
000017CE  1605                     906              MOVE.B      D5,D3
000017D0                           907              
000017D0                           908  
000017D0                           909              
000017D0  4EB9 00001AF0            910              JSR         printEA
000017D6                           911          
000017D6                           912          
000017D6  43F9 00002144            913              LEA         newLine, A1           ; Display space
000017DC  103C 000E                914              MOVE.B      #14, D0             ; command for trap call to display message
000017E0  4E4F                     915              TRAP        #15                 ; trap call            
000017E2                           916  
000017E2                           917  
000017E2  6000 F828                918              BRA         LOOP                ; go back to the loop
000017E6                           919  opMOVEAW  
000017E6  43F9 0000216C            920              LEA         MOVEAmatch,A1
000017EC  103C 000E                921              MOVE.B      #14, D0             ; command for trap call to display message
000017F0  4E4F                     922              TRAP        #15                 ; trap call
000017F2                           923              
000017F2  43F9 000021DE            924              LEA         dispWord,A1
000017F8  103C 000E                925              MOVE.B      #14, D0             ; command for trap call to display message
000017FC  4E4F                     926              TRAP        #15                 ; trap call
000017FE                           927              
000017FE                           928  
000017FE  43F9 00002148            929              LEA         space, A1           ; create spaces
00001804  103C 000E                930              MOVE.B      #14, D0             ; command for trap call to display message
00001808  4E4F                     931              TRAP        #15                 ; trap call
0000180A                           932              
0000180A  4242                     933              CLR         D2
0000180C  1401                     934              MOVE.B      D1,D2               ; Copy new byte over to D2
0000180E  E642                     935              ASR         #three,D2           ; Shift source register out
00001810  C47C 0007                936              AND         #seven,D2           ; Set everything to 0 except for the mode
00001814                           937          
00001814  4243                     938              CLR         D3
00001816  1601                     939              MOVE.B      D1,D3
00001818  C67C 0007                940              AND         #seven,D3
0000181C                           941              
0000181C  4241                     942              CLR         D1                  ; Clear D1
0000181E  3218                     943              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001820                           944              
00001820                           945              
00001820  4EB9 00001AF0            946              JSR         printEA
00001826                           947              
00001826  43F9 0000214F            948              LEA         comma, A1           ; Display comma
0000182C  103C 000E                949              MOVE.B      #14, D0             ; command for trap call to display message
00001830  4E4F                     950              TRAP        #15                 ; trap call
00001832                           951  
00001832  4242                     952              CLR         D2
00001834  4243                     953              CLR         D3
00001836  1404                     954              MOVE.B      D4,D2
00001838  1605                     955              MOVE.B      D5,D3
0000183A                           956          
0000183A  4EB9 00001AF0            957              JSR         printEA
00001840                           958          
00001840                           959          
00001840  43F9 00002144            960              LEA         newLine, A1           ; Display space
00001846  103C 000E                961              MOVE.B      #14, D0             ; command for trap call to display message
0000184A  4E4F                     962              TRAP        #15                 ; trap call            
0000184C                           963  
0000184C                           964  
0000184C  6000 F7BE                965              BRA         LOOP                ; go back to the loop
00001850                           966  
00001850                           967  opNEG   
00001850  43F9 00002172            968              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001856  103C 000E                969              MOVE.B      #14, D0             ; command for trap call to display message
0000185A  4E4F                     970              TRAP        #15                 ; trap call
0000185C                           971          
0000185C                           972          
0000185C  1218                     973              MOVE.B      (A0)+, D1
0000185E  1401                     974              MOVE.B      D1,D2               ; copy data over
00001860  EC42                     975              ASR         #six,D2
00001862                           976              
00001862  B47C 0000                977              CMP         #zero,D2
00001866  6700 0016                978              BEQ         opNEGB
0000186A  B47C 0001                979              CMP         #one,D2
0000186E  6700 004E                980              BEQ         opNEGL
00001872  B47C 0002                981              CMP         #two,D2
00001876  6700 0086                982              BEQ         opNEGW
0000187A  6000 08BE                983              BRA         INVALID
0000187E                           984  opNEGB
0000187E                           985  
0000187E  43F9 000021DB            986              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001884  103C 000E                987              MOVE.B      #14, D0             ; command for trap call to display message
00001888  4E4F                     988              TRAP        #15                 ; trap call
0000188A                           989          
0000188A  43F9 00002148            990              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001890  103C 000E                991              MOVE.B      #14, D0             ; command for trap call to display message
00001894  4E4F                     992              TRAP        #15                 ; trap call
00001896                           993          
00001896  4242                     994              CLR         D2                  ; Clear Data register 2
00001898  3401                     995              MOVE        D1,D2               ; Move byte into D2
0000189A  E642                     996              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000189C  C47C 0007                997              AND         #seven,D2           ; Stores mode
000018A0                           998              
000018A0  4243                     999              CLR         D3
000018A2  3601                    1000              MOVE        D1,D3
000018A4  C67C 0007               1001              AND         #seven,D3
000018A8                          1002          
000018A8  4EB9 00001AF0           1003              JSR         printEA
000018AE                          1004                  
000018AE  43F9 00002144           1005              LEA         newLine, A1           ; Display space
000018B4  103C 000E               1006              MOVE.B      #14, D0             ; command for trap call to display message
000018B8  4E4F                    1007              TRAP        #15                 ; trap call  
000018BA                          1008          
000018BA  6000 F750               1009              BRA         LOOP
000018BE                          1010                  
000018BE                          1011  
000018BE                          1012  opNEGL
000018BE                          1013  
000018BE  43F9 000021E1           1014              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
000018C4  103C 000E               1015              MOVE.B      #14, D0             ; command for trap call to display message
000018C8  4E4F                    1016              TRAP        #15                 ; trap call
000018CA                          1017  
000018CA  43F9 00002148           1018              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000018D0  103C 000E               1019              MOVE.B      #14, D0             ; command for trap call to display message
000018D4  4E4F                    1020              TRAP        #15                 ; trap call
000018D6                          1021                  
000018D6  4242                    1022              CLR         D2                  ; Clear Data register 2
000018D8  3401                    1023              MOVE        D1,D2               ; Move byte into D2
000018DA  E642                    1024              ASR         #three,D2           ; Shift mode into place and moves mode into place
000018DC  C47C 0007               1025              AND         #seven,D2           ; Stores mode
000018E0                          1026          
000018E0  4243                    1027              CLR         D3
000018E2  3601                    1028              MOVE        D1,D3
000018E4  C67C 0007               1029              AND         #seven,D3
000018E8                          1030          
000018E8  4EB9 00001AF0           1031              JSR         printEA
000018EE                          1032                      
000018EE  43F9 00002144           1033              LEA         newLine, A1         ; Display space
000018F4  103C 000E               1034              MOVE.B      #14, D0             ; command for trap call to display message
000018F8  4E4F                    1035              TRAP        #15                 ; trap call  
000018FA                          1036          
000018FA  6000 F710               1037              BRA         LOOP
000018FE                          1038          
000018FE                          1039  
000018FE                          1040  opNEGW
000018FE                          1041  
000018FE  43F9 000021DE           1042              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001904  103C 000E               1043              MOVE.B      #14, D0             ; command for trap call to display message
00001908  4E4F                    1044              TRAP        #15                 ; trap call
0000190A                          1045          
0000190A  43F9 00002148           1046              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001910  103C 000E               1047              MOVE.B      #14, D0             ; command for trap call to display message
00001914  4E4F                    1048              TRAP        #15                 ; trap call        
00001916                          1049                  
00001916  4242                    1050              CLR         D2                  ; Clear Data register 2
00001918  3401                    1051              MOVE        D1,D2               ; Move byte into D2
0000191A  E642                    1052              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000191C  C47C 0007               1053              AND         #seven,D2           ; Stores mode
00001920                          1054          
00001920  4243                    1055              CLR         D3
00001922  3601                    1056              MOVE        D1,D3
00001924  C67C 0007               1057              AND         #seven,D3
00001928                          1058          
00001928  4EB9 00001AF0           1059              JSR         printEA
0000192E                          1060              
0000192E  43F9 00002144           1061              LEA         newLine, A1           ; Display space
00001934  103C 000E               1062              MOVE.B      #14, D0             ; command for trap call to display message
00001938  4E4F                    1063              TRAP        #15                 ; trap call  
0000193A                          1064          
0000193A  6000 F6D0               1065              BRA         LOOP
0000193E                          1066  
0000193E                          1067  opRTSJSR
0000193E                          1068          
0000193E  1218                    1069              MOVE.B      (A0)+, D1
00001940                          1070              
00001940  1401                    1071              MOVE.B      D1,D2               ; copy data over
00001942  B47C 0075               1072              CMP         #117,D2
00001946  6700 0050               1073              BEQ         opRTS
0000194A                          1074              
0000194A  EC42                    1075              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
0000194C  B47C 0002               1076              CMP         #two,D2             ; Checking if it is JSR
00001950  6700 0006               1077              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001954                          1078  
00001954  6000 07E4               1079              BRA         invalid
00001958                          1080  
00001958                          1081  opJSR
00001958                          1082                        
00001958  43F9 0000217A           1083              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
0000195E  103C 000E               1084              MOVE.B      #14, D0             ; command for trap call to display message
00001962  4E4F                    1085              TRAP        #15                 ; trap call
00001964                          1086              
00001964  43F9 00002148           1087              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000196A  103C 000E               1088              MOVE.B      #14, D0             ; command for trap call to display message
0000196E  4E4F                    1089              TRAP        #15                 ; trap call
00001970                          1090              
00001970  4242                    1091              CLR         D2
00001972  4243                    1092              CLR         D3
00001974                          1093              
00001974  1401                    1094              MOVE.B      D1,D2
00001976  E642                    1095              ASR         #three,D2
00001978  C47C 0007               1096              AND         #seven,D2
0000197C                          1097              
0000197C  1601                    1098              MOVE.B      D1,D3
0000197E  C67C 0007               1099              AND         #seven,D3
00001982                          1100              
00001982  4EB9 00001AF0           1101              JSR         printEA
00001988                          1102              
00001988  43F9 00002144           1103              LEA         newLine, A1           ; Display space
0000198E  103C 000E               1104              MOVE.B      #14, D0             ; command for trap call to display message
00001992  4E4F                    1105              TRAP        #15                 ; trap call  
00001994                          1106              
00001994  6000 F676               1107              BRA         loop            
00001998                          1108  opRTS
00001998                          1109  
00001998  43F9 00002176           1110              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
0000199E  103C 000E               1111              MOVE.B      #14, D0             ; command for trap call to display message
000019A2  4E4F                    1112              TRAP        #15                 ; trap call
000019A4                          1113              
000019A4  43F9 00002144           1114              LEA         newLine, A1           ; Display space
000019AA  103C 000E               1115              MOVE.B      #14, D0             ; command for trap call to display message
000019AE  4E4F                    1116              TRAP        #15                 ; trap call 
000019B0                          1117              
000019B0  6000 F65A               1118              BRA         loop
000019B4                          1119  
000019B4                          1120  opMOVEMLEA
000019B4  4242                    1121              CLR         D2                  ; Clear D2
000019B6  1401                    1122              MOVE.B      D1,D2               ; Copy byte over
000019B8  C47C 000F               1123              AND         #secNib,D2          ; Check only the second nibble
000019BC  B47C 000C               1124              CMP         #twelve,D2          ; Compare the second nibble to twelve
000019C0  6700 000E               1125              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
000019C4  B47C 0008               1126              CMP         #eight,D2           ; Compare the second nibble to eight
000019C8  6700 0006               1127              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
000019CC  6000 001A               1128              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
000019D0                          1129              
000019D0                          1130  opMOVEM
000019D0                          1131  
000019D0  43F9 00002176           1132              LEA         RTSMatch, A1       ; we know that the opcode will be MOVEM, so load A1 to print message
000019D6  103C 000E               1133              MOVE.B      #14, D0             ; command for trap call to display message
000019DA  4E4F                    1134              TRAP        #15                 ; trap call
000019DC                          1135              
000019DC  4244                    1136              CLR         D4                  ; Clearing D4 to store dr field
000019DE  1801                    1137              MOVE.B      D1,D4               ; Moving byte to find dr field
000019E0  E444                    1138              ASR         #two,D4             ; Moving dr field to readable spot
000019E2  C87C 0001               1139              AND         #one,D4             ; seting everything except dr to 0
000019E6                          1140              
000019E6  1218                    1141              MOVE.B      (A0)+, D1
000019E8                          1142              
000019E8                          1143  
000019E8                          1144  opLEA
000019E8                          1145  
000019E8                          1146  ***********************************************************************************************************
000019E8                          1147  *
000019E8                          1148  *               SUBQ OPCODE
000019E8                          1149  *
000019E8                          1150  ***********************************************************************************************************
000019E8                          1151  
000019E8                          1152  opSUBQ      
000019E8  43F9 00002188           1153              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
000019EE  103C 000E               1154              MOVE.B      #14, D0             ; command for trap call to display message
000019F2  4E4F                    1155              TRAP        #15                 ; trap call
000019F4                          1156  
000019F4                          1157  ***********************************************************************************************************
000019F4                          1158  *
000019F4                          1159  *               BRA OPCODE
000019F4                          1160  *
000019F4                          1161  ***********************************************************************************************************
000019F4                          1162              
000019F4  43F9 0000218D           1163  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
000019FA  103C 000E               1164          MOVE.B      #14, D0             ; command for trap call to display message
000019FE  4E4F                    1165          TRAP        #15                 ; trap call
00001A00                          1166          
00001A00  4242                    1167          CLR         D2
00001A02  4243                    1168          CLR         D3      
00001A04                          1169  
00001A04  43F9 00002148           1170          LEA         space,A1
00001A0A  103C 000E               1171          MOVE.B      #14,D0
00001A0E  4E4F                    1172          TRAP        #15
00001A10                          1173          
00001A10  143C 0007               1174          MOVE.B      #seven,D2
00001A14  1218                    1175          MOVE.B      (A0)+,D1
00001A16  4EB9 00001AF0           1176          JSR         printEA
00001A1C                          1177          
00001A1C  43F9 00002144           1178          LEA         newLine, A1           ; create new line
00001A22  103C 000E               1179          MOVE.B      #14, D0             ; command for trap call to display message
00001A26  4E4F                    1180          TRAP        #15                 ; trap call
00001A28                          1181  
00001A28  6000 F5E2               1182          BRA         LOOP
00001A2C                          1183          
00001A2C                          1184          
00001A2C  43F9 00002191           1185  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001A32  103C 000E               1186          MOVE.B      #14, D0             ; command for trap call to display message
00001A36  4E4F                    1187          TRAP        #15                 ; trap call
00001A38                          1188  
00001A38  43F9 00002195           1189  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001A3E  103C 000E               1190          MOVE.B      #14, D0             ; command for trap call to display message
00001A42  4E4F                    1191          TRAP        #15                 ; trap call
00001A44                          1192  
00001A44  43F9 00002199           1193  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001A4A  103C 000E               1194          MOVE.B      #14, D0             ; command for trap call to display message
00001A4E  4E4F                    1195          TRAP        #15                 ; trap call
00001A50                          1196  
00001A50  43F9 0000219D           1197  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001A56  103C 000E               1198          MOVE.B      #14, D0             ; command for trap call to display message
00001A5A  4E4F                    1199          TRAP        #15                 ; trap call
00001A5C                          1200  
00001A5C                          1201  ***********************************************************************************************************
00001A5C                          1202  *
00001A5C                          1203  *               SUB OPCODE
00001A5C                          1204  *
00001A5C                          1205  ***********************************************************************************************************
00001A5C                          1206  
00001A5C  43F9 000021A9           1207  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001A62  103C 000E               1208          MOVE.B      #14, D0             ; command for trap call to display message
00001A66  4E4F                    1209          TRAP        #15                 ; trap call
00001A68                          1210          
00001A68                          1211          
00001A68                          1212          
00001A68  43F9 00002148           1213          LEA         space,A1
00001A6E  103C 000E               1214          MOVE.B      #14,D0
00001A72  4E4F                    1215          TRAP        #15
00001A74                          1216          
00001A74  1218                    1217          MOVE.B      (A0)+,D1
00001A76  1401                    1218          MOVE.B      D1,D2
00001A78  E842                    1219          ASR         #4,D2
00001A7A                          1220          
00001A7A  4EB9 00001AF0           1221          JSR         printEA
00001A80                          1222          
00001A80  43F9 00002144           1223          LEA         newLine,A1
00001A86  103C 000E               1224          MOVE.B      #14,D0
00001A8A  4E4F                    1225          TRAP        #15
00001A8C                          1226          
00001A8C  6000 F57E               1227          BRA         LOOP
00001A90                          1228          
00001A90                          1229          
00001A90                          1230          
00001A90  43F9 000021B5           1231  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001A96  103C 000E               1232          MOVE.B      #14, D0             ; command for trap call to display message
00001A9A  4E4F                    1233          TRAP        #15                 ; trap call
00001A9C                          1234  
00001A9C  43F9 000021CF           1235  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001AA2  103C 000E               1236          MOVE.B      #14, D0             ; command for trap call to display message
00001AA6  4E4F                    1237          TRAP        #15                 ; trap call
00001AA8                          1238  
00001AA8  43F9 000021CB           1239  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001AAE  103C 000E               1240          MOVE.B      #14, D0             ; command for trap call to display message
00001AB2  4E4F                    1241          TRAP        #15                 ; trap call
00001AB4                          1242  
00001AB4  43F9 000021C7           1243  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00001ABA  103C 000E               1244          MOVE.B      #14, D0             ; command for trap call to display message
00001ABE  4E4F                    1245          TRAP        #15                 ; trap call
00001AC0                          1246  
00001AC0  43F9 000021C3           1247  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001AC6  103C 000E               1248          MOVE.B      #14, D0             ; command for trap call to display message
00001ACA  4E4F                    1249          TRAP        #15                 ; trap call
00001ACC                          1250  
00001ACC  43F9 000021D7           1251  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001AD2  103C 000E               1252          MOVE.B      #14, D0             ; command for trap call to display message
00001AD6  4E4F                    1253          TRAP        #15                 ; trap call
00001AD8                          1254  
00001AD8  43F9 000021D3           1255  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001ADE  103C 000E               1256          MOVE.B      #14, D0             ; command for trap call to display message
00001AE2  4E4F                    1257          TRAP        #15                 ; trap call
00001AE4                          1258  
00001AE4                          1259  ***********************************************************************************************************
00001AE4                          1260  *
00001AE4                          1261  *                                           Register Finder
00001AE4                          1262  *
00001AE4                          1263  ***********************************************************************************************************
00001AE4  48E7 FF7E               1264  findRege    MOVEM.L     D0-D7/A1-A6, -(SP)
00001AE8                          1265  
00001AE8  1401                    1266              MOVE.B      D1,D2
00001AEA  E842                    1267              ASR         #four,D2
00001AEC  6000 003A               1268              BRA         pDataReg
00001AF0                          1269          
00001AF0                          1270  ***********************************************************************************************************
00001AF0                          1271  *
00001AF0                          1272  *                                           EA Print Check
00001AF0                          1273  *
00001AF0                          1274  ***********************************************************************************************************
00001AF0  48E7 FF7E               1275  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00001AF4                          1276  
00001AF4  B43C 0000               1277              CMP.B       #zero, D2
00001AF8  6700 002E               1278              BEQ         pDataReg
00001AFC  B43C 0001               1279              CMP.B       #one, D2
00001B00  6700 00E6               1280              BEQ         pAddrReg
00001B04  B43C 0002               1281              CMP.B       #two, D2
00001B08  6700 019E               1282              BEQ         pAddrDir
00001B0C  B43C 0003               1283              CMP.B       #three, D2
00001B10  6700 02C2               1284              BEQ         pAddrPost
00001B14  B43C 0004               1285              CMP.B       #four, D2
00001B18  6700 0446               1286              BEQ         pAddrDec
00001B1C  B43C 0007               1287              CMP.B       #seven, D2
00001B20  6700 0576               1288              BEQ         pHex
00001B24  6000 0614               1289              BRA         invalid
00001B28                          1290  
00001B28                          1291  ***********************************************************************************************************
00001B28                          1292  * Data Register        
00001B28  B63C 0000               1293  pDataReg    CMP.B   #zero,D3
00001B2C  6700 003A               1294              BEQ     displayD0
00001B30  B63C 0001               1295              CMP.B   #one,D3
00001B34  6700 0042               1296              BEQ     displayD1
00001B38  B63C 0002               1297              CMP.B   #two,D3
00001B3C  6700 004A               1298              BEQ     displayD2
00001B40  B63C 0003               1299              CMP.B   #three,D3
00001B44  6700 0052               1300              BEQ     displayD3
00001B48  B63C 0004               1301              CMP.B   #four,D3
00001B4C  6700 005A               1302              BEQ     displayD4
00001B50  B63C 0005               1303              CMP.B   #five,D3
00001B54  6700 0062               1304              BEQ     displayD5
00001B58  B63C 0006               1305              CMP.B   #six,D3
00001B5C  6700 006A               1306              BEQ     displayD6
00001B60  B63C 0007               1307              CMP.B   #seven,D3
00001B64  6700 0072               1308              BEQ     displayD7
00001B68                          1309              
00001B68  43F9 000021FE           1310  displayD0   LEA         dispD0, A1          ; Display space
00001B6E  103C 000E               1311              MOVE.B      #14, D0             ; command for trap call to display message
00001B72  4E4F                    1312              TRAP        #15                 ; trap call
00001B74  6000 05C4               1313              BRA         endSUB              ; go to the end of the subroutine
00001B78                          1314              
00001B78  43F9 00002201           1315  displayD1   LEA         dispD1, A1          ; Display space
00001B7E  103C 000E               1316              MOVE.B      #14, D0             ; command for trap call to display message
00001B82  4E4F                    1317              TRAP        #15                 ; trap call
00001B84  6000 05B4               1318              BRA         endSUB              ; go to the end of the subroutine
00001B88                          1319  
00001B88  43F9 00002204           1320  displayD2   LEA         dispD2, A1          ; Display space
00001B8E  103C 000E               1321              MOVE.B      #14, D0             ; command for trap call to display message
00001B92  4E4F                    1322              TRAP        #15                 ; trap call
00001B94  6000 05A4               1323              BRA         endSUB              ; go to the end of the subroutine
00001B98                          1324  
00001B98  43F9 00002207           1325  displayD3   LEA         dispD3, A1          ; Display space
00001B9E  103C 000E               1326              MOVE.B      #14, D0             ; command for trap call to display message
00001BA2  4E4F                    1327              TRAP        #15                 ; trap call
00001BA4  6000 0594               1328              BRA         endSUB              ; go to the end of the subroutine
00001BA8                          1329  
00001BA8  43F9 0000220A           1330  displayD4   LEA         dispD4, A1          ; Display space
00001BAE  103C 000E               1331              MOVE.B      #14, D0             ; command for trap call to display message
00001BB2  4E4F                    1332              TRAP        #15                 ; trap call
00001BB4  6000 0584               1333              BRA         endSUB              ; go to the end of the subroutine
00001BB8                          1334  
00001BB8  43F9 0000220D           1335  displayD5   LEA         dispD5, A1          ; Display space
00001BBE  103C 000E               1336              MOVE.B      #14, D0             ; command for trap call to display message
00001BC2  4E4F                    1337              TRAP        #15                 ; trap call
00001BC4  6000 0574               1338              BRA         endSUB              ; go to the end of the subroutine
00001BC8                          1339  
00001BC8  43F9 00002210           1340  displayD6   LEA         dispD6, A1          ; Display space
00001BCE  103C 000E               1341              MOVE.B      #14, D0             ; command for trap call to display message
00001BD2  4E4F                    1342              TRAP        #15                 ; trap call
00001BD4  6000 0564               1343              BRA         endSUB              ; go to the end of the subroutine
00001BD8                          1344  
00001BD8  43F9 00002213           1345  displayD7   LEA         dispD7, A1          ; Display space
00001BDE  103C 000E               1346              MOVE.B      #14, D0             ; command for trap call to display message
00001BE2  4E4F                    1347              TRAP        #15                 ; trap call
00001BE4  6000 0554               1348              BRA         endSUB              ; go to the end of the subroutine
00001BE8                          1349  ***********************************************************************************************************
00001BE8                          1350  * Address Register
00001BE8  B63C 0000               1351  pAddrReg    CMP.B   #zero,D3
00001BEC  6700 003A               1352              BEQ     displayA0
00001BF0  B63C 0001               1353              CMP.B   #one,D3
00001BF4  6700 0042               1354              BEQ     displayA1
00001BF8  B63C 0002               1355              CMP.B   #two,D3
00001BFC  6700 004A               1356              BEQ     displayA2
00001C00  B63C 0003               1357              CMP.B   #three,D3
00001C04  6700 0052               1358              BEQ     displayA3
00001C08  B63C 0004               1359              CMP.B   #four,D3
00001C0C  6700 005A               1360              BEQ     displayA4
00001C10  B63C 0005               1361              CMP.B   #five,D3
00001C14  6700 0062               1362              BEQ     displayA5
00001C18  B63C 0006               1363              CMP.B   #six,D3
00001C1C  6700 006A               1364              BEQ     displayA6
00001C20  B63C 0007               1365              CMP.B   #seven,D3
00001C24  6700 0072               1366              BEQ     displayA7
00001C28                          1367              
00001C28  43F9 000021E4           1368  displayA0   LEA         dispA0, A1          ; Display space
00001C2E  103C 000E               1369              MOVE.B      #14, D0             ; command for trap call to display message
00001C32  4E4F                    1370              TRAP        #15                 ; trap call
00001C34  6000 0504               1371              BRA         endSUB              ; go to the end of the subroutine
00001C38                          1372              
00001C38  43F9 000021E7           1373  displayA1   LEA         dispA1, A1          ; Display space
00001C3E  103C 000E               1374              MOVE.B      #14, D0             ; command for trap call to display message
00001C42  4E4F                    1375              TRAP        #15                 ; trap call
00001C44  6000 04F4               1376              BRA         endSUB              ; go to the end of the subroutine
00001C48                          1377  
00001C48  43F9 000021EA           1378  displayA2   LEA         dispA2, A1          ; Display space
00001C4E  103C 000E               1379              MOVE.B      #14, D0             ; command for trap call to display message
00001C52  4E4F                    1380              TRAP        #15                 ; trap call
00001C54  6000 04E4               1381              BRA         endSUB              ; go to the end of the subroutine
00001C58                          1382  
00001C58  43F9 000021ED           1383  displayA3   LEA         dispA3, A1          ; Display space
00001C5E  103C 000E               1384              MOVE.B      #14, D0             ; command for trap call to display message
00001C62  4E4F                    1385              TRAP        #15                 ; trap call
00001C64  6000 04D4               1386              BRA         endSUB              ; go to the end of the subroutine
00001C68                          1387  
00001C68  43F9 000021F0           1388  displayA4   LEA         dispA4, A1          ; Display space
00001C6E  103C 000E               1389              MOVE.B      #14, D0             ; command for trap call to display message
00001C72  4E4F                    1390              TRAP        #15                 ; trap call
00001C74  6000 04C4               1391              BRA         endSUB              ; go to the end of the subroutine
00001C78                          1392  
00001C78  43F9 000021F3           1393  displayA5   LEA         dispA5, A1          ; Display space
00001C7E  103C 000E               1394              MOVE.B      #14, D0             ; command for trap call to display message
00001C82  4E4F                    1395              TRAP        #15                 ; trap call
00001C84  6000 04B4               1396              BRA         endSUB              ; go to the end of the subroutine
00001C88                          1397  
00001C88  43F9 000021F6           1398  displayA6   LEA         dispA6, A1          ; Display space
00001C8E  103C 000E               1399              MOVE.B      #14, D0             ; command for trap call to display message
00001C92  4E4F                    1400              TRAP        #15                 ; trap call
00001C94  6000 04A4               1401              BRA         endSUB              ; go to the end of the subroutine
00001C98                          1402  
00001C98  43F9 000021F9           1403  displayA7   LEA         dispA7, A1          ; Display space
00001C9E  103C 000E               1404              MOVE.B      #14, D0             ; command for trap call to display message
00001CA2  4E4F                    1405              TRAP        #15                 ; trap call
00001CA4  6000 0494               1406              BRA         endSUB              ; go to the end of the subroutine
00001CA8                          1407  
00001CA8                          1408  ***********************************************************************************************************
00001CA8                          1409  * Address Register Direct
00001CA8                          1410  
00001CA8  43F9 00002151           1411  pAddrDir    LEA         opPer, A1           ; Display space
00001CAE  103C 000E               1412              MOVE.B      #14, D0             ; command for trap call to display message
00001CB2  4E4F                    1413              TRAP        #15                 ; trap call
00001CB4                          1414              
00001CB4  B63C 0000               1415              CMP.B   #zero,D3
00001CB8  6700 003A               1416              BEQ     displayA0A
00001CBC  B63C 0001               1417              CMP.B   #one,D3
00001CC0  6700 004E               1418              BEQ     displayA1A
00001CC4  B63C 0002               1419              CMP.B   #two,D3
00001CC8  6700 0062               1420              BEQ     displayA2A
00001CCC  B63C 0003               1421              CMP.B   #three,D3
00001CD0  6700 0076               1422              BEQ     displayA3A
00001CD4  B63C 0004               1423              CMP.B   #four,D3
00001CD8  6700 008A               1424              BEQ     displayA4A
00001CDC  B63C 0005               1425              CMP.B   #five,D3
00001CE0  6700 009E               1426              BEQ     displayA5A
00001CE4  B63C 0006               1427              CMP.B   #six,D3
00001CE8  6700 00B2               1428              BEQ     displayA6A
00001CEC  B63C 0007               1429              CMP.B   #seven,D3
00001CF0  6700 00C6               1430              BEQ     displayA7A
00001CF4                          1431              
00001CF4  43F9 000021E4           1432  displayA0A  LEA         dispA0, A1          ; Display space
00001CFA  103C 000E               1433              MOVE.B      #14, D0             ; command for trap call to display message
00001CFE  4E4F                    1434              TRAP        #15                 ; trap call
00001D00  43F9 00002153           1435              LEA         clPer, A1           ; Display space
00001D06  103C 000E               1436              MOVE.B      #14, D0             ; command for trap call to display message
00001D0A  4E4F                    1437              TRAP        #15                 ; trap call
00001D0C  6000 042C               1438              BRA         endSUB              ; go to the end of the subroutine
00001D10                          1439              
00001D10  43F9 000021E7           1440  displayA1A  LEA         dispA1, A1          ; Display space
00001D16  103C 000E               1441              MOVE.B      #14, D0             ; command for trap call to display message
00001D1A  4E4F                    1442              TRAP        #15                 ; trap call
00001D1C  43F9 00002153           1443              LEA         clPer, A1           ; Display space
00001D22  103C 000E               1444              MOVE.B      #14, D0             ; command for trap call to display message
00001D26  4E4F                    1445              TRAP        #15                 ; trap call
00001D28  6000 0410               1446              BRA         endSUB              ; go to the end of the subroutine
00001D2C                          1447  
00001D2C  43F9 000021EA           1448  displayA2A  LEA         dispA2, A1          ; Display space
00001D32  103C 000E               1449              MOVE.B      #14, D0             ; command for trap call to display message
00001D36  4E4F                    1450              TRAP        #15                 ; trap call
00001D38  43F9 00002153           1451              LEA         clPer, A1           ; Display space
00001D3E  103C 000E               1452              MOVE.B      #14, D0             ; command for trap call to display message
00001D42  4E4F                    1453              TRAP        #15                 ; trap call
00001D44  6000 03F4               1454              BRA         endSUB              ; go to the end of the subroutine
00001D48                          1455  
00001D48  43F9 000021ED           1456  displayA3A  LEA         dispA3, A1          ; Display space
00001D4E  103C 000E               1457              MOVE.B      #14, D0             ; command for trap call to display message
00001D52  4E4F                    1458              TRAP        #15                 ; trap call
00001D54  43F9 00002153           1459              LEA         clPer, A1           ; Display space
00001D5A  103C 000E               1460              MOVE.B      #14, D0             ; command for trap call to display message
00001D5E  4E4F                    1461              TRAP        #15                 ; trap call
00001D60  6000 03D8               1462              BRA         endSUB              ; go to the end of the subroutine
00001D64                          1463  
00001D64  43F9 000021F0           1464  displayA4A  LEA         dispA4, A1          ; Display space
00001D6A  103C 000E               1465              MOVE.B      #14, D0             ; command for trap call to display message
00001D6E  4E4F                    1466              TRAP        #15                 ; trap call
00001D70  43F9 00002153           1467              LEA         clPer, A1           ; Display space
00001D76  103C 000E               1468              MOVE.B      #14, D0             ; command for trap call to display message
00001D7A  4E4F                    1469              TRAP        #15                 ; trap call
00001D7C  6000 03BC               1470              BRA         endSUB              ; go to the end of the subroutine
00001D80                          1471  
00001D80  43F9 000021F3           1472  displayA5A  LEA         dispA5, A1          ; Display space
00001D86  103C 000E               1473              MOVE.B      #14, D0             ; command for trap call to display message
00001D8A  4E4F                    1474              TRAP        #15                 ; trap call
00001D8C  43F9 00002153           1475              LEA         clPer, A1           ; Display space
00001D92  103C 000E               1476              MOVE.B      #14, D0             ; command for trap call to display message
00001D96  4E4F                    1477              TRAP        #15                 ; trap call
00001D98  6000 03A0               1478              BRA         endSUB              ; go to the end of the subroutine
00001D9C                          1479  
00001D9C  43F9 000021F6           1480  displayA6A  LEA         dispA6, A1          ; Display space
00001DA2  103C 000E               1481              MOVE.B      #14, D0             ; command for trap call to display message
00001DA6  4E4F                    1482              TRAP        #15                 ; trap call
00001DA8  43F9 00002153           1483              LEA         clPer, A1           ; Display space
00001DAE  103C 000E               1484              MOVE.B      #14, D0             ; command for trap call to display message
00001DB2  4E4F                    1485              TRAP        #15                 ; trap call
00001DB4  6000 0384               1486              BRA         endSUB              ; go to the end of the subroutine
00001DB8                          1487  
00001DB8  43F9 000021F9           1488  displayA7A  LEA         dispA7, A1          ; Display space
00001DBE  103C 000E               1489              MOVE.B      #14, D0             ; command for trap call to display message
00001DC2  4E4F                    1490              TRAP        #15                 ; trap call
00001DC4  43F9 00002153           1491              LEA         clPer, A1           ; Display space
00001DCA  103C 000E               1492              MOVE.B      #14, D0             ; command for trap call to display message
00001DCE  4E4F                    1493              TRAP        #15                 ; trap call
00001DD0  6000 0368               1494              BRA         endSUB              ; go to the end of the subroutine
00001DD4                          1495              
00001DD4                          1496  ***********************************************************************************************************
00001DD4                          1497  * Addr Postincrement
00001DD4                          1498              
00001DD4  43F9 00002151           1499  pAddrPost   LEA         opPer, A1           ; Display space
00001DDA  103C 000E               1500              MOVE.B      #14, D0             ; command for trap call to display message
00001DDE  4E4F                    1501              TRAP        #15                 ; trap call
00001DE0                          1502              
00001DE0  B63C 0000               1503              CMP.B   #zero,D3
00001DE4  6700 003A               1504              BEQ     displayA0P
00001DE8  B63C 0001               1505              CMP.B   #one,D3
00001DEC  6700 005A               1506              BEQ     displayA1P
00001DF0  B63C 0002               1507              CMP.B   #two,D3
00001DF4  6700 007A               1508              BEQ     displayA2P
00001DF8  B63C 0003               1509              CMP.B   #three,D3
00001DFC  6700 009A               1510              BEQ     displayA3P
00001E00  B63C 0004               1511              CMP.B   #four,D3
00001E04  6700 00BA               1512              BEQ     displayA4P
00001E08  B63C 0005               1513              CMP.B   #five,D3
00001E0C  6700 00DA               1514              BEQ     displayA5P
00001E10  B63C 0006               1515              CMP.B   #six,D3
00001E14  6700 00FA               1516              BEQ     displayA6P
00001E18  B63C 0007               1517              CMP.B   #seven,D3
00001E1C  6700 011A               1518              BEQ     displayA7P
00001E20                          1519              
00001E20  43F9 000021E4           1520  displayA0P  LEA         dispA0, A1          ; Display space
00001E26  103C 000E               1521              MOVE.B      #14, D0             ; command for trap call to display message
00001E2A  4E4F                    1522              TRAP        #15                 ; trap call
00001E2C  43F9 00002153           1523              LEA         clPer, A1           ; Display space
00001E32  103C 000E               1524              MOVE.B      #14, D0             ; command for trap call to display message
00001E36  4E4F                    1525              TRAP        #15                 ; trap call
00001E38  43F9 00002157           1526              LEA         inc, A1             ; Display space
00001E3E  103C 000E               1527              MOVE.B      #14, D0             ; command for trap call to display message
00001E42  4E4F                    1528              TRAP        #15                 ; trap call
00001E44  6000 02F4               1529              BRA         endSUB              ; go to the end of the subroutine
00001E48                          1530              
00001E48  43F9 000021E7           1531  displayA1P  LEA         dispA1, A1          ; Display space
00001E4E  103C 000E               1532              MOVE.B      #14, D0             ; command for trap call to display message
00001E52  4E4F                    1533              TRAP        #15                 ; trap call
00001E54  43F9 00002153           1534              LEA         clPer, A1           ; Display space
00001E5A  103C 000E               1535              MOVE.B      #14, D0             ; command for trap call to display message
00001E5E  4E4F                    1536              TRAP        #15                 ; trap call
00001E60  43F9 00002157           1537              LEA         inc, A1             ; Display space
00001E66  103C 000E               1538              MOVE.B      #14, D0             ; command for trap call to display message
00001E6A  4E4F                    1539              TRAP        #15                 ; trap call
00001E6C  6000 02CC               1540              BRA         endSUB              ; go to the end of the subroutine
00001E70                          1541  
00001E70  43F9 000021EA           1542  displayA2P  LEA         dispA2, A1          ; Display space
00001E76  103C 000E               1543              MOVE.B      #14, D0             ; command for trap call to display message
00001E7A  4E4F                    1544              TRAP        #15                 ; trap call
00001E7C  43F9 00002153           1545              LEA         clPer, A1           ; Display space
00001E82  103C 000E               1546              MOVE.B      #14, D0             ; command for trap call to display message
00001E86  4E4F                    1547              TRAP        #15                 ; trap call
00001E88  43F9 00002157           1548              LEA         inc, A1             ; Display space
00001E8E  103C 000E               1549              MOVE.B      #14, D0             ; command for trap call to display message
00001E92  4E4F                    1550              TRAP        #15                 ; trap call
00001E94  6000 02A4               1551              BRA         endSUB              ; go to the end of the subroutine
00001E98                          1552  
00001E98  43F9 000021ED           1553  displayA3P  LEA         dispA3, A1          ; Display space
00001E9E  103C 000E               1554              MOVE.B      #14, D0             ; command for trap call to display message
00001EA2  4E4F                    1555              TRAP        #15                 ; trap call
00001EA4  43F9 00002153           1556              LEA         clPer, A1           ; Display space
00001EAA  103C 000E               1557              MOVE.B      #14, D0             ; command for trap call to display message
00001EAE  4E4F                    1558              TRAP        #15                 ; trap call
00001EB0  43F9 00002157           1559              LEA         inc, A1             ; Display space
00001EB6  103C 000E               1560              MOVE.B      #14, D0             ; command for trap call to display message
00001EBA  4E4F                    1561              TRAP        #15                 ; trap call
00001EBC  6000 027C               1562              BRA         endSUB              ; go to the end of the subroutine
00001EC0                          1563  
00001EC0  43F9 000021F0           1564  displayA4P  LEA         dispA4, A1          ; Display space
00001EC6  103C 000E               1565              MOVE.B      #14, D0             ; command for trap call to display message
00001ECA  4E4F                    1566              TRAP        #15                 ; trap call
00001ECC  43F9 00002153           1567              LEA         clPer, A1           ; Display space
00001ED2  103C 000E               1568              MOVE.B      #14, D0             ; command for trap call to display message
00001ED6  4E4F                    1569              TRAP        #15                 ; trap call
00001ED8  43F9 00002157           1570              LEA         inc, A1             ; Display space
00001EDE  103C 000E               1571              MOVE.B      #14, D0             ; command for trap call to display message
00001EE2  4E4F                    1572              TRAP        #15                 ; trap call
00001EE4  6000 0254               1573              BRA         endSUB              ; go to the end of the subroutine
00001EE8                          1574  
00001EE8  43F9 000021F3           1575  displayA5P  LEA         dispA5, A1          ; Display space
00001EEE  103C 000E               1576              MOVE.B      #14, D0             ; command for trap call to display message
00001EF2  4E4F                    1577              TRAP        #15                 ; trap call
00001EF4  43F9 00002153           1578              LEA         clPer, A1           ; Display space
00001EFA  103C 000E               1579              MOVE.B      #14, D0             ; command for trap call to display message
00001EFE  4E4F                    1580              TRAP        #15                 ; trap call
00001F00  43F9 00002157           1581              LEA         inc, A1             ; Display space
00001F06  103C 000E               1582              MOVE.B      #14, D0             ; command for trap call to display message
00001F0A  4E4F                    1583              TRAP        #15                 ; trap call
00001F0C  6000 022C               1584              BRA         endSUB              ; go to the end of the subroutine
00001F10                          1585  
00001F10  43F9 000021F6           1586  displayA6P  LEA         dispA6, A1          ; Display space
00001F16  103C 000E               1587              MOVE.B      #14, D0             ; command for trap call to display message
00001F1A  4E4F                    1588              TRAP        #15                 ; trap call
00001F1C  43F9 00002153           1589              LEA         clPer, A1           ; Display space
00001F22  103C 000E               1590              MOVE.B      #14, D0             ; command for trap call to display message
00001F26  4E4F                    1591              TRAP        #15                 ; trap call
00001F28  43F9 00002157           1592              LEA         inc, A1             ; Display space
00001F2E  103C 000E               1593              MOVE.B      #14, D0             ; command for trap call to display message
00001F32  4E4F                    1594              TRAP        #15                 ; trap call
00001F34  6000 0204               1595              BRA         endSUB              ; go to the end of the subroutine
00001F38                          1596  
00001F38  43F9 000021F9           1597  displayA7P  LEA         dispA7, A1          ; Display space
00001F3E  103C 000E               1598              MOVE.B      #14, D0             ; command for trap call to display message
00001F42  4E4F                    1599              TRAP        #15                 ; trap call
00001F44  43F9 00002153           1600              LEA         clPer, A1           ; Display space
00001F4A  103C 000E               1601              MOVE.B      #14, D0             ; command for trap call to display message
00001F4E  4E4F                    1602              TRAP        #15                 ; trap call
00001F50  43F9 00002157           1603              LEA         inc, A1             ; Display space
00001F56  103C 000E               1604              MOVE.B      #14, D0             ; command for trap call to display message
00001F5A  4E4F                    1605              TRAP        #15                 ; trap call
00001F5C  6000 01DC               1606              BRA         endSUB              ; go to the end of the subroutine
00001F60                          1607  
00001F60                          1608  ***********************************************************************************************************
00001F60                          1609  * Addr Postdecrement
00001F60                          1610  
00001F60  43F9 00002155           1611  pAddrDec    LEA         dec, A1             ; Display space
00001F66  103C 000E               1612              MOVE.B      #14, D0             ; command for trap call to display message
00001F6A  4E4F                    1613              TRAP        #15                 ; trap call
00001F6C                          1614              
00001F6C  43F9 00002151           1615              LEA         opPer, A1           ; Display space
00001F72  103C 000E               1616              MOVE.B      #14, D0             ; command for trap call to display message
00001F76  4E4F                    1617              TRAP        #15                 ; trap call
00001F78                          1618              
00001F78  B63C 0000               1619              CMP.B   #zero,D3
00001F7C  6700 003A               1620              BEQ     displayA0D
00001F80  B63C 0001               1621              CMP.B   #one,D3
00001F84  6700 004E               1622              BEQ     displayA1D
00001F88  B63C 0002               1623              CMP.B   #two,D3
00001F8C  6700 0062               1624              BEQ     displayA2D
00001F90  B63C 0003               1625              CMP.B   #three,D3
00001F94  6700 0076               1626              BEQ     displayA3D
00001F98  B63C 0004               1627              CMP.B   #four,D3
00001F9C  6700 008A               1628              BEQ     displayA4D
00001FA0  B63C 0005               1629              CMP.B   #five,D3
00001FA4  6700 009E               1630              BEQ     displayA5D
00001FA8  B63C 0006               1631              CMP.B   #six,D3
00001FAC  6700 00B2               1632              BEQ     displayA6D
00001FB0  B63C 0007               1633              CMP.B   #seven,D3
00001FB4  6700 00C6               1634              BEQ     displayA7D
00001FB8                          1635              
00001FB8  43F9 000021E4           1636  displayA0D  LEA         dispA0, A1          ; Display space
00001FBE  103C 000E               1637              MOVE.B      #14, D0             ; command for trap call to display message
00001FC2  4E4F                    1638              TRAP        #15                 ; trap call
00001FC4  43F9 00002153           1639              LEA         clPer, A1           ; Display space
00001FCA  103C 000E               1640              MOVE.B      #14, D0             ; command for trap call to display message
00001FCE  4E4F                    1641              TRAP        #15                 ; trap call
00001FD0  6000 0168               1642              BRA         endSUB              ; go to the end of the subroutine
00001FD4                          1643              
00001FD4  43F9 000021E7           1644  displayA1D  LEA         dispA1, A1          ; Display space
00001FDA  103C 000E               1645              MOVE.B      #14, D0             ; command for trap call to display message
00001FDE  4E4F                    1646              TRAP        #15                 ; trap call
00001FE0  43F9 00002153           1647              LEA         clPer, A1           ; Display space
00001FE6  103C 000E               1648              MOVE.B      #14, D0             ; command for trap call to display message
00001FEA  4E4F                    1649              TRAP        #15                 ; trap call
00001FEC  6000 014C               1650              BRA         endSUB              ; go to the end of the subroutine
00001FF0                          1651  
00001FF0  43F9 000021EA           1652  displayA2D  LEA         dispA2, A1          ; Display space
00001FF6  103C 000E               1653              MOVE.B      #14, D0             ; command for trap call to display message
00001FFA  4E4F                    1654              TRAP        #15                 ; trap call
00001FFC  43F9 00002153           1655              LEA         clPer, A1           ; Display space
00002002  103C 000E               1656              MOVE.B      #14, D0             ; command for trap call to display message
00002006  4E4F                    1657              TRAP        #15                 ; trap call
00002008  6000 0130               1658              BRA         endSUB              ; go to the end of the subroutine
0000200C                          1659  
0000200C  43F9 000021ED           1660  displayA3D  LEA         dispA3, A1          ; Display space
00002012  103C 000E               1661              MOVE.B      #14, D0             ; command for trap call to display message
00002016  4E4F                    1662              TRAP        #15                 ; trap call
00002018  43F9 00002153           1663              LEA         clPer, A1           ; Display space
0000201E  103C 000E               1664              MOVE.B      #14, D0             ; command for trap call to display message
00002022  4E4F                    1665              TRAP        #15                 ; trap call
00002024  6000 0114               1666              BRA         endSUB              ; go to the end of the subroutine
00002028                          1667  
00002028  43F9 000021F0           1668  displayA4D  LEA         dispA4, A1          ; Display space
0000202E  103C 000E               1669              MOVE.B      #14, D0             ; command for trap call to display message
00002032  4E4F                    1670              TRAP        #15                 ; trap call
00002034  43F9 00002153           1671              LEA         clPer, A1           ; Display space
0000203A  103C 000E               1672              MOVE.B      #14, D0             ; command for trap call to display message
0000203E  4E4F                    1673              TRAP        #15                 ; trap call
00002040  6000 00F8               1674              BRA         endSUB              ; go to the end of the subroutine
00002044                          1675  
00002044  43F9 000021F3           1676  displayA5D  LEA         dispA5, A1          ; Display space
0000204A  103C 000E               1677              MOVE.B      #14, D0             ; command for trap call to display message
0000204E  4E4F                    1678              TRAP        #15                 ; trap call
00002050  43F9 00002153           1679              LEA         clPer, A1           ; Display space
00002056  103C 000E               1680              MOVE.B      #14, D0             ; command for trap call to display message
0000205A  4E4F                    1681              TRAP        #15                 ; trap call
0000205C  6000 00DC               1682              BRA         endSUB              ; go to the end of the subroutine
00002060                          1683  
00002060  43F9 000021F6           1684  displayA6D  LEA         dispA6, A1          ; Display space
00002066  103C 000E               1685              MOVE.B      #14, D0             ; command for trap call to display message
0000206A  4E4F                    1686              TRAP        #15                 ; trap call
0000206C  43F9 00002153           1687              LEA         clPer, A1           ; Display space
00002072  103C 000E               1688              MOVE.B      #14, D0             ; command for trap call to display message
00002076  4E4F                    1689              TRAP        #15                 ; trap call
00002078  6000 00C0               1690              BRA         endSUB              ; go to the end of the subroutine
0000207C                          1691  
0000207C  43F9 000021F9           1692  displayA7D  LEA         dispA7, A1          ; Display space
00002082  103C 000E               1693              MOVE.B      #14, D0             ; command for trap call to display message
00002086  4E4F                    1694              TRAP        #15                 ; trap call
00002088  43F9 00002153           1695              LEA         clPer, A1           ; Display space
0000208E  103C 000E               1696              MOVE.B      #14, D0             ; command for trap call to display message
00002092  4E4F                    1697              TRAP        #15                 ; trap call
00002094  6000 00A4               1698              BRA         endSUB              ; go to the end of the subroutine
00002098                          1699  
00002098                          1700  
00002098                          1701  ***********************************************************************************************************
00002098                          1702  * Absolute Address
00002098  B63C 0000               1703  pHex        CMP.B       #zero, D3
0000209C  6700 0012               1704              BEQ         AbsShort
000020A0  B63C 0001               1705              CMP.B       #one, D3
000020A4  6700 003C               1706              BEQ         AbsLong
000020A8  B63C 0004               1707              CMP.B       #four, D3
000020AC  6700 0066               1708              BEQ         DispImm
000020B0                          1709              
000020B0  43F9 00002151           1710  AbsShort    LEA         opPer, A1           ; Display space
000020B6  103C 000E               1711              MOVE.B      #14, D0             ; command for trap call to display message
000020BA  4E4F                    1712              TRAP        #15                 ; trap call
000020BC                          1713              
000020BC  43F9 0000214D           1714              LEA         dispHex, A1         ; Display space
000020C2  103C 000E               1715              MOVE.B      #14, D0             ; command for trap call to display message
000020C6  4E4F                    1716              TRAP        #15                 ; trap call
000020C8                          1717              
000020C8  4241                    1718              CLR         D1
000020CA  3218                    1719              MOVE.W      (A0)+, D1
000020CC                          1720              
000020CC  103C 0003               1721              MOVE.B      #3, D0
000020D0  4E4F                    1722              TRAP        #15
000020D2                          1723              
000020D2  43F9 00002153           1724              LEA         clPer, A1           ; Display space
000020D8  103C 000E               1725              MOVE.B      #14, D0             ; command for trap call to display message
000020DC  4E4F                    1726              TRAP        #15                 ; trap call
000020DE                          1727              
000020DE  6000 005A               1728              BRA         endSub
000020E2                          1729              
000020E2  43F9 00002151           1730  AbsLong     LEA         opPer, A1           ; Display space
000020E8  103C 000E               1731              MOVE.B      #14, D0             ; command for trap call to display message
000020EC  4E4F                    1732              TRAP        #15                 ; trap call
000020EE                          1733              
000020EE  43F9 0000214D           1734              LEA         dispHex, A1         ; Display space
000020F4  103C 000E               1735              MOVE.B      #14, D0             ; command for trap call to display message
000020F8  4E4F                    1736              TRAP        #15                 ; trap call
000020FA                          1737              
000020FA  4241                    1738              CLR         D1
000020FC  2218                    1739              MOVE.L      (A0)+, D1
000020FE                          1740              
000020FE  103C 0003               1741              MOVE.B      #3, D0
00002102  4E4F                    1742              TRAP        #15
00002104                          1743              
00002104  43F9 00002153           1744              LEA         clPer, A1           ; Display space
0000210A  103C 000E               1745              MOVE.B      #14, D0             ; command for trap call to display message
0000210E  4E4F                    1746              TRAP        #15                 ; trap call
00002110                          1747              
00002110  6000 0028               1748              BRA         endSub
00002114                          1749  
00002114  43F9 0000214B           1750  DispImm     LEA         hashTag, A1         ; Display space
0000211A  103C 000E               1751              MOVE.B      #14, D0             ; command for trap call to display message
0000211E  4E4F                    1752              TRAP        #15                 ; trap call
00002120                          1753              
00002120  4241                    1754              CLR         D1
00002122  3218                    1755              MOVE.W      (A0)+, D1
00002124                          1756  
00002124  43F9 0000214D           1757              LEA         dispHex, A1         ; Display space
0000212A  103C 000E               1758              MOVE.B      #14, D0             ; command for trap call to display message
0000212E  4E4F                    1759              TRAP        #15                 ; trap call
00002130                          1760              
00002130  103C 0003               1761              MOVE.B      #3, D0
00002134  4E4F                    1762              TRAP        #15
00002136                          1763  
00002136  6000 0002               1764              BRA         endSub
0000213A                          1765  
0000213A                          1766  invalid
0000213A                          1767  
0000213A                          1768  endSUB
0000213A                          1769          
0000213A  4CDF 7EFF               1770          MOVEM.L  (SP)+, D0-D7/A1-A6
0000213E  4E75                    1771          RTS
00002140                          1772  
00002140                          1773  ***********************************************************************************************************
00002140                          1774  ***********************************************************************************************************
00002140                          1775  ***********************************************************************************************************
00002140                          1776  
00002140                          1777  printInvalid
00002140                          1778  endPROG    
00002140                          1779  
00002140  FFFF FFFF               1780      SIMHALT                             ; halt simulator
00002144                          1781  
00002144= 20 0D 0A 00             1782  newLine     DC.B    ' ', CR, LF, 0
00002148= 20 20 00                1783  space       DC.B    '  ', 0
0000214B                          1784  
0000214B= 23 00                   1785  hashTag     DC.B    '#', 0
0000214D= 24 00                   1786  dispHex     DC.B    '$', 0
0000214F= 2C 00                   1787  comma       DC.B    ',', 0
00002151                          1788  
00002151= 28 00                   1789  opPer       DC.B    '(', 0
00002153= 29 00                   1790  clPer       DC.B    ')', 0
00002155= 2D 00                   1791  dec         DC.B    '-', 0
00002157= 2B 00                   1792  inc         DC.B    '+', 0
00002159                          1793  
00002159= 4F 52 49 00             1794  ORImatch    DC.B    'ORI', 0
0000215D= 43 4D 50 49 00          1795  CMPImatch   DC.B    'CMPI', 0
00002162= 42 43 4C 52 00          1796  BCLRmatch   DC.B    'BCLR', 0
00002167= 4D 4F 56 45 00          1797  MOVEmatch   DC.B    'MOVE', 0
0000216C= 4D 4F 56 45 41 00       1798  MOVEAmatch  DC.B    'MOVEA', 0
00002172= 4E 45 47 00             1799  NEGmatch    DC.B    'NEG', 0
00002176= 52 54 53 00             1800  RTSmatch    DC.B    'RTS', 0
0000217A= 4A 53 52 00             1801  JSRmatch    DC.B    'JSR', 0
0000217E= 4D 4F 56 45 4D 00       1802  MOVEMmatch  DC.B    'MOVEM', 0
00002184= 4C 45 41 00             1803  LEAmatch    DC.B    'LEA', 0
00002188= 53 55 42 51 00          1804  SUBQmatch   DC.B    'SUBQ', 0
0000218D= 42 52 41 00             1805  BRAmatch    DC.B    'BRA', 0
00002191= 42 43 53 00             1806  BCSmatch    DC.B    'BCS', 0
00002195= 42 56 43 00             1807  BVCmatch    DC.B    'BVC', 0
00002199= 42 47 45 00             1808  BGEmatch    DC.B    'BGE', 0
0000219D= 42 4C 54 00             1809  BLTmatch    DC.B    'BLT', 0
000021A1= 44 49 56 53 00          1810  DIVSmatch   DC.B    'DIVS', 0
000021A6= 4F 52 00                1811  ORmatch     DC.B    'OR', 0
000021A9= 53 55 42 00             1812  SUBmatch    DC.B    'SUB', 0
000021AD= 45 4F 52 00             1813  EORmatch    DC.B    'EOR', 0
000021B1= 43 4D 50 00             1814  CMPmatch    DC.B    'CMP', 0
000021B5= 4D 55 4C 53 00          1815  MULSmatch   DC.B    'MULS', 0
000021BA= 41 44 44 00             1816  ADDmatch    DC.B    'ADD', 0
000021BE= 41 44 44 41 00          1817  ADDAmatch   DC.B    'ADDA', 0
000021C3= 4C 53 52 00             1818  LSRmatch    DC.B    'LSR', 0
000021C7= 4C 53 4C 00             1819  LSLmatch    DC.B    'LSL', 0
000021CB= 41 53 52 00             1820  ASRmatch    DC.B    'ASR', 0
000021CF= 41 53 4C 00             1821  ASLmatch    DC.B    'ASL', 0
000021D3= 52 4F 52 00             1822  RORmatch    DC.B    'ROR', 0
000021D7= 52 4F 4C 00             1823  ROLmatch    DC.B    'ROL', 0
000021DB                          1824   
000021DB= 2E 42 00                1825  dispByte    DC.B    '.B', 0
000021DE= 2E 57 00                1826  dispWord    DC.B    '.W', 0
000021E1= 2E 4C 00                1827  dispLong    DC.B    '.L', 0
000021E4                          1828  
000021E4= 41 30 00                1829  dispA0      DC.B    'A0', 0
000021E7= 41 31 00                1830  dispA1      DC.B    'A1', 0
000021EA= 41 32 00                1831  dispA2      DC.B    'A2', 0
000021ED= 41 33 00                1832  dispA3      DC.B    'A3', 0
000021F0= 41 34 00                1833  dispA4      DC.B    'A4', 0
000021F3= 41 35 00                1834  dispA5      DC.B    'A5', 0
000021F6= 41 36 00                1835  dispA6      DC.B    'A6', 0
000021F9= 41 37 00                1836  dispA7      DC.B    'A7', 0
000021FC                          1837  
000021FC= 44 00                   1838  dispD       DC.B    'D',0
000021FE= 44 30 00                1839  dispD0      DC.B    'D0', 0
00002201= 44 31 00                1840  dispD1      DC.B    'D1', 0
00002204= 44 32 00                1841  dispD2      DC.B    'D2', 0
00002207= 44 33 00                1842  dispD3      DC.B    'D3', 0
0000220A= 44 34 00                1843  dispD4      DC.B    'D4', 0
0000220D= 44 35 00                1844  dispD5      DC.B    'D5', 0
00002210= 44 36 00                1845  dispD6      DC.B    'D6', 0
00002213= 44 37 00                1846  dispD7      DC.B    'D7', 0  
00002216                          1847             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             20E2
ABSSHORT            20B0
ADDAMATCH           21BE
ADDMATCH            21BA
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            21CF
ASRMATCH            21CB
BCLRMATCH           2162
BCSMATCH            2191
BGEMATCH            2199
BLTMATCH            219D
BRAEIGHT            110E
BRAELEVEN           1112
BRAFIVE             10DE
BRAFOUR             10C2
BRAFOURTEEN         112E
BRAMATCH            218D
BRANINE             110E
BRAONE              10B6
BRASIX              10E2
BRATHIRTEEN         112E
BRATHREE            10BE
BRATWELVE           112A
BRATWO              10BA
BRAZERO             1086
BVCMATCH            2195
CLPER               2153
CMPIMATCH           215D
CMPMATCH            21B1
COMMA               214F
CR                  D
DEC                 2155
DISPA0              21E4
DISPA1              21E7
DISPA2              21EA
DISPA3              21ED
DISPA4              21F0
DISPA5              21F3
DISPA6              21F6
DISPA7              21F9
DISPBYTE            21DB
DISPD               21FC
DISPD0              21FE
DISPD1              2201
DISPD2              2204
DISPD3              2207
DISPD4              220A
DISPD5              220D
DISPD6              2210
DISPD7              2213
DISPHEX             214D
DISPIMM             2114
DISPLAYA0           1C28
DISPLAYA0A          1CF4
DISPLAYA0D          1FB8
DISPLAYA0P          1E20
DISPLAYA1           1C38
DISPLAYA1A          1D10
DISPLAYA1D          1FD4
DISPLAYA1P          1E48
DISPLAYA2           1C48
DISPLAYA2A          1D2C
DISPLAYA2D          1FF0
DISPLAYA2P          1E70
DISPLAYA3           1C58
DISPLAYA3A          1D48
DISPLAYA3D          200C
DISPLAYA3P          1E98
DISPLAYA4           1C68
DISPLAYA4A          1D64
DISPLAYA4D          2028
DISPLAYA4P          1EC0
DISPLAYA5           1C78
DISPLAYA5A          1D80
DISPLAYA5D          2044
DISPLAYA5P          1EE8
DISPLAYA6           1C88
DISPLAYA6A          1D9C
DISPLAYA6D          2060
DISPLAYA6P          1F10
DISPLAYA7           1C98
DISPLAYA7A          1DB8
DISPLAYA7D          207C
DISPLAYA7P          1F38
DISPLAYD0           1B68
DISPLAYD1           1B78
DISPLAYD2           1B88
DISPLAYD3           1B98
DISPLAYD4           1BA8
DISPLAYD5           1BB8
DISPLAYD6           1BC8
DISPLAYD7           1BD8
DISPLONG            21E1
DISPWORD            21DE
DIVSMATCH           21A1
EIGHT               8
ELEVEN              B
ENDPROG             2140
ENDSUB              213A
EORMATCH            21AD
FINDREGE            1AE4
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             214B
INC                 2157
INVALID             213A
JSRMATCH            217A
LEAMATCH            2184
LF                  A
LOOP                100C
LSLMATCH            21C7
LSRMATCH            21C3
MOVEAMATCH          216C
MOVEMATCH           2167
MOVEMMATCH          217E
MULSMATCH           21B5
NEGMATCH            2172
NEWLINE             2144
NINE                9
ONE                 1
OPASL               1A9C
OPASR               1AA8
OPBCC               1162
OPBCLR              1506
OPBCS               1A2C
OPBGE               1A44
OPBLT               1A50
OPBRA               19F4
OPBVC               1A38
OPCMP               118C
OPCMPB              11BC
OPCMPI              1394
OPCMPIB             13E0
OPCMPIL             14A4
OPCMPIW             1442
OPCMPL              1224
OPCMPW              1208
OPDIVS              1174
OPDYNBCLR           156A
OPEOR               1180
OPJSR               1958
OPLEA               19E8
OPLSL               1AB4
OPLSR               1AC0
OPMOVEAL            16EC
OPMOVEAW            17E6
OPMOVEB             15D8
OPMOVEL             165C
OPMOVEM             19D0
OPMOVEMLEA          19B4
OPMOVEW             1756
OPMULS              1A90
OPNEG               1850
OPNEGB              187E
OPNEGL              18BE
OPNEGW              18FE
OPOR                1168
OPORI               1240
OPORIB              126E
OPORIL              1332
OPORIW              12D0
OPPER               2151
OPROL               1ACC
OPROR               1AD8
OPRTS               1998
OPRTSJSR            193E
OPSUB               1A5C
OPSUBQ              19E8
ORIMATCH            2159
ORMATCH             21A6
PADDRDEC            1F60
PADDRDIR            1CA8
PADDRPOST           1DD4
PADDRREG            1BE8
PDATAREG            1B28
PHEX                2098
PRINTEA             1AF0
PRINTINVALID        2140
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
ROLMATCH            21D7
RORMATCH            21D3
RTSMATCH            2176
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               2148
START               1000
SUBMATCH            21A9
SUBQMATCH           2188
TEST_END            3009
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
