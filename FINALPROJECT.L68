00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 2014-12-06 13:28:31

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Motorola 68k Disassembler
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =00003009                 11  test_end    EQU     $00003009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00003000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00003009             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 1262                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 0084                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0080                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 0094                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0090                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00B4                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00C2                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00BE                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00D0                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 00CC                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 00C4                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                102          AND.B       #secNib, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 02E0                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 042C                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                108          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 0596                109          BEQ         opBCLR
000010A6  C47C 0001                110          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                111          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 05EE                112          BEQ         opDynBCLR
000010B2  6000 11C2                113          BRA         printInvalid
000010B6                           114          
000010B6                           115          
000010B6  6000 0654                116  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           117  
000010BA  6000 06D4                118  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BE                           119  
000010BE                           120  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BE                           121  
000010BE  6000 07CA                122          BRA         opMOVEW
000010C2                           123  
000010C2  4242                     124  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010C4  1401                     125          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010C6  C43C 000F                126          AND.B       #secNib, D2             ; set first nibble to 0
000010CA                           127   
000010CA  B43C 0004                128          CMP.B       #four, D2           ; compare second nibble to 4
000010CE  6700 08B4                129          BEQ         opNEG               ; branch to NEG method
000010D2  B43C 000E                130          CMP.B       #fourteen, D2       ; compare second nibble to E
000010D6  6700 099A                131          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010DA  6000 0A0C                132          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010DE                           133  
000010DE  6000 0A3C                134  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010E2                           135  
000010E2  4242                     136  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010E4  1401                     137          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010E6  C43C 000F                138          AND.B       #$0F, D2             ; set first nibble to 0
000010EA                           139   
000010EA  B43C 0000                140          CMP.B       #zero, D2           ; compare second nibble to 0
000010EE  6700 0A38                141          BEQ         opBRA               ; branch to BRA method
000010F2  B43C 0005                142          CMP.B       #five, D2           ; compare second nibble to 5
000010F6  6700 0A68                143          BEQ         opBCS               ; branch to BCS method
000010FA  B43C 0008                144          CMP.B       #eight, D2          ; compare second nibble to 8
000010FE  6700 0A6C                145          BEQ         opBVC               ; branch to BCS method
00001102  B43C 000C                146          CMP.B       #twelve, D2         ; compare second nibble to 12
00001106  6700 0A70                147          BEQ         opBGE               ; branch to BGE method
0000110A  6000 0A78                148          BRA         opBLT               ; otherwise, branch to BLT method
0000110E                           149  
0000110E                           150  braEight                                ; there are two opCodes available DIVS, or OR
0000110E  4242                     151              CLR     D2
00001110  1401                     152              MOVE.B  D1,D2
00001112  C438 000F                153              AND.B   $0F,D2
00001116  EE42                     154              ASR     #seven,D2
00001118  B43C 0007                155              CMP.B   #seven,D2
0000111C  6700 006E                156              BEQ     opDIVS              ; If bits 8 - 6 are equal to 7, we have DIVS
00001120  6000 005E                157              BRA     opOR                ; else opcode is OR
00001124                           158  
00001124  6000 0A6A                159  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
00001128                           160  
00001128                           161  braEleven                               ; there are two opCodes available EOR, or CMP
00001128  4242                     162              CLR     D2
0000112A  1401                     163              MOVE.B  D1,D2
0000112C  C438 000F                164              AND.B   $0F,D2
00001130  EE42                     165              ASR     #seven,D2
00001132  B43C 0003                166              CMP.B   #three,D2
00001136  6D00 014C                167              BLT     opCMP               ; If opmode bits are less than 3, we have CMP
0000113A  B43C 0003                168              CMP.B   #three,D2
0000113E  6000 0058                169              BRA     opEOR               ; Else its EOR
00001142                           170              
00001142                           171  
00001142  6000 0A80                172  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
00001146                           173    
00001146                           174  braThirteen ; there are two opCodes available ADD, or ADDA
00001146                           175  
00001146  4242                     176  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
00001148  1401                     177              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000114A  C438 000F                178              AND.B       $0F, D2             ; set first nibble to 0
0000114E                           179   
0000114E  B43C 0000                180              CMP.B       #zero, D2           ; compare second nibble to 0
00001152  6700 0A88                181              BEQ         opASR               ; branch to ASR method
00001156  B43C 0001                182              CMP.B       #one, D2            ; compare second nibble to 1
0000115A  6700 0A74                183              BEQ         opASL               ; branch to ASL method
0000115E  B43C 0002                184              CMP.B       #two, D2            ; compare second nibble to 2
00001162  6700 0A90                185              BEQ         opLSR               ; branch to LSR method
00001166  B43C 0003                186              CMP.B       #three, D2          ; compare second nibble to 3
0000116A  6700 0A7C                187              BEQ         opLSL               ; branch to LSL method
0000116E  B43C 0006                188              CMP.B       #six, D2            ; compare second nibble to 6
00001172  6700 0A98                189              BEQ         opROR               ; branch to ROR method
00001176  6000 0A88                190              BRA         opROL               ; otherwise, branch to ROL method
0000117A                           191              
0000117A                           192  
0000117A                           193  
0000117A                           194  ***********************************************************************************************************
0000117A                           195  *
0000117A                           196  *               BCC OPCODE
0000117A                           197  *
0000117A                           198  ***********************************************************************************************************
0000117A                           199          
0000117A  4242                     200  opBCC       CLR     D2
0000117C                           201              ; Determine Condition (4 bits)
0000117C                           202              ; Determine Displacement AFTER condition (8 bits)
0000117C  6000 FE8E                203              BRA     LOOP
00001180                           204              
00001180                           205              
00001180                           206  ***********************************************************************************************************
00001180                           207  *
00001180                           208  *               OR OPCODE
00001180                           209  *
00001180                           210  ***********************************************************************************************************
00001180                           211  
00001180  43F9 000022DC            212  opOR        LEA     ORmatch,A1
00001186  103C 000E                213              MOVE.B  #14,D0
0000118A  4E4F                     214              TRAP    #15
0000118C                           215  
0000118C                           216  ***********************************************************************************************************
0000118C                           217  *
0000118C                           218  *               DIVS OPCODE
0000118C                           219  *
0000118C                           220  ***********************************************************************************************************
0000118C                           221  
0000118C  43F9 000022D7            222  opDIVS      LEA     DIVSmatch,A1
00001192  103C 000E                223              MOVE.B  #14,D0
00001196  4E4F                     224              TRAP    #15
00001198                           225      
00001198                           226      
00001198                           227  **********************************************************************************************************
00001198                           228  *
00001198                           229  *               EOR OPCODE
00001198                           230  *
00001198                           231  ***********************************************************************************************************
00001198                           232  
00001198  43F9 000022E3            233  opEOR       LEA         EORmatch,A1
0000119E  103C 000E                234              MOVE.B      #14,D0
000011A2  4E4F                     235              TRAP        #15
000011A4                           236              
000011A4  4242                     237              CLR         D2
000011A6                           238              
000011A6  1218                     239              MOVE.B      (A0)+,D1
000011A8  1401                     240              MOVE.B      D1,D2
000011AA  EE42                     241              ASR         #seven,D2           ; Move bits 7 places over to find opmode
000011AC  B43C 0004                242              CMP.B       #four,D2
000011B0  6700 0012                243              BEQ         opEORB              ; Byte in opmode
000011B4  B43C 0005                244              CMP.B       #five,D2
000011B8  6700 004A                245              BEQ         opEORW              ; Word in opmode
000011BC  B43C 0006                246              CMP.B       #six,D2
000011C0  6700 0082                247              BEQ         opEORL              ; Long in opmode
000011C4                           248              
000011C4  43F9 00002311            249  opEORB      LEA         dispByte,A1
000011CA  103C 000E                250              MOVE.B      #14,D0
000011CE  4E4F                     251              TRAP        #15
000011D0                           252              
000011D0  43F9 0000227E            253              LEA         space, A1           ; Display space
000011D6  103C 000E                254              MOVE.B      #14, D0             ; command for trap call to display message
000011DA  4E4F                     255              TRAP        #15                 ; trap call
000011DC                           256              
000011DC  4EB9 00001C26            257              JSR         printEA         ; Determines the "left" operand register
000011E2                           258              
000011E2  43F9 00002285            259              LEA         comma, A1           ; Display space
000011E8  103C 000E                260              MOVE.B      #14, D0             ; command for trap call to display message
000011EC  4E4F                     261              TRAP        #15                 ; trap call
000011EE                           262              
000011EE  4EB9 00001C18            263              JSR         findRege
000011F4                           264              
000011F4  43F9 0000227A            265              LEA         newLine,A1
000011FA  103C 000E                266              MOVE.B      #14,D0
000011FE  4E4F                     267              TRAP        #15                ; trap call
00001200                           268              
00001200  6000 FE0A                269              BRA         LOOP
00001204                           270              
00001204                           271              
00001204  43F9 00002314            272  opEORW      LEA         dispWord,A1
0000120A  103C 000E                273              MOVE.B      #14,D0
0000120E  4E4F                     274              TRAP        #15
00001210                           275              
00001210  43F9 0000227E            276              LEA         space, A1           ; Display space
00001216  103C 000E                277              MOVE.B      #14, D0             ; command for trap call to display message
0000121A  4E4F                     278              TRAP        #15                 ; trap call
0000121C                           279              
0000121C  4EB9 00001C26            280              JSR         printEA         ; Determines the "left" operand register
00001222                           281              
00001222  43F9 00002285            282              LEA         comma, A1           ; Display space
00001228  103C 000E                283              MOVE.B      #14, D0             ; command for trap call to display message
0000122C  4E4F                     284              TRAP        #15                 ; trap call
0000122E                           285              
0000122E  4EB9 00001C18            286              JSR         findRege
00001234                           287              
00001234  43F9 0000227A            288              LEA         newLine,A1
0000123A  103C 000E                289              MOVE.B      #14,D0
0000123E  4E4F                     290              TRAP        #15                ; trap call
00001240                           291              
00001240  6000 FDCA                292              BRA         LOOP
00001244                           293              
00001244  43F9 00002317            294  opEORL      LEA         dispLong,A1
0000124A  103C 000E                295              MOVE.B      #14,D0
0000124E  4E4F                     296              TRAP        #15
00001250                           297              
00001250  43F9 0000227E            298              LEA         space, A1           ; Display space
00001256  103C 000E                299              MOVE.B      #14, D0             ; command for trap call to display message
0000125A  4E4F                     300              TRAP        #15                 ; trap call
0000125C                           301              
0000125C  4EB9 00001C26            302              JSR         printEA         ; Determines the "left" operand register
00001262                           303              
00001262  43F9 00002285            304              LEA         comma, A1           ; Display space
00001268  103C 000E                305              MOVE.B      #14, D0             ; command for trap call to display message
0000126C  4E4F                     306              TRAP        #15                 ; trap call
0000126E                           307              
0000126E  4EB9 00001C18            308              JSR         findRege
00001274                           309              
00001274  43F9 0000227A            310              LEA         newLine,A1
0000127A  103C 000E                311              MOVE.B      #14,D0
0000127E  4E4F                     312              TRAP        #15                ; trap call
00001280                           313              
00001280  6000 FD8A                314              BRA         LOOP
00001284                           315  
00001284                           316  ***********************************************************************************************************
00001284                           317  *
00001284                           318  *               CMP OPCODE
00001284                           319  *
00001284                           320  ***********************************************************************************************************
00001284                           321  
00001284  43F9 000022E7            322  opCMP       LEA         CMPmatch,A1
0000128A  103C 000E                323              MOVE.B      #14,D0
0000128E  4E4F                     324              TRAP        #15
00001290                           325              
00001290  4242                     326              CLR         D2
00001292                           327              
00001292  1218                     328              MOVE.B      (A0)+,D1
00001294  1401                     329              MOVE.B      D1,D2
00001296  EE42                     330              ASR         #seven,D2           ; Move bits 7 places over to find opmode
00001298  B43C 0000                331              CMP.B       #zero,D2
0000129C  6700 0016                332              BEQ         opCMPB              ; Byte in opmode
000012A0  B43C 0001                333              CMP.B       #one,D2
000012A4  6700 004E                334              BEQ         opCMPW              ; Word in opmode
000012A8  B43C 0002                335              CMP.B       #two,D2
000012AC  6700 0086                336              BEQ         opCMPL              ; Long in opmode
000012B0                           337              
000012B0  6000 0FC4                338              BRA         printInvalid        ; Incorrect input
000012B4                           339  
000012B4  43F9 00002311            340  opCMPB      LEA         dispByte,A1
000012BA  103C 000E                341              MOVE.B      #14,D0
000012BE  4E4F                     342              TRAP        #15
000012C0                           343              
000012C0  43F9 0000227E            344              LEA         space, A1           ; Display space
000012C6  103C 000E                345              MOVE.B      #14, D0             ; command for trap call to display message
000012CA  4E4F                     346              TRAP        #15                 ; trap call
000012CC                           347              
000012CC  4EB9 00001C26            348              JSR         printEA         ; Determines the "left" operand register
000012D2                           349              
000012D2  43F9 00002285            350              LEA         comma, A1           ; Display space
000012D8  103C 000E                351              MOVE.B      #14, D0             ; command for trap call to display message
000012DC  4E4F                     352              TRAP        #15                 ; trap call
000012DE                           353              
000012DE  4EB9 00001C18            354              JSR         findRege
000012E4                           355              
000012E4  43F9 0000227A            356              LEA         newLine,A1
000012EA  103C 000E                357              MOVE.B      #14,D0
000012EE  4E4F                     358              TRAP        #15
000012F0                           359              
000012F0  6000 FD1A                360              BRA         LOOP
000012F4                           361              
000012F4  43F9 00002314            362  opCMPW      LEA         dispWord,A1
000012FA  103C 000E                363              MOVE.B      #14,D0
000012FE  4E4F                     364              TRAP        #15
00001300                           365              
00001300  43F9 0000227E            366              LEA         space, A1           ; Display space
00001306  103C 000E                367              MOVE.B      #14, D0             ; command for trap call to display message
0000130A  4E4F                     368              TRAP        #15                 ; trap call
0000130C                           369              
0000130C  4EB9 00001C26            370              JSR         printEA         ; Determines the "left" operand register
00001312                           371              
00001312  43F9 00002285            372              LEA         comma, A1           ; Display space
00001318  103C 000E                373              MOVE.B      #14, D0             ; command for trap call to display message
0000131C  4E4F                     374              TRAP        #15                 ; trap call
0000131E                           375              
0000131E  4EB9 00001C18            376              JSR         findRege
00001324                           377              
00001324  43F9 0000227A            378              LEA         newLine,A1
0000132A  103C 000E                379              MOVE.B      #14,D0
0000132E  4E4F                     380              TRAP        #15                ; trap call
00001330                           381              
00001330  6000 FCDA                382              BRA         LOOP
00001334                           383  
00001334  43F9 00002317            384  opCMPL      LEA         dispLong,A1
0000133A  103C 000E                385              MOVE.B      #14,D0
0000133E  4E4F                     386              TRAP        #15
00001340                           387              
00001340  43F9 0000227E            388              LEA         space, A1           ; Display space
00001346  103C 000E                389              MOVE.B      #14, D0             ; command for trap call to display message
0000134A  4E4F                     390              TRAP        #15                 ; trap call
0000134C                           391              
0000134C  4EB9 00001C26            392              JSR         printEA         ; Determines the "left" operand register
00001352                           393              
00001352  43F9 00002285            394              LEA         comma, A1           ; Display space
00001358  103C 000E                395              MOVE.B      #14, D0             ; command for trap call to display message
0000135C  4E4F                     396              TRAP        #15                 ; trap call
0000135E                           397              
0000135E  4EB9 00001C18            398              JSR         findRege
00001364                           399              
00001364  43F9 0000227A            400              LEA         newLine,A1
0000136A  103C 000E                401              MOVE.B      #14,D0
0000136E  4E4F                     402              TRAP        #15                 ; trap call
00001370                           403              
00001370  6000 FC9A                404              BRA         LOOP
00001374                           405              
00001374                           406  ***********************************************************************************************************
00001374                           407  *
00001374                           408  *               ORI OPCODE
00001374                           409  *
00001374                           410  ***********************************************************************************************************
00001374                           411  
00001374  43F9 0000228F            412  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
0000137A  103C 000E                413          MOVE.B      #14, D0             ; command for trap call to display message
0000137E  4E4F                     414          TRAP        #15                 ; trap call
00001380                           415          
00001380  1218                     416          MOVE.B      (A0)+, D1
00001382  1401                     417          MOVE.B      D1,D2               ; copy data over
00001384  EC42                     418          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001386  B43C 0000                419          CMP.B       #zero,D2
0000138A  6700 0016                420          BEQ         opORIB
0000138E  B43C 0001                421          CMP.B       #one,D2
00001392  6700 0070                422          BEQ         opORIW
00001396  B43C 0002                423          CMP.B       #two,D2
0000139A  6700 00CA                424          BEQ         opORIL
0000139E                           425          
0000139E  6000 0ED6                426          BRA         printInvalid
000013A2                           427          
000013A2  43F9 00002311            428  opORIB  LEA         dispByte, A1        ; Display byte
000013A8  103C 000E                429          MOVE.B      #14, D0             ; command for trap call to display message
000013AC  4E4F                     430          TRAP        #15                 ; trap call
000013AE                           431          
000013AE  43F9 0000227E            432          LEA         space, A1           ; Display space
000013B4  103C 000E                433          MOVE.B      #14, D0             ; command for trap call to display message
000013B8  4E4F                     434          TRAP        #15                 ; trap call
000013BA                           435          
000013BA  4242                     436          CLR         D2
000013BC  1401                     437          MOVE.B      D1,D2
000013BE  E642                     438          ASR         #three,D2
000013C0  C47C 0007                439          AND         #seven,D2
000013C4  4243                     440          CLR         D3        
000013C6  1601                     441          MOVE.B      D1,D3
000013C8  C67C 0007                442          AND         #seven,D3
000013CC                           443          
000013CC  4241                     444          CLR         D1
000013CE  3218                     445          MOVE.W      (A0)+, D1
000013D0                           446          
000013D0  43F9 00002281            447          LEA         hashTag, A1           ; Display space
000013D6  103C 000E                448          MOVE.B      #14, D0             ; command for trap call to display message
000013DA  4E4F                     449          TRAP        #15                 ; trap call
000013DC                           450          
000013DC  103C 0003                451          MOVE.B      #3, D0
000013E0  4E4F                     452          TRAP        #15
000013E2                           453          
000013E2  43F9 00002285            454          LEA         comma, A1           ; Display space
000013E8  103C 000E                455          MOVE.B      #14, D0             ; command for trap call to display message
000013EC  4E4F                     456          TRAP        #15                 ; trap call
000013EE                           457          
000013EE  4EB9 00001C26            458          JSR         printEA
000013F4                           459          
000013F4  43F9 0000227A            460          LEA         newLine, A1           ; Display space
000013FA  103C 000E                461          MOVE.B      #14, D0             ; command for trap call to display message
000013FE  4E4F                     462          TRAP        #15                 ; trap call
00001400                           463          
00001400  6000 FC0A                464          BRA         LOOP
00001404                           465          
00001404                           466          
00001404  43F9 00002314            467  opORIW  LEA         dispWord, A1        ; Display byte
0000140A  103C 000E                468          MOVE.B      #14, D0             ; command for trap call to display message
0000140E  4E4F                     469          TRAP        #15                 ; trap call
00001410                           470          
00001410  43F9 0000227E            471          LEA         space, A1           ; Display space
00001416  103C 000E                472          MOVE.B      #14, D0             ; command for trap call to display message
0000141A  4E4F                     473          TRAP        #15                 ; trap call
0000141C                           474          
0000141C  4242                     475          CLR         D2
0000141E  1401                     476          MOVE.B      D1,D2
00001420  E642                     477          ASR         #three,D2
00001422  C47C 0007                478          AND         #seven,D2
00001426  4243                     479          CLR         D3        
00001428  1601                     480          MOVE.B      D1,D3
0000142A  C67C 0007                481          AND         #seven,D3
0000142E                           482          
0000142E  4241                     483          CLR         D1
00001430  3218                     484          MOVE.W      (A0)+, D1
00001432                           485          
00001432  43F9 00002281            486          LEA         hashTag, A1           ; Display space
00001438  103C 000E                487          MOVE.B      #14, D0             ; command for trap call to display message
0000143C  4E4F                     488          TRAP        #15                 ; trap call
0000143E                           489          
0000143E  103C 0003                490          MOVE.B      #3, D0
00001442  4E4F                     491          TRAP        #15
00001444                           492          
00001444  43F9 00002285            493          LEA         comma, A1           ; Display space
0000144A  103C 000E                494          MOVE.B      #14, D0             ; command for trap call to display message
0000144E  4E4F                     495          TRAP        #15                 ; trap call
00001450                           496          
00001450  4EB9 00001C26            497          JSR         printEA
00001456                           498          
00001456  43F9 0000227A            499          LEA         newLine, A1           ; Display space
0000145C  103C 000E                500          MOVE.B      #14, D0             ; command for trap call to display message
00001460  4E4F                     501          TRAP        #15                 ; trap call
00001462                           502          
00001462  6000 FBA8                503          BRA         LOOP
00001466                           504       
00001466  43F9 00002317            505  opORIL  LEA         dispLong, A1        ; Display byte
0000146C  103C 000E                506          MOVE.B      #14, D0             ; command for trap call to display message
00001470  4E4F                     507          TRAP        #15                 ; trap call
00001472                           508          
00001472  43F9 0000227E            509          LEA         space, A1           ; Display space
00001478  103C 000E                510          MOVE.B      #14, D0             ; command for trap call to display message
0000147C  4E4F                     511          TRAP        #15                 ; trap call
0000147E                           512          
0000147E  4242                     513          CLR         D2
00001480  1401                     514          MOVE.B      D1,D2
00001482  E642                     515          ASR         #three,D2
00001484  C47C 0007                516          AND         #seven,D2
00001488  4243                     517          CLR         D3        
0000148A  1601                     518          MOVE.B      D1,D3
0000148C  C67C 0007                519          AND         #seven,D3
00001490                           520          
00001490  4241                     521          CLR         D1
00001492  2218                     522          MOVE.L      (A0)+, D1
00001494                           523          
00001494  43F9 00002281            524          LEA         hashTag, A1           ; Display space
0000149A  103C 000E                525          MOVE.B      #14, D0             ; command for trap call to display message
0000149E  4E4F                     526          TRAP        #15                 ; trap call
000014A0                           527          
000014A0  103C 0003                528          MOVE.B      #3, D0
000014A4  4E4F                     529          TRAP        #15
000014A6                           530          
000014A6  43F9 00002285            531          LEA         comma, A1           ; Display space
000014AC  103C 000E                532          MOVE.B      #14, D0             ; command for trap call to display message
000014B0  4E4F                     533          TRAP        #15                 ; trap call
000014B2                           534          
000014B2  4EB9 00001C26            535          JSR         printEA
000014B8                           536          
000014B8  43F9 0000227A            537          LEA         newLine, A1           ; Display space
000014BE  103C 000E                538          MOVE.B      #14, D0             ; command for trap call to display message
000014C2  4E4F                     539          TRAP        #15                 ; trap call
000014C4                           540          
000014C4  6000 FB46                541          BRA         LOOP
000014C8                           542           
000014C8  43F9 00002293            543  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000014CE  103C 000E                544          MOVE.B      #14, D0             ; command for trap call to display message
000014D2  4E4F                     545          TRAP        #15                 ; trap call
000014D4                           546                  
000014D4  1218                     547          MOVE.B      (A0)+, D1
000014D6  1401                     548          MOVE.B      D1,D2               ; copy data over
000014D8  EC42                     549          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000014DA  B43C 0000                550          CMP.B       #zero,D2
000014DE  6700 0034                551          BEQ         opCMPIB
000014E2  B43C 0001                552          CMP.B       #one,D2
000014E6  6700 008E                553          BEQ         opCMPIW
000014EA  B43C 0002                554          CMP.B       #two,D2
000014EE  6700 00E8                555          BEQ         opCMPIL
000014F2                           556          
000014F2  1401                     557          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000014F4  E542                     558          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
000014F6  1802                     559          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
000014F8  4242                     560          CLR         D2                  ; Clear out data register
000014FA  1404                     561          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
000014FC  EA42                     562          ASR         #five,D2            ; Shift the register out to get just the mode
000014FE  1802                     563          MOVE.B      D2,D4               ; Store mode into D4
00001500  4242                     564          CLR         D2
00001502                           565          
00001502  1401                     566          MOVE.B      D1,D2               ; Getting the EA register
00001504  EB42                     567          ASL         #five,D2
00001506  1A02                     568          MOVE.B      D2,D5               ; Move just the register into D5
00001508  4242                     569          CLR         D2                  ; Clearing D2 to put data back
0000150A  1405                     570          MOVE.B      D5,D2               ; Putting back the register
0000150C  EA42                     571          ASR         #five,D2            ; Shifting bits in order to read the register
0000150E  1A02                     572          MOVE.B      D2,D5               ; Store register into D5
00001510                           573          
00001510  6000 FAFA                574          BRA         LOOP                ; go back to the loop
00001514                           575  
00001514  43F9 00002311            576  opCMPIB LEA         dispByte, A1        ; Display byte
0000151A  103C 000E                577          MOVE.B      #14, D0             ; command for trap call to display message
0000151E  4E4F                     578          TRAP        #15                 ; trap call
00001520                           579          
00001520  43F9 0000227E            580          LEA         space, A1           ; Display space
00001526  103C 000E                581          MOVE.B      #14, D0             ; command for trap call to display message
0000152A  4E4F                     582          TRAP        #15                 ; trap call
0000152C                           583          
0000152C  4242                     584          CLR         D2
0000152E  1401                     585          MOVE.B      D1,D2
00001530  E642                     586          ASR         #three,D2
00001532  C47C 0007                587          AND         #seven,D2
00001536  4243                     588          CLR         D3        
00001538  1601                     589          MOVE.B      D1,D3
0000153A  C67C 0007                590          AND         #seven,D3
0000153E                           591          
0000153E  4241                     592          CLR         D1
00001540  3218                     593          MOVE.W      (A0)+, D1
00001542                           594          
00001542  43F9 00002281            595          LEA         hashTag, A1           ; Display space
00001548  103C 000E                596          MOVE.B      #14, D0             ; command for trap call to display message
0000154C  4E4F                     597          TRAP        #15                 ; trap call
0000154E                           598          
0000154E  103C 0003                599          MOVE.B      #3, D0
00001552  4E4F                     600          TRAP        #15
00001554                           601          
00001554  43F9 00002285            602          LEA         comma, A1           ; Display space
0000155A  103C 000E                603          MOVE.B      #14, D0             ; command for trap call to display message
0000155E  4E4F                     604          TRAP        #15                 ; trap call
00001560                           605          
00001560  4EB9 00001C26            606          JSR         printEA
00001566                           607          
00001566  43F9 0000227A            608          LEA         newLine, A1           ; Display space
0000156C  103C 000E                609          MOVE.B      #14, D0             ; command for trap call to display message
00001570  4E4F                     610          TRAP        #15                 ; trap call
00001572                           611  
00001572  6000 FA98                612          BRA         LOOP
00001576                           613  
00001576  43F9 00002314            614  opCMPIW LEA         dispWord, A1        ; Display byte
0000157C  103C 000E                615          MOVE.B      #14, D0             ; command for trap call to display message
00001580  4E4F                     616          TRAP        #15                 ; trap call
00001582                           617          
00001582  43F9 0000227E            618          LEA         space, A1           ; Display space
00001588  103C 000E                619          MOVE.B      #14, D0             ; command for trap call to display message
0000158C  4E4F                     620          TRAP        #15                 ; trap call
0000158E                           621          
0000158E  4242                     622          CLR         D2
00001590  1401                     623          MOVE.B      D1,D2
00001592  E642                     624          ASR         #three,D2
00001594  C47C 0007                625          AND         #seven,D2
00001598  4243                     626          CLR         D3        
0000159A  1601                     627          MOVE.B      D1,D3
0000159C  C67C 0007                628          AND         #seven,D3
000015A0                           629          
000015A0  4241                     630          CLR         D1
000015A2  3218                     631          MOVE.W      (A0)+, D1
000015A4                           632          
000015A4  43F9 00002281            633          LEA         hashTag, A1           ; Display space
000015AA  103C 000E                634          MOVE.B      #14, D0             ; command for trap call to display message
000015AE  4E4F                     635          TRAP        #15                 ; trap call
000015B0                           636          
000015B0  103C 0003                637          MOVE.B      #3, D0
000015B4  4E4F                     638          TRAP        #15
000015B6                           639          
000015B6  43F9 00002285            640          LEA         comma, A1           ; Display space
000015BC  103C 000E                641          MOVE.B      #14, D0             ; command for trap call to display message
000015C0  4E4F                     642          TRAP        #15                 ; trap call
000015C2                           643          
000015C2  4EB9 00001C26            644          JSR         printEA
000015C8                           645          
000015C8  43F9 0000227A            646          LEA         newLine, A1           ; Display space
000015CE  103C 000E                647          MOVE.B      #14, D0             ; command for trap call to display message
000015D2  4E4F                     648          TRAP        #15                 ; trap call
000015D4  6000 FA36                649          BRA         LOOP
000015D8                           650  
000015D8  43F9 00002317            651  opCMPIL LEA         dispLong, A1        ; Display byte
000015DE  103C 000E                652          MOVE.B      #14, D0             ; command for trap call to display message
000015E2  4E4F                     653          TRAP        #15                 ; trap call
000015E4                           654          
000015E4  43F9 0000227E            655          LEA         space, A1           ; Display space
000015EA  103C 000E                656          MOVE.B      #14, D0             ; command for trap call to display message
000015EE  4E4F                     657          TRAP        #15                 ; trap call
000015F0                           658          
000015F0  4242                     659          CLR         D2
000015F2  1401                     660          MOVE.B      D1,D2
000015F4  E642                     661          ASR         #three,D2
000015F6  C47C 0007                662          AND         #seven,D2
000015FA  4243                     663          CLR         D3        
000015FC  1601                     664          MOVE.B      D1,D3
000015FE  C67C 0007                665          AND         #seven,D3
00001602                           666          
00001602  4241                     667          CLR         D1
00001604  3218                     668          MOVE.W      (A0)+, D1
00001606                           669          
00001606  43F9 00002281            670          LEA         hashTag, A1           ; Display space
0000160C  103C 000E                671          MOVE.B      #14, D0             ; command for trap call to display message
00001610  4E4F                     672          TRAP        #15                 ; trap call
00001612                           673          
00001612  103C 0003                674          MOVE.B      #3, D0
00001616  4E4F                     675          TRAP        #15
00001618                           676          
00001618  43F9 00002285            677          LEA         comma, A1           ; Display space
0000161E  103C 000E                678          MOVE.B      #14, D0             ; command for trap call to display message
00001622  4E4F                     679          TRAP        #15                 ; trap call
00001624                           680          
00001624  4EB9 00001C26            681          JSR         printEA
0000162A                           682          
0000162A  43F9 0000227A            683          LEA         newLine, A1           ; Display space
00001630  103C 000E                684          MOVE.B      #14, D0             ; command for trap call to display message
00001634  4E4F                     685          TRAP        #15                 ; trap call
00001636                           686          
00001636  6000 F9D4                687          BRA         LOOP
0000163A                           688  
0000163A  43F9 00002298            689  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001640  103C 000E                690                  MOVE.B      #14, D0             ; command for trap call to display message
00001644  4E4F                     691                  TRAP        #15                 ; trap call
00001646                           692  
00001646  43F9 0000227E            693                  LEA         space, A1           ; Display space
0000164C  103C 000E                694                  MOVE.B      #14, D0             ; command for trap call to display message
00001650  4E4F                     695                  TRAP        #15                 ; trap call
00001652                           696                  
00001652  4242                     697                  CLR         D2
00001654  1218                     698                  MOVE.B      (A0)+, D1
00001656  1401                     699                  MOVE.B      D1,D2               ; copy data over
00001658  E642                     700                  ASR         #three,D2           ; Shift to the right to remove register
0000165A  C47C 0007                701                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
0000165E                           702                  
0000165E  4243                     703                  CLR         D3                  ; Clear D3 so we can move D1 in
00001660  1601                     704                  MOVE.B      D1,D3               ; Move othr byte in
00001662  C67C 0007                705                  AND         #seven,D3           ; Set everything besides register to 0
00001666                           706                  
00001666  4241                     707                  CLR         D1
00001668  3218                     708                  MOVE.W      (A0)+, D1
0000166A                           709                 
0000166A                           710                  
0000166A  43F9 00002281            711                  LEA         hashTag, A1           ; Display space
00001670  103C 000E                712                  MOVE.B      #14, D0             ; command for trap call to display message
00001674  4E4F                     713                  TRAP        #15                 ; trap call
00001676                           714          
00001676  103C 0003                715                  MOVE.B      #3, D0
0000167A  4E4F                     716                  TRAP        #15
0000167C                           717          
0000167C  43F9 00002285            718                  LEA         comma, A1           ; Display space
00001682  103C 000E                719                  MOVE.B      #14, D0             ; command for trap call to display message
00001686  4E4F                     720                  TRAP        #15                 ; trap call
00001688                           721                  
00001688  4EB9 00001C26            722                  JSR         printEA
0000168E                           723          
0000168E  43F9 0000227A            724                  LEA         newLine, A1           ; Display space
00001694  103C 000E                725                  MOVE.B      #14, D0             ; command for trap call to display message
00001698  4E4F                     726                  TRAP        #15                 ; trap call
0000169A                           727                  
0000169A                           728                  
0000169A  6000 F970                729                  BRA         LOOP                
0000169E                           730          
0000169E                           731  opDynBCLR       
0000169E  4241                     732                  CLR         D1
000016A0  1218                     733                  MOVE.B      (A0)+,D1            ; Copy second byte in
000016A2  1601                     734                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
000016A4  E243                     735                  ASR         #one,D3             ; Shift register over to the end
000016A6  C67C 0007                736                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
000016AA                           737                  
000016AA  1401                     738                  MOVE.B      D1,D2
000016AC  EC42                     739                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
000016AE  B47C 0002                740                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
000016B2  6600 0BC2                741                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
000016B6                           742  
000016B6                           743                  
000016B6  43F9 00002298            744                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
000016BC  103C 000E                745                  MOVE.B      #14, D0             ; command for trap call to display message
000016C0  4E4F                     746                  TRAP        #15                 ; trap call  
000016C2                           747                  
000016C2  43F9 0000227E            748                  LEA         space, A1           ; Display space
000016C8  103C 000E                749                  MOVE.B      #14, D0             ; command for trap call to display message
000016CC  4E4F                     750                  TRAP        #15                 ; trap call
000016CE                           751                  
000016CE  143C 0000                752                  MOVE.B      #zero,D2                
000016D2  4EB9 00001C26            753                  JSR         printEA
000016D8                           754                  
000016D8  43F9 00002285            755                  LEA         comma, A1           ; Display space
000016DE  103C 000E                756                  MOVE.B      #14, D0             ; command for trap call to display message
000016E2  4E4F                     757                  TRAP        #15                 ; trap call
000016E4                           758                  
000016E4  4242                     759                  CLR         D2
000016E6  1401                     760                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000016E8  E642                     761                  ASR         #three,D2           ; Remove/shift the register out
000016EA  C47C 0007                762                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000016EE                           763                  
000016EE  4243                     764                  CLR         D3                  ; Clearing D3 to avoid mashing data
000016F0  1601                     765                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000016F2  C67C 0007                766                  AND         #seven,D3           ; Change all bits except for register bits to 0
000016F6                           767                  
000016F6                           768  
000016F6  4EB9 00001C26            769                  JSR         printEA
000016FC                           770          
000016FC  43F9 0000227A            771                  LEA         newLine, A1           ; Display space
00001702  103C 000E                772                  MOVE.B      #14, D0             ; command for trap call to display message
00001706  4E4F                     773                  TRAP        #15                 ; trap call            
00001708                           774  
00001708                           775  
00001708  6000 F902                776                  BRA         LOOP                ; go back to the loop
0000170C                           777   
0000170C                           778  opMOVEB 
0000170C  43F9 0000229D            779          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
00001712  103C 000E                780          MOVE.B      #14, D0             ; command for trap call to display message
00001716  4E4F                     781          TRAP        #15                 ; trap call
00001718  43F9 00002311            782          LEA         dispByte, A1        ; display byte
0000171E  103C 000E                783          MOVE.B      #14, D0             ; command for trap call to display message
00001722  4E4F                     784          TRAP        #15                 ; trap call
00001724  43F9 0000227E            785          LEA         space, A1           ; create spaces
0000172A  103C 000E                786          MOVE.B      #14, D0             ; command for trap call to display message
0000172E  4E4F                     787          TRAP        #15                 ; trap call
00001730                           788          
00001730                           789          
00001730  4245                     790          CLR         D5                  ; Clear D5
00001732  1A01                     791          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001734  E245                     792          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001736  CA7C 0007                793          AND         #seven,D5
0000173A                           794          
0000173A  4244                     795          CLR         D4                  ; Clear out D4
0000173C  1801                     796          MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000173E  C87C 0001                797          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001742                           798          
00001742  4241                     799          CLR          D1
00001744  4242                     800          CLR          D2
00001746  1218                     801          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001748  1401                     802          MOVE.B      D1,D2
0000174A  EC42                     803          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000174C  D842                     804          ADD         D2,D4               ; Adds the remaining bits to D4
0000174E                           805          
0000174E  4242                     806          CLR         D2
00001750  1401                     807          MOVE.B      D1,D2               ; Copy new byte over to D2
00001752  E642                     808          ASR         #three,D2           ; Shift source register out
00001754  C47C 0007                809          AND         #seven,D2           ; Set everything to 0 except for the mode
00001758                           810          
00001758  4243                     811          CLR         D3
0000175A  1601                     812          MOVE.B      D1,D3
0000175C  C67C 0007                813          AND         #seven,D3
00001760                           814          
00001760  4EB9 00001C26            815          JSR         printEA
00001766                           816          
00001766  43F9 00002285            817          LEA         comma, A1           ; Display space
0000176C  103C 000E                818          MOVE.B      #14, D0             ; command for trap call to display message
00001770  4E4F                     819          TRAP        #15                 ; trap call
00001772                           820          
00001772  4242                     821          CLR         D2
00001774  4243                     822          CLR         D3
00001776  1404                     823          MOVE.B      D4,D2
00001778  1605                     824          MOVE.B      D5,D3
0000177A                           825          
0000177A  4EB9 00001C26            826          JSR         printEA
00001780                           827          
00001780                           828          
00001780  43F9 0000227A            829          LEA         newLine, A1           ; Display space
00001786  103C 000E                830          MOVE.B      #14, D0             ; command for trap call to display message
0000178A  4E4F                     831          TRAP        #15                 ; trap call            
0000178C                           832  
0000178C                           833  
0000178C  6000 F87E                834          BRA         LOOP                ; go back to the loop
00001790                           835          
00001790                           836  opMOVEL     
00001790                           837          
00001790  4245                     838              CLR         D5                  ; Clear D5
00001792  1A01                     839              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001794  E245                     840              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001796  CA7C 0007                841              AND         #seven,D5
0000179A                           842          
0000179A  4244                     843              CLR         D4                  ; Clear out D4
0000179C  1801                     844              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000179E  C87C 0001                845              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
000017A2                           846          
000017A2  4241                     847              CLR          D1
000017A4  4242                     848              CLR          D2
000017A6  1218                     849              MOVE.B      (A0)+,D1            ; Copy byte into D1
000017A8  1401                     850              MOVE.B      D1,D2
000017AA  EC42                     851              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000017AC  D842                     852              ADD         D2,D4               ; Adds the remaining bits to D4
000017AE                           853          
000017AE  B87C 0001                854              CMP         #one,D4             ; Check if it is MOVEA
000017B2  6700 006C                855              BEQ         opMOVEAL            ; If it is, branch off
000017B6                           856              
000017B6  43F9 0000229D            857              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000017BC  103C 000E                858              MOVE.B      #14, D0             ; command for trap call to display message
000017C0  4E4F                     859              TRAP        #15                 ; trap call  
000017C2                           860              
000017C2                           861              
000017C2  43F9 00002317            862              LEA         dispLong,A1
000017C8  103C 000E                863              MOVE.B      #14, D0             ; command for trap call to display message
000017CC  4E4F                     864              TRAP        #15                 ; trap call
000017CE                           865              
000017CE  43F9 0000227E            866              LEA         space, A1           ; create spaces
000017D4  103C 000E                867              MOVE.B      #14, D0             ; command for trap call to display message
000017D8  4E4F                     868              TRAP        #15                 ; trap call
000017DA                           869          
000017DA  4242                     870              CLR         D2
000017DC  1401                     871              MOVE.B      D1,D2               ; Copy new byte over to D2
000017DE  E642                     872              ASR         #three,D2           ; Shift source register out
000017E0  C47C 0007                873              AND         #seven,D2           ; Set everything to 0 except for the mode
000017E4                           874          
000017E4  4243                     875              CLR         D3
000017E6  1601                     876              MOVE.B      D1,D3
000017E8  C67C 0007                877              AND         #seven,D3
000017EC                           878              
000017EC  4241                     879              CLR         D1                  ; Clear D1
000017EE  2218                     880              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
000017F0                           881              
000017F0  4EB9 00001C26            882              JSR         printEA
000017F6                           883              
000017F6  43F9 00002285            884              LEA         comma, A1           ; Display comma
000017FC  103C 000E                885              MOVE.B      #14, D0             ; command for trap call to display message
00001800  4E4F                     886              TRAP        #15                 ; trap call
00001802                           887          
00001802  4242                     888              CLR         D2
00001804  4243                     889              CLR         D3
00001806  1404                     890              MOVE.B      D4,D2
00001808  1605                     891              MOVE.B      D5,D3
0000180A                           892              
0000180A                           893  
0000180A                           894              
0000180A  4EB9 00001C26            895              JSR         printEA
00001810                           896          
00001810                           897          
00001810  43F9 0000227A            898              LEA         newLine, A1           ; Display space
00001816  103C 000E                899              MOVE.B      #14, D0             ; command for trap call to display message
0000181A  4E4F                     900              TRAP        #15                 ; trap call            
0000181C                           901  
0000181C                           902  
0000181C  6000 F7EE                903              BRA         LOOP                ; go back to the loop
00001820                           904              
00001820                           905  opMOVEAL
00001820                           906  
00001820  43F9 000022A2            907              LEA         MOVEAmatch,A1
00001826  103C 000E                908              MOVE.B      #14, D0             ; command for trap call to display message
0000182A  4E4F                     909              TRAP        #15                 ; trap call
0000182C                           910              
0000182C  43F9 00002317            911              LEA         dispLong,A1
00001832  103C 000E                912              MOVE.B      #14, D0             ; command for trap call to display message
00001836  4E4F                     913              TRAP        #15                 ; trap call
00001838                           914              
00001838                           915  
00001838  43F9 0000227E            916              LEA         space, A1           ; create spaces
0000183E  103C 000E                917              MOVE.B      #14, D0             ; command for trap call to display message
00001842  4E4F                     918              TRAP        #15                 ; trap call
00001844                           919              
00001844  4242                     920              CLR         D2
00001846  1401                     921              MOVE.B      D1,D2               ; Copy new byte over to D2
00001848  E642                     922              ASR         #three,D2           ; Shift source register out
0000184A  C47C 0007                923              AND         #seven,D2           ; Set everything to 0 except for the mode
0000184E                           924          
0000184E  4243                     925              CLR         D3
00001850  1601                     926              MOVE.B      D1,D3
00001852  C67C 0007                927              AND         #seven,D3
00001856                           928              
00001856  4241                     929              CLR         D1                  ; Clear D1
00001858  3218                     930              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
0000185A                           931              
0000185A                           932              
0000185A  4EB9 00001C26            933              JSR         printEA
00001860                           934              
00001860  43F9 00002285            935              LEA         comma, A1           ; Display comma
00001866  103C 000E                936              MOVE.B      #14, D0             ; command for trap call to display message
0000186A  4E4F                     937              TRAP        #15                 ; trap call
0000186C                           938  
0000186C  4242                     939              CLR         D2
0000186E  4243                     940              CLR         D3
00001870  1404                     941              MOVE.B      D4,D2
00001872  1605                     942              MOVE.B      D5,D3
00001874                           943          
00001874  4EB9 00001C26            944              JSR         printEA
0000187A                           945          
0000187A                           946          
0000187A  43F9 0000227A            947              LEA         newLine, A1           ; Display space
00001880  103C 000E                948              MOVE.B      #14, D0             ; command for trap call to display message
00001884  4E4F                     949              TRAP        #15                 ; trap call            
00001886                           950  
00001886                           951  
00001886  6000 F784                952              BRA         LOOP                ; go back to the loop
0000188A                           953  
0000188A                           954  opMOVEW
0000188A                           955          
0000188A  4245                     956              CLR         D5                  ; Clear D5
0000188C  1A01                     957              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000188E  E245                     958              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001890  CA7C 0007                959              AND         #seven,D5
00001894                           960          
00001894  4244                     961              CLR         D4                  ; Clear out D4
00001896  1801                     962              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001898  C87C 0001                963              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000189C                           964          
0000189C  4241                     965              CLR          D1
0000189E  4242                     966              CLR          D2
000018A0  1218                     967              MOVE.B      (A0)+,D1            ; Copy byte into D1
000018A2  1401                     968              MOVE.B      D1,D2
000018A4  EC42                     969              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000018A6  D842                     970              ADD         D2,D4               ; Adds the remaining bits to D4
000018A8                           971          
000018A8  B87C 0001                972              CMP         #one,D4             ; Check if it is MOVEA
000018AC  6700 006C                973              BEQ         opMOVEAW            ; If it is, branch off
000018B0                           974              
000018B0  43F9 0000229D            975              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000018B6  103C 000E                976              MOVE.B      #14, D0             ; command for trap call to display message
000018BA  4E4F                     977              TRAP        #15                 ; trap call  
000018BC                           978              
000018BC  43F9 00002314            979              LEA         dispWord,A1
000018C2  103C 000E                980              MOVE.B      #14, D0             ; command for trap call to display message
000018C6  4E4F                     981              TRAP        #15                 ; trap call
000018C8                           982              
000018C8  43F9 0000227E            983              LEA         space, A1           ; create spaces
000018CE  103C 000E                984              MOVE.B      #14, D0             ; command for trap call to display message
000018D2  4E4F                     985              TRAP        #15                 ; trap call
000018D4                           986          
000018D4  4242                     987              CLR         D2
000018D6  1401                     988              MOVE.B      D1,D2               ; Copy new byte over to D2
000018D8  E642                     989              ASR         #three,D2           ; Shift source register out
000018DA  C47C 0007                990              AND         #seven,D2           ; Set everything to 0 except for the mode
000018DE                           991          
000018DE  4243                     992              CLR         D3
000018E0  1601                     993              MOVE.B      D1,D3
000018E2  C67C 0007                994              AND         #seven,D3
000018E6                           995              
000018E6  4241                     996              CLR         D1                  ; Clear D1
000018E8  3218                     997              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
000018EA                           998              
000018EA  4EB9 00001C26            999              JSR         printEA
000018F0                          1000              
000018F0  43F9 00002285           1001              LEA         comma, A1           ; Display comma
000018F6  103C 000E               1002              MOVE.B      #14, D0             ; command for trap call to display message
000018FA  4E4F                    1003              TRAP        #15                 ; trap call
000018FC                          1004          
000018FC  4242                    1005              CLR         D2
000018FE  4243                    1006              CLR         D3
00001900  1404                    1007              MOVE.B      D4,D2
00001902  1605                    1008              MOVE.B      D5,D3
00001904                          1009              
00001904                          1010  
00001904                          1011              
00001904  4EB9 00001C26           1012              JSR         printEA
0000190A                          1013          
0000190A                          1014          
0000190A  43F9 0000227A           1015              LEA         newLine, A1           ; Display space
00001910  103C 000E               1016              MOVE.B      #14, D0             ; command for trap call to display message
00001914  4E4F                    1017              TRAP        #15                 ; trap call            
00001916                          1018  
00001916                          1019  
00001916  6000 F6F4               1020              BRA         LOOP                ; go back to the loop
0000191A                          1021  opMOVEAW  
0000191A  43F9 000022A2           1022              LEA         MOVEAmatch,A1
00001920  103C 000E               1023              MOVE.B      #14, D0             ; command for trap call to display message
00001924  4E4F                    1024              TRAP        #15                 ; trap call
00001926                          1025              
00001926  43F9 00002314           1026              LEA         dispWord,A1
0000192C  103C 000E               1027              MOVE.B      #14, D0             ; command for trap call to display message
00001930  4E4F                    1028              TRAP        #15                 ; trap call
00001932                          1029              
00001932                          1030  
00001932  43F9 0000227E           1031              LEA         space, A1           ; create spaces
00001938  103C 000E               1032              MOVE.B      #14, D0             ; command for trap call to display message
0000193C  4E4F                    1033              TRAP        #15                 ; trap call
0000193E                          1034              
0000193E  4242                    1035              CLR         D2
00001940  1401                    1036              MOVE.B      D1,D2               ; Copy new byte over to D2
00001942  E642                    1037              ASR         #three,D2           ; Shift source register out
00001944  C47C 0007               1038              AND         #seven,D2           ; Set everything to 0 except for the mode
00001948                          1039          
00001948  4243                    1040              CLR         D3
0000194A  1601                    1041              MOVE.B      D1,D3
0000194C  C67C 0007               1042              AND         #seven,D3
00001950                          1043              
00001950  4241                    1044              CLR         D1                  ; Clear D1
00001952  3218                    1045              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001954                          1046              
00001954                          1047              
00001954  4EB9 00001C26           1048              JSR         printEA
0000195A                          1049              
0000195A  43F9 00002285           1050              LEA         comma, A1           ; Display comma
00001960  103C 000E               1051              MOVE.B      #14, D0             ; command for trap call to display message
00001964  4E4F                    1052              TRAP        #15                 ; trap call
00001966                          1053  
00001966  4242                    1054              CLR         D2
00001968  4243                    1055              CLR         D3
0000196A  1404                    1056              MOVE.B      D4,D2
0000196C  1605                    1057              MOVE.B      D5,D3
0000196E                          1058          
0000196E  4EB9 00001C26           1059              JSR         printEA
00001974                          1060          
00001974                          1061          
00001974  43F9 0000227A           1062              LEA         newLine, A1           ; Display space
0000197A  103C 000E               1063              MOVE.B      #14, D0             ; command for trap call to display message
0000197E  4E4F                    1064              TRAP        #15                 ; trap call            
00001980                          1065  
00001980                          1066  
00001980  6000 F68A               1067              BRA         LOOP                ; go back to the loop
00001984                          1068  
00001984                          1069  opNEG   
00001984  43F9 000022A8           1070              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
0000198A  103C 000E               1071              MOVE.B      #14, D0             ; command for trap call to display message
0000198E  4E4F                    1072              TRAP        #15                 ; trap call
00001990                          1073          
00001990                          1074          
00001990  1218                    1075              MOVE.B      (A0)+, D1
00001992  1401                    1076              MOVE.B      D1,D2               ; copy data over
00001994  EC42                    1077              ASR         #six,D2
00001996                          1078              
00001996  B47C 0000               1079              CMP         #zero,D2
0000199A  6700 0016               1080              BEQ         opNEGB
0000199E  B47C 0001               1081              CMP         #one,D2
000019A2  6700 004E               1082              BEQ         opNEGL
000019A6  B47C 0002               1083              CMP         #two,D2
000019AA  6700 0086               1084              BEQ         opNEGW
000019AE  6000 08C0               1085              BRA         INVALID
000019B2                          1086  opNEGB
000019B2                          1087  
000019B2  43F9 00002311           1088              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
000019B8  103C 000E               1089              MOVE.B      #14, D0             ; command for trap call to display message
000019BC  4E4F                    1090              TRAP        #15                 ; trap call
000019BE                          1091          
000019BE  43F9 0000227E           1092              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000019C4  103C 000E               1093              MOVE.B      #14, D0             ; command for trap call to display message
000019C8  4E4F                    1094              TRAP        #15                 ; trap call
000019CA                          1095          
000019CA  4242                    1096              CLR         D2                  ; Clear Data register 2
000019CC  3401                    1097              MOVE        D1,D2               ; Move byte into D2
000019CE  E642                    1098              ASR         #three,D2           ; Shift mode into place and moves mode into place
000019D0  C47C 0007               1099              AND         #seven,D2           ; Stores mode
000019D4                          1100              
000019D4  4243                    1101              CLR         D3
000019D6  3601                    1102              MOVE        D1,D3
000019D8  C67C 0007               1103              AND         #seven,D3
000019DC                          1104          
000019DC  4EB9 00001C26           1105              JSR         printEA
000019E2                          1106                  
000019E2  43F9 0000227A           1107              LEA         newLine, A1           ; Display space
000019E8  103C 000E               1108              MOVE.B      #14, D0             ; command for trap call to display message
000019EC  4E4F                    1109              TRAP        #15                 ; trap call  
000019EE                          1110          
000019EE  6000 F61C               1111              BRA         LOOP
000019F2                          1112                  
000019F2                          1113  
000019F2                          1114  opNEGL
000019F2                          1115  
000019F2  43F9 00002317           1116              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
000019F8  103C 000E               1117              MOVE.B      #14, D0             ; command for trap call to display message
000019FC  4E4F                    1118              TRAP        #15                 ; trap call
000019FE                          1119  
000019FE  43F9 0000227E           1120              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001A04  103C 000E               1121              MOVE.B      #14, D0             ; command for trap call to display message
00001A08  4E4F                    1122              TRAP        #15                 ; trap call
00001A0A                          1123                  
00001A0A  4242                    1124              CLR         D2                  ; Clear Data register 2
00001A0C  3401                    1125              MOVE        D1,D2               ; Move byte into D2
00001A0E  E642                    1126              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001A10  C47C 0007               1127              AND         #seven,D2           ; Stores mode
00001A14                          1128          
00001A14  4243                    1129              CLR         D3
00001A16  3601                    1130              MOVE        D1,D3
00001A18  C67C 0007               1131              AND         #seven,D3
00001A1C                          1132          
00001A1C  4EB9 00001C26           1133              JSR         printEA
00001A22                          1134                      
00001A22  43F9 0000227A           1135              LEA         newLine, A1         ; Display space
00001A28  103C 000E               1136              MOVE.B      #14, D0             ; command for trap call to display message
00001A2C  4E4F                    1137              TRAP        #15                 ; trap call  
00001A2E                          1138          
00001A2E  6000 F5DC               1139              BRA         LOOP
00001A32                          1140          
00001A32                          1141  
00001A32                          1142  opNEGW
00001A32                          1143  
00001A32  43F9 00002314           1144              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001A38  103C 000E               1145              MOVE.B      #14, D0             ; command for trap call to display message
00001A3C  4E4F                    1146              TRAP        #15                 ; trap call
00001A3E                          1147          
00001A3E  43F9 0000227E           1148              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001A44  103C 000E               1149              MOVE.B      #14, D0             ; command for trap call to display message
00001A48  4E4F                    1150              TRAP        #15                 ; trap call        
00001A4A                          1151                  
00001A4A  4242                    1152              CLR         D2                  ; Clear Data register 2
00001A4C  3401                    1153              MOVE        D1,D2               ; Move byte into D2
00001A4E  E642                    1154              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001A50  C47C 0007               1155              AND         #seven,D2           ; Stores mode
00001A54                          1156          
00001A54  4243                    1157              CLR         D3
00001A56  3601                    1158              MOVE        D1,D3
00001A58  C67C 0007               1159              AND         #seven,D3
00001A5C                          1160          
00001A5C  4EB9 00001C26           1161              JSR         printEA
00001A62                          1162              
00001A62  43F9 0000227A           1163              LEA         newLine, A1           ; Display space
00001A68  103C 000E               1164              MOVE.B      #14, D0             ; command for trap call to display message
00001A6C  4E4F                    1165              TRAP        #15                 ; trap call  
00001A6E                          1166          
00001A6E  6000 F59C               1167              BRA         LOOP
00001A72                          1168  
00001A72                          1169  opRTSJSR
00001A72                          1170          
00001A72  1218                    1171              MOVE.B      (A0)+, D1
00001A74                          1172              
00001A74  1401                    1173              MOVE.B      D1,D2               ; copy data over
00001A76  B47C 0075               1174              CMP         #117,D2
00001A7A  6700 0050               1175              BEQ         opRTS
00001A7E                          1176              
00001A7E  EC42                    1177              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
00001A80  B47C 0002               1178              CMP         #two,D2             ; Checking if it is JSR
00001A84  6700 0006               1179              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001A88                          1180  
00001A88  6000 07E6               1181              BRA         invalid
00001A8C                          1182  
00001A8C                          1183  opJSR
00001A8C                          1184                        
00001A8C  43F9 000022B0           1185              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001A92  103C 000E               1186              MOVE.B      #14, D0             ; command for trap call to display message
00001A96  4E4F                    1187              TRAP        #15                 ; trap call
00001A98                          1188              
00001A98  43F9 0000227E           1189              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001A9E  103C 000E               1190              MOVE.B      #14, D0             ; command for trap call to display message
00001AA2  4E4F                    1191              TRAP        #15                 ; trap call
00001AA4                          1192              
00001AA4  4242                    1193              CLR         D2
00001AA6  4243                    1194              CLR         D3
00001AA8                          1195              
00001AA8  1401                    1196              MOVE.B      D1,D2
00001AAA  E642                    1197              ASR         #three,D2
00001AAC  C47C 0007               1198              AND         #seven,D2
00001AB0                          1199              
00001AB0  1601                    1200              MOVE.B      D1,D3
00001AB2  C67C 0007               1201              AND         #seven,D3
00001AB6                          1202              
00001AB6  4EB9 00001C26           1203              JSR         printEA
00001ABC                          1204              
00001ABC  43F9 0000227A           1205              LEA         newLine, A1           ; Display space
00001AC2  103C 000E               1206              MOVE.B      #14, D0             ; command for trap call to display message
00001AC6  4E4F                    1207              TRAP        #15                 ; trap call  
00001AC8                          1208              
00001AC8  6000 F542               1209              BRA         loop            
00001ACC                          1210  opRTS
00001ACC                          1211  
00001ACC  43F9 000022AC           1212              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
00001AD2  103C 000E               1213              MOVE.B      #14, D0             ; command for trap call to display message
00001AD6  4E4F                    1214              TRAP        #15                 ; trap call
00001AD8                          1215              
00001AD8  43F9 0000227A           1216              LEA         newLine, A1           ; Display space
00001ADE  103C 000E               1217              MOVE.B      #14, D0             ; command for trap call to display message
00001AE2  4E4F                    1218              TRAP        #15                 ; trap call 
00001AE4                          1219              
00001AE4  6000 F526               1220              BRA         loop
00001AE8                          1221  
00001AE8                          1222  opMOVEMLEA
00001AE8  4242                    1223              CLR         D2                  ; Clear D2
00001AEA  1401                    1224              MOVE.B      D1,D2               ; Copy byte over
00001AEC  C47C 000F               1225              AND         #secNib,D2          ; Check only the second nibble
00001AF0  B47C 000C               1226              CMP         #twelve,D2          ; Compare the second nibble to twelve
00001AF4  6700 000E               1227              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
00001AF8  B47C 0008               1228              CMP         #eight,D2           ; Compare the second nibble to eight
00001AFC  6700 0006               1229              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
00001B00  6000 001A               1230              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
00001B04                          1231              
00001B04                          1232  opMOVEM
00001B04                          1233  
00001B04  43F9 000022AC           1234              LEA         RTSMatch, A1       ; we know that the opcode will be MOVEM, so load A1 to print message
00001B0A  103C 000E               1235              MOVE.B      #14, D0             ; command for trap call to display message
00001B0E  4E4F                    1236              TRAP        #15                 ; trap call
00001B10                          1237              
00001B10  4244                    1238              CLR         D4                  ; Clearing D4 to store dr field
00001B12  1801                    1239              MOVE.B      D1,D4               ; Moving byte to find dr field
00001B14  E444                    1240              ASR         #two,D4             ; Moving dr field to readable spot
00001B16  C87C 0001               1241              AND         #one,D4             ; seting everything except dr to 0
00001B1A                          1242              
00001B1A  1218                    1243              MOVE.B      (A0)+, D1
00001B1C                          1244              
00001B1C                          1245  
00001B1C                          1246  opLEA
00001B1C                          1247  
00001B1C                          1248  ***********************************************************************************************************
00001B1C                          1249  *
00001B1C                          1250  *               SUBQ OPCODE
00001B1C                          1251  *
00001B1C                          1252  ***********************************************************************************************************
00001B1C                          1253  
00001B1C                          1254  opSUBQ      
00001B1C  43F9 000022BE           1255              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
00001B22  103C 000E               1256              MOVE.B      #14, D0             ; command for trap call to display message
00001B26  4E4F                    1257              TRAP        #15                 ; trap call
00001B28                          1258  
00001B28                          1259  ***********************************************************************************************************
00001B28                          1260  *
00001B28                          1261  *               BRA OPCODE
00001B28                          1262  *
00001B28                          1263  ***********************************************************************************************************
00001B28                          1264              
00001B28  43F9 000022C3           1265  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001B2E  103C 000E               1266          MOVE.B      #14, D0             ; command for trap call to display message
00001B32  4E4F                    1267          TRAP        #15                 ; trap call
00001B34                          1268          
00001B34  4242                    1269          CLR         D2
00001B36  4243                    1270          CLR         D3      
00001B38                          1271  
00001B38  43F9 0000227E           1272          LEA         space,A1
00001B3E  103C 000E               1273          MOVE.B      #14,D0
00001B42  4E4F                    1274          TRAP        #15
00001B44                          1275          
00001B44  143C 0007               1276          MOVE.B      #seven,D2
00001B48  1218                    1277          MOVE.B      (A0)+,D1
00001B4A  4EB9 00001C26           1278          JSR         printEA
00001B50                          1279          
00001B50  43F9 0000227A           1280          LEA         newLine, A1           ; create new line
00001B56  103C 000E               1281          MOVE.B      #14, D0             ; command for trap call to display message
00001B5A  4E4F                    1282          TRAP        #15                 ; trap call
00001B5C                          1283  
00001B5C  6000 F4AE               1284          BRA         LOOP
00001B60                          1285          
00001B60                          1286          
00001B60  43F9 000022C7           1287  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001B66  103C 000E               1288          MOVE.B      #14, D0             ; command for trap call to display message
00001B6A  4E4F                    1289          TRAP        #15                 ; trap call
00001B6C                          1290  
00001B6C  43F9 000022CB           1291  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001B72  103C 000E               1292          MOVE.B      #14, D0             ; command for trap call to display message
00001B76  4E4F                    1293          TRAP        #15                 ; trap call
00001B78                          1294  
00001B78  43F9 000022CF           1295  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001B7E  103C 000E               1296          MOVE.B      #14, D0             ; command for trap call to display message
00001B82  4E4F                    1297          TRAP        #15                 ; trap call
00001B84                          1298  
00001B84  43F9 000022D3           1299  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001B8A  103C 000E               1300          MOVE.B      #14, D0             ; command for trap call to display message
00001B8E  4E4F                    1301          TRAP        #15                 ; trap call
00001B90                          1302  
00001B90                          1303  ***********************************************************************************************************
00001B90                          1304  *
00001B90                          1305  *               SUB OPCODE
00001B90                          1306  *
00001B90                          1307  ***********************************************************************************************************
00001B90                          1308  
00001B90  43F9 000022DF           1309  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001B96  103C 000E               1310          MOVE.B      #14, D0             ; command for trap call to display message
00001B9A  4E4F                    1311          TRAP        #15                 ; trap call
00001B9C                          1312          
00001B9C                          1313          
00001B9C                          1314          
00001B9C  43F9 0000227E           1315          LEA         space,A1
00001BA2  103C 000E               1316          MOVE.B      #14,D0
00001BA6  4E4F                    1317          TRAP        #15
00001BA8                          1318          
00001BA8  1218                    1319          MOVE.B      (A0)+,D1
00001BAA  1401                    1320          MOVE.B      D1,D2
00001BAC  E842                    1321          ASR         #4,D2
00001BAE                          1322          
00001BAE  4EB9 00001C26           1323          JSR         printEA
00001BB4                          1324          
00001BB4  43F9 0000227A           1325          LEA         newLine,A1
00001BBA  103C 000E               1326          MOVE.B      #14,D0
00001BBE  4E4F                    1327          TRAP        #15
00001BC0                          1328          
00001BC0  6000 F44A               1329          BRA         LOOP
00001BC4                          1330          
00001BC4                          1331          
00001BC4                          1332          
00001BC4  43F9 000022EB           1333  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001BCA  103C 000E               1334          MOVE.B      #14, D0             ; command for trap call to display message
00001BCE  4E4F                    1335          TRAP        #15                 ; trap call
00001BD0                          1336  
00001BD0  43F9 00002305           1337  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001BD6  103C 000E               1338          MOVE.B      #14, D0             ; command for trap call to display message
00001BDA  4E4F                    1339          TRAP        #15                 ; trap call
00001BDC                          1340  
00001BDC  43F9 00002301           1341  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001BE2  103C 000E               1342          MOVE.B      #14, D0             ; command for trap call to display message
00001BE6  4E4F                    1343          TRAP        #15                 ; trap call
00001BE8                          1344  
00001BE8  43F9 000022FD           1345  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00001BEE  103C 000E               1346          MOVE.B      #14, D0             ; command for trap call to display message
00001BF2  4E4F                    1347          TRAP        #15                 ; trap call
00001BF4                          1348  
00001BF4  43F9 000022F9           1349  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001BFA  103C 000E               1350          MOVE.B      #14, D0             ; command for trap call to display message
00001BFE  4E4F                    1351          TRAP        #15                 ; trap call
00001C00                          1352  
00001C00  43F9 0000230D           1353  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001C06  103C 000E               1354          MOVE.B      #14, D0             ; command for trap call to display message
00001C0A  4E4F                    1355          TRAP        #15                 ; trap call
00001C0C                          1356  
00001C0C  43F9 00002309           1357  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001C12  103C 000E               1358          MOVE.B      #14, D0             ; command for trap call to display message
00001C16  4E4F                    1359          TRAP        #15                 ; trap call
00001C18                          1360  
00001C18                          1361  ***********************************************************************************************************
00001C18                          1362  *
00001C18                          1363  *                                           Register Finder
00001C18                          1364  *
00001C18                          1365  ***********************************************************************************************************
00001C18  48E7 FF7E               1366  findRege    MOVEM.L     D0-D7/A1-A6, -(SP)
00001C1C                          1367  
00001C1C  1218                    1368              MOVE.B      (A0)+,D1
00001C1E  1401                    1369              MOVE.B      D1,D2
00001C20                          1370              
00001C20  E842                    1371              ASR         #four,D2
00001C22                          1372              
00001C22  6000 003A               1373              BRA         pDataReg
00001C26                          1374          
00001C26                          1375  ***********************************************************************************************************
00001C26                          1376  *
00001C26                          1377  *                                           EA Print Check
00001C26                          1378  *
00001C26                          1379  ***********************************************************************************************************
00001C26  48E7 FF7E               1380  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00001C2A                          1381  
00001C2A  B43C 0000               1382              CMP.B       #zero, D2
00001C2E  6700 002E               1383              BEQ         pDataReg
00001C32  B43C 0001               1384              CMP.B       #one, D2
00001C36  6700 00E6               1385              BEQ         pAddrReg
00001C3A  B43C 0002               1386              CMP.B       #two, D2
00001C3E  6700 019E               1387              BEQ         pAddrDir
00001C42  B43C 0003               1388              CMP.B       #three, D2
00001C46  6700 02C2               1389              BEQ         pAddrPost
00001C4A  B43C 0004               1390              CMP.B       #four, D2
00001C4E  6700 0446               1391              BEQ         pAddrDec
00001C52  B43C 0007               1392              CMP.B       #seven, D2
00001C56  6700 0576               1393              BEQ         pHex
00001C5A  6000 0614               1394              BRA         invalid
00001C5E                          1395  
00001C5E                          1396  ***********************************************************************************************************
00001C5E                          1397  * Data Register        
00001C5E  B63C 0000               1398  pDataReg    CMP.B   #zero,D3
00001C62  6700 003A               1399              BEQ     displayD0
00001C66  B63C 0001               1400              CMP.B   #one,D3
00001C6A  6700 0042               1401              BEQ     displayD1
00001C6E  B63C 0002               1402              CMP.B   #two,D3
00001C72  6700 004A               1403              BEQ     displayD2
00001C76  B63C 0003               1404              CMP.B   #three,D3
00001C7A  6700 0052               1405              BEQ     displayD3
00001C7E  B63C 0004               1406              CMP.B   #four,D3
00001C82  6700 005A               1407              BEQ     displayD4
00001C86  B63C 0005               1408              CMP.B   #five,D3
00001C8A  6700 0062               1409              BEQ     displayD5
00001C8E  B63C 0006               1410              CMP.B   #six,D3
00001C92  6700 006A               1411              BEQ     displayD6
00001C96  B63C 0007               1412              CMP.B   #seven,D3
00001C9A  6700 0072               1413              BEQ     displayD7
00001C9E                          1414              
00001C9E  43F9 00002334           1415  displayD0   LEA         dispD0, A1          ; Display space
00001CA4  103C 000E               1416              MOVE.B      #14, D0             ; command for trap call to display message
00001CA8  4E4F                    1417              TRAP        #15                 ; trap call
00001CAA  6000 05C4               1418              BRA         endSUB              ; go to the end of the subroutine
00001CAE                          1419              
00001CAE  43F9 00002337           1420  displayD1   LEA         dispD1, A1          ; Display space
00001CB4  103C 000E               1421              MOVE.B      #14, D0             ; command for trap call to display message
00001CB8  4E4F                    1422              TRAP        #15                 ; trap call
00001CBA  6000 05B4               1423              BRA         endSUB              ; go to the end of the subroutine
00001CBE                          1424  
00001CBE  43F9 0000233A           1425  displayD2   LEA         dispD2, A1          ; Display space
00001CC4  103C 000E               1426              MOVE.B      #14, D0             ; command for trap call to display message
00001CC8  4E4F                    1427              TRAP        #15                 ; trap call
00001CCA  6000 05A4               1428              BRA         endSUB              ; go to the end of the subroutine
00001CCE                          1429  
00001CCE  43F9 0000233D           1430  displayD3   LEA         dispD3, A1          ; Display space
00001CD4  103C 000E               1431              MOVE.B      #14, D0             ; command for trap call to display message
00001CD8  4E4F                    1432              TRAP        #15                 ; trap call
00001CDA  6000 0594               1433              BRA         endSUB              ; go to the end of the subroutine
00001CDE                          1434  
00001CDE  43F9 00002340           1435  displayD4   LEA         dispD4, A1          ; Display space
00001CE4  103C 000E               1436              MOVE.B      #14, D0             ; command for trap call to display message
00001CE8  4E4F                    1437              TRAP        #15                 ; trap call
00001CEA  6000 0584               1438              BRA         endSUB              ; go to the end of the subroutine
00001CEE                          1439  
00001CEE  43F9 00002343           1440  displayD5   LEA         dispD5, A1          ; Display space
00001CF4  103C 000E               1441              MOVE.B      #14, D0             ; command for trap call to display message
00001CF8  4E4F                    1442              TRAP        #15                 ; trap call
00001CFA  6000 0574               1443              BRA         endSUB              ; go to the end of the subroutine
00001CFE                          1444  
00001CFE  43F9 00002346           1445  displayD6   LEA         dispD6, A1          ; Display space
00001D04  103C 000E               1446              MOVE.B      #14, D0             ; command for trap call to display message
00001D08  4E4F                    1447              TRAP        #15                 ; trap call
00001D0A  6000 0564               1448              BRA         endSUB              ; go to the end of the subroutine
00001D0E                          1449  
00001D0E  43F9 00002349           1450  displayD7   LEA         dispD7, A1          ; Display space
00001D14  103C 000E               1451              MOVE.B      #14, D0             ; command for trap call to display message
00001D18  4E4F                    1452              TRAP        #15                 ; trap call
00001D1A  6000 0554               1453              BRA         endSUB              ; go to the end of the subroutine
00001D1E                          1454  ***********************************************************************************************************
00001D1E                          1455  * Address Register
00001D1E  B63C 0000               1456  pAddrReg    CMP.B   #zero,D3
00001D22  6700 003A               1457              BEQ     displayA0
00001D26  B63C 0001               1458              CMP.B   #one,D3
00001D2A  6700 0042               1459              BEQ     displayA1
00001D2E  B63C 0002               1460              CMP.B   #two,D3
00001D32  6700 004A               1461              BEQ     displayA2
00001D36  B63C 0003               1462              CMP.B   #three,D3
00001D3A  6700 0052               1463              BEQ     displayA3
00001D3E  B63C 0004               1464              CMP.B   #four,D3
00001D42  6700 005A               1465              BEQ     displayA4
00001D46  B63C 0005               1466              CMP.B   #five,D3
00001D4A  6700 0062               1467              BEQ     displayA5
00001D4E  B63C 0006               1468              CMP.B   #six,D3
00001D52  6700 006A               1469              BEQ     displayA6
00001D56  B63C 0007               1470              CMP.B   #seven,D3
00001D5A  6700 0072               1471              BEQ     displayA7
00001D5E                          1472              
00001D5E  43F9 0000231A           1473  displayA0   LEA         dispA0, A1          ; Display space
00001D64  103C 000E               1474              MOVE.B      #14, D0             ; command for trap call to display message
00001D68  4E4F                    1475              TRAP        #15                 ; trap call
00001D6A  6000 0504               1476              BRA         endSUB              ; go to the end of the subroutine
00001D6E                          1477              
00001D6E  43F9 0000231D           1478  displayA1   LEA         dispA1, A1          ; Display space
00001D74  103C 000E               1479              MOVE.B      #14, D0             ; command for trap call to display message
00001D78  4E4F                    1480              TRAP        #15                 ; trap call
00001D7A  6000 04F4               1481              BRA         endSUB              ; go to the end of the subroutine
00001D7E                          1482  
00001D7E  43F9 00002320           1483  displayA2   LEA         dispA2, A1          ; Display space
00001D84  103C 000E               1484              MOVE.B      #14, D0             ; command for trap call to display message
00001D88  4E4F                    1485              TRAP        #15                 ; trap call
00001D8A  6000 04E4               1486              BRA         endSUB              ; go to the end of the subroutine
00001D8E                          1487  
00001D8E  43F9 00002323           1488  displayA3   LEA         dispA3, A1          ; Display space
00001D94  103C 000E               1489              MOVE.B      #14, D0             ; command for trap call to display message
00001D98  4E4F                    1490              TRAP        #15                 ; trap call
00001D9A  6000 04D4               1491              BRA         endSUB              ; go to the end of the subroutine
00001D9E                          1492  
00001D9E  43F9 00002326           1493  displayA4   LEA         dispA4, A1          ; Display space
00001DA4  103C 000E               1494              MOVE.B      #14, D0             ; command for trap call to display message
00001DA8  4E4F                    1495              TRAP        #15                 ; trap call
00001DAA  6000 04C4               1496              BRA         endSUB              ; go to the end of the subroutine
00001DAE                          1497  
00001DAE  43F9 00002329           1498  displayA5   LEA         dispA5, A1          ; Display space
00001DB4  103C 000E               1499              MOVE.B      #14, D0             ; command for trap call to display message
00001DB8  4E4F                    1500              TRAP        #15                 ; trap call
00001DBA  6000 04B4               1501              BRA         endSUB              ; go to the end of the subroutine
00001DBE                          1502  
00001DBE  43F9 0000232C           1503  displayA6   LEA         dispA6, A1          ; Display space
00001DC4  103C 000E               1504              MOVE.B      #14, D0             ; command for trap call to display message
00001DC8  4E4F                    1505              TRAP        #15                 ; trap call
00001DCA  6000 04A4               1506              BRA         endSUB              ; go to the end of the subroutine
00001DCE                          1507  
00001DCE  43F9 0000232F           1508  displayA7   LEA         dispA7, A1          ; Display space
00001DD4  103C 000E               1509              MOVE.B      #14, D0             ; command for trap call to display message
00001DD8  4E4F                    1510              TRAP        #15                 ; trap call
00001DDA  6000 0494               1511              BRA         endSUB              ; go to the end of the subroutine
00001DDE                          1512  
00001DDE                          1513  ***********************************************************************************************************
00001DDE                          1514  * Address Register Direct
00001DDE                          1515  
00001DDE  43F9 00002287           1516  pAddrDir    LEA         opPer, A1           ; Display space
00001DE4  103C 000E               1517              MOVE.B      #14, D0             ; command for trap call to display message
00001DE8  4E4F                    1518              TRAP        #15                 ; trap call
00001DEA                          1519              
00001DEA  B63C 0000               1520              CMP.B   #zero,D3
00001DEE  6700 003A               1521              BEQ     displayA0A
00001DF2  B63C 0001               1522              CMP.B   #one,D3
00001DF6  6700 004E               1523              BEQ     displayA1A
00001DFA  B63C 0002               1524              CMP.B   #two,D3
00001DFE  6700 0062               1525              BEQ     displayA2A
00001E02  B63C 0003               1526              CMP.B   #three,D3
00001E06  6700 0076               1527              BEQ     displayA3A
00001E0A  B63C 0004               1528              CMP.B   #four,D3
00001E0E  6700 008A               1529              BEQ     displayA4A
00001E12  B63C 0005               1530              CMP.B   #five,D3
00001E16  6700 009E               1531              BEQ     displayA5A
00001E1A  B63C 0006               1532              CMP.B   #six,D3
00001E1E  6700 00B2               1533              BEQ     displayA6A
00001E22  B63C 0007               1534              CMP.B   #seven,D3
00001E26  6700 00C6               1535              BEQ     displayA7A
00001E2A                          1536              
00001E2A  43F9 0000231A           1537  displayA0A  LEA         dispA0, A1          ; Display space
00001E30  103C 000E               1538              MOVE.B      #14, D0             ; command for trap call to display message
00001E34  4E4F                    1539              TRAP        #15                 ; trap call
00001E36  43F9 00002289           1540              LEA         clPer, A1           ; Display space
00001E3C  103C 000E               1541              MOVE.B      #14, D0             ; command for trap call to display message
00001E40  4E4F                    1542              TRAP        #15                 ; trap call
00001E42  6000 042C               1543              BRA         endSUB              ; go to the end of the subroutine
00001E46                          1544              
00001E46  43F9 0000231D           1545  displayA1A  LEA         dispA1, A1          ; Display space
00001E4C  103C 000E               1546              MOVE.B      #14, D0             ; command for trap call to display message
00001E50  4E4F                    1547              TRAP        #15                 ; trap call
00001E52  43F9 00002289           1548              LEA         clPer, A1           ; Display space
00001E58  103C 000E               1549              MOVE.B      #14, D0             ; command for trap call to display message
00001E5C  4E4F                    1550              TRAP        #15                 ; trap call
00001E5E  6000 0410               1551              BRA         endSUB              ; go to the end of the subroutine
00001E62                          1552  
00001E62  43F9 00002320           1553  displayA2A  LEA         dispA2, A1          ; Display space
00001E68  103C 000E               1554              MOVE.B      #14, D0             ; command for trap call to display message
00001E6C  4E4F                    1555              TRAP        #15                 ; trap call
00001E6E  43F9 00002289           1556              LEA         clPer, A1           ; Display space
00001E74  103C 000E               1557              MOVE.B      #14, D0             ; command for trap call to display message
00001E78  4E4F                    1558              TRAP        #15                 ; trap call
00001E7A  6000 03F4               1559              BRA         endSUB              ; go to the end of the subroutine
00001E7E                          1560  
00001E7E  43F9 00002323           1561  displayA3A  LEA         dispA3, A1          ; Display space
00001E84  103C 000E               1562              MOVE.B      #14, D0             ; command for trap call to display message
00001E88  4E4F                    1563              TRAP        #15                 ; trap call
00001E8A  43F9 00002289           1564              LEA         clPer, A1           ; Display space
00001E90  103C 000E               1565              MOVE.B      #14, D0             ; command for trap call to display message
00001E94  4E4F                    1566              TRAP        #15                 ; trap call
00001E96  6000 03D8               1567              BRA         endSUB              ; go to the end of the subroutine
00001E9A                          1568  
00001E9A  43F9 00002326           1569  displayA4A  LEA         dispA4, A1          ; Display space
00001EA0  103C 000E               1570              MOVE.B      #14, D0             ; command for trap call to display message
00001EA4  4E4F                    1571              TRAP        #15                 ; trap call
00001EA6  43F9 00002289           1572              LEA         clPer, A1           ; Display space
00001EAC  103C 000E               1573              MOVE.B      #14, D0             ; command for trap call to display message
00001EB0  4E4F                    1574              TRAP        #15                 ; trap call
00001EB2  6000 03BC               1575              BRA         endSUB              ; go to the end of the subroutine
00001EB6                          1576  
00001EB6  43F9 00002329           1577  displayA5A  LEA         dispA5, A1          ; Display space
00001EBC  103C 000E               1578              MOVE.B      #14, D0             ; command for trap call to display message
00001EC0  4E4F                    1579              TRAP        #15                 ; trap call
00001EC2  43F9 00002289           1580              LEA         clPer, A1           ; Display space
00001EC8  103C 000E               1581              MOVE.B      #14, D0             ; command for trap call to display message
00001ECC  4E4F                    1582              TRAP        #15                 ; trap call
00001ECE  6000 03A0               1583              BRA         endSUB              ; go to the end of the subroutine
00001ED2                          1584  
00001ED2  43F9 0000232C           1585  displayA6A  LEA         dispA6, A1          ; Display space
00001ED8  103C 000E               1586              MOVE.B      #14, D0             ; command for trap call to display message
00001EDC  4E4F                    1587              TRAP        #15                 ; trap call
00001EDE  43F9 00002289           1588              LEA         clPer, A1           ; Display space
00001EE4  103C 000E               1589              MOVE.B      #14, D0             ; command for trap call to display message
00001EE8  4E4F                    1590              TRAP        #15                 ; trap call
00001EEA  6000 0384               1591              BRA         endSUB              ; go to the end of the subroutine
00001EEE                          1592  
00001EEE  43F9 0000232F           1593  displayA7A  LEA         dispA7, A1          ; Display space
00001EF4  103C 000E               1594              MOVE.B      #14, D0             ; command for trap call to display message
00001EF8  4E4F                    1595              TRAP        #15                 ; trap call
00001EFA  43F9 00002289           1596              LEA         clPer, A1           ; Display space
00001F00  103C 000E               1597              MOVE.B      #14, D0             ; command for trap call to display message
00001F04  4E4F                    1598              TRAP        #15                 ; trap call
00001F06  6000 0368               1599              BRA         endSUB              ; go to the end of the subroutine
00001F0A                          1600              
00001F0A                          1601  ***********************************************************************************************************
00001F0A                          1602  * Addr Postincrement
00001F0A                          1603              
00001F0A  43F9 00002287           1604  pAddrPost   LEA         opPer, A1           ; Display space
00001F10  103C 000E               1605              MOVE.B      #14, D0             ; command for trap call to display message
00001F14  4E4F                    1606              TRAP        #15                 ; trap call
00001F16                          1607              
00001F16  B63C 0000               1608              CMP.B   #zero,D3
00001F1A  6700 003A               1609              BEQ     displayA0P
00001F1E  B63C 0001               1610              CMP.B   #one,D3
00001F22  6700 005A               1611              BEQ     displayA1P
00001F26  B63C 0002               1612              CMP.B   #two,D3
00001F2A  6700 007A               1613              BEQ     displayA2P
00001F2E  B63C 0003               1614              CMP.B   #three,D3
00001F32  6700 009A               1615              BEQ     displayA3P
00001F36  B63C 0004               1616              CMP.B   #four,D3
00001F3A  6700 00BA               1617              BEQ     displayA4P
00001F3E  B63C 0005               1618              CMP.B   #five,D3
00001F42  6700 00DA               1619              BEQ     displayA5P
00001F46  B63C 0006               1620              CMP.B   #six,D3
00001F4A  6700 00FA               1621              BEQ     displayA6P
00001F4E  B63C 0007               1622              CMP.B   #seven,D3
00001F52  6700 011A               1623              BEQ     displayA7P
00001F56                          1624              
00001F56  43F9 0000231A           1625  displayA0P  LEA         dispA0, A1          ; Display space
00001F5C  103C 000E               1626              MOVE.B      #14, D0             ; command for trap call to display message
00001F60  4E4F                    1627              TRAP        #15                 ; trap call
00001F62  43F9 00002289           1628              LEA         clPer, A1           ; Display space
00001F68  103C 000E               1629              MOVE.B      #14, D0             ; command for trap call to display message
00001F6C  4E4F                    1630              TRAP        #15                 ; trap call
00001F6E  43F9 0000228D           1631              LEA         inc, A1             ; Display space
00001F74  103C 000E               1632              MOVE.B      #14, D0             ; command for trap call to display message
00001F78  4E4F                    1633              TRAP        #15                 ; trap call
00001F7A  6000 02F4               1634              BRA         endSUB              ; go to the end of the subroutine
00001F7E                          1635              
00001F7E  43F9 0000231D           1636  displayA1P  LEA         dispA1, A1          ; Display space
00001F84  103C 000E               1637              MOVE.B      #14, D0             ; command for trap call to display message
00001F88  4E4F                    1638              TRAP        #15                 ; trap call
00001F8A  43F9 00002289           1639              LEA         clPer, A1           ; Display space
00001F90  103C 000E               1640              MOVE.B      #14, D0             ; command for trap call to display message
00001F94  4E4F                    1641              TRAP        #15                 ; trap call
00001F96  43F9 0000228D           1642              LEA         inc, A1             ; Display space
00001F9C  103C 000E               1643              MOVE.B      #14, D0             ; command for trap call to display message
00001FA0  4E4F                    1644              TRAP        #15                 ; trap call
00001FA2  6000 02CC               1645              BRA         endSUB              ; go to the end of the subroutine
00001FA6                          1646  
00001FA6  43F9 00002320           1647  displayA2P  LEA         dispA2, A1          ; Display space
00001FAC  103C 000E               1648              MOVE.B      #14, D0             ; command for trap call to display message
00001FB0  4E4F                    1649              TRAP        #15                 ; trap call
00001FB2  43F9 00002289           1650              LEA         clPer, A1           ; Display space
00001FB8  103C 000E               1651              MOVE.B      #14, D0             ; command for trap call to display message
00001FBC  4E4F                    1652              TRAP        #15                 ; trap call
00001FBE  43F9 0000228D           1653              LEA         inc, A1             ; Display space
00001FC4  103C 000E               1654              MOVE.B      #14, D0             ; command for trap call to display message
00001FC8  4E4F                    1655              TRAP        #15                 ; trap call
00001FCA  6000 02A4               1656              BRA         endSUB              ; go to the end of the subroutine
00001FCE                          1657  
00001FCE  43F9 00002323           1658  displayA3P  LEA         dispA3, A1          ; Display space
00001FD4  103C 000E               1659              MOVE.B      #14, D0             ; command for trap call to display message
00001FD8  4E4F                    1660              TRAP        #15                 ; trap call
00001FDA  43F9 00002289           1661              LEA         clPer, A1           ; Display space
00001FE0  103C 000E               1662              MOVE.B      #14, D0             ; command for trap call to display message
00001FE4  4E4F                    1663              TRAP        #15                 ; trap call
00001FE6  43F9 0000228D           1664              LEA         inc, A1             ; Display space
00001FEC  103C 000E               1665              MOVE.B      #14, D0             ; command for trap call to display message
00001FF0  4E4F                    1666              TRAP        #15                 ; trap call
00001FF2  6000 027C               1667              BRA         endSUB              ; go to the end of the subroutine
00001FF6                          1668  
00001FF6  43F9 00002326           1669  displayA4P  LEA         dispA4, A1          ; Display space
00001FFC  103C 000E               1670              MOVE.B      #14, D0             ; command for trap call to display message
00002000  4E4F                    1671              TRAP        #15                 ; trap call
00002002  43F9 00002289           1672              LEA         clPer, A1           ; Display space
00002008  103C 000E               1673              MOVE.B      #14, D0             ; command for trap call to display message
0000200C  4E4F                    1674              TRAP        #15                 ; trap call
0000200E  43F9 0000228D           1675              LEA         inc, A1             ; Display space
00002014  103C 000E               1676              MOVE.B      #14, D0             ; command for trap call to display message
00002018  4E4F                    1677              TRAP        #15                 ; trap call
0000201A  6000 0254               1678              BRA         endSUB              ; go to the end of the subroutine
0000201E                          1679  
0000201E  43F9 00002329           1680  displayA5P  LEA         dispA5, A1          ; Display space
00002024  103C 000E               1681              MOVE.B      #14, D0             ; command for trap call to display message
00002028  4E4F                    1682              TRAP        #15                 ; trap call
0000202A  43F9 00002289           1683              LEA         clPer, A1           ; Display space
00002030  103C 000E               1684              MOVE.B      #14, D0             ; command for trap call to display message
00002034  4E4F                    1685              TRAP        #15                 ; trap call
00002036  43F9 0000228D           1686              LEA         inc, A1             ; Display space
0000203C  103C 000E               1687              MOVE.B      #14, D0             ; command for trap call to display message
00002040  4E4F                    1688              TRAP        #15                 ; trap call
00002042  6000 022C               1689              BRA         endSUB              ; go to the end of the subroutine
00002046                          1690  
00002046  43F9 0000232C           1691  displayA6P  LEA         dispA6, A1          ; Display space
0000204C  103C 000E               1692              MOVE.B      #14, D0             ; command for trap call to display message
00002050  4E4F                    1693              TRAP        #15                 ; trap call
00002052  43F9 00002289           1694              LEA         clPer, A1           ; Display space
00002058  103C 000E               1695              MOVE.B      #14, D0             ; command for trap call to display message
0000205C  4E4F                    1696              TRAP        #15                 ; trap call
0000205E  43F9 0000228D           1697              LEA         inc, A1             ; Display space
00002064  103C 000E               1698              MOVE.B      #14, D0             ; command for trap call to display message
00002068  4E4F                    1699              TRAP        #15                 ; trap call
0000206A  6000 0204               1700              BRA         endSUB              ; go to the end of the subroutine
0000206E                          1701  
0000206E  43F9 0000232F           1702  displayA7P  LEA         dispA7, A1          ; Display space
00002074  103C 000E               1703              MOVE.B      #14, D0             ; command for trap call to display message
00002078  4E4F                    1704              TRAP        #15                 ; trap call
0000207A  43F9 00002289           1705              LEA         clPer, A1           ; Display space
00002080  103C 000E               1706              MOVE.B      #14, D0             ; command for trap call to display message
00002084  4E4F                    1707              TRAP        #15                 ; trap call
00002086  43F9 0000228D           1708              LEA         inc, A1             ; Display space
0000208C  103C 000E               1709              MOVE.B      #14, D0             ; command for trap call to display message
00002090  4E4F                    1710              TRAP        #15                 ; trap call
00002092  6000 01DC               1711              BRA         endSUB              ; go to the end of the subroutine
00002096                          1712  
00002096                          1713  ***********************************************************************************************************
00002096                          1714  * Addr Postdecrement
00002096                          1715  
00002096  43F9 0000228B           1716  pAddrDec    LEA         dec, A1             ; Display space
0000209C  103C 000E               1717              MOVE.B      #14, D0             ; command for trap call to display message
000020A0  4E4F                    1718              TRAP        #15                 ; trap call
000020A2                          1719              
000020A2  43F9 00002287           1720              LEA         opPer, A1           ; Display space
000020A8  103C 000E               1721              MOVE.B      #14, D0             ; command for trap call to display message
000020AC  4E4F                    1722              TRAP        #15                 ; trap call
000020AE                          1723              
000020AE  B63C 0000               1724              CMP.B   #zero,D3
000020B2  6700 003A               1725              BEQ     displayA0D
000020B6  B63C 0001               1726              CMP.B   #one,D3
000020BA  6700 004E               1727              BEQ     displayA1D
000020BE  B63C 0002               1728              CMP.B   #two,D3
000020C2  6700 0062               1729              BEQ     displayA2D
000020C6  B63C 0003               1730              CMP.B   #three,D3
000020CA  6700 0076               1731              BEQ     displayA3D
000020CE  B63C 0004               1732              CMP.B   #four,D3
000020D2  6700 008A               1733              BEQ     displayA4D
000020D6  B63C 0005               1734              CMP.B   #five,D3
000020DA  6700 009E               1735              BEQ     displayA5D
000020DE  B63C 0006               1736              CMP.B   #six,D3
000020E2  6700 00B2               1737              BEQ     displayA6D
000020E6  B63C 0007               1738              CMP.B   #seven,D3
000020EA  6700 00C6               1739              BEQ     displayA7D
000020EE                          1740              
000020EE  43F9 0000231A           1741  displayA0D  LEA         dispA0, A1          ; Display space
000020F4  103C 000E               1742              MOVE.B      #14, D0             ; command for trap call to display message
000020F8  4E4F                    1743              TRAP        #15                 ; trap call
000020FA  43F9 00002289           1744              LEA         clPer, A1           ; Display space
00002100  103C 000E               1745              MOVE.B      #14, D0             ; command for trap call to display message
00002104  4E4F                    1746              TRAP        #15                 ; trap call
00002106  6000 0168               1747              BRA         endSUB              ; go to the end of the subroutine
0000210A                          1748              
0000210A  43F9 0000231D           1749  displayA1D  LEA         dispA1, A1          ; Display space
00002110  103C 000E               1750              MOVE.B      #14, D0             ; command for trap call to display message
00002114  4E4F                    1751              TRAP        #15                 ; trap call
00002116  43F9 00002289           1752              LEA         clPer, A1           ; Display space
0000211C  103C 000E               1753              MOVE.B      #14, D0             ; command for trap call to display message
00002120  4E4F                    1754              TRAP        #15                 ; trap call
00002122  6000 014C               1755              BRA         endSUB              ; go to the end of the subroutine
00002126                          1756  
00002126  43F9 00002320           1757  displayA2D  LEA         dispA2, A1          ; Display space
0000212C  103C 000E               1758              MOVE.B      #14, D0             ; command for trap call to display message
00002130  4E4F                    1759              TRAP        #15                 ; trap call
00002132  43F9 00002289           1760              LEA         clPer, A1           ; Display space
00002138  103C 000E               1761              MOVE.B      #14, D0             ; command for trap call to display message
0000213C  4E4F                    1762              TRAP        #15                 ; trap call
0000213E  6000 0130               1763              BRA         endSUB              ; go to the end of the subroutine
00002142                          1764  
00002142  43F9 00002323           1765  displayA3D  LEA         dispA3, A1          ; Display space
00002148  103C 000E               1766              MOVE.B      #14, D0             ; command for trap call to display message
0000214C  4E4F                    1767              TRAP        #15                 ; trap call
0000214E  43F9 00002289           1768              LEA         clPer, A1           ; Display space
00002154  103C 000E               1769              MOVE.B      #14, D0             ; command for trap call to display message
00002158  4E4F                    1770              TRAP        #15                 ; trap call
0000215A  6000 0114               1771              BRA         endSUB              ; go to the end of the subroutine
0000215E                          1772  
0000215E  43F9 00002326           1773  displayA4D  LEA         dispA4, A1          ; Display space
00002164  103C 000E               1774              MOVE.B      #14, D0             ; command for trap call to display message
00002168  4E4F                    1775              TRAP        #15                 ; trap call
0000216A  43F9 00002289           1776              LEA         clPer, A1           ; Display space
00002170  103C 000E               1777              MOVE.B      #14, D0             ; command for trap call to display message
00002174  4E4F                    1778              TRAP        #15                 ; trap call
00002176  6000 00F8               1779              BRA         endSUB              ; go to the end of the subroutine
0000217A                          1780  
0000217A  43F9 00002329           1781  displayA5D  LEA         dispA5, A1          ; Display space
00002180  103C 000E               1782              MOVE.B      #14, D0             ; command for trap call to display message
00002184  4E4F                    1783              TRAP        #15                 ; trap call
00002186  43F9 00002289           1784              LEA         clPer, A1           ; Display space
0000218C  103C 000E               1785              MOVE.B      #14, D0             ; command for trap call to display message
00002190  4E4F                    1786              TRAP        #15                 ; trap call
00002192  6000 00DC               1787              BRA         endSUB              ; go to the end of the subroutine
00002196                          1788  
00002196  43F9 0000232C           1789  displayA6D  LEA         dispA6, A1          ; Display space
0000219C  103C 000E               1790              MOVE.B      #14, D0             ; command for trap call to display message
000021A0  4E4F                    1791              TRAP        #15                 ; trap call
000021A2  43F9 00002289           1792              LEA         clPer, A1           ; Display space
000021A8  103C 000E               1793              MOVE.B      #14, D0             ; command for trap call to display message
000021AC  4E4F                    1794              TRAP        #15                 ; trap call
000021AE  6000 00C0               1795              BRA         endSUB              ; go to the end of the subroutine
000021B2                          1796  
000021B2  43F9 0000232F           1797  displayA7D  LEA         dispA7, A1          ; Display space
000021B8  103C 000E               1798              MOVE.B      #14, D0             ; command for trap call to display message
000021BC  4E4F                    1799              TRAP        #15                 ; trap call
000021BE  43F9 00002289           1800              LEA         clPer, A1           ; Display space
000021C4  103C 000E               1801              MOVE.B      #14, D0             ; command for trap call to display message
000021C8  4E4F                    1802              TRAP        #15                 ; trap call
000021CA  6000 00A4               1803              BRA         endSUB              ; go to the end of the subroutine
000021CE                          1804  
000021CE                          1805  
000021CE                          1806  ***********************************************************************************************************
000021CE                          1807  * Absolute Address
000021CE  B63C 0000               1808  pHex        CMP.B       #zero, D3
000021D2  6700 0012               1809              BEQ         AbsShort
000021D6  B63C 0001               1810              CMP.B       #one, D3
000021DA  6700 003C               1811              BEQ         AbsLong
000021DE  B63C 0004               1812              CMP.B       #four, D3
000021E2  6700 0066               1813              BEQ         DispImm
000021E6                          1814              
000021E6  43F9 00002287           1815  AbsShort    LEA         opPer, A1           ; Display space
000021EC  103C 000E               1816              MOVE.B      #14, D0             ; command for trap call to display message
000021F0  4E4F                    1817              TRAP        #15                 ; trap call
000021F2                          1818              
000021F2  43F9 00002283           1819              LEA         dispHex, A1         ; Display space
000021F8  103C 000E               1820              MOVE.B      #14, D0             ; command for trap call to display message
000021FC  4E4F                    1821              TRAP        #15                 ; trap call
000021FE                          1822              
000021FE  4241                    1823              CLR         D1
00002200  3218                    1824              MOVE.W      (A0)+, D1
00002202                          1825              
00002202  103C 0003               1826              MOVE.B      #3, D0
00002206  4E4F                    1827              TRAP        #15
00002208                          1828              
00002208  43F9 00002289           1829              LEA         clPer, A1           ; Display space
0000220E  103C 000E               1830              MOVE.B      #14, D0             ; command for trap call to display message
00002212  4E4F                    1831              TRAP        #15                 ; trap call
00002214                          1832              
00002214  6000 005A               1833              BRA         endSub
00002218                          1834              
00002218  43F9 00002287           1835  AbsLong     LEA         opPer, A1           ; Display space
0000221E  103C 000E               1836              MOVE.B      #14, D0             ; command for trap call to display message
00002222  4E4F                    1837              TRAP        #15                 ; trap call
00002224                          1838              
00002224  43F9 00002283           1839              LEA         dispHex, A1         ; Display space
0000222A  103C 000E               1840              MOVE.B      #14, D0             ; command for trap call to display message
0000222E  4E4F                    1841              TRAP        #15                 ; trap call
00002230                          1842              
00002230  4241                    1843              CLR         D1
00002232  2218                    1844              MOVE.L      (A0)+, D1
00002234                          1845              
00002234  103C 0003               1846              MOVE.B      #3, D0
00002238  4E4F                    1847              TRAP        #15
0000223A                          1848              
0000223A  43F9 00002289           1849              LEA         clPer, A1           ; Display space
00002240  103C 000E               1850              MOVE.B      #14, D0             ; command for trap call to display message
00002244  4E4F                    1851              TRAP        #15                 ; trap call
00002246                          1852              
00002246  6000 0028               1853              BRA         endSub
0000224A                          1854  
0000224A  43F9 00002281           1855  DispImm     LEA         hashTag, A1         ; Display space
00002250  103C 000E               1856              MOVE.B      #14, D0             ; command for trap call to display message
00002254  4E4F                    1857              TRAP        #15                 ; trap call
00002256                          1858              
00002256  4241                    1859              CLR         D1
00002258  3218                    1860              MOVE.W      (A0)+, D1
0000225A                          1861  
0000225A  43F9 00002283           1862              LEA         dispHex, A1         ; Display space
00002260  103C 000E               1863              MOVE.B      #14, D0             ; command for trap call to display message
00002264  4E4F                    1864              TRAP        #15                 ; trap call
00002266                          1865              
00002266  103C 0003               1866              MOVE.B      #3, D0
0000226A  4E4F                    1867              TRAP        #15
0000226C                          1868  
0000226C  6000 0002               1869              BRA         endSub
00002270                          1870  
00002270                          1871  invalid
00002270                          1872  
00002270                          1873  endSUB
00002270                          1874          
00002270  4CDF 7EFF               1875          MOVEM.L  (SP)+, D0-D7/A1-A6
00002274  4E75                    1876          RTS
00002276                          1877  
00002276                          1878  ***********************************************************************************************************
00002276                          1879  ***********************************************************************************************************
00002276                          1880  ***********************************************************************************************************
00002276                          1881  
00002276                          1882  printInvalid
00002276                          1883  endPROG    
00002276                          1884  
00002276  FFFF FFFF               1885      SIMHALT                             ; halt simulator
0000227A                          1886  
0000227A= 20 0D 0A 00             1887  newLine     DC.B    ' ', CR, LF, 0
0000227E= 20 20 00                1888  space       DC.B    '  ', 0
00002281                          1889  
00002281= 23 00                   1890  hashTag     DC.B    '#', 0
00002283= 24 00                   1891  dispHex     DC.B    '$', 0
00002285= 2C 00                   1892  comma       DC.B    ',', 0
00002287                          1893  
00002287= 28 00                   1894  opPer       DC.B    '(', 0
00002289= 29 00                   1895  clPer       DC.B    ')', 0
0000228B= 2D 00                   1896  dec         DC.B    '-', 0
0000228D= 2B 00                   1897  inc         DC.B    '+', 0
0000228F                          1898  
0000228F= 4F 52 49 00             1899  ORImatch    DC.B    'ORI', 0
00002293= 43 4D 50 49 00          1900  CMPImatch   DC.B    'CMPI', 0
00002298= 42 43 4C 52 00          1901  BCLRmatch   DC.B    'BCLR', 0
0000229D= 4D 4F 56 45 00          1902  MOVEmatch   DC.B    'MOVE', 0
000022A2= 4D 4F 56 45 41 00       1903  MOVEAmatch  DC.B    'MOVEA', 0
000022A8= 4E 45 47 00             1904  NEGmatch    DC.B    'NEG', 0
000022AC= 52 54 53 00             1905  RTSmatch    DC.B    'RTS', 0
000022B0= 4A 53 52 00             1906  JSRmatch    DC.B    'JSR', 0
000022B4= 4D 4F 56 45 4D 00       1907  MOVEMmatch  DC.B    'MOVEM', 0
000022BA= 4C 45 41 00             1908  LEAmatch    DC.B    'LEA', 0
000022BE= 53 55 42 51 00          1909  SUBQmatch   DC.B    'SUBQ', 0
000022C3= 42 52 41 00             1910  BRAmatch    DC.B    'BRA', 0
000022C7= 42 43 53 00             1911  BCSmatch    DC.B    'BCS', 0
000022CB= 42 56 43 00             1912  BVCmatch    DC.B    'BVC', 0
000022CF= 42 47 45 00             1913  BGEmatch    DC.B    'BGE', 0
000022D3= 42 4C 54 00             1914  BLTmatch    DC.B    'BLT', 0
000022D7= 44 49 56 53 00          1915  DIVSmatch   DC.B    'DIVS', 0
000022DC= 4F 52 00                1916  ORmatch     DC.B    'OR', 0
000022DF= 53 55 42 00             1917  SUBmatch    DC.B    'SUB', 0
000022E3= 45 4F 52 00             1918  EORmatch    DC.B    'EOR', 0
000022E7= 43 4D 50 00             1919  CMPmatch    DC.B    'CMP', 0
000022EB= 4D 55 4C 53 00          1920  MULSmatch   DC.B    'MULS', 0
000022F0= 41 44 44 00             1921  ADDmatch    DC.B    'ADD', 0
000022F4= 41 44 44 41 00          1922  ADDAmatch   DC.B    'ADDA', 0
000022F9= 4C 53 52 00             1923  LSRmatch    DC.B    'LSR', 0
000022FD= 4C 53 4C 00             1924  LSLmatch    DC.B    'LSL', 0
00002301= 41 53 52 00             1925  ASRmatch    DC.B    'ASR', 0
00002305= 41 53 4C 00             1926  ASLmatch    DC.B    'ASL', 0
00002309= 52 4F 52 00             1927  RORmatch    DC.B    'ROR', 0
0000230D= 52 4F 4C 00             1928  ROLmatch    DC.B    'ROL', 0
00002311                          1929   
00002311= 2E 42 00                1930  dispByte    DC.B    '.B', 0
00002314= 2E 57 00                1931  dispWord    DC.B    '.W', 0
00002317= 2E 4C 00                1932  dispLong    DC.B    '.L', 0
0000231A                          1933  
0000231A= 41 30 00                1934  dispA0      DC.B    'A0', 0
0000231D= 41 31 00                1935  dispA1      DC.B    'A1', 0
00002320= 41 32 00                1936  dispA2      DC.B    'A2', 0
00002323= 41 33 00                1937  dispA3      DC.B    'A3', 0
00002326= 41 34 00                1938  dispA4      DC.B    'A4', 0
00002329= 41 35 00                1939  dispA5      DC.B    'A5', 0
0000232C= 41 36 00                1940  dispA6      DC.B    'A6', 0
0000232F= 41 37 00                1941  dispA7      DC.B    'A7', 0
00002332                          1942  
00002332= 44 00                   1943  dispD       DC.B    'D',0
00002334= 44 30 00                1944  dispD0      DC.B    'D0', 0
00002337= 44 31 00                1945  dispD1      DC.B    'D1', 0
0000233A= 44 32 00                1946  dispD2      DC.B    'D2', 0
0000233D= 44 33 00                1947  dispD3      DC.B    'D3', 0
00002340= 44 34 00                1948  dispD4      DC.B    'D4', 0
00002343= 44 35 00                1949  dispD5      DC.B    'D5', 0
00002346= 44 36 00                1950  dispD6      DC.B    'D6', 0
00002349= 44 37 00                1951  dispD7      DC.B    'D7', 0  
0000234C                          1952             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             2218
ABSSHORT            21E6
ADDAMATCH           22F4
ADDMATCH            22F0
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            2305
ASRMATCH            2301
BCLRMATCH           2298
BCSMATCH            22C7
BGEMATCH            22CF
BLTMATCH            22D3
BRAEIGHT            110E
BRAELEVEN           1128
BRAFIVE             10DE
BRAFOUR             10C2
BRAFOURTEEN         1146
BRAMATCH            22C3
BRANINE             1124
BRAONE              10B6
BRASIX              10E2
BRATHIRTEEN         1146
BRATHREE            10BE
BRATWELVE           1142
BRATWO              10BA
BRAZERO             1086
BVCMATCH            22CB
CLPER               2289
CMPIMATCH           2293
CMPMATCH            22E7
COMMA               2285
CR                  D
DEC                 228B
DISPA0              231A
DISPA1              231D
DISPA2              2320
DISPA3              2323
DISPA4              2326
DISPA5              2329
DISPA6              232C
DISPA7              232F
DISPBYTE            2311
DISPD               2332
DISPD0              2334
DISPD1              2337
DISPD2              233A
DISPD3              233D
DISPD4              2340
DISPD5              2343
DISPD6              2346
DISPD7              2349
DISPHEX             2283
DISPIMM             224A
DISPLAYA0           1D5E
DISPLAYA0A          1E2A
DISPLAYA0D          20EE
DISPLAYA0P          1F56
DISPLAYA1           1D6E
DISPLAYA1A          1E46
DISPLAYA1D          210A
DISPLAYA1P          1F7E
DISPLAYA2           1D7E
DISPLAYA2A          1E62
DISPLAYA2D          2126
DISPLAYA2P          1FA6
DISPLAYA3           1D8E
DISPLAYA3A          1E7E
DISPLAYA3D          2142
DISPLAYA3P          1FCE
DISPLAYA4           1D9E
DISPLAYA4A          1E9A
DISPLAYA4D          215E
DISPLAYA4P          1FF6
DISPLAYA5           1DAE
DISPLAYA5A          1EB6
DISPLAYA5D          217A
DISPLAYA5P          201E
DISPLAYA6           1DBE
DISPLAYA6A          1ED2
DISPLAYA6D          2196
DISPLAYA6P          2046
DISPLAYA7           1DCE
DISPLAYA7A          1EEE
DISPLAYA7D          21B2
DISPLAYA7P          206E
DISPLAYD0           1C9E
DISPLAYD1           1CAE
DISPLAYD2           1CBE
DISPLAYD3           1CCE
DISPLAYD4           1CDE
DISPLAYD5           1CEE
DISPLAYD6           1CFE
DISPLAYD7           1D0E
DISPLONG            2317
DISPWORD            2314
DIVSMATCH           22D7
EIGHT               8
ELEVEN              B
ENDPROG             2276
ENDSUB              2270
EORMATCH            22E3
FINDREGE            1C18
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             2281
INC                 228D
INVALID             2270
JSRMATCH            22B0
LEAMATCH            22BA
LF                  A
LOOP                100C
LSLMATCH            22FD
LSRMATCH            22F9
MOVEAMATCH          22A2
MOVEMATCH           229D
MOVEMMATCH          22B4
MULSMATCH           22EB
NEGMATCH            22A8
NEWLINE             227A
NINE                9
ONE                 1
OPASL               1BD0
OPASR               1BDC
OPBCC               117A
OPBCLR              163A
OPBCS               1B60
OPBGE               1B78
OPBLT               1B84
OPBRA               1B28
OPBVC               1B6C
OPCMP               1284
OPCMPB              12B4
OPCMPI              14C8
OPCMPIB             1514
OPCMPIL             15D8
OPCMPIW             1576
OPCMPL              1334
OPCMPW              12F4
OPDIVS              118C
OPDYNBCLR           169E
OPEOR               1198
OPEORB              11C4
OPEORL              1244
OPEORW              1204
OPJSR               1A8C
OPLEA               1B1C
OPLSL               1BE8
OPLSR               1BF4
OPMOVEAL            1820
OPMOVEAW            191A
OPMOVEB             170C
OPMOVEL             1790
OPMOVEM             1B04
OPMOVEMLEA          1AE8
OPMOVEW             188A
OPMULS              1BC4
OPNEG               1984
OPNEGB              19B2
OPNEGL              19F2
OPNEGW              1A32
OPOR                1180
OPORI               1374
OPORIB              13A2
OPORIL              1466
OPORIW              1404
OPPER               2287
OPROL               1C00
OPROR               1C0C
OPRTS               1ACC
OPRTSJSR            1A72
OPSUB               1B90
OPSUBQ              1B1C
ORIMATCH            228F
ORMATCH             22DC
PADDRDEC            2096
PADDRDIR            1DDE
PADDRPOST           1F0A
PADDRREG            1D1E
PDATAREG            1C5E
PHEX                21CE
PRINTEA             1C26
PRINTINVALID        2276
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
ROLMATCH            230D
RORMATCH            2309
RTSMATCH            22AC
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               227E
START               1000
SUBMATCH            22DF
SUBQMATCH           22BE
TEST_END            3009
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
