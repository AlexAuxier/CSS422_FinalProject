00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 11/29/2014 9:21:52 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00002000                 10  test_start  EQU     $00002000   ; defined starting address
00000000  =00002009                 11  test_end    EQU     $00002009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00002000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00002009             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 0E12                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 0084                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0080                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 0094                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0090                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00B4                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00AC                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00A8                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00A0                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 009C                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 0094                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                102          AND.B       #secNib, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 00B6                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 0202                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                108          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 036C                109          BEQ         opBCLR
000010A6  C47C 0001                110          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                111          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 03C4                112          BEQ         opDynBCLR
000010B2  6000 0D72                113          BRA         printInvalid
000010B6                           114          
000010B6                           115          
000010B6  6000 042A                116  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           117  
000010BA  6000 04AA                118  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BE                           119  
000010BE                           120  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BE                           121  
000010BE  6000 05A0                122          BRA         opMOVEW
000010C2                           123  
000010C2  4242                     124  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010C4  1401                     125          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010C6  C438 000F                126          AND.B       $0F, D2             ; set first nibble to 0
000010CA                           127   
000010CA  B43C 0004                128          CMP.B       #four, D2           ; compare second nibble to 4
000010CE  6700 068A                129          BEQ         opNEG               ; branch to NEG method
000010D2  B43C 000E                130          CMP.B       #fourteen, D2       ; compare second nibble to E
000010D6  6700 068E                131          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010DA  6000 068A                132          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010DE                           133  
000010DE  6000 0686                134  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010E2                           135  
000010E2  4242                     136  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010E4  1401                     137          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010E6  C438 000F                138          AND.B       $0F, D2             ; set first nibble to 0
000010EA                           139   
000010EA  B43C 0000                140          CMP.B       #zero, D2           ; compare second nibble to 0
000010EE  6700 0682                141          BEQ         opBRA               ; branch to BRA method
000010F2  B43C 0005                142          CMP.B       #five, D2           ; compare second nibble to 5
000010F6  6700 0692                143          BEQ         opBCS               ; branch to BCS method
000010FA  B43C 0008                144          CMP.B       #eight, D2          ; compare second nibble to 8
000010FE  6700 0696                145          BEQ         opBVC               ; branch to BCS method
00001102  B43C 000C                146          CMP.B       #twelve, D2         ; compare second nibble to 12
00001106  6700 069A                147          BEQ         opBGE               ; branch to BGE method
0000110A  6000 06A2                148          BRA         opBLT               ; otherwise, branch to BLT method
0000110E                           149  
0000110E                           150  braEight    ; there are two opCodes available DIVS, or OR
0000110E                           151  
0000110E  6000 06AA                152  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
00001112                           153  
00001112                           154  braEleven   ; there are two opCodes available EOR, or CMP
00001112                           155  
00001112  6000 06B2                156  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
00001116                           157    
00001116                           158  braThirteen ; there are two opCodes available ADD, or ADDA
00001116                           159  
00001116  4242                     160  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
00001118  1401                     161              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000111A  C438 000F                162              AND.B       $0F, D2             ; set first nibble to 0
0000111E                           163   
0000111E  B43C 0000                164              CMP.B       #zero, D2           ; compare second nibble to 0
00001122  6700 06BA                165              BEQ         opASR               ; branch to ASR method
00001126  B43C 0001                166              CMP.B       #one, D2            ; compare second nibble to 1
0000112A  6700 06A6                167              BEQ         opASL               ; branch to ASL method
0000112E  B43C 0002                168              CMP.B       #two, D2            ; compare second nibble to 2
00001132  6700 06C2                169              BEQ         opLSR               ; branch to LSR method
00001136  B43C 0003                170              CMP.B       #three, D2          ; compare second nibble to 3
0000113A  6700 06AE                171              BEQ         opLSL               ; branch to LSL method
0000113E  B43C 0006                172              CMP.B       #six, D2            ; compare second nibble to 6
00001142  6700 06CA                173              BEQ         opROR               ; branch to ROR method
00001146  6000 06BA                174              BRA         opROL               ; otherwise, branch to ROL method
0000114A                           175  
0000114A  43F9 00001E3F            176  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
00001150  103C 000E                177          MOVE.B      #14, D0             ; command for trap call to display message
00001154  4E4F                     178          TRAP        #15                 ; trap call
00001156                           179          
00001156  1218                     180          MOVE.B      (A0)+, D1
00001158  1401                     181          MOVE.B      D1,D2               ; copy data over
0000115A  EC42                     182          ASR         #6,D2               ; shifts 6 bits over to read just the size        
0000115C  B43C 0000                183          CMP.B       #zero,D2
00001160  6700 0016                184          BEQ         opORIB
00001164  B43C 0001                185          CMP.B       #one,D2
00001168  6700 0070                186          BEQ         opORIW
0000116C  B43C 0002                187          CMP.B       #two,D2
00001170  6700 00CA                188          BEQ         opORIL
00001174                           189          
00001174  6000 0CB0                190          BRA         printInvalid
00001178                           191          
00001178  43F9 00001EC1            192  opORIB  LEA         dispByte, A1        ; Display byte
0000117E  103C 000E                193          MOVE.B      #14, D0             ; command for trap call to display message
00001182  4E4F                     194          TRAP        #15                 ; trap call
00001184                           195          
00001184  43F9 00001E2E            196          LEA         space, A1           ; Display space
0000118A  103C 000E                197          MOVE.B      #14, D0             ; command for trap call to display message
0000118E  4E4F                     198          TRAP        #15                 ; trap call
00001190                           199          
00001190  4242                     200          CLR         D2
00001192  1401                     201          MOVE.B      D1,D2
00001194  E642                     202          ASR         #three,D2
00001196  C47C 0007                203          AND         #seven,D2
0000119A  4243                     204          CLR         D3        
0000119C  1601                     205          MOVE.B      D1,D3
0000119E  C67C 0007                206          AND         #seven,D3
000011A2                           207          
000011A2  4241                     208          CLR         D1
000011A4  3218                     209          MOVE.W      (A0)+, D1
000011A6                           210          
000011A6  43F9 00001E31            211          LEA         hashTag, A1           ; Display space
000011AC  103C 000E                212          MOVE.B      #14, D0             ; command for trap call to display message
000011B0  4E4F                     213          TRAP        #15                 ; trap call
000011B2                           214          
000011B2  103C 0003                215          MOVE.B      #3, D0
000011B6  4E4F                     216          TRAP        #15
000011B8                           217          
000011B8  43F9 00001E35            218          LEA         comma, A1           ; Display space
000011BE  103C 000E                219          MOVE.B      #14, D0             ; command for trap call to display message
000011C2  4E4F                     220          TRAP        #15                 ; trap call
000011C4                           221          
000011C4  4EB9 0000181A            222          JSR         printEA
000011CA                           223          
000011CA  43F9 00001E2A            224          LEA         newLine, A1           ; Display space
000011D0  103C 000E                225          MOVE.B      #14, D0             ; command for trap call to display message
000011D4  4E4F                     226          TRAP        #15                 ; trap call
000011D6                           227          
000011D6  6000 FE34                228          BRA         LOOP
000011DA                           229          
000011DA                           230          
000011DA  43F9 00001EC4            231  opORIW  LEA         dispWord, A1        ; Display byte
000011E0  103C 000E                232          MOVE.B      #14, D0             ; command for trap call to display message
000011E4  4E4F                     233          TRAP        #15                 ; trap call
000011E6                           234          
000011E6  43F9 00001E2E            235          LEA         space, A1           ; Display space
000011EC  103C 000E                236          MOVE.B      #14, D0             ; command for trap call to display message
000011F0  4E4F                     237          TRAP        #15                 ; trap call
000011F2                           238          
000011F2  4242                     239          CLR         D2
000011F4  1401                     240          MOVE.B      D1,D2
000011F6  E642                     241          ASR         #three,D2
000011F8  C47C 0007                242          AND         #seven,D2
000011FC  4243                     243          CLR         D3        
000011FE  1601                     244          MOVE.B      D1,D3
00001200  C67C 0007                245          AND         #seven,D3
00001204                           246          
00001204  4241                     247          CLR         D1
00001206  3218                     248          MOVE.W      (A0)+, D1
00001208                           249          
00001208  43F9 00001E31            250          LEA         hashTag, A1           ; Display space
0000120E  103C 000E                251          MOVE.B      #14, D0             ; command for trap call to display message
00001212  4E4F                     252          TRAP        #15                 ; trap call
00001214                           253          
00001214  103C 0003                254          MOVE.B      #3, D0
00001218  4E4F                     255          TRAP        #15
0000121A                           256          
0000121A  43F9 00001E35            257          LEA         comma, A1           ; Display space
00001220  103C 000E                258          MOVE.B      #14, D0             ; command for trap call to display message
00001224  4E4F                     259          TRAP        #15                 ; trap call
00001226                           260          
00001226  4EB9 0000181A            261          JSR         printEA
0000122C                           262          
0000122C  43F9 00001E2A            263          LEA         newLine, A1           ; Display space
00001232  103C 000E                264          MOVE.B      #14, D0             ; command for trap call to display message
00001236  4E4F                     265          TRAP        #15                 ; trap call
00001238                           266          
00001238  6000 FDD2                267          BRA         LOOP
0000123C                           268       
0000123C  43F9 00001EC7            269  opORIL  LEA         dispLong, A1        ; Display byte
00001242  103C 000E                270          MOVE.B      #14, D0             ; command for trap call to display message
00001246  4E4F                     271          TRAP        #15                 ; trap call
00001248                           272          
00001248  43F9 00001E2E            273          LEA         space, A1           ; Display space
0000124E  103C 000E                274          MOVE.B      #14, D0             ; command for trap call to display message
00001252  4E4F                     275          TRAP        #15                 ; trap call
00001254                           276          
00001254  4242                     277          CLR         D2
00001256  1401                     278          MOVE.B      D1,D2
00001258  E642                     279          ASR         #three,D2
0000125A  C47C 0007                280          AND         #seven,D2
0000125E  4243                     281          CLR         D3        
00001260  1601                     282          MOVE.B      D1,D3
00001262  C67C 0007                283          AND         #seven,D3
00001266                           284          
00001266  4241                     285          CLR         D1
00001268  2218                     286          MOVE.L      (A0)+, D1
0000126A                           287          
0000126A  43F9 00001E31            288          LEA         hashTag, A1           ; Display space
00001270  103C 000E                289          MOVE.B      #14, D0             ; command for trap call to display message
00001274  4E4F                     290          TRAP        #15                 ; trap call
00001276                           291          
00001276  103C 0003                292          MOVE.B      #3, D0
0000127A  4E4F                     293          TRAP        #15
0000127C                           294          
0000127C  43F9 00001E35            295          LEA         comma, A1           ; Display space
00001282  103C 000E                296          MOVE.B      #14, D0             ; command for trap call to display message
00001286  4E4F                     297          TRAP        #15                 ; trap call
00001288                           298          
00001288  4EB9 0000181A            299          JSR         printEA
0000128E                           300          
0000128E  43F9 00001E2A            301          LEA         newLine, A1           ; Display space
00001294  103C 000E                302          MOVE.B      #14, D0             ; command for trap call to display message
00001298  4E4F                     303          TRAP        #15                 ; trap call
0000129A                           304          
0000129A  6000 FD70                305          BRA         LOOP
0000129E                           306           
0000129E  43F9 00001E43            307  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000012A4  103C 000E                308          MOVE.B      #14, D0             ; command for trap call to display message
000012A8  4E4F                     309          TRAP        #15                 ; trap call
000012AA                           310                  
000012AA  1218                     311          MOVE.B      (A0)+, D1
000012AC  1401                     312          MOVE.B      D1,D2               ; copy data over
000012AE  EC42                     313          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000012B0  B43C 0000                314          CMP.B       #zero,D2
000012B4  6700 0034                315          BEQ         opCMPIB
000012B8  B43C 0001                316          CMP.B       #one,D2
000012BC  6700 008E                317          BEQ         opCMPIW
000012C0  B43C 0002                318          CMP.B       #two,D2
000012C4  6700 00E8                319          BEQ         opCMPIL
000012C8                           320          
000012C8  1401                     321          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000012CA  E542                     322          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
000012CC  1802                     323          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
000012CE  4242                     324          CLR         D2                  ; Clear out data register
000012D0  1404                     325          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
000012D2  EA42                     326          ASR         #five,D2            ; Shift the register out to get just the mode
000012D4  1802                     327          MOVE.B      D2,D4               ; Store mode into D4
000012D6  4242                     328          CLR         D2
000012D8                           329          
000012D8  1401                     330          MOVE.B      D1,D2               ; Getting the EA register
000012DA  EB42                     331          ASL         #five,D2
000012DC  1A02                     332          MOVE.B      D2,D5               ; Move just the register into D5
000012DE  4242                     333          CLR         D2                  ; Clearing D2 to put data back
000012E0  1405                     334          MOVE.B      D5,D2               ; Putting back the register
000012E2  EA42                     335          ASR         #five,D2            ; Shifting bits in order to read the register
000012E4  1A02                     336          MOVE.B      D2,D5               ; Store register into D5
000012E6                           337          
000012E6  6000 FD24                338          BRA         LOOP                ; go back to the loop
000012EA                           339  
000012EA  43F9 00001EC1            340  opCMPIB LEA         dispByte, A1        ; Display byte
000012F0  103C 000E                341          MOVE.B      #14, D0             ; command for trap call to display message
000012F4  4E4F                     342          TRAP        #15                 ; trap call
000012F6                           343          
000012F6  43F9 00001E2E            344          LEA         space, A1           ; Display space
000012FC  103C 000E                345          MOVE.B      #14, D0             ; command for trap call to display message
00001300  4E4F                     346          TRAP        #15                 ; trap call
00001302                           347          
00001302  4242                     348          CLR         D2
00001304  1401                     349          MOVE.B      D1,D2
00001306  E642                     350          ASR         #three,D2
00001308  C47C 0007                351          AND         #seven,D2
0000130C  4243                     352          CLR         D3        
0000130E  1601                     353          MOVE.B      D1,D3
00001310  C67C 0007                354          AND         #seven,D3
00001314                           355          
00001314  4241                     356          CLR         D1
00001316  3218                     357          MOVE.W      (A0)+, D1
00001318                           358          
00001318  43F9 00001E31            359          LEA         hashTag, A1           ; Display space
0000131E  103C 000E                360          MOVE.B      #14, D0             ; command for trap call to display message
00001322  4E4F                     361          TRAP        #15                 ; trap call
00001324                           362          
00001324  103C 0003                363          MOVE.B      #3, D0
00001328  4E4F                     364          TRAP        #15
0000132A                           365          
0000132A  43F9 00001E35            366          LEA         comma, A1           ; Display space
00001330  103C 000E                367          MOVE.B      #14, D0             ; command for trap call to display message
00001334  4E4F                     368          TRAP        #15                 ; trap call
00001336                           369          
00001336  4EB9 0000181A            370          JSR         printEA
0000133C                           371          
0000133C  43F9 00001E2A            372          LEA         newLine, A1           ; Display space
00001342  103C 000E                373          MOVE.B      #14, D0             ; command for trap call to display message
00001346  4E4F                     374          TRAP        #15                 ; trap call
00001348                           375  
00001348  6000 FCC2                376          BRA         LOOP
0000134C                           377  
0000134C  43F9 00001EC4            378  opCMPIW LEA         dispWord, A1        ; Display byte
00001352  103C 000E                379          MOVE.B      #14, D0             ; command for trap call to display message
00001356  4E4F                     380          TRAP        #15                 ; trap call
00001358                           381          
00001358  43F9 00001E2E            382          LEA         space, A1           ; Display space
0000135E  103C 000E                383          MOVE.B      #14, D0             ; command for trap call to display message
00001362  4E4F                     384          TRAP        #15                 ; trap call
00001364                           385          
00001364  4242                     386          CLR         D2
00001366  1401                     387          MOVE.B      D1,D2
00001368  E642                     388          ASR         #three,D2
0000136A  C47C 0007                389          AND         #seven,D2
0000136E  4243                     390          CLR         D3        
00001370  1601                     391          MOVE.B      D1,D3
00001372  C67C 0007                392          AND         #seven,D3
00001376                           393          
00001376  4241                     394          CLR         D1
00001378  3218                     395          MOVE.W      (A0)+, D1
0000137A                           396          
0000137A  43F9 00001E31            397          LEA         hashTag, A1           ; Display space
00001380  103C 000E                398          MOVE.B      #14, D0             ; command for trap call to display message
00001384  4E4F                     399          TRAP        #15                 ; trap call
00001386                           400          
00001386  103C 0003                401          MOVE.B      #3, D0
0000138A  4E4F                     402          TRAP        #15
0000138C                           403          
0000138C  43F9 00001E35            404          LEA         comma, A1           ; Display space
00001392  103C 000E                405          MOVE.B      #14, D0             ; command for trap call to display message
00001396  4E4F                     406          TRAP        #15                 ; trap call
00001398                           407          
00001398  4EB9 0000181A            408          JSR         printEA
0000139E                           409          
0000139E  43F9 00001E2A            410          LEA         newLine, A1           ; Display space
000013A4  103C 000E                411          MOVE.B      #14, D0             ; command for trap call to display message
000013A8  4E4F                     412          TRAP        #15                 ; trap call
000013AA  6000 FC60                413          BRA         LOOP
000013AE                           414  
000013AE  43F9 00001EC7            415  opCMPIL LEA         dispLong, A1        ; Display byte
000013B4  103C 000E                416          MOVE.B      #14, D0             ; command for trap call to display message
000013B8  4E4F                     417          TRAP        #15                 ; trap call
000013BA                           418          
000013BA  43F9 00001E2E            419          LEA         space, A1           ; Display space
000013C0  103C 000E                420          MOVE.B      #14, D0             ; command for trap call to display message
000013C4  4E4F                     421          TRAP        #15                 ; trap call
000013C6                           422          
000013C6  4242                     423          CLR         D2
000013C8  1401                     424          MOVE.B      D1,D2
000013CA  E642                     425          ASR         #three,D2
000013CC  C47C 0007                426          AND         #seven,D2
000013D0  4243                     427          CLR         D3        
000013D2  1601                     428          MOVE.B      D1,D3
000013D4  C67C 0007                429          AND         #seven,D3
000013D8                           430          
000013D8  4241                     431          CLR         D1
000013DA  3218                     432          MOVE.W      (A0)+, D1
000013DC                           433          
000013DC  43F9 00001E31            434          LEA         hashTag, A1           ; Display space
000013E2  103C 000E                435          MOVE.B      #14, D0             ; command for trap call to display message
000013E6  4E4F                     436          TRAP        #15                 ; trap call
000013E8                           437          
000013E8  103C 0003                438          MOVE.B      #3, D0
000013EC  4E4F                     439          TRAP        #15
000013EE                           440          
000013EE  43F9 00001E35            441          LEA         comma, A1           ; Display space
000013F4  103C 000E                442          MOVE.B      #14, D0             ; command for trap call to display message
000013F8  4E4F                     443          TRAP        #15                 ; trap call
000013FA                           444          
000013FA  4EB9 0000181A            445          JSR         printEA
00001400                           446          
00001400  43F9 00001E2A            447          LEA         newLine, A1           ; Display space
00001406  103C 000E                448          MOVE.B      #14, D0             ; command for trap call to display message
0000140A  4E4F                     449          TRAP        #15                 ; trap call
0000140C                           450          
0000140C  6000 FBFE                451          BRA         LOOP
00001410                           452  
00001410  43F9 00001E48            453  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001416  103C 000E                454                  MOVE.B      #14, D0             ; command for trap call to display message
0000141A  4E4F                     455                  TRAP        #15                 ; trap call
0000141C                           456  
0000141C  43F9 00001E2E            457                  LEA         space, A1           ; Display space
00001422  103C 000E                458                  MOVE.B      #14, D0             ; command for trap call to display message
00001426  4E4F                     459                  TRAP        #15                 ; trap call
00001428                           460                  
00001428  4242                     461                  CLR         D2
0000142A  1218                     462                  MOVE.B      (A0)+, D1
0000142C  1401                     463                  MOVE.B      D1,D2               ; copy data over
0000142E  E642                     464                  ASR         #three,D2           ; Shift to the right to remove register
00001430  C47C 0007                465                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
00001434                           466                  
00001434  4243                     467                  CLR         D3                  ; Clear D3 so we can move D1 in
00001436  1601                     468                  MOVE.B      D1,D3               ; Move othr byte in
00001438  C67C 0007                469                  AND         #seven,D3           ; Set everything besides register to 0
0000143C                           470                  
0000143C  4241                     471                  CLR         D1
0000143E  3218                     472                  MOVE.W      (A0)+, D1
00001440                           473                 
00001440                           474                  
00001440  43F9 00001E31            475                  LEA         hashTag, A1           ; Display space
00001446  103C 000E                476                  MOVE.B      #14, D0             ; command for trap call to display message
0000144A  4E4F                     477                  TRAP        #15                 ; trap call
0000144C                           478          
0000144C  103C 0003                479                  MOVE.B      #3, D0
00001450  4E4F                     480                  TRAP        #15
00001452                           481          
00001452  43F9 00001E35            482                  LEA         comma, A1           ; Display space
00001458  103C 000E                483                  MOVE.B      #14, D0             ; command for trap call to display message
0000145C  4E4F                     484                  TRAP        #15                 ; trap call
0000145E                           485                  
0000145E  4EB9 0000181A            486                  JSR         printEA
00001464                           487          
00001464  43F9 00001E2A            488                  LEA         newLine, A1           ; Display space
0000146A  103C 000E                489                  MOVE.B      #14, D0             ; command for trap call to display message
0000146E  4E4F                     490                  TRAP        #15                 ; trap call
00001470                           491                  
00001470                           492                  
00001470  6000 FB9A                493                  BRA         LOOP                
00001474                           494          
00001474                           495  opDynBCLR       
00001474  4241                     496                  CLR         D1
00001476  1218                     497                  MOVE.B      (A0)+,D1            ; Copy second byte in
00001478  1601                     498                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
0000147A  E243                     499                  ASR         #one,D3             ; Shift register over to the end
0000147C  C67C 0007                500                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
00001480                           501                  
00001480  1401                     502                  MOVE.B      D1,D2
00001482  EC42                     503                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
00001484  B47C 0002                504                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
00001488  6600 099C                505                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
0000148C                           506  
0000148C                           507                  
0000148C  43F9 00001E48            508                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
00001492  103C 000E                509                  MOVE.B      #14, D0             ; command for trap call to display message
00001496  4E4F                     510                  TRAP        #15                 ; trap call  
00001498                           511                  
00001498  43F9 00001E2E            512                  LEA         space, A1           ; Display space
0000149E  103C 000E                513                  MOVE.B      #14, D0             ; command for trap call to display message
000014A2  4E4F                     514                  TRAP        #15                 ; trap call
000014A4                           515                  
000014A4  143C 0000                516                  MOVE.B      #zero,D2                
000014A8  4EB9 0000181A            517                  JSR         printEA
000014AE                           518                  
000014AE  43F9 00001E35            519                  LEA         comma, A1           ; Display space
000014B4  103C 000E                520                  MOVE.B      #14, D0             ; command for trap call to display message
000014B8  4E4F                     521                  TRAP        #15                 ; trap call
000014BA                           522                  
000014BA  4242                     523                  CLR         D2
000014BC  1401                     524                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000014BE  E642                     525                  ASR         #three,D2           ; Remove/shift the register out
000014C0  C47C 0007                526                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000014C4                           527                  
000014C4  4243                     528                  CLR         D3                  ; Clearing D3 to avoid mashing data
000014C6  1601                     529                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000014C8  C67C 0007                530                  AND         #seven,D3           ; Change all bits except for register bits to 0
000014CC                           531                  
000014CC                           532  
000014CC  4EB9 0000181A            533                  JSR         printEA
000014D2                           534          
000014D2  43F9 00001E2A            535                  LEA         newLine, A1           ; Display space
000014D8  103C 000E                536                  MOVE.B      #14, D0             ; command for trap call to display message
000014DC  4E4F                     537                  TRAP        #15                 ; trap call            
000014DE                           538  
000014DE                           539  
000014DE  6000 FB2C                540                  BRA         LOOP                ; go back to the loop
000014E2                           541   
000014E2  43F9 00001E4D            542  opMOVEB LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
000014E8  103C 000E                543          MOVE.B      #14, D0             ; command for trap call to display message
000014EC  4E4F                     544          TRAP        #15                 ; trap call
000014EE  43F9 00001EC1            545          LEA         dispByte, A1        ; display byte
000014F4  103C 000E                546          MOVE.B      #14, D0             ; command for trap call to display message
000014F8  4E4F                     547          TRAP        #15                 ; trap call
000014FA  43F9 00001E2E            548          LEA         space, A1           ; create spaces
00001500  103C 000E                549          MOVE.B      #14, D0             ; command for trap call to display message
00001504  4E4F                     550          TRAP        #15                 ; trap call
00001506                           551          
00001506                           552          
00001506  4245                     553          CLR         D5                  ; Clear D5
00001508  1A01                     554          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000150A  E245                     555          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
0000150C  CA7C 0007                556          AND         #seven,D5
00001510                           557          
00001510  4244                     558          CLR         D4                  ; Clear out D4
00001512  1801                     559          MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001514  C87C 0001                560          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001518                           561          
00001518  4241                     562          CLR          D1
0000151A  4242                     563          CLR          D2
0000151C  1218                     564          MOVE.B      (A0)+,D1            ; Copy byte into D1
0000151E  1401                     565          MOVE.B      D1,D2
00001520  EC42                     566          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001522  D842                     567          ADD         D2,D4               ; Adds the remaining bits to D4
00001524                           568          
00001524  4242                     569          CLR         D2
00001526  1401                     570          MOVE.B      D1,D2               ; Copy new byte over to D2
00001528  E642                     571          ASR         #three,D2           ; Shift source register out
0000152A  C47C 0007                572          AND         #seven,D2           ; Set everything to 0 except for the mode
0000152E                           573          
0000152E  4243                     574          CLR         D3
00001530  1601                     575          MOVE.B      D1,D3
00001532  C67C 0007                576          AND         #seven,D3
00001536                           577          
00001536  4EB9 0000181A            578          JSR         printEA
0000153C                           579          
0000153C  43F9 00001E35            580          LEA         comma, A1           ; Display space
00001542  103C 000E                581          MOVE.B      #14, D0             ; command for trap call to display message
00001546  4E4F                     582          TRAP        #15                 ; trap call
00001548                           583          
00001548  4242                     584          CLR         D2
0000154A  4243                     585          CLR         D3
0000154C  1404                     586          MOVE.B      D4,D2
0000154E  1605                     587          MOVE.B      D5,D3
00001550                           588          
00001550  4EB9 0000181A            589          JSR         printEA
00001556                           590          
00001556                           591          
00001556  43F9 00001E2A            592          LEA         newLine, A1           ; Display space
0000155C  103C 000E                593          MOVE.B      #14, D0             ; command for trap call to display message
00001560  4E4F                     594          TRAP        #15                 ; trap call            
00001562                           595  
00001562                           596  
00001562  6000 FAA8                597          BRA         LOOP                ; go back to the loop
00001566                           598          
00001566                           599  opMOVEL     
00001566                           600          
00001566  4245                     601              CLR         D5                  ; Clear D5
00001568  1A01                     602              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000156A  E245                     603              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
0000156C  CA7C 0007                604              AND         #seven,D5
00001570                           605          
00001570  4244                     606              CLR         D4                  ; Clear out D4
00001572  1801                     607              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001574  C87C 0001                608              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001578                           609          
00001578  4241                     610              CLR          D1
0000157A  4242                     611              CLR          D2
0000157C  1218                     612              MOVE.B      (A0)+,D1            ; Copy byte into D1
0000157E  1401                     613              MOVE.B      D1,D2
00001580  EC42                     614              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001582  D842                     615              ADD         D2,D4               ; Adds the remaining bits to D4
00001584                           616          
00001584  B87C 0001                617              CMP         #one,D4             ; Check if it is MOVEA
00001588  6700 006C                618              BEQ         opMOVEAL            ; If it is, branch off
0000158C                           619              
0000158C  43F9 00001E4D            620              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001592  103C 000E                621              MOVE.B      #14, D0             ; command for trap call to display message
00001596  4E4F                     622              TRAP        #15                 ; trap call  
00001598                           623              
00001598                           624              
00001598  43F9 00001EC7            625              LEA         dispLong,A1
0000159E  103C 000E                626              MOVE.B      #14, D0             ; command for trap call to display message
000015A2  4E4F                     627              TRAP        #15                 ; trap call
000015A4                           628              
000015A4  43F9 00001E2E            629              LEA         space, A1           ; create spaces
000015AA  103C 000E                630              MOVE.B      #14, D0             ; command for trap call to display message
000015AE  4E4F                     631              TRAP        #15                 ; trap call
000015B0                           632          
000015B0  4242                     633              CLR         D2
000015B2  1401                     634              MOVE.B      D1,D2               ; Copy new byte over to D2
000015B4  E642                     635              ASR         #three,D2           ; Shift source register out
000015B6  C47C 0007                636              AND         #seven,D2           ; Set everything to 0 except for the mode
000015BA                           637          
000015BA  4243                     638              CLR         D3
000015BC  1601                     639              MOVE.B      D1,D3
000015BE  C67C 0007                640              AND         #seven,D3
000015C2                           641              
000015C2  4241                     642              CLR         D1                  ; Clear D1
000015C4  2218                     643              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
000015C6                           644              
000015C6  4EB9 0000181A            645              JSR         printEA
000015CC                           646              
000015CC  43F9 00001E35            647              LEA         comma, A1           ; Display comma
000015D2  103C 000E                648              MOVE.B      #14, D0             ; command for trap call to display message
000015D6  4E4F                     649              TRAP        #15                 ; trap call
000015D8                           650          
000015D8  4242                     651              CLR         D2
000015DA  4243                     652              CLR         D3
000015DC  1404                     653              MOVE.B      D4,D2
000015DE  1605                     654              MOVE.B      D5,D3
000015E0                           655              
000015E0                           656  
000015E0                           657              
000015E0  4EB9 0000181A            658              JSR         printEA
000015E6                           659          
000015E6                           660          
000015E6  43F9 00001E2A            661              LEA         newLine, A1           ; Display space
000015EC  103C 000E                662              MOVE.B      #14, D0             ; command for trap call to display message
000015F0  4E4F                     663              TRAP        #15                 ; trap call            
000015F2                           664  
000015F2                           665  
000015F2  6000 FA18                666              BRA         LOOP                ; go back to the loop
000015F6                           667              
000015F6                           668  opMOVEAL
000015F6                           669  
000015F6  43F9 00001E52            670              LEA         MOVEAmatch,A1
000015FC  103C 000E                671              MOVE.B      #14, D0             ; command for trap call to display message
00001600  4E4F                     672              TRAP        #15                 ; trap call
00001602                           673              
00001602  43F9 00001EC7            674              LEA         dispLong,A1
00001608  103C 000E                675              MOVE.B      #14, D0             ; command for trap call to display message
0000160C  4E4F                     676              TRAP        #15                 ; trap call
0000160E                           677              
0000160E                           678  
0000160E  43F9 00001E2E            679              LEA         space, A1           ; create spaces
00001614  103C 000E                680              MOVE.B      #14, D0             ; command for trap call to display message
00001618  4E4F                     681              TRAP        #15                 ; trap call
0000161A                           682              
0000161A  4242                     683              CLR         D2
0000161C  1401                     684              MOVE.B      D1,D2               ; Copy new byte over to D2
0000161E  E642                     685              ASR         #three,D2           ; Shift source register out
00001620  C47C 0007                686              AND         #seven,D2           ; Set everything to 0 except for the mode
00001624                           687          
00001624  4243                     688              CLR         D3
00001626  1601                     689              MOVE.B      D1,D3
00001628  C67C 0007                690              AND         #seven,D3
0000162C                           691              
0000162C  4241                     692              CLR         D1                  ; Clear D1
0000162E  3218                     693              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001630                           694              
00001630                           695              
00001630  4EB9 0000181A            696              JSR         printEA
00001636                           697              
00001636  43F9 00001E35            698              LEA         comma, A1           ; Display comma
0000163C  103C 000E                699              MOVE.B      #14, D0             ; command for trap call to display message
00001640  4E4F                     700              TRAP        #15                 ; trap call
00001642                           701  
00001642  4242                     702              CLR         D2
00001644  4243                     703              CLR         D3
00001646  1404                     704              MOVE.B      D4,D2
00001648  1605                     705              MOVE.B      D5,D3
0000164A                           706          
0000164A  4EB9 0000181A            707              JSR         printEA
00001650                           708          
00001650                           709          
00001650  43F9 00001E2A            710              LEA         newLine, A1           ; Display space
00001656  103C 000E                711              MOVE.B      #14, D0             ; command for trap call to display message
0000165A  4E4F                     712              TRAP        #15                 ; trap call            
0000165C                           713  
0000165C                           714  
0000165C  6000 F9AE                715              BRA         LOOP                ; go back to the loop
00001660                           716  
00001660                           717  opMOVEW
00001660                           718          
00001660  4245                     719              CLR         D5                  ; Clear D5
00001662  1A01                     720              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001664  E245                     721              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001666  CA7C 0007                722              AND         #seven,D5
0000166A                           723          
0000166A  4244                     724              CLR         D4                  ; Clear out D4
0000166C  1801                     725              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000166E  C87C 0001                726              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001672                           727          
00001672  4241                     728              CLR          D1
00001674  4242                     729              CLR          D2
00001676  1218                     730              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001678  1401                     731              MOVE.B      D1,D2
0000167A  EC42                     732              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000167C  D842                     733              ADD         D2,D4               ; Adds the remaining bits to D4
0000167E                           734          
0000167E  B87C 0001                735              CMP         #one,D4             ; Check if it is MOVEA
00001682  6700 006C                736              BEQ         opMOVEAW            ; If it is, branch off
00001686                           737              
00001686  43F9 00001E4D            738              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
0000168C  103C 000E                739              MOVE.B      #14, D0             ; command for trap call to display message
00001690  4E4F                     740              TRAP        #15                 ; trap call  
00001692                           741              
00001692  43F9 00001EC4            742              LEA         dispWord,A1
00001698  103C 000E                743              MOVE.B      #14, D0             ; command for trap call to display message
0000169C  4E4F                     744              TRAP        #15                 ; trap call
0000169E                           745              
0000169E  43F9 00001E2E            746              LEA         space, A1           ; create spaces
000016A4  103C 000E                747              MOVE.B      #14, D0             ; command for trap call to display message
000016A8  4E4F                     748              TRAP        #15                 ; trap call
000016AA                           749          
000016AA  4242                     750              CLR         D2
000016AC  1401                     751              MOVE.B      D1,D2               ; Copy new byte over to D2
000016AE  E642                     752              ASR         #three,D2           ; Shift source register out
000016B0  C47C 0007                753              AND         #seven,D2           ; Set everything to 0 except for the mode
000016B4                           754          
000016B4  4243                     755              CLR         D3
000016B6  1601                     756              MOVE.B      D1,D3
000016B8  C67C 0007                757              AND         #seven,D3
000016BC                           758              
000016BC  4241                     759              CLR         D1                  ; Clear D1
000016BE  3218                     760              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
000016C0                           761              
000016C0  4EB9 0000181A            762              JSR         printEA
000016C6                           763              
000016C6  43F9 00001E35            764              LEA         comma, A1           ; Display comma
000016CC  103C 000E                765              MOVE.B      #14, D0             ; command for trap call to display message
000016D0  4E4F                     766              TRAP        #15                 ; trap call
000016D2                           767          
000016D2  4242                     768              CLR         D2
000016D4  4243                     769              CLR         D3
000016D6  1404                     770              MOVE.B      D4,D2
000016D8  1605                     771              MOVE.B      D5,D3
000016DA                           772              
000016DA                           773  
000016DA                           774              
000016DA  4EB9 0000181A            775              JSR         printEA
000016E0                           776          
000016E0                           777          
000016E0  43F9 00001E2A            778              LEA         newLine, A1           ; Display space
000016E6  103C 000E                779              MOVE.B      #14, D0             ; command for trap call to display message
000016EA  4E4F                     780              TRAP        #15                 ; trap call            
000016EC                           781  
000016EC                           782  
000016EC  6000 F91E                783              BRA         LOOP                ; go back to the loop
000016F0                           784  opMOVEAW  
000016F0  43F9 00001E52            785              LEA         MOVEAmatch,A1
000016F6  103C 000E                786              MOVE.B      #14, D0             ; command for trap call to display message
000016FA  4E4F                     787              TRAP        #15                 ; trap call
000016FC                           788              
000016FC  43F9 00001EC4            789              LEA         dispWord,A1
00001702  103C 000E                790              MOVE.B      #14, D0             ; command for trap call to display message
00001706  4E4F                     791              TRAP        #15                 ; trap call
00001708                           792              
00001708                           793  
00001708  43F9 00001E2E            794              LEA         space, A1           ; create spaces
0000170E  103C 000E                795              MOVE.B      #14, D0             ; command for trap call to display message
00001712  4E4F                     796              TRAP        #15                 ; trap call
00001714                           797              
00001714  4242                     798              CLR         D2
00001716  1401                     799              MOVE.B      D1,D2               ; Copy new byte over to D2
00001718  E642                     800              ASR         #three,D2           ; Shift source register out
0000171A  C47C 0007                801              AND         #seven,D2           ; Set everything to 0 except for the mode
0000171E                           802          
0000171E  4243                     803              CLR         D3
00001720  1601                     804              MOVE.B      D1,D3
00001722  C67C 0007                805              AND         #seven,D3
00001726                           806              
00001726  4241                     807              CLR         D1                  ; Clear D1
00001728  3218                     808              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
0000172A                           809              
0000172A                           810              
0000172A  4EB9 0000181A            811              JSR         printEA
00001730                           812              
00001730  43F9 00001E35            813              LEA         comma, A1           ; Display comma
00001736  103C 000E                814              MOVE.B      #14, D0             ; command for trap call to display message
0000173A  4E4F                     815              TRAP        #15                 ; trap call
0000173C                           816  
0000173C  4242                     817              CLR         D2
0000173E  4243                     818              CLR         D3
00001740  1404                     819              MOVE.B      D4,D2
00001742  1605                     820              MOVE.B      D5,D3
00001744                           821          
00001744  4EB9 0000181A            822              JSR         printEA
0000174A                           823          
0000174A                           824          
0000174A  43F9 00001E2A            825              LEA         newLine, A1           ; Display space
00001750  103C 000E                826              MOVE.B      #14, D0             ; command for trap call to display message
00001754  4E4F                     827              TRAP        #15                 ; trap call            
00001756                           828  
00001756                           829  
00001756  6000 F8B4                830              BRA         LOOP                ; go back to the loop
0000175A                           831  
0000175A  43F9 00001E58            832  opNEG   LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001760  103C 000E                833          MOVE.B      #14, D0             ; command for trap call to display message
00001764  4E4F                     834          TRAP        #15                 ; trap call
00001766                           835  
00001766                           836  opRTSJSR
00001766                           837  
00001766                           838  opMOVEMLEA
00001766                           839  
00001766  43F9 00001E6E            840  opSUBQ      LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
0000176C  103C 000E                841              MOVE.B      #14, D0             ; command for trap call to display message
00001770  4E4F                     842              TRAP        #15                 ; trap call
00001772                           843  
00001772  43F9 00001E73            844  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001778  103C 000E                845          MOVE.B      #14, D0             ; command for trap call to display message
0000177C  4E4F                     846          TRAP        #15                 ; trap call
0000177E  43F9 00001E2E            847          LEA         space, A1           ; create spaces
00001784  103C 000E                848          MOVE.B      #14, D0             ; command for trap call to display message
00001788  4E4F                     849          TRAP        #15                 ; trap call
0000178A                           850  
0000178A  43F9 00001E77            851  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001790  103C 000E                852          MOVE.B      #14, D0             ; command for trap call to display message
00001794  4E4F                     853          TRAP        #15                 ; trap call
00001796                           854  
00001796  43F9 00001E7B            855  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
0000179C  103C 000E                856          MOVE.B      #14, D0             ; command for trap call to display message
000017A0  4E4F                     857          TRAP        #15                 ; trap call
000017A2                           858  
000017A2  43F9 00001E7F            859  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
000017A8  103C 000E                860          MOVE.B      #14, D0             ; command for trap call to display message
000017AC  4E4F                     861          TRAP        #15                 ; trap call
000017AE                           862  
000017AE  43F9 00001E83            863  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
000017B4  103C 000E                864          MOVE.B      #14, D0             ; command for trap call to display message
000017B8  4E4F                     865          TRAP        #15                 ; trap call
000017BA                           866  
000017BA  43F9 00001E8F            867  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
000017C0  103C 000E                868          MOVE.B      #14, D0             ; command for trap call to display message
000017C4  4E4F                     869          TRAP        #15                 ; trap call
000017C6                           870  
000017C6  43F9 00001E9B            871  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
000017CC  103C 000E                872          MOVE.B      #14, D0             ; command for trap call to display message
000017D0  4E4F                     873          TRAP        #15                 ; trap call
000017D2                           874  
000017D2  43F9 00001EB5            875  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000017D8  103C 000E                876          MOVE.B      #14, D0             ; command for trap call to display message
000017DC  4E4F                     877          TRAP        #15                 ; trap call
000017DE                           878  
000017DE  43F9 00001EB1            879  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000017E4  103C 000E                880          MOVE.B      #14, D0             ; command for trap call to display message
000017E8  4E4F                     881          TRAP        #15                 ; trap call
000017EA                           882  
000017EA  43F9 00001EAD            883  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
000017F0  103C 000E                884          MOVE.B      #14, D0             ; command for trap call to display message
000017F4  4E4F                     885          TRAP        #15                 ; trap call
000017F6                           886  
000017F6  43F9 00001EA9            887  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
000017FC  103C 000E                888          MOVE.B      #14, D0             ; command for trap call to display message
00001800  4E4F                     889          TRAP        #15                 ; trap call
00001802                           890  
00001802  43F9 00001EBD            891  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001808  103C 000E                892          MOVE.B      #14, D0             ; command for trap call to display message
0000180C  4E4F                     893          TRAP        #15                 ; trap call
0000180E                           894  
0000180E  43F9 00001EB9            895  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001814  103C 000E                896          MOVE.B      #14, D0             ; command for trap call to display message
00001818  4E4F                     897          TRAP        #15                 ; trap call
0000181A                           898  
0000181A                           899  
0000181A                           900  ***********************************************************************************************************
0000181A                           901  *
0000181A                           902  *                                           EA Print Check
0000181A                           903  *
0000181A                           904  ***********************************************************************************************************
0000181A  48E7 FFFE                905  printEA     MOVEM.L  D0-D7/A0-A6, -(SP)
0000181E                           906  
0000181E  B43C 0000                907              CMP.B       #zero, D2
00001822  6700 002E                908              BEQ         pDataReg
00001826  B43C 0001                909              CMP.B       #one, D2
0000182A  6700 00E6                910              BEQ         pAddrReg
0000182E  B43C 0002                911              CMP.B       #two, D2
00001832  6700 019E                912              BEQ         pAddrDir
00001836  B43C 0003                913              CMP.B       #three, D2
0000183A  6700 02C2                914              BEQ         pAddrPost
0000183E  B43C 0004                915              CMP.B       #four, D2
00001842  6700 0446                916              BEQ         pAddrDec
00001846  B43C 0007                917              CMP.B       #seven,D2
0000184A  6700 0576                918              BEQ         absAddr
0000184E  6000 05D0                919              BRA         invalid
00001852                           920  
00001852                           921  ***********************************************************************************************************
00001852                           922  * Data Register        
00001852  B63C 0000                923  pDataReg    CMP.B   #zero,D3
00001856  6700 003A                924              BEQ     displayD0
0000185A  B63C 0001                925              CMP.B   #one,D3
0000185E  6700 0042                926              BEQ     displayD1
00001862  B63C 0002                927              CMP.B   #two,D3
00001866  6700 004A                928              BEQ     displayD2
0000186A  B63C 0003                929              CMP.B   #three,D3
0000186E  6700 0052                930              BEQ     displayD3
00001872  B63C 0004                931              CMP.B   #four,D3
00001876  6700 005A                932              BEQ     displayD4
0000187A  B63C 0005                933              CMP.B   #five,D3
0000187E  6700 0062                934              BEQ     displayD5
00001882  B63C 0006                935              CMP.B   #six,D3
00001886  6700 006A                936              BEQ     displayD6
0000188A  B63C 0007                937              CMP.B   #seven,D3
0000188E  6700 0072                938              BEQ     displayD7
00001892                           939              
00001892  43F9 00001EE4            940  displayD0   LEA         dispD0, A1          ; Display space
00001898  103C 000E                941              MOVE.B      #14, D0             ; command for trap call to display message
0000189C  4E4F                     942              TRAP        #15                 ; trap call
0000189E  6000 0580                943              BRA         endSUB              ; go to the end of the subroutine
000018A2                           944              
000018A2  43F9 00001EE7            945  displayD1   LEA         dispD1, A1          ; Display space
000018A8  103C 000E                946              MOVE.B      #14, D0             ; command for trap call to display message
000018AC  4E4F                     947              TRAP        #15                 ; trap call
000018AE  6000 0570                948              BRA         endSUB              ; go to the end of the subroutine
000018B2                           949  
000018B2  43F9 00001EEA            950  displayD2   LEA         dispD2, A1          ; Display space
000018B8  103C 000E                951              MOVE.B      #14, D0             ; command for trap call to display message
000018BC  4E4F                     952              TRAP        #15                 ; trap call
000018BE  6000 0560                953              BRA         endSUB              ; go to the end of the subroutine
000018C2                           954  
000018C2  43F9 00001EED            955  displayD3   LEA         dispD3, A1          ; Display space
000018C8  103C 000E                956              MOVE.B      #14, D0             ; command for trap call to display message
000018CC  4E4F                     957              TRAP        #15                 ; trap call
000018CE  6000 0550                958              BRA         endSUB              ; go to the end of the subroutine
000018D2                           959  
000018D2  43F9 00001EF0            960  displayD4   LEA         dispD4, A1          ; Display space
000018D8  103C 000E                961              MOVE.B      #14, D0             ; command for trap call to display message
000018DC  4E4F                     962              TRAP        #15                 ; trap call
000018DE  6000 0540                963              BRA         endSUB              ; go to the end of the subroutine
000018E2                           964  
000018E2  43F9 00001EF3            965  displayD5   LEA         dispD5, A1          ; Display space
000018E8  103C 000E                966              MOVE.B      #14, D0             ; command for trap call to display message
000018EC  4E4F                     967              TRAP        #15                 ; trap call
000018EE  6000 0530                968              BRA         endSUB              ; go to the end of the subroutine
000018F2                           969  
000018F2  43F9 00001EF6            970  displayD6   LEA         dispD6, A1          ; Display space
000018F8  103C 000E                971              MOVE.B      #14, D0             ; command for trap call to display message
000018FC  4E4F                     972              TRAP        #15                 ; trap call
000018FE  6000 0520                973              BRA         endSUB              ; go to the end of the subroutine
00001902                           974  
00001902  43F9 00001EF9            975  displayD7   LEA         dispD7, A1          ; Display space
00001908  103C 000E                976              MOVE.B      #14, D0             ; command for trap call to display message
0000190C  4E4F                     977              TRAP        #15                 ; trap call
0000190E  6000 0510                978              BRA         endSUB              ; go to the end of the subroutine
00001912                           979  ***********************************************************************************************************
00001912                           980  * Address Register
00001912  B63C 0000                981  pAddrReg    CMP.B   #zero,D3
00001916  6700 003A                982              BEQ     displayA0
0000191A  B63C 0001                983              CMP.B   #one,D3
0000191E  6700 0042                984              BEQ     displayA1
00001922  B63C 0002                985              CMP.B   #two,D3
00001926  6700 004A                986              BEQ     displayA2
0000192A  B63C 0003                987              CMP.B   #three,D3
0000192E  6700 0052                988              BEQ     displayA3
00001932  B63C 0004                989              CMP.B   #four,D3
00001936  6700 005A                990              BEQ     displayA4
0000193A  B63C 0005                991              CMP.B   #five,D3
0000193E  6700 0062                992              BEQ     displayA5
00001942  B63C 0006                993              CMP.B   #six,D3
00001946  6700 006A                994              BEQ     displayA6
0000194A  B63C 0007                995              CMP.B   #seven,D3
0000194E  6700 0072                996              BEQ     displayA7
00001952                           997              
00001952  43F9 00001ECA            998  displayA0   LEA         dispA0, A1          ; Display space
00001958  103C 000E                999              MOVE.B      #14, D0             ; command for trap call to display message
0000195C  4E4F                    1000              TRAP        #15                 ; trap call
0000195E  6000 04C0               1001              BRA         endSUB              ; go to the end of the subroutine
00001962                          1002              
00001962  43F9 00001ECD           1003  displayA1   LEA         dispA1, A1          ; Display space
00001968  103C 000E               1004              MOVE.B      #14, D0             ; command for trap call to display message
0000196C  4E4F                    1005              TRAP        #15                 ; trap call
0000196E  6000 04B0               1006              BRA         endSUB              ; go to the end of the subroutine
00001972                          1007  
00001972  43F9 00001ED0           1008  displayA2   LEA         dispA2, A1          ; Display space
00001978  103C 000E               1009              MOVE.B      #14, D0             ; command for trap call to display message
0000197C  4E4F                    1010              TRAP        #15                 ; trap call
0000197E  6000 04A0               1011              BRA         endSUB              ; go to the end of the subroutine
00001982                          1012  
00001982  43F9 00001ED3           1013  displayA3   LEA         dispA3, A1          ; Display space
00001988  103C 000E               1014              MOVE.B      #14, D0             ; command for trap call to display message
0000198C  4E4F                    1015              TRAP        #15                 ; trap call
0000198E  6000 0490               1016              BRA         endSUB              ; go to the end of the subroutine
00001992                          1017  
00001992  43F9 00001ED6           1018  displayA4   LEA         dispA4, A1          ; Display space
00001998  103C 000E               1019              MOVE.B      #14, D0             ; command for trap call to display message
0000199C  4E4F                    1020              TRAP        #15                 ; trap call
0000199E  6000 0480               1021              BRA         endSUB              ; go to the end of the subroutine
000019A2                          1022  
000019A2  43F9 00001ED9           1023  displayA5   LEA         dispA5, A1          ; Display space
000019A8  103C 000E               1024              MOVE.B      #14, D0             ; command for trap call to display message
000019AC  4E4F                    1025              TRAP        #15                 ; trap call
000019AE  6000 0470               1026              BRA         endSUB              ; go to the end of the subroutine
000019B2                          1027  
000019B2  43F9 00001EDC           1028  displayA6   LEA         dispA6, A1          ; Display space
000019B8  103C 000E               1029              MOVE.B      #14, D0             ; command for trap call to display message
000019BC  4E4F                    1030              TRAP        #15                 ; trap call
000019BE  6000 0460               1031              BRA         endSUB              ; go to the end of the subroutine
000019C2                          1032  
000019C2  43F9 00001EDF           1033  displayA7   LEA         dispA7, A1          ; Display space
000019C8  103C 000E               1034              MOVE.B      #14, D0             ; command for trap call to display message
000019CC  4E4F                    1035              TRAP        #15                 ; trap call
000019CE  6000 0450               1036              BRA         endSUB              ; go to the end of the subroutine
000019D2                          1037  
000019D2                          1038  ***********************************************************************************************************
000019D2                          1039  * Address Register Direct
000019D2                          1040  
000019D2  43F9 00001E37           1041  pAddrDir    LEA         opPer, A1           ; Display space
000019D8  103C 000E               1042              MOVE.B      #14, D0             ; command for trap call to display message
000019DC  4E4F                    1043              TRAP        #15                 ; trap call
000019DE                          1044              
000019DE  B63C 0000               1045              CMP.B   #zero,D3
000019E2  6700 003A               1046              BEQ     displayA0A
000019E6  B63C 0001               1047              CMP.B   #one,D3
000019EA  6700 004E               1048              BEQ     displayA1A
000019EE  B63C 0002               1049              CMP.B   #two,D3
000019F2  6700 0062               1050              BEQ     displayA2A
000019F6  B63C 0003               1051              CMP.B   #three,D3
000019FA  6700 0076               1052              BEQ     displayA3A
000019FE  B63C 0004               1053              CMP.B   #four,D3
00001A02  6700 008A               1054              BEQ     displayA4A
00001A06  B63C 0005               1055              CMP.B   #five,D3
00001A0A  6700 009E               1056              BEQ     displayA5A
00001A0E  B63C 0006               1057              CMP.B   #six,D3
00001A12  6700 00B2               1058              BEQ     displayA6A
00001A16  B63C 0007               1059              CMP.B   #seven,D3
00001A1A  6700 00C6               1060              BEQ     displayA7A
00001A1E                          1061              
00001A1E  43F9 00001ECA           1062  displayA0A  LEA         dispA0, A1          ; Display space
00001A24  103C 000E               1063              MOVE.B      #14, D0             ; command for trap call to display message
00001A28  4E4F                    1064              TRAP        #15                 ; trap call
00001A2A  43F9 00001E39           1065              LEA         clPer, A1           ; Display space
00001A30  103C 000E               1066              MOVE.B      #14, D0             ; command for trap call to display message
00001A34  4E4F                    1067              TRAP        #15                 ; trap call
00001A36  6000 03E8               1068              BRA         endSUB              ; go to the end of the subroutine
00001A3A                          1069              
00001A3A  43F9 00001ECD           1070  displayA1A  LEA         dispA1, A1          ; Display space
00001A40  103C 000E               1071              MOVE.B      #14, D0             ; command for trap call to display message
00001A44  4E4F                    1072              TRAP        #15                 ; trap call
00001A46  43F9 00001E39           1073              LEA         clPer, A1           ; Display space
00001A4C  103C 000E               1074              MOVE.B      #14, D0             ; command for trap call to display message
00001A50  4E4F                    1075              TRAP        #15                 ; trap call
00001A52  6000 03CC               1076              BRA         endSUB              ; go to the end of the subroutine
00001A56                          1077  
00001A56  43F9 00001ED0           1078  displayA2A  LEA         dispA2, A1          ; Display space
00001A5C  103C 000E               1079              MOVE.B      #14, D0             ; command for trap call to display message
00001A60  4E4F                    1080              TRAP        #15                 ; trap call
00001A62  43F9 00001E39           1081              LEA         clPer, A1           ; Display space
00001A68  103C 000E               1082              MOVE.B      #14, D0             ; command for trap call to display message
00001A6C  4E4F                    1083              TRAP        #15                 ; trap call
00001A6E  6000 03B0               1084              BRA         endSUB              ; go to the end of the subroutine
00001A72                          1085  
00001A72  43F9 00001ED3           1086  displayA3A  LEA         dispA3, A1          ; Display space
00001A78  103C 000E               1087              MOVE.B      #14, D0             ; command for trap call to display message
00001A7C  4E4F                    1088              TRAP        #15                 ; trap call
00001A7E  43F9 00001E39           1089              LEA         clPer, A1           ; Display space
00001A84  103C 000E               1090              MOVE.B      #14, D0             ; command for trap call to display message
00001A88  4E4F                    1091              TRAP        #15                 ; trap call
00001A8A  6000 0394               1092              BRA         endSUB              ; go to the end of the subroutine
00001A8E                          1093  
00001A8E  43F9 00001ED6           1094  displayA4A  LEA         dispA4, A1          ; Display space
00001A94  103C 000E               1095              MOVE.B      #14, D0             ; command for trap call to display message
00001A98  4E4F                    1096              TRAP        #15                 ; trap call
00001A9A  43F9 00001E39           1097              LEA         clPer, A1           ; Display space
00001AA0  103C 000E               1098              MOVE.B      #14, D0             ; command for trap call to display message
00001AA4  4E4F                    1099              TRAP        #15                 ; trap call
00001AA6  6000 0378               1100              BRA         endSUB              ; go to the end of the subroutine
00001AAA                          1101  
00001AAA  43F9 00001ED9           1102  displayA5A  LEA         dispA5, A1          ; Display space
00001AB0  103C 000E               1103              MOVE.B      #14, D0             ; command for trap call to display message
00001AB4  4E4F                    1104              TRAP        #15                 ; trap call
00001AB6  43F9 00001E39           1105              LEA         clPer, A1           ; Display space
00001ABC  103C 000E               1106              MOVE.B      #14, D0             ; command for trap call to display message
00001AC0  4E4F                    1107              TRAP        #15                 ; trap call
00001AC2  6000 035C               1108              BRA         endSUB              ; go to the end of the subroutine
00001AC6                          1109  
00001AC6  43F9 00001EDC           1110  displayA6A  LEA         dispA6, A1          ; Display space
00001ACC  103C 000E               1111              MOVE.B      #14, D0             ; command for trap call to display message
00001AD0  4E4F                    1112              TRAP        #15                 ; trap call
00001AD2  43F9 00001E39           1113              LEA         clPer, A1           ; Display space
00001AD8  103C 000E               1114              MOVE.B      #14, D0             ; command for trap call to display message
00001ADC  4E4F                    1115              TRAP        #15                 ; trap call
00001ADE  6000 0340               1116              BRA         endSUB              ; go to the end of the subroutine
00001AE2                          1117  
00001AE2  43F9 00001EDF           1118  displayA7A  LEA         dispA7, A1          ; Display space
00001AE8  103C 000E               1119              MOVE.B      #14, D0             ; command for trap call to display message
00001AEC  4E4F                    1120              TRAP        #15                 ; trap call
00001AEE  43F9 00001E39           1121              LEA         clPer, A1           ; Display space
00001AF4  103C 000E               1122              MOVE.B      #14, D0             ; command for trap call to display message
00001AF8  4E4F                    1123              TRAP        #15                 ; trap call
00001AFA  6000 0324               1124              BRA         endSUB              ; go to the end of the subroutine
00001AFE                          1125              
00001AFE                          1126  ***********************************************************************************************************
00001AFE                          1127  * Addr Postincrement
00001AFE                          1128              
00001AFE  43F9 00001E37           1129  pAddrPost   LEA         opPer, A1           ; Display space
00001B04  103C 000E               1130              MOVE.B      #14, D0             ; command for trap call to display message
00001B08  4E4F                    1131              TRAP        #15                 ; trap call
00001B0A                          1132              
00001B0A  B63C 0000               1133              CMP.B   #zero,D3
00001B0E  6700 003A               1134              BEQ     displayA0P
00001B12  B63C 0001               1135              CMP.B   #one,D3
00001B16  6700 005A               1136              BEQ     displayA1P
00001B1A  B63C 0002               1137              CMP.B   #two,D3
00001B1E  6700 007A               1138              BEQ     displayA2P
00001B22  B63C 0003               1139              CMP.B   #three,D3
00001B26  6700 009A               1140              BEQ     displayA3P
00001B2A  B63C 0004               1141              CMP.B   #four,D3
00001B2E  6700 00BA               1142              BEQ     displayA4P
00001B32  B63C 0005               1143              CMP.B   #five,D3
00001B36  6700 00DA               1144              BEQ     displayA5P
00001B3A  B63C 0006               1145              CMP.B   #six,D3
00001B3E  6700 00FA               1146              BEQ     displayA6P
00001B42  B63C 0007               1147              CMP.B   #seven,D3
00001B46  6700 011A               1148              BEQ     displayA7P
00001B4A                          1149              
00001B4A  43F9 00001ECA           1150  displayA0P  LEA         dispA0, A1          ; Display space
00001B50  103C 000E               1151              MOVE.B      #14, D0             ; command for trap call to display message
00001B54  4E4F                    1152              TRAP        #15                 ; trap call
00001B56  43F9 00001E39           1153              LEA         clPer, A1           ; Display space
00001B5C  103C 000E               1154              MOVE.B      #14, D0             ; command for trap call to display message
00001B60  4E4F                    1155              TRAP        #15                 ; trap call
00001B62  43F9 00001E3D           1156              LEA         inc, A1             ; Display space
00001B68  103C 000E               1157              MOVE.B      #14, D0             ; command for trap call to display message
00001B6C  4E4F                    1158              TRAP        #15                 ; trap call
00001B6E  6000 02B0               1159              BRA         endSUB              ; go to the end of the subroutine
00001B72                          1160              
00001B72  43F9 00001ECD           1161  displayA1P  LEA         dispA1, A1          ; Display space
00001B78  103C 000E               1162              MOVE.B      #14, D0             ; command for trap call to display message
00001B7C  4E4F                    1163              TRAP        #15                 ; trap call
00001B7E  43F9 00001E39           1164              LEA         clPer, A1           ; Display space
00001B84  103C 000E               1165              MOVE.B      #14, D0             ; command for trap call to display message
00001B88  4E4F                    1166              TRAP        #15                 ; trap call
00001B8A  43F9 00001E3D           1167              LEA         inc, A1             ; Display space
00001B90  103C 000E               1168              MOVE.B      #14, D0             ; command for trap call to display message
00001B94  4E4F                    1169              TRAP        #15                 ; trap call
00001B96  6000 0288               1170              BRA         endSUB              ; go to the end of the subroutine
00001B9A                          1171  
00001B9A  43F9 00001ED0           1172  displayA2P  LEA         dispA2, A1          ; Display space
00001BA0  103C 000E               1173              MOVE.B      #14, D0             ; command for trap call to display message
00001BA4  4E4F                    1174              TRAP        #15                 ; trap call
00001BA6  43F9 00001E39           1175              LEA         clPer, A1           ; Display space
00001BAC  103C 000E               1176              MOVE.B      #14, D0             ; command for trap call to display message
00001BB0  4E4F                    1177              TRAP        #15                 ; trap call
00001BB2  43F9 00001E3D           1178              LEA         inc, A1             ; Display space
00001BB8  103C 000E               1179              MOVE.B      #14, D0             ; command for trap call to display message
00001BBC  4E4F                    1180              TRAP        #15                 ; trap call
00001BBE  6000 0260               1181              BRA         endSUB              ; go to the end of the subroutine
00001BC2                          1182  
00001BC2  43F9 00001ED3           1183  displayA3P  LEA         dispA3, A1          ; Display space
00001BC8  103C 000E               1184              MOVE.B      #14, D0             ; command for trap call to display message
00001BCC  4E4F                    1185              TRAP        #15                 ; trap call
00001BCE  43F9 00001E39           1186              LEA         clPer, A1           ; Display space
00001BD4  103C 000E               1187              MOVE.B      #14, D0             ; command for trap call to display message
00001BD8  4E4F                    1188              TRAP        #15                 ; trap call
00001BDA  43F9 00001E3D           1189              LEA         inc, A1             ; Display space
00001BE0  103C 000E               1190              MOVE.B      #14, D0             ; command for trap call to display message
00001BE4  4E4F                    1191              TRAP        #15                 ; trap call
00001BE6  6000 0238               1192              BRA         endSUB              ; go to the end of the subroutine
00001BEA                          1193  
00001BEA  43F9 00001ED6           1194  displayA4P  LEA         dispA4, A1          ; Display space
00001BF0  103C 000E               1195              MOVE.B      #14, D0             ; command for trap call to display message
00001BF4  4E4F                    1196              TRAP        #15                 ; trap call
00001BF6  43F9 00001E39           1197              LEA         clPer, A1           ; Display space
00001BFC  103C 000E               1198              MOVE.B      #14, D0             ; command for trap call to display message
00001C00  4E4F                    1199              TRAP        #15                 ; trap call
00001C02  43F9 00001E3D           1200              LEA         inc, A1             ; Display space
00001C08  103C 000E               1201              MOVE.B      #14, D0             ; command for trap call to display message
00001C0C  4E4F                    1202              TRAP        #15                 ; trap call
00001C0E  6000 0210               1203              BRA         endSUB              ; go to the end of the subroutine
00001C12                          1204  
00001C12  43F9 00001ED9           1205  displayA5P  LEA         dispA5, A1          ; Display space
00001C18  103C 000E               1206              MOVE.B      #14, D0             ; command for trap call to display message
00001C1C  4E4F                    1207              TRAP        #15                 ; trap call
00001C1E  43F9 00001E39           1208              LEA         clPer, A1           ; Display space
00001C24  103C 000E               1209              MOVE.B      #14, D0             ; command for trap call to display message
00001C28  4E4F                    1210              TRAP        #15                 ; trap call
00001C2A  43F9 00001E3D           1211              LEA         inc, A1             ; Display space
00001C30  103C 000E               1212              MOVE.B      #14, D0             ; command for trap call to display message
00001C34  4E4F                    1213              TRAP        #15                 ; trap call
00001C36  6000 01E8               1214              BRA         endSUB              ; go to the end of the subroutine
00001C3A                          1215  
00001C3A  43F9 00001EDC           1216  displayA6P  LEA         dispA6, A1          ; Display space
00001C40  103C 000E               1217              MOVE.B      #14, D0             ; command for trap call to display message
00001C44  4E4F                    1218              TRAP        #15                 ; trap call
00001C46  43F9 00001E39           1219              LEA         clPer, A1           ; Display space
00001C4C  103C 000E               1220              MOVE.B      #14, D0             ; command for trap call to display message
00001C50  4E4F                    1221              TRAP        #15                 ; trap call
00001C52  43F9 00001E3D           1222              LEA         inc, A1             ; Display space
00001C58  103C 000E               1223              MOVE.B      #14, D0             ; command for trap call to display message
00001C5C  4E4F                    1224              TRAP        #15                 ; trap call
00001C5E  6000 01C0               1225              BRA         endSUB              ; go to the end of the subroutine
00001C62                          1226  
00001C62  43F9 00001EDF           1227  displayA7P  LEA         dispA7, A1          ; Display space
00001C68  103C 000E               1228              MOVE.B      #14, D0             ; command for trap call to display message
00001C6C  4E4F                    1229              TRAP        #15                 ; trap call
00001C6E  43F9 00001E39           1230              LEA         clPer, A1           ; Display space
00001C74  103C 000E               1231              MOVE.B      #14, D0             ; command for trap call to display message
00001C78  4E4F                    1232              TRAP        #15                 ; trap call
00001C7A  43F9 00001E3D           1233              LEA         inc, A1             ; Display space
00001C80  103C 000E               1234              MOVE.B      #14, D0             ; command for trap call to display message
00001C84  4E4F                    1235              TRAP        #15                 ; trap call
00001C86  6000 0198               1236              BRA         endSUB              ; go to the end of the subroutine
00001C8A                          1237  
00001C8A                          1238  ***********************************************************************************************************
00001C8A                          1239  * Addr Postdecrement
00001C8A                          1240  
00001C8A  43F9 00001E3B           1241  pAddrDec    LEA         dec, A1             ; Display space
00001C90  103C 000E               1242              MOVE.B      #14, D0             ; command for trap call to display message
00001C94  4E4F                    1243              TRAP        #15                 ; trap call
00001C96                          1244              
00001C96  43F9 00001E37           1245              LEA         opPer, A1           ; Display space
00001C9C  103C 000E               1246              MOVE.B      #14, D0             ; command for trap call to display message
00001CA0  4E4F                    1247              TRAP        #15                 ; trap call
00001CA2                          1248              
00001CA2  B63C 0000               1249              CMP.B   #zero,D3
00001CA6  6700 003A               1250              BEQ     displayA0D
00001CAA  B63C 0001               1251              CMP.B   #one,D3
00001CAE  6700 004E               1252              BEQ     displayA1D
00001CB2  B63C 0002               1253              CMP.B   #two,D3
00001CB6  6700 0062               1254              BEQ     displayA2D
00001CBA  B63C 0003               1255              CMP.B   #three,D3
00001CBE  6700 0076               1256              BEQ     displayA3D
00001CC2  B63C 0004               1257              CMP.B   #four,D3
00001CC6  6700 008A               1258              BEQ     displayA4D
00001CCA  B63C 0005               1259              CMP.B   #five,D3
00001CCE  6700 009E               1260              BEQ     displayA5D
00001CD2  B63C 0006               1261              CMP.B   #six,D3
00001CD6  6700 00B2               1262              BEQ     displayA6D
00001CDA  B63C 0007               1263              CMP.B   #seven,D3
00001CDE  6700 00C6               1264              BEQ     displayA7D
00001CE2                          1265              
00001CE2  43F9 00001ECA           1266  displayA0D  LEA         dispA0, A1          ; Display space
00001CE8  103C 000E               1267              MOVE.B      #14, D0             ; command for trap call to display message
00001CEC  4E4F                    1268              TRAP        #15                 ; trap call
00001CEE  43F9 00001E39           1269              LEA         clPer, A1           ; Display space
00001CF4  103C 000E               1270              MOVE.B      #14, D0             ; command for trap call to display message
00001CF8  4E4F                    1271              TRAP        #15                 ; trap call
00001CFA  6000 0124               1272              BRA         endSUB              ; go to the end of the subroutine
00001CFE                          1273              
00001CFE  43F9 00001ECD           1274  displayA1D  LEA         dispA1, A1          ; Display space
00001D04  103C 000E               1275              MOVE.B      #14, D0             ; command for trap call to display message
00001D08  4E4F                    1276              TRAP        #15                 ; trap call
00001D0A  43F9 00001E39           1277              LEA         clPer, A1           ; Display space
00001D10  103C 000E               1278              MOVE.B      #14, D0             ; command for trap call to display message
00001D14  4E4F                    1279              TRAP        #15                 ; trap call
00001D16  6000 0108               1280              BRA         endSUB              ; go to the end of the subroutine
00001D1A                          1281  
00001D1A  43F9 00001ED0           1282  displayA2D  LEA         dispA2, A1          ; Display space
00001D20  103C 000E               1283              MOVE.B      #14, D0             ; command for trap call to display message
00001D24  4E4F                    1284              TRAP        #15                 ; trap call
00001D26  43F9 00001E39           1285              LEA         clPer, A1           ; Display space
00001D2C  103C 000E               1286              MOVE.B      #14, D0             ; command for trap call to display message
00001D30  4E4F                    1287              TRAP        #15                 ; trap call
00001D32  6000 00EC               1288              BRA         endSUB              ; go to the end of the subroutine
00001D36                          1289  
00001D36  43F9 00001ED3           1290  displayA3D  LEA         dispA3, A1          ; Display space
00001D3C  103C 000E               1291              MOVE.B      #14, D0             ; command for trap call to display message
00001D40  4E4F                    1292              TRAP        #15                 ; trap call
00001D42  43F9 00001E39           1293              LEA         clPer, A1           ; Display space
00001D48  103C 000E               1294              MOVE.B      #14, D0             ; command for trap call to display message
00001D4C  4E4F                    1295              TRAP        #15                 ; trap call
00001D4E  6000 00D0               1296              BRA         endSUB              ; go to the end of the subroutine
00001D52                          1297  
00001D52  43F9 00001ED6           1298  displayA4D  LEA         dispA4, A1          ; Display space
00001D58  103C 000E               1299              MOVE.B      #14, D0             ; command for trap call to display message
00001D5C  4E4F                    1300              TRAP        #15                 ; trap call
00001D5E  43F9 00001E39           1301              LEA         clPer, A1           ; Display space
00001D64  103C 000E               1302              MOVE.B      #14, D0             ; command for trap call to display message
00001D68  4E4F                    1303              TRAP        #15                 ; trap call
00001D6A  6000 00B4               1304              BRA         endSUB              ; go to the end of the subroutine
00001D6E                          1305  
00001D6E  43F9 00001ED9           1306  displayA5D  LEA         dispA5, A1          ; Display space
00001D74  103C 000E               1307              MOVE.B      #14, D0             ; command for trap call to display message
00001D78  4E4F                    1308              TRAP        #15                 ; trap call
00001D7A  43F9 00001E39           1309              LEA         clPer, A1           ; Display space
00001D80  103C 000E               1310              MOVE.B      #14, D0             ; command for trap call to display message
00001D84  4E4F                    1311              TRAP        #15                 ; trap call
00001D86  6000 0098               1312              BRA         endSUB              ; go to the end of the subroutine
00001D8A                          1313  
00001D8A  43F9 00001EDC           1314  displayA6D  LEA         dispA6, A1          ; Display space
00001D90  103C 000E               1315              MOVE.B      #14, D0             ; command for trap call to display message
00001D94  4E4F                    1316              TRAP        #15                 ; trap call
00001D96  43F9 00001E39           1317              LEA         clPer, A1           ; Display space
00001D9C  103C 000E               1318              MOVE.B      #14, D0             ; command for trap call to display message
00001DA0  4E4F                    1319              TRAP        #15                 ; trap call
00001DA2  6000 007C               1320              BRA         endSUB              ; go to the end of the subroutine
00001DA6                          1321  
00001DA6  43F9 00001EDF           1322  displayA7D  LEA         dispA7, A1          ; Display space
00001DAC  103C 000E               1323              MOVE.B      #14, D0             ; command for trap call to display message
00001DB0  4E4F                    1324              TRAP        #15                 ; trap call
00001DB2  43F9 00001E39           1325              LEA         clPer, A1           ; Display space
00001DB8  103C 000E               1326              MOVE.B      #14, D0             ; command for trap call to display message
00001DBC  4E4F                    1327              TRAP        #15                 ; trap call
00001DBE  6000 0060               1328              BRA         endSUB              ; go to the end of the subroutine
00001DC2                          1329  
00001DC2                          1330  
00001DC2                          1331  ***********************************************************************************************************
00001DC2                          1332  * Absolute Address
00001DC2                          1333  absAddr
00001DC2  B67C 0000               1334              CMP         #zero,D3            ; This is (xxx).W
00001DC6  6700 0016               1335              BEQ         absAddrW
00001DCA  B67C 0001               1336              CMP         #one,D3             ; This is (xxx).L
00001DCE  6700 0024               1337              BEQ         absAddrL
00001DD2  B67C 0004               1338              CMP         #four,D3
00001DD6  6700 0032               1339              BEQ         immData
00001DDA  6000 0044               1340              BRA         invalid             ; Invalid, not equal to any of the opCodes handled
00001DDE                          1341              
00001DDE                          1342  absAddrW                                    ; Does not work at the moment
00001DDE                          1343  
00001DDE  43F9 00001E31           1344              LEA         hashTag, A1           ; Display space
00001DE4  103C 000E               1345              MOVE.B      #14, D0             ; command for trap call to display message
00001DE8  4E4F                    1346              TRAP        #15                 ; trap call
00001DEA                          1347              
00001DEA  103C 0002               1348              MOVE.B      #2, D0              ; Load #2 into D0
00001DEE  4E4F                    1349              TRAP        #15                 ; Display word in D1
00001DF0                          1350          
00001DF0                          1351  
00001DF0  6000 002E               1352              BRA         endSUB              ; End subroutine
00001DF4                          1353  absAddrL                                    ; Does not work at the moment
00001DF4                          1354  
00001DF4  43F9 00001E31           1355              LEA         hashTag, A1           ; Display space
00001DFA  103C 000E               1356              MOVE.B      #14, D0             ; command for trap call to display message
00001DFE  4E4F                    1357              TRAP        #15                 ; trap call
00001E00                          1358              
00001E00  103C 0003               1359              MOVE.B      #3, D0              
00001E04  4E4F                    1360              TRAP        #15
00001E06                          1361          
00001E06                          1362  
00001E06  6000 0018               1363              BRA         endSUB              ; End subroutine
00001E0A                          1364              
00001E0A                          1365  immData     
00001E0A                          1366  
00001E0A                          1367          
00001E0A  43F9 00001E31           1368              LEA         hashTag, A1           ; Display space
00001E10  103C 000E               1369              MOVE.B      #14, D0             ; command for trap call to display message
00001E14  4E4F                    1370              TRAP        #15                 ; trap call
00001E16                          1371              
00001E16  103C 0003               1372              MOVE.B      #3, D0              
00001E1A  4E4F                    1373              TRAP        #15
00001E1C                          1374          
00001E1C                          1375  
00001E1C  6000 0002               1376              BRA         endSUB              ; End subroutine
00001E20                          1377  
00001E20                          1378  invalid
00001E20                          1379  
00001E20                          1380  endSUB
00001E20                          1381          
00001E20  4CDF 7FFF               1382          MOVEM.L  (SP)+, D0-D7/A0-A6
00001E24  4E75                    1383          RTS
00001E26                          1384  
00001E26                          1385  ***********************************************************************************************************
00001E26                          1386  ***********************************************************************************************************
00001E26                          1387  ***********************************************************************************************************
00001E26                          1388  
00001E26                          1389  printInvalid
00001E26                          1390  endPROG    
00001E26                          1391  
00001E26  FFFF FFFF               1392      SIMHALT                             ; halt simulator
00001E2A                          1393  
00001E2A= 20 0D 0A 00             1394  newLine     DC.B    ' ', CR, LF, 0
00001E2E= 20 20 00                1395  space       DC.B    '  ', 0
00001E31                          1396  
00001E31= 23 00                   1397  hashTag     DC.B    '#', 0
00001E33= 24 00                   1398  dispHex     DC.B    '$', 0
00001E35= 2C 00                   1399  comma       DC.B    ',', 0
00001E37                          1400  
00001E37= 28 00                   1401  opPer       DC.B    '(', 0
00001E39= 29 00                   1402  clPer       DC.B    ')', 0
00001E3B= 2D 00                   1403  dec         DC.B    '-', 0
00001E3D= 2B 00                   1404  inc         DC.B    '+', 0
00001E3F                          1405  
00001E3F= 4F 52 49 00             1406  ORImatch    DC.B    'ORI', 0
00001E43= 43 4D 50 49 00          1407  CMPImatch   DC.B    'CMPI', 0
00001E48= 42 43 4C 52 00          1408  BCLRmatch   DC.B    'BCLR', 0
00001E4D= 4D 4F 56 45 00          1409  MOVEmatch   DC.B    'MOVE', 0
00001E52= 4D 4F 56 45 41 00       1410  MOVEAmatch  DC.B    'MOVEA', 0
00001E58= 4E 45 47 00             1411  NEGmatch    DC.B    'NEG', 0
00001E5C= 52 54 53 00             1412  RTSmatch    DC.B    'RTS', 0
00001E60= 4A 53 52 00             1413  JSRmatch    DC.B    'JSR', 0
00001E64= 4D 4F 56 45 4D 00       1414  MOVEMmatch  DC.B    'MOVEM', 0
00001E6A= 4C 45 41 00             1415  LEAmatch    DC.B    'LEA', 0
00001E6E= 53 55 42 51 00          1416  SUBQmatch   DC.B    'SUBQ', 0
00001E73= 42 52 41 00             1417  BRAmatch    DC.B    'BRA', 0
00001E77= 42 43 53 00             1418  BCSmatch    DC.B    'BCS', 0
00001E7B= 42 56 43 00             1419  BVCmatch    DC.B    'BVC', 0
00001E7F= 42 47 45 00             1420  BGEmatch    DC.B    'BGE', 0
00001E83= 42 4C 54 00             1421  BLTmatch    DC.B    'BLT', 0
00001E87= 44 49 56 53 00          1422  DIVSmatch   DC.B    'DIVS', 0
00001E8C= 4F 52 00                1423  ORmatch     DC.B    'OR', 0
00001E8F= 53 55 42 00             1424  SUBmatch    DC.B    'SUB', 0
00001E93= 45 4F 52 00             1425  EORmatch    DC.B    'EOR', 0
00001E97= 43 4D 50 00             1426  CMPmatch    DC.B    'CMP', 0
00001E9B= 4D 55 4C 53 00          1427  MULSmatch   DC.B    'MULS', 0
00001EA0= 41 44 44 00             1428  ADDmatch    DC.B    'ADD', 0
00001EA4= 41 44 44 41 00          1429  ADDAmatch   DC.B    'ADDA', 0
00001EA9= 4C 53 52 00             1430  LSRmatch    DC.B    'LSR', 0
00001EAD= 4C 53 4C 00             1431  LSLmatch    DC.B    'LSL', 0
00001EB1= 41 53 52 00             1432  ASRmatch    DC.B    'ASR', 0
00001EB5= 41 53 4C 00             1433  ASLmatch    DC.B    'ASL', 0
00001EB9= 52 4F 52 00             1434  RORmatch    DC.B    'ROR', 0
00001EBD= 52 4F 4C 00             1435  ROLmatch    DC.B    'ROL', 0
00001EC1                          1436   
00001EC1= 2E 42 00                1437  dispByte    DC.B    '.B', 0
00001EC4= 2E 57 00                1438  dispWord    DC.B    '.W', 0
00001EC7= 2E 4C 00                1439  dispLong    DC.B    '.L', 0
00001ECA                          1440  
00001ECA= 41 30 00                1441  dispA0      DC.B    'A0', 0
00001ECD= 41 31 00                1442  dispA1      DC.B    'A1', 0
00001ED0= 41 32 00                1443  dispA2      DC.B    'A2', 0
00001ED3= 41 33 00                1444  dispA3      DC.B    'A3', 0
00001ED6= 41 34 00                1445  dispA4      DC.B    'A4', 0
00001ED9= 41 35 00                1446  dispA5      DC.B    'A5', 0
00001EDC= 41 36 00                1447  dispA6      DC.B    'A6', 0
00001EDF= 41 37 00                1448  dispA7      DC.B    'A7', 0
00001EE2                          1449  
00001EE2= 44 00                   1450  dispD       DC.B    'D',0
00001EE4= 44 30 00                1451  dispD0      DC.B    'D0', 0
00001EE7= 44 31 00                1452  dispD1      DC.B    'D1', 0
00001EEA= 44 32 00                1453  dispD2      DC.B    'D2', 0
00001EED= 44 33 00                1454  dispD3      DC.B    'D3', 0
00001EF0= 44 34 00                1455  dispD4      DC.B    'D4', 0
00001EF3= 44 35 00                1456  dispD5      DC.B    'D5', 0
00001EF6= 44 36 00                1457  dispD6      DC.B    'D6', 0
00001EF9= 44 37 00                1458  dispD7      DC.B    'D7', 0  
00001EFC                          1459             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSADDR             1DC2
ABSADDRL            1DF4
ABSADDRW            1DDE
ADDAMATCH           1EA4
ADDMATCH            1EA0
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            1EB5
ASRMATCH            1EB1
BCLRMATCH           1E48
BCSMATCH            1E77
BGEMATCH            1E7F
BLTMATCH            1E83
BRAEIGHT            110E
BRAELEVEN           1112
BRAFIVE             10DE
BRAFOUR             10C2
BRAFOURTEEN         1116
BRAMATCH            1E73
BRANINE             110E
BRAONE              10B6
BRASIX              10E2
BRATHIRTEEN         1116
BRATHREE            10BE
BRATWELVE           1112
BRATWO              10BA
BRAZERO             1086
BVCMATCH            1E7B
CLPER               1E39
CMPIMATCH           1E43
CMPMATCH            1E97
COMMA               1E35
CR                  D
DEC                 1E3B
DISPA0              1ECA
DISPA1              1ECD
DISPA2              1ED0
DISPA3              1ED3
DISPA4              1ED6
DISPA5              1ED9
DISPA6              1EDC
DISPA7              1EDF
DISPBYTE            1EC1
DISPD               1EE2
DISPD0              1EE4
DISPD1              1EE7
DISPD2              1EEA
DISPD3              1EED
DISPD4              1EF0
DISPD5              1EF3
DISPD6              1EF6
DISPD7              1EF9
DISPHEX             1E33
DISPLAYA0           1952
DISPLAYA0A          1A1E
DISPLAYA0D          1CE2
DISPLAYA0P          1B4A
DISPLAYA1           1962
DISPLAYA1A          1A3A
DISPLAYA1D          1CFE
DISPLAYA1P          1B72
DISPLAYA2           1972
DISPLAYA2A          1A56
DISPLAYA2D          1D1A
DISPLAYA2P          1B9A
DISPLAYA3           1982
DISPLAYA3A          1A72
DISPLAYA3D          1D36
DISPLAYA3P          1BC2
DISPLAYA4           1992
DISPLAYA4A          1A8E
DISPLAYA4D          1D52
DISPLAYA4P          1BEA
DISPLAYA5           19A2
DISPLAYA5A          1AAA
DISPLAYA5D          1D6E
DISPLAYA5P          1C12
DISPLAYA6           19B2
DISPLAYA6A          1AC6
DISPLAYA6D          1D8A
DISPLAYA6P          1C3A
DISPLAYA7           19C2
DISPLAYA7A          1AE2
DISPLAYA7D          1DA6
DISPLAYA7P          1C62
DISPLAYD0           1892
DISPLAYD1           18A2
DISPLAYD2           18B2
DISPLAYD3           18C2
DISPLAYD4           18D2
DISPLAYD5           18E2
DISPLAYD6           18F2
DISPLAYD7           1902
DISPLONG            1EC7
DISPWORD            1EC4
DIVSMATCH           1E87
EIGHT               8
ELEVEN              B
ENDPROG             1E26
ENDSUB              1E20
EORMATCH            1E93
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             1E31
IMMDATA             1E0A
INC                 1E3D
INVALID             1E20
JSRMATCH            1E60
LEAMATCH            1E6A
LF                  A
LOOP                100C
LSLMATCH            1EAD
LSRMATCH            1EA9
MOVEAMATCH          1E52
MOVEMATCH           1E4D
MOVEMMATCH          1E64
MULSMATCH           1E9B
NEGMATCH            1E58
NEWLINE             1E2A
NINE                9
ONE                 1
OPASL               17D2
OPASR               17DE
OPBCLR              1410
OPBCS               178A
OPBGE               17A2
OPBLT               17AE
OPBRA               1772
OPBVC               1796
OPCMPI              129E
OPCMPIB             12EA
OPCMPIL             13AE
OPCMPIW             134C
OPDYNBCLR           1474
OPLSL               17EA
OPLSR               17F6
OPMOVEAL            15F6
OPMOVEAW            16F0
OPMOVEB             14E2
OPMOVEL             1566
OPMOVEMLEA          1766
OPMOVEW             1660
OPMULS              17C6
OPNEG               175A
OPORI               114A
OPORIB              1178
OPORIL              123C
OPORIW              11DA
OPPER               1E37
OPROL               1802
OPROR               180E
OPRTSJSR            1766
OPSUB               17BA
OPSUBQ              1766
ORIMATCH            1E3F
ORMATCH             1E8C
PADDRDEC            1C8A
PADDRDIR            19D2
PADDRPOST           1AFE
PADDRREG            1912
PDATAREG            1852
PRINTEA             181A
PRINTINVALID        1E26
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
ROLMATCH            1EBD
RORMATCH            1EB9
RTSMATCH            1E5C
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               1E2E
START               1000
SUBMATCH            1E8F
SUBQMATCH           1E6E
TEST_END            2009
TEST_START          2000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
