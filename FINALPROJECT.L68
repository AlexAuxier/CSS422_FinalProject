00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 11/28/2014 3:08:16 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00002000                 10  test_start  EQU     $00002000   ; defined starting address
00000000  =00002009                 11  test_end    EQU     $00002009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00002000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00002009             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 0BB0                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 0080                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0078                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 008C                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0088                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00AC                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00A4                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00A0                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 0098                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 0094                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 008C                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                102          AND.B       #secNib, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 00AE                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 01FA                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                108          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 0364                109          BEQ         opBCLR
000010A6  C47C 0001                110          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                111          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 03BC                112          BEQ         opDynBCLR
000010B2  6000 0B10                113          BRA         printInvalid
000010B6                           114          
000010B6                           115          
000010B6  6000 0422                116  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           117  
000010BA                           118  braTwo  ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BA                           119  
000010BA                           120  braThree ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BA                           121  
000010BA  4242                     122  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010BC  1401                     123          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010BE  C438 000F                124          AND.B       $0F, D2             ; set first nibble to 0
000010C2                           125   
000010C2  B43C 0004                126          CMP.B       #four, D2           ; compare second nibble to 4
000010C6  6700 0496                127          BEQ         opNEG               ; branch to NEG method
000010CA  B43C 000E                128          CMP.B       #fourteen, D2       ; compare second nibble to E
000010CE  6700 049A                129          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010D2  6000 0496                130          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010D6                           131  
000010D6  6000 0492                132  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010DA                           133  
000010DA  4242                     134  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010DC  1401                     135          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010DE  C438 000F                136          AND.B       $0F, D2             ; set first nibble to 0
000010E2                           137   
000010E2  B43C 0000                138          CMP.B       #zero, D2           ; compare second nibble to 0
000010E6  6700 048E                139          BEQ         opBRA               ; branch to BRA method
000010EA  B43C 0005                140          CMP.B       #five, D2           ; compare second nibble to 5
000010EE  6700 049E                141          BEQ         opBCS               ; branch to BCS method
000010F2  B43C 0008                142          CMP.B       #eight, D2          ; compare second nibble to 8
000010F6  6700 04A2                143          BEQ         opBVC               ; branch to BCS method
000010FA  B43C 000C                144          CMP.B       #twelve, D2         ; compare second nibble to 12
000010FE  6700 04A6                145          BEQ         opBGE               ; branch to BGE method
00001102  6000 04AE                146          BRA         opBLT               ; otherwise, branch to BLT method
00001106                           147  
00001106                           148  braEight    ; there are two opCodes available DIVS, or OR
00001106                           149  
00001106  6000 04B6                150  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000110A                           151  
0000110A                           152  braEleven   ; there are two opCodes available EOR, or CMP
0000110A                           153  
0000110A  6000 04BE                154  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
0000110E                           155    
0000110E                           156  braThirteen ; there are two opCodes available ADD, or ADDA
0000110E                           157  
0000110E  4242                     158  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
00001110  1401                     159              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001112  C438 000F                160              AND.B       $0F, D2             ; set first nibble to 0
00001116                           161   
00001116  B43C 0000                162              CMP.B       #zero, D2           ; compare second nibble to 0
0000111A  6700 04C6                163              BEQ         opASR               ; branch to ASR method
0000111E  B43C 0001                164              CMP.B       #one, D2            ; compare second nibble to 1
00001122  6700 04B2                165              BEQ         opASL               ; branch to ASL method
00001126  B43C 0002                166              CMP.B       #two, D2            ; compare second nibble to 2
0000112A  6700 04CE                167              BEQ         opLSR               ; branch to LSR method
0000112E  B43C 0003                168              CMP.B       #three, D2          ; compare second nibble to 3
00001132  6700 04BA                169              BEQ         opLSL               ; branch to LSL method
00001136  B43C 0006                170              CMP.B       #six, D2            ; compare second nibble to 6
0000113A  6700 04D6                171              BEQ         opROR               ; branch to ROR method
0000113E  6000 04C6                172              BRA         opROL               ; otherwise, branch to ROL method
00001142                           173  
00001142  43F9 00001BDD            174  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
00001148  103C 000E                175          MOVE.B      #14, D0             ; command for trap call to display message
0000114C  4E4F                     176          TRAP        #15                 ; trap call
0000114E                           177          
0000114E  1218                     178          MOVE.B      (A0)+, D1
00001150  1401                     179          MOVE.B      D1,D2               ; copy data over
00001152  EC42                     180          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001154  B43C 0000                181          CMP.B       #zero,D2
00001158  6700 0016                182          BEQ         opORIB
0000115C  B43C 0001                183          CMP.B       #one,D2
00001160  6700 0070                184          BEQ         opORIW
00001164  B43C 0002                185          CMP.B       #two,D2
00001168  6700 00CA                186          BEQ         opORIL
0000116C                           187          
0000116C  6000 0A56                188          BRA         printInvalid
00001170                           189          
00001170  43F9 00001C5F            190  opORIB  LEA         dispByte, A1        ; Display byte
00001176  103C 000E                191          MOVE.B      #14, D0             ; command for trap call to display message
0000117A  4E4F                     192          TRAP        #15                 ; trap call
0000117C                           193          
0000117C  43F9 00001BCC            194          LEA         space, A1           ; Display space
00001182  103C 000E                195          MOVE.B      #14, D0             ; command for trap call to display message
00001186  4E4F                     196          TRAP        #15                 ; trap call
00001188                           197          
00001188  4242                     198          CLR         D2
0000118A  1401                     199          MOVE.B      D1,D2
0000118C  E642                     200          ASR         #three,D2
0000118E  C47C 0007                201          AND         #seven,D2
00001192  4243                     202          CLR         D3        
00001194  1601                     203          MOVE.B      D1,D3
00001196  C67C 0007                204          AND         #seven,D3
0000119A                           205          
0000119A  4241                     206          CLR         D1
0000119C  3218                     207          MOVE.W      (A0)+, D1
0000119E                           208          
0000119E  43F9 00001BCF            209          LEA         hashTag, A1           ; Display space
000011A4  103C 000E                210          MOVE.B      #14, D0             ; command for trap call to display message
000011A8  4E4F                     211          TRAP        #15                 ; trap call
000011AA                           212          
000011AA  103C 0003                213          MOVE.B      #3, D0
000011AE  4E4F                     214          TRAP        #15
000011B0                           215          
000011B0  43F9 00001BD3            216          LEA         comma, A1           ; Display space
000011B6  103C 000E                217          MOVE.B      #14, D0             ; command for trap call to display message
000011BA  4E4F                     218          TRAP        #15                 ; trap call
000011BC                           219          
000011BC  4EB9 0000161E            220          JSR         printEA
000011C2                           221          
000011C2  43F9 00001BC8            222          LEA         newLine, A1           ; Display space
000011C8  103C 000E                223          MOVE.B      #14, D0             ; command for trap call to display message
000011CC  4E4F                     224          TRAP        #15                 ; trap call
000011CE                           225          
000011CE  6000 FE3C                226          BRA         LOOP
000011D2                           227          
000011D2                           228          
000011D2  43F9 00001C62            229  opORIW  LEA         dispWord, A1        ; Display byte
000011D8  103C 000E                230          MOVE.B      #14, D0             ; command for trap call to display message
000011DC  4E4F                     231          TRAP        #15                 ; trap call
000011DE                           232          
000011DE  43F9 00001BCC            233          LEA         space, A1           ; Display space
000011E4  103C 000E                234          MOVE.B      #14, D0             ; command for trap call to display message
000011E8  4E4F                     235          TRAP        #15                 ; trap call
000011EA                           236          
000011EA  4242                     237          CLR         D2
000011EC  1401                     238          MOVE.B      D1,D2
000011EE  E642                     239          ASR         #three,D2
000011F0  C47C 0007                240          AND         #seven,D2
000011F4  4243                     241          CLR         D3        
000011F6  1601                     242          MOVE.B      D1,D3
000011F8  C67C 0007                243          AND         #seven,D3
000011FC                           244          
000011FC  4241                     245          CLR         D1
000011FE  3218                     246          MOVE.W      (A0)+, D1
00001200                           247          
00001200  43F9 00001BCF            248          LEA         hashTag, A1           ; Display space
00001206  103C 000E                249          MOVE.B      #14, D0             ; command for trap call to display message
0000120A  4E4F                     250          TRAP        #15                 ; trap call
0000120C                           251          
0000120C  103C 0003                252          MOVE.B      #3, D0
00001210  4E4F                     253          TRAP        #15
00001212                           254          
00001212  43F9 00001BD3            255          LEA         comma, A1           ; Display space
00001218  103C 000E                256          MOVE.B      #14, D0             ; command for trap call to display message
0000121C  4E4F                     257          TRAP        #15                 ; trap call
0000121E                           258          
0000121E  4EB9 0000161E            259          JSR         printEA
00001224                           260          
00001224  43F9 00001BC8            261          LEA         newLine, A1           ; Display space
0000122A  103C 000E                262          MOVE.B      #14, D0             ; command for trap call to display message
0000122E  4E4F                     263          TRAP        #15                 ; trap call
00001230                           264          
00001230  6000 FDDA                265          BRA         LOOP
00001234                           266       
00001234  43F9 00001C65            267  opORIL  LEA         dispLong, A1        ; Display byte
0000123A  103C 000E                268          MOVE.B      #14, D0             ; command for trap call to display message
0000123E  4E4F                     269          TRAP        #15                 ; trap call
00001240                           270          
00001240  43F9 00001BCC            271          LEA         space, A1           ; Display space
00001246  103C 000E                272          MOVE.B      #14, D0             ; command for trap call to display message
0000124A  4E4F                     273          TRAP        #15                 ; trap call
0000124C                           274          
0000124C  4242                     275          CLR         D2
0000124E  1401                     276          MOVE.B      D1,D2
00001250  E642                     277          ASR         #three,D2
00001252  C47C 0007                278          AND         #seven,D2
00001256  4243                     279          CLR         D3        
00001258  1601                     280          MOVE.B      D1,D3
0000125A  C67C 0007                281          AND         #seven,D3
0000125E                           282          
0000125E  4241                     283          CLR         D1
00001260  2218                     284          MOVE.L      (A0)+, D1
00001262                           285          
00001262  43F9 00001BCF            286          LEA         hashTag, A1           ; Display space
00001268  103C 000E                287          MOVE.B      #14, D0             ; command for trap call to display message
0000126C  4E4F                     288          TRAP        #15                 ; trap call
0000126E                           289          
0000126E  103C 0003                290          MOVE.B      #3, D0
00001272  4E4F                     291          TRAP        #15
00001274                           292          
00001274  43F9 00001BD3            293          LEA         comma, A1           ; Display space
0000127A  103C 000E                294          MOVE.B      #14, D0             ; command for trap call to display message
0000127E  4E4F                     295          TRAP        #15                 ; trap call
00001280                           296          
00001280  4EB9 0000161E            297          JSR         printEA
00001286                           298          
00001286  43F9 00001BC8            299          LEA         newLine, A1           ; Display space
0000128C  103C 000E                300          MOVE.B      #14, D0             ; command for trap call to display message
00001290  4E4F                     301          TRAP        #15                 ; trap call
00001292                           302          
00001292  6000 FD78                303          BRA         LOOP
00001296                           304           
00001296  43F9 00001BE1            305  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000129C  103C 000E                306          MOVE.B      #14, D0             ; command for trap call to display message
000012A0  4E4F                     307          TRAP        #15                 ; trap call
000012A2                           308                  
000012A2  1218                     309          MOVE.B      (A0)+, D1
000012A4  1401                     310          MOVE.B      D1,D2               ; copy data over
000012A6  EC42                     311          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000012A8  B43C 0000                312          CMP.B       #zero,D2
000012AC  6700 0034                313          BEQ         opCMPIB
000012B0  B43C 0001                314          CMP.B       #one,D2
000012B4  6700 008E                315          BEQ         opCMPIW
000012B8  B43C 0002                316          CMP.B       #two,D2
000012BC  6700 00E8                317          BEQ         opCMPIL
000012C0                           318          
000012C0  1401                     319          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000012C2  E542                     320          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
000012C4  1802                     321          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
000012C6  4242                     322          CLR         D2                  ; Clear out data register
000012C8  1404                     323          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
000012CA  EA42                     324          ASR         #five,D2            ; Shift the register out to get just the mode
000012CC  1802                     325          MOVE.B      D2,D4               ; Store mode into D4
000012CE  4242                     326          CLR         D2
000012D0                           327          
000012D0  1401                     328          MOVE.B      D1,D2               ; Getting the EA register
000012D2  EB42                     329          ASL         #five,D2
000012D4  1A02                     330          MOVE.B      D2,D5               ; Move just the register into D5
000012D6  4242                     331          CLR         D2                  ; Clearing D2 to put data back
000012D8  1405                     332          MOVE.B      D5,D2               ; Putting back the register
000012DA  EA42                     333          ASR         #five,D2            ; Shifting bits in order to read the register
000012DC  1A02                     334          MOVE.B      D2,D5               ; Store register into D5
000012DE                           335          
000012DE  6000 FD2C                336          BRA         LOOP                ; go back to the loop
000012E2                           337  
000012E2  43F9 00001C5F            338  opCMPIB LEA         dispByte, A1        ; Display byte
000012E8  103C 000E                339          MOVE.B      #14, D0             ; command for trap call to display message
000012EC  4E4F                     340          TRAP        #15                 ; trap call
000012EE                           341          
000012EE  43F9 00001BCC            342          LEA         space, A1           ; Display space
000012F4  103C 000E                343          MOVE.B      #14, D0             ; command for trap call to display message
000012F8  4E4F                     344          TRAP        #15                 ; trap call
000012FA                           345          
000012FA  4242                     346          CLR         D2
000012FC  1401                     347          MOVE.B      D1,D2
000012FE  E642                     348          ASR         #three,D2
00001300  C47C 0007                349          AND         #seven,D2
00001304  4243                     350          CLR         D3        
00001306  1601                     351          MOVE.B      D1,D3
00001308  C67C 0007                352          AND         #seven,D3
0000130C                           353          
0000130C  4241                     354          CLR         D1
0000130E  3218                     355          MOVE.W      (A0)+, D1
00001310                           356          
00001310  43F9 00001BCF            357          LEA         hashTag, A1           ; Display space
00001316  103C 000E                358          MOVE.B      #14, D0             ; command for trap call to display message
0000131A  4E4F                     359          TRAP        #15                 ; trap call
0000131C                           360          
0000131C  103C 0003                361          MOVE.B      #3, D0
00001320  4E4F                     362          TRAP        #15
00001322                           363          
00001322  43F9 00001BD3            364          LEA         comma, A1           ; Display space
00001328  103C 000E                365          MOVE.B      #14, D0             ; command for trap call to display message
0000132C  4E4F                     366          TRAP        #15                 ; trap call
0000132E                           367          
0000132E  4EB9 0000161E            368          JSR         printEA
00001334                           369          
00001334  43F9 00001BC8            370          LEA         newLine, A1           ; Display space
0000133A  103C 000E                371          MOVE.B      #14, D0             ; command for trap call to display message
0000133E  4E4F                     372          TRAP        #15                 ; trap call
00001340                           373  
00001340  6000 FCCA                374          BRA         LOOP
00001344                           375  
00001344  43F9 00001C62            376  opCMPIW LEA         dispWord, A1        ; Display byte
0000134A  103C 000E                377          MOVE.B      #14, D0             ; command for trap call to display message
0000134E  4E4F                     378          TRAP        #15                 ; trap call
00001350                           379          
00001350  43F9 00001BCC            380          LEA         space, A1           ; Display space
00001356  103C 000E                381          MOVE.B      #14, D0             ; command for trap call to display message
0000135A  4E4F                     382          TRAP        #15                 ; trap call
0000135C                           383          
0000135C  4242                     384          CLR         D2
0000135E  1401                     385          MOVE.B      D1,D2
00001360  E642                     386          ASR         #three,D2
00001362  C47C 0007                387          AND         #seven,D2
00001366  4243                     388          CLR         D3        
00001368  1601                     389          MOVE.B      D1,D3
0000136A  C67C 0007                390          AND         #seven,D3
0000136E                           391          
0000136E  4241                     392          CLR         D1
00001370  3218                     393          MOVE.W      (A0)+, D1
00001372                           394          
00001372  43F9 00001BCF            395          LEA         hashTag, A1           ; Display space
00001378  103C 000E                396          MOVE.B      #14, D0             ; command for trap call to display message
0000137C  4E4F                     397          TRAP        #15                 ; trap call
0000137E                           398          
0000137E  103C 0003                399          MOVE.B      #3, D0
00001382  4E4F                     400          TRAP        #15
00001384                           401          
00001384  43F9 00001BD3            402          LEA         comma, A1           ; Display space
0000138A  103C 000E                403          MOVE.B      #14, D0             ; command for trap call to display message
0000138E  4E4F                     404          TRAP        #15                 ; trap call
00001390                           405          
00001390  4EB9 0000161E            406          JSR         printEA
00001396                           407          
00001396  43F9 00001BC8            408          LEA         newLine, A1           ; Display space
0000139C  103C 000E                409          MOVE.B      #14, D0             ; command for trap call to display message
000013A0  4E4F                     410          TRAP        #15                 ; trap call
000013A2  6000 FC68                411          BRA         LOOP
000013A6                           412  
000013A6  43F9 00001C65            413  opCMPIL LEA         dispLong, A1        ; Display byte
000013AC  103C 000E                414          MOVE.B      #14, D0             ; command for trap call to display message
000013B0  4E4F                     415          TRAP        #15                 ; trap call
000013B2                           416          
000013B2  43F9 00001BCC            417          LEA         space, A1           ; Display space
000013B8  103C 000E                418          MOVE.B      #14, D0             ; command for trap call to display message
000013BC  4E4F                     419          TRAP        #15                 ; trap call
000013BE                           420          
000013BE  4242                     421          CLR         D2
000013C0  1401                     422          MOVE.B      D1,D2
000013C2  E642                     423          ASR         #three,D2
000013C4  C47C 0007                424          AND         #seven,D2
000013C8  4243                     425          CLR         D3        
000013CA  1601                     426          MOVE.B      D1,D3
000013CC  C67C 0007                427          AND         #seven,D3
000013D0                           428          
000013D0  4241                     429          CLR         D1
000013D2  3218                     430          MOVE.W      (A0)+, D1
000013D4                           431          
000013D4  43F9 00001BCF            432          LEA         hashTag, A1           ; Display space
000013DA  103C 000E                433          MOVE.B      #14, D0             ; command for trap call to display message
000013DE  4E4F                     434          TRAP        #15                 ; trap call
000013E0                           435          
000013E0  103C 0003                436          MOVE.B      #3, D0
000013E4  4E4F                     437          TRAP        #15
000013E6                           438          
000013E6  43F9 00001BD3            439          LEA         comma, A1           ; Display space
000013EC  103C 000E                440          MOVE.B      #14, D0             ; command for trap call to display message
000013F0  4E4F                     441          TRAP        #15                 ; trap call
000013F2                           442          
000013F2  4EB9 0000161E            443          JSR         printEA
000013F8                           444          
000013F8  43F9 00001BC8            445          LEA         newLine, A1           ; Display space
000013FE  103C 000E                446          MOVE.B      #14, D0             ; command for trap call to display message
00001402  4E4F                     447          TRAP        #15                 ; trap call
00001404                           448          
00001404  6000 FC06                449          BRA         LOOP
00001408                           450  
00001408  43F9 00001BE6            451  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000140E  103C 000E                452                  MOVE.B      #14, D0             ; command for trap call to display message
00001412  4E4F                     453                  TRAP        #15                 ; trap call
00001414                           454  
00001414  43F9 00001BCC            455                  LEA         space, A1           ; Display space
0000141A  103C 000E                456                  MOVE.B      #14, D0             ; command for trap call to display message
0000141E  4E4F                     457                  TRAP        #15                 ; trap call
00001420                           458                  
00001420  4242                     459                  CLR         D2
00001422  1218                     460                  MOVE.B      (A0)+, D1
00001424  1401                     461                  MOVE.B      D1,D2               ; copy data over
00001426  E642                     462                  ASR         #three,D2           ; Shift to the right to remove register
00001428  C47C 0007                463                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
0000142C                           464                  
0000142C  4243                     465                  CLR         D3                  ; Clear D3 so we can move D1 in
0000142E  1601                     466                  MOVE.B      D1,D3               ; Move othr byte in
00001430  C67C 0007                467                  AND         #seven,D3           ; Set everything besides register to 0
00001434                           468                  
00001434  4241                     469                  CLR         D1
00001436  3218                     470                  MOVE.W      (A0)+, D1
00001438                           471                 
00001438                           472                  
00001438  43F9 00001BCF            473                  LEA         hashTag, A1           ; Display space
0000143E  103C 000E                474                  MOVE.B      #14, D0             ; command for trap call to display message
00001442  4E4F                     475                  TRAP        #15                 ; trap call
00001444                           476          
00001444  103C 0003                477                  MOVE.B      #3, D0
00001448  4E4F                     478                  TRAP        #15
0000144A                           479          
0000144A  43F9 00001BD3            480                  LEA         comma, A1           ; Display space
00001450  103C 000E                481                  MOVE.B      #14, D0             ; command for trap call to display message
00001454  4E4F                     482                  TRAP        #15                 ; trap call
00001456                           483                  
00001456  4EB9 0000161E            484                  JSR         printEA
0000145C                           485          
0000145C  43F9 00001BC8            486                  LEA         newLine, A1           ; Display space
00001462  103C 000E                487                  MOVE.B      #14, D0             ; command for trap call to display message
00001466  4E4F                     488                  TRAP        #15                 ; trap call
00001468                           489                  
00001468                           490                  
00001468  6000 FBA2                491                  BRA         LOOP                
0000146C                           492          
0000146C                           493  opDynBCLR       
0000146C  4241                     494                  CLR         D1
0000146E  1218                     495                  MOVE.B      (A0)+,D1            ; Copy second byte in
00001470  1601                     496                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
00001472  E243                     497                  ASR         #one,D3             ; Shift register over to the end
00001474  C67C 0007                498                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
00001478                           499                  
00001478  1401                     500                  MOVE.B      D1,D2
0000147A  EC42                     501                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
0000147C  B47C 0002                502                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
00001480  6600 0742                503                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
00001484                           504  
00001484                           505                  
00001484  43F9 00001BE6            506                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
0000148A  103C 000E                507                  MOVE.B      #14, D0             ; command for trap call to display message
0000148E  4E4F                     508                  TRAP        #15                 ; trap call  
00001490                           509                  
00001490  43F9 00001BCC            510                  LEA         space, A1           ; Display space
00001496  103C 000E                511                  MOVE.B      #14, D0             ; command for trap call to display message
0000149A  4E4F                     512                  TRAP        #15                 ; trap call
0000149C                           513                  
0000149C  143C 0000                514                  MOVE.B      #zero,D2                
000014A0  4EB9 0000161E            515                  JSR         printEA
000014A6                           516                  
000014A6  43F9 00001BD3            517                  LEA         comma, A1           ; Display space
000014AC  103C 000E                518                  MOVE.B      #14, D0             ; command for trap call to display message
000014B0  4E4F                     519                  TRAP        #15                 ; trap call
000014B2                           520                  
000014B2  4242                     521                  CLR         D2
000014B4  1401                     522                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000014B6  E642                     523                  ASR         #three,D2           ; Remove/shift the register out
000014B8  C47C 0007                524                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000014BC                           525                  
000014BC  4243                     526                  CLR         D3                  ; Clearing D3 to avoid mashing data
000014BE  1601                     527                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000014C0  C67C 0007                528                  AND         #seven,D3           ; Change all bits except for register bits to 0
000014C4                           529                  
000014C4                           530  
000014C4  4EB9 0000161E            531                  JSR         printEA
000014CA                           532          
000014CA  43F9 00001BC8            533                  LEA         newLine, A1           ; Display space
000014D0  103C 000E                534                  MOVE.B      #14, D0             ; command for trap call to display message
000014D4  4E4F                     535                  TRAP        #15                 ; trap call            
000014D6                           536  
000014D6                           537  
000014D6  6000 FB34                538                  BRA         LOOP                ; go back to the loop
000014DA                           539   
000014DA  43F9 00001BEB            540  opMOVEB LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
000014E0  103C 000E                541          MOVE.B      #14, D0             ; command for trap call to display message
000014E4  4E4F                     542          TRAP        #15                 ; trap call
000014E6  43F9 00001C5F            543          LEA         dispByte, A1        ; display byte
000014EC  103C 000E                544          MOVE.B      #14, D0             ; command for trap call to display message
000014F0  4E4F                     545          TRAP        #15                 ; trap call
000014F2  43F9 00001BCC            546          LEA         space, A1           ; create spaces
000014F8  103C 000E                547          MOVE.B      #14, D0             ; command for trap call to display message
000014FC  4E4F                     548          TRAP        #15                 ; trap call
000014FE                           549          
000014FE                           550          
000014FE  4245                     551          CLR         D5                  ; Clear D5
00001500  1A01                     552          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001502  E245                     553          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001504  CA7C 0007                554          AND         #seven,D5
00001508                           555          
00001508  4244                     556          CLR         D4                  ; Clear out D4
0000150A  1801                     557          MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000150C  C87C 0001                558          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001510                           559          
00001510  4241                     560          CLR          D1
00001512  4242                     561          CLR          D2
00001514  1218                     562          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001516  1401                     563          MOVE.B      D1,D2
00001518  EC42                     564          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000151A  D842                     565          ADD         D2,D4               ; Adds the remaining bits to D4
0000151C                           566          
0000151C  4242                     567          CLR         D2
0000151E  1401                     568          MOVE.B      D1,D2               ; Copy new byte over to D2
00001520  E642                     569          ASR         #three,D2           ; Shift source register out
00001522  C47C 0007                570          AND         #seven,D2           ; Set everything to 0 except for the mode
00001526                           571          
00001526  4243                     572          CLR         D3
00001528  1601                     573          MOVE.B      D1,D3
0000152A  C67C 0007                574          AND         #seven,D3
0000152E                           575          
0000152E  4EB9 0000161E            576          JSR         printEA
00001534                           577          
00001534  43F9 00001BD3            578          LEA         comma, A1           ; Display space
0000153A  103C 000E                579          MOVE.B      #14, D0             ; command for trap call to display message
0000153E  4E4F                     580          TRAP        #15                 ; trap call
00001540                           581          
00001540  4242                     582          CLR         D2
00001542  4243                     583          CLR         D3
00001544  1404                     584          MOVE.B      D4,D2
00001546  1605                     585          MOVE.B      D5,D3
00001548                           586          
00001548  4EB9 0000161E            587          JSR         printEA
0000154E                           588          
0000154E                           589          
0000154E  43F9 00001BC8            590          LEA         newLine, A1           ; Display space
00001554  103C 000E                591          MOVE.B      #14, D0             ; command for trap call to display message
00001558  4E4F                     592          TRAP        #15                 ; trap call            
0000155A                           593  
0000155A                           594  
0000155A  6000 FAB0                595          BRA         LOOP                ; go back to the loop
0000155E                           596          
0000155E                           597  
0000155E  43F9 00001BF6            598  opNEG   LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001564  103C 000E                599          MOVE.B      #14, D0             ; command for trap call to display message
00001568  4E4F                     600          TRAP        #15                 ; trap call
0000156A                           601  
0000156A                           602  opRTSJSR
0000156A                           603  
0000156A                           604  opMOVEMLEA
0000156A                           605  
0000156A  43F9 00001C0C            606  opSUBQ  LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
00001570  103C 000E                607          MOVE.B      #14, D0             ; command for trap call to display message
00001574  4E4F                     608          TRAP        #15                 ; trap call
00001576                           609  
00001576  43F9 00001C11            610  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
0000157C  103C 000E                611          MOVE.B      #14, D0             ; command for trap call to display message
00001580  4E4F                     612          TRAP        #15                 ; trap call
00001582  43F9 00001BCC            613          LEA         space, A1           ; create spaces
00001588  103C 000E                614          MOVE.B      #14, D0             ; command for trap call to display message
0000158C  4E4F                     615          TRAP        #15                 ; trap call
0000158E                           616  
0000158E  43F9 00001C15            617  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001594  103C 000E                618          MOVE.B      #14, D0             ; command for trap call to display message
00001598  4E4F                     619          TRAP        #15                 ; trap call
0000159A                           620  
0000159A  43F9 00001C19            621  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
000015A0  103C 000E                622          MOVE.B      #14, D0             ; command for trap call to display message
000015A4  4E4F                     623          TRAP        #15                 ; trap call
000015A6                           624  
000015A6  43F9 00001C1D            625  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
000015AC  103C 000E                626          MOVE.B      #14, D0             ; command for trap call to display message
000015B0  4E4F                     627          TRAP        #15                 ; trap call
000015B2                           628  
000015B2  43F9 00001C21            629  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
000015B8  103C 000E                630          MOVE.B      #14, D0             ; command for trap call to display message
000015BC  4E4F                     631          TRAP        #15                 ; trap call
000015BE                           632  
000015BE  43F9 00001C2D            633  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
000015C4  103C 000E                634          MOVE.B      #14, D0             ; command for trap call to display message
000015C8  4E4F                     635          TRAP        #15                 ; trap call
000015CA                           636  
000015CA  43F9 00001C39            637  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
000015D0  103C 000E                638          MOVE.B      #14, D0             ; command for trap call to display message
000015D4  4E4F                     639          TRAP        #15                 ; trap call
000015D6                           640  
000015D6  43F9 00001C53            641  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000015DC  103C 000E                642          MOVE.B      #14, D0             ; command for trap call to display message
000015E0  4E4F                     643          TRAP        #15                 ; trap call
000015E2                           644  
000015E2  43F9 00001C4F            645  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000015E8  103C 000E                646          MOVE.B      #14, D0             ; command for trap call to display message
000015EC  4E4F                     647          TRAP        #15                 ; trap call
000015EE                           648  
000015EE  43F9 00001C4B            649  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
000015F4  103C 000E                650          MOVE.B      #14, D0             ; command for trap call to display message
000015F8  4E4F                     651          TRAP        #15                 ; trap call
000015FA                           652  
000015FA  43F9 00001C47            653  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001600  103C 000E                654          MOVE.B      #14, D0             ; command for trap call to display message
00001604  4E4F                     655          TRAP        #15                 ; trap call
00001606                           656  
00001606  43F9 00001C5B            657  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
0000160C  103C 000E                658          MOVE.B      #14, D0             ; command for trap call to display message
00001610  4E4F                     659          TRAP        #15                 ; trap call
00001612                           660  
00001612  43F9 00001C57            661  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001618  103C 000E                662          MOVE.B      #14, D0             ; command for trap call to display message
0000161C  4E4F                     663          TRAP        #15                 ; trap call
0000161E                           664  
0000161E                           665  
0000161E                           666  ***********************************************************************************************************
0000161E                           667  *
0000161E                           668  *                                           EA Print Check
0000161E                           669  *
0000161E                           670  ***********************************************************************************************************
0000161E  48E7 FFFE                671  printEA     MOVEM.L  D0-D7/A0-A6, -(SP)
00001622                           672  
00001622  B43C 0000                673              CMP.B       #zero, D2
00001626  6700 0026                674              BEQ         pDataReg
0000162A  B43C 0001                675              CMP.B       #one, D2
0000162E  6700 00DE                676              BEQ         pAddrReg
00001632  B43C 0002                677              CMP.B       #two, D2
00001636  6700 0196                678              BEQ         pAddrDir
0000163A  B43C 0003                679              CMP.B       #three, D2
0000163E  6700 02BA                680              BEQ         pAddrPost
00001642  B43C 0004                681              CMP.B       #four, D2
00001646  6700 043E                682              BEQ         pAddrDec
0000164A  6000 0572                683              BRA         invalid
0000164E                           684  
0000164E                           685  ***********************************************************************************************************
0000164E                           686  * Data Register        
0000164E  B63C 0000                687  pDataReg    CMP.B   #zero,D3
00001652  6700 003A                688              BEQ     displayD0
00001656  B63C 0001                689              CMP.B   #one,D3
0000165A  6700 0042                690              BEQ     displayD1
0000165E  B63C 0002                691              CMP.B   #two,D3
00001662  6700 004A                692              BEQ     displayD2
00001666  B63C 0003                693              CMP.B   #three,D3
0000166A  6700 0052                694              BEQ     displayD3
0000166E  B63C 0004                695              CMP.B   #four,D3
00001672  6700 005A                696              BEQ     displayD4
00001676  B63C 0005                697              CMP.B   #five,D3
0000167A  6700 0062                698              BEQ     displayD5
0000167E  B63C 0006                699              CMP.B   #six,D3
00001682  6700 006A                700              BEQ     displayD6
00001686  B63C 0007                701              CMP.B   #seven,D3
0000168A  6700 0072                702              BEQ     displayD7
0000168E                           703              
0000168E  43F9 00001C82            704  displayD0   LEA         dispD0, A1          ; Display space
00001694  103C 000E                705              MOVE.B      #14, D0             ; command for trap call to display message
00001698  4E4F                     706              TRAP        #15                 ; trap call
0000169A  6000 0522                707              BRA         endSUB              ; go to the end of the subroutine
0000169E                           708              
0000169E  43F9 00001C85            709  displayD1   LEA         dispD1, A1          ; Display space
000016A4  103C 000E                710              MOVE.B      #14, D0             ; command for trap call to display message
000016A8  4E4F                     711              TRAP        #15                 ; trap call
000016AA  6000 0512                712              BRA         endSUB              ; go to the end of the subroutine
000016AE                           713  
000016AE  43F9 00001C88            714  displayD2   LEA         dispD2, A1          ; Display space
000016B4  103C 000E                715              MOVE.B      #14, D0             ; command for trap call to display message
000016B8  4E4F                     716              TRAP        #15                 ; trap call
000016BA  6000 0502                717              BRA         endSUB              ; go to the end of the subroutine
000016BE                           718  
000016BE  43F9 00001C8B            719  displayD3   LEA         dispD3, A1          ; Display space
000016C4  103C 000E                720              MOVE.B      #14, D0             ; command for trap call to display message
000016C8  4E4F                     721              TRAP        #15                 ; trap call
000016CA  6000 04F2                722              BRA         endSUB              ; go to the end of the subroutine
000016CE                           723  
000016CE  43F9 00001C8E            724  displayD4   LEA         dispD4, A1          ; Display space
000016D4  103C 000E                725              MOVE.B      #14, D0             ; command for trap call to display message
000016D8  4E4F                     726              TRAP        #15                 ; trap call
000016DA  6000 04E2                727              BRA         endSUB              ; go to the end of the subroutine
000016DE                           728  
000016DE  43F9 00001C91            729  displayD5   LEA         dispD5, A1          ; Display space
000016E4  103C 000E                730              MOVE.B      #14, D0             ; command for trap call to display message
000016E8  4E4F                     731              TRAP        #15                 ; trap call
000016EA  6000 04D2                732              BRA         endSUB              ; go to the end of the subroutine
000016EE                           733  
000016EE  43F9 00001C94            734  displayD6   LEA         dispD6, A1          ; Display space
000016F4  103C 000E                735              MOVE.B      #14, D0             ; command for trap call to display message
000016F8  4E4F                     736              TRAP        #15                 ; trap call
000016FA  6000 04C2                737              BRA         endSUB              ; go to the end of the subroutine
000016FE                           738  
000016FE  43F9 00001C97            739  displayD7   LEA         dispD7, A1          ; Display space
00001704  103C 000E                740              MOVE.B      #14, D0             ; command for trap call to display message
00001708  4E4F                     741              TRAP        #15                 ; trap call
0000170A  6000 04B2                742              BRA         endSUB              ; go to the end of the subroutine
0000170E                           743  ***********************************************************************************************************
0000170E                           744  * Address Register
0000170E  B63C 0000                745  pAddrReg    CMP.B   #zero,D3
00001712  6700 003A                746              BEQ     displayA0
00001716  B63C 0001                747              CMP.B   #one,D3
0000171A  6700 0042                748              BEQ     displayA1
0000171E  B63C 0002                749              CMP.B   #two,D3
00001722  6700 004A                750              BEQ     displayA2
00001726  B63C 0003                751              CMP.B   #three,D3
0000172A  6700 0052                752              BEQ     displayA3
0000172E  B63C 0004                753              CMP.B   #four,D3
00001732  6700 005A                754              BEQ     displayA4
00001736  B63C 0005                755              CMP.B   #five,D3
0000173A  6700 0062                756              BEQ     displayA5
0000173E  B63C 0006                757              CMP.B   #six,D3
00001742  6700 006A                758              BEQ     displayA6
00001746  B63C 0007                759              CMP.B   #seven,D3
0000174A  6700 0072                760              BEQ     displayA7
0000174E                           761              
0000174E  43F9 00001C68            762  displayA0   LEA         dispA0, A1          ; Display space
00001754  103C 000E                763              MOVE.B      #14, D0             ; command for trap call to display message
00001758  4E4F                     764              TRAP        #15                 ; trap call
0000175A  6000 0462                765              BRA         endSUB              ; go to the end of the subroutine
0000175E                           766              
0000175E  43F9 00001C6B            767  displayA1   LEA         dispA1, A1          ; Display space
00001764  103C 000E                768              MOVE.B      #14, D0             ; command for trap call to display message
00001768  4E4F                     769              TRAP        #15                 ; trap call
0000176A  6000 0452                770              BRA         endSUB              ; go to the end of the subroutine
0000176E                           771  
0000176E  43F9 00001C6E            772  displayA2   LEA         dispA2, A1          ; Display space
00001774  103C 000E                773              MOVE.B      #14, D0             ; command for trap call to display message
00001778  4E4F                     774              TRAP        #15                 ; trap call
0000177A  6000 0442                775              BRA         endSUB              ; go to the end of the subroutine
0000177E                           776  
0000177E  43F9 00001C71            777  displayA3   LEA         dispA3, A1          ; Display space
00001784  103C 000E                778              MOVE.B      #14, D0             ; command for trap call to display message
00001788  4E4F                     779              TRAP        #15                 ; trap call
0000178A  6000 0432                780              BRA         endSUB              ; go to the end of the subroutine
0000178E                           781  
0000178E  43F9 00001C74            782  displayA4   LEA         dispA4, A1          ; Display space
00001794  103C 000E                783              MOVE.B      #14, D0             ; command for trap call to display message
00001798  4E4F                     784              TRAP        #15                 ; trap call
0000179A  6000 0422                785              BRA         endSUB              ; go to the end of the subroutine
0000179E                           786  
0000179E  43F9 00001C77            787  displayA5   LEA         dispA5, A1          ; Display space
000017A4  103C 000E                788              MOVE.B      #14, D0             ; command for trap call to display message
000017A8  4E4F                     789              TRAP        #15                 ; trap call
000017AA  6000 0412                790              BRA         endSUB              ; go to the end of the subroutine
000017AE                           791  
000017AE  43F9 00001C7A            792  displayA6   LEA         dispA6, A1          ; Display space
000017B4  103C 000E                793              MOVE.B      #14, D0             ; command for trap call to display message
000017B8  4E4F                     794              TRAP        #15                 ; trap call
000017BA  6000 0402                795              BRA         endSUB              ; go to the end of the subroutine
000017BE                           796  
000017BE  43F9 00001C7D            797  displayA7   LEA         dispA7, A1          ; Display space
000017C4  103C 000E                798              MOVE.B      #14, D0             ; command for trap call to display message
000017C8  4E4F                     799              TRAP        #15                 ; trap call
000017CA  6000 03F2                800              BRA         endSUB              ; go to the end of the subroutine
000017CE                           801  
000017CE                           802  ***********************************************************************************************************
000017CE                           803  * Address Register Direct
000017CE                           804  
000017CE  43F9 00001BD5            805  pAddrDir    LEA         opPer, A1           ; Display space
000017D4  103C 000E                806              MOVE.B      #14, D0             ; command for trap call to display message
000017D8  4E4F                     807              TRAP        #15                 ; trap call
000017DA                           808              
000017DA  B63C 0000                809              CMP.B   #zero,D3
000017DE  6700 003A                810              BEQ     displayA0A
000017E2  B63C 0001                811              CMP.B   #one,D3
000017E6  6700 004E                812              BEQ     displayA1A
000017EA  B63C 0002                813              CMP.B   #two,D3
000017EE  6700 0062                814              BEQ     displayA2A
000017F2  B63C 0003                815              CMP.B   #three,D3
000017F6  6700 0076                816              BEQ     displayA3A
000017FA  B63C 0004                817              CMP.B   #four,D3
000017FE  6700 008A                818              BEQ     displayA4A
00001802  B63C 0005                819              CMP.B   #five,D3
00001806  6700 009E                820              BEQ     displayA5A
0000180A  B63C 0006                821              CMP.B   #six,D3
0000180E  6700 00B2                822              BEQ     displayA6A
00001812  B63C 0007                823              CMP.B   #seven,D3
00001816  6700 00C6                824              BEQ     displayA7A
0000181A                           825              
0000181A  43F9 00001C68            826  displayA0A  LEA         dispA0, A1          ; Display space
00001820  103C 000E                827              MOVE.B      #14, D0             ; command for trap call to display message
00001824  4E4F                     828              TRAP        #15                 ; trap call
00001826  43F9 00001BD7            829              LEA         clPer, A1           ; Display space
0000182C  103C 000E                830              MOVE.B      #14, D0             ; command for trap call to display message
00001830  4E4F                     831              TRAP        #15                 ; trap call
00001832  6000 038A                832              BRA         endSUB              ; go to the end of the subroutine
00001836                           833              
00001836  43F9 00001C6B            834  displayA1A  LEA         dispA1, A1          ; Display space
0000183C  103C 000E                835              MOVE.B      #14, D0             ; command for trap call to display message
00001840  4E4F                     836              TRAP        #15                 ; trap call
00001842  43F9 00001BD7            837              LEA         clPer, A1           ; Display space
00001848  103C 000E                838              MOVE.B      #14, D0             ; command for trap call to display message
0000184C  4E4F                     839              TRAP        #15                 ; trap call
0000184E  6000 036E                840              BRA         endSUB              ; go to the end of the subroutine
00001852                           841  
00001852  43F9 00001C6E            842  displayA2A  LEA         dispA2, A1          ; Display space
00001858  103C 000E                843              MOVE.B      #14, D0             ; command for trap call to display message
0000185C  4E4F                     844              TRAP        #15                 ; trap call
0000185E  43F9 00001BD7            845              LEA         clPer, A1           ; Display space
00001864  103C 000E                846              MOVE.B      #14, D0             ; command for trap call to display message
00001868  4E4F                     847              TRAP        #15                 ; trap call
0000186A  6000 0352                848              BRA         endSUB              ; go to the end of the subroutine
0000186E                           849  
0000186E  43F9 00001C71            850  displayA3A  LEA         dispA3, A1          ; Display space
00001874  103C 000E                851              MOVE.B      #14, D0             ; command for trap call to display message
00001878  4E4F                     852              TRAP        #15                 ; trap call
0000187A  43F9 00001BD7            853              LEA         clPer, A1           ; Display space
00001880  103C 000E                854              MOVE.B      #14, D0             ; command for trap call to display message
00001884  4E4F                     855              TRAP        #15                 ; trap call
00001886  6000 0336                856              BRA         endSUB              ; go to the end of the subroutine
0000188A                           857  
0000188A  43F9 00001C74            858  displayA4A  LEA         dispA4, A1          ; Display space
00001890  103C 000E                859              MOVE.B      #14, D0             ; command for trap call to display message
00001894  4E4F                     860              TRAP        #15                 ; trap call
00001896  43F9 00001BD7            861              LEA         clPer, A1           ; Display space
0000189C  103C 000E                862              MOVE.B      #14, D0             ; command for trap call to display message
000018A0  4E4F                     863              TRAP        #15                 ; trap call
000018A2  6000 031A                864              BRA         endSUB              ; go to the end of the subroutine
000018A6                           865  
000018A6  43F9 00001C77            866  displayA5A  LEA         dispA5, A1          ; Display space
000018AC  103C 000E                867              MOVE.B      #14, D0             ; command for trap call to display message
000018B0  4E4F                     868              TRAP        #15                 ; trap call
000018B2  43F9 00001BD7            869              LEA         clPer, A1           ; Display space
000018B8  103C 000E                870              MOVE.B      #14, D0             ; command for trap call to display message
000018BC  4E4F                     871              TRAP        #15                 ; trap call
000018BE  6000 02FE                872              BRA         endSUB              ; go to the end of the subroutine
000018C2                           873  
000018C2  43F9 00001C7A            874  displayA6A  LEA         dispA6, A1          ; Display space
000018C8  103C 000E                875              MOVE.B      #14, D0             ; command for trap call to display message
000018CC  4E4F                     876              TRAP        #15                 ; trap call
000018CE  43F9 00001BD7            877              LEA         clPer, A1           ; Display space
000018D4  103C 000E                878              MOVE.B      #14, D0             ; command for trap call to display message
000018D8  4E4F                     879              TRAP        #15                 ; trap call
000018DA  6000 02E2                880              BRA         endSUB              ; go to the end of the subroutine
000018DE                           881  
000018DE  43F9 00001C7D            882  displayA7A  LEA         dispA7, A1          ; Display space
000018E4  103C 000E                883              MOVE.B      #14, D0             ; command for trap call to display message
000018E8  4E4F                     884              TRAP        #15                 ; trap call
000018EA  43F9 00001BD7            885              LEA         clPer, A1           ; Display space
000018F0  103C 000E                886              MOVE.B      #14, D0             ; command for trap call to display message
000018F4  4E4F                     887              TRAP        #15                 ; trap call
000018F6  6000 02C6                888              BRA         endSUB              ; go to the end of the subroutine
000018FA                           889              
000018FA                           890  ***********************************************************************************************************
000018FA                           891  * Addr Postincrement
000018FA                           892              
000018FA  43F9 00001BD5            893  pAddrPost   LEA         opPer, A1           ; Display space
00001900  103C 000E                894              MOVE.B      #14, D0             ; command for trap call to display message
00001904  4E4F                     895              TRAP        #15                 ; trap call
00001906                           896              
00001906  B63C 0000                897              CMP.B   #zero,D3
0000190A  6700 003A                898              BEQ     displayA0P
0000190E  B63C 0001                899              CMP.B   #one,D3
00001912  6700 005A                900              BEQ     displayA1P
00001916  B63C 0002                901              CMP.B   #two,D3
0000191A  6700 007A                902              BEQ     displayA2P
0000191E  B63C 0003                903              CMP.B   #three,D3
00001922  6700 009A                904              BEQ     displayA3P
00001926  B63C 0004                905              CMP.B   #four,D3
0000192A  6700 00BA                906              BEQ     displayA4P
0000192E  B63C 0005                907              CMP.B   #five,D3
00001932  6700 00DA                908              BEQ     displayA5P
00001936  B63C 0006                909              CMP.B   #six,D3
0000193A  6700 00FA                910              BEQ     displayA6P
0000193E  B63C 0007                911              CMP.B   #seven,D3
00001942  6700 011A                912              BEQ     displayA7P
00001946                           913              
00001946  43F9 00001C68            914  displayA0P  LEA         dispA0, A1          ; Display space
0000194C  103C 000E                915              MOVE.B      #14, D0             ; command for trap call to display message
00001950  4E4F                     916              TRAP        #15                 ; trap call
00001952  43F9 00001BD7            917              LEA         clPer, A1           ; Display space
00001958  103C 000E                918              MOVE.B      #14, D0             ; command for trap call to display message
0000195C  4E4F                     919              TRAP        #15                 ; trap call
0000195E  43F9 00001BDB            920              LEA         inc, A1             ; Display space
00001964  103C 000E                921              MOVE.B      #14, D0             ; command for trap call to display message
00001968  4E4F                     922              TRAP        #15                 ; trap call
0000196A  6000 0252                923              BRA         endSUB              ; go to the end of the subroutine
0000196E                           924              
0000196E  43F9 00001C6B            925  displayA1P  LEA         dispA1, A1          ; Display space
00001974  103C 000E                926              MOVE.B      #14, D0             ; command for trap call to display message
00001978  4E4F                     927              TRAP        #15                 ; trap call
0000197A  43F9 00001BD7            928              LEA         clPer, A1           ; Display space
00001980  103C 000E                929              MOVE.B      #14, D0             ; command for trap call to display message
00001984  4E4F                     930              TRAP        #15                 ; trap call
00001986  43F9 00001BDB            931              LEA         inc, A1             ; Display space
0000198C  103C 000E                932              MOVE.B      #14, D0             ; command for trap call to display message
00001990  4E4F                     933              TRAP        #15                 ; trap call
00001992  6000 022A                934              BRA         endSUB              ; go to the end of the subroutine
00001996                           935  
00001996  43F9 00001C6E            936  displayA2P  LEA         dispA2, A1          ; Display space
0000199C  103C 000E                937              MOVE.B      #14, D0             ; command for trap call to display message
000019A0  4E4F                     938              TRAP        #15                 ; trap call
000019A2  43F9 00001BD7            939              LEA         clPer, A1           ; Display space
000019A8  103C 000E                940              MOVE.B      #14, D0             ; command for trap call to display message
000019AC  4E4F                     941              TRAP        #15                 ; trap call
000019AE  43F9 00001BDB            942              LEA         inc, A1             ; Display space
000019B4  103C 000E                943              MOVE.B      #14, D0             ; command for trap call to display message
000019B8  4E4F                     944              TRAP        #15                 ; trap call
000019BA  6000 0202                945              BRA         endSUB              ; go to the end of the subroutine
000019BE                           946  
000019BE  43F9 00001C71            947  displayA3P  LEA         dispA3, A1          ; Display space
000019C4  103C 000E                948              MOVE.B      #14, D0             ; command for trap call to display message
000019C8  4E4F                     949              TRAP        #15                 ; trap call
000019CA  43F9 00001BD7            950              LEA         clPer, A1           ; Display space
000019D0  103C 000E                951              MOVE.B      #14, D0             ; command for trap call to display message
000019D4  4E4F                     952              TRAP        #15                 ; trap call
000019D6  43F9 00001BDB            953              LEA         inc, A1             ; Display space
000019DC  103C 000E                954              MOVE.B      #14, D0             ; command for trap call to display message
000019E0  4E4F                     955              TRAP        #15                 ; trap call
000019E2  6000 01DA                956              BRA         endSUB              ; go to the end of the subroutine
000019E6                           957  
000019E6  43F9 00001C74            958  displayA4P  LEA         dispA4, A1          ; Display space
000019EC  103C 000E                959              MOVE.B      #14, D0             ; command for trap call to display message
000019F0  4E4F                     960              TRAP        #15                 ; trap call
000019F2  43F9 00001BD7            961              LEA         clPer, A1           ; Display space
000019F8  103C 000E                962              MOVE.B      #14, D0             ; command for trap call to display message
000019FC  4E4F                     963              TRAP        #15                 ; trap call
000019FE  43F9 00001BDB            964              LEA         inc, A1             ; Display space
00001A04  103C 000E                965              MOVE.B      #14, D0             ; command for trap call to display message
00001A08  4E4F                     966              TRAP        #15                 ; trap call
00001A0A  6000 01B2                967              BRA         endSUB              ; go to the end of the subroutine
00001A0E                           968  
00001A0E  43F9 00001C77            969  displayA5P  LEA         dispA5, A1          ; Display space
00001A14  103C 000E                970              MOVE.B      #14, D0             ; command for trap call to display message
00001A18  4E4F                     971              TRAP        #15                 ; trap call
00001A1A  43F9 00001BD7            972              LEA         clPer, A1           ; Display space
00001A20  103C 000E                973              MOVE.B      #14, D0             ; command for trap call to display message
00001A24  4E4F                     974              TRAP        #15                 ; trap call
00001A26  43F9 00001BDB            975              LEA         inc, A1             ; Display space
00001A2C  103C 000E                976              MOVE.B      #14, D0             ; command for trap call to display message
00001A30  4E4F                     977              TRAP        #15                 ; trap call
00001A32  6000 018A                978              BRA         endSUB              ; go to the end of the subroutine
00001A36                           979  
00001A36  43F9 00001C7A            980  displayA6P  LEA         dispA6, A1          ; Display space
00001A3C  103C 000E                981              MOVE.B      #14, D0             ; command for trap call to display message
00001A40  4E4F                     982              TRAP        #15                 ; trap call
00001A42  43F9 00001BD7            983              LEA         clPer, A1           ; Display space
00001A48  103C 000E                984              MOVE.B      #14, D0             ; command for trap call to display message
00001A4C  4E4F                     985              TRAP        #15                 ; trap call
00001A4E  43F9 00001BDB            986              LEA         inc, A1             ; Display space
00001A54  103C 000E                987              MOVE.B      #14, D0             ; command for trap call to display message
00001A58  4E4F                     988              TRAP        #15                 ; trap call
00001A5A  6000 0162                989              BRA         endSUB              ; go to the end of the subroutine
00001A5E                           990  
00001A5E  43F9 00001C7D            991  displayA7P  LEA         dispA7, A1          ; Display space
00001A64  103C 000E                992              MOVE.B      #14, D0             ; command for trap call to display message
00001A68  4E4F                     993              TRAP        #15                 ; trap call
00001A6A  43F9 00001BD7            994              LEA         clPer, A1           ; Display space
00001A70  103C 000E                995              MOVE.B      #14, D0             ; command for trap call to display message
00001A74  4E4F                     996              TRAP        #15                 ; trap call
00001A76  43F9 00001BDB            997              LEA         inc, A1             ; Display space
00001A7C  103C 000E                998              MOVE.B      #14, D0             ; command for trap call to display message
00001A80  4E4F                     999              TRAP        #15                 ; trap call
00001A82  6000 013A               1000              BRA         endSUB              ; go to the end of the subroutine
00001A86                          1001  
00001A86                          1002  ***********************************************************************************************************
00001A86                          1003  * Addr Postdecrement
00001A86                          1004  
00001A86  43F9 00001BD9           1005  pAddrDec    LEA         dec, A1             ; Display space
00001A8C  103C 000E               1006              MOVE.B      #14, D0             ; command for trap call to display message
00001A90  4E4F                    1007              TRAP        #15                 ; trap call
00001A92                          1008              
00001A92  43F9 00001BD5           1009              LEA         opPer, A1           ; Display space
00001A98  103C 000E               1010              MOVE.B      #14, D0             ; command for trap call to display message
00001A9C  4E4F                    1011              TRAP        #15                 ; trap call
00001A9E                          1012              
00001A9E  B63C 0000               1013              CMP.B   #zero,D3
00001AA2  6700 003A               1014              BEQ     displayA0D
00001AA6  B63C 0001               1015              CMP.B   #one,D3
00001AAA  6700 004E               1016              BEQ     displayA1D
00001AAE  B63C 0002               1017              CMP.B   #two,D3
00001AB2  6700 0062               1018              BEQ     displayA2D
00001AB6  B63C 0003               1019              CMP.B   #three,D3
00001ABA  6700 0076               1020              BEQ     displayA3D
00001ABE  B63C 0004               1021              CMP.B   #four,D3
00001AC2  6700 008A               1022              BEQ     displayA4D
00001AC6  B63C 0005               1023              CMP.B   #five,D3
00001ACA  6700 009E               1024              BEQ     displayA5D
00001ACE  B63C 0006               1025              CMP.B   #six,D3
00001AD2  6700 00B2               1026              BEQ     displayA6D
00001AD6  B63C 0007               1027              CMP.B   #seven,D3
00001ADA  6700 00C6               1028              BEQ     displayA7D
00001ADE                          1029              
00001ADE  43F9 00001C68           1030  displayA0D  LEA         dispA0, A1          ; Display space
00001AE4  103C 000E               1031              MOVE.B      #14, D0             ; command for trap call to display message
00001AE8  4E4F                    1032              TRAP        #15                 ; trap call
00001AEA  43F9 00001BD7           1033              LEA         clPer, A1           ; Display space
00001AF0  103C 000E               1034              MOVE.B      #14, D0             ; command for trap call to display message
00001AF4  4E4F                    1035              TRAP        #15                 ; trap call
00001AF6  6000 00C6               1036              BRA         endSUB              ; go to the end of the subroutine
00001AFA                          1037              
00001AFA  43F9 00001C6B           1038  displayA1D  LEA         dispA1, A1          ; Display space
00001B00  103C 000E               1039              MOVE.B      #14, D0             ; command for trap call to display message
00001B04  4E4F                    1040              TRAP        #15                 ; trap call
00001B06  43F9 00001BD7           1041              LEA         clPer, A1           ; Display space
00001B0C  103C 000E               1042              MOVE.B      #14, D0             ; command for trap call to display message
00001B10  4E4F                    1043              TRAP        #15                 ; trap call
00001B12  6000 00AA               1044              BRA         endSUB              ; go to the end of the subroutine
00001B16                          1045  
00001B16  43F9 00001C6E           1046  displayA2D  LEA         dispA2, A1          ; Display space
00001B1C  103C 000E               1047              MOVE.B      #14, D0             ; command for trap call to display message
00001B20  4E4F                    1048              TRAP        #15                 ; trap call
00001B22  43F9 00001BD7           1049              LEA         clPer, A1           ; Display space
00001B28  103C 000E               1050              MOVE.B      #14, D0             ; command for trap call to display message
00001B2C  4E4F                    1051              TRAP        #15                 ; trap call
00001B2E  6000 008E               1052              BRA         endSUB              ; go to the end of the subroutine
00001B32                          1053  
00001B32  43F9 00001C71           1054  displayA3D  LEA         dispA3, A1          ; Display space
00001B38  103C 000E               1055              MOVE.B      #14, D0             ; command for trap call to display message
00001B3C  4E4F                    1056              TRAP        #15                 ; trap call
00001B3E  43F9 00001BD7           1057              LEA         clPer, A1           ; Display space
00001B44  103C 000E               1058              MOVE.B      #14, D0             ; command for trap call to display message
00001B48  4E4F                    1059              TRAP        #15                 ; trap call
00001B4A  6000 0072               1060              BRA         endSUB              ; go to the end of the subroutine
00001B4E                          1061  
00001B4E  43F9 00001C74           1062  displayA4D  LEA         dispA4, A1          ; Display space
00001B54  103C 000E               1063              MOVE.B      #14, D0             ; command for trap call to display message
00001B58  4E4F                    1064              TRAP        #15                 ; trap call
00001B5A  43F9 00001BD7           1065              LEA         clPer, A1           ; Display space
00001B60  103C 000E               1066              MOVE.B      #14, D0             ; command for trap call to display message
00001B64  4E4F                    1067              TRAP        #15                 ; trap call
00001B66  6000 0056               1068              BRA         endSUB              ; go to the end of the subroutine
00001B6A                          1069  
00001B6A  43F9 00001C77           1070  displayA5D  LEA         dispA5, A1          ; Display space
00001B70  103C 000E               1071              MOVE.B      #14, D0             ; command for trap call to display message
00001B74  4E4F                    1072              TRAP        #15                 ; trap call
00001B76  43F9 00001BD7           1073              LEA         clPer, A1           ; Display space
00001B7C  103C 000E               1074              MOVE.B      #14, D0             ; command for trap call to display message
00001B80  4E4F                    1075              TRAP        #15                 ; trap call
00001B82  6000 003A               1076              BRA         endSUB              ; go to the end of the subroutine
00001B86                          1077  
00001B86  43F9 00001C7A           1078  displayA6D  LEA         dispA6, A1          ; Display space
00001B8C  103C 000E               1079              MOVE.B      #14, D0             ; command for trap call to display message
00001B90  4E4F                    1080              TRAP        #15                 ; trap call
00001B92  43F9 00001BD7           1081              LEA         clPer, A1           ; Display space
00001B98  103C 000E               1082              MOVE.B      #14, D0             ; command for trap call to display message
00001B9C  4E4F                    1083              TRAP        #15                 ; trap call
00001B9E  6000 001E               1084              BRA         endSUB              ; go to the end of the subroutine
00001BA2                          1085  
00001BA2  43F9 00001C7D           1086  displayA7D  LEA         dispA7, A1          ; Display space
00001BA8  103C 000E               1087              MOVE.B      #14, D0             ; command for trap call to display message
00001BAC  4E4F                    1088              TRAP        #15                 ; trap call
00001BAE  43F9 00001BD7           1089              LEA         clPer, A1           ; Display space
00001BB4  103C 000E               1090              MOVE.B      #14, D0             ; command for trap call to display message
00001BB8  4E4F                    1091              TRAP        #15                 ; trap call
00001BBA  6000 0002               1092              BRA         endSUB              ; go to the end of the subroutine
00001BBE                          1093  
00001BBE                          1094  
00001BBE                          1095  invalid
00001BBE                          1096  
00001BBE                          1097  endSUB
00001BBE                          1098          
00001BBE  4CDF 7FFF               1099          MOVEM.L  (SP)+, D0-D7/A0-A6
00001BC2  4E75                    1100          RTS
00001BC4                          1101  
00001BC4                          1102  ***********************************************************************************************************
00001BC4                          1103  ***********************************************************************************************************
00001BC4                          1104  ***********************************************************************************************************
00001BC4                          1105  
00001BC4                          1106  printInvalid
00001BC4                          1107  endPROG    
00001BC4                          1108  
00001BC4  FFFF FFFF               1109      SIMHALT                             ; halt simulator
00001BC8                          1110  
00001BC8= 20 0D 0A 00             1111  newLine     DC.B    ' ', CR, LF, 0
00001BCC= 20 20 00                1112  space       DC.B    '  ', 0
00001BCF                          1113  
00001BCF= 23 00                   1114  hashTag     DC.B    '#', 0
00001BD1= 24 00                   1115  dispHex     DC.B    '$', 0
00001BD3= 2C 00                   1116  comma       DC.B    ',', 0
00001BD5                          1117  
00001BD5= 28 00                   1118  opPer       DC.B    '(', 0
00001BD7= 29 00                   1119  clPer       DC.B    ')', 0
00001BD9= 2D 00                   1120  dec         DC.B    '-', 0
00001BDB= 2B 00                   1121  inc         DC.B    '+', 0
00001BDD                          1122  
00001BDD= 4F 52 49 00             1123  ORImatch    DC.B    'ORI', 0
00001BE1= 43 4D 50 49 00          1124  CMPImatch   DC.B    'CMPI', 0
00001BE6= 42 43 4C 52 00          1125  BCLRmatch   DC.B    'BCLR', 0
00001BEB= 4D 4F 56 45 00          1126  MOVEmatch   DC.B    'MOVE', 0
00001BF0= 4D 4F 56 45 41 00       1127  MOVEAmatch  DC.B    'MOVEA', 0
00001BF6= 4E 45 47 00             1128  NEGmatch    DC.B    'NEG', 0
00001BFA= 52 54 53 00             1129  RTSmatch    DC.B    'RTS', 0
00001BFE= 4A 53 52 00             1130  JSRmatch    DC.B    'JSR', 0
00001C02= 4D 4F 56 45 4D 00       1131  MOVEMmatch  DC.B    'MOVEM', 0
00001C08= 4C 45 41 00             1132  LEAmatch    DC.B    'LEA', 0
00001C0C= 53 55 42 51 00          1133  SUBQmatch   DC.B    'SUBQ', 0
00001C11= 42 52 41 00             1134  BRAmatch    DC.B    'BRA', 0
00001C15= 42 43 53 00             1135  BCSmatch    DC.B    'BCS', 0
00001C19= 42 56 43 00             1136  BVCmatch    DC.B    'BVC', 0
00001C1D= 42 47 45 00             1137  BGEmatch    DC.B    'BGE', 0
00001C21= 42 4C 54 00             1138  BLTmatch    DC.B    'BLT', 0
00001C25= 44 49 56 53 00          1139  DIVSmatch   DC.B    'DIVS', 0
00001C2A= 4F 52 00                1140  ORmatch     DC.B    'OR', 0
00001C2D= 53 55 42 00             1141  SUBmatch    DC.B    'SUB', 0
00001C31= 45 4F 52 00             1142  EORmatch    DC.B    'EOR', 0
00001C35= 43 4D 50 00             1143  CMPmatch    DC.B    'CMP', 0
00001C39= 4D 55 4C 53 00          1144  MULSmatch   DC.B    'MULS', 0
00001C3E= 41 44 44 00             1145  ADDmatch    DC.B    'ADD', 0
00001C42= 41 44 44 41 00          1146  ADDAmatch   DC.B    'ADDA', 0
00001C47= 4C 53 52 00             1147  LSRmatch    DC.B    'LSR', 0
00001C4B= 4C 53 4C 00             1148  LSLmatch    DC.B    'LSL', 0
00001C4F= 41 53 52 00             1149  ASRmatch    DC.B    'ASR', 0
00001C53= 41 53 4C 00             1150  ASLmatch    DC.B    'ASL', 0
00001C57= 52 4F 52 00             1151  RORmatch    DC.B    'ROR', 0
00001C5B= 52 4F 4C 00             1152  ROLmatch    DC.B    'ROL', 0
00001C5F                          1153   
00001C5F= 2E 42 00                1154  dispByte    DC.B    '.B', 0
00001C62= 2E 57 00                1155  dispWord    DC.B    '.W', 0
00001C65= 2E 4C 00                1156  dispLong    DC.B    '.L', 0
00001C68                          1157  
00001C68= 41 30 00                1158  dispA0      DC.B    'A0', 0
00001C6B= 41 31 00                1159  dispA1      DC.B    'A1', 0
00001C6E= 41 32 00                1160  dispA2      DC.B    'A2', 0
00001C71= 41 33 00                1161  dispA3      DC.B    'A3', 0
00001C74= 41 34 00                1162  dispA4      DC.B    'A4', 0
00001C77= 41 35 00                1163  dispA5      DC.B    'A5', 0
00001C7A= 41 36 00                1164  dispA6      DC.B    'A6', 0
00001C7D= 41 37 00                1165  dispA7      DC.B    'A7', 0
00001C80                          1166  
00001C80= 44 00                   1167  dispD       DC.B    'D',0
00001C82= 44 30 00                1168  dispD0      DC.B    'D0', 0
00001C85= 44 31 00                1169  dispD1      DC.B    'D1', 0
00001C88= 44 32 00                1170  dispD2      DC.B    'D2', 0
00001C8B= 44 33 00                1171  dispD3      DC.B    'D3', 0
00001C8E= 44 34 00                1172  dispD4      DC.B    'D4', 0
00001C91= 44 35 00                1173  dispD5      DC.B    'D5', 0
00001C94= 44 36 00                1174  dispD6      DC.B    'D6', 0
00001C97= 44 37 00                1175  dispD7      DC.B    'D7', 0  
00001C9A                          1176             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAMATCH           1C42
ADDMATCH            1C3E
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            1C53
ASRMATCH            1C4F
BCLRMATCH           1BE6
BCSMATCH            1C15
BGEMATCH            1C1D
BLTMATCH            1C21
BRAEIGHT            1106
BRAELEVEN           110A
BRAFIVE             10D6
BRAFOUR             10BA
BRAFOURTEEN         110E
BRAMATCH            1C11
BRANINE             1106
BRAONE              10B6
BRASIX              10DA
BRATHIRTEEN         110E
BRATHREE            10BA
BRATWELVE           110A
BRATWO              10BA
BRAZERO             1086
BVCMATCH            1C19
CLPER               1BD7
CMPIMATCH           1BE1
CMPMATCH            1C35
COMMA               1BD3
CR                  D
DEC                 1BD9
DISPA0              1C68
DISPA1              1C6B
DISPA2              1C6E
DISPA3              1C71
DISPA4              1C74
DISPA5              1C77
DISPA6              1C7A
DISPA7              1C7D
DISPBYTE            1C5F
DISPD               1C80
DISPD0              1C82
DISPD1              1C85
DISPD2              1C88
DISPD3              1C8B
DISPD4              1C8E
DISPD5              1C91
DISPD6              1C94
DISPD7              1C97
DISPHEX             1BD1
DISPLAYA0           174E
DISPLAYA0A          181A
DISPLAYA0D          1ADE
DISPLAYA0P          1946
DISPLAYA1           175E
DISPLAYA1A          1836
DISPLAYA1D          1AFA
DISPLAYA1P          196E
DISPLAYA2           176E
DISPLAYA2A          1852
DISPLAYA2D          1B16
DISPLAYA2P          1996
DISPLAYA3           177E
DISPLAYA3A          186E
DISPLAYA3D          1B32
DISPLAYA3P          19BE
DISPLAYA4           178E
DISPLAYA4A          188A
DISPLAYA4D          1B4E
DISPLAYA4P          19E6
DISPLAYA5           179E
DISPLAYA5A          18A6
DISPLAYA5D          1B6A
DISPLAYA5P          1A0E
DISPLAYA6           17AE
DISPLAYA6A          18C2
DISPLAYA6D          1B86
DISPLAYA6P          1A36
DISPLAYA7           17BE
DISPLAYA7A          18DE
DISPLAYA7D          1BA2
DISPLAYA7P          1A5E
DISPLAYD0           168E
DISPLAYD1           169E
DISPLAYD2           16AE
DISPLAYD3           16BE
DISPLAYD4           16CE
DISPLAYD5           16DE
DISPLAYD6           16EE
DISPLAYD7           16FE
DISPLONG            1C65
DISPWORD            1C62
DIVSMATCH           1C25
EIGHT               8
ELEVEN              B
ENDPROG             1BC4
ENDSUB              1BBE
EORMATCH            1C31
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             1BCF
INC                 1BDB
INVALID             1BBE
JSRMATCH            1BFE
LEAMATCH            1C08
LF                  A
LOOP                100C
LSLMATCH            1C4B
LSRMATCH            1C47
MOVEAMATCH          1BF0
MOVEMATCH           1BEB
MOVEMMATCH          1C02
MULSMATCH           1C39
NEGMATCH            1BF6
NEWLINE             1BC8
NINE                9
ONE                 1
OPASL               15D6
OPASR               15E2
OPBCLR              1408
OPBCS               158E
OPBGE               15A6
OPBLT               15B2
OPBRA               1576
OPBVC               159A
OPCMPI              1296
OPCMPIB             12E2
OPCMPIL             13A6
OPCMPIW             1344
OPDYNBCLR           146C
OPLSL               15EE
OPLSR               15FA
OPMOVEB             14DA
OPMOVEMLEA          156A
OPMULS              15CA
OPNEG               155E
OPORI               1142
OPORIB              1170
OPORIL              1234
OPORIW              11D2
OPPER               1BD5
OPROL               1606
OPROR               1612
OPRTSJSR            156A
OPSUB               15BE
OPSUBQ              156A
ORIMATCH            1BDD
ORMATCH             1C2A
PADDRDEC            1A86
PADDRDIR            17CE
PADDRPOST           18FA
PADDRREG            170E
PDATAREG            164E
PRINTEA             161E
PRINTINVALID        1BC4
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
ROLMATCH            1C5B
RORMATCH            1C57
RTSMATCH            1BFA
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               1BCC
START               1000
SUBMATCH            1C2D
SUBQMATCH           1C0C
TEST_END            2009
TEST_START          2000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
