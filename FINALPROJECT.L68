00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 2014-12-09 19:17:51

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Motorola 68k Disassembler
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =00003009                 11  test_end    EQU     $00003009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00003000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00003009             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 16FA                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 0084                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0080                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 0094                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0090                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00B4                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00C6                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00C2                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00D4                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 00D0                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 00C8                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                102          AND.B       #secNib, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 052E                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 067A                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                108          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 07E4                109          BEQ         opBCLR
000010A6  C47C 0001                110          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                111          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 083C                112          BEQ         opDynBCLR
000010B2  6000 165A                113          BRA         printInvalid
000010B6                           114          
000010B6                           115          
000010B6  6000 08A2                116  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           117  
000010BA  6000 0922                118  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BE                           119  
000010BE                           120  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BE                           121  
000010BE  6000 0A18                122          BRA         opMOVEW
000010C2                           123  
000010C2  4242                     124  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010C4  1401                     125          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010C6  C43C 000F                126          AND.B       #secNib, D2             ; set first nibble to 0
000010CA                           127   
000010CA  B43C 0004                128          CMP.B       #four, D2           ; compare second nibble to 4
000010CE  6700 0B02                129          BEQ         opNEG               ; branch to NEG method
000010D2  B43C 000E                130          CMP.B       #fourteen, D2       ; compare second nibble to E
000010D6  6700 0BE8                131          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010DA  6000 0C5A                132          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010DE                           133  
000010DE  6000 0C8A                134  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010E2                           135  
000010E2  4242                     136  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010E4  1401                     137          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010E6  C43C 000F                138          AND.B       #$0F, D2             ; set first nibble to 0
000010EA                           139   
000010EA  B43C 0000                140          CMP.B       #zero, D2           ; compare second nibble to 0
000010EE  6700 0DB8                141          BEQ         opBRA               ; branch to BRA method
000010F2  B43C 0005                142          CMP.B       #five, D2           ; compare second nibble to 5
000010F6  6700 0DE8                143          BEQ         opBCS               ; branch to BCS method
000010FA  B43C 0008                144          CMP.B       #eight, D2          ; compare second nibble to 8
000010FE  6700 0DEC                145          BEQ         opBVC               ; branch to BCS method
00001102  B43C 000C                146          CMP.B       #twelve, D2         ; compare second nibble to 12
00001106  6700 0DF0                147          BEQ         opBGE               ; branch to BGE method
0000110A  6000 0DF8                148          BRA         opBLT               ; otherwise, branch to BLT method
0000110E                           149  
0000110E                           150  braEight                                ; there are two opCodes available DIVS, or OR
0000110E  4242                     151              CLR     D2
00001110  E141                     152              ASL     #8,D1
00001112  1218                     153              MOVE.B  (A0)+,D1
00001114  3401                     154              MOVE.W  D1,D2
00001116  EC42                     155              ASR     #six,D2
00001118  C47C 0007                156              AND     #$07,D2
0000111C  B43C 0007                157              CMP.B   #seven,D2
00001120  6700 01B4                158              BEQ     opDIVS              ; If bits 8 - 6 are equal to 7, we have DIVS
00001124  6000 005E                159              BRA     opOR                ; else opcode is OR
00001128                           160  
00001128  6000 0DE6                161  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000112C                           162  
0000112C                           163  braEleven                               ; there are two opCodes available EOR, or CMP
0000112C  4242                     164              CLR     D2
0000112E  E141                     165              ASL     #8,D1
00001130  1218                     166              MOVE.B  (A0)+,D1
00001132  3401                     167              MOVE.W  D1,D2
00001134  EC42                     168              ASR     #six,D2
00001136  C47C 0007                169              AND     #$07,D2
0000113A  B43C 0003                170              CMP.B   #three,D2
0000113E  6D00 0342                171              BLT     opCMP               ; If opmode bits are less than 3, we have CMP
00001142  6000 01F0                172              BRA     opEOR               ; Else its EOR
00001146                           173              
00001146                           174  
00001146  6000 0F22                175  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
0000114A                           176    
0000114A                           177  braThirteen ; there are two opCodes available ADD, or ADDA
0000114A                           178  
0000114A  4242                     179  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
0000114C  1401                     180              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000114E  C438 000F                181              AND.B       $0F, D2             ; set first nibble to 0
00001152                           182   
00001152  B43C 0000                183              CMP.B       #zero, D2           ; compare second nibble to 0
00001156  6700 0F2A                184              BEQ         opASR               ; branch to ASR method
0000115A  B43C 0001                185              CMP.B       #one, D2            ; compare second nibble to 1
0000115E  6700 0F16                186              BEQ         opASL               ; branch to ASL method
00001162  B43C 0002                187              CMP.B       #two, D2            ; compare second nibble to 2
00001166  6700 0F32                188              BEQ         opLSR               ; branch to LSR method
0000116A  B43C 0003                189              CMP.B       #three, D2          ; compare second nibble to 3
0000116E  6700 0F1E                190              BEQ         opLSL               ; branch to LSL method
00001172  B43C 0006                191              CMP.B       #six, D2            ; compare second nibble to 6
00001176  6700 0F3A                192              BEQ         opROR               ; branch to ROR method
0000117A  6000 0F2A                193              BRA         opROL               ; otherwise, branch to ROL method
0000117E                           194              
0000117E                           195  
0000117E                           196  
0000117E                           197  ***********************************************************************************************************
0000117E                           198  *
0000117E                           199  *               BCC OPCODE
0000117E                           200  *
0000117E                           201  ***********************************************************************************************************
0000117E                           202          
0000117E  4242                     203  opBCC       CLR     D2
00001180                           204              ; Determine Condition (4 bits)
00001180                           205              ; Determine Displacement AFTER condition (8 bits)
00001180  6000 FE8A                206              BRA     LOOP
00001184                           207              
00001184                           208              
00001184                           209  ***********************************************************************************************************
00001184                           210  *
00001184                           211  *               OR OPCODE
00001184                           212  *
00001184                           213  ***********************************************************************************************************
00001184                           214  
00001184  43F9 00002774            215  opOR        LEA         ORmatch,A1
0000118A  103C 000E                216              MOVE.B      #14,D0
0000118E  4E4F                     217              TRAP        #15
00001190                           218              
00001190  4242                     219              CLR         D2
00001192                           220              ; These are for EA to Dn direction
00001192  B43C 0000                221              CMP.B       #zero,D2
00001196  6700 002A                222              BEQ         opORB               ; Byte in opmode
0000119A  B43C 0001                223              CMP.B       #one,D2
0000119E  6700 007C                224              BEQ         opORW               ; Word in opmode
000011A2  B43C 0002                225              CMP.B       #two,D2
000011A6  6700 00D0                226              BEQ         opORL               ; Long in opmode
000011AA                           227              
000011AA                           228              ; These are for Dn to EA direction
000011AA  B43C 0004                229              CMP.B       #four,D2
000011AE  6700 0012                230              BEQ         opORB               ; Byte in opmode
000011B2  B43C 0005                231              CMP.B       #five,D2
000011B6  6700 0064                232              BEQ         opORW               ; Word in opmode
000011BA  B43C 0006                233              CMP.B       #six,D2
000011BE  6700 00B8                234              BEQ         opORL               ; Long in opmode
000011C2                           235              
000011C2  43F9 000027A9            236  opORB       LEA         dispByte,A1
000011C8  103C 000E                237              MOVE.B      #14,D0
000011CC  4E4F                     238              TRAP        #15
000011CE                           239              
000011CE  43F9 00002716            240              LEA         space, A1           ; Display space
000011D4  103C 000E                241              MOVE.B      #14, D0             ; command for trap call to display message
000011D8  4E4F                     242              TRAP        #15                 ; trap call
000011DA                           243              
000011DA                           244  
000011DA  1401                     245              MOVE.B      D1,D2
000011DC  E642                     246              ASR         #3,D2
000011DE  C47C 0007                247              AND         #$07,D2
000011E2  1601                     248              MOVE.B      D1,D3
000011E4  C67C 0007                249              AND         #$07,D3
000011E8  4EB9 000020BE            250              JSR         printEA         ; Determines the "left" operand register
000011EE                           251              
000011EE  43F9 0000271D            252              LEA         comma, A1           ; Display space
000011F4  103C 000E                253              MOVE.B      #14, D0             ; command for trap call to display message
000011F8  4E4F                     254              TRAP        #15                 ; trap call
000011FA                           255              
000011FA  4242                     256              CLR         D2
000011FC  3601                     257              MOVE.W      D1,D3
000011FE  E043                     258              ASR         #eight,D3
00001200  E243                     259              ASR         #one,D3
00001202  C67C 0007                260              AND         #$07,D3
00001206  4EB9 000020BE            261              JSR         printEA
0000120C                           262              
0000120C  43F9 00002712            263              LEA         newLine,A1
00001212  103C 000E                264              MOVE.B      #14,D0
00001216  4E4F                     265              TRAP        #15
00001218                           266              
00001218  6000 FDF2                267              BRA         LOOP
0000121C                           268              
0000121C                           269              
0000121C  43F9 000027AC            270  opORW       LEA         dispWord,A1
00001222  103C 000E                271              MOVE.B      #14,D0
00001226  4E4F                     272              TRAP        #15
00001228                           273              
00001228  43F9 00002716            274              LEA         space, A1           ; Display space
0000122E  103C 000E                275              MOVE.B      #14, D0             ; command for trap call to display message
00001232  4E4F                     276              TRAP        #15                 ; trap call
00001234                           277              
00001234  4242                     278              CLR         D2
00001236  1401                     279              MOVE.B      D1,D2
00001238  E642                     280              ASR         #3,D2
0000123A  C47C 0007                281              AND         #$07,D2
0000123E  1601                     282              MOVE.B      D1,D3
00001240  C67C 0007                283              AND         #$07,D3
00001244  4EB9 000020BE            284              JSR         printEA         ; Determines the "left" operand register
0000124A                           285              
0000124A  43F9 0000271D            286              LEA         comma, A1           ; Display space
00001250  103C 000E                287              MOVE.B      #14, D0             ; command for trap call to display message
00001254  4E4F                     288              TRAP        #15                 ; trap call
00001256                           289              
00001256  4242                     290              CLR         D2
00001258  3601                     291              MOVE.W      D1,D3
0000125A  E043                     292              ASR         #eight,D3
0000125C  E243                     293              ASR         #one,D3
0000125E  C67C 0007                294              AND         #$07,D3
00001262  4EB9 000020BE            295              JSR         printEA
00001268                           296              
00001268  43F9 00002712            297              LEA         newLine,A1
0000126E  103C 000E                298              MOVE.B      #14,D0
00001272  4E4F                     299              TRAP        #15
00001274                           300              
00001274  6000 FD96                301              BRA         LOOP
00001278                           302              
00001278  43F9 000027AF            303  opORL       LEA         dispLong,A1
0000127E  103C 000E                304              MOVE.B      #14,D0
00001282  4E4F                     305              TRAP        #15
00001284                           306              
00001284  43F9 00002716            307              LEA         space, A1           ; Display space
0000128A  103C 000E                308              MOVE.B      #14, D0             ; command for trap call to display message
0000128E  4E4F                     309              TRAP        #15                 ; trap call
00001290                           310              
00001290  1401                     311              MOVE.B      D1,D2
00001292  E642                     312              ASR         #3,D2
00001294  C47C 0007                313              AND         #$07,D2
00001298  1601                     314              MOVE.B      D1,D3
0000129A  C67C 0007                315              AND         #$07,D3
0000129E  4EB9 000020BE            316              JSR         printEA         ; Determines the "left" operand register
000012A4                           317              
000012A4  43F9 0000271D            318              LEA         comma, A1           ; Display space
000012AA  103C 000E                319              MOVE.B      #14, D0             ; command for trap call to display message
000012AE  4E4F                     320              TRAP        #15                 ; trap call
000012B0                           321              
000012B0  4242                     322              CLR         D2
000012B2  3601                     323              MOVE.W      D1,D3
000012B4  E043                     324              ASR         #eight,D3
000012B6  E243                     325              ASR         #one,D3
000012B8  C67C 0007                326              AND         #$07,D3
000012BC  4EB9 000020BE            327              JSR         printEA
000012C2                           328              
000012C2  43F9 00002712            329              LEA         newLine,A1
000012C8  103C 000E                330              MOVE.B      #14,D0
000012CC  4E4F                     331              TRAP        #15
000012CE                           332              
000012CE  6000 FD3C                333              BRA         LOOP            ; trap call
000012D2                           334              
000012D2  6000 FD38                335              BRA         LOOP            ; DOUBLE CHECK THIS AGAIN AFTER MORE TESTING ALEX
000012D6                           336              
000012D6                           337  ***********************************************************************************************************
000012D6                           338  *
000012D6                           339  *               DIVS OPCODE
000012D6                           340  *
000012D6                           341  ***********************************************************************************************************
000012D6                           342  
000012D6  43F9 0000276F            343  opDIVS      LEA     DIVSmatch,A1
000012DC  103C 000E                344              MOVE.B  #14,D0
000012E0  4E4F                     345              TRAP    #15
000012E2                           346              
000012E2  43F9 00002716            347              LEA         space, A1           ; Display space
000012E8  103C 000E                348              MOVE.B      #14, D0             ; command for trap call to display message
000012EC  4E4F                     349              TRAP        #15                 ; trap call
000012EE                           350              
000012EE  1401                     351              MOVE.B      D1,D2
000012F0  E642                     352              ASR         #3,D2
000012F2  C47C 0007                353              AND         #$07,D2
000012F6  1601                     354              MOVE.B      D1,D3
000012F8  C67C 0007                355              AND         #$07,D3
000012FC  4EB9 000020BE            356              JSR         printEA
00001302                           357              
00001302  43F9 0000271D            358              LEA         comma, A1           ; Display space
00001308  103C 000E                359              MOVE.B      #14, D0             ; command for trap call to display message
0000130C  4E4F                     360              TRAP        #15                 ; trap call
0000130E                           361              
0000130E  4242                     362              CLR         D2
00001310  3601                     363              MOVE.W      D1,D3
00001312  E043                     364              ASR         #eight,D3
00001314  E243                     365              ASR         #one,D3
00001316  C67C 0007                366              AND         #$07,D3
0000131A  4EB9 000020BE            367              JSR         printEA
00001320                           368              
00001320  43F9 00002712            369              LEA         newLine,A1
00001326  103C 000E                370              MOVE.B      #14,D0
0000132A  4E4F                     371              TRAP        #15
0000132C                           372              
0000132C  6000 FCDE                373              BRA         LOOP
00001330                           374      
00001330  6000 FCDA                375              BRA     LOOP
00001334                           376              
00001334                           377  **********************************************************************************************************
00001334                           378  *
00001334                           379  *               EOR OPCODE
00001334                           380  *
00001334                           381  ***********************************************************************************************************
00001334                           382  
00001334  43F9 0000277B            383  opEOR       LEA         EORmatch,A1
0000133A  103C 000E                384              MOVE.B      #14,D0
0000133E  4E4F                     385              TRAP        #15
00001340                           386              
00001340  4242                     387              CLR         D2
00001342                           388              
00001342  1401                     389              MOVE.B      D1,D2
00001344  EE42                     390              ASR         #seven,D2           ; Move bits 7 places over to find opmode
00001346  C47C 0007                391              AND         #$07,D2
0000134A  B43C 0005                392              CMP.B       #five,D2
0000134E  6D00 0012                393              BLT         opEORB              ; Byte in opmode
00001352  B43C 0005                394              CMP.B       #five,D2
00001356  6700 006A                395              BEQ         opEORW              ; Word in opmode
0000135A  B43C 0005                396              CMP.B       #five,D2
0000135E  6E00 00C2                397              BGT         opEORL              ; Long in opmode
00001362                           398              
00001362  43F9 000027A9            399  opEORB      LEA         dispByte,A1
00001368  103C 000E                400              MOVE.B      #14,D0
0000136C  4E4F                     401              TRAP        #15
0000136E                           402              
0000136E  43F9 00002716            403              LEA         space, A1           ; Display space
00001374  103C 000E                404              MOVE.B      #14, D0             ; command for trap call to display message
00001378  4E4F                     405              TRAP        #15                 ; trap call
0000137A                           406              
0000137A  4242                     407              CLR         D2
0000137C  4243                     408              CLR         D3
0000137E  3601                     409              MOVE.W      D1,D3
00001380  E043                     410              ASR         #eight,D3
00001382  E243                     411              ASR         #one,D3
00001384  C67C 0007                412              AND         #$07,D3
00001388  4EB9 000020BE            413              JSR         printEA
0000138E                           414              
0000138E  43F9 0000271D            415              LEA         comma, A1           ; Display space
00001394  103C 000E                416              MOVE.B      #14, D0             ; command for trap call to display message
00001398  4E4F                     417              TRAP        #15                 ; trap call
0000139A                           418              
0000139A  4242                     419              CLR         D2
0000139C  4243                     420              CLR         D3
0000139E  1401                     421              MOVE.B      D1,D2
000013A0  E642                     422              ASR         #three,D2
000013A2  C47C 0007                423              AND         #seven,D2
000013A6  1601                     424              MOVE.B      D1,D3
000013A8  C67C 0007                425              AND         #$07,D3
000013AC  4EB9 000020BE            426              JSR         printEA         ; Determines the "left" operand register
000013B2                           427              
000013B2  43F9 00002712            428              LEA         newLine,A1
000013B8  103C 000E                429              MOVE.B      #14,D0
000013BC  4E4F                     430              TRAP        #15
000013BE                           431              
000013BE  6000 FC4C                432              BRA         LOOP
000013C2                           433              
000013C2                           434              
000013C2  43F9 000027AC            435  opEORW      LEA         dispWord,A1
000013C8  103C 000E                436              MOVE.B      #14,D0
000013CC  4E4F                     437              TRAP        #15
000013CE                           438              
000013CE  43F9 00002716            439              LEA         space, A1           ; Display space
000013D4  103C 000E                440              MOVE.B      #14, D0             ; command for trap call to display message
000013D8  4E4F                     441              TRAP        #15                 ; trap call
000013DA                           442              
000013DA  4242                     443              CLR         D2
000013DC  4243                     444              CLR         D3
000013DE  3601                     445              MOVE.W      D1,D3
000013E0  E043                     446              ASR         #eight,D3
000013E2  E243                     447              ASR         #one,D3
000013E4  C67C 0007                448              AND         #$07,D3
000013E8  4EB9 000020BE            449              JSR         printEA
000013EE                           450              
000013EE  43F9 0000271D            451              LEA         comma, A1           ; Display space
000013F4  103C 000E                452              MOVE.B      #14, D0             ; command for trap call to display message
000013F8  4E4F                     453              TRAP        #15                 ; trap call
000013FA                           454              
000013FA  4242                     455              CLR         D2
000013FC  4243                     456              CLR         D3
000013FE  1401                     457              MOVE.B      D1,D2
00001400  E642                     458              ASR         #three,D2
00001402  C47C 0007                459              AND         #seven,D2
00001406  1601                     460              MOVE.B      D1,D3
00001408  C67C 0007                461              AND         #$07,D3
0000140C  4EB9 000020BE            462              JSR         printEA         ; Determines the "left" operand register
00001412                           463              
00001412  43F9 00002712            464              LEA         newLine,A1
00001418  103C 000E                465              MOVE.B      #14,D0
0000141C  4E4F                     466              TRAP        #15
0000141E                           467              
0000141E  6000 FBEC                468              BRA         LOOP
00001422                           469              
00001422  43F9 000027AF            470  opEORL      LEA         dispLong,A1
00001428  103C 000E                471              MOVE.B      #14,D0
0000142C  4E4F                     472              TRAP        #15
0000142E                           473              
0000142E  43F9 00002716            474              LEA         space, A1           ; Display space
00001434  103C 000E                475              MOVE.B      #14, D0             ; command for trap call to display message
00001438  4E4F                     476              TRAP        #15                 ; trap call
0000143A                           477              
0000143A  4242                     478              CLR         D2
0000143C  4243                     479              CLR         D3
0000143E  3601                     480              MOVE.W      D1,D3
00001440  E043                     481              ASR         #eight,D3
00001442  E243                     482              ASR         #one,D3
00001444  C67C 0007                483              AND         #$07,D3
00001448  4EB9 000020BE            484              JSR         printEA
0000144E                           485              
0000144E  43F9 0000271D            486              LEA         comma, A1           ; Display space
00001454  103C 000E                487              MOVE.B      #14, D0             ; command for trap call to display message
00001458  4E4F                     488              TRAP        #15                 ; trap call
0000145A                           489              
0000145A  4242                     490              CLR         D2
0000145C  4243                     491              CLR         D3
0000145E  1401                     492              MOVE.B      D1,D2
00001460  E642                     493              ASR         #three,D2
00001462  C47C 0007                494              AND         #seven,D2
00001466  1601                     495              MOVE.B      D1,D3
00001468  C67C 0007                496              AND         #$07,D3
0000146C  4EB9 000020BE            497              JSR         printEA         ; Determines the "left" operand register
00001472                           498              
00001472  43F9 00002712            499              LEA         newLine,A1
00001478  103C 000E                500              MOVE.B      #14,D0
0000147C  4E4F                     501              TRAP        #15
0000147E                           502              
0000147E  6000 FB8C                503              BRA         LOOP            ; trap call
00001482                           504              
00001482                           505  
00001482                           506  ***********************************************************************************************************
00001482                           507  *
00001482                           508  *               CMP OPCODE
00001482                           509  *
00001482                           510  ***********************************************************************************************************
00001482                           511  
00001482  43F9 0000277F            512  opCMP       LEA         CMPmatch,A1
00001488  103C 000E                513              MOVE.B      #14,D0
0000148C  4E4F                     514              TRAP        #15
0000148E                           515              
0000148E  4242                     516              CLR         D2
00001490                           517              
00001490  1401                     518              MOVE.B      D1,D2
00001492  EC42                     519              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001494  C47C 0007                520              AND         #$07,D2
00001498  B43C 0000                521              CMP.B       #zero,D2
0000149C  6700 0016                522              BEQ         opCMPB              ; Byte in opmode
000014A0  B43C 0001                523              CMP.B       #one,D2
000014A4  6700 0068                524              BEQ         opCMPW              ; Word in opmode
000014A8  B43C 0002                525              CMP.B       #two,D2
000014AC  6700 00BA                526              BEQ         opCMPL              ; Long in opmode
000014B0                           527              
000014B0  6000 125C                528              BRA         printInvalid        ; Incorrect input
000014B4                           529  
000014B4  43F9 000027A9            530  opCMPB      LEA         dispByte,A1
000014BA  103C 000E                531              MOVE.B      #14,D0
000014BE  4E4F                     532              TRAP        #15
000014C0                           533              
000014C0  43F9 00002716            534              LEA         space, A1           ; Display space
000014C6  103C 000E                535              MOVE.B      #14, D0             ; command for trap call to display message
000014CA  4E4F                     536              TRAP        #15                 ; trap call
000014CC                           537              
000014CC  1401                     538              MOVE.B      D1,D2
000014CE  E642                     539              ASR         #3,D2
000014D0  C47C 0007                540              AND         #$07,D2
000014D4  1601                     541              MOVE.B      D1,D3
000014D6  C67C 0007                542              AND         #$07,D3
000014DA  4EB9 000020BE            543              JSR         printEA         ; Determines the "left" operand register
000014E0                           544              
000014E0  43F9 0000271D            545              LEA         comma, A1           ; Display space
000014E6  103C 000E                546              MOVE.B      #14, D0             ; command for trap call to display message
000014EA  4E4F                     547              TRAP        #15                 ; trap call
000014EC                           548              
000014EC  4242                     549              CLR         D2
000014EE  3601                     550              MOVE.W      D1,D3
000014F0  E043                     551              ASR         #eight,D3
000014F2  E243                     552              ASR         #one,D3
000014F4  C67C 0007                553              AND         #$07,D3
000014F8  4EB9 000020BE            554              JSR         printEA
000014FE                           555              
000014FE  43F9 00002712            556              LEA         newLine,A1
00001504  103C 000E                557              MOVE.B      #14,D0
00001508  4E4F                     558              TRAP        #15
0000150A                           559              
0000150A  6000 FB00                560              BRA         LOOP
0000150E                           561              
0000150E  43F9 000027AC            562  opCMPW      LEA         dispWord,A1
00001514  103C 000E                563              MOVE.B      #14,D0
00001518  4E4F                     564              TRAP        #15
0000151A                           565              
0000151A  43F9 00002716            566              LEA         space, A1           ; Display space
00001520  103C 000E                567              MOVE.B      #14, D0             ; command for trap call to display message
00001524  4E4F                     568              TRAP        #15                 ; trap call
00001526                           569              
00001526  1401                     570              MOVE.B      D1,D2
00001528  E642                     571              ASR         #3,D2
0000152A  C47C 0007                572              AND         #$07,D2
0000152E  1601                     573              MOVE.B      D1,D3
00001530  C67C 0007                574              AND         #$07,D3
00001534  4EB9 000020BE            575              JSR         printEA         ; Determines the "left" operand register
0000153A                           576              
0000153A  43F9 0000271D            577              LEA         comma, A1           ; Display space
00001540  103C 000E                578              MOVE.B      #14, D0             ; command for trap call to display message
00001544  4E4F                     579              TRAP        #15                 ; trap call
00001546                           580              
00001546  4242                     581              CLR         D2
00001548  3601                     582              MOVE.W      D1,D3
0000154A  E043                     583              ASR         #eight,D3
0000154C  E243                     584              ASR         #one,D3
0000154E  C67C 0007                585              AND         #$07,D3
00001552  4EB9 000020BE            586              JSR         printEA
00001558                           587              
00001558  43F9 00002712            588              LEA         newLine,A1
0000155E  103C 000E                589              MOVE.B      #14,D0
00001562  4E4F                     590              TRAP        #15
00001564                           591              
00001564  6000 FAA6                592              BRA         LOOP
00001568                           593  
00001568  43F9 000027AF            594  opCMPL      LEA         dispLong,A1
0000156E  103C 000E                595              MOVE.B      #14,D0
00001572  4E4F                     596              TRAP        #15
00001574                           597              
00001574  43F9 00002716            598              LEA         space, A1           ; Display space
0000157A  103C 000E                599              MOVE.B      #14, D0             ; command for trap call to display message
0000157E  4E4F                     600              TRAP        #15                 ; trap call
00001580                           601              
00001580  1401                     602              MOVE.B      D1,D2
00001582  E642                     603              ASR         #3,D2
00001584  C47C 0007                604              AND         #$07,D2
00001588  1601                     605              MOVE.B      D1,D3
0000158A  C67C 0007                606              AND         #$07,D3
0000158E  4EB9 000020BE            607              JSR         printEA         ; Determines the "left" operand register
00001594                           608              
00001594  43F9 0000271D            609              LEA         comma, A1           ; Display space
0000159A  103C 000E                610              MOVE.B      #14, D0             ; command for trap call to display message
0000159E  4E4F                     611              TRAP        #15                 ; trap call
000015A0                           612              
000015A0  4242                     613              CLR         D2
000015A2  3601                     614              MOVE.W      D1,D3
000015A4  E043                     615              ASR         #eight,D3
000015A6  E243                     616              ASR         #one,D3
000015A8  C67C 0007                617              AND         #$07,D3
000015AC  4EB9 000020BE            618              JSR         printEA
000015B2                           619              
000015B2  43F9 00002712            620              LEA         newLine,A1
000015B8  103C 000E                621              MOVE.B      #14,D0
000015BC  4E4F                     622              TRAP        #15
000015BE                           623              
000015BE  6000 FA4C                624              BRA         LOOP
000015C2                           625              
000015C2                           626  ***********************************************************************************************************
000015C2                           627  *
000015C2                           628  *               ORI OPCODE
000015C2                           629  *
000015C2                           630  ***********************************************************************************************************
000015C2                           631  
000015C2  43F9 00002727            632  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
000015C8  103C 000E                633          MOVE.B      #14, D0             ; command for trap call to display message
000015CC  4E4F                     634          TRAP        #15                 ; trap call
000015CE                           635          
000015CE  1218                     636          MOVE.B      (A0)+, D1
000015D0  1401                     637          MOVE.B      D1,D2               ; copy data over
000015D2  EC42                     638          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000015D4  B43C 0000                639          CMP.B       #zero,D2
000015D8  6700 0016                640          BEQ         opORIB
000015DC  B43C 0001                641          CMP.B       #one,D2
000015E0  6700 0070                642          BEQ         opORIW
000015E4  B43C 0002                643          CMP.B       #two,D2
000015E8  6700 00CA                644          BEQ         opORIL
000015EC                           645          
000015EC  6000 1120                646          BRA         printInvalid
000015F0                           647          
000015F0  43F9 000027A9            648  opORIB  LEA         dispByte, A1        ; Display byte
000015F6  103C 000E                649          MOVE.B      #14, D0             ; command for trap call to display message
000015FA  4E4F                     650          TRAP        #15                 ; trap call
000015FC                           651          
000015FC  43F9 00002716            652          LEA         space, A1           ; Display space
00001602  103C 000E                653          MOVE.B      #14, D0             ; command for trap call to display message
00001606  4E4F                     654          TRAP        #15                 ; trap call
00001608                           655          
00001608  4242                     656          CLR         D2
0000160A  1401                     657          MOVE.B      D1,D2
0000160C  E642                     658          ASR         #three,D2
0000160E  C47C 0007                659          AND         #seven,D2
00001612  4243                     660          CLR         D3        
00001614  1601                     661          MOVE.B      D1,D3
00001616  C67C 0007                662          AND         #seven,D3
0000161A                           663          
0000161A  4241                     664          CLR         D1
0000161C  3218                     665          MOVE.W      (A0)+, D1
0000161E                           666          
0000161E  43F9 00002719            667          LEA         hashTag, A1           ; Display space
00001624  103C 000E                668          MOVE.B      #14, D0             ; command for trap call to display message
00001628  4E4F                     669          TRAP        #15                 ; trap call
0000162A                           670          
0000162A  103C 0003                671          MOVE.B      #3, D0
0000162E  4E4F                     672          TRAP        #15
00001630                           673          
00001630  43F9 0000271D            674          LEA         comma, A1           ; Display space
00001636  103C 000E                675          MOVE.B      #14, D0             ; command for trap call to display message
0000163A  4E4F                     676          TRAP        #15                 ; trap call
0000163C                           677          
0000163C  4EB9 000020BE            678          JSR         printEA
00001642                           679          
00001642  43F9 00002712            680          LEA         newLine, A1           ; Display space
00001648  103C 000E                681          MOVE.B      #14, D0             ; command for trap call to display message
0000164C  4E4F                     682          TRAP        #15                 ; trap call
0000164E                           683          
0000164E  6000 F9BC                684          BRA         LOOP
00001652                           685          
00001652                           686          
00001652  43F9 000027AC            687  opORIW  LEA         dispWord, A1        ; Display byte
00001658  103C 000E                688          MOVE.B      #14, D0             ; command for trap call to display message
0000165C  4E4F                     689          TRAP        #15                 ; trap call
0000165E                           690          
0000165E  43F9 00002716            691          LEA         space, A1           ; Display space
00001664  103C 000E                692          MOVE.B      #14, D0             ; command for trap call to display message
00001668  4E4F                     693          TRAP        #15                 ; trap call
0000166A                           694          
0000166A  4242                     695          CLR         D2
0000166C  1401                     696          MOVE.B      D1,D2
0000166E  E642                     697          ASR         #three,D2
00001670  C47C 0007                698          AND         #seven,D2
00001674  4243                     699          CLR         D3        
00001676  1601                     700          MOVE.B      D1,D3
00001678  C67C 0007                701          AND         #seven,D3
0000167C                           702          
0000167C  4241                     703          CLR         D1
0000167E  3218                     704          MOVE.W      (A0)+, D1
00001680                           705          
00001680  43F9 00002719            706          LEA         hashTag, A1           ; Display space
00001686  103C 000E                707          MOVE.B      #14, D0             ; command for trap call to display message
0000168A  4E4F                     708          TRAP        #15                 ; trap call
0000168C                           709          
0000168C  103C 0003                710          MOVE.B      #3, D0
00001690  4E4F                     711          TRAP        #15
00001692                           712          
00001692  43F9 0000271D            713          LEA         comma, A1           ; Display space
00001698  103C 000E                714          MOVE.B      #14, D0             ; command for trap call to display message
0000169C  4E4F                     715          TRAP        #15                 ; trap call
0000169E                           716          
0000169E  4EB9 000020BE            717          JSR         printEA
000016A4                           718          
000016A4  43F9 00002712            719          LEA         newLine, A1           ; Display space
000016AA  103C 000E                720          MOVE.B      #14, D0             ; command for trap call to display message
000016AE  4E4F                     721          TRAP        #15                 ; trap call
000016B0                           722          
000016B0  6000 F95A                723          BRA         LOOP
000016B4                           724       
000016B4  43F9 000027AF            725  opORIL  LEA         dispLong, A1        ; Display byte
000016BA  103C 000E                726          MOVE.B      #14, D0             ; command for trap call to display message
000016BE  4E4F                     727          TRAP        #15                 ; trap call
000016C0                           728          
000016C0  43F9 00002716            729          LEA         space, A1           ; Display space
000016C6  103C 000E                730          MOVE.B      #14, D0             ; command for trap call to display message
000016CA  4E4F                     731          TRAP        #15                 ; trap call
000016CC                           732          
000016CC  4242                     733          CLR         D2
000016CE  1401                     734          MOVE.B      D1,D2
000016D0  E642                     735          ASR         #three,D2
000016D2  C47C 0007                736          AND         #seven,D2
000016D6  4243                     737          CLR         D3        
000016D8  1601                     738          MOVE.B      D1,D3
000016DA  C67C 0007                739          AND         #seven,D3
000016DE                           740          
000016DE  4241                     741          CLR         D1
000016E0  2218                     742          MOVE.L      (A0)+, D1
000016E2                           743          
000016E2  43F9 00002719            744          LEA         hashTag, A1           ; Display space
000016E8  103C 000E                745          MOVE.B      #14, D0             ; command for trap call to display message
000016EC  4E4F                     746          TRAP        #15                 ; trap call
000016EE                           747          
000016EE  103C 0003                748          MOVE.B      #3, D0
000016F2  4E4F                     749          TRAP        #15
000016F4                           750          
000016F4  43F9 0000271D            751          LEA         comma, A1           ; Display space
000016FA  103C 000E                752          MOVE.B      #14, D0             ; command for trap call to display message
000016FE  4E4F                     753          TRAP        #15                 ; trap call
00001700                           754          
00001700  4EB9 000020BE            755          JSR         printEA
00001706                           756          
00001706  43F9 00002712            757          LEA         newLine, A1           ; Display space
0000170C  103C 000E                758          MOVE.B      #14, D0             ; command for trap call to display message
00001710  4E4F                     759          TRAP        #15                 ; trap call
00001712                           760          
00001712  6000 F8F8                761          BRA         LOOP
00001716                           762           
00001716  43F9 0000272B            763  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000171C  103C 000E                764          MOVE.B      #14, D0             ; command for trap call to display message
00001720  4E4F                     765          TRAP        #15                 ; trap call
00001722                           766                  
00001722  1218                     767          MOVE.B      (A0)+, D1
00001724  1401                     768          MOVE.B      D1,D2               ; copy data over
00001726  EC42                     769          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001728  B43C 0000                770          CMP.B       #zero,D2
0000172C  6700 0034                771          BEQ         opCMPIB
00001730  B43C 0001                772          CMP.B       #one,D2
00001734  6700 008E                773          BEQ         opCMPIW
00001738  B43C 0002                774          CMP.B       #two,D2
0000173C  6700 00E8                775          BEQ         opCMPIL
00001740                           776          
00001740  1401                     777          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
00001742  E542                     778          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
00001744  1802                     779          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
00001746  4242                     780          CLR         D2                  ; Clear out data register
00001748  1404                     781          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
0000174A  EA42                     782          ASR         #five,D2            ; Shift the register out to get just the mode
0000174C  1802                     783          MOVE.B      D2,D4               ; Store mode into D4
0000174E  4242                     784          CLR         D2
00001750                           785          
00001750  1401                     786          MOVE.B      D1,D2               ; Getting the EA register
00001752  EB42                     787          ASL         #five,D2
00001754  1A02                     788          MOVE.B      D2,D5               ; Move just the register into D5
00001756  4242                     789          CLR         D2                  ; Clearing D2 to put data back
00001758  1405                     790          MOVE.B      D5,D2               ; Putting back the register
0000175A  EA42                     791          ASR         #five,D2            ; Shifting bits in order to read the register
0000175C  1A02                     792          MOVE.B      D2,D5               ; Store register into D5
0000175E                           793          
0000175E  6000 F8AC                794          BRA         LOOP                ; go back to the loop
00001762                           795  
00001762  43F9 000027A9            796  opCMPIB LEA         dispByte, A1        ; Display byte
00001768  103C 000E                797          MOVE.B      #14, D0             ; command for trap call to display message
0000176C  4E4F                     798          TRAP        #15                 ; trap call
0000176E                           799          
0000176E  43F9 00002716            800          LEA         space, A1           ; Display space
00001774  103C 000E                801          MOVE.B      #14, D0             ; command for trap call to display message
00001778  4E4F                     802          TRAP        #15                 ; trap call
0000177A                           803          
0000177A  4242                     804          CLR         D2
0000177C  1401                     805          MOVE.B      D1,D2
0000177E  E642                     806          ASR         #three,D2
00001780  C47C 0007                807          AND         #seven,D2
00001784  4243                     808          CLR         D3        
00001786  1601                     809          MOVE.B      D1,D3
00001788  C67C 0007                810          AND         #seven,D3
0000178C                           811          
0000178C  4241                     812          CLR         D1
0000178E  3218                     813          MOVE.W      (A0)+, D1
00001790                           814          
00001790  43F9 00002719            815          LEA         hashTag, A1           ; Display space
00001796  103C 000E                816          MOVE.B      #14, D0             ; command for trap call to display message
0000179A  4E4F                     817          TRAP        #15                 ; trap call
0000179C                           818          
0000179C  103C 0003                819          MOVE.B      #3, D0
000017A0  4E4F                     820          TRAP        #15
000017A2                           821          
000017A2  43F9 0000271D            822          LEA         comma, A1           ; Display space
000017A8  103C 000E                823          MOVE.B      #14, D0             ; command for trap call to display message
000017AC  4E4F                     824          TRAP        #15                 ; trap call
000017AE                           825          
000017AE  4EB9 000020BE            826          JSR         printEA
000017B4                           827          
000017B4  43F9 00002712            828          LEA         newLine, A1           ; Display space
000017BA  103C 000E                829          MOVE.B      #14, D0             ; command for trap call to display message
000017BE  4E4F                     830          TRAP        #15                 ; trap call
000017C0                           831  
000017C0  6000 F84A                832          BRA         LOOP
000017C4                           833  
000017C4  43F9 000027AC            834  opCMPIW LEA         dispWord, A1        ; Display byte
000017CA  103C 000E                835          MOVE.B      #14, D0             ; command for trap call to display message
000017CE  4E4F                     836          TRAP        #15                 ; trap call
000017D0                           837          
000017D0  43F9 00002716            838          LEA         space, A1           ; Display space
000017D6  103C 000E                839          MOVE.B      #14, D0             ; command for trap call to display message
000017DA  4E4F                     840          TRAP        #15                 ; trap call
000017DC                           841          
000017DC  4242                     842          CLR         D2
000017DE  1401                     843          MOVE.B      D1,D2
000017E0  E642                     844          ASR         #three,D2
000017E2  C47C 0007                845          AND         #seven,D2
000017E6  4243                     846          CLR         D3        
000017E8  1601                     847          MOVE.B      D1,D3
000017EA  C67C 0007                848          AND         #seven,D3
000017EE                           849          
000017EE  4241                     850          CLR         D1
000017F0  3218                     851          MOVE.W      (A0)+, D1
000017F2                           852          
000017F2  43F9 00002719            853          LEA         hashTag, A1           ; Display space
000017F8  103C 000E                854          MOVE.B      #14, D0             ; command for trap call to display message
000017FC  4E4F                     855          TRAP        #15                 ; trap call
000017FE                           856          
000017FE  103C 0003                857          MOVE.B      #3, D0
00001802  4E4F                     858          TRAP        #15
00001804                           859          
00001804  43F9 0000271D            860          LEA         comma, A1           ; Display space
0000180A  103C 000E                861          MOVE.B      #14, D0             ; command for trap call to display message
0000180E  4E4F                     862          TRAP        #15                 ; trap call
00001810                           863          
00001810  4EB9 000020BE            864          JSR         printEA
00001816                           865          
00001816  43F9 00002712            866          LEA         newLine, A1           ; Display space
0000181C  103C 000E                867          MOVE.B      #14, D0             ; command for trap call to display message
00001820  4E4F                     868          TRAP        #15                 ; trap call
00001822  6000 F7E8                869          BRA         LOOP
00001826                           870  
00001826  43F9 000027AF            871  opCMPIL LEA         dispLong, A1        ; Display byte
0000182C  103C 000E                872          MOVE.B      #14, D0             ; command for trap call to display message
00001830  4E4F                     873          TRAP        #15                 ; trap call
00001832                           874          
00001832  43F9 00002716            875          LEA         space, A1           ; Display space
00001838  103C 000E                876          MOVE.B      #14, D0             ; command for trap call to display message
0000183C  4E4F                     877          TRAP        #15                 ; trap call
0000183E                           878          
0000183E  4242                     879          CLR         D2
00001840  1401                     880          MOVE.B      D1,D2
00001842  E642                     881          ASR         #three,D2
00001844  C47C 0007                882          AND         #seven,D2
00001848  4243                     883          CLR         D3        
0000184A  1601                     884          MOVE.B      D1,D3
0000184C  C67C 0007                885          AND         #seven,D3
00001850                           886          
00001850  4241                     887          CLR         D1
00001852  3218                     888          MOVE.W      (A0)+, D1
00001854                           889          
00001854  43F9 00002719            890          LEA         hashTag, A1           ; Display space
0000185A  103C 000E                891          MOVE.B      #14, D0             ; command for trap call to display message
0000185E  4E4F                     892          TRAP        #15                 ; trap call
00001860                           893          
00001860  103C 0003                894          MOVE.B      #3, D0
00001864  4E4F                     895          TRAP        #15
00001866                           896          
00001866  43F9 0000271D            897          LEA         comma, A1           ; Display space
0000186C  103C 000E                898          MOVE.B      #14, D0             ; command for trap call to display message
00001870  4E4F                     899          TRAP        #15                 ; trap call
00001872                           900          
00001872  4EB9 000020BE            901          JSR         printEA
00001878                           902          
00001878  43F9 00002712            903          LEA         newLine, A1           ; Display space
0000187E  103C 000E                904          MOVE.B      #14, D0             ; command for trap call to display message
00001882  4E4F                     905          TRAP        #15                 ; trap call
00001884                           906          
00001884  6000 F786                907          BRA         LOOP
00001888                           908  
00001888  43F9 00002730            909  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000188E  103C 000E                910                  MOVE.B      #14, D0             ; command for trap call to display message
00001892  4E4F                     911                  TRAP        #15                 ; trap call
00001894                           912  
00001894  43F9 00002716            913                  LEA         space, A1           ; Display space
0000189A  103C 000E                914                  MOVE.B      #14, D0             ; command for trap call to display message
0000189E  4E4F                     915                  TRAP        #15                 ; trap call
000018A0                           916                  
000018A0  4242                     917                  CLR         D2
000018A2  1218                     918                  MOVE.B      (A0)+, D1
000018A4  1401                     919                  MOVE.B      D1,D2               ; copy data over
000018A6  E642                     920                  ASR         #three,D2           ; Shift to the right to remove register
000018A8  C47C 0007                921                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
000018AC                           922                  
000018AC  4243                     923                  CLR         D3                  ; Clear D3 so we can move D1 in
000018AE  1601                     924                  MOVE.B      D1,D3               ; Move othr byte in
000018B0  C67C 0007                925                  AND         #seven,D3           ; Set everything besides register to 0
000018B4                           926                  
000018B4  4241                     927                  CLR         D1
000018B6  3218                     928                  MOVE.W      (A0)+, D1
000018B8                           929                 
000018B8                           930                  
000018B8  43F9 00002719            931                  LEA         hashTag, A1           ; Display space
000018BE  103C 000E                932                  MOVE.B      #14, D0             ; command for trap call to display message
000018C2  4E4F                     933                  TRAP        #15                 ; trap call
000018C4                           934          
000018C4  103C 0003                935                  MOVE.B      #3, D0
000018C8  4E4F                     936                  TRAP        #15
000018CA                           937          
000018CA  43F9 0000271D            938                  LEA         comma, A1           ; Display space
000018D0  103C 000E                939                  MOVE.B      #14, D0             ; command for trap call to display message
000018D4  4E4F                     940                  TRAP        #15                 ; trap call
000018D6                           941                  
000018D6  4EB9 000020BE            942                  JSR         printEA
000018DC                           943          
000018DC  43F9 00002712            944                  LEA         newLine, A1           ; Display space
000018E2  103C 000E                945                  MOVE.B      #14, D0             ; command for trap call to display message
000018E6  4E4F                     946                  TRAP        #15                 ; trap call
000018E8                           947                  
000018E8                           948                  
000018E8  6000 F722                949                  BRA         LOOP                
000018EC                           950          
000018EC                           951  opDynBCLR       
000018EC  4241                     952                  CLR         D1
000018EE  1218                     953                  MOVE.B      (A0)+,D1            ; Copy second byte in
000018F0  1601                     954                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
000018F2  E243                     955                  ASR         #one,D3             ; Shift register over to the end
000018F4  C67C 0007                956                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
000018F8                           957                  
000018F8  1401                     958                  MOVE.B      D1,D2
000018FA  EC42                     959                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
000018FC  B47C 0002                960                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
00001900  6600 0E0C                961                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
00001904                           962  
00001904                           963                  
00001904  43F9 00002730            964                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
0000190A  103C 000E                965                  MOVE.B      #14, D0             ; command for trap call to display message
0000190E  4E4F                     966                  TRAP        #15                 ; trap call  
00001910                           967                  
00001910  43F9 00002716            968                  LEA         space, A1           ; Display space
00001916  103C 000E                969                  MOVE.B      #14, D0             ; command for trap call to display message
0000191A  4E4F                     970                  TRAP        #15                 ; trap call
0000191C                           971                  
0000191C  143C 0000                972                  MOVE.B      #zero,D2                
00001920  4EB9 000020BE            973                  JSR         printEA
00001926                           974                  
00001926  43F9 0000271D            975                  LEA         comma, A1           ; Display space
0000192C  103C 000E                976                  MOVE.B      #14, D0             ; command for trap call to display message
00001930  4E4F                     977                  TRAP        #15                 ; trap call
00001932                           978                  
00001932  4242                     979                  CLR         D2
00001934  1401                     980                  MOVE.B      D1,D2               ; Using D2 to store EA mode
00001936  E642                     981                  ASR         #three,D2           ; Remove/shift the register out
00001938  C47C 0007                982                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
0000193C                           983                  
0000193C  4243                     984                  CLR         D3                  ; Clearing D3 to avoid mashing data
0000193E  1601                     985                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
00001940  C67C 0007                986                  AND         #seven,D3           ; Change all bits except for register bits to 0
00001944                           987                  
00001944                           988  
00001944  4EB9 000020BE            989                  JSR         printEA
0000194A                           990          
0000194A  43F9 00002712            991                  LEA         newLine, A1           ; Display space
00001950  103C 000E                992                  MOVE.B      #14, D0             ; command for trap call to display message
00001954  4E4F                     993                  TRAP        #15                 ; trap call            
00001956                           994  
00001956                           995  
00001956  6000 F6B4                996                  BRA         LOOP                ; go back to the loop
0000195A                           997   
0000195A                           998  opMOVEB 
0000195A  43F9 00002735            999          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
00001960  103C 000E               1000          MOVE.B      #14, D0             ; command for trap call to display message
00001964  4E4F                    1001          TRAP        #15                 ; trap call
00001966  43F9 000027A9           1002          LEA         dispByte, A1        ; display byte
0000196C  103C 000E               1003          MOVE.B      #14, D0             ; command for trap call to display message
00001970  4E4F                    1004          TRAP        #15                 ; trap call
00001972  43F9 00002716           1005          LEA         space, A1           ; create spaces
00001978  103C 000E               1006          MOVE.B      #14, D0             ; command for trap call to display message
0000197C  4E4F                    1007          TRAP        #15                 ; trap call
0000197E                          1008          
0000197E                          1009          
0000197E  4245                    1010          CLR         D5                  ; Clear D5
00001980  1A01                    1011          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001982  E245                    1012          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001984  CA7C 0007               1013          AND         #seven,D5
00001988                          1014          
00001988  4244                    1015          CLR         D4                  ; Clear out D4
0000198A  1801                    1016          MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000198C  C87C 0001               1017          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001990                          1018          
00001990  4241                    1019          CLR          D1
00001992  4242                    1020          CLR          D2
00001994  1218                    1021          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001996  1401                    1022          MOVE.B      D1,D2
00001998  EC42                    1023          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000199A  D842                    1024          ADD         D2,D4               ; Adds the remaining bits to D4
0000199C                          1025          
0000199C  4242                    1026          CLR         D2
0000199E  1401                    1027          MOVE.B      D1,D2               ; Copy new byte over to D2
000019A0  E642                    1028          ASR         #three,D2           ; Shift source register out
000019A2  C47C 0007               1029          AND         #seven,D2           ; Set everything to 0 except for the mode
000019A6                          1030          
000019A6  4243                    1031          CLR         D3
000019A8  1601                    1032          MOVE.B      D1,D3
000019AA  C67C 0007               1033          AND         #seven,D3
000019AE                          1034          
000019AE  4EB9 000020BE           1035          JSR         printEA
000019B4                          1036          
000019B4  43F9 0000271D           1037          LEA         comma, A1           ; Display space
000019BA  103C 000E               1038          MOVE.B      #14, D0             ; command for trap call to display message
000019BE  4E4F                    1039          TRAP        #15                 ; trap call
000019C0                          1040          
000019C0  4242                    1041          CLR         D2
000019C2  4243                    1042          CLR         D3
000019C4  1404                    1043          MOVE.B      D4,D2
000019C6  1605                    1044          MOVE.B      D5,D3
000019C8                          1045          
000019C8  4EB9 000020BE           1046          JSR         printEA
000019CE                          1047          
000019CE                          1048          
000019CE  43F9 00002712           1049          LEA         newLine, A1           ; Display space
000019D4  103C 000E               1050          MOVE.B      #14, D0             ; command for trap call to display message
000019D8  4E4F                    1051          TRAP        #15                 ; trap call            
000019DA                          1052  
000019DA                          1053  
000019DA  6000 F630               1054          BRA         LOOP                ; go back to the loop
000019DE                          1055          
000019DE                          1056  opMOVEL     
000019DE                          1057          
000019DE  4245                    1058              CLR         D5                  ; Clear D5
000019E0  1A01                    1059              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
000019E2  E245                    1060              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
000019E4  CA7C 0007               1061              AND         #seven,D5
000019E8                          1062          
000019E8  4244                    1063              CLR         D4                  ; Clear out D4
000019EA  1801                    1064              MOVE.B      D1,D4               ; Copy byte over to store destination mode
000019EC  C87C 0001               1065              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
000019F0                          1066          
000019F0  4241                    1067              CLR          D1
000019F2  4242                    1068              CLR          D2
000019F4  1218                    1069              MOVE.B      (A0)+,D1            ; Copy byte into D1
000019F6  1401                    1070              MOVE.B      D1,D2
000019F8  EC42                    1071              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000019FA  D842                    1072              ADD         D2,D4               ; Adds the remaining bits to D4
000019FC                          1073          
000019FC  B87C 0001               1074              CMP         #one,D4             ; Check if it is MOVEA
00001A00  6700 006C               1075              BEQ         opMOVEAL            ; If it is, branch off
00001A04                          1076              
00001A04  43F9 00002735           1077              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001A0A  103C 000E               1078              MOVE.B      #14, D0             ; command for trap call to display message
00001A0E  4E4F                    1079              TRAP        #15                 ; trap call  
00001A10                          1080              
00001A10                          1081              
00001A10  43F9 000027AF           1082              LEA         dispLong,A1
00001A16  103C 000E               1083              MOVE.B      #14, D0             ; command for trap call to display message
00001A1A  4E4F                    1084              TRAP        #15                 ; trap call
00001A1C                          1085              
00001A1C  43F9 00002716           1086              LEA         space, A1           ; create spaces
00001A22  103C 000E               1087              MOVE.B      #14, D0             ; command for trap call to display message
00001A26  4E4F                    1088              TRAP        #15                 ; trap call
00001A28                          1089          
00001A28  4242                    1090              CLR         D2
00001A2A  1401                    1091              MOVE.B      D1,D2               ; Copy new byte over to D2
00001A2C  E642                    1092              ASR         #three,D2           ; Shift source register out
00001A2E  C47C 0007               1093              AND         #seven,D2           ; Set everything to 0 except for the mode
00001A32                          1094          
00001A32  4243                    1095              CLR         D3
00001A34  1601                    1096              MOVE.B      D1,D3
00001A36  C67C 0007               1097              AND         #seven,D3
00001A3A                          1098              
00001A3A  4241                    1099              CLR         D1                  ; Clear D1
00001A3C  2218                    1100              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
00001A3E                          1101              
00001A3E  4EB9 000020BE           1102              JSR         printEA
00001A44                          1103              
00001A44  43F9 0000271D           1104              LEA         comma, A1           ; Display comma
00001A4A  103C 000E               1105              MOVE.B      #14, D0             ; command for trap call to display message
00001A4E  4E4F                    1106              TRAP        #15                 ; trap call
00001A50                          1107          
00001A50  4242                    1108              CLR         D2
00001A52  4243                    1109              CLR         D3
00001A54  1404                    1110              MOVE.B      D4,D2
00001A56  1605                    1111              MOVE.B      D5,D3
00001A58                          1112              
00001A58                          1113  
00001A58                          1114              
00001A58  4EB9 000020BE           1115              JSR         printEA
00001A5E                          1116          
00001A5E                          1117          
00001A5E  43F9 00002712           1118              LEA         newLine, A1           ; Display space
00001A64  103C 000E               1119              MOVE.B      #14, D0             ; command for trap call to display message
00001A68  4E4F                    1120              TRAP        #15                 ; trap call            
00001A6A                          1121  
00001A6A                          1122  
00001A6A  6000 F5A0               1123              BRA         LOOP                ; go back to the loop
00001A6E                          1124              
00001A6E                          1125  opMOVEAL
00001A6E                          1126  
00001A6E  43F9 0000273A           1127              LEA         MOVEAmatch,A1
00001A74  103C 000E               1128              MOVE.B      #14, D0             ; command for trap call to display message
00001A78  4E4F                    1129              TRAP        #15                 ; trap call
00001A7A                          1130              
00001A7A  43F9 000027AF           1131              LEA         dispLong,A1
00001A80  103C 000E               1132              MOVE.B      #14, D0             ; command for trap call to display message
00001A84  4E4F                    1133              TRAP        #15                 ; trap call
00001A86                          1134              
00001A86                          1135  
00001A86  43F9 00002716           1136              LEA         space, A1           ; create spaces
00001A8C  103C 000E               1137              MOVE.B      #14, D0             ; command for trap call to display message
00001A90  4E4F                    1138              TRAP        #15                 ; trap call
00001A92                          1139              
00001A92  4242                    1140              CLR         D2
00001A94  1401                    1141              MOVE.B      D1,D2               ; Copy new byte over to D2
00001A96  E642                    1142              ASR         #three,D2           ; Shift source register out
00001A98  C47C 0007               1143              AND         #seven,D2           ; Set everything to 0 except for the mode
00001A9C                          1144          
00001A9C  4243                    1145              CLR         D3
00001A9E  1601                    1146              MOVE.B      D1,D3
00001AA0  C67C 0007               1147              AND         #seven,D3
00001AA4                          1148              
00001AA4  4241                    1149              CLR         D1                  ; Clear D1
00001AA6  3218                    1150              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001AA8                          1151              
00001AA8                          1152              
00001AA8  4EB9 000020BE           1153              JSR         printEA
00001AAE                          1154              
00001AAE  43F9 0000271D           1155              LEA         comma, A1           ; Display comma
00001AB4  103C 000E               1156              MOVE.B      #14, D0             ; command for trap call to display message
00001AB8  4E4F                    1157              TRAP        #15                 ; trap call
00001ABA                          1158  
00001ABA  4242                    1159              CLR         D2
00001ABC  4243                    1160              CLR         D3
00001ABE  1404                    1161              MOVE.B      D4,D2
00001AC0  1605                    1162              MOVE.B      D5,D3
00001AC2                          1163          
00001AC2  4EB9 000020BE           1164              JSR         printEA
00001AC8                          1165          
00001AC8                          1166          
00001AC8  43F9 00002712           1167              LEA         newLine, A1           ; Display space
00001ACE  103C 000E               1168              MOVE.B      #14, D0             ; command for trap call to display message
00001AD2  4E4F                    1169              TRAP        #15                 ; trap call            
00001AD4                          1170  
00001AD4                          1171  
00001AD4  6000 F536               1172              BRA         LOOP                ; go back to the loop
00001AD8                          1173  
00001AD8                          1174  opMOVEW
00001AD8                          1175          
00001AD8  4245                    1176              CLR         D5                  ; Clear D5
00001ADA  1A01                    1177              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001ADC  E245                    1178              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001ADE  CA7C 0007               1179              AND         #seven,D5
00001AE2                          1180          
00001AE2  4244                    1181              CLR         D4                  ; Clear out D4
00001AE4  1801                    1182              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001AE6  C87C 0001               1183              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001AEA                          1184          
00001AEA  4241                    1185              CLR          D1
00001AEC  4242                    1186              CLR          D2
00001AEE  1218                    1187              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001AF0  1401                    1188              MOVE.B      D1,D2
00001AF2  EC42                    1189              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001AF4  D842                    1190              ADD         D2,D4               ; Adds the remaining bits to D4
00001AF6                          1191          
00001AF6  B87C 0001               1192              CMP         #one,D4             ; Check if it is MOVEA
00001AFA  6700 006C               1193              BEQ         opMOVEAW            ; If it is, branch off
00001AFE                          1194              
00001AFE  43F9 00002735           1195              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001B04  103C 000E               1196              MOVE.B      #14, D0             ; command for trap call to display message
00001B08  4E4F                    1197              TRAP        #15                 ; trap call  
00001B0A                          1198              
00001B0A  43F9 000027AC           1199              LEA         dispWord,A1
00001B10  103C 000E               1200              MOVE.B      #14, D0             ; command for trap call to display message
00001B14  4E4F                    1201              TRAP        #15                 ; trap call
00001B16                          1202              
00001B16  43F9 00002716           1203              LEA         space, A1           ; create spaces
00001B1C  103C 000E               1204              MOVE.B      #14, D0             ; command for trap call to display message
00001B20  4E4F                    1205              TRAP        #15                 ; trap call
00001B22                          1206          
00001B22  4242                    1207              CLR         D2
00001B24  1401                    1208              MOVE.B      D1,D2               ; Copy new byte over to D2
00001B26  E642                    1209              ASR         #three,D2           ; Shift source register out
00001B28  C47C 0007               1210              AND         #seven,D2           ; Set everything to 0 except for the mode
00001B2C                          1211          
00001B2C  4243                    1212              CLR         D3
00001B2E  1601                    1213              MOVE.B      D1,D3
00001B30  C67C 0007               1214              AND         #seven,D3
00001B34                          1215              
00001B34  4241                    1216              CLR         D1                  ; Clear D1
00001B36  3218                    1217              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001B38                          1218              
00001B38  4EB9 000020BE           1219              JSR         printEA
00001B3E                          1220              
00001B3E  43F9 0000271D           1221              LEA         comma, A1           ; Display comma
00001B44  103C 000E               1222              MOVE.B      #14, D0             ; command for trap call to display message
00001B48  4E4F                    1223              TRAP        #15                 ; trap call
00001B4A                          1224          
00001B4A  4242                    1225              CLR         D2
00001B4C  4243                    1226              CLR         D3
00001B4E  1404                    1227              MOVE.B      D4,D2
00001B50  1605                    1228              MOVE.B      D5,D3
00001B52                          1229              
00001B52                          1230  
00001B52                          1231              
00001B52  4EB9 000020BE           1232              JSR         printEA
00001B58                          1233          
00001B58                          1234          
00001B58  43F9 00002712           1235              LEA         newLine, A1           ; Display space
00001B5E  103C 000E               1236              MOVE.B      #14, D0             ; command for trap call to display message
00001B62  4E4F                    1237              TRAP        #15                 ; trap call            
00001B64                          1238  
00001B64                          1239  
00001B64  6000 F4A6               1240              BRA         LOOP                ; go back to the loop
00001B68                          1241  opMOVEAW  
00001B68  43F9 0000273A           1242              LEA         MOVEAmatch,A1
00001B6E  103C 000E               1243              MOVE.B      #14, D0             ; command for trap call to display message
00001B72  4E4F                    1244              TRAP        #15                 ; trap call
00001B74                          1245              
00001B74  43F9 000027AC           1246              LEA         dispWord,A1
00001B7A  103C 000E               1247              MOVE.B      #14, D0             ; command for trap call to display message
00001B7E  4E4F                    1248              TRAP        #15                 ; trap call
00001B80                          1249              
00001B80                          1250  
00001B80  43F9 00002716           1251              LEA         space, A1           ; create spaces
00001B86  103C 000E               1252              MOVE.B      #14, D0             ; command for trap call to display message
00001B8A  4E4F                    1253              TRAP        #15                 ; trap call
00001B8C                          1254              
00001B8C  4242                    1255              CLR         D2
00001B8E  1401                    1256              MOVE.B      D1,D2               ; Copy new byte over to D2
00001B90  E642                    1257              ASR         #three,D2           ; Shift source register out
00001B92  C47C 0007               1258              AND         #seven,D2           ; Set everything to 0 except for the mode
00001B96                          1259          
00001B96  4243                    1260              CLR         D3
00001B98  1601                    1261              MOVE.B      D1,D3
00001B9A  C67C 0007               1262              AND         #seven,D3
00001B9E                          1263              
00001B9E  4241                    1264              CLR         D1                  ; Clear D1
00001BA0  3218                    1265              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001BA2                          1266              
00001BA2                          1267              
00001BA2  4EB9 000020BE           1268              JSR         printEA
00001BA8                          1269              
00001BA8  43F9 0000271D           1270              LEA         comma, A1           ; Display comma
00001BAE  103C 000E               1271              MOVE.B      #14, D0             ; command for trap call to display message
00001BB2  4E4F                    1272              TRAP        #15                 ; trap call
00001BB4                          1273  
00001BB4  4242                    1274              CLR         D2
00001BB6  4243                    1275              CLR         D3
00001BB8  1404                    1276              MOVE.B      D4,D2
00001BBA  1605                    1277              MOVE.B      D5,D3
00001BBC                          1278          
00001BBC  4EB9 000020BE           1279              JSR         printEA
00001BC2                          1280          
00001BC2                          1281          
00001BC2  43F9 00002712           1282              LEA         newLine, A1           ; Display space
00001BC8  103C 000E               1283              MOVE.B      #14, D0             ; command for trap call to display message
00001BCC  4E4F                    1284              TRAP        #15                 ; trap call            
00001BCE                          1285  
00001BCE                          1286  
00001BCE  6000 F43C               1287              BRA         LOOP                ; go back to the loop
00001BD2                          1288  
00001BD2                          1289  opNEG   
00001BD2  43F9 00002740           1290              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001BD8  103C 000E               1291              MOVE.B      #14, D0             ; command for trap call to display message
00001BDC  4E4F                    1292              TRAP        #15                 ; trap call
00001BDE                          1293          
00001BDE                          1294          
00001BDE  1218                    1295              MOVE.B      (A0)+, D1
00001BE0  1401                    1296              MOVE.B      D1,D2               ; copy data over
00001BE2  EC42                    1297              ASR         #six,D2
00001BE4                          1298              
00001BE4  B47C 0000               1299              CMP         #zero,D2
00001BE8  6700 0016               1300              BEQ         opNEGB
00001BEC  B47C 0001               1301              CMP         #one,D2
00001BF0  6700 004E               1302              BEQ         opNEGL
00001BF4  B47C 0002               1303              CMP         #two,D2
00001BF8  6700 0086               1304              BEQ         opNEGW
00001BFC  6000 0B0A               1305              BRA         INVALID
00001C00                          1306  opNEGB
00001C00                          1307  
00001C00  43F9 000027A9           1308              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001C06  103C 000E               1309              MOVE.B      #14, D0             ; command for trap call to display message
00001C0A  4E4F                    1310              TRAP        #15                 ; trap call
00001C0C                          1311          
00001C0C  43F9 00002716           1312              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001C12  103C 000E               1313              MOVE.B      #14, D0             ; command for trap call to display message
00001C16  4E4F                    1314              TRAP        #15                 ; trap call
00001C18                          1315          
00001C18  4242                    1316              CLR         D2                  ; Clear Data register 2
00001C1A  3401                    1317              MOVE        D1,D2               ; Move byte into D2
00001C1C  E642                    1318              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001C1E  C47C 0007               1319              AND         #seven,D2           ; Stores mode
00001C22                          1320              
00001C22  4243                    1321              CLR         D3
00001C24  3601                    1322              MOVE        D1,D3
00001C26  C67C 0007               1323              AND         #seven,D3
00001C2A                          1324          
00001C2A  4EB9 000020BE           1325              JSR         printEA
00001C30                          1326                  
00001C30  43F9 00002712           1327              LEA         newLine, A1           ; Display space
00001C36  103C 000E               1328              MOVE.B      #14, D0             ; command for trap call to display message
00001C3A  4E4F                    1329              TRAP        #15                 ; trap call  
00001C3C                          1330          
00001C3C  6000 F3CE               1331              BRA         LOOP
00001C40                          1332                  
00001C40                          1333  
00001C40                          1334  opNEGL
00001C40                          1335  
00001C40  43F9 000027AF           1336              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001C46  103C 000E               1337              MOVE.B      #14, D0             ; command for trap call to display message
00001C4A  4E4F                    1338              TRAP        #15                 ; trap call
00001C4C                          1339  
00001C4C  43F9 00002716           1340              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001C52  103C 000E               1341              MOVE.B      #14, D0             ; command for trap call to display message
00001C56  4E4F                    1342              TRAP        #15                 ; trap call
00001C58                          1343                  
00001C58  4242                    1344              CLR         D2                  ; Clear Data register 2
00001C5A  3401                    1345              MOVE        D1,D2               ; Move byte into D2
00001C5C  E642                    1346              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001C5E  C47C 0007               1347              AND         #seven,D2           ; Stores mode
00001C62                          1348          
00001C62  4243                    1349              CLR         D3
00001C64  3601                    1350              MOVE        D1,D3
00001C66  C67C 0007               1351              AND         #seven,D3
00001C6A                          1352          
00001C6A  4EB9 000020BE           1353              JSR         printEA
00001C70                          1354                      
00001C70  43F9 00002712           1355              LEA         newLine, A1         ; Display space
00001C76  103C 000E               1356              MOVE.B      #14, D0             ; command for trap call to display message
00001C7A  4E4F                    1357              TRAP        #15                 ; trap call  
00001C7C                          1358          
00001C7C  6000 F38E               1359              BRA         LOOP
00001C80                          1360          
00001C80                          1361  
00001C80                          1362  opNEGW
00001C80                          1363  
00001C80  43F9 000027AC           1364              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001C86  103C 000E               1365              MOVE.B      #14, D0             ; command for trap call to display message
00001C8A  4E4F                    1366              TRAP        #15                 ; trap call
00001C8C                          1367          
00001C8C  43F9 00002716           1368              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001C92  103C 000E               1369              MOVE.B      #14, D0             ; command for trap call to display message
00001C96  4E4F                    1370              TRAP        #15                 ; trap call        
00001C98                          1371                  
00001C98  4242                    1372              CLR         D2                  ; Clear Data register 2
00001C9A  3401                    1373              MOVE        D1,D2               ; Move byte into D2
00001C9C  E642                    1374              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001C9E  C47C 0007               1375              AND         #seven,D2           ; Stores mode
00001CA2                          1376          
00001CA2  4243                    1377              CLR         D3
00001CA4  3601                    1378              MOVE        D1,D3
00001CA6  C67C 0007               1379              AND         #seven,D3
00001CAA                          1380          
00001CAA  4EB9 000020BE           1381              JSR         printEA
00001CB0                          1382              
00001CB0  43F9 00002712           1383              LEA         newLine, A1           ; Display space
00001CB6  103C 000E               1384              MOVE.B      #14, D0             ; command for trap call to display message
00001CBA  4E4F                    1385              TRAP        #15                 ; trap call  
00001CBC                          1386          
00001CBC  6000 F34E               1387              BRA         LOOP
00001CC0                          1388  
00001CC0                          1389  opRTSJSR
00001CC0                          1390          
00001CC0  1218                    1391              MOVE.B      (A0)+, D1
00001CC2                          1392              
00001CC2  1401                    1393              MOVE.B      D1,D2               ; copy data over
00001CC4  B47C 0075               1394              CMP         #117,D2
00001CC8  6700 0050               1395              BEQ         opRTS
00001CCC                          1396              
00001CCC  EC42                    1397              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
00001CCE  B47C 0002               1398              CMP         #two,D2             ; Checking if it is JSR
00001CD2  6700 0006               1399              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001CD6                          1400  
00001CD6  6000 0A30               1401              BRA         invalid
00001CDA                          1402  
00001CDA                          1403  opJSR
00001CDA                          1404                        
00001CDA  43F9 00002748           1405              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001CE0  103C 000E               1406              MOVE.B      #14, D0             ; command for trap call to display message
00001CE4  4E4F                    1407              TRAP        #15                 ; trap call
00001CE6                          1408              
00001CE6  43F9 00002716           1409              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001CEC  103C 000E               1410              MOVE.B      #14, D0             ; command for trap call to display message
00001CF0  4E4F                    1411              TRAP        #15                 ; trap call
00001CF2                          1412              
00001CF2  4242                    1413              CLR         D2
00001CF4  4243                    1414              CLR         D3
00001CF6                          1415              
00001CF6  1401                    1416              MOVE.B      D1,D2
00001CF8  E642                    1417              ASR         #three,D2
00001CFA  C47C 0007               1418              AND         #seven,D2
00001CFE                          1419              
00001CFE  1601                    1420              MOVE.B      D1,D3
00001D00  C67C 0007               1421              AND         #seven,D3
00001D04                          1422              
00001D04  4EB9 000020BE           1423              JSR         printEA
00001D0A                          1424              
00001D0A  43F9 00002712           1425              LEA         newLine, A1           ; Display space
00001D10  103C 000E               1426              MOVE.B      #14, D0             ; command for trap call to display message
00001D14  4E4F                    1427              TRAP        #15                 ; trap call  
00001D16                          1428              
00001D16  6000 F2F4               1429              BRA         loop            
00001D1A                          1430  opRTS
00001D1A                          1431  
00001D1A  43F9 00002744           1432              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
00001D20  103C 000E               1433              MOVE.B      #14, D0             ; command for trap call to display message
00001D24  4E4F                    1434              TRAP        #15                 ; trap call
00001D26                          1435              
00001D26  43F9 00002712           1436              LEA         newLine, A1           ; Display space
00001D2C  103C 000E               1437              MOVE.B      #14, D0             ; command for trap call to display message
00001D30  4E4F                    1438              TRAP        #15                 ; trap call 
00001D32                          1439              
00001D32  6000 F2D8               1440              BRA         loop
00001D36                          1441  
00001D36                          1442  opMOVEMLEA
00001D36  4242                    1443              CLR         D2                  ; Clear D2
00001D38  1401                    1444              MOVE.B      D1,D2               ; Copy byte over
00001D3A  C47C 000F               1445              AND         #secNib,D2          ; Check only the second nibble
00001D3E  B47C 000C               1446              CMP         #twelve,D2          ; Compare the second nibble to twelve
00001D42  6700 000E               1447              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
00001D46  B47C 0008               1448              CMP         #eight,D2           ; Compare the second nibble to eight
00001D4A  6700 0006               1449              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
00001D4E  6000 001A               1450              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
00001D52                          1451              
00001D52                          1452  opMOVEM
00001D52                          1453  
00001D52  43F9 00002744           1454              LEA         RTSMatch, A1       ; we know that the opcode will be MOVEM, so load A1 to print message
00001D58  103C 000E               1455              MOVE.B      #14, D0             ; command for trap call to display message
00001D5C  4E4F                    1456              TRAP        #15                 ; trap call
00001D5E                          1457              
00001D5E  4244                    1458              CLR         D4                  ; Clearing D4 to store dr field
00001D60  1801                    1459              MOVE.B      D1,D4               ; Moving byte to find dr field
00001D62  E444                    1460              ASR         #two,D4             ; Moving dr field to readable spot
00001D64  C87C 0001               1461              AND         #one,D4             ; seting everything except dr to 0
00001D68                          1462              
00001D68  1218                    1463              MOVE.B      (A0)+, D1
00001D6A                          1464              
00001D6A                          1465  
00001D6A                          1466  opLEA
00001D6A                          1467  
00001D6A                          1468  ***********************************************************************************************************
00001D6A                          1469  *
00001D6A                          1470  *               SUBQ OPCODE
00001D6A                          1471  *
00001D6A                          1472  ***********************************************************************************************************
00001D6A                          1473  
00001D6A                          1474  opSUBQ      
00001D6A  43F9 00002756           1475              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
00001D70  103C 000E               1476              MOVE.B      #14, D0             ; command for trap call to display message
00001D74  4E4F                    1477              TRAP        #15                 ; trap call
00001D76                          1478              
00001D76  1401                    1479              MOVE.B      D1,D2
00001D78  EE42                    1480              ASR         #seven,D2           ; Move bits 7 places over to find opmode
00001D7A  C47C 0007               1481              AND         #$07,D2
00001D7E                          1482              
00001D7E  4242                    1483              CLR         D2
00001D80                          1484              ; These are for EA to Dn direction
00001D80  B43C 0000               1485              CMP.B       #zero,D2
00001D84  6700 0012               1486              BEQ         opSUBQB             ; Byte in size
00001D88  B43C 0001               1487              CMP.B       #one,D2
00001D8C  6700 0064               1488              BEQ         opSUBQW             ; Word in size
00001D90  B43C 0002               1489              CMP.B       #two,D2
00001D94  6700 00B8               1490              BEQ         opSUBQL             ; Long in size
00001D98                          1491              
00001D98                          1492              
00001D98  43F9 000027A9           1493  opSUBQB     LEA         dispByte,A1
00001D9E  103C 000E               1494              MOVE.B      #14,D0
00001DA2  4E4F                    1495              TRAP        #15
00001DA4                          1496              
00001DA4  43F9 00002716           1497              LEA         space, A1           ; Display space
00001DAA  103C 000E               1498              MOVE.B      #14, D0             ; command for trap call to display message
00001DAE  4E4F                    1499              TRAP        #15                 ; trap call
00001DB0                          1500              
00001DB0                          1501  
00001DB0  1401                    1502              MOVE.B      D1,D2
00001DB2  E642                    1503              ASR         #3,D2
00001DB4  C47C 0007               1504              AND         #$07,D2
00001DB8  1601                    1505              MOVE.B      D1,D3
00001DBA  C67C 0007               1506              AND         #$07,D3
00001DBE  4EB9 000020BE           1507              JSR         printEA         ; Determines the "left" operand register
00001DC4                          1508              
00001DC4  43F9 0000271D           1509              LEA         comma, A1           ; Display space
00001DCA  103C 000E               1510              MOVE.B      #14, D0             ; command for trap call to display message
00001DCE  4E4F                    1511              TRAP        #15                 ; trap call
00001DD0                          1512              
00001DD0  4242                    1513              CLR         D2
00001DD2  3601                    1514              MOVE.W      D1,D3
00001DD4  E043                    1515              ASR         #eight,D3
00001DD6  E243                    1516              ASR         #one,D3
00001DD8  C67C 0007               1517              AND         #$07,D3
00001DDC  4EB9 000020BE           1518              JSR         printEA
00001DE2                          1519              
00001DE2  43F9 00002712           1520              LEA         newLine,A1
00001DE8  103C 000E               1521              MOVE.B      #14,D0
00001DEC  4E4F                    1522              TRAP        #15
00001DEE                          1523              
00001DEE  6000 F21C               1524              BRA         LOOP
00001DF2                          1525              
00001DF2                          1526              
00001DF2  43F9 000027AC           1527  opSUBQW     LEA         dispWord,A1
00001DF8  103C 000E               1528              MOVE.B      #14,D0
00001DFC  4E4F                    1529              TRAP        #15
00001DFE                          1530              
00001DFE  43F9 00002716           1531              LEA         space, A1           ; Display space
00001E04  103C 000E               1532              MOVE.B      #14, D0             ; command for trap call to display message
00001E08  4E4F                    1533              TRAP        #15                 ; trap call
00001E0A                          1534              
00001E0A  4242                    1535              CLR         D2
00001E0C  1401                    1536              MOVE.B      D1,D2
00001E0E  E642                    1537              ASR         #3,D2
00001E10  C47C 0007               1538              AND         #$07,D2
00001E14  1601                    1539              MOVE.B      D1,D3
00001E16  C67C 0007               1540              AND         #$07,D3
00001E1A  4EB9 000020BE           1541              JSR         printEA         ; Determines the "left" operand register
00001E20                          1542              
00001E20  43F9 0000271D           1543              LEA         comma, A1           ; Display space
00001E26  103C 000E               1544              MOVE.B      #14, D0             ; command for trap call to display message
00001E2A  4E4F                    1545              TRAP        #15                 ; trap call
00001E2C                          1546              
00001E2C  4242                    1547              CLR         D2
00001E2E  3601                    1548              MOVE.W      D1,D3
00001E30  E043                    1549              ASR         #eight,D3
00001E32  E243                    1550              ASR         #one,D3
00001E34  C67C 0007               1551              AND         #$07,D3
00001E38  4EB9 000020BE           1552              JSR         printEA
00001E3E                          1553              
00001E3E  43F9 00002712           1554              LEA         newLine,A1
00001E44  103C 000E               1555              MOVE.B      #14,D0
00001E48  4E4F                    1556              TRAP        #15
00001E4A                          1557              
00001E4A  6000 F1C0               1558              BRA         LOOP
00001E4E                          1559              
00001E4E  43F9 000027AF           1560  opSUBQL     LEA         dispLong,A1
00001E54  103C 000E               1561              MOVE.B      #14,D0
00001E58  4E4F                    1562              TRAP        #15
00001E5A                          1563              
00001E5A  43F9 00002716           1564              LEA         space, A1           ; Display space
00001E60  103C 000E               1565              MOVE.B      #14, D0             ; command for trap call to display message
00001E64  4E4F                    1566              TRAP        #15                 ; trap call
00001E66                          1567              
00001E66  1401                    1568              MOVE.B      D1,D2
00001E68  E642                    1569              ASR         #3,D2
00001E6A  C47C 0007               1570              AND         #$07,D2
00001E6E  1601                    1571              MOVE.B      D1,D3
00001E70  C67C 0007               1572              AND         #$07,D3
00001E74  4EB9 000020BE           1573              JSR         printEA         ; Determines the "left" operand register
00001E7A                          1574              
00001E7A  43F9 0000271D           1575              LEA         comma, A1           ; Display space
00001E80  103C 000E               1576              MOVE.B      #14, D0             ; command for trap call to display message
00001E84  4E4F                    1577              TRAP        #15                 ; trap call
00001E86                          1578              
00001E86  4242                    1579              CLR         D2
00001E88  3601                    1580              MOVE.W      D1,D3
00001E8A  E043                    1581              ASR         #eight,D3
00001E8C  E243                    1582              ASR         #one,D3
00001E8E  C67C 0007               1583              AND         #$07,D3
00001E92  4EB9 000020BE           1584              JSR         printEA
00001E98                          1585              
00001E98  43F9 00002712           1586              LEA         newLine,A1
00001E9E  103C 000E               1587              MOVE.B      #14,D0
00001EA2  4E4F                    1588              TRAP        #15
00001EA4                          1589              
00001EA4  6000 F166               1590              BRA         LOOP            ; trap call
00001EA8                          1591  
00001EA8                          1592  ***********************************************************************************************************
00001EA8                          1593  *
00001EA8                          1594  *               BRA OPCODE
00001EA8                          1595  *
00001EA8                          1596  ***********************************************************************************************************
00001EA8                          1597              
00001EA8  43F9 0000275B           1598  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001EAE  103C 000E               1599          MOVE.B      #14, D0             ; command for trap call to display message
00001EB2  4E4F                    1600          TRAP        #15                 ; trap call
00001EB4                          1601          
00001EB4  4242                    1602          CLR         D2
00001EB6  4243                    1603          CLR         D3      
00001EB8                          1604  
00001EB8  43F9 00002716           1605          LEA         space,A1
00001EBE  103C 000E               1606          MOVE.B      #14,D0
00001EC2  4E4F                    1607          TRAP        #15
00001EC4                          1608          
00001EC4  143C 0007               1609          MOVE.B      #seven,D2
00001EC8  1218                    1610          MOVE.B      (A0)+,D1
00001ECA  4EB9 000020BE           1611          JSR         printEA
00001ED0                          1612          
00001ED0  43F9 00002712           1613          LEA         newLine, A1           ; create new line
00001ED6  103C 000E               1614          MOVE.B      #14, D0             ; command for trap call to display message
00001EDA  4E4F                    1615          TRAP        #15                 ; trap call
00001EDC                          1616  
00001EDC  6000 F12E               1617          BRA         LOOP
00001EE0                          1618          
00001EE0                          1619          
00001EE0  43F9 0000275F           1620  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001EE6  103C 000E               1621          MOVE.B      #14, D0             ; command for trap call to display message
00001EEA  4E4F                    1622          TRAP        #15                 ; trap call
00001EEC                          1623  
00001EEC  43F9 00002763           1624  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001EF2  103C 000E               1625          MOVE.B      #14, D0             ; command for trap call to display message
00001EF6  4E4F                    1626          TRAP        #15                 ; trap call
00001EF8                          1627  
00001EF8  43F9 00002767           1628  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001EFE  103C 000E               1629          MOVE.B      #14, D0             ; command for trap call to display message
00001F02  4E4F                    1630          TRAP        #15                 ; trap call
00001F04                          1631  
00001F04  43F9 0000276B           1632  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001F0A  103C 000E               1633          MOVE.B      #14, D0             ; command for trap call to display message
00001F0E  4E4F                    1634          TRAP        #15                 ; trap call
00001F10                          1635  
00001F10                          1636  ***********************************************************************************************************
00001F10                          1637  *
00001F10                          1638  *               SUB OPCODE
00001F10                          1639  *
00001F10                          1640  ***********************************************************************************************************
00001F10                          1641  
00001F10  43F9 00002777           1642  opSUB       LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001F16  103C 000E               1643              MOVE.B      #14, D0             ; command for trap call to display message
00001F1A  4E4F                    1644              TRAP        #15                 ; trap call
00001F1C                          1645          
00001F1C  4242                    1646              CLR         D2
00001F1E                          1647              
00001F1E  1401                    1648              MOVE.B      D1,D2
00001F20  EC42                    1649              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001F22  C47C 0007               1650              AND         #$07,D2
00001F26                          1651              
00001F26                          1652              ; These are for DN - EA
00001F26  B43C 0000               1653              CMP.B       #zero,D2
00001F2A  6700 002A               1654              BEQ         opSUBB              ; Byte in opmode
00001F2E  B43C 0001               1655              CMP.B       #one,D2
00001F32  6700 007C               1656              BEQ         opSUBW              ; Word in opmode
00001F36  B43C 0002               1657              CMP.B       #two,D2
00001F3A  6700 00D0               1658              BEQ         opSUBL              ; Long in opmode
00001F3E                          1659              
00001F3E                          1660              ; These are for EA - DN
00001F3E  B43C 0004               1661              CMP.B       #four,D2
00001F42  6700 0012               1662              BEQ         opSUBB              ; Byte in opmode
00001F46  B43C 0005               1663              CMP.B       #five,D2
00001F4A  6700 0064               1664              BEQ         opSUBW              ; Word in opmode
00001F4E  B43C 0006               1665              CMP.B       #six,D2
00001F52  6700 00B8               1666              BEQ         opSUBL              ; Long in opmode
00001F56                          1667              
00001F56  43F9 000027A9           1668  opSUBB      LEA         dispByte,A1
00001F5C  103C 000E               1669              MOVE.B      #14,D0
00001F60  4E4F                    1670              TRAP        #15
00001F62                          1671              
00001F62  43F9 00002716           1672              LEA         space, A1           ; Display space
00001F68  103C 000E               1673              MOVE.B      #14, D0             ; command for trap call to display message
00001F6C  4E4F                    1674              TRAP        #15                 ; trap call         
00001F6E                          1675              
00001F6E  4242                    1676              CLR         D2
00001F70  3601                    1677              MOVE.W      D1,D3
00001F72  E043                    1678              ASR         #eight,D3
00001F74  E243                    1679              ASR         #one,D3
00001F76  C67C 0007               1680              AND         #$07,D3
00001F7A  4EB9 000020BE           1681              JSR         printEA
00001F80                          1682              
00001F80  43F9 0000271D           1683              LEA         comma, A1           ; Display space
00001F86  103C 000E               1684              MOVE.B      #14, D0             ; command for trap call to display message
00001F8A  4E4F                    1685              TRAP        #15                 ; trap call
00001F8C                          1686              
00001F8C  1401                    1687              MOVE.B      D1,D2
00001F8E  E642                    1688              ASR         #3,D2
00001F90  C47C 0007               1689              AND         #$07,D2
00001F94  1601                    1690              MOVE.B      D1,D3
00001F96  C67C 0007               1691              AND         #$07,D3
00001F9A  4EB9 000020BE           1692              JSR         printEA         ; Determines the "left" operand register
00001FA0                          1693              
00001FA0  43F9 00002712           1694              LEA         newLine,A1
00001FA6  103C 000E               1695              MOVE.B      #14,D0
00001FAA  4E4F                    1696              TRAP        #15
00001FAC                          1697              
00001FAC  6000 F05E               1698              BRA         LOOP
00001FB0                          1699              
00001FB0                          1700              
00001FB0  43F9 000027AC           1701  opSUBW      LEA         dispWord,A1
00001FB6  103C 000E               1702              MOVE.B      #14,D0
00001FBA  4E4F                    1703              TRAP        #15
00001FBC                          1704              
00001FBC  43F9 00002716           1705              LEA         space, A1           ; Display space
00001FC2  103C 000E               1706              MOVE.B      #14, D0             ; command for trap call to display message
00001FC6  4E4F                    1707              TRAP        #15                 ; trap call
00001FC8                          1708              
00001FC8  4242                    1709              CLR         D2
00001FCA  1401                    1710              MOVE.B      D1,D2
00001FCC  E642                    1711              ASR         #3,D2
00001FCE  C47C 0007               1712              AND         #$07,D2
00001FD2  1601                    1713              MOVE.B      D1,D3
00001FD4  C67C 0007               1714              AND         #$07,D3
00001FD8  4EB9 000020BE           1715              JSR         printEA         ; Determines the "left" operand register
00001FDE                          1716              
00001FDE  43F9 0000271D           1717              LEA         comma, A1           ; Display space
00001FE4  103C 000E               1718              MOVE.B      #14, D0             ; command for trap call to display message
00001FE8  4E4F                    1719              TRAP        #15                 ; trap call
00001FEA                          1720              
00001FEA  4242                    1721              CLR         D2
00001FEC  3601                    1722              MOVE.W      D1,D3
00001FEE  E043                    1723              ASR         #eight,D3
00001FF0  E243                    1724              ASR         #one,D3
00001FF2  C67C 0007               1725              AND         #$07,D3
00001FF6  4EB9 000020BE           1726              JSR         printEA
00001FFC                          1727              
00001FFC  43F9 00002712           1728              LEA         newLine,A1
00002002  103C 000E               1729              MOVE.B      #14,D0
00002006  4E4F                    1730              TRAP        #15
00002008                          1731              
00002008  6000 F002               1732              BRA         LOOP
0000200C                          1733              
0000200C  43F9 000027AF           1734  opSUBL      LEA         dispLong,A1
00002012  103C 000E               1735              MOVE.B      #14,D0
00002016  4E4F                    1736              TRAP        #15
00002018                          1737              
00002018  43F9 00002716           1738              LEA         space, A1           ; Display space
0000201E  103C 000E               1739              MOVE.B      #14, D0             ; command for trap call to display message
00002022  4E4F                    1740              TRAP        #15                 ; trap call
00002024                          1741              
00002024  1401                    1742              MOVE.B      D1,D2
00002026  E642                    1743              ASR         #3,D2
00002028  C47C 0007               1744              AND         #$07,D2
0000202C  1601                    1745              MOVE.B      D1,D3
0000202E  C67C 0007               1746              AND         #$07,D3
00002032  4EB9 000020BE           1747              JSR         printEA         ; Determines the "left" operand register
00002038                          1748              
00002038  43F9 0000271D           1749              LEA         comma, A1           ; Display space
0000203E  103C 000E               1750              MOVE.B      #14, D0             ; command for trap call to display message
00002042  4E4F                    1751              TRAP        #15                 ; trap call
00002044                          1752              
00002044  4242                    1753              CLR         D2
00002046  3601                    1754              MOVE.W      D1,D3
00002048  E043                    1755              ASR         #eight,D3
0000204A  E243                    1756              ASR         #one,D3
0000204C  C67C 0007               1757              AND         #$07,D3
00002050  4EB9 000020BE           1758              JSR         printEA
00002056                          1759              
00002056  43F9 00002712           1760              LEA         newLine,A1
0000205C  103C 000E               1761              MOVE.B      #14,D0
00002060  4E4F                    1762              TRAP        #15
00002062                          1763              
00002062  6000 EFA8               1764              BRA         LOOP            ; trap call
00002066                          1765          
00002066  6000 EFA4               1766              BRA         LOOP
0000206A                          1767          
0000206A  43F9 00002783           1768  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002070  103C 000E               1769          MOVE.B      #14, D0             ; command for trap call to display message
00002074  4E4F                    1770          TRAP        #15                 ; trap call
00002076                          1771  
00002076  43F9 0000279D           1772  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000207C  103C 000E               1773          MOVE.B      #14, D0             ; command for trap call to display message
00002080  4E4F                    1774          TRAP        #15                 ; trap call
00002082                          1775  
00002082  43F9 00002799           1776  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002088  103C 000E               1777          MOVE.B      #14, D0             ; command for trap call to display message
0000208C  4E4F                    1778          TRAP        #15                 ; trap call
0000208E                          1779  
0000208E  43F9 00002795           1780  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00002094  103C 000E               1781          MOVE.B      #14, D0             ; command for trap call to display message
00002098  4E4F                    1782          TRAP        #15                 ; trap call
0000209A                          1783  
0000209A  43F9 00002791           1784  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
000020A0  103C 000E               1785          MOVE.B      #14, D0             ; command for trap call to display message
000020A4  4E4F                    1786          TRAP        #15                 ; trap call
000020A6                          1787  
000020A6  43F9 000027A5           1788  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
000020AC  103C 000E               1789          MOVE.B      #14, D0             ; command for trap call to display message
000020B0  4E4F                    1790          TRAP        #15                 ; trap call
000020B2                          1791  
000020B2  43F9 000027A1           1792  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
000020B8  103C 000E               1793          MOVE.B      #14, D0             ; command for trap call to display message
000020BC  4E4F                    1794          TRAP        #15                 ; trap call
000020BE                          1795  
000020BE                          1796  
000020BE                          1797          
000020BE                          1798  ***********************************************************************************************************
000020BE                          1799  *
000020BE                          1800  *                                           EA Print Check
000020BE                          1801  *
000020BE                          1802  ***********************************************************************************************************
000020BE  48E7 FF7E               1803  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
000020C2                          1804  
000020C2  B43C 0000               1805              CMP.B       #zero, D2
000020C6  6700 002E               1806              BEQ         pDataReg
000020CA  B43C 0001               1807              CMP.B       #one, D2
000020CE  6700 00E6               1808              BEQ         pAddrReg
000020D2  B43C 0002               1809              CMP.B       #two, D2
000020D6  6700 019E               1810              BEQ         pAddrDir
000020DA  B43C 0003               1811              CMP.B       #three, D2
000020DE  6700 02C2               1812              BEQ         pAddrPost
000020E2  B43C 0004               1813              CMP.B       #four, D2
000020E6  6700 0446               1814              BEQ         pAddrDec
000020EA  B43C 0007               1815              CMP.B       #seven, D2
000020EE  6700 0576               1816              BEQ         pHex
000020F2  6000 0614               1817              BRA         invalid
000020F6                          1818  
000020F6                          1819  ***********************************************************************************************************
000020F6                          1820  * Data Register        
000020F6  B63C 0000               1821  pDataReg    CMP.B   #zero,D3
000020FA  6700 003A               1822              BEQ     displayD0
000020FE  B63C 0001               1823              CMP.B   #one,D3
00002102  6700 0042               1824              BEQ     displayD1
00002106  B63C 0002               1825              CMP.B   #two,D3
0000210A  6700 004A               1826              BEQ     displayD2
0000210E  B63C 0003               1827              CMP.B   #three,D3
00002112  6700 0052               1828              BEQ     displayD3
00002116  B63C 0004               1829              CMP.B   #four,D3
0000211A  6700 005A               1830              BEQ     displayD4
0000211E  B63C 0005               1831              CMP.B   #five,D3
00002122  6700 0062               1832              BEQ     displayD5
00002126  B63C 0006               1833              CMP.B   #six,D3
0000212A  6700 006A               1834              BEQ     displayD6
0000212E  B63C 0007               1835              CMP.B   #seven,D3
00002132  6700 0072               1836              BEQ     displayD7
00002136                          1837              
00002136  43F9 000027CC           1838  displayD0   LEA         dispD0, A1          ; Display space
0000213C  103C 000E               1839              MOVE.B      #14, D0             ; command for trap call to display message
00002140  4E4F                    1840              TRAP        #15                 ; trap call
00002142  6000 05C4               1841              BRA         endSUB              ; go to the end of the subroutine
00002146                          1842              
00002146  43F9 000027CF           1843  displayD1   LEA         dispD1, A1          ; Display space
0000214C  103C 000E               1844              MOVE.B      #14, D0             ; command for trap call to display message
00002150  4E4F                    1845              TRAP        #15                 ; trap call
00002152  6000 05B4               1846              BRA         endSUB              ; go to the end of the subroutine
00002156                          1847  
00002156  43F9 000027D2           1848  displayD2   LEA         dispD2, A1          ; Display space
0000215C  103C 000E               1849              MOVE.B      #14, D0             ; command for trap call to display message
00002160  4E4F                    1850              TRAP        #15                 ; trap call
00002162  6000 05A4               1851              BRA         endSUB              ; go to the end of the subroutine
00002166                          1852  
00002166  43F9 000027D5           1853  displayD3   LEA         dispD3, A1          ; Display space
0000216C  103C 000E               1854              MOVE.B      #14, D0             ; command for trap call to display message
00002170  4E4F                    1855              TRAP        #15                 ; trap call
00002172  6000 0594               1856              BRA         endSUB              ; go to the end of the subroutine
00002176                          1857  
00002176  43F9 000027D8           1858  displayD4   LEA         dispD4, A1          ; Display space
0000217C  103C 000E               1859              MOVE.B      #14, D0             ; command for trap call to display message
00002180  4E4F                    1860              TRAP        #15                 ; trap call
00002182  6000 0584               1861              BRA         endSUB              ; go to the end of the subroutine
00002186                          1862  
00002186  43F9 000027DB           1863  displayD5   LEA         dispD5, A1          ; Display space
0000218C  103C 000E               1864              MOVE.B      #14, D0             ; command for trap call to display message
00002190  4E4F                    1865              TRAP        #15                 ; trap call
00002192  6000 0574               1866              BRA         endSUB              ; go to the end of the subroutine
00002196                          1867  
00002196  43F9 000027DE           1868  displayD6   LEA         dispD6, A1          ; Display space
0000219C  103C 000E               1869              MOVE.B      #14, D0             ; command for trap call to display message
000021A0  4E4F                    1870              TRAP        #15                 ; trap call
000021A2  6000 0564               1871              BRA         endSUB              ; go to the end of the subroutine
000021A6                          1872  
000021A6  43F9 000027E1           1873  displayD7   LEA         dispD7, A1          ; Display space
000021AC  103C 000E               1874              MOVE.B      #14, D0             ; command for trap call to display message
000021B0  4E4F                    1875              TRAP        #15                 ; trap call
000021B2  6000 0554               1876              BRA         endSUB              ; go to the end of the subroutine
000021B6                          1877  ***********************************************************************************************************
000021B6                          1878  * Address Register
000021B6  B63C 0000               1879  pAddrReg    CMP.B   #zero,D3
000021BA  6700 003A               1880              BEQ     displayA0
000021BE  B63C 0001               1881              CMP.B   #one,D3
000021C2  6700 0042               1882              BEQ     displayA1
000021C6  B63C 0002               1883              CMP.B   #two,D3
000021CA  6700 004A               1884              BEQ     displayA2
000021CE  B63C 0003               1885              CMP.B   #three,D3
000021D2  6700 0052               1886              BEQ     displayA3
000021D6  B63C 0004               1887              CMP.B   #four,D3
000021DA  6700 005A               1888              BEQ     displayA4
000021DE  B63C 0005               1889              CMP.B   #five,D3
000021E2  6700 0062               1890              BEQ     displayA5
000021E6  B63C 0006               1891              CMP.B   #six,D3
000021EA  6700 006A               1892              BEQ     displayA6
000021EE  B63C 0007               1893              CMP.B   #seven,D3
000021F2  6700 0072               1894              BEQ     displayA7
000021F6                          1895              
000021F6  43F9 000027B2           1896  displayA0   LEA         dispA0, A1          ; Display space
000021FC  103C 000E               1897              MOVE.B      #14, D0             ; command for trap call to display message
00002200  4E4F                    1898              TRAP        #15                 ; trap call
00002202  6000 0504               1899              BRA         endSUB              ; go to the end of the subroutine
00002206                          1900              
00002206  43F9 000027B5           1901  displayA1   LEA         dispA1, A1          ; Display space
0000220C  103C 000E               1902              MOVE.B      #14, D0             ; command for trap call to display message
00002210  4E4F                    1903              TRAP        #15                 ; trap call
00002212  6000 04F4               1904              BRA         endSUB              ; go to the end of the subroutine
00002216                          1905  
00002216  43F9 000027B8           1906  displayA2   LEA         dispA2, A1          ; Display space
0000221C  103C 000E               1907              MOVE.B      #14, D0             ; command for trap call to display message
00002220  4E4F                    1908              TRAP        #15                 ; trap call
00002222  6000 04E4               1909              BRA         endSUB              ; go to the end of the subroutine
00002226                          1910  
00002226  43F9 000027BB           1911  displayA3   LEA         dispA3, A1          ; Display space
0000222C  103C 000E               1912              MOVE.B      #14, D0             ; command for trap call to display message
00002230  4E4F                    1913              TRAP        #15                 ; trap call
00002232  6000 04D4               1914              BRA         endSUB              ; go to the end of the subroutine
00002236                          1915  
00002236  43F9 000027BE           1916  displayA4   LEA         dispA4, A1          ; Display space
0000223C  103C 000E               1917              MOVE.B      #14, D0             ; command for trap call to display message
00002240  4E4F                    1918              TRAP        #15                 ; trap call
00002242  6000 04C4               1919              BRA         endSUB              ; go to the end of the subroutine
00002246                          1920  
00002246  43F9 000027C1           1921  displayA5   LEA         dispA5, A1          ; Display space
0000224C  103C 000E               1922              MOVE.B      #14, D0             ; command for trap call to display message
00002250  4E4F                    1923              TRAP        #15                 ; trap call
00002252  6000 04B4               1924              BRA         endSUB              ; go to the end of the subroutine
00002256                          1925  
00002256  43F9 000027C4           1926  displayA6   LEA         dispA6, A1          ; Display space
0000225C  103C 000E               1927              MOVE.B      #14, D0             ; command for trap call to display message
00002260  4E4F                    1928              TRAP        #15                 ; trap call
00002262  6000 04A4               1929              BRA         endSUB              ; go to the end of the subroutine
00002266                          1930  
00002266  43F9 000027C7           1931  displayA7   LEA         dispA7, A1          ; Display space
0000226C  103C 000E               1932              MOVE.B      #14, D0             ; command for trap call to display message
00002270  4E4F                    1933              TRAP        #15                 ; trap call
00002272  6000 0494               1934              BRA         endSUB              ; go to the end of the subroutine
00002276                          1935  
00002276                          1936  ***********************************************************************************************************
00002276                          1937  * Address Register Direct
00002276                          1938  
00002276  43F9 0000271F           1939  pAddrDir    LEA         opPer, A1           ; Display space
0000227C  103C 000E               1940              MOVE.B      #14, D0             ; command for trap call to display message
00002280  4E4F                    1941              TRAP        #15                 ; trap call
00002282                          1942              
00002282  B63C 0000               1943              CMP.B   #zero,D3
00002286  6700 003A               1944              BEQ     displayA0A
0000228A  B63C 0001               1945              CMP.B   #one,D3
0000228E  6700 004E               1946              BEQ     displayA1A
00002292  B63C 0002               1947              CMP.B   #two,D3
00002296  6700 0062               1948              BEQ     displayA2A
0000229A  B63C 0003               1949              CMP.B   #three,D3
0000229E  6700 0076               1950              BEQ     displayA3A
000022A2  B63C 0004               1951              CMP.B   #four,D3
000022A6  6700 008A               1952              BEQ     displayA4A
000022AA  B63C 0005               1953              CMP.B   #five,D3
000022AE  6700 009E               1954              BEQ     displayA5A
000022B2  B63C 0006               1955              CMP.B   #six,D3
000022B6  6700 00B2               1956              BEQ     displayA6A
000022BA  B63C 0007               1957              CMP.B   #seven,D3
000022BE  6700 00C6               1958              BEQ     displayA7A
000022C2                          1959              
000022C2  43F9 000027B2           1960  displayA0A  LEA         dispA0, A1          ; Display space
000022C8  103C 000E               1961              MOVE.B      #14, D0             ; command for trap call to display message
000022CC  4E4F                    1962              TRAP        #15                 ; trap call
000022CE  43F9 00002721           1963              LEA         clPer, A1           ; Display space
000022D4  103C 000E               1964              MOVE.B      #14, D0             ; command for trap call to display message
000022D8  4E4F                    1965              TRAP        #15                 ; trap call
000022DA  6000 042C               1966              BRA         endSUB              ; go to the end of the subroutine
000022DE                          1967              
000022DE  43F9 000027B5           1968  displayA1A  LEA         dispA1, A1          ; Display space
000022E4  103C 000E               1969              MOVE.B      #14, D0             ; command for trap call to display message
000022E8  4E4F                    1970              TRAP        #15                 ; trap call
000022EA  43F9 00002721           1971              LEA         clPer, A1           ; Display space
000022F0  103C 000E               1972              MOVE.B      #14, D0             ; command for trap call to display message
000022F4  4E4F                    1973              TRAP        #15                 ; trap call
000022F6  6000 0410               1974              BRA         endSUB              ; go to the end of the subroutine
000022FA                          1975  
000022FA  43F9 000027B8           1976  displayA2A  LEA         dispA2, A1          ; Display space
00002300  103C 000E               1977              MOVE.B      #14, D0             ; command for trap call to display message
00002304  4E4F                    1978              TRAP        #15                 ; trap call
00002306  43F9 00002721           1979              LEA         clPer, A1           ; Display space
0000230C  103C 000E               1980              MOVE.B      #14, D0             ; command for trap call to display message
00002310  4E4F                    1981              TRAP        #15                 ; trap call
00002312  6000 03F4               1982              BRA         endSUB              ; go to the end of the subroutine
00002316                          1983  
00002316  43F9 000027BB           1984  displayA3A  LEA         dispA3, A1          ; Display space
0000231C  103C 000E               1985              MOVE.B      #14, D0             ; command for trap call to display message
00002320  4E4F                    1986              TRAP        #15                 ; trap call
00002322  43F9 00002721           1987              LEA         clPer, A1           ; Display space
00002328  103C 000E               1988              MOVE.B      #14, D0             ; command for trap call to display message
0000232C  4E4F                    1989              TRAP        #15                 ; trap call
0000232E  6000 03D8               1990              BRA         endSUB              ; go to the end of the subroutine
00002332                          1991  
00002332  43F9 000027BE           1992  displayA4A  LEA         dispA4, A1          ; Display space
00002338  103C 000E               1993              MOVE.B      #14, D0             ; command for trap call to display message
0000233C  4E4F                    1994              TRAP        #15                 ; trap call
0000233E  43F9 00002721           1995              LEA         clPer, A1           ; Display space
00002344  103C 000E               1996              MOVE.B      #14, D0             ; command for trap call to display message
00002348  4E4F                    1997              TRAP        #15                 ; trap call
0000234A  6000 03BC               1998              BRA         endSUB              ; go to the end of the subroutine
0000234E                          1999  
0000234E  43F9 000027C1           2000  displayA5A  LEA         dispA5, A1          ; Display space
00002354  103C 000E               2001              MOVE.B      #14, D0             ; command for trap call to display message
00002358  4E4F                    2002              TRAP        #15                 ; trap call
0000235A  43F9 00002721           2003              LEA         clPer, A1           ; Display space
00002360  103C 000E               2004              MOVE.B      #14, D0             ; command for trap call to display message
00002364  4E4F                    2005              TRAP        #15                 ; trap call
00002366  6000 03A0               2006              BRA         endSUB              ; go to the end of the subroutine
0000236A                          2007  
0000236A  43F9 000027C4           2008  displayA6A  LEA         dispA6, A1          ; Display space
00002370  103C 000E               2009              MOVE.B      #14, D0             ; command for trap call to display message
00002374  4E4F                    2010              TRAP        #15                 ; trap call
00002376  43F9 00002721           2011              LEA         clPer, A1           ; Display space
0000237C  103C 000E               2012              MOVE.B      #14, D0             ; command for trap call to display message
00002380  4E4F                    2013              TRAP        #15                 ; trap call
00002382  6000 0384               2014              BRA         endSUB              ; go to the end of the subroutine
00002386                          2015  
00002386  43F9 000027C7           2016  displayA7A  LEA         dispA7, A1          ; Display space
0000238C  103C 000E               2017              MOVE.B      #14, D0             ; command for trap call to display message
00002390  4E4F                    2018              TRAP        #15                 ; trap call
00002392  43F9 00002721           2019              LEA         clPer, A1           ; Display space
00002398  103C 000E               2020              MOVE.B      #14, D0             ; command for trap call to display message
0000239C  4E4F                    2021              TRAP        #15                 ; trap call
0000239E  6000 0368               2022              BRA         endSUB              ; go to the end of the subroutine
000023A2                          2023              
000023A2                          2024  ***********************************************************************************************************
000023A2                          2025  * Addr Postincrement
000023A2                          2026              
000023A2  43F9 0000271F           2027  pAddrPost   LEA         opPer, A1           ; Display space
000023A8  103C 000E               2028              MOVE.B      #14, D0             ; command for trap call to display message
000023AC  4E4F                    2029              TRAP        #15                 ; trap call
000023AE                          2030              
000023AE  B63C 0000               2031              CMP.B   #zero,D3
000023B2  6700 003A               2032              BEQ     displayA0P
000023B6  B63C 0001               2033              CMP.B   #one,D3
000023BA  6700 005A               2034              BEQ     displayA1P
000023BE  B63C 0002               2035              CMP.B   #two,D3
000023C2  6700 007A               2036              BEQ     displayA2P
000023C6  B63C 0003               2037              CMP.B   #three,D3
000023CA  6700 009A               2038              BEQ     displayA3P
000023CE  B63C 0004               2039              CMP.B   #four,D3
000023D2  6700 00BA               2040              BEQ     displayA4P
000023D6  B63C 0005               2041              CMP.B   #five,D3
000023DA  6700 00DA               2042              BEQ     displayA5P
000023DE  B63C 0006               2043              CMP.B   #six,D3
000023E2  6700 00FA               2044              BEQ     displayA6P
000023E6  B63C 0007               2045              CMP.B   #seven,D3
000023EA  6700 011A               2046              BEQ     displayA7P
000023EE                          2047              
000023EE  43F9 000027B2           2048  displayA0P  LEA         dispA0, A1          ; Display space
000023F4  103C 000E               2049              MOVE.B      #14, D0             ; command for trap call to display message
000023F8  4E4F                    2050              TRAP        #15                 ; trap call
000023FA  43F9 00002721           2051              LEA         clPer, A1           ; Display space
00002400  103C 000E               2052              MOVE.B      #14, D0             ; command for trap call to display message
00002404  4E4F                    2053              TRAP        #15                 ; trap call
00002406  43F9 00002725           2054              LEA         inc, A1             ; Display space
0000240C  103C 000E               2055              MOVE.B      #14, D0             ; command for trap call to display message
00002410  4E4F                    2056              TRAP        #15                 ; trap call
00002412  6000 02F4               2057              BRA         endSUB              ; go to the end of the subroutine
00002416                          2058              
00002416  43F9 000027B5           2059  displayA1P  LEA         dispA1, A1          ; Display space
0000241C  103C 000E               2060              MOVE.B      #14, D0             ; command for trap call to display message
00002420  4E4F                    2061              TRAP        #15                 ; trap call
00002422  43F9 00002721           2062              LEA         clPer, A1           ; Display space
00002428  103C 000E               2063              MOVE.B      #14, D0             ; command for trap call to display message
0000242C  4E4F                    2064              TRAP        #15                 ; trap call
0000242E  43F9 00002725           2065              LEA         inc, A1             ; Display space
00002434  103C 000E               2066              MOVE.B      #14, D0             ; command for trap call to display message
00002438  4E4F                    2067              TRAP        #15                 ; trap call
0000243A  6000 02CC               2068              BRA         endSUB              ; go to the end of the subroutine
0000243E                          2069  
0000243E  43F9 000027B8           2070  displayA2P  LEA         dispA2, A1          ; Display space
00002444  103C 000E               2071              MOVE.B      #14, D0             ; command for trap call to display message
00002448  4E4F                    2072              TRAP        #15                 ; trap call
0000244A  43F9 00002721           2073              LEA         clPer, A1           ; Display space
00002450  103C 000E               2074              MOVE.B      #14, D0             ; command for trap call to display message
00002454  4E4F                    2075              TRAP        #15                 ; trap call
00002456  43F9 00002725           2076              LEA         inc, A1             ; Display space
0000245C  103C 000E               2077              MOVE.B      #14, D0             ; command for trap call to display message
00002460  4E4F                    2078              TRAP        #15                 ; trap call
00002462  6000 02A4               2079              BRA         endSUB              ; go to the end of the subroutine
00002466                          2080  
00002466  43F9 000027BB           2081  displayA3P  LEA         dispA3, A1          ; Display space
0000246C  103C 000E               2082              MOVE.B      #14, D0             ; command for trap call to display message
00002470  4E4F                    2083              TRAP        #15                 ; trap call
00002472  43F9 00002721           2084              LEA         clPer, A1           ; Display space
00002478  103C 000E               2085              MOVE.B      #14, D0             ; command for trap call to display message
0000247C  4E4F                    2086              TRAP        #15                 ; trap call
0000247E  43F9 00002725           2087              LEA         inc, A1             ; Display space
00002484  103C 000E               2088              MOVE.B      #14, D0             ; command for trap call to display message
00002488  4E4F                    2089              TRAP        #15                 ; trap call
0000248A  6000 027C               2090              BRA         endSUB              ; go to the end of the subroutine
0000248E                          2091  
0000248E  43F9 000027BE           2092  displayA4P  LEA         dispA4, A1          ; Display space
00002494  103C 000E               2093              MOVE.B      #14, D0             ; command for trap call to display message
00002498  4E4F                    2094              TRAP        #15                 ; trap call
0000249A  43F9 00002721           2095              LEA         clPer, A1           ; Display space
000024A0  103C 000E               2096              MOVE.B      #14, D0             ; command for trap call to display message
000024A4  4E4F                    2097              TRAP        #15                 ; trap call
000024A6  43F9 00002725           2098              LEA         inc, A1             ; Display space
000024AC  103C 000E               2099              MOVE.B      #14, D0             ; command for trap call to display message
000024B0  4E4F                    2100              TRAP        #15                 ; trap call
000024B2  6000 0254               2101              BRA         endSUB              ; go to the end of the subroutine
000024B6                          2102  
000024B6  43F9 000027C1           2103  displayA5P  LEA         dispA5, A1          ; Display space
000024BC  103C 000E               2104              MOVE.B      #14, D0             ; command for trap call to display message
000024C0  4E4F                    2105              TRAP        #15                 ; trap call
000024C2  43F9 00002721           2106              LEA         clPer, A1           ; Display space
000024C8  103C 000E               2107              MOVE.B      #14, D0             ; command for trap call to display message
000024CC  4E4F                    2108              TRAP        #15                 ; trap call
000024CE  43F9 00002725           2109              LEA         inc, A1             ; Display space
000024D4  103C 000E               2110              MOVE.B      #14, D0             ; command for trap call to display message
000024D8  4E4F                    2111              TRAP        #15                 ; trap call
000024DA  6000 022C               2112              BRA         endSUB              ; go to the end of the subroutine
000024DE                          2113  
000024DE  43F9 000027C4           2114  displayA6P  LEA         dispA6, A1          ; Display space
000024E4  103C 000E               2115              MOVE.B      #14, D0             ; command for trap call to display message
000024E8  4E4F                    2116              TRAP        #15                 ; trap call
000024EA  43F9 00002721           2117              LEA         clPer, A1           ; Display space
000024F0  103C 000E               2118              MOVE.B      #14, D0             ; command for trap call to display message
000024F4  4E4F                    2119              TRAP        #15                 ; trap call
000024F6  43F9 00002725           2120              LEA         inc, A1             ; Display space
000024FC  103C 000E               2121              MOVE.B      #14, D0             ; command for trap call to display message
00002500  4E4F                    2122              TRAP        #15                 ; trap call
00002502  6000 0204               2123              BRA         endSUB              ; go to the end of the subroutine
00002506                          2124  
00002506  43F9 000027C7           2125  displayA7P  LEA         dispA7, A1          ; Display space
0000250C  103C 000E               2126              MOVE.B      #14, D0             ; command for trap call to display message
00002510  4E4F                    2127              TRAP        #15                 ; trap call
00002512  43F9 00002721           2128              LEA         clPer, A1           ; Display space
00002518  103C 000E               2129              MOVE.B      #14, D0             ; command for trap call to display message
0000251C  4E4F                    2130              TRAP        #15                 ; trap call
0000251E  43F9 00002725           2131              LEA         inc, A1             ; Display space
00002524  103C 000E               2132              MOVE.B      #14, D0             ; command for trap call to display message
00002528  4E4F                    2133              TRAP        #15                 ; trap call
0000252A  6000 01DC               2134              BRA         endSUB              ; go to the end of the subroutine
0000252E                          2135  
0000252E                          2136  ***********************************************************************************************************
0000252E                          2137  * Addr Postdecrement
0000252E                          2138  
0000252E  43F9 00002723           2139  pAddrDec    LEA         dec, A1             ; Display space
00002534  103C 000E               2140              MOVE.B      #14, D0             ; command for trap call to display message
00002538  4E4F                    2141              TRAP        #15                 ; trap call
0000253A                          2142              
0000253A  43F9 0000271F           2143              LEA         opPer, A1           ; Display space
00002540  103C 000E               2144              MOVE.B      #14, D0             ; command for trap call to display message
00002544  4E4F                    2145              TRAP        #15                 ; trap call
00002546                          2146              
00002546  B63C 0000               2147              CMP.B   #zero,D3
0000254A  6700 003A               2148              BEQ     displayA0D
0000254E  B63C 0001               2149              CMP.B   #one,D3
00002552  6700 004E               2150              BEQ     displayA1D
00002556  B63C 0002               2151              CMP.B   #two,D3
0000255A  6700 0062               2152              BEQ     displayA2D
0000255E  B63C 0003               2153              CMP.B   #three,D3
00002562  6700 0076               2154              BEQ     displayA3D
00002566  B63C 0004               2155              CMP.B   #four,D3
0000256A  6700 008A               2156              BEQ     displayA4D
0000256E  B63C 0005               2157              CMP.B   #five,D3
00002572  6700 009E               2158              BEQ     displayA5D
00002576  B63C 0006               2159              CMP.B   #six,D3
0000257A  6700 00B2               2160              BEQ     displayA6D
0000257E  B63C 0007               2161              CMP.B   #seven,D3
00002582  6700 00C6               2162              BEQ     displayA7D
00002586                          2163              
00002586  43F9 000027B2           2164  displayA0D  LEA         dispA0, A1          ; Display space
0000258C  103C 000E               2165              MOVE.B      #14, D0             ; command for trap call to display message
00002590  4E4F                    2166              TRAP        #15                 ; trap call
00002592  43F9 00002721           2167              LEA         clPer, A1           ; Display space
00002598  103C 000E               2168              MOVE.B      #14, D0             ; command for trap call to display message
0000259C  4E4F                    2169              TRAP        #15                 ; trap call
0000259E  6000 0168               2170              BRA         endSUB              ; go to the end of the subroutine
000025A2                          2171              
000025A2  43F9 000027B5           2172  displayA1D  LEA         dispA1, A1          ; Display space
000025A8  103C 000E               2173              MOVE.B      #14, D0             ; command for trap call to display message
000025AC  4E4F                    2174              TRAP        #15                 ; trap call
000025AE  43F9 00002721           2175              LEA         clPer, A1           ; Display space
000025B4  103C 000E               2176              MOVE.B      #14, D0             ; command for trap call to display message
000025B8  4E4F                    2177              TRAP        #15                 ; trap call
000025BA  6000 014C               2178              BRA         endSUB              ; go to the end of the subroutine
000025BE                          2179  
000025BE  43F9 000027B8           2180  displayA2D  LEA         dispA2, A1          ; Display space
000025C4  103C 000E               2181              MOVE.B      #14, D0             ; command for trap call to display message
000025C8  4E4F                    2182              TRAP        #15                 ; trap call
000025CA  43F9 00002721           2183              LEA         clPer, A1           ; Display space
000025D0  103C 000E               2184              MOVE.B      #14, D0             ; command for trap call to display message
000025D4  4E4F                    2185              TRAP        #15                 ; trap call
000025D6  6000 0130               2186              BRA         endSUB              ; go to the end of the subroutine
000025DA                          2187  
000025DA  43F9 000027BB           2188  displayA3D  LEA         dispA3, A1          ; Display space
000025E0  103C 000E               2189              MOVE.B      #14, D0             ; command for trap call to display message
000025E4  4E4F                    2190              TRAP        #15                 ; trap call
000025E6  43F9 00002721           2191              LEA         clPer, A1           ; Display space
000025EC  103C 000E               2192              MOVE.B      #14, D0             ; command for trap call to display message
000025F0  4E4F                    2193              TRAP        #15                 ; trap call
000025F2  6000 0114               2194              BRA         endSUB              ; go to the end of the subroutine
000025F6                          2195  
000025F6  43F9 000027BE           2196  displayA4D  LEA         dispA4, A1          ; Display space
000025FC  103C 000E               2197              MOVE.B      #14, D0             ; command for trap call to display message
00002600  4E4F                    2198              TRAP        #15                 ; trap call
00002602  43F9 00002721           2199              LEA         clPer, A1           ; Display space
00002608  103C 000E               2200              MOVE.B      #14, D0             ; command for trap call to display message
0000260C  4E4F                    2201              TRAP        #15                 ; trap call
0000260E  6000 00F8               2202              BRA         endSUB              ; go to the end of the subroutine
00002612                          2203  
00002612  43F9 000027C1           2204  displayA5D  LEA         dispA5, A1          ; Display space
00002618  103C 000E               2205              MOVE.B      #14, D0             ; command for trap call to display message
0000261C  4E4F                    2206              TRAP        #15                 ; trap call
0000261E  43F9 00002721           2207              LEA         clPer, A1           ; Display space
00002624  103C 000E               2208              MOVE.B      #14, D0             ; command for trap call to display message
00002628  4E4F                    2209              TRAP        #15                 ; trap call
0000262A  6000 00DC               2210              BRA         endSUB              ; go to the end of the subroutine
0000262E                          2211  
0000262E  43F9 000027C4           2212  displayA6D  LEA         dispA6, A1          ; Display space
00002634  103C 000E               2213              MOVE.B      #14, D0             ; command for trap call to display message
00002638  4E4F                    2214              TRAP        #15                 ; trap call
0000263A  43F9 00002721           2215              LEA         clPer, A1           ; Display space
00002640  103C 000E               2216              MOVE.B      #14, D0             ; command for trap call to display message
00002644  4E4F                    2217              TRAP        #15                 ; trap call
00002646  6000 00C0               2218              BRA         endSUB              ; go to the end of the subroutine
0000264A                          2219  
0000264A  43F9 000027C7           2220  displayA7D  LEA         dispA7, A1          ; Display space
00002650  103C 000E               2221              MOVE.B      #14, D0             ; command for trap call to display message
00002654  4E4F                    2222              TRAP        #15                 ; trap call
00002656  43F9 00002721           2223              LEA         clPer, A1           ; Display space
0000265C  103C 000E               2224              MOVE.B      #14, D0             ; command for trap call to display message
00002660  4E4F                    2225              TRAP        #15                 ; trap call
00002662  6000 00A4               2226              BRA         endSUB              ; go to the end of the subroutine
00002666                          2227  
00002666                          2228  
00002666                          2229  ***********************************************************************************************************
00002666                          2230  * Absolute Address
00002666  B63C 0000               2231  pHex        CMP.B       #zero, D3
0000266A  6700 0012               2232              BEQ         AbsShort
0000266E  B63C 0001               2233              CMP.B       #one, D3
00002672  6700 003C               2234              BEQ         AbsLong
00002676  B63C 0004               2235              CMP.B       #four, D3
0000267A  6700 0066               2236              BEQ         DispImm
0000267E                          2237              
0000267E  43F9 0000271F           2238  AbsShort    LEA         opPer, A1           ; Display space
00002684  103C 000E               2239              MOVE.B      #14, D0             ; command for trap call to display message
00002688  4E4F                    2240              TRAP        #15                 ; trap call
0000268A                          2241              
0000268A  43F9 0000271B           2242              LEA         dispHex, A1         ; Display space
00002690  103C 000E               2243              MOVE.B      #14, D0             ; command for trap call to display message
00002694  4E4F                    2244              TRAP        #15                 ; trap call
00002696                          2245              
00002696  4241                    2246              CLR         D1
00002698  3218                    2247              MOVE.W      (A0)+, D1
0000269A                          2248              
0000269A  103C 0003               2249              MOVE.B      #3, D0
0000269E  4E4F                    2250              TRAP        #15
000026A0                          2251              
000026A0  43F9 00002721           2252              LEA         clPer, A1           ; Display space
000026A6  103C 000E               2253              MOVE.B      #14, D0             ; command for trap call to display message
000026AA  4E4F                    2254              TRAP        #15                 ; trap call
000026AC                          2255              
000026AC  6000 005A               2256              BRA         endSub
000026B0                          2257              
000026B0  43F9 0000271F           2258  AbsLong     LEA         opPer, A1           ; Display space
000026B6  103C 000E               2259              MOVE.B      #14, D0             ; command for trap call to display message
000026BA  4E4F                    2260              TRAP        #15                 ; trap call
000026BC                          2261              
000026BC  43F9 0000271B           2262              LEA         dispHex, A1         ; Display space
000026C2  103C 000E               2263              MOVE.B      #14, D0             ; command for trap call to display message
000026C6  4E4F                    2264              TRAP        #15                 ; trap call
000026C8                          2265              
000026C8  4241                    2266              CLR         D1
000026CA  2218                    2267              MOVE.L      (A0)+, D1
000026CC                          2268              
000026CC  103C 0003               2269              MOVE.B      #3, D0
000026D0  4E4F                    2270              TRAP        #15
000026D2                          2271              
000026D2  43F9 00002721           2272              LEA         clPer, A1           ; Display space
000026D8  103C 000E               2273              MOVE.B      #14, D0             ; command for trap call to display message
000026DC  4E4F                    2274              TRAP        #15                 ; trap call
000026DE                          2275              
000026DE  6000 0028               2276              BRA         endSub
000026E2                          2277  
000026E2  43F9 00002719           2278  DispImm     LEA         hashTag, A1         ; Display space
000026E8  103C 000E               2279              MOVE.B      #14, D0             ; command for trap call to display message
000026EC  4E4F                    2280              TRAP        #15                 ; trap call
000026EE                          2281              
000026EE  4241                    2282              CLR         D1
000026F0  3218                    2283              MOVE.W      (A0)+, D1
000026F2                          2284  
000026F2  43F9 0000271B           2285              LEA         dispHex, A1         ; Display space
000026F8  103C 000E               2286              MOVE.B      #14, D0             ; command for trap call to display message
000026FC  4E4F                    2287              TRAP        #15                 ; trap call
000026FE                          2288              
000026FE  103C 0003               2289              MOVE.B      #3, D0
00002702  4E4F                    2290              TRAP        #15
00002704                          2291  
00002704  6000 0002               2292              BRA         endSub
00002708                          2293  
00002708                          2294  invalid
00002708                          2295  
00002708                          2296  endSUB
00002708                          2297          
00002708  4CDF 7EFF               2298          MOVEM.L  (SP)+, D0-D7/A1-A6
0000270C  4E75                    2299          RTS
0000270E                          2300  
0000270E                          2301  ***********************************************************************************************************
0000270E                          2302  ***********************************************************************************************************
0000270E                          2303  ***********************************************************************************************************
0000270E                          2304  
0000270E                          2305  printInvalid
0000270E                          2306  endPROG    
0000270E                          2307  
0000270E  FFFF FFFF               2308      SIMHALT                             ; halt simulator
00002712                          2309  
00002712= 20 0D 0A 00             2310  newLine     DC.B    ' ', CR, LF, 0
00002716= 20 20 00                2311  space       DC.B    '  ', 0
00002719                          2312  
00002719= 23 00                   2313  hashTag     DC.B    '#', 0
0000271B= 24 00                   2314  dispHex     DC.B    '$', 0
0000271D= 2C 00                   2315  comma       DC.B    ',', 0
0000271F                          2316  
0000271F= 28 00                   2317  opPer       DC.B    '(', 0
00002721= 29 00                   2318  clPer       DC.B    ')', 0
00002723= 2D 00                   2319  dec         DC.B    '-', 0
00002725= 2B 00                   2320  inc         DC.B    '+', 0
00002727                          2321  
00002727= 4F 52 49 00             2322  ORImatch    DC.B    'ORI', 0
0000272B= 43 4D 50 49 00          2323  CMPImatch   DC.B    'CMPI', 0
00002730= 42 43 4C 52 00          2324  BCLRmatch   DC.B    'BCLR', 0
00002735= 4D 4F 56 45 00          2325  MOVEmatch   DC.B    'MOVE', 0
0000273A= 4D 4F 56 45 41 00       2326  MOVEAmatch  DC.B    'MOVEA', 0
00002740= 4E 45 47 00             2327  NEGmatch    DC.B    'NEG', 0
00002744= 52 54 53 00             2328  RTSmatch    DC.B    'RTS', 0
00002748= 4A 53 52 00             2329  JSRmatch    DC.B    'JSR', 0
0000274C= 4D 4F 56 45 4D 00       2330  MOVEMmatch  DC.B    'MOVEM', 0
00002752= 4C 45 41 00             2331  LEAmatch    DC.B    'LEA', 0
00002756= 53 55 42 51 00          2332  SUBQmatch   DC.B    'SUBQ', 0
0000275B= 42 52 41 00             2333  BRAmatch    DC.B    'BRA', 0
0000275F= 42 43 53 00             2334  BCSmatch    DC.B    'BCS', 0
00002763= 42 56 43 00             2335  BVCmatch    DC.B    'BVC', 0
00002767= 42 47 45 00             2336  BGEmatch    DC.B    'BGE', 0
0000276B= 42 4C 54 00             2337  BLTmatch    DC.B    'BLT', 0
0000276F= 44 49 56 53 00          2338  DIVSmatch   DC.B    'DIVS', 0
00002774= 4F 52 00                2339  ORmatch     DC.B    'OR', 0
00002777= 53 55 42 00             2340  SUBmatch    DC.B    'SUB', 0
0000277B= 45 4F 52 00             2341  EORmatch    DC.B    'EOR', 0
0000277F= 43 4D 50 00             2342  CMPmatch    DC.B    'CMP', 0
00002783= 4D 55 4C 53 00          2343  MULSmatch   DC.B    'MULS', 0
00002788= 41 44 44 00             2344  ADDmatch    DC.B    'ADD', 0
0000278C= 41 44 44 41 00          2345  ADDAmatch   DC.B    'ADDA', 0
00002791= 4C 53 52 00             2346  LSRmatch    DC.B    'LSR', 0
00002795= 4C 53 4C 00             2347  LSLmatch    DC.B    'LSL', 0
00002799= 41 53 52 00             2348  ASRmatch    DC.B    'ASR', 0
0000279D= 41 53 4C 00             2349  ASLmatch    DC.B    'ASL', 0
000027A1= 52 4F 52 00             2350  RORmatch    DC.B    'ROR', 0
000027A5= 52 4F 4C 00             2351  ROLmatch    DC.B    'ROL', 0
000027A9                          2352   
000027A9= 2E 42 00                2353  dispByte    DC.B    '.B', 0
000027AC= 2E 57 00                2354  dispWord    DC.B    '.W', 0
000027AF= 2E 4C 00                2355  dispLong    DC.B    '.L', 0
000027B2                          2356  
000027B2= 41 30 00                2357  dispA0      DC.B    'A0', 0
000027B5= 41 31 00                2358  dispA1      DC.B    'A1', 0
000027B8= 41 32 00                2359  dispA2      DC.B    'A2', 0
000027BB= 41 33 00                2360  dispA3      DC.B    'A3', 0
000027BE= 41 34 00                2361  dispA4      DC.B    'A4', 0
000027C1= 41 35 00                2362  dispA5      DC.B    'A5', 0
000027C4= 41 36 00                2363  dispA6      DC.B    'A6', 0
000027C7= 41 37 00                2364  dispA7      DC.B    'A7', 0
000027CA                          2365  
000027CA= 44 00                   2366  dispD       DC.B    'D',0
000027CC= 44 30 00                2367  dispD0      DC.B    'D0', 0
000027CF= 44 31 00                2368  dispD1      DC.B    'D1', 0
000027D2= 44 32 00                2369  dispD2      DC.B    'D2', 0
000027D5= 44 33 00                2370  dispD3      DC.B    'D3', 0
000027D8= 44 34 00                2371  dispD4      DC.B    'D4', 0
000027DB= 44 35 00                2372  dispD5      DC.B    'D5', 0
000027DE= 44 36 00                2373  dispD6      DC.B    'D6', 0
000027E1= 44 37 00                2374  dispD7      DC.B    'D7', 0  
000027E4                          2375             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             26B0
ABSSHORT            267E
ADDAMATCH           278C
ADDMATCH            2788
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            279D
ASRMATCH            2799
BCLRMATCH           2730
BCSMATCH            275F
BGEMATCH            2767
BLTMATCH            276B
BRAEIGHT            110E
BRAELEVEN           112C
BRAFIVE             10DE
BRAFOUR             10C2
BRAFOURTEEN         114A
BRAMATCH            275B
BRANINE             1128
BRAONE              10B6
BRASIX              10E2
BRATHIRTEEN         114A
BRATHREE            10BE
BRATWELVE           1146
BRATWO              10BA
BRAZERO             1086
BVCMATCH            2763
CLPER               2721
CMPIMATCH           272B
CMPMATCH            277F
COMMA               271D
CR                  D
DEC                 2723
DISPA0              27B2
DISPA1              27B5
DISPA2              27B8
DISPA3              27BB
DISPA4              27BE
DISPA5              27C1
DISPA6              27C4
DISPA7              27C7
DISPBYTE            27A9
DISPD               27CA
DISPD0              27CC
DISPD1              27CF
DISPD2              27D2
DISPD3              27D5
DISPD4              27D8
DISPD5              27DB
DISPD6              27DE
DISPD7              27E1
DISPHEX             271B
DISPIMM             26E2
DISPLAYA0           21F6
DISPLAYA0A          22C2
DISPLAYA0D          2586
DISPLAYA0P          23EE
DISPLAYA1           2206
DISPLAYA1A          22DE
DISPLAYA1D          25A2
DISPLAYA1P          2416
DISPLAYA2           2216
DISPLAYA2A          22FA
DISPLAYA2D          25BE
DISPLAYA2P          243E
DISPLAYA3           2226
DISPLAYA3A          2316
DISPLAYA3D          25DA
DISPLAYA3P          2466
DISPLAYA4           2236
DISPLAYA4A          2332
DISPLAYA4D          25F6
DISPLAYA4P          248E
DISPLAYA5           2246
DISPLAYA5A          234E
DISPLAYA5D          2612
DISPLAYA5P          24B6
DISPLAYA6           2256
DISPLAYA6A          236A
DISPLAYA6D          262E
DISPLAYA6P          24DE
DISPLAYA7           2266
DISPLAYA7A          2386
DISPLAYA7D          264A
DISPLAYA7P          2506
DISPLAYD0           2136
DISPLAYD1           2146
DISPLAYD2           2156
DISPLAYD3           2166
DISPLAYD4           2176
DISPLAYD5           2186
DISPLAYD6           2196
DISPLAYD7           21A6
DISPLONG            27AF
DISPWORD            27AC
DIVSMATCH           276F
EIGHT               8
ELEVEN              B
ENDPROG             270E
ENDSUB              2708
EORMATCH            277B
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             2719
INC                 2725
INVALID             2708
JSRMATCH            2748
LEAMATCH            2752
LF                  A
LOOP                100C
LSLMATCH            2795
LSRMATCH            2791
MOVEAMATCH          273A
MOVEMATCH           2735
MOVEMMATCH          274C
MULSMATCH           2783
NEGMATCH            2740
NEWLINE             2712
NINE                9
ONE                 1
OPASL               2076
OPASR               2082
OPBCC               117E
OPBCLR              1888
OPBCS               1EE0
OPBGE               1EF8
OPBLT               1F04
OPBRA               1EA8
OPBVC               1EEC
OPCMP               1482
OPCMPB              14B4
OPCMPI              1716
OPCMPIB             1762
OPCMPIL             1826
OPCMPIW             17C4
OPCMPL              1568
OPCMPW              150E
OPDIVS              12D6
OPDYNBCLR           18EC
OPEOR               1334
OPEORB              1362
OPEORL              1422
OPEORW              13C2
OPJSR               1CDA
OPLEA               1D6A
OPLSL               208E
OPLSR               209A
OPMOVEAL            1A6E
OPMOVEAW            1B68
OPMOVEB             195A
OPMOVEL             19DE
OPMOVEM             1D52
OPMOVEMLEA          1D36
OPMOVEW             1AD8
OPMULS              206A
OPNEG               1BD2
OPNEGB              1C00
OPNEGL              1C40
OPNEGW              1C80
OPOR                1184
OPORB               11C2
OPORI               15C2
OPORIB              15F0
OPORIL              16B4
OPORIW              1652
OPORL               1278
OPORW               121C
OPPER               271F
OPROL               20A6
OPROR               20B2
OPRTS               1D1A
OPRTSJSR            1CC0
OPSUB               1F10
OPSUBB              1F56
OPSUBL              200C
OPSUBQ              1D6A
OPSUBQB             1D98
OPSUBQL             1E4E
OPSUBQW             1DF2
OPSUBW              1FB0
ORIMATCH            2727
ORMATCH             2774
PADDRDEC            252E
PADDRDIR            2276
PADDRPOST           23A2
PADDRREG            21B6
PDATAREG            20F6
PHEX                2666
PRINTEA             20BE
PRINTINVALID        270E
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
ROLMATCH            27A5
RORMATCH            27A1
RTSMATCH            2744
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               2716
START               1000
SUBMATCH            2777
SUBQMATCH           2756
TEST_END            3009
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
