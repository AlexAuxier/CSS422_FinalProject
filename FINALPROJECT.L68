00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 12/6/2014 9:21:24 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =00003009                 11  test_end    EQU     $00003009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000  =0000000F                 27  fifteen     EQU     $0F         ; defined hex value 15
00000000                            28  
00000000  =00000000                 29  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 30  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 31  s1L         EQU     %0010       ; long size 1
00000000                            32              
00000000  =00000000                 33  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 34  s2L         EQU     %0001       ; long size 2
00000000                            35  
00000000  =00000001                 36  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 37  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 38  s3L         EQU     %0010       ; long size 3
00000000                            39  
00000000  =00000000                 40  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 41  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 42  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 43  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 44  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 45  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            46  
00000000  =00000000                 47  reg0        EQU     %0000       ; register 0
00000000  =00000001                 48  reg1        EQU     %0001       ; register 1
00000000  =00000002                 49  reg2        EQU     %0010       ; register 2
00000000  =00000003                 50  reg3        EQU     %0011       ; register 3
00000000  =00000004                 51  reg4        EQU     %0100       ; register 4
00000000  =00000005                 52  reg5        EQU     %0101       ; register 5
00000000  =00000006                 53  reg6        EQU     %0110       ; register 6
00000000  =00000007                 54  reg7        EQU     %0111       ; register 7
00000000                            55  
00000000  =00000000                 56  mask0       EQU     %00000000
00000000  =00000001                 57  mask1       EQU     %00000001
00000000  =00000002                 58  mask2       EQU     %00000010
00000000  =00000004                 59  mask3       EQU     %00000100
00000000  =00000008                 60  mask4       EQU     %00001000
00000000  =00000010                 61  mask5       EQU     %00010000
00000000  =00000020                 62  mask6       EQU     %00100000
00000000  =00000040                 63  mask7       EQU     %01000000
00000000  =00000080                 64  mask8       EQU     %10000000
00000000                            65  
00000000  =00000005                 66  maskA       EQU     %00000101
00000000  =0000000A                 67  maskB       EQU     %00001010
00000000  =00000014                 68  maskC       EQU     %00010100
00000000  =00000028                 69  maskD       EQU     %00101000
00000000  =00000050                 70  maskE       EQU     %01010000
00000000  =000000A0                 71  maskF       EQU     %10100000
00000000                            72  
00000000                            73  
00000000  =000000F0                 74  firstNib    EQU     $F0
00000000  =0000000F                 75  secNib      EQU     $0F
00000000                            76               
00001000                            77              ORG    $1000
00001000                            78  START:                                  ; first instruction of program
00001000                            79        
00001000  207C 00003000             80          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00003009             81          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            82            
0000100C  4241                      83  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      84          CLR         D2                  ; clear out D2
00001010  B1CA                      85          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 1626                 86          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      87          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      88          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      89          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            90          
0000101C  B43C 0000                 91          CMP.B       #zero, D2           ; compare with 0
00001020  6700 006E                 92          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 93          CMP.B       #one, D2            ; compare with 1
00001028  6700 0096                 94          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 95          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0092                 96          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 97          CMP.B       #three, D2          ; compare with 3
00001038  6700 008E                 98          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 99          CMP.B       #four, D2           ; compare with 4
00001040  6700 008A                100          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                101          CMP.B       #five, D2           ; compare with 5
00001048  6700 009E                102          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                103          CMP.B       #six, D2            ; compare with 6
00001050  6700 009A                104          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                105          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00BE                106          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                107          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00B6                108          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                109          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00B2                110          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                111          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00AA                112          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                113          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 00A6                114          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                115          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 009E                116          BEQ         braFourteen         ; branch out to fourteen method
00001084  B43C 000F                117          CMP.B       #fifteen,D2
00001088  6700 15B0                118          BEQ         endProg
0000108C  6000 FF7E                119          BRA         loop
00001090                           120  
00001090  4242                     121  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001092  1401                     122          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001094  C43C 000F                123          AND.B       #secNib, D2             ; set first nibble to 0
00001098                           124   
00001098  B43C 0000                125          CMP.B       #zero, D2           ; compare second nibble to 0
0000109C  6700 00B6                126          BEQ         opORI               ; branch to ORI method
000010A0  B43C 000C                127          CMP.B       #twelve, D2         ; compare second nibble to 12
000010A4  6700 0202                128          BEQ         opCMPI              ; branch to CMPI method
000010A8  B43C 0008                129          CMP.B       #eight,D2           ; Test for static BCLR
000010AC  6700 036C                130          BEQ         opBCLR
000010B0  C47C 0001                131          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010B4  B43C 0001                132          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010B8  6700 03C4                133          BEQ         opDynBCLR
000010BC  6000 157C                134          BRA         printInvalid
000010C0                           135          
000010C0                           136          
000010C0  6000 042A                137  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010C4                           138  
000010C4  6000 04AA                139  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010C8                           140  
000010C8                           141  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010C8                           142  
000010C8  6000 05A0                143          BRA         opMOVEW
000010CC                           144  
000010CC  4242                     145  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010CE  1401                     146          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010D0  C43C 000F                147          AND.B       #secNib, D2             ; set first nibble to 0
000010D4                           148   
000010D4  B43C 0004                149          CMP.B       #four, D2           ; compare second nibble to 4
000010D8  6700 068A                150          BEQ         opNEG               ; branch to NEG method
000010DC  B43C 000E                151          CMP.B       #fourteen, D2       ; compare second nibble to E
000010E0  6700 0770                152          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010E4  6000 07E2                153          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010E8                           154  
000010E8  6000 0904                155  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010EC                           156  
000010EC  4242                     157  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010EE  1401                     158          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010F0  C438 000F                159          AND.B       $0F, D2             ; set first nibble to 0
000010F4                           160   
000010F4  B43C 0000                161          CMP.B       #zero, D2           ; compare second nibble to 0
000010F8  6700 0900                162          BEQ         opBRA               ; branch to BRA method
000010FC  B43C 0005                163          CMP.B       #five, D2           ; compare second nibble to 5
00001100  6700 0910                164          BEQ         opBCS               ; branch to BCS method
00001104  B43C 0008                165          CMP.B       #eight, D2          ; compare second nibble to 8
00001108  6700 0914                166          BEQ         opBVC               ; branch to BCS method
0000110C  B43C 000C                167          CMP.B       #twelve, D2         ; compare second nibble to 12
00001110  6700 0918                168          BEQ         opBGE               ; branch to BGE method
00001114  6000 0920                169          BRA         opBLT               ; otherwise, branch to BLT method
00001118                           170  
00001118                           171  braEight    ; there are two opCodes available DIVS, or OR
00001118                           172  
00001118  6000 0928                173  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000111C                           174  
0000111C                           175  braEleven   ; there are two opCodes available EOR, or CMP
0000111C                           176  
0000111C  6000 0930                177  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
00001120                           178    
00001120                           179  braThirteen ; there are two opCodes available ADD, or ADDA
00001120                           180  
00001120  4242                     181  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
00001122  1401                     182              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001124  C438 000F                183              AND.B       $0F, D2             ; set first nibble to 0
00001128                           184   
00001128  B43C 0000                185              CMP.B       #zero, D2           ; compare second nibble to 0
0000112C  6700 0938                186              BEQ         opASR               ; branch to ASR method
00001130  B43C 0001                187              CMP.B       #one, D2            ; compare second nibble to 1
00001134  6700 0924                188              BEQ         opASL               ; branch to ASL method
00001138  B43C 0002                189              CMP.B       #two, D2            ; compare second nibble to 2
0000113C  6700 0940                190              BEQ         opLSR               ; branch to LSR method
00001140  B43C 0003                191              CMP.B       #three, D2          ; compare second nibble to 3
00001144  6700 092C                192              BEQ         opLSL               ; branch to LSL method
00001148  B43C 0006                193              CMP.B       #six, D2            ; compare second nibble to 6
0000114C  6700 0948                194              BEQ         opROR               ; branch to ROR method
00001150  6000 0938                195              BRA         opROL               ; otherwise, branch to ROL method
00001154                           196  
00001154  43F9 0000265A            197  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
0000115A  103C 000E                198          MOVE.B      #14, D0             ; command for trap call to display message
0000115E  4E4F                     199          TRAP        #15                 ; trap call
00001160                           200          
00001160  1218                     201          MOVE.B      (A0)+, D1
00001162  1401                     202          MOVE.B      D1,D2               ; copy data over
00001164  EC42                     203          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001166  B43C 0000                204          CMP.B       #zero,D2
0000116A  6700 0016                205          BEQ         opORIB
0000116E  B43C 0001                206          CMP.B       #one,D2
00001172  6700 0070                207          BEQ         opORIW
00001176  B43C 0002                208          CMP.B       #two,D2
0000117A  6700 00CA                209          BEQ         opORIL
0000117E                           210          
0000117E  6000 14BA                211          BRA         printInvalid
00001182                           212          
00001182  43F9 000026DC            213  opORIB  LEA         dispByte, A1        ; Display byte
00001188  103C 000E                214          MOVE.B      #14, D0             ; command for trap call to display message
0000118C  4E4F                     215          TRAP        #15                 ; trap call
0000118E                           216          
0000118E  43F9 00002642            217          LEA         space, A1           ; Display space
00001194  103C 000E                218          MOVE.B      #14, D0             ; command for trap call to display message
00001198  4E4F                     219          TRAP        #15                 ; trap call
0000119A                           220          
0000119A  4242                     221          CLR         D2
0000119C  1401                     222          MOVE.B      D1,D2
0000119E  E642                     223          ASR         #three,D2
000011A0  C47C 0007                224          AND         #seven,D2
000011A4  4243                     225          CLR         D3        
000011A6  1601                     226          MOVE.B      D1,D3
000011A8  C67C 0007                227          AND         #seven,D3
000011AC                           228          
000011AC  4241                     229          CLR         D1
000011AE  3218                     230          MOVE.W      (A0)+, D1
000011B0                           231          
000011B0  43F9 00002645            232          LEA         hashTag, A1           ; Display space
000011B6  103C 000E                233          MOVE.B      #14, D0             ; command for trap call to display message
000011BA  4E4F                     234          TRAP        #15                 ; trap call
000011BC                           235          
000011BC  103C 0003                236          MOVE.B      #3, D0
000011C0  4E4F                     237          TRAP        #15
000011C2                           238          
000011C2  43F9 00002649            239          LEA         comma, A1           ; Display space
000011C8  103C 000E                240          MOVE.B      #14, D0             ; command for trap call to display message
000011CC  4E4F                     241          TRAP        #15                 ; trap call
000011CE                           242          
000011CE  4EB9 00001FEA            243          JSR         printEA
000011D4                           244          
000011D4  43F9 0000263E            245          LEA         newLine, A1           ; Display space
000011DA  103C 000E                246          MOVE.B      #14, D0             ; command for trap call to display message
000011DE  4E4F                     247          TRAP        #15                 ; trap call
000011E0                           248          
000011E0  6000 FE2A                249          BRA         LOOP
000011E4                           250          
000011E4                           251          
000011E4  43F9 000026DF            252  opORIW  LEA         dispWord, A1        ; Display byte
000011EA  103C 000E                253          MOVE.B      #14, D0             ; command for trap call to display message
000011EE  4E4F                     254          TRAP        #15                 ; trap call
000011F0                           255          
000011F0  43F9 00002642            256          LEA         space, A1           ; Display space
000011F6  103C 000E                257          MOVE.B      #14, D0             ; command for trap call to display message
000011FA  4E4F                     258          TRAP        #15                 ; trap call
000011FC                           259          
000011FC  4242                     260          CLR         D2
000011FE  1401                     261          MOVE.B      D1,D2
00001200  E642                     262          ASR         #three,D2
00001202  C47C 0007                263          AND         #seven,D2
00001206  4243                     264          CLR         D3        
00001208  1601                     265          MOVE.B      D1,D3
0000120A  C67C 0007                266          AND         #seven,D3
0000120E                           267          
0000120E  4241                     268          CLR         D1
00001210  3218                     269          MOVE.W      (A0)+, D1
00001212                           270          
00001212  43F9 00002645            271          LEA         hashTag, A1           ; Display space
00001218  103C 000E                272          MOVE.B      #14, D0             ; command for trap call to display message
0000121C  4E4F                     273          TRAP        #15                 ; trap call
0000121E                           274          
0000121E  103C 0003                275          MOVE.B      #3, D0
00001222  4E4F                     276          TRAP        #15
00001224                           277          
00001224  43F9 00002649            278          LEA         comma, A1           ; Display space
0000122A  103C 000E                279          MOVE.B      #14, D0             ; command for trap call to display message
0000122E  4E4F                     280          TRAP        #15                 ; trap call
00001230                           281          
00001230  4EB9 00001FEA            282          JSR         printEA
00001236                           283          
00001236  43F9 0000263E            284          LEA         newLine, A1           ; Display space
0000123C  103C 000E                285          MOVE.B      #14, D0             ; command for trap call to display message
00001240  4E4F                     286          TRAP        #15                 ; trap call
00001242                           287          
00001242  6000 FDC8                288          BRA         LOOP
00001246                           289       
00001246  43F9 000026E2            290  opORIL  LEA         dispLong, A1        ; Display byte
0000124C  103C 000E                291          MOVE.B      #14, D0             ; command for trap call to display message
00001250  4E4F                     292          TRAP        #15                 ; trap call
00001252                           293          
00001252  43F9 00002642            294          LEA         space, A1           ; Display space
00001258  103C 000E                295          MOVE.B      #14, D0             ; command for trap call to display message
0000125C  4E4F                     296          TRAP        #15                 ; trap call
0000125E                           297          
0000125E  4242                     298          CLR         D2
00001260  1401                     299          MOVE.B      D1,D2
00001262  E642                     300          ASR         #three,D2
00001264  C47C 0007                301          AND         #seven,D2
00001268  4243                     302          CLR         D3        
0000126A  1601                     303          MOVE.B      D1,D3
0000126C  C67C 0007                304          AND         #seven,D3
00001270                           305          
00001270  4241                     306          CLR         D1
00001272  2218                     307          MOVE.L      (A0)+, D1
00001274                           308          
00001274  43F9 00002645            309          LEA         hashTag, A1           ; Display space
0000127A  103C 000E                310          MOVE.B      #14, D0             ; command for trap call to display message
0000127E  4E4F                     311          TRAP        #15                 ; trap call
00001280                           312          
00001280  103C 0003                313          MOVE.B      #3, D0
00001284  4E4F                     314          TRAP        #15
00001286                           315          
00001286  43F9 00002649            316          LEA         comma, A1           ; Display space
0000128C  103C 000E                317          MOVE.B      #14, D0             ; command for trap call to display message
00001290  4E4F                     318          TRAP        #15                 ; trap call
00001292                           319          
00001292  4EB9 00001FEA            320          JSR         printEA
00001298                           321          
00001298  43F9 0000263E            322          LEA         newLine, A1           ; Display space
0000129E  103C 000E                323          MOVE.B      #14, D0             ; command for trap call to display message
000012A2  4E4F                     324          TRAP        #15                 ; trap call
000012A4                           325          
000012A4  6000 FD66                326          BRA         LOOP
000012A8                           327           
000012A8  43F9 0000265E            328  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000012AE  103C 000E                329          MOVE.B      #14, D0             ; command for trap call to display message
000012B2  4E4F                     330          TRAP        #15                 ; trap call
000012B4                           331                  
000012B4  1218                     332          MOVE.B      (A0)+, D1
000012B6  1401                     333          MOVE.B      D1,D2               ; copy data over
000012B8  EC42                     334          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000012BA  B43C 0000                335          CMP.B       #zero,D2
000012BE  6700 0034                336          BEQ         opCMPIB
000012C2  B43C 0001                337          CMP.B       #one,D2
000012C6  6700 008E                338          BEQ         opCMPIW
000012CA  B43C 0002                339          CMP.B       #two,D2
000012CE  6700 00E8                340          BEQ         opCMPIL
000012D2                           341          
000012D2  1401                     342          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000012D4  E542                     343          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
000012D6  1802                     344          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
000012D8  4242                     345          CLR         D2                  ; Clear out data register
000012DA  1404                     346          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
000012DC  EA42                     347          ASR         #five,D2            ; Shift the register out to get just the mode
000012DE  1802                     348          MOVE.B      D2,D4               ; Store mode into D4
000012E0  4242                     349          CLR         D2
000012E2                           350          
000012E2  1401                     351          MOVE.B      D1,D2               ; Getting the EA register
000012E4  EB42                     352          ASL         #five,D2
000012E6  1A02                     353          MOVE.B      D2,D5               ; Move just the register into D5
000012E8  4242                     354          CLR         D2                  ; Clearing D2 to put data back
000012EA  1405                     355          MOVE.B      D5,D2               ; Putting back the register
000012EC  EA42                     356          ASR         #five,D2            ; Shifting bits in order to read the register
000012EE  1A02                     357          MOVE.B      D2,D5               ; Store register into D5
000012F0                           358          
000012F0  6000 FD1A                359          BRA         LOOP                ; go back to the loop
000012F4                           360  
000012F4  43F9 000026DC            361  opCMPIB LEA         dispByte, A1        ; Display byte
000012FA  103C 000E                362          MOVE.B      #14, D0             ; command for trap call to display message
000012FE  4E4F                     363          TRAP        #15                 ; trap call
00001300                           364          
00001300  43F9 00002642            365          LEA         space, A1           ; Display space
00001306  103C 000E                366          MOVE.B      #14, D0             ; command for trap call to display message
0000130A  4E4F                     367          TRAP        #15                 ; trap call
0000130C                           368          
0000130C  4242                     369          CLR         D2
0000130E  1401                     370          MOVE.B      D1,D2
00001310  E642                     371          ASR         #three,D2
00001312  C47C 0007                372          AND         #seven,D2
00001316  4243                     373          CLR         D3        
00001318  1601                     374          MOVE.B      D1,D3
0000131A  C67C 0007                375          AND         #seven,D3
0000131E                           376          
0000131E  4241                     377          CLR         D1
00001320  3218                     378          MOVE.W      (A0)+, D1
00001322                           379          
00001322  43F9 00002645            380          LEA         hashTag, A1           ; Display space
00001328  103C 000E                381          MOVE.B      #14, D0             ; command for trap call to display message
0000132C  4E4F                     382          TRAP        #15                 ; trap call
0000132E                           383          
0000132E  103C 0003                384          MOVE.B      #3, D0
00001332  4E4F                     385          TRAP        #15
00001334                           386          
00001334  43F9 00002649            387          LEA         comma, A1           ; Display space
0000133A  103C 000E                388          MOVE.B      #14, D0             ; command for trap call to display message
0000133E  4E4F                     389          TRAP        #15                 ; trap call
00001340                           390          
00001340  4EB9 00001FEA            391          JSR         printEA
00001346                           392          
00001346  43F9 0000263E            393          LEA         newLine, A1           ; Display space
0000134C  103C 000E                394          MOVE.B      #14, D0             ; command for trap call to display message
00001350  4E4F                     395          TRAP        #15                 ; trap call
00001352                           396  
00001352  6000 FCB8                397          BRA         LOOP
00001356                           398  
00001356  43F9 000026DF            399  opCMPIW LEA         dispWord, A1        ; Display byte
0000135C  103C 000E                400          MOVE.B      #14, D0             ; command for trap call to display message
00001360  4E4F                     401          TRAP        #15                 ; trap call
00001362                           402          
00001362  43F9 00002642            403          LEA         space, A1           ; Display space
00001368  103C 000E                404          MOVE.B      #14, D0             ; command for trap call to display message
0000136C  4E4F                     405          TRAP        #15                 ; trap call
0000136E                           406          
0000136E  4242                     407          CLR         D2
00001370  1401                     408          MOVE.B      D1,D2
00001372  E642                     409          ASR         #three,D2
00001374  C47C 0007                410          AND         #seven,D2
00001378  4243                     411          CLR         D3        
0000137A  1601                     412          MOVE.B      D1,D3
0000137C  C67C 0007                413          AND         #seven,D3
00001380                           414          
00001380  4241                     415          CLR         D1
00001382  3218                     416          MOVE.W      (A0)+, D1
00001384                           417          
00001384  43F9 00002645            418          LEA         hashTag, A1           ; Display space
0000138A  103C 000E                419          MOVE.B      #14, D0             ; command for trap call to display message
0000138E  4E4F                     420          TRAP        #15                 ; trap call
00001390                           421          
00001390  103C 0003                422          MOVE.B      #3, D0
00001394  4E4F                     423          TRAP        #15
00001396                           424          
00001396  43F9 00002649            425          LEA         comma, A1           ; Display space
0000139C  103C 000E                426          MOVE.B      #14, D0             ; command for trap call to display message
000013A0  4E4F                     427          TRAP        #15                 ; trap call
000013A2                           428          
000013A2  4EB9 00001FEA            429          JSR         printEA
000013A8                           430          
000013A8  43F9 0000263E            431          LEA         newLine, A1           ; Display space
000013AE  103C 000E                432          MOVE.B      #14, D0             ; command for trap call to display message
000013B2  4E4F                     433          TRAP        #15                 ; trap call
000013B4  6000 FC56                434          BRA         LOOP
000013B8                           435  
000013B8  43F9 000026E2            436  opCMPIL LEA         dispLong, A1        ; Display byte
000013BE  103C 000E                437          MOVE.B      #14, D0             ; command for trap call to display message
000013C2  4E4F                     438          TRAP        #15                 ; trap call
000013C4                           439          
000013C4  43F9 00002642            440          LEA         space, A1           ; Display space
000013CA  103C 000E                441          MOVE.B      #14, D0             ; command for trap call to display message
000013CE  4E4F                     442          TRAP        #15                 ; trap call
000013D0                           443          
000013D0  4242                     444          CLR         D2
000013D2  1401                     445          MOVE.B      D1,D2
000013D4  E642                     446          ASR         #three,D2
000013D6  C47C 0007                447          AND         #seven,D2
000013DA  4243                     448          CLR         D3        
000013DC  1601                     449          MOVE.B      D1,D3
000013DE  C67C 0007                450          AND         #seven,D3
000013E2                           451          
000013E2  4241                     452          CLR         D1
000013E4  3218                     453          MOVE.W      (A0)+, D1
000013E6                           454          
000013E6  43F9 00002645            455          LEA         hashTag, A1           ; Display space
000013EC  103C 000E                456          MOVE.B      #14, D0             ; command for trap call to display message
000013F0  4E4F                     457          TRAP        #15                 ; trap call
000013F2                           458          
000013F2  103C 0003                459          MOVE.B      #3, D0
000013F6  4E4F                     460          TRAP        #15
000013F8                           461          
000013F8  43F9 00002649            462          LEA         comma, A1           ; Display space
000013FE  103C 000E                463          MOVE.B      #14, D0             ; command for trap call to display message
00001402  4E4F                     464          TRAP        #15                 ; trap call
00001404                           465          
00001404  4EB9 00001FEA            466          JSR         printEA
0000140A                           467          
0000140A  43F9 0000263E            468          LEA         newLine, A1           ; Display space
00001410  103C 000E                469          MOVE.B      #14, D0             ; command for trap call to display message
00001414  4E4F                     470          TRAP        #15                 ; trap call
00001416                           471          
00001416  6000 FBF4                472          BRA         LOOP
0000141A                           473  
0000141A  43F9 00002663            474  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001420  103C 000E                475                  MOVE.B      #14, D0             ; command for trap call to display message
00001424  4E4F                     476                  TRAP        #15                 ; trap call
00001426                           477  
00001426  43F9 00002642            478                  LEA         space, A1           ; Display space
0000142C  103C 000E                479                  MOVE.B      #14, D0             ; command for trap call to display message
00001430  4E4F                     480                  TRAP        #15                 ; trap call
00001432                           481                  
00001432  4242                     482                  CLR         D2
00001434  1218                     483                  MOVE.B      (A0)+, D1
00001436  1401                     484                  MOVE.B      D1,D2               ; copy data over
00001438  E642                     485                  ASR         #three,D2           ; Shift to the right to remove register
0000143A  C47C 0007                486                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
0000143E                           487                  
0000143E  4243                     488                  CLR         D3                  ; Clear D3 so we can move D1 in
00001440  1601                     489                  MOVE.B      D1,D3               ; Move othr byte in
00001442  C67C 0007                490                  AND         #seven,D3           ; Set everything besides register to 0
00001446                           491                  
00001446  4241                     492                  CLR         D1
00001448  3218                     493                  MOVE.W      (A0)+, D1
0000144A                           494                 
0000144A                           495                  
0000144A  43F9 00002645            496                  LEA         hashTag, A1           ; Display space
00001450  103C 000E                497                  MOVE.B      #14, D0             ; command for trap call to display message
00001454  4E4F                     498                  TRAP        #15                 ; trap call
00001456                           499          
00001456  103C 0003                500                  MOVE.B      #3, D0
0000145A  4E4F                     501                  TRAP        #15
0000145C                           502          
0000145C  43F9 00002649            503                  LEA         comma, A1           ; Display space
00001462  103C 000E                504                  MOVE.B      #14, D0             ; command for trap call to display message
00001466  4E4F                     505                  TRAP        #15                 ; trap call
00001468                           506                  
00001468  4EB9 00001FEA            507                  JSR         printEA
0000146E                           508          
0000146E  43F9 0000263E            509                  LEA         newLine, A1           ; Display space
00001474  103C 000E                510                  MOVE.B      #14, D0             ; command for trap call to display message
00001478  4E4F                     511                  TRAP        #15                 ; trap call
0000147A                           512                  
0000147A                           513                  
0000147A  6000 FB90                514                  BRA         LOOP                
0000147E                           515          
0000147E                           516  opDynBCLR       
0000147E  4241                     517                  CLR         D1
00001480  1218                     518                  MOVE.B      (A0)+,D1            ; Copy second byte in
00001482  1601                     519                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
00001484  E243                     520                  ASR         #one,D3             ; Shift register over to the end
00001486  C67C 0007                521                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
0000148A                           522                  
0000148A  1401                     523                  MOVE.B      D1,D2
0000148C  EC42                     524                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
0000148E  B47C 0002                525                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
00001492  6600 11A6                526                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
00001496                           527  
00001496                           528                  
00001496  43F9 00002663            529                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
0000149C  103C 000E                530                  MOVE.B      #14, D0             ; command for trap call to display message
000014A0  4E4F                     531                  TRAP        #15                 ; trap call  
000014A2                           532                  
000014A2  43F9 00002642            533                  LEA         space, A1           ; Display space
000014A8  103C 000E                534                  MOVE.B      #14, D0             ; command for trap call to display message
000014AC  4E4F                     535                  TRAP        #15                 ; trap call
000014AE                           536                  
000014AE  143C 0000                537                  MOVE.B      #zero,D2                
000014B2  4EB9 00001FEA            538                  JSR         printEA
000014B8                           539                  
000014B8  43F9 00002649            540                  LEA         comma, A1           ; Display space
000014BE  103C 000E                541                  MOVE.B      #14, D0             ; command for trap call to display message
000014C2  4E4F                     542                  TRAP        #15                 ; trap call
000014C4                           543                  
000014C4  4242                     544                  CLR         D2
000014C6  1401                     545                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000014C8  E642                     546                  ASR         #three,D2           ; Remove/shift the register out
000014CA  C47C 0007                547                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000014CE                           548                  
000014CE  4243                     549                  CLR         D3                  ; Clearing D3 to avoid mashing data
000014D0  1601                     550                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000014D2  C67C 0007                551                  AND         #seven,D3           ; Change all bits except for register bits to 0
000014D6                           552                  
000014D6                           553  
000014D6  4EB9 00001FEA            554                  JSR         printEA
000014DC                           555          
000014DC  43F9 0000263E            556                  LEA         newLine, A1           ; Display space
000014E2  103C 000E                557                  MOVE.B      #14, D0             ; command for trap call to display message
000014E6  4E4F                     558                  TRAP        #15                 ; trap call            
000014E8                           559  
000014E8                           560  
000014E8  6000 FB22                561                  BRA         LOOP                ; go back to the loop
000014EC                           562   
000014EC                           563  opMOVEB 
000014EC  43F9 00002668            564          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
000014F2  103C 000E                565          MOVE.B      #14, D0             ; command for trap call to display message
000014F6  4E4F                     566          TRAP        #15                 ; trap call
000014F8  43F9 000026DC            567          LEA         dispByte, A1        ; display byte
000014FE  103C 000E                568          MOVE.B      #14, D0             ; command for trap call to display message
00001502  4E4F                     569          TRAP        #15                 ; trap call
00001504  43F9 00002642            570          LEA         space, A1           ; create spaces
0000150A  103C 000E                571          MOVE.B      #14, D0             ; command for trap call to display message
0000150E  4E4F                     572          TRAP        #15                 ; trap call
00001510                           573          
00001510                           574          
00001510  4245                     575          CLR         D5                  ; Clear D5
00001512  1A01                     576          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001514  E245                     577          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001516  CA7C 0007                578          AND         #seven,D5
0000151A                           579          
0000151A  4244                     580          CLR         D4                  ; Clear out D4
0000151C  1801                     581          MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000151E  C87C 0001                582          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001522                           583          
00001522  4241                     584          CLR          D1
00001524  4242                     585          CLR          D2
00001526  1218                     586          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001528  1401                     587          MOVE.B      D1,D2
0000152A  EC42                     588          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000152C  D842                     589          ADD         D2,D4               ; Adds the remaining bits to D4
0000152E                           590          
0000152E  4242                     591          CLR         D2
00001530  1401                     592          MOVE.B      D1,D2               ; Copy new byte over to D2
00001532  E642                     593          ASR         #three,D2           ; Shift source register out
00001534  C47C 0007                594          AND         #seven,D2           ; Set everything to 0 except for the mode
00001538                           595          
00001538  4243                     596          CLR         D3
0000153A  1601                     597          MOVE.B      D1,D3
0000153C  C67C 0007                598          AND         #seven,D3
00001540                           599          
00001540  4EB9 00001FEA            600          JSR         printEA
00001546                           601          
00001546  43F9 00002649            602          LEA         comma, A1           ; Display space
0000154C  103C 000E                603          MOVE.B      #14, D0             ; command for trap call to display message
00001550  4E4F                     604          TRAP        #15                 ; trap call
00001552                           605          
00001552  4242                     606          CLR         D2
00001554  4243                     607          CLR         D3
00001556  1404                     608          MOVE.B      D4,D2
00001558  1605                     609          MOVE.B      D5,D3
0000155A                           610          
0000155A  4EB9 00001FEA            611          JSR         printEA
00001560                           612          
00001560                           613          
00001560  43F9 0000263E            614          LEA         newLine, A1           ; Display space
00001566  103C 000E                615          MOVE.B      #14, D0             ; command for trap call to display message
0000156A  4E4F                     616          TRAP        #15                 ; trap call            
0000156C                           617  
0000156C                           618  
0000156C  6000 FA9E                619          BRA         LOOP                ; go back to the loop
00001570                           620          
00001570                           621  opMOVEL     
00001570                           622          
00001570  4245                     623              CLR         D5                  ; Clear D5
00001572  1A01                     624              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001574  E245                     625              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001576  CA7C 0007                626              AND         #seven,D5
0000157A                           627          
0000157A  4244                     628              CLR         D4                  ; Clear out D4
0000157C  1801                     629              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000157E  C87C 0001                630              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001582                           631          
00001582  4241                     632              CLR          D1
00001584  4242                     633              CLR          D2
00001586  1218                     634              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001588  1401                     635              MOVE.B      D1,D2
0000158A  EC42                     636              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000158C  D842                     637              ADD         D2,D4               ; Adds the remaining bits to D4
0000158E                           638          
0000158E  B87C 0001                639              CMP         #one,D4             ; Check if it is MOVEA
00001592  6700 006C                640              BEQ         opMOVEAL            ; If it is, branch off
00001596                           641              
00001596  43F9 00002668            642              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
0000159C  103C 000E                643              MOVE.B      #14, D0             ; command for trap call to display message
000015A0  4E4F                     644              TRAP        #15                 ; trap call  
000015A2                           645              
000015A2                           646              
000015A2  43F9 000026E2            647              LEA         dispLong,A1
000015A8  103C 000E                648              MOVE.B      #14, D0             ; command for trap call to display message
000015AC  4E4F                     649              TRAP        #15                 ; trap call
000015AE                           650              
000015AE  43F9 00002642            651              LEA         space, A1           ; create spaces
000015B4  103C 000E                652              MOVE.B      #14, D0             ; command for trap call to display message
000015B8  4E4F                     653              TRAP        #15                 ; trap call
000015BA                           654          
000015BA  4242                     655              CLR         D2
000015BC  1401                     656              MOVE.B      D1,D2               ; Copy new byte over to D2
000015BE  E642                     657              ASR         #three,D2           ; Shift source register out
000015C0  C47C 0007                658              AND         #seven,D2           ; Set everything to 0 except for the mode
000015C4                           659          
000015C4  4243                     660              CLR         D3
000015C6  1601                     661              MOVE.B      D1,D3
000015C8  C67C 0007                662              AND         #seven,D3
000015CC                           663              
000015CC  4241                     664              CLR         D1                  ; Clear D1
000015CE  2218                     665              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
000015D0                           666              
000015D0  4EB9 00001FEA            667              JSR         printEA
000015D6                           668              
000015D6  43F9 00002649            669              LEA         comma, A1           ; Display comma
000015DC  103C 000E                670              MOVE.B      #14, D0             ; command for trap call to display message
000015E0  4E4F                     671              TRAP        #15                 ; trap call
000015E2                           672          
000015E2  4242                     673              CLR         D2
000015E4  4243                     674              CLR         D3
000015E6  1404                     675              MOVE.B      D4,D2
000015E8  1605                     676              MOVE.B      D5,D3
000015EA                           677              
000015EA                           678  
000015EA                           679              
000015EA  4EB9 00001FEA            680              JSR         printEA
000015F0                           681          
000015F0                           682          
000015F0  43F9 0000263E            683              LEA         newLine, A1           ; Display space
000015F6  103C 000E                684              MOVE.B      #14, D0             ; command for trap call to display message
000015FA  4E4F                     685              TRAP        #15                 ; trap call            
000015FC                           686  
000015FC                           687  
000015FC  6000 FA0E                688              BRA         LOOP                ; go back to the loop
00001600                           689              
00001600                           690  opMOVEAL
00001600                           691  
00001600  43F9 0000266D            692              LEA         MOVEAmatch,A1
00001606  103C 000E                693              MOVE.B      #14, D0             ; command for trap call to display message
0000160A  4E4F                     694              TRAP        #15                 ; trap call
0000160C                           695              
0000160C  43F9 000026E2            696              LEA         dispLong,A1
00001612  103C 000E                697              MOVE.B      #14, D0             ; command for trap call to display message
00001616  4E4F                     698              TRAP        #15                 ; trap call
00001618                           699              
00001618                           700  
00001618  43F9 00002642            701              LEA         space, A1           ; create spaces
0000161E  103C 000E                702              MOVE.B      #14, D0             ; command for trap call to display message
00001622  4E4F                     703              TRAP        #15                 ; trap call
00001624                           704              
00001624  4242                     705              CLR         D2
00001626  1401                     706              MOVE.B      D1,D2               ; Copy new byte over to D2
00001628  E642                     707              ASR         #three,D2           ; Shift source register out
0000162A  C47C 0007                708              AND         #seven,D2           ; Set everything to 0 except for the mode
0000162E                           709          
0000162E  4243                     710              CLR         D3
00001630  1601                     711              MOVE.B      D1,D3
00001632  C67C 0007                712              AND         #seven,D3
00001636                           713              
00001636  4241                     714              CLR         D1                  ; Clear D1
00001638  3218                     715              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
0000163A                           716              
0000163A                           717              
0000163A  4EB9 00001FEA            718              JSR         printEA
00001640                           719              
00001640  43F9 00002649            720              LEA         comma, A1           ; Display comma
00001646  103C 000E                721              MOVE.B      #14, D0             ; command for trap call to display message
0000164A  4E4F                     722              TRAP        #15                 ; trap call
0000164C                           723  
0000164C  4242                     724              CLR         D2
0000164E  4243                     725              CLR         D3
00001650  1404                     726              MOVE.B      D4,D2
00001652  1605                     727              MOVE.B      D5,D3
00001654                           728          
00001654  4EB9 00001FEA            729              JSR         printEA
0000165A                           730          
0000165A                           731          
0000165A  43F9 0000263E            732              LEA         newLine, A1           ; Display space
00001660  103C 000E                733              MOVE.B      #14, D0             ; command for trap call to display message
00001664  4E4F                     734              TRAP        #15                 ; trap call            
00001666                           735  
00001666                           736  
00001666  6000 F9A4                737              BRA         LOOP                ; go back to the loop
0000166A                           738  
0000166A                           739  opMOVEW
0000166A                           740          
0000166A  4245                     741              CLR         D5                  ; Clear D5
0000166C  1A01                     742              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000166E  E245                     743              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001670  CA7C 0007                744              AND         #seven,D5
00001674                           745          
00001674  4244                     746              CLR         D4                  ; Clear out D4
00001676  1801                     747              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001678  C87C 0001                748              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000167C                           749          
0000167C  4241                     750              CLR          D1
0000167E  4242                     751              CLR          D2
00001680  1218                     752              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001682  1401                     753              MOVE.B      D1,D2
00001684  EC42                     754              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001686  D842                     755              ADD         D2,D4               ; Adds the remaining bits to D4
00001688                           756          
00001688  B87C 0001                757              CMP         #one,D4             ; Check if it is MOVEA
0000168C  6700 006C                758              BEQ         opMOVEAW            ; If it is, branch off
00001690                           759              
00001690  43F9 00002668            760              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001696  103C 000E                761              MOVE.B      #14, D0             ; command for trap call to display message
0000169A  4E4F                     762              TRAP        #15                 ; trap call  
0000169C                           763              
0000169C  43F9 000026DF            764              LEA         dispWord,A1
000016A2  103C 000E                765              MOVE.B      #14, D0             ; command for trap call to display message
000016A6  4E4F                     766              TRAP        #15                 ; trap call
000016A8                           767              
000016A8  43F9 00002642            768              LEA         space, A1           ; create spaces
000016AE  103C 000E                769              MOVE.B      #14, D0             ; command for trap call to display message
000016B2  4E4F                     770              TRAP        #15                 ; trap call
000016B4                           771          
000016B4  4242                     772              CLR         D2
000016B6  1401                     773              MOVE.B      D1,D2               ; Copy new byte over to D2
000016B8  E642                     774              ASR         #three,D2           ; Shift source register out
000016BA  C47C 0007                775              AND         #seven,D2           ; Set everything to 0 except for the mode
000016BE                           776          
000016BE  4243                     777              CLR         D3
000016C0  1601                     778              MOVE.B      D1,D3
000016C2  C67C 0007                779              AND         #seven,D3
000016C6                           780              
000016C6  4241                     781              CLR         D1                  ; Clear D1
000016C8  3218                     782              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
000016CA                           783              
000016CA  4EB9 00001FEA            784              JSR         printEA
000016D0                           785              
000016D0  43F9 00002649            786              LEA         comma, A1           ; Display comma
000016D6  103C 000E                787              MOVE.B      #14, D0             ; command for trap call to display message
000016DA  4E4F                     788              TRAP        #15                 ; trap call
000016DC                           789          
000016DC  4242                     790              CLR         D2
000016DE  4243                     791              CLR         D3
000016E0  1404                     792              MOVE.B      D4,D2
000016E2  1605                     793              MOVE.B      D5,D3
000016E4                           794              
000016E4                           795  
000016E4                           796              
000016E4  4EB9 00001FEA            797              JSR         printEA
000016EA                           798          
000016EA                           799          
000016EA  43F9 0000263E            800              LEA         newLine, A1           ; Display space
000016F0  103C 000E                801              MOVE.B      #14, D0             ; command for trap call to display message
000016F4  4E4F                     802              TRAP        #15                 ; trap call            
000016F6                           803  
000016F6                           804  
000016F6  6000 F914                805              BRA         LOOP                ; go back to the loop
000016FA                           806  opMOVEAW  
000016FA  43F9 0000266D            807              LEA         MOVEAmatch,A1
00001700  103C 000E                808              MOVE.B      #14, D0             ; command for trap call to display message
00001704  4E4F                     809              TRAP        #15                 ; trap call
00001706                           810              
00001706  43F9 000026DF            811              LEA         dispWord,A1
0000170C  103C 000E                812              MOVE.B      #14, D0             ; command for trap call to display message
00001710  4E4F                     813              TRAP        #15                 ; trap call
00001712                           814              
00001712                           815  
00001712  43F9 00002642            816              LEA         space, A1           ; create spaces
00001718  103C 000E                817              MOVE.B      #14, D0             ; command for trap call to display message
0000171C  4E4F                     818              TRAP        #15                 ; trap call
0000171E                           819              
0000171E  4242                     820              CLR         D2
00001720  1401                     821              MOVE.B      D1,D2               ; Copy new byte over to D2
00001722  E642                     822              ASR         #three,D2           ; Shift source register out
00001724  C47C 0007                823              AND         #seven,D2           ; Set everything to 0 except for the mode
00001728                           824          
00001728  4243                     825              CLR         D3
0000172A  1601                     826              MOVE.B      D1,D3
0000172C  C67C 0007                827              AND         #seven,D3
00001730                           828              
00001730  4241                     829              CLR         D1                  ; Clear D1
00001732  3218                     830              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001734                           831              
00001734                           832              
00001734  4EB9 00001FEA            833              JSR         printEA
0000173A                           834              
0000173A  43F9 00002649            835              LEA         comma, A1           ; Display comma
00001740  103C 000E                836              MOVE.B      #14, D0             ; command for trap call to display message
00001744  4E4F                     837              TRAP        #15                 ; trap call
00001746                           838  
00001746  4242                     839              CLR         D2
00001748  4243                     840              CLR         D3
0000174A  1404                     841              MOVE.B      D4,D2
0000174C  1605                     842              MOVE.B      D5,D3
0000174E                           843          
0000174E  4EB9 00001FEA            844              JSR         printEA
00001754                           845          
00001754                           846          
00001754  43F9 0000263E            847              LEA         newLine, A1           ; Display space
0000175A  103C 000E                848              MOVE.B      #14, D0             ; command for trap call to display message
0000175E  4E4F                     849              TRAP        #15                 ; trap call            
00001760                           850  
00001760                           851  
00001760  6000 F8AA                852              BRA         LOOP                ; go back to the loop
00001764                           853  
00001764                           854  opNEG   
00001764  43F9 00002673            855              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
0000176A  103C 000E                856              MOVE.B      #14, D0             ; command for trap call to display message
0000176E  4E4F                     857              TRAP        #15                 ; trap call
00001770                           858          
00001770                           859          
00001770  1218                     860              MOVE.B      (A0)+, D1
00001772  1401                     861              MOVE.B      D1,D2               ; copy data over
00001774  EC42                     862              ASR         #six,D2
00001776                           863              
00001776  B47C 0000                864              CMP         #zero,D2
0000177A  6700 0016                865              BEQ         opNEGB
0000177E  B47C 0001                866              CMP         #one,D2
00001782  6700 004E                867              BEQ         opNEGL
00001786  B47C 0002                868              CMP         #two,D2
0000178A  6700 0086                869              BEQ         opNEGW
0000178E  6000 0EA4                870              BRA         INVALID
00001792                           871  opNEGB
00001792                           872  
00001792  43F9 000026DC            873              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001798  103C 000E                874              MOVE.B      #14, D0             ; command for trap call to display message
0000179C  4E4F                     875              TRAP        #15                 ; trap call
0000179E                           876          
0000179E  43F9 00002642            877              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000017A4  103C 000E                878              MOVE.B      #14, D0             ; command for trap call to display message
000017A8  4E4F                     879              TRAP        #15                 ; trap call
000017AA                           880          
000017AA  4242                     881              CLR         D2                  ; Clear Data register 2
000017AC  3401                     882              MOVE        D1,D2               ; Move byte into D2
000017AE  E642                     883              ASR         #three,D2           ; Shift mode into place and moves mode into place
000017B0  C47C 0007                884              AND         #seven,D2           ; Stores mode
000017B4                           885              
000017B4  4243                     886              CLR         D3
000017B6  3601                     887              MOVE        D1,D3
000017B8  C67C 0007                888              AND         #seven,D3
000017BC                           889          
000017BC  4EB9 00001FEA            890              JSR         printEA
000017C2                           891                  
000017C2  43F9 0000263E            892              LEA         newLine, A1           ; Display space
000017C8  103C 000E                893              MOVE.B      #14, D0             ; command for trap call to display message
000017CC  4E4F                     894              TRAP        #15                 ; trap call  
000017CE                           895          
000017CE  6000 F83C                896              BRA         LOOP
000017D2                           897                  
000017D2                           898  
000017D2                           899  opNEGL
000017D2                           900  
000017D2  43F9 000026E2            901              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
000017D8  103C 000E                902              MOVE.B      #14, D0             ; command for trap call to display message
000017DC  4E4F                     903              TRAP        #15                 ; trap call
000017DE                           904  
000017DE  43F9 00002642            905              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000017E4  103C 000E                906              MOVE.B      #14, D0             ; command for trap call to display message
000017E8  4E4F                     907              TRAP        #15                 ; trap call
000017EA                           908                  
000017EA  4242                     909              CLR         D2                  ; Clear Data register 2
000017EC  3401                     910              MOVE        D1,D2               ; Move byte into D2
000017EE  E642                     911              ASR         #three,D2           ; Shift mode into place and moves mode into place
000017F0  C47C 0007                912              AND         #seven,D2           ; Stores mode
000017F4                           913          
000017F4  4243                     914              CLR         D3
000017F6  3601                     915              MOVE        D1,D3
000017F8  C67C 0007                916              AND         #seven,D3
000017FC                           917          
000017FC  4EB9 00001FEA            918              JSR         printEA
00001802                           919                      
00001802  43F9 0000263E            920              LEA         newLine, A1         ; Display space
00001808  103C 000E                921              MOVE.B      #14, D0             ; command for trap call to display message
0000180C  4E4F                     922              TRAP        #15                 ; trap call  
0000180E                           923          
0000180E  6000 F7FC                924              BRA         LOOP
00001812                           925          
00001812                           926  
00001812                           927  opNEGW
00001812                           928  
00001812  43F9 000026DF            929              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001818  103C 000E                930              MOVE.B      #14, D0             ; command for trap call to display message
0000181C  4E4F                     931              TRAP        #15                 ; trap call
0000181E                           932          
0000181E  43F9 00002642            933              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001824  103C 000E                934              MOVE.B      #14, D0             ; command for trap call to display message
00001828  4E4F                     935              TRAP        #15                 ; trap call        
0000182A                           936                  
0000182A  4242                     937              CLR         D2                  ; Clear Data register 2
0000182C  3401                     938              MOVE        D1,D2               ; Move byte into D2
0000182E  E642                     939              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001830  C47C 0007                940              AND         #seven,D2           ; Stores mode
00001834                           941          
00001834  4243                     942              CLR         D3
00001836  3601                     943              MOVE        D1,D3
00001838  C67C 0007                944              AND         #seven,D3
0000183C                           945          
0000183C  4EB9 00001FEA            946              JSR         printEA
00001842                           947              
00001842  43F9 0000263E            948              LEA         newLine, A1           ; Display space
00001848  103C 000E                949              MOVE.B      #14, D0             ; command for trap call to display message
0000184C  4E4F                     950              TRAP        #15                 ; trap call  
0000184E                           951          
0000184E  6000 F7BC                952              BRA         LOOP
00001852                           953  
00001852                           954  opRTSJSR
00001852                           955          
00001852  1218                     956              MOVE.B      (A0)+, D1
00001854                           957              
00001854  1401                     958              MOVE.B      D1,D2               ; copy data over
00001856  B47C 0075                959              CMP         #117,D2
0000185A  6700 0050                960              BEQ         opRTS
0000185E                           961              
0000185E  EC42                     962              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
00001860  B47C 0002                963              CMP         #two,D2             ; Checking if it is JSR
00001864  6700 0006                964              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001868                           965  
00001868  6000 0DCA                966              BRA         invalid
0000186C                           967  
0000186C                           968  opJSR
0000186C                           969                        
0000186C  43F9 0000267B            970              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001872  103C 000E                971              MOVE.B      #14, D0             ; command for trap call to display message
00001876  4E4F                     972              TRAP        #15                 ; trap call
00001878                           973              
00001878  43F9 00002642            974              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000187E  103C 000E                975              MOVE.B      #14, D0             ; command for trap call to display message
00001882  4E4F                     976              TRAP        #15                 ; trap call
00001884                           977              
00001884  4242                     978              CLR         D2
00001886  4243                     979              CLR         D3
00001888                           980              
00001888  1401                     981              MOVE.B      D1,D2
0000188A  E642                     982              ASR         #three,D2
0000188C  C47C 0007                983              AND         #seven,D2
00001890                           984              
00001890  1601                     985              MOVE.B      D1,D3
00001892  C67C 0007                986              AND         #seven,D3
00001896                           987              
00001896  4EB9 00001FEA            988              JSR         printEA
0000189C                           989              
0000189C  43F9 0000263E            990              LEA         newLine, A1           ; Display space
000018A2  103C 000E                991              MOVE.B      #14, D0             ; command for trap call to display message
000018A6  4E4F                     992              TRAP        #15                 ; trap call  
000018A8                           993              
000018A8  6000 F762                994              BRA         loop            
000018AC                           995  opRTS
000018AC                           996  
000018AC  43F9 00002677            997              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
000018B2  103C 000E                998              MOVE.B      #14, D0             ; command for trap call to display message
000018B6  4E4F                     999              TRAP        #15                 ; trap call
000018B8                          1000              
000018B8  43F9 0000263E           1001              LEA         newLine, A1           ; Display space
000018BE  103C 000E               1002              MOVE.B      #14, D0             ; command for trap call to display message
000018C2  4E4F                    1003              TRAP        #15                 ; trap call 
000018C4                          1004              
000018C4  6000 F746               1005              BRA         loop
000018C8                          1006  
000018C8                          1007  opMOVEMLEA
000018C8  4242                    1008              CLR         D2                  ; Clear D2
000018CA  1401                    1009              MOVE.B      D1,D2               ; Copy byte over
000018CC  C47C 000F               1010              AND         #secNib,D2          ; Check only the second nibble
000018D0  B47C 000C               1011              CMP         #twelve,D2          ; Compare the second nibble to twelve
000018D4  6700 000E               1012              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
000018D8  B47C 0008               1013              CMP         #eight,D2           ; Compare the second nibble to eight
000018DC  6700 0006               1014              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
000018E0  6000 008C               1015              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
000018E4                          1016              
000018E4                          1017  opMOVEM            
000018E4  4246                    1018              CLR         D6                  ; Clearing D4 to store dr field
000018E6  1C01                    1019              MOVE.B      D1,D6               ; Moving byte to find dr field
000018E8  E446                    1020              ASR         #two,D6             ; Moving dr field to readable spot
000018EA  CC7C 0001               1021              AND         #one,D6             ; seting everything except dr to 0
000018EE                          1022  
000018EE  4241                    1023              CLR         D1  
000018F0  1218                    1024              MOVE.B      (A0)+, D1           ; Taking in next byte
000018F2                          1025              
000018F2  4245                    1026              CLR         D5
000018F4  1A01                    1027              MOVE.B      D1,D5               ; Using D6 to check if this is indeed MOVEM
000018F6  EC45                    1028              ASR         #six,D5
000018F8  CA7C 0001               1029              AND         #one,D5
000018FC  BA7C 0001               1030              CMP         #one,D5             ; This bit should be one if this is MOVEM
00001900  6600 0D32               1031              BNE         invalid             ; If this is not 1 then this is not moveM
00001904  4245                    1032              CLR         D5
00001906                          1033              
00001906  43F9 0000267F           1034              LEA         MOVEMMatch, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
0000190C  103C 000E               1035              MOVE.B      #14, D0             ; command for trap call to display message
00001910  4E4F                    1036              TRAP        #15                 ; trap call
00001912                          1037              
00001912  4245                    1038              CLR         D5                  ; Clearing D5 to store size
00001914  1A01                    1039              MOVE.B      D1,D5               ; Moving byte that contains bit for size
00001916  EA45                    1040              ASR         #five,D5            ; Moving size bit to the very right to read
00001918  CA7C 0001               1041              AND         #one,D5             ; Isolating the one bit for size
0000191C                          1042              
0000191C  4242                    1043              CLR         D2                  ; Storing EA mode in D2
0000191E  1401                    1044              MOVE.B      D1,D2
00001920  E642                    1045              ASR         #three,D2
00001922  C47C 0007               1046              AND         #seven,D2
00001926                          1047              
00001926  4243                    1048              CLR         D3                  ; Storing EA register into D3
00001928  1601                    1049              MOVE.B      D1,D3
0000192A  C67C 0007               1050              AND         #seven,D3
0000192E                          1051              
0000192E  4EB9 00001AA2           1052              JSR         MOVEMBRA
00001934                          1053              
00001934  B47C 0003               1054              CMP         #three,D2
00001938  6700 0024               1055              BEQ         skipPrintEA
0000193C                          1056              
0000193C  43F9 00002649           1057              LEA         comma, A1           ; Display comma
00001942  103C 000E               1058              MOVE.B      #14, D0             ; command for trap call to display message
00001946  4E4F                    1059              TRAP        #15                 ; trap call
00001948                          1060              
00001948                          1061  
00001948  4EB9 00001FEA           1062              JSR         printEA
0000194E                          1063              
0000194E  43F9 0000263E           1064              LEA         newline, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001954  103C 000E               1065              MOVE.B      #14, D0             ; command for trap call to display message
00001958  4E4F                    1066              TRAP        #15                 ; trap call            
0000195A                          1067  
0000195A  6000 F6B0               1068              BRA         loop            
0000195E                          1069  
0000195E                          1070  skipPrintEA 
0000195E                          1071  
0000195E  43F9 0000263E           1072              LEA         newline, A1        
00001964  103C 000E               1073              MOVE.B      #14, D0             ; command for trap call to display message
00001968  4E4F                    1074              TRAP        #15                 ; trap call            
0000196A                          1075  
0000196A  6000 F6A0               1076              BRA         loop 
0000196E                          1077  opLEA
0000196E  4244                    1078              CLR         D4                  ; Clearing space for source register
00001970  1801                    1079              MOVE.B      D1,D4               ; Moving byte to isolate register
00001972  E244                    1080              ASR         #one,D4
00001974  C87C 0007               1081              AND         #seven,D4           ; Isolated register
00001978                          1082  
00001978  4245                    1083              CLR         D5                  ; Clearing D5 to check if bits match LEA static bits
0000197A  1A01                    1084              MOVE.B      D1,D5
0000197C  CA7C 0001               1085              AND         #one,D5
00001980  E545                    1086              ASL         #two,D5
00001982                          1087              
00001982  1218                    1088              MOVE.B      (A0)+, D1           ; Taking in next byte
00001984                          1089              
00001984  1C01                    1090              MOVE.B      D1,D6
00001986  EC46                    1091              ASR         #six,D6
00001988  DA46                    1092              ADD         D6,D5
0000198A  4246                    1093              CLR         D6
0000198C                          1094  
0000198C  BA7C 0007               1095              CMP         #seven,D5
00001990  6600 0CA2               1096              BNE         invalid   
00001994                          1097              
00001994  43F9 00002685           1098              LEA         LEAmatch, A1        ; we know that the opcode will be LEA, so load A1 to print message
0000199A  103C 000E               1099              MOVE.B      #14, D0             ; command for trap call to display message
0000199E  4E4F                    1100              TRAP        #15                 ; trap call            
000019A0                          1101  
000019A0  43F9 00002642           1102              LEA         space, A1         ; we know that the opcode will be MOVEM, so load A1 to print message
000019A6  103C 000E               1103              MOVE.B      #14, D0             ; command for trap call to display message
000019AA  4E4F                    1104              TRAP        #15                 ; trap call            
000019AC                          1105              
000019AC  4242                    1106              CLR         D2
000019AE  1401                    1107              MOVE.B      D1,D2
000019B0  E642                    1108              ASR         #three,D2
000019B2  C47C 0007               1109              AND         #seven,D2
000019B6                          1110              
000019B6  4243                    1111              CLR         D3
000019B8  1601                    1112              MOVE.B      D1,D3
000019BA  C67C 0007               1113              AND         #seven,D3
000019BE                          1114              
000019BE  4EB9 00001FEA           1115              JSR         printEA
000019C4                          1116              
000019C4  43F9 00002649           1117              LEA         comma, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
000019CA  103C 000E               1118              MOVE.B      #14, D0             ; command for trap call to display message
000019CE  4E4F                    1119              TRAP        #15                 ; trap call            
000019D0                          1120              
000019D0                          1121              
000019D0  4243                    1122              CLR         D3
000019D2  1604                    1123              MOVE.B      D4,D3
000019D4  143C 0001               1124              MOVE.B      #one,D2
000019D8                          1125              
000019D8  4EB9 00001FEA           1126              JSR         printEA             ; Prints out source address
000019DE                          1127              
000019DE  43F9 0000263E           1128              LEA         newline, A1         ; Prints new line
000019E4  103C 000E               1129              MOVE.B      #14, D0             ; command for trap call to display message
000019E8  4E4F                    1130              TRAP        #15                 ; trap call
000019EA                          1131  
000019EA  6000 F620               1132              BRA         loop            
000019EE                          1133              
000019EE                          1134              
000019EE                          1135             
000019EE                          1136  
000019EE                          1137  
000019EE                          1138  opSUBQ      
000019EE  43F9 00002689           1139              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
000019F4  103C 000E               1140              MOVE.B      #14, D0             ; command for trap call to display message
000019F8  4E4F                    1141              TRAP        #15                 ; trap call
000019FA                          1142  
000019FA  43F9 0000268E           1143  opBRA       LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001A00  103C 000E               1144              MOVE.B      #14, D0             ; command for trap call to display message
00001A04  4E4F                    1145              TRAP        #15                 ; trap call
00001A06  43F9 00002642           1146              LEA         space, A1           ; create spaces
00001A0C  103C 000E               1147              MOVE.B      #14, D0             ; command for trap call to display message
00001A10  4E4F                    1148              TRAP        #15                 ; trap call
00001A12                          1149  
00001A12  43F9 00002692           1150  opBCS       LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001A18  103C 000E               1151              MOVE.B      #14, D0             ; command for trap call to display message
00001A1C  4E4F                    1152              TRAP        #15                 ; trap call
00001A1E                          1153  
00001A1E  43F9 00002696           1154  opBVC       LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001A24  103C 000E               1155              MOVE.B      #14, D0             ; command for trap call to display message
00001A28  4E4F                    1156              TRAP        #15                 ; trap call
00001A2A                          1157  
00001A2A  43F9 0000269A           1158  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001A30  103C 000E               1159          MOVE.B      #14, D0             ; command for trap call to display message
00001A34  4E4F                    1160          TRAP        #15                 ; trap call
00001A36                          1161  
00001A36  43F9 0000269E           1162  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001A3C  103C 000E               1163          MOVE.B      #14, D0             ; command for trap call to display message
00001A40  4E4F                    1164          TRAP        #15                 ; trap call
00001A42                          1165  
00001A42  43F9 000026AA           1166  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001A48  103C 000E               1167          MOVE.B      #14, D0             ; command for trap call to display message
00001A4C  4E4F                    1168          TRAP        #15                 ; trap call
00001A4E                          1169  
00001A4E  43F9 000026B6           1170  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001A54  103C 000E               1171          MOVE.B      #14, D0             ; command for trap call to display message
00001A58  4E4F                    1172          TRAP        #15                 ; trap call
00001A5A                          1173  
00001A5A  43F9 000026D0           1174  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001A60  103C 000E               1175          MOVE.B      #14, D0             ; command for trap call to display message
00001A64  4E4F                    1176          TRAP        #15                 ; trap call
00001A66                          1177  
00001A66  43F9 000026CC           1178  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001A6C  103C 000E               1179          MOVE.B      #14, D0             ; command for trap call to display message
00001A70  4E4F                    1180          TRAP        #15                 ; trap call
00001A72                          1181  
00001A72  43F9 000026C8           1182  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00001A78  103C 000E               1183          MOVE.B      #14, D0             ; command for trap call to display message
00001A7C  4E4F                    1184          TRAP        #15                 ; trap call
00001A7E                          1185  
00001A7E  43F9 000026C4           1186  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001A84  103C 000E               1187          MOVE.B      #14, D0             ; command for trap call to display message
00001A88  4E4F                    1188          TRAP        #15                 ; trap call
00001A8A                          1189  
00001A8A  43F9 000026D8           1190  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001A90  103C 000E               1191          MOVE.B      #14, D0             ; command for trap call to display message
00001A94  4E4F                    1192          TRAP        #15                 ; trap call
00001A96                          1193  
00001A96                          1194  opROR   
00001A96  43F9 000026D4           1195          LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001A9C  103C 000E               1196          MOVE.B      #14, D0             ; command for trap call to display message
00001AA0  4E4F                    1197          TRAP        #15                 ; trap call
00001AA2                          1198  
00001AA2                          1199  
00001AA2  48E7 FF7E               1200  MOVEMBRA    MOVEM.L  D0-D7/A1-A6, -(SP)     ; Branches off depending on size bit
00001AA6  BA7C 0000               1201              CMP      #zero,D5
00001AAA  6700 000A               1202              BEQ      MOVEMW
00001AAE  BA7C 0001               1203              CMP      #one, D5
00001AB2  6700 001E               1204              BEQ      MOVEML
00001AB6                          1205              
00001AB6                          1206  MOVEMW     
00001AB6  43F9 000026DF           1207              LEA         dispWord, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001ABC  103C 000E               1208              MOVE.B      #14, D0             ; command for trap call to display message
00001AC0  4E4F                    1209              TRAP        #15                 ; trap call
00001AC2                          1210  
00001AC2  43F9 00002642           1211              LEA         space, A1           ; we know that the opcode will be ROR, so load A1 to print message
00001AC8  103C 000E               1212              MOVE.B      #14, D0             ; command for trap call to display message
00001ACC  4E4F                    1213              TRAP        #15                 ; trap call
00001ACE                          1214              
00001ACE  6000 001E               1215              BRA         CheckDR
00001AD2                          1216  
00001AD2                          1217  MOVEML   
00001AD2  43F9 000026E2           1218              LEA         dispLong, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001AD8  103C 000E               1219              MOVE.B      #14, D0             ; command for trap call to display message
00001ADC  4E4F                    1220              TRAP        #15                 ; trap call
00001ADE                          1221  
00001ADE  43F9 00002642           1222              LEA         space, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001AE4  103C 000E               1223              MOVE.B      #14, D0             ; command for trap call to display message
00001AE8  4E4F                    1224              TRAP        #15                 ; trap call
00001AEA                          1225           
00001AEA                          1226  
00001AEA  6000 0002               1227              BRA         CheckDR
00001AEE                          1228  
00001AEE                          1229  CheckDR     
00001AEE                          1230              
00001AEE                          1231                
00001AEE  3218                    1232              MOVE.W      (A0)+, D1           ; Taking in next word
00001AF0  BC7C 0000               1233              CMP         #zero,D6
00001AF4  6700 0036               1234              BEQ         printRegMem
00001AF8  BC7C 0001               1235              CMP         #one,D6
00001AFC  6700 0006               1236              BEQ         printStack
00001B00  6000 0B32               1237              BRA         invalid
00001B04                          1238              
00001B04                          1239  printStack 
00001B04  43F9 00002655           1240              LEA         stack,A1
00001B0A  103C 000E               1241              MOVE.B      #14, D0             ; command for trap call to display message
00001B0E  4E4F                    1242              TRAP        #15                 ; trap call
00001B10                          1243  
00001B10  43F9 00002651           1244              LEA         inc,A1
00001B16  103C 000E               1245              MOVE.B      #14, D0             ; command for trap call to display message
00001B1A  4E4F                    1246              TRAP        #15                 ; trap call
00001B1C                          1247              
00001B1C  43F9 00002649           1248              LEA         comma,A1
00001B22  103C 000E               1249              MOVE.B      #14, D0             ; command for trap call to display message
00001B26  4E4F                    1250              TRAP        #15                 ; trap call
00001B28                          1251              
00001B28                          1252              
00001B28  6000 0002               1253              BRA         printRegMem
00001B2C                          1254             
00001B2C                          1255  printRegMem 
00001B2C  4244                    1256              CLR         D4                  ; Using D4 to store predecrement mode addresses
00001B2E  1801                    1257              MOVE.B      D1,D4               ; Stores bits for D0-D7
00001B30                          1258              
00001B30  4245                    1259              CLR         D5
00001B32  1A01                    1260              MOVE.B      D1,D5
00001B34  CA7C 0001               1261              AND         #mask1,D5
00001B38  BA7C 0001               1262              CMP         #mask1,D5
00001B3C  6700 007A               1263              BEQ         DataReg0
00001B40                          1264              
00001B40  4245                    1265              CLR         D5
00001B42  1A01                    1266              MOVE.B      D1,D5
00001B44  CA7C 0002               1267              AND         #mask2,D5
00001B48  BA7C 0002               1268              CMP         #mask2,D5
00001B4C  6700 009A               1269              BEQ         DataReg1
00001B50                          1270  
00001B50  4245                    1271              CLR         D5
00001B52  1A01                    1272              MOVE.B      D1,D5
00001B54  CA7C 0004               1273              AND         #mask3,D5
00001B58  BA7C 0004               1274              CMP         #mask3,D5
00001B5C  6700 00CA               1275              BEQ         DataReg2            
00001B60                          1276              
00001B60  4245                    1277              CLR         D5
00001B62  1A01                    1278              MOVE.B      D1,D5
00001B64  CA7C 0008               1279              AND         #mask4,D5
00001B68  BA7C 0008               1280              CMP         #mask4,D5
00001B6C  6700 00FA               1281              BEQ         DataReg3            
00001B70                          1282              
00001B70  4245                    1283              CLR         D5
00001B72  1A01                    1284              MOVE.B      D1,D5
00001B74  CA7C 0010               1285              AND         #mask5,D5
00001B78  BA7C 0010               1286              CMP         #mask5,D5
00001B7C  6700 012A               1287              BEQ         DataReg4
00001B80                          1288  
00001B80  4245                    1289              CLR         D5
00001B82  1A01                    1290              MOVE.B      D1,D5
00001B84  CA7C 0020               1291              AND         #mask6,D5
00001B88  BA7C 0020               1292              CMP         #mask6,D5
00001B8C  6700 015A               1293              BEQ         DataReg5
00001B90                          1294  
00001B90  4245                    1295              CLR         D5
00001B92  1A01                    1296              MOVE.B      D1,D5
00001B94  CA7C 0040               1297              AND         #mask7,D5
00001B98  BA7C 0040               1298              CMP         #mask7,D5
00001B9C  6700 018A               1299              BEQ         DataReg6
00001BA0                          1300  
00001BA0  4245                    1301              CLR         D5
00001BA2  1A01                    1302              MOVE.B      D1,D5
00001BA4  CA7C 0080               1303              AND         #mask8,D5
00001BA8  BA7C 0080               1304              CMP         #mask8,D5
00001BAC  6700 01BA               1305              BEQ         DataReg7
00001BB0                          1306              
00001BB0  6000 0A82               1307              BRA         invalid
00001BB4  6000 0A7E               1308              BRA         invalid        
00001BB8                          1309              
00001BB8                          1310  DataReg0
00001BB8  43F9 00002702           1311              LEA         dispD0, A1          ; Output string D0
00001BBE  103C 000E               1312              MOVE.B      #14, D0             ; command for trap call to display message
00001BC2  4E4F                    1313              TRAP        #15                 ; trap call
00001BC4                          1314              
00001BC4  4245                    1315              CLR         D5
00001BC6  1A01                    1316              MOVE.B      D1,D5
00001BC8  CA7C 0002               1317              AND         #mask2,D5
00001BCC  BA7C 0002               1318              CMP         #mask2,D5
00001BD0  6700 0006               1319              BEQ         Reg0Cont
00001BD4  6000 01A2               1320              BRA         printMem
00001BD8                          1321  Reg0Cont        
00001BD8  43F9 0000264F           1322              LEA         dec, A1             ; Output -
00001BDE  103C 000E               1323              MOVE.B      #14, D0             ; command for trap call to display message
00001BE2  4E4F                    1324              TRAP        #15                 ; trap call        
00001BE4  6000 0002               1325              BRA         DataReg1
00001BE8                          1326  
00001BE8                          1327  DataReg1
00001BE8  4245                    1328              CLR         D5
00001BEA  1A01                    1329              MOVE.B      D1,D5
00001BEC  CA7C 0005               1330              AND         #maskA,D5
00001BF0  BA7C 0005               1331              CMP         #maskA,D5
00001BF4  6700 0032               1332              BEQ         DataReg2
00001BF8                          1333              
00001BF8  43F9 00002705           1334              LEA         dispD1, A1          ; Output string D0
00001BFE  103C 000E               1335              MOVE.B      #14, D0             ; command for trap call to display message
00001C02  4E4F                    1336              TRAP        #15                 ; trap call
00001C04                          1337              
00001C04  4245                    1338              CLR         D5
00001C06  1A01                    1339              MOVE.B      D1,D5
00001C08  CA7C 0004               1340              AND         #mask3,D5
00001C0C  BA7C 0004               1341              CMP         #mask3,D5
00001C10  6700 0006               1342              BEQ         Reg1Cont
00001C14  6000 0162               1343              BRA         printMem
00001C18                          1344  Reg1Cont        
00001C18  43F9 0000264F           1345              LEA         dec, A1             ; Output -
00001C1E  103C 000E               1346              MOVE.B      #14, D0             ; command for trap call to display message
00001C22  4E4F                    1347              TRAP        #15                 ; trap call        
00001C24  6000 0002               1348              BRA         DataReg2
00001C28                          1349  
00001C28                          1350  
00001C28                          1351  DataReg2
00001C28  4245                    1352              CLR         D5
00001C2A  1A01                    1353              MOVE.B      D1,D5
00001C2C  CA7C 000A               1354              AND         #maskB,D5
00001C30  BA7C 000A               1355              CMP         #maskB,D5
00001C34  6700 0032               1356              BEQ         DataReg3
00001C38                          1357              
00001C38                          1358              
00001C38  43F9 00002708           1359              LEA         dispD2, A1          ; Output string D0
00001C3E  103C 000E               1360              MOVE.B      #14, D0             ; command for trap call to display message
00001C42  4E4F                    1361              TRAP        #15                 ; trap call
00001C44                          1362              
00001C44  4245                    1363              CLR         D5
00001C46  1A01                    1364              MOVE.B      D1,D5
00001C48  CA7C 0008               1365              AND         #mask4,D5
00001C4C  BA7C 0008               1366              CMP         #mask4,D5
00001C50  6700 0006               1367              BEQ         Reg2Cont
00001C54  6000 0122               1368              BRA         printMem
00001C58                          1369  Reg2Cont        
00001C58  43F9 0000264F           1370              LEA         dec, A1             ; Output -
00001C5E  103C 000E               1371              MOVE.B      #14, D0             ; command for trap call to display message
00001C62  4E4F                    1372              TRAP        #15                 ; trap call        
00001C64  6000 0002               1373              BRA         DataReg3
00001C68                          1374  
00001C68                          1375  DataReg3
00001C68  4245                    1376              CLR         D5
00001C6A  1A01                    1377              MOVE.B      D1,D5
00001C6C  CA7C 0014               1378              AND         #maskC,D5
00001C70  BA7C 0014               1379              CMP         #maskC,D5
00001C74  6700 0032               1380              BEQ         DataReg4
00001C78                          1381              
00001C78  43F9 0000270B           1382              LEA         dispD3, A1          ; Output string D0
00001C7E  103C 000E               1383              MOVE.B      #14, D0             ; command for trap call to display message
00001C82  4E4F                    1384              TRAP        #15                 ; trap call
00001C84                          1385              
00001C84  4245                    1386              CLR         D5
00001C86  1A01                    1387              MOVE.B      D1,D5
00001C88  CA7C 0010               1388              AND         #mask5,D5
00001C8C  BA7C 0010               1389              CMP         #mask5,D5
00001C90  6700 0006               1390              BEQ         Reg3Cont
00001C94  6000 00E2               1391              BRA         printMem
00001C98                          1392  Reg3Cont        
00001C98  43F9 0000264F           1393              LEA         dec, A1             ; Output -
00001C9E  103C 000E               1394              MOVE.B      #14, D0             ; command for trap call to display message
00001CA2  4E4F                    1395              TRAP        #15                 ; trap call        
00001CA4  6000 0002               1396              BRA         DataReg4
00001CA8                          1397  
00001CA8                          1398  
00001CA8                          1399  DataReg4
00001CA8  4245                    1400              CLR         D5
00001CAA  1A01                    1401              MOVE.B      D1,D5
00001CAC  CA7C 0028               1402              AND         #maskD,D5
00001CB0  BA7C 0028               1403              CMP         #maskD,D5
00001CB4  6700 0032               1404              BEQ         DataReg5
00001CB8                          1405              
00001CB8  43F9 0000270E           1406              LEA         dispD4, A1          ; Output string D0
00001CBE  103C 000E               1407              MOVE.B      #14, D0             ; command for trap call to display message
00001CC2  4E4F                    1408              TRAP        #15                 ; trap call
00001CC4                          1409              
00001CC4  4245                    1410              CLR         D5
00001CC6  1A01                    1411              MOVE.B      D1,D5
00001CC8  CA7C 0020               1412              AND         #mask6,D5
00001CCC  BA7C 0020               1413              CMP         #mask6,D5
00001CD0  6700 0006               1414              BEQ         Reg4Cont
00001CD4  6000 00A2               1415              BRA         printMem
00001CD8                          1416  Reg4Cont        
00001CD8  43F9 0000264F           1417              LEA         dec, A1             ; Output -
00001CDE  103C 000E               1418              MOVE.B      #14, D0             ; command for trap call to display message
00001CE2  4E4F                    1419              TRAP        #15                 ; trap call        
00001CE4  6000 0002               1420              BRA         DataReg5
00001CE8                          1421  
00001CE8                          1422  DataReg5
00001CE8  4245                    1423              CLR         D5
00001CEA  1A01                    1424              MOVE.B      D1,D5
00001CEC  CA7C 0050               1425              AND         #maskE,D5
00001CF0  BA7C 0050               1426              CMP         #maskE,D5
00001CF4  6700 0032               1427              BEQ         DataReg6
00001CF8                          1428              
00001CF8  43F9 00002711           1429              LEA         dispD5, A1          ; Output string D0
00001CFE  103C 000E               1430              MOVE.B      #14, D0             ; command for trap call to display message
00001D02  4E4F                    1431              TRAP        #15                 ; trap call
00001D04                          1432              
00001D04  4245                    1433              CLR         D5
00001D06  1A01                    1434              MOVE.B      D1,D5
00001D08  CA7C 0040               1435              AND         #mask7,D5
00001D0C  BA7C 0040               1436              CMP         #mask7,D5
00001D10  6700 0006               1437              BEQ         Reg5Cont
00001D14  6000 0062               1438              BRA         printMem
00001D18                          1439  Reg5Cont        
00001D18  43F9 0000264F           1440              LEA         dec, A1             ; Output -
00001D1E  103C 000E               1441              MOVE.B      #14, D0             ; command for trap call to display message
00001D22  4E4F                    1442              TRAP        #15                 ; trap call        
00001D24  6000 0042               1443              BRA         DataReg7
00001D28                          1444  
00001D28                          1445  DataReg6
00001D28  4245                    1446              CLR         D5
00001D2A  1A01                    1447              MOVE.B      D1,D5
00001D2C  CA7C 00A0               1448              AND         #maskF,D5
00001D30  BA7C 00A0               1449              CMP         #maskF,D5
00001D34  6700 0032               1450              BEQ         DataReg7
00001D38                          1451  
00001D38  43F9 00002714           1452              LEA         dispD6, A1          ; Output string D0
00001D3E  103C 000E               1453              MOVE.B      #14, D0             ; command for trap call to display message
00001D42  4E4F                    1454              TRAP        #15                 ; trap call
00001D44                          1455              
00001D44  4245                    1456              CLR         D5
00001D46  1A01                    1457              MOVE.B      D1,D5
00001D48  CA7C 0080               1458              AND         #mask8,D5
00001D4C  BA7C 0080               1459              CMP         #mask8,D5
00001D50  6700 0006               1460              BEQ         Reg6Cont
00001D54  6000 0022               1461              BRA         printMem
00001D58                          1462  Reg6Cont        
00001D58  43F9 0000264F           1463              LEA         dec, A1             ; Output -
00001D5E  103C 000E               1464              MOVE.B      #14, D0             ; command for trap call to display message
00001D62  4E4F                    1465              TRAP        #15                 ; trap call        
00001D64  6000 0002               1466              BRA         DataReg7
00001D68                          1467  
00001D68                          1468  DataReg7    
00001D68  43F9 00002717           1469              LEA         dispD7, A1             ; Output -
00001D6E  103C 000E               1470              MOVE.B      #14, D0             ; command for trap call to display message
00001D72  4E4F                    1471              TRAP        #15                 ; trap call        
00001D74  6000 0002               1472              BRA         printMem            
00001D78                          1473  printMem                                    ; Made this function in order to reuse if DR is 1
00001D78  BC7C 0001               1474              CMP         #one,D6
00001D7C  6700 0266               1475              BEQ         endMOVE1
00001D80  6000 0002               1476              BRA         printMemNow
00001D84                          1477  printMemNow               
00001D84  43F9 00002653           1478              LEA         slash, A1           ; Display slash
00001D8A  103C 000E               1479              MOVE.B      #14, D0             ; command for trap call to display message
00001D8E  4E4F                    1480              TRAP        #15                 ; trap call
00001D90                          1481           
00001D90  4244                    1482              CLR         D4                  ; Using D4 to store predecrement mode addresses
00001D92  3801                    1483              MOVE.W      D1,D4               ; Stores bits for D0-D7
00001D94  E044                    1484              ASR         #eight,D4
00001D96                          1485              
00001D96  4245                    1486              CLR         D5
00001D98  1A04                    1487              MOVE.B      D4,D5
00001D9A  CA7C 0001               1488              AND         #mask1,D5
00001D9E  BA7C 0001               1489              CMP         #mask1,D5
00001DA2  6700 0072               1490              BEQ         AddrReg0
00001DA6                          1491              
00001DA6  4245                    1492              CLR         D5
00001DA8  1A04                    1493              MOVE.B      D4,D5
00001DAA  CA7C 0002               1494              AND         #mask2,D5
00001DAE  BA7C 0002               1495              CMP         #mask2,D5
00001DB2  6700 0092               1496              BEQ         AddrReg1
00001DB6                          1497  
00001DB6  4245                    1498              CLR         D5
00001DB8  1A04                    1499              MOVE.B      D4,D5
00001DBA  CA7C 0004               1500              AND         #mask3,D5
00001DBE  BA7C 0004               1501              CMP         #mask3,D5
00001DC2  6700 00C2               1502              BEQ         AddrReg2            
00001DC6                          1503              
00001DC6  4245                    1504              CLR         D5
00001DC8  1A04                    1505              MOVE.B      D4,D5
00001DCA  CA7C 0008               1506              AND         #mask4,D5
00001DCE  BA7C 0008               1507              CMP         #mask4,D5
00001DD2  6700 00F2               1508              BEQ         AddrReg3            
00001DD6                          1509              
00001DD6  4245                    1510              CLR         D5
00001DD8  1A04                    1511              MOVE.B      D4,D5
00001DDA  CA7C 0010               1512              AND         #mask5,D5
00001DDE  BA7C 0010               1513              CMP         #mask5,D5
00001DE2  6700 0122               1514              BEQ         AddrReg4
00001DE6                          1515  
00001DE6  4245                    1516              CLR         D5
00001DE8  1A04                    1517              MOVE.B      D4,D5
00001DEA  CA7C 0020               1518              AND         #mask6,D5
00001DEE  BA7C 0020               1519              CMP         #mask6,D5
00001DF2  6700 0152               1520              BEQ         AddrReg5
00001DF6                          1521  
00001DF6  4245                    1522              CLR         D5
00001DF8  1A04                    1523              MOVE.B      D4,D5
00001DFA  CA7C 0040               1524              AND         #mask7,D5
00001DFE  BA7C 0040               1525              CMP         #mask7,D5
00001E02  6700 0182               1526              BEQ         AddrReg6
00001E06                          1527  
00001E06  4245                    1528              CLR         D5
00001E08  1A04                    1529              MOVE.B      D4,D5
00001E0A  CA7C 0080               1530              AND         #mask8,D5
00001E0E  BA7C 0080               1531              CMP         #mask8,D5
00001E12  6700 01B2               1532              BEQ         AddrReg7
00001E16                          1533  AddrReg0
00001E16  43F9 000026E8           1534              LEA         dispA0, A1          ; Output string D0
00001E1C  103C 000E               1535              MOVE.B      #14, D0             ; command for trap call to display message
00001E20  4E4F                    1536              TRAP        #15                 ; trap call
00001E22                          1537              
00001E22  4245                    1538              CLR         D5
00001E24  1A01                    1539              MOVE.B      D1,D5
00001E26  CA7C 0002               1540              AND         #mask2,D5
00001E2A  BA7C 0002               1541              CMP         #mask2,D5
00001E2E  6700 0006               1542              BEQ         Addr0Cont
00001E32  6000 01A2               1543              BRA         endMOVE
00001E36                          1544  Addr0Cont        
00001E36  43F9 0000264F           1545              LEA         dec, A1             ; Output -
00001E3C  103C 000E               1546              MOVE.B      #14, D0             ; command for trap call to display message
00001E40  4E4F                    1547              TRAP        #15                 ; trap call        
00001E42  6000 0002               1548              BRA         AddrReg1
00001E46                          1549  
00001E46                          1550  AddrReg1
00001E46  4245                    1551              CLR         D5
00001E48  1A04                    1552              MOVE.B      D4,D5
00001E4A  CA7C 0005               1553              AND         #maskA,D5
00001E4E  BA7C 0005               1554              CMP         #maskA,D5
00001E52  6700 0032               1555              BEQ         AddrReg2
00001E56                          1556              
00001E56  43F9 000026EB           1557              LEA         dispA1, A1          ; Output string D0
00001E5C  103C 000E               1558              MOVE.B      #14, D0             ; command for trap call to display message
00001E60  4E4F                    1559              TRAP        #15                 ; trap call
00001E62                          1560              
00001E62  4245                    1561              CLR         D5
00001E64  1A04                    1562              MOVE.B      D4,D5
00001E66  CA7C 0004               1563              AND         #mask3,D5
00001E6A  BA7C 0004               1564              CMP         #mask3,D5
00001E6E  6700 0006               1565              BEQ         Addr1Cont
00001E72  6000 0162               1566              BRA         endMOVE
00001E76                          1567  Addr1Cont        
00001E76  43F9 0000264F           1568              LEA         dec, A1             ; Output -
00001E7C  103C 000E               1569              MOVE.B      #14, D0             ; command for trap call to display message
00001E80  4E4F                    1570              TRAP        #15                 ; trap call        
00001E82  6000 0002               1571              BRA         AddrReg2
00001E86                          1572  
00001E86                          1573  
00001E86                          1574  AddrReg2
00001E86  4245                    1575              CLR         D5
00001E88  1A04                    1576              MOVE.B      D4,D5
00001E8A  CA7C 000A               1577              AND         #maskB,D5
00001E8E  BA7C 000A               1578              CMP         #maskB,D5
00001E92  6700 0032               1579              BEQ         AddrReg3
00001E96                          1580              
00001E96                          1581              
00001E96  43F9 000026EE           1582              LEA         dispA2, A1          ; Output string D0
00001E9C  103C 000E               1583              MOVE.B      #14, D0             ; command for trap call to display message
00001EA0  4E4F                    1584              TRAP        #15                 ; trap call
00001EA2                          1585              
00001EA2  4245                    1586              CLR         D5
00001EA4  1A04                    1587              MOVE.B      D4,D5
00001EA6  CA7C 0008               1588              AND         #mask4,D5
00001EAA  BA7C 0008               1589              CMP         #mask4,D5
00001EAE  6700 0006               1590              BEQ         Addr2Cont
00001EB2  6000 0122               1591              BRA         endMOVE
00001EB6                          1592  Addr2Cont        
00001EB6  43F9 0000264F           1593              LEA         dec, A1             ; Output -
00001EBC  103C 000E               1594              MOVE.B      #14, D0             ; command for trap call to display message
00001EC0  4E4F                    1595              TRAP        #15                 ; trap call        
00001EC2  6000 0002               1596              BRA         AddrReg3
00001EC6                          1597  
00001EC6                          1598  AddrReg3
00001EC6  4245                    1599              CLR         D5
00001EC8  1A04                    1600              MOVE.B      D4,D5
00001ECA  CA7C 0014               1601              AND         #maskC,D5
00001ECE  BA7C 0014               1602              CMP         #maskC,D5
00001ED2  6700 0032               1603              BEQ         AddrReg4
00001ED6                          1604              
00001ED6  43F9 000026F1           1605              LEA         dispA3, A1          ; Output string D0
00001EDC  103C 000E               1606              MOVE.B      #14, D0             ; command for trap call to display message
00001EE0  4E4F                    1607              TRAP        #15                 ; trap call
00001EE2                          1608              
00001EE2  4245                    1609              CLR         D5
00001EE4  1A04                    1610              MOVE.B      D4,D5
00001EE6  CA7C 0010               1611              AND         #mask5,D5
00001EEA  BA7C 0010               1612              CMP         #mask5,D5
00001EEE  6700 0006               1613              BEQ         Addr3Cont
00001EF2  6000 00E2               1614              BRA         endMOVE
00001EF6                          1615  Addr3Cont        
00001EF6  43F9 0000264F           1616              LEA         dec, A1             ; Output -
00001EFC  103C 000E               1617              MOVE.B      #14, D0             ; command for trap call to display message
00001F00  4E4F                    1618              TRAP        #15                 ; trap call        
00001F02  6000 0002               1619              BRA         AddrReg4
00001F06                          1620  
00001F06                          1621  
00001F06                          1622  AddrReg4
00001F06  4245                    1623              CLR         D5
00001F08  1A04                    1624              MOVE.B      D4,D5
00001F0A  CA7C 0028               1625              AND         #maskD,D5
00001F0E  BA7C 0028               1626              CMP         #maskD,D5
00001F12  6700 0032               1627              BEQ         AddrReg5
00001F16                          1628              
00001F16  43F9 000026F4           1629              LEA         dispA4, A1          ; Output string D0
00001F1C  103C 000E               1630              MOVE.B      #14, D0             ; command for trap call to display message
00001F20  4E4F                    1631              TRAP        #15                 ; trap call
00001F22                          1632              
00001F22  4245                    1633              CLR         D5
00001F24  1A04                    1634              MOVE.B      D4,D5
00001F26  CA7C 0020               1635              AND         #mask6,D5
00001F2A  BA7C 0020               1636              CMP         #mask6,D5
00001F2E  6700 0006               1637              BEQ         Addr4Cont
00001F32  6000 00A2               1638              BRA         endMOVE
00001F36                          1639  Addr4Cont        
00001F36  43F9 0000264F           1640              LEA         dec, A1             ; Output -
00001F3C  103C 000E               1641              MOVE.B      #14, D0             ; command for trap call to display message
00001F40  4E4F                    1642              TRAP        #15                 ; trap call        
00001F42  6000 0002               1643              BRA         AddrReg5
00001F46                          1644  AddrReg5
00001F46  4245                    1645              CLR         D5
00001F48  1A04                    1646              MOVE.B      D4,D5
00001F4A  CA7C 0050               1647              AND         #maskE,D5
00001F4E  BA7C 0050               1648              CMP         #maskE,D5
00001F52  6700 0032               1649              BEQ         AddrReg6
00001F56                          1650              
00001F56  43F9 000026F7           1651              LEA         dispA5, A1          ; Output string D0
00001F5C  103C 000E               1652              MOVE.B      #14, D0             ; command for trap call to display message
00001F60  4E4F                    1653              TRAP        #15                 ; trap call
00001F62                          1654              
00001F62  4245                    1655              CLR         D5
00001F64  1A04                    1656              MOVE.B      D4,D5
00001F66  CA7C 0040               1657              AND         #mask7,D5
00001F6A  BA7C 0040               1658              CMP         #mask7,D5
00001F6E  6700 0006               1659              BEQ         Addr5Cont
00001F72  6000 0062               1660              BRA         endMOVE
00001F76                          1661  Addr5Cont        
00001F76  43F9 0000264F           1662              LEA         dec, A1             ; Output -
00001F7C  103C 000E               1663              MOVE.B      #14, D0             ; command for trap call to display message
00001F80  4E4F                    1664              TRAP        #15                 ; trap call        
00001F82  6000 0042               1665              BRA         AddrReg7
00001F86                          1666  
00001F86                          1667  AddrReg6
00001F86  4245                    1668              CLR         D5
00001F88  1A04                    1669              MOVE.B      D4,D5
00001F8A  CA7C 00A0               1670              AND         #maskF,D5
00001F8E  BA7C 00A0               1671              CMP         #maskF,D5
00001F92  6700 0032               1672              BEQ         AddrReg7
00001F96                          1673  
00001F96  43F9 000026FA           1674              LEA         dispA6, A1          ; Output string D0
00001F9C  103C 000E               1675              MOVE.B      #14, D0             ; command for trap call to display message
00001FA0  4E4F                    1676              TRAP        #15                 ; trap call
00001FA2                          1677              
00001FA2  4245                    1678              CLR         D5
00001FA4  1A04                    1679              MOVE.B      D4,D5
00001FA6  CA7C 0080               1680              AND         #mask8,D5
00001FAA  BA7C 0080               1681              CMP         #mask8,D5
00001FAE  6700 0006               1682              BEQ         Addr6Cont
00001FB2  6000 0022               1683              BRA         endMOVE
00001FB6                          1684  Addr6Cont        
00001FB6  43F9 0000264F           1685              LEA         dec, A1             ; Output -
00001FBC  103C 000E               1686              MOVE.B      #14, D0             ; command for trap call to display message
00001FC0  4E4F                    1687              TRAP        #15                 ; trap call        
00001FC2  6000 0002               1688              BRA         AddrReg7
00001FC6                          1689  
00001FC6                          1690  AddrReg7    
00001FC6  43F9 000026FD           1691              LEA         dispA7, A1          ; Output -
00001FCC  103C 000E               1692              MOVE.B      #14, D0             ; command for trap call to display message
00001FD0  4E4F                    1693              TRAP        #15                 ; trap call        
00001FD2  6000 0002               1694              BRA         endMOVE
00001FD6                          1695  
00001FD6                          1696  
00001FD6                          1697  
00001FD6                          1698  
00001FD6                          1699  endMOVE
00001FD6  BC7C 0001               1700              CMP         #one,D6
00001FDA  6700 FB50               1701              BEQ         printRegMem
00001FDE  4CDF 7EFF               1702              MOVEM.L  (SP)+, D0-D7/A1-A6
00001FE2  4E75                    1703              RTS
00001FE4                          1704  endMove1                                    ; Used if MOVEM has DR is 1
00001FE4  4CDF 7EFF               1705              MOVEM.L  (SP)+, D0-D7/A1-A6
00001FE8  4E75                    1706              RTS
00001FEA                          1707  
00001FEA                          1708  ***********************************************************************************************************
00001FEA                          1709  *
00001FEA                          1710  *                                           EA Print Check
00001FEA                          1711  *
00001FEA                          1712  ***********************************************************************************************************
00001FEA  48E7 FF7E               1713  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00001FEE                          1714  
00001FEE  B43C 0000               1715              CMP.B       #zero, D2
00001FF2  6700 002E               1716              BEQ         pDataReg
00001FF6  B43C 0001               1717              CMP.B       #one, D2
00001FFA  6700 00E6               1718              BEQ         pAddrReg
00001FFE  B43C 0002               1719              CMP.B       #two, D2
00002002  6700 019E               1720              BEQ         pAddrDir
00002006  B43C 0003               1721              CMP.B       #three, D2
0000200A  6700 02C2               1722              BEQ         pAddrPost
0000200E  B43C 0004               1723              CMP.B       #four, D2
00002012  6700 0446               1724              BEQ         pAddrDec
00002016  B43C 0007               1725              CMP.B       #seven, D2
0000201A  6700 0576               1726              BEQ         pHex
0000201E  6000 0614               1727              BRA         invalid
00002022                          1728  
00002022                          1729  ***********************************************************************************************************
00002022                          1730  * Data Register        
00002022  B63C 0000               1731  pDataReg    CMP.B   #zero,D3
00002026  6700 003A               1732              BEQ     displayD0
0000202A  B63C 0001               1733              CMP.B   #one,D3
0000202E  6700 0042               1734              BEQ     displayD1
00002032  B63C 0002               1735              CMP.B   #two,D3
00002036  6700 004A               1736              BEQ     displayD2
0000203A  B63C 0003               1737              CMP.B   #three,D3
0000203E  6700 0052               1738              BEQ     displayD3
00002042  B63C 0004               1739              CMP.B   #four,D3
00002046  6700 005A               1740              BEQ     displayD4
0000204A  B63C 0005               1741              CMP.B   #five,D3
0000204E  6700 0062               1742              BEQ     displayD5
00002052  B63C 0006               1743              CMP.B   #six,D3
00002056  6700 006A               1744              BEQ     displayD6
0000205A  B63C 0007               1745              CMP.B   #seven,D3
0000205E  6700 0072               1746              BEQ     displayD7
00002062                          1747              
00002062  43F9 00002702           1748  displayD0   LEA         dispD0, A1          ; Display space
00002068  103C 000E               1749              MOVE.B      #14, D0             ; command for trap call to display message
0000206C  4E4F                    1750              TRAP        #15                 ; trap call
0000206E  6000 05C4               1751              BRA         endSUB              ; go to the end of the subroutine
00002072                          1752              
00002072  43F9 00002705           1753  displayD1   LEA         dispD1, A1          ; Display space
00002078  103C 000E               1754              MOVE.B      #14, D0             ; command for trap call to display message
0000207C  4E4F                    1755              TRAP        #15                 ; trap call
0000207E  6000 05B4               1756              BRA         endSUB              ; go to the end of the subroutine
00002082                          1757  
00002082  43F9 00002708           1758  displayD2   LEA         dispD2, A1          ; Display space
00002088  103C 000E               1759              MOVE.B      #14, D0             ; command for trap call to display message
0000208C  4E4F                    1760              TRAP        #15                 ; trap call
0000208E  6000 05A4               1761              BRA         endSUB              ; go to the end of the subroutine
00002092                          1762  
00002092  43F9 0000270B           1763  displayD3   LEA         dispD3, A1          ; Display space
00002098  103C 000E               1764              MOVE.B      #14, D0             ; command for trap call to display message
0000209C  4E4F                    1765              TRAP        #15                 ; trap call
0000209E  6000 0594               1766              BRA         endSUB              ; go to the end of the subroutine
000020A2                          1767  
000020A2  43F9 0000270E           1768  displayD4   LEA         dispD4, A1          ; Display space
000020A8  103C 000E               1769              MOVE.B      #14, D0             ; command for trap call to display message
000020AC  4E4F                    1770              TRAP        #15                 ; trap call
000020AE  6000 0584               1771              BRA         endSUB              ; go to the end of the subroutine
000020B2                          1772  
000020B2  43F9 00002711           1773  displayD5   LEA         dispD5, A1          ; Display space
000020B8  103C 000E               1774              MOVE.B      #14, D0             ; command for trap call to display message
000020BC  4E4F                    1775              TRAP        #15                 ; trap call
000020BE  6000 0574               1776              BRA         endSUB              ; go to the end of the subroutine
000020C2                          1777  
000020C2  43F9 00002714           1778  displayD6   LEA         dispD6, A1          ; Display space
000020C8  103C 000E               1779              MOVE.B      #14, D0             ; command for trap call to display message
000020CC  4E4F                    1780              TRAP        #15                 ; trap call
000020CE  6000 0564               1781              BRA         endSUB              ; go to the end of the subroutine
000020D2                          1782  
000020D2  43F9 00002717           1783  displayD7   LEA         dispD7, A1          ; Display space
000020D8  103C 000E               1784              MOVE.B      #14, D0             ; command for trap call to display message
000020DC  4E4F                    1785              TRAP        #15                 ; trap call
000020DE  6000 0554               1786              BRA         endSUB              ; go to the end of the subroutine
000020E2                          1787  ***********************************************************************************************************
000020E2                          1788  * Address Register
000020E2  B63C 0000               1789  pAddrReg    CMP.B   #zero,D3
000020E6  6700 003A               1790              BEQ     displayA0
000020EA  B63C 0001               1791              CMP.B   #one,D3
000020EE  6700 0042               1792              BEQ     displayA1
000020F2  B63C 0002               1793              CMP.B   #two,D3
000020F6  6700 004A               1794              BEQ     displayA2
000020FA  B63C 0003               1795              CMP.B   #three,D3
000020FE  6700 0052               1796              BEQ     displayA3
00002102  B63C 0004               1797              CMP.B   #four,D3
00002106  6700 005A               1798              BEQ     displayA4
0000210A  B63C 0005               1799              CMP.B   #five,D3
0000210E  6700 0062               1800              BEQ     displayA5
00002112  B63C 0006               1801              CMP.B   #six,D3
00002116  6700 006A               1802              BEQ     displayA6
0000211A  B63C 0007               1803              CMP.B   #seven,D3
0000211E  6700 0072               1804              BEQ     displayA7
00002122                          1805              
00002122  43F9 000026E8           1806  displayA0   LEA         dispA0, A1          ; Display space
00002128  103C 000E               1807              MOVE.B      #14, D0             ; command for trap call to display message
0000212C  4E4F                    1808              TRAP        #15                 ; trap call
0000212E  6000 0504               1809              BRA         endSUB              ; go to the end of the subroutine
00002132                          1810              
00002132  43F9 000026EB           1811  displayA1   LEA         dispA1, A1          ; Display space
00002138  103C 000E               1812              MOVE.B      #14, D0             ; command for trap call to display message
0000213C  4E4F                    1813              TRAP        #15                 ; trap call
0000213E  6000 04F4               1814              BRA         endSUB              ; go to the end of the subroutine
00002142                          1815  
00002142  43F9 000026EE           1816  displayA2   LEA         dispA2, A1          ; Display space
00002148  103C 000E               1817              MOVE.B      #14, D0             ; command for trap call to display message
0000214C  4E4F                    1818              TRAP        #15                 ; trap call
0000214E  6000 04E4               1819              BRA         endSUB              ; go to the end of the subroutine
00002152                          1820  
00002152  43F9 000026F1           1821  displayA3   LEA         dispA3, A1          ; Display space
00002158  103C 000E               1822              MOVE.B      #14, D0             ; command for trap call to display message
0000215C  4E4F                    1823              TRAP        #15                 ; trap call
0000215E  6000 04D4               1824              BRA         endSUB              ; go to the end of the subroutine
00002162                          1825  
00002162  43F9 000026F4           1826  displayA4   LEA         dispA4, A1          ; Display space
00002168  103C 000E               1827              MOVE.B      #14, D0             ; command for trap call to display message
0000216C  4E4F                    1828              TRAP        #15                 ; trap call
0000216E  6000 04C4               1829              BRA         endSUB              ; go to the end of the subroutine
00002172                          1830  
00002172  43F9 000026F7           1831  displayA5   LEA         dispA5, A1          ; Display space
00002178  103C 000E               1832              MOVE.B      #14, D0             ; command for trap call to display message
0000217C  4E4F                    1833              TRAP        #15                 ; trap call
0000217E  6000 04B4               1834              BRA         endSUB              ; go to the end of the subroutine
00002182                          1835  
00002182  43F9 000026FA           1836  displayA6   LEA         dispA6, A1          ; Display space
00002188  103C 000E               1837              MOVE.B      #14, D0             ; command for trap call to display message
0000218C  4E4F                    1838              TRAP        #15                 ; trap call
0000218E  6000 04A4               1839              BRA         endSUB              ; go to the end of the subroutine
00002192                          1840  
00002192  43F9 000026FD           1841  displayA7   LEA         dispA7, A1          ; Display space
00002198  103C 000E               1842              MOVE.B      #14, D0             ; command for trap call to display message
0000219C  4E4F                    1843              TRAP        #15                 ; trap call
0000219E  6000 0494               1844              BRA         endSUB              ; go to the end of the subroutine
000021A2                          1845  
000021A2                          1846  ***********************************************************************************************************
000021A2                          1847  * Address Register Direct
000021A2                          1848  
000021A2  43F9 0000264B           1849  pAddrDir    LEA         opPer, A1           ; Display space
000021A8  103C 000E               1850              MOVE.B      #14, D0             ; command for trap call to display message
000021AC  4E4F                    1851              TRAP        #15                 ; trap call
000021AE                          1852              
000021AE  B63C 0000               1853              CMP.B   #zero,D3
000021B2  6700 003A               1854              BEQ     displayA0A
000021B6  B63C 0001               1855              CMP.B   #one,D3
000021BA  6700 004E               1856              BEQ     displayA1A
000021BE  B63C 0002               1857              CMP.B   #two,D3
000021C2  6700 0062               1858              BEQ     displayA2A
000021C6  B63C 0003               1859              CMP.B   #three,D3
000021CA  6700 0076               1860              BEQ     displayA3A
000021CE  B63C 0004               1861              CMP.B   #four,D3
000021D2  6700 008A               1862              BEQ     displayA4A
000021D6  B63C 0005               1863              CMP.B   #five,D3
000021DA  6700 009E               1864              BEQ     displayA5A
000021DE  B63C 0006               1865              CMP.B   #six,D3
000021E2  6700 00B2               1866              BEQ     displayA6A
000021E6  B63C 0007               1867              CMP.B   #seven,D3
000021EA  6700 00C6               1868              BEQ     displayA7A
000021EE                          1869              
000021EE  43F9 000026E8           1870  displayA0A  LEA         dispA0, A1          ; Display space
000021F4  103C 000E               1871              MOVE.B      #14, D0             ; command for trap call to display message
000021F8  4E4F                    1872              TRAP        #15                 ; trap call
000021FA  43F9 0000264D           1873              LEA         clPer, A1           ; Display space
00002200  103C 000E               1874              MOVE.B      #14, D0             ; command for trap call to display message
00002204  4E4F                    1875              TRAP        #15                 ; trap call
00002206  6000 042C               1876              BRA         endSUB              ; go to the end of the subroutine
0000220A                          1877              
0000220A  43F9 000026EB           1878  displayA1A  LEA         dispA1, A1          ; Display space
00002210  103C 000E               1879              MOVE.B      #14, D0             ; command for trap call to display message
00002214  4E4F                    1880              TRAP        #15                 ; trap call
00002216  43F9 0000264D           1881              LEA         clPer, A1           ; Display space
0000221C  103C 000E               1882              MOVE.B      #14, D0             ; command for trap call to display message
00002220  4E4F                    1883              TRAP        #15                 ; trap call
00002222  6000 0410               1884              BRA         endSUB              ; go to the end of the subroutine
00002226                          1885  
00002226  43F9 000026EE           1886  displayA2A  LEA         dispA2, A1          ; Display space
0000222C  103C 000E               1887              MOVE.B      #14, D0             ; command for trap call to display message
00002230  4E4F                    1888              TRAP        #15                 ; trap call
00002232  43F9 0000264D           1889              LEA         clPer, A1           ; Display space
00002238  103C 000E               1890              MOVE.B      #14, D0             ; command for trap call to display message
0000223C  4E4F                    1891              TRAP        #15                 ; trap call
0000223E  6000 03F4               1892              BRA         endSUB              ; go to the end of the subroutine
00002242                          1893  
00002242  43F9 000026F1           1894  displayA3A  LEA         dispA3, A1          ; Display space
00002248  103C 000E               1895              MOVE.B      #14, D0             ; command for trap call to display message
0000224C  4E4F                    1896              TRAP        #15                 ; trap call
0000224E  43F9 0000264D           1897              LEA         clPer, A1           ; Display space
00002254  103C 000E               1898              MOVE.B      #14, D0             ; command for trap call to display message
00002258  4E4F                    1899              TRAP        #15                 ; trap call
0000225A  6000 03D8               1900              BRA         endSUB              ; go to the end of the subroutine
0000225E                          1901  
0000225E  43F9 000026F4           1902  displayA4A  LEA         dispA4, A1          ; Display space
00002264  103C 000E               1903              MOVE.B      #14, D0             ; command for trap call to display message
00002268  4E4F                    1904              TRAP        #15                 ; trap call
0000226A  43F9 0000264D           1905              LEA         clPer, A1           ; Display space
00002270  103C 000E               1906              MOVE.B      #14, D0             ; command for trap call to display message
00002274  4E4F                    1907              TRAP        #15                 ; trap call
00002276  6000 03BC               1908              BRA         endSUB              ; go to the end of the subroutine
0000227A                          1909  
0000227A  43F9 000026F7           1910  displayA5A  LEA         dispA5, A1          ; Display space
00002280  103C 000E               1911              MOVE.B      #14, D0             ; command for trap call to display message
00002284  4E4F                    1912              TRAP        #15                 ; trap call
00002286  43F9 0000264D           1913              LEA         clPer, A1           ; Display space
0000228C  103C 000E               1914              MOVE.B      #14, D0             ; command for trap call to display message
00002290  4E4F                    1915              TRAP        #15                 ; trap call
00002292  6000 03A0               1916              BRA         endSUB              ; go to the end of the subroutine
00002296                          1917  
00002296  43F9 000026FA           1918  displayA6A  LEA         dispA6, A1          ; Display space
0000229C  103C 000E               1919              MOVE.B      #14, D0             ; command for trap call to display message
000022A0  4E4F                    1920              TRAP        #15                 ; trap call
000022A2  43F9 0000264D           1921              LEA         clPer, A1           ; Display space
000022A8  103C 000E               1922              MOVE.B      #14, D0             ; command for trap call to display message
000022AC  4E4F                    1923              TRAP        #15                 ; trap call
000022AE  6000 0384               1924              BRA         endSUB              ; go to the end of the subroutine
000022B2                          1925  
000022B2  43F9 000026FD           1926  displayA7A  LEA         dispA7, A1          ; Display space
000022B8  103C 000E               1927              MOVE.B      #14, D0             ; command for trap call to display message
000022BC  4E4F                    1928              TRAP        #15                 ; trap call
000022BE  43F9 0000264D           1929              LEA         clPer, A1           ; Display space
000022C4  103C 000E               1930              MOVE.B      #14, D0             ; command for trap call to display message
000022C8  4E4F                    1931              TRAP        #15                 ; trap call
000022CA  6000 0368               1932              BRA         endSUB              ; go to the end of the subroutine
000022CE                          1933              
000022CE                          1934  ***********************************************************************************************************
000022CE                          1935  * Addr Postincrement
000022CE                          1936              
000022CE  43F9 0000264B           1937  pAddrPost   LEA         opPer, A1           ; Display space
000022D4  103C 000E               1938              MOVE.B      #14, D0             ; command for trap call to display message
000022D8  4E4F                    1939              TRAP        #15                 ; trap call
000022DA                          1940              
000022DA  B63C 0000               1941              CMP.B   #zero,D3
000022DE  6700 003A               1942              BEQ     displayA0P
000022E2  B63C 0001               1943              CMP.B   #one,D3
000022E6  6700 005A               1944              BEQ     displayA1P
000022EA  B63C 0002               1945              CMP.B   #two,D3
000022EE  6700 007A               1946              BEQ     displayA2P
000022F2  B63C 0003               1947              CMP.B   #three,D3
000022F6  6700 009A               1948              BEQ     displayA3P
000022FA  B63C 0004               1949              CMP.B   #four,D3
000022FE  6700 00BA               1950              BEQ     displayA4P
00002302  B63C 0005               1951              CMP.B   #five,D3
00002306  6700 00DA               1952              BEQ     displayA5P
0000230A  B63C 0006               1953              CMP.B   #six,D3
0000230E  6700 00FA               1954              BEQ     displayA6P
00002312  B63C 0007               1955              CMP.B   #seven,D3
00002316  6700 011A               1956              BEQ     displayA7P
0000231A                          1957              
0000231A  43F9 000026E8           1958  displayA0P  LEA         dispA0, A1          ; Display space
00002320  103C 000E               1959              MOVE.B      #14, D0             ; command for trap call to display message
00002324  4E4F                    1960              TRAP        #15                 ; trap call
00002326  43F9 0000264D           1961              LEA         clPer, A1           ; Display space
0000232C  103C 000E               1962              MOVE.B      #14, D0             ; command for trap call to display message
00002330  4E4F                    1963              TRAP        #15                 ; trap call
00002332  43F9 00002651           1964              LEA         inc, A1             ; Display space
00002338  103C 000E               1965              MOVE.B      #14, D0             ; command for trap call to display message
0000233C  4E4F                    1966              TRAP        #15                 ; trap call
0000233E  6000 02F4               1967              BRA         endSUB              ; go to the end of the subroutine
00002342                          1968              
00002342  43F9 000026EB           1969  displayA1P  LEA         dispA1, A1          ; Display space
00002348  103C 000E               1970              MOVE.B      #14, D0             ; command for trap call to display message
0000234C  4E4F                    1971              TRAP        #15                 ; trap call
0000234E  43F9 0000264D           1972              LEA         clPer, A1           ; Display space
00002354  103C 000E               1973              MOVE.B      #14, D0             ; command for trap call to display message
00002358  4E4F                    1974              TRAP        #15                 ; trap call
0000235A  43F9 00002651           1975              LEA         inc, A1             ; Display space
00002360  103C 000E               1976              MOVE.B      #14, D0             ; command for trap call to display message
00002364  4E4F                    1977              TRAP        #15                 ; trap call
00002366  6000 02CC               1978              BRA         endSUB              ; go to the end of the subroutine
0000236A                          1979  
0000236A  43F9 000026EE           1980  displayA2P  LEA         dispA2, A1          ; Display space
00002370  103C 000E               1981              MOVE.B      #14, D0             ; command for trap call to display message
00002374  4E4F                    1982              TRAP        #15                 ; trap call
00002376  43F9 0000264D           1983              LEA         clPer, A1           ; Display space
0000237C  103C 000E               1984              MOVE.B      #14, D0             ; command for trap call to display message
00002380  4E4F                    1985              TRAP        #15                 ; trap call
00002382  43F9 00002651           1986              LEA         inc, A1             ; Display space
00002388  103C 000E               1987              MOVE.B      #14, D0             ; command for trap call to display message
0000238C  4E4F                    1988              TRAP        #15                 ; trap call
0000238E  6000 02A4               1989              BRA         endSUB              ; go to the end of the subroutine
00002392                          1990  
00002392  43F9 000026F1           1991  displayA3P  LEA         dispA3, A1          ; Display space
00002398  103C 000E               1992              MOVE.B      #14, D0             ; command for trap call to display message
0000239C  4E4F                    1993              TRAP        #15                 ; trap call
0000239E  43F9 0000264D           1994              LEA         clPer, A1           ; Display space
000023A4  103C 000E               1995              MOVE.B      #14, D0             ; command for trap call to display message
000023A8  4E4F                    1996              TRAP        #15                 ; trap call
000023AA  43F9 00002651           1997              LEA         inc, A1             ; Display space
000023B0  103C 000E               1998              MOVE.B      #14, D0             ; command for trap call to display message
000023B4  4E4F                    1999              TRAP        #15                 ; trap call
000023B6  6000 027C               2000              BRA         endSUB              ; go to the end of the subroutine
000023BA                          2001  
000023BA  43F9 000026F4           2002  displayA4P  LEA         dispA4, A1          ; Display space
000023C0  103C 000E               2003              MOVE.B      #14, D0             ; command for trap call to display message
000023C4  4E4F                    2004              TRAP        #15                 ; trap call
000023C6  43F9 0000264D           2005              LEA         clPer, A1           ; Display space
000023CC  103C 000E               2006              MOVE.B      #14, D0             ; command for trap call to display message
000023D0  4E4F                    2007              TRAP        #15                 ; trap call
000023D2  43F9 00002651           2008              LEA         inc, A1             ; Display space
000023D8  103C 000E               2009              MOVE.B      #14, D0             ; command for trap call to display message
000023DC  4E4F                    2010              TRAP        #15                 ; trap call
000023DE  6000 0254               2011              BRA         endSUB              ; go to the end of the subroutine
000023E2                          2012  
000023E2  43F9 000026F7           2013  displayA5P  LEA         dispA5, A1          ; Display space
000023E8  103C 000E               2014              MOVE.B      #14, D0             ; command for trap call to display message
000023EC  4E4F                    2015              TRAP        #15                 ; trap call
000023EE  43F9 0000264D           2016              LEA         clPer, A1           ; Display space
000023F4  103C 000E               2017              MOVE.B      #14, D0             ; command for trap call to display message
000023F8  4E4F                    2018              TRAP        #15                 ; trap call
000023FA  43F9 00002651           2019              LEA         inc, A1             ; Display space
00002400  103C 000E               2020              MOVE.B      #14, D0             ; command for trap call to display message
00002404  4E4F                    2021              TRAP        #15                 ; trap call
00002406  6000 022C               2022              BRA         endSUB              ; go to the end of the subroutine
0000240A                          2023  
0000240A  43F9 000026FA           2024  displayA6P  LEA         dispA6, A1          ; Display space
00002410  103C 000E               2025              MOVE.B      #14, D0             ; command for trap call to display message
00002414  4E4F                    2026              TRAP        #15                 ; trap call
00002416  43F9 0000264D           2027              LEA         clPer, A1           ; Display space
0000241C  103C 000E               2028              MOVE.B      #14, D0             ; command for trap call to display message
00002420  4E4F                    2029              TRAP        #15                 ; trap call
00002422  43F9 00002651           2030              LEA         inc, A1             ; Display space
00002428  103C 000E               2031              MOVE.B      #14, D0             ; command for trap call to display message
0000242C  4E4F                    2032              TRAP        #15                 ; trap call
0000242E  6000 0204               2033              BRA         endSUB              ; go to the end of the subroutine
00002432                          2034  
00002432  43F9 000026FD           2035  displayA7P  LEA         dispA7, A1          ; Display space
00002438  103C 000E               2036              MOVE.B      #14, D0             ; command for trap call to display message
0000243C  4E4F                    2037              TRAP        #15                 ; trap call
0000243E  43F9 0000264D           2038              LEA         clPer, A1           ; Display space
00002444  103C 000E               2039              MOVE.B      #14, D0             ; command for trap call to display message
00002448  4E4F                    2040              TRAP        #15                 ; trap call
0000244A  43F9 00002651           2041              LEA         inc, A1             ; Display space
00002450  103C 000E               2042              MOVE.B      #14, D0             ; command for trap call to display message
00002454  4E4F                    2043              TRAP        #15                 ; trap call
00002456  6000 01DC               2044              BRA         endSUB              ; go to the end of the subroutine
0000245A                          2045  
0000245A                          2046  ***********************************************************************************************************
0000245A                          2047  * Addr Postdecrement
0000245A                          2048  
0000245A  43F9 0000264F           2049  pAddrDec    LEA         dec, A1             ; Display space
00002460  103C 000E               2050              MOVE.B      #14, D0             ; command for trap call to display message
00002464  4E4F                    2051              TRAP        #15                 ; trap call
00002466                          2052              
00002466  43F9 0000264B           2053              LEA         opPer, A1           ; Display space
0000246C  103C 000E               2054              MOVE.B      #14, D0             ; command for trap call to display message
00002470  4E4F                    2055              TRAP        #15                 ; trap call
00002472                          2056              
00002472  B63C 0000               2057              CMP.B   #zero,D3
00002476  6700 003A               2058              BEQ     displayA0D
0000247A  B63C 0001               2059              CMP.B   #one,D3
0000247E  6700 004E               2060              BEQ     displayA1D
00002482  B63C 0002               2061              CMP.B   #two,D3
00002486  6700 0062               2062              BEQ     displayA2D
0000248A  B63C 0003               2063              CMP.B   #three,D3
0000248E  6700 0076               2064              BEQ     displayA3D
00002492  B63C 0004               2065              CMP.B   #four,D3
00002496  6700 008A               2066              BEQ     displayA4D
0000249A  B63C 0005               2067              CMP.B   #five,D3
0000249E  6700 009E               2068              BEQ     displayA5D
000024A2  B63C 0006               2069              CMP.B   #six,D3
000024A6  6700 00B2               2070              BEQ     displayA6D
000024AA  B63C 0007               2071              CMP.B   #seven,D3
000024AE  6700 00C6               2072              BEQ     displayA7D
000024B2                          2073              
000024B2  43F9 000026E8           2074  displayA0D  LEA         dispA0, A1          ; Display space
000024B8  103C 000E               2075              MOVE.B      #14, D0             ; command for trap call to display message
000024BC  4E4F                    2076              TRAP        #15                 ; trap call
000024BE  43F9 0000264D           2077              LEA         clPer, A1           ; Display space
000024C4  103C 000E               2078              MOVE.B      #14, D0             ; command for trap call to display message
000024C8  4E4F                    2079              TRAP        #15                 ; trap call
000024CA  6000 0168               2080              BRA         endSUB              ; go to the end of the subroutine
000024CE                          2081              
000024CE  43F9 000026EB           2082  displayA1D  LEA         dispA1, A1          ; Display space
000024D4  103C 000E               2083              MOVE.B      #14, D0             ; command for trap call to display message
000024D8  4E4F                    2084              TRAP        #15                 ; trap call
000024DA  43F9 0000264D           2085              LEA         clPer, A1           ; Display space
000024E0  103C 000E               2086              MOVE.B      #14, D0             ; command for trap call to display message
000024E4  4E4F                    2087              TRAP        #15                 ; trap call
000024E6  6000 014C               2088              BRA         endSUB              ; go to the end of the subroutine
000024EA                          2089  
000024EA  43F9 000026EE           2090  displayA2D  LEA         dispA2, A1          ; Display space
000024F0  103C 000E               2091              MOVE.B      #14, D0             ; command for trap call to display message
000024F4  4E4F                    2092              TRAP        #15                 ; trap call
000024F6  43F9 0000264D           2093              LEA         clPer, A1           ; Display space
000024FC  103C 000E               2094              MOVE.B      #14, D0             ; command for trap call to display message
00002500  4E4F                    2095              TRAP        #15                 ; trap call
00002502  6000 0130               2096              BRA         endSUB              ; go to the end of the subroutine
00002506                          2097  
00002506  43F9 000026F1           2098  displayA3D  LEA         dispA3, A1          ; Display space
0000250C  103C 000E               2099              MOVE.B      #14, D0             ; command for trap call to display message
00002510  4E4F                    2100              TRAP        #15                 ; trap call
00002512  43F9 0000264D           2101              LEA         clPer, A1           ; Display space
00002518  103C 000E               2102              MOVE.B      #14, D0             ; command for trap call to display message
0000251C  4E4F                    2103              TRAP        #15                 ; trap call
0000251E  6000 0114               2104              BRA         endSUB              ; go to the end of the subroutine
00002522                          2105  
00002522  43F9 000026F4           2106  displayA4D  LEA         dispA4, A1          ; Display space
00002528  103C 000E               2107              MOVE.B      #14, D0             ; command for trap call to display message
0000252C  4E4F                    2108              TRAP        #15                 ; trap call
0000252E  43F9 0000264D           2109              LEA         clPer, A1           ; Display space
00002534  103C 000E               2110              MOVE.B      #14, D0             ; command for trap call to display message
00002538  4E4F                    2111              TRAP        #15                 ; trap call
0000253A  6000 00F8               2112              BRA         endSUB              ; go to the end of the subroutine
0000253E                          2113  
0000253E  43F9 000026F7           2114  displayA5D  LEA         dispA5, A1          ; Display space
00002544  103C 000E               2115              MOVE.B      #14, D0             ; command for trap call to display message
00002548  4E4F                    2116              TRAP        #15                 ; trap call
0000254A  43F9 0000264D           2117              LEA         clPer, A1           ; Display space
00002550  103C 000E               2118              MOVE.B      #14, D0             ; command for trap call to display message
00002554  4E4F                    2119              TRAP        #15                 ; trap call
00002556  6000 00DC               2120              BRA         endSUB              ; go to the end of the subroutine
0000255A                          2121  
0000255A  43F9 000026FA           2122  displayA6D  LEA         dispA6, A1          ; Display space
00002560  103C 000E               2123              MOVE.B      #14, D0             ; command for trap call to display message
00002564  4E4F                    2124              TRAP        #15                 ; trap call
00002566  43F9 0000264D           2125              LEA         clPer, A1           ; Display space
0000256C  103C 000E               2126              MOVE.B      #14, D0             ; command for trap call to display message
00002570  4E4F                    2127              TRAP        #15                 ; trap call
00002572  6000 00C0               2128              BRA         endSUB              ; go to the end of the subroutine
00002576                          2129  
00002576  43F9 000026FD           2130  displayA7D  LEA         dispA7, A1          ; Display space
0000257C  103C 000E               2131              MOVE.B      #14, D0             ; command for trap call to display message
00002580  4E4F                    2132              TRAP        #15                 ; trap call
00002582  43F9 0000264D           2133              LEA         clPer, A1           ; Display space
00002588  103C 000E               2134              MOVE.B      #14, D0             ; command for trap call to display message
0000258C  4E4F                    2135              TRAP        #15                 ; trap call
0000258E  6000 00A4               2136              BRA         endSUB              ; go to the end of the subroutine
00002592                          2137  
00002592                          2138  
00002592                          2139  ***********************************************************************************************************
00002592                          2140  * Absolute Address
00002592  B63C 0000               2141  pHex        CMP.B       #zero, D3
00002596  6700 0012               2142              BEQ         AbsShort
0000259A  B63C 0001               2143              CMP.B       #one, D3
0000259E  6700 003C               2144              BEQ         AbsLong
000025A2  B63C 0004               2145              CMP.B       #four, D3
000025A6  6700 0066               2146              BEQ         DispImm
000025AA                          2147              
000025AA  43F9 0000264B           2148  AbsShort    LEA         opPer, A1           ; Display space
000025B0  103C 000E               2149              MOVE.B      #14, D0             ; command for trap call to display message
000025B4  4E4F                    2150              TRAP        #15                 ; trap call
000025B6                          2151              
000025B6  43F9 00002647           2152              LEA         dispHex, A1         ; Display space
000025BC  103C 000E               2153              MOVE.B      #14, D0             ; command for trap call to display message
000025C0  4E4F                    2154              TRAP        #15                 ; trap call
000025C2                          2155              
000025C2  4241                    2156              CLR         D1
000025C4  3218                    2157              MOVE.W      (A0)+, D1
000025C6                          2158              
000025C6  103C 0003               2159              MOVE.B      #3, D0
000025CA  4E4F                    2160              TRAP        #15
000025CC                          2161              
000025CC  43F9 0000264D           2162              LEA         clPer, A1           ; Display space
000025D2  103C 000E               2163              MOVE.B      #14, D0             ; command for trap call to display message
000025D6  4E4F                    2164              TRAP        #15                 ; trap call
000025D8                          2165              
000025D8  6000 005A               2166              BRA         endSub
000025DC                          2167              
000025DC  43F9 0000264B           2168  AbsLong     LEA         opPer, A1           ; Display space
000025E2  103C 000E               2169              MOVE.B      #14, D0             ; command for trap call to display message
000025E6  4E4F                    2170              TRAP        #15                 ; trap call
000025E8                          2171              
000025E8  43F9 00002647           2172              LEA         dispHex, A1         ; Display space
000025EE  103C 000E               2173              MOVE.B      #14, D0             ; command for trap call to display message
000025F2  4E4F                    2174              TRAP        #15                 ; trap call
000025F4                          2175              
000025F4  4241                    2176              CLR         D1
000025F6  2218                    2177              MOVE.L      (A0)+, D1
000025F8                          2178              
000025F8  103C 0003               2179              MOVE.B      #3, D0
000025FC  4E4F                    2180              TRAP        #15
000025FE                          2181              
000025FE  43F9 0000264D           2182              LEA         clPer, A1           ; Display space
00002604  103C 000E               2183              MOVE.B      #14, D0             ; command for trap call to display message
00002608  4E4F                    2184              TRAP        #15                 ; trap call
0000260A                          2185              
0000260A  6000 0028               2186              BRA         endSub
0000260E                          2187  
0000260E  43F9 00002645           2188  DispImm     LEA         hashTag, A1         ; Display space
00002614  103C 000E               2189              MOVE.B      #14, D0             ; command for trap call to display message
00002618  4E4F                    2190              TRAP        #15                 ; trap call
0000261A                          2191              
0000261A  4241                    2192              CLR         D1
0000261C  3218                    2193              MOVE.W      (A0)+, D1
0000261E                          2194  
0000261E  43F9 00002647           2195              LEA         dispHex, A1         ; Display space
00002624  103C 000E               2196              MOVE.B      #14, D0             ; command for trap call to display message
00002628  4E4F                    2197              TRAP        #15                 ; trap call
0000262A                          2198              
0000262A  103C 0003               2199              MOVE.B      #3, D0
0000262E  4E4F                    2200              TRAP        #15
00002630                          2201  
00002630  6000 0002               2202              BRA         endSub
00002634                          2203  
00002634                          2204  invalid
00002634                          2205  
00002634                          2206  endSUB
00002634                          2207          
00002634  4CDF 7EFF               2208          MOVEM.L  (SP)+, D0-D7/A1-A6
00002638  4E75                    2209          RTS
0000263A                          2210  
0000263A                          2211  ***********************************************************************************************************
0000263A                          2212  ***********************************************************************************************************
0000263A                          2213  ***********************************************************************************************************
0000263A                          2214  
0000263A                          2215  printInvalid
0000263A                          2216  endPROG    
0000263A                          2217  
0000263A  FFFF FFFF               2218      SIMHALT                             ; halt simulator
0000263E                          2219  
0000263E= 20 0D 0A 00             2220  newLine     DC.B    ' ', CR, LF, 0
00002642= 20 20 00                2221  space       DC.B    '  ', 0
00002645                          2222  
00002645= 23 00                   2223  hashTag     DC.B    '#', 0
00002647= 24 00                   2224  dispHex     DC.B    '$', 0
00002649= 2C 00                   2225  comma       DC.B    ',', 0
0000264B                          2226  
0000264B= 28 00                   2227  opPer       DC.B    '(', 0
0000264D= 29 00                   2228  clPer       DC.B    ')', 0
0000264F= 2D 00                   2229  dec         DC.B    '-', 0
00002651= 2B 00                   2230  inc         DC.B    '+', 0
00002653= 2F 00                   2231  slash       DC.B    '/', 0
00002655                          2232  
00002655= 28 53 50 29 00          2233  stack       DC.B    '(SP)', 0
0000265A                          2234  
0000265A= 4F 52 49 00             2235  ORImatch    DC.B    'ORI', 0
0000265E= 43 4D 50 49 00          2236  CMPImatch   DC.B    'CMPI', 0
00002663= 42 43 4C 52 00          2237  BCLRmatch   DC.B    'BCLR', 0
00002668= 4D 4F 56 45 00          2238  MOVEmatch   DC.B    'MOVE', 0
0000266D= 4D 4F 56 45 41 00       2239  MOVEAmatch  DC.B    'MOVEA', 0
00002673= 4E 45 47 00             2240  NEGmatch    DC.B    'NEG', 0
00002677= 52 54 53 00             2241  RTSmatch    DC.B    'RTS', 0
0000267B= 4A 53 52 00             2242  JSRmatch    DC.B    'JSR', 0
0000267F= 4D 4F 56 45 4D 00       2243  MOVEMmatch  DC.B    'MOVEM', 0
00002685= 4C 45 41 00             2244  LEAmatch    DC.B    'LEA', 0
00002689= 53 55 42 51 00          2245  SUBQmatch   DC.B    'SUBQ', 0
0000268E= 42 52 41 00             2246  BRAmatch    DC.B    'BRA', 0
00002692= 42 43 53 00             2247  BCSmatch    DC.B    'BCS', 0
00002696= 42 56 43 00             2248  BVCmatch    DC.B    'BVC', 0
0000269A= 42 47 45 00             2249  BGEmatch    DC.B    'BGE', 0
0000269E= 42 4C 54 00             2250  BLTmatch    DC.B    'BLT', 0
000026A2= 44 49 56 53 00          2251  DIVSmatch   DC.B    'DIVS', 0
000026A7= 4F 52 00                2252  ORmatch     DC.B    'OR', 0
000026AA= 53 55 42 00             2253  SUBmatch    DC.B    'SUB', 0
000026AE= 45 4F 52 00             2254  EORmatch    DC.B    'EOR', 0
000026B2= 43 4D 50 00             2255  CMPmatch    DC.B    'CMP', 0
000026B6= 4D 55 4C 53 00          2256  MULSmatch   DC.B    'MULS', 0
000026BB= 41 44 44 00             2257  ADDmatch    DC.B    'ADD', 0
000026BF= 41 44 44 41 00          2258  ADDAmatch   DC.B    'ADDA', 0
000026C4= 4C 53 52 00             2259  LSRmatch    DC.B    'LSR', 0
000026C8= 4C 53 4C 00             2260  LSLmatch    DC.B    'LSL', 0
000026CC= 41 53 52 00             2261  ASRmatch    DC.B    'ASR', 0
000026D0= 41 53 4C 00             2262  ASLmatch    DC.B    'ASL', 0
000026D4= 52 4F 52 00             2263  RORmatch    DC.B    'ROR', 0
000026D8= 52 4F 4C 00             2264  ROLmatch    DC.B    'ROL', 0
000026DC                          2265   
000026DC= 2E 42 00                2266  dispByte    DC.B    '.B', 0
000026DF= 2E 57 00                2267  dispWord    DC.B    '.W', 0
000026E2= 2E 4C 00                2268  dispLong    DC.B    '.L', 0
000026E5                          2269  
000026E5= 41 6E 00                2270  dispAn      DC.B    'An', 0
000026E8= 41 30 00                2271  dispA0      DC.B    'A0', 0
000026EB= 41 31 00                2272  dispA1      DC.B    'A1', 0
000026EE= 41 32 00                2273  dispA2      DC.B    'A2', 0
000026F1= 41 33 00                2274  dispA3      DC.B    'A3', 0
000026F4= 41 34 00                2275  dispA4      DC.B    'A4', 0
000026F7= 41 35 00                2276  dispA5      DC.B    'A5', 0
000026FA= 41 36 00                2277  dispA6      DC.B    'A6', 0
000026FD= 41 37 00                2278  dispA7      DC.B    'A7', 0
00002700                          2279  
00002700= 44 00                   2280  dispD       DC.B    'D',  0
00002702= 44 30 00                2281  dispD0      DC.B    'D0', 0
00002705= 44 31 00                2282  dispD1      DC.B    'D1', 0
00002708= 44 32 00                2283  dispD2      DC.B    'D2', 0
0000270B= 44 33 00                2284  dispD3      DC.B    'D3', 0
0000270E= 44 34 00                2285  dispD4      DC.B    'D4', 0
00002711= 44 35 00                2286  dispD5      DC.B    'D5', 0
00002714= 44 36 00                2287  dispD6      DC.B    'D6', 0
00002717= 44 37 00                2288  dispD7      DC.B    'D7', 0  
0000271A                          2289             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             25DC
ABSSHORT            25AA
ADDAMATCH           26BF
ADDMATCH            26BB
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ADDR0CONT           1E36
ADDR1CONT           1E76
ADDR2CONT           1EB6
ADDR3CONT           1EF6
ADDR4CONT           1F36
ADDR5CONT           1F76
ADDR6CONT           1FB6
ADDRREG0            1E16
ADDRREG1            1E46
ADDRREG2            1E86
ADDRREG3            1EC6
ADDRREG4            1F06
ADDRREG5            1F46
ADDRREG6            1F86
ADDRREG7            1FC6
ASLMATCH            26D0
ASRMATCH            26CC
BCLRMATCH           2663
BCSMATCH            2692
BGEMATCH            269A
BLTMATCH            269E
BRAEIGHT            1118
BRAELEVEN           111C
BRAFIVE             10E8
BRAFOUR             10CC
BRAFOURTEEN         1120
BRAMATCH            268E
BRANINE             1118
BRAONE              10C0
BRASIX              10EC
BRATHIRTEEN         1120
BRATHREE            10C8
BRATWELVE           111C
BRATWO              10C4
BRAZERO             1090
BVCMATCH            2696
CHECKDR             1AEE
CLPER               264D
CMPIMATCH           265E
CMPMATCH            26B2
COMMA               2649
CR                  D
DATAREG0            1BB8
DATAREG1            1BE8
DATAREG2            1C28
DATAREG3            1C68
DATAREG4            1CA8
DATAREG5            1CE8
DATAREG6            1D28
DATAREG7            1D68
DEC                 264F
DISPA0              26E8
DISPA1              26EB
DISPA2              26EE
DISPA3              26F1
DISPA4              26F4
DISPA5              26F7
DISPA6              26FA
DISPA7              26FD
DISPAN              26E5
DISPBYTE            26DC
DISPD               2700
DISPD0              2702
DISPD1              2705
DISPD2              2708
DISPD3              270B
DISPD4              270E
DISPD5              2711
DISPD6              2714
DISPD7              2717
DISPHEX             2647
DISPIMM             260E
DISPLAYA0           2122
DISPLAYA0A          21EE
DISPLAYA0D          24B2
DISPLAYA0P          231A
DISPLAYA1           2132
DISPLAYA1A          220A
DISPLAYA1D          24CE
DISPLAYA1P          2342
DISPLAYA2           2142
DISPLAYA2A          2226
DISPLAYA2D          24EA
DISPLAYA2P          236A
DISPLAYA3           2152
DISPLAYA3A          2242
DISPLAYA3D          2506
DISPLAYA3P          2392
DISPLAYA4           2162
DISPLAYA4A          225E
DISPLAYA4D          2522
DISPLAYA4P          23BA
DISPLAYA5           2172
DISPLAYA5A          227A
DISPLAYA5D          253E
DISPLAYA5P          23E2
DISPLAYA6           2182
DISPLAYA6A          2296
DISPLAYA6D          255A
DISPLAYA6P          240A
DISPLAYA7           2192
DISPLAYA7A          22B2
DISPLAYA7D          2576
DISPLAYA7P          2432
DISPLAYD0           2062
DISPLAYD1           2072
DISPLAYD2           2082
DISPLAYD3           2092
DISPLAYD4           20A2
DISPLAYD5           20B2
DISPLAYD6           20C2
DISPLAYD7           20D2
DISPLONG            26E2
DISPWORD            26DF
DIVSMATCH           26A2
EIGHT               8
ELEVEN              B
ENDMOVE             1FD6
ENDMOVE1            1FE4
ENDPROG             263A
ENDSUB              2634
EORMATCH            26AE
FIFTEEN             F
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             2645
INC                 2651
INVALID             2634
JSRMATCH            267B
LEAMATCH            2685
LF                  A
LOOP                100C
LSLMATCH            26C8
LSRMATCH            26C4
MASK0               0
MASK1               1
MASK2               2
MASK3               4
MASK4               8
MASK5               10
MASK6               20
MASK7               40
MASK8               80
MASKA               5
MASKB               A
MASKC               14
MASKD               28
MASKE               50
MASKF               A0
MOVEAMATCH          266D
MOVEMATCH           2668
MOVEMBRA            1AA2
MOVEML              1AD2
MOVEMMATCH          267F
MOVEMW              1AB6
MULSMATCH           26B6
NEGMATCH            2673
NEWLINE             263E
NINE                9
ONE                 1
OPASL               1A5A
OPASR               1A66
OPBCLR              141A
OPBCS               1A12
OPBGE               1A2A
OPBLT               1A36
OPBRA               19FA
OPBVC               1A1E
OPCMPI              12A8
OPCMPIB             12F4
OPCMPIL             13B8
OPCMPIW             1356
OPDYNBCLR           147E
OPJSR               186C
OPLEA               196E
OPLSL               1A72
OPLSR               1A7E
OPMOVEAL            1600
OPMOVEAW            16FA
OPMOVEB             14EC
OPMOVEL             1570
OPMOVEM             18E4
OPMOVEMLEA          18C8
OPMOVEW             166A
OPMULS              1A4E
OPNEG               1764
OPNEGB              1792
OPNEGL              17D2
OPNEGW              1812
OPORI               1154
OPORIB              1182
OPORIL              1246
OPORIW              11E4
OPPER               264B
OPROL               1A8A
OPROR               1A96
OPRTS               18AC
OPRTSJSR            1852
OPSUB               1A42
OPSUBQ              19EE
ORIMATCH            265A
ORMATCH             26A7
PADDRDEC            245A
PADDRDIR            21A2
PADDRPOST           22CE
PADDRREG            20E2
PDATAREG            2022
PHEX                2592
PRINTEA             1FEA
PRINTINVALID        263A
PRINTMEM            1D78
PRINTMEMNOW         1D84
PRINTREGMEM         1B2C
PRINTSTACK          1B04
REG0                0
REG0CONT            1BD8
REG1                1
REG1CONT            1C18
REG2                2
REG2CONT            1C58
REG3                3
REG3CONT            1C98
REG4                4
REG4CONT            1CD8
REG5                5
REG5CONT            1D18
REG6                6
REG6CONT            1D58
REG7                7
ROLMATCH            26D8
RORMATCH            26D4
RTSMATCH            2677
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SKIPPRINTEA         195E
SLASH               2653
SPACE               2642
STACK               2655
START               1000
SUBMATCH            26AA
SUBQMATCH           2689
TEST_END            3009
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
