00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 2014-12-09 21:58:30

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Motorola 68k Disassembler
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =00003009                 11  test_end    EQU     $00003009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00003000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00003009             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 1750                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 0084                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0080                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 0094                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0090                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00B4                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00C6                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00C2                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00D4                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 00D0                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 00C8                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                102          AND.B       #secNib, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 0528                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 0674                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                108          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 07DE                109          BEQ         opBCLR
000010A6  C47C 0001                110          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                111          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 0836                112          BEQ         opDynBCLR
000010B2  6000 16B0                113          BRA         printInvalid
000010B6                           114          
000010B6                           115          
000010B6  6000 089C                116  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           117  
000010BA  6000 091C                118  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BE                           119  
000010BE                           120  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BE                           121  
000010BE  6000 0A12                122          BRA         opMOVEW
000010C2                           123  
000010C2  4242                     124  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010C4  1401                     125          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010C6  C43C 000F                126          AND.B       #secNib, D2             ; set first nibble to 0
000010CA                           127   
000010CA  B43C 0004                128          CMP.B       #four, D2           ; compare second nibble to 4
000010CE  6700 0AFC                129          BEQ         opNEG               ; branch to NEG method
000010D2  B43C 000E                130          CMP.B       #fourteen, D2       ; compare second nibble to E
000010D6  6700 0BE2                131          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010DA  6000 0C54                132          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010DE                           133  
000010DE  6000 0C84                134  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010E2                           135  
000010E2  4242                     136  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010E4  1401                     137          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010E6  C43C 000F                138          AND.B       #$0F, D2             ; set first nibble to 0
000010EA                           139   
000010EA  B43C 0000                140          CMP.B       #zero, D2           ; compare second nibble to 0
000010EE  6700 0CEC                141          BEQ         opBRA               ; branch to BRA method
000010F2  B43C 0005                142          CMP.B       #five, D2           ; compare second nibble to 5
000010F6  6700 0D1C                143          BEQ         opBCS               ; branch to BCS method
000010FA  B43C 0008                144          CMP.B       #eight, D2          ; compare second nibble to 8
000010FE  6700 0D48                145          BEQ         opBVC               ; branch to BCS method
00001102  B43C 000C                146          CMP.B       #twelve, D2         ; compare second nibble to 12
00001106  6700 0D74                147          BEQ         opBGE               ; branch to BGE method
0000110A  6000 0DA4                148          BRA         opBLT               ; otherwise, branch to BLT method
0000110E                           149  
0000110E                           150  braEight                                ; there are two opCodes available DIVS, or OR
0000110E  4242                     151              CLR     D2
00001110  E141                     152              ASL     #8,D1
00001112  1218                     153              MOVE.B  (A0)+,D1
00001114  3401                     154              MOVE.W  D1,D2
00001116  EC42                     155              ASR     #six,D2
00001118  C47C 0007                156              AND     #$07,D2
0000111C  B43C 0007                157              CMP.B   #seven,D2
00001120  6700 01AE                158              BEQ     opDIVS              ; If bits 8 - 6 are equal to 7, we have DIVS
00001124  6000 0058                159              BRA     opOR                ; else opcode is OR
00001128                           160  
00001128  6000 0DBA                161  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000112C                           162  
0000112C                           163  braEleven                               ; there are two opCodes available EOR, or CMP
0000112C  4242                     164              CLR     D2
0000112E  E141                     165              ASL     #8,D1
00001130  1218                     166              MOVE.B  (A0)+,D1
00001132  3401                     167              MOVE.W  D1,D2
00001134  EC42                     168              ASR     #six,D2
00001136  C47C 0007                169              AND     #$07,D2
0000113A  B43C 0003                170              CMP.B   #three,D2
0000113E  6D00 033C                171              BLT     opCMP               ; If opmode bits are less than 3, we have CMP
00001142  6000 01EA                172              BRA     opEOR               ; Else its EOR
00001146                           173              
00001146                           174  
00001146  6000 0EF4                175  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
0000114A                           176    
0000114A                           177  braThirteen ; there are two opCodes available ADD, or ADDA
0000114A                           178  
0000114A  4242                     179  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
0000114C  1401                     180              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000114E  C438 000F                181              AND.B       $0F, D2             ; set first nibble to 0
00001152                           182   
00001152  B43C 0000                183              CMP.B       #zero, D2           ; compare second nibble to 0
00001156  6700 0EFC                184              BEQ         opASR               ; branch to ASR method
0000115A  B43C 0001                185              CMP.B       #one, D2            ; compare second nibble to 1
0000115E  6700 0EE8                186              BEQ         opASL               ; branch to ASL method
00001162  B43C 0002                187              CMP.B       #two, D2            ; compare second nibble to 2
00001166  6700 0F04                188              BEQ         opLSR               ; branch to LSR method
0000116A  B43C 0003                189              CMP.B       #three, D2          ; compare second nibble to 3
0000116E  6700 0EF0                190              BEQ         opLSL               ; branch to LSL method
00001172  B43C 0006                191              CMP.B       #six, D2            ; compare second nibble to 6
00001176  6700 0F0C                192              BEQ         opROR               ; branch to ROR method
0000117A  6000 0EFC                193              BRA         opROL               ; otherwise, branch to ROL method
0000117E                           194              
0000117E                           195              
0000117E                           196              
0000117E                           197  ***********************************************************************************************************
0000117E                           198  *
0000117E                           199  *               OR OPCODE
0000117E                           200  *
0000117E                           201  ***********************************************************************************************************
0000117E                           202  
0000117E  43F9 000027CA            203  opOR        LEA         ORmatch,A1
00001184  103C 000E                204              MOVE.B      #14,D0
00001188  4E4F                     205              TRAP        #15
0000118A                           206              
0000118A  4242                     207              CLR         D2
0000118C                           208              ; These are for EA to Dn direction
0000118C  B43C 0000                209              CMP.B       #zero,D2
00001190  6700 002A                210              BEQ         opORB               ; Byte in opmode
00001194  B43C 0001                211              CMP.B       #one,D2
00001198  6700 007C                212              BEQ         opORW               ; Word in opmode
0000119C  B43C 0002                213              CMP.B       #two,D2
000011A0  6700 00D0                214              BEQ         opORL               ; Long in opmode
000011A4                           215              
000011A4                           216              ; These are for Dn to EA direction
000011A4  B43C 0004                217              CMP.B       #four,D2
000011A8  6700 0012                218              BEQ         opORB               ; Byte in opmode
000011AC  B43C 0005                219              CMP.B       #five,D2
000011B0  6700 0064                220              BEQ         opORW               ; Word in opmode
000011B4  B43C 0006                221              CMP.B       #six,D2
000011B8  6700 00B8                222              BEQ         opORL               ; Long in opmode
000011BC                           223              
000011BC  43F9 000027FF            224  opORB       LEA         dispByte,A1
000011C2  103C 000E                225              MOVE.B      #14,D0
000011C6  4E4F                     226              TRAP        #15
000011C8                           227              
000011C8  43F9 0000276C            228              LEA         space, A1           ; Display space
000011CE  103C 000E                229              MOVE.B      #14, D0             ; command for trap call to display message
000011D2  4E4F                     230              TRAP        #15                 ; trap call
000011D4                           231              
000011D4                           232  
000011D4  1401                     233              MOVE.B      D1,D2
000011D6  E642                     234              ASR         #3,D2
000011D8  C47C 0007                235              AND         #$07,D2
000011DC  1601                     236              MOVE.B      D1,D3
000011DE  C67C 0007                237              AND         #$07,D3
000011E2  4EB9 00002090            238              JSR         printEA         ; Determines the "left" operand register
000011E8                           239              
000011E8  43F9 00002773            240              LEA         comma, A1           ; Display space
000011EE  103C 000E                241              MOVE.B      #14, D0             ; command for trap call to display message
000011F2  4E4F                     242              TRAP        #15                 ; trap call
000011F4                           243              
000011F4  4242                     244              CLR         D2
000011F6  3601                     245              MOVE.W      D1,D3
000011F8  E043                     246              ASR         #eight,D3
000011FA  E243                     247              ASR         #one,D3
000011FC  C67C 0007                248              AND         #$07,D3
00001200  4EB9 00002090            249              JSR         printEA
00001206                           250              
00001206  43F9 00002768            251              LEA         newLine,A1
0000120C  103C 000E                252              MOVE.B      #14,D0
00001210  4E4F                     253              TRAP        #15
00001212                           254              
00001212  6000 FDF8                255              BRA         LOOP
00001216                           256              
00001216                           257              
00001216  43F9 00002802            258  opORW       LEA         dispWord,A1
0000121C  103C 000E                259              MOVE.B      #14,D0
00001220  4E4F                     260              TRAP        #15
00001222                           261              
00001222  43F9 0000276C            262              LEA         space, A1           ; Display space
00001228  103C 000E                263              MOVE.B      #14, D0             ; command for trap call to display message
0000122C  4E4F                     264              TRAP        #15                 ; trap call
0000122E                           265              
0000122E  4242                     266              CLR         D2
00001230  1401                     267              MOVE.B      D1,D2
00001232  E642                     268              ASR         #3,D2
00001234  C47C 0007                269              AND         #$07,D2
00001238  1601                     270              MOVE.B      D1,D3
0000123A  C67C 0007                271              AND         #$07,D3
0000123E  4EB9 00002090            272              JSR         printEA         ; Determines the "left" operand register
00001244                           273              
00001244  43F9 00002773            274              LEA         comma, A1           ; Display space
0000124A  103C 000E                275              MOVE.B      #14, D0             ; command for trap call to display message
0000124E  4E4F                     276              TRAP        #15                 ; trap call
00001250                           277              
00001250  4242                     278              CLR         D2
00001252  3601                     279              MOVE.W      D1,D3
00001254  E043                     280              ASR         #eight,D3
00001256  E243                     281              ASR         #one,D3
00001258  C67C 0007                282              AND         #$07,D3
0000125C  4EB9 00002090            283              JSR         printEA
00001262                           284              
00001262  43F9 00002768            285              LEA         newLine,A1
00001268  103C 000E                286              MOVE.B      #14,D0
0000126C  4E4F                     287              TRAP        #15
0000126E                           288              
0000126E  6000 FD9C                289              BRA         LOOP
00001272                           290              
00001272  43F9 00002805            291  opORL       LEA         dispLong,A1
00001278  103C 000E                292              MOVE.B      #14,D0
0000127C  4E4F                     293              TRAP        #15
0000127E                           294              
0000127E  43F9 0000276C            295              LEA         space, A1           ; Display space
00001284  103C 000E                296              MOVE.B      #14, D0             ; command for trap call to display message
00001288  4E4F                     297              TRAP        #15                 ; trap call
0000128A                           298              
0000128A  1401                     299              MOVE.B      D1,D2
0000128C  E642                     300              ASR         #3,D2
0000128E  C47C 0007                301              AND         #$07,D2
00001292  1601                     302              MOVE.B      D1,D3
00001294  C67C 0007                303              AND         #$07,D3
00001298  4EB9 00002090            304              JSR         printEA         ; Determines the "left" operand register
0000129E                           305              
0000129E  43F9 00002773            306              LEA         comma, A1           ; Display space
000012A4  103C 000E                307              MOVE.B      #14, D0             ; command for trap call to display message
000012A8  4E4F                     308              TRAP        #15                 ; trap call
000012AA                           309              
000012AA  4242                     310              CLR         D2
000012AC  3601                     311              MOVE.W      D1,D3
000012AE  E043                     312              ASR         #eight,D3
000012B0  E243                     313              ASR         #one,D3
000012B2  C67C 0007                314              AND         #$07,D3
000012B6  4EB9 00002090            315              JSR         printEA
000012BC                           316              
000012BC  43F9 00002768            317              LEA         newLine,A1
000012C2  103C 000E                318              MOVE.B      #14,D0
000012C6  4E4F                     319              TRAP        #15
000012C8                           320              
000012C8  6000 FD42                321              BRA         LOOP            ; trap call
000012CC                           322              
000012CC  6000 FD3E                323              BRA         LOOP            ; DOUBLE CHECK THIS AGAIN AFTER MORE TESTING ALEX
000012D0                           324              
000012D0                           325  ***********************************************************************************************************
000012D0                           326  *
000012D0                           327  *               DIVS OPCODE
000012D0                           328  *
000012D0                           329  ***********************************************************************************************************
000012D0                           330  
000012D0  43F9 000027C5            331  opDIVS      LEA     DIVSmatch,A1
000012D6  103C 000E                332              MOVE.B  #14,D0
000012DA  4E4F                     333              TRAP    #15
000012DC                           334              
000012DC  43F9 0000276C            335              LEA         space, A1           ; Display space
000012E2  103C 000E                336              MOVE.B      #14, D0             ; command for trap call to display message
000012E6  4E4F                     337              TRAP        #15                 ; trap call
000012E8                           338              
000012E8  1401                     339              MOVE.B      D1,D2
000012EA  E642                     340              ASR         #3,D2
000012EC  C47C 0007                341              AND         #$07,D2
000012F0  1601                     342              MOVE.B      D1,D3
000012F2  C67C 0007                343              AND         #$07,D3
000012F6  4EB9 00002090            344              JSR         printEA
000012FC                           345              
000012FC  43F9 00002773            346              LEA         comma, A1           ; Display space
00001302  103C 000E                347              MOVE.B      #14, D0             ; command for trap call to display message
00001306  4E4F                     348              TRAP        #15                 ; trap call
00001308                           349              
00001308  4242                     350              CLR         D2
0000130A  3601                     351              MOVE.W      D1,D3
0000130C  E043                     352              ASR         #eight,D3
0000130E  E243                     353              ASR         #one,D3
00001310  C67C 0007                354              AND         #$07,D3
00001314  4EB9 00002090            355              JSR         printEA
0000131A                           356              
0000131A  43F9 00002768            357              LEA         newLine,A1
00001320  103C 000E                358              MOVE.B      #14,D0
00001324  4E4F                     359              TRAP        #15
00001326                           360              
00001326  6000 FCE4                361              BRA         LOOP
0000132A                           362      
0000132A  6000 FCE0                363              BRA     LOOP
0000132E                           364              
0000132E                           365  **********************************************************************************************************
0000132E                           366  *
0000132E                           367  *               EOR OPCODE
0000132E                           368  *
0000132E                           369  ***********************************************************************************************************
0000132E                           370  
0000132E  43F9 000027D1            371  opEOR       LEA         EORmatch,A1
00001334  103C 000E                372              MOVE.B      #14,D0
00001338  4E4F                     373              TRAP        #15
0000133A                           374              
0000133A  4242                     375              CLR         D2
0000133C                           376              
0000133C  1401                     377              MOVE.B      D1,D2
0000133E  EE42                     378              ASR         #seven,D2           ; Move bits 7 places over to find opmode
00001340  C47C 0007                379              AND         #$07,D2
00001344  B43C 0005                380              CMP.B       #five,D2
00001348  6D00 0012                381              BLT         opEORB              ; Byte in opmode
0000134C  B43C 0005                382              CMP.B       #five,D2
00001350  6700 006A                383              BEQ         opEORW              ; Word in opmode
00001354  B43C 0005                384              CMP.B       #five,D2
00001358  6E00 00C2                385              BGT         opEORL              ; Long in opmode
0000135C                           386              
0000135C  43F9 000027FF            387  opEORB      LEA         dispByte,A1
00001362  103C 000E                388              MOVE.B      #14,D0
00001366  4E4F                     389              TRAP        #15
00001368                           390              
00001368  43F9 0000276C            391              LEA         space, A1           ; Display space
0000136E  103C 000E                392              MOVE.B      #14, D0             ; command for trap call to display message
00001372  4E4F                     393              TRAP        #15                 ; trap call
00001374                           394              
00001374  4242                     395              CLR         D2
00001376  4243                     396              CLR         D3
00001378  3601                     397              MOVE.W      D1,D3
0000137A  E043                     398              ASR         #eight,D3
0000137C  E243                     399              ASR         #one,D3
0000137E  C67C 0007                400              AND         #$07,D3
00001382  4EB9 00002090            401              JSR         printEA
00001388                           402              
00001388  43F9 00002773            403              LEA         comma, A1           ; Display space
0000138E  103C 000E                404              MOVE.B      #14, D0             ; command for trap call to display message
00001392  4E4F                     405              TRAP        #15                 ; trap call
00001394                           406              
00001394  4242                     407              CLR         D2
00001396  4243                     408              CLR         D3
00001398  1401                     409              MOVE.B      D1,D2
0000139A  E642                     410              ASR         #three,D2
0000139C  C47C 0007                411              AND         #seven,D2
000013A0  1601                     412              MOVE.B      D1,D3
000013A2  C67C 0007                413              AND         #$07,D3
000013A6  4EB9 00002090            414              JSR         printEA         ; Determines the "left" operand register
000013AC                           415              
000013AC  43F9 00002768            416              LEA         newLine,A1
000013B2  103C 000E                417              MOVE.B      #14,D0
000013B6  4E4F                     418              TRAP        #15
000013B8                           419              
000013B8  6000 FC52                420              BRA         LOOP
000013BC                           421              
000013BC                           422              
000013BC  43F9 00002802            423  opEORW      LEA         dispWord,A1
000013C2  103C 000E                424              MOVE.B      #14,D0
000013C6  4E4F                     425              TRAP        #15
000013C8                           426              
000013C8  43F9 0000276C            427              LEA         space, A1           ; Display space
000013CE  103C 000E                428              MOVE.B      #14, D0             ; command for trap call to display message
000013D2  4E4F                     429              TRAP        #15                 ; trap call
000013D4                           430              
000013D4  4242                     431              CLR         D2
000013D6  4243                     432              CLR         D3
000013D8  3601                     433              MOVE.W      D1,D3
000013DA  E043                     434              ASR         #eight,D3
000013DC  E243                     435              ASR         #one,D3
000013DE  C67C 0007                436              AND         #$07,D3
000013E2  4EB9 00002090            437              JSR         printEA
000013E8                           438              
000013E8  43F9 00002773            439              LEA         comma, A1           ; Display space
000013EE  103C 000E                440              MOVE.B      #14, D0             ; command for trap call to display message
000013F2  4E4F                     441              TRAP        #15                 ; trap call
000013F4                           442              
000013F4  4242                     443              CLR         D2
000013F6  4243                     444              CLR         D3
000013F8  1401                     445              MOVE.B      D1,D2
000013FA  E642                     446              ASR         #three,D2
000013FC  C47C 0007                447              AND         #seven,D2
00001400  1601                     448              MOVE.B      D1,D3
00001402  C67C 0007                449              AND         #$07,D3
00001406  4EB9 00002090            450              JSR         printEA         ; Determines the "left" operand register
0000140C                           451              
0000140C  43F9 00002768            452              LEA         newLine,A1
00001412  103C 000E                453              MOVE.B      #14,D0
00001416  4E4F                     454              TRAP        #15
00001418                           455              
00001418  6000 FBF2                456              BRA         LOOP
0000141C                           457              
0000141C  43F9 00002805            458  opEORL      LEA         dispLong,A1
00001422  103C 000E                459              MOVE.B      #14,D0
00001426  4E4F                     460              TRAP        #15
00001428                           461              
00001428  43F9 0000276C            462              LEA         space, A1           ; Display space
0000142E  103C 000E                463              MOVE.B      #14, D0             ; command for trap call to display message
00001432  4E4F                     464              TRAP        #15                 ; trap call
00001434                           465              
00001434  4242                     466              CLR         D2
00001436  4243                     467              CLR         D3
00001438  3601                     468              MOVE.W      D1,D3
0000143A  E043                     469              ASR         #eight,D3
0000143C  E243                     470              ASR         #one,D3
0000143E  C67C 0007                471              AND         #$07,D3
00001442  4EB9 00002090            472              JSR         printEA
00001448                           473              
00001448  43F9 00002773            474              LEA         comma, A1           ; Display space
0000144E  103C 000E                475              MOVE.B      #14, D0             ; command for trap call to display message
00001452  4E4F                     476              TRAP        #15                 ; trap call
00001454                           477              
00001454  4242                     478              CLR         D2
00001456  4243                     479              CLR         D3
00001458  1401                     480              MOVE.B      D1,D2
0000145A  E642                     481              ASR         #three,D2
0000145C  C47C 0007                482              AND         #seven,D2
00001460  1601                     483              MOVE.B      D1,D3
00001462  C67C 0007                484              AND         #$07,D3
00001466  4EB9 00002090            485              JSR         printEA         ; Determines the "left" operand register
0000146C                           486              
0000146C  43F9 00002768            487              LEA         newLine,A1
00001472  103C 000E                488              MOVE.B      #14,D0
00001476  4E4F                     489              TRAP        #15
00001478                           490              
00001478  6000 FB92                491              BRA         LOOP            ; trap call
0000147C                           492              
0000147C                           493  
0000147C                           494  ***********************************************************************************************************
0000147C                           495  *
0000147C                           496  *               CMP OPCODE
0000147C                           497  *
0000147C                           498  ***********************************************************************************************************
0000147C                           499  
0000147C  43F9 000027D5            500  opCMP       LEA         CMPmatch,A1
00001482  103C 000E                501              MOVE.B      #14,D0
00001486  4E4F                     502              TRAP        #15
00001488                           503              
00001488  4242                     504              CLR         D2
0000148A                           505              
0000148A  1401                     506              MOVE.B      D1,D2
0000148C  EC42                     507              ASR         #six,D2         ; Move bits 7 places over to find opmode
0000148E  C47C 0007                508              AND         #$07,D2
00001492  B43C 0000                509              CMP.B       #zero,D2
00001496  6700 0016                510              BEQ         opCMPB              ; Byte in opmode
0000149A  B43C 0001                511              CMP.B       #one,D2
0000149E  6700 0068                512              BEQ         opCMPW              ; Word in opmode
000014A2  B43C 0002                513              CMP.B       #two,D2
000014A6  6700 00BA                514              BEQ         opCMPL              ; Long in opmode
000014AA                           515              
000014AA  6000 12B8                516              BRA         printInvalid        ; Incorrect input
000014AE                           517  
000014AE  43F9 000027FF            518  opCMPB      LEA         dispByte,A1
000014B4  103C 000E                519              MOVE.B      #14,D0
000014B8  4E4F                     520              TRAP        #15
000014BA                           521              
000014BA  43F9 0000276C            522              LEA         space, A1           ; Display space
000014C0  103C 000E                523              MOVE.B      #14, D0             ; command for trap call to display message
000014C4  4E4F                     524              TRAP        #15                 ; trap call
000014C6                           525              
000014C6  1401                     526              MOVE.B      D1,D2
000014C8  E642                     527              ASR         #3,D2
000014CA  C47C 0007                528              AND         #$07,D2
000014CE  1601                     529              MOVE.B      D1,D3
000014D0  C67C 0007                530              AND         #$07,D3
000014D4  4EB9 00002090            531              JSR         printEA         ; Determines the "left" operand register
000014DA                           532              
000014DA  43F9 00002773            533              LEA         comma, A1           ; Display space
000014E0  103C 000E                534              MOVE.B      #14, D0             ; command for trap call to display message
000014E4  4E4F                     535              TRAP        #15                 ; trap call
000014E6                           536              
000014E6  4242                     537              CLR         D2
000014E8  3601                     538              MOVE.W      D1,D3
000014EA  E043                     539              ASR         #eight,D3
000014EC  E243                     540              ASR         #one,D3
000014EE  C67C 0007                541              AND         #$07,D3
000014F2  4EB9 00002090            542              JSR         printEA
000014F8                           543              
000014F8  43F9 00002768            544              LEA         newLine,A1
000014FE  103C 000E                545              MOVE.B      #14,D0
00001502  4E4F                     546              TRAP        #15
00001504                           547              
00001504  6000 FB06                548              BRA         LOOP
00001508                           549              
00001508  43F9 00002802            550  opCMPW      LEA         dispWord,A1
0000150E  103C 000E                551              MOVE.B      #14,D0
00001512  4E4F                     552              TRAP        #15
00001514                           553              
00001514  43F9 0000276C            554              LEA         space, A1           ; Display space
0000151A  103C 000E                555              MOVE.B      #14, D0             ; command for trap call to display message
0000151E  4E4F                     556              TRAP        #15                 ; trap call
00001520                           557              
00001520  1401                     558              MOVE.B      D1,D2
00001522  E642                     559              ASR         #3,D2
00001524  C47C 0007                560              AND         #$07,D2
00001528  1601                     561              MOVE.B      D1,D3
0000152A  C67C 0007                562              AND         #$07,D3
0000152E  4EB9 00002090            563              JSR         printEA         ; Determines the "left" operand register
00001534                           564              
00001534  43F9 00002773            565              LEA         comma, A1           ; Display space
0000153A  103C 000E                566              MOVE.B      #14, D0             ; command for trap call to display message
0000153E  4E4F                     567              TRAP        #15                 ; trap call
00001540                           568              
00001540  4242                     569              CLR         D2
00001542  3601                     570              MOVE.W      D1,D3
00001544  E043                     571              ASR         #eight,D3
00001546  E243                     572              ASR         #one,D3
00001548  C67C 0007                573              AND         #$07,D3
0000154C  4EB9 00002090            574              JSR         printEA
00001552                           575              
00001552  43F9 00002768            576              LEA         newLine,A1
00001558  103C 000E                577              MOVE.B      #14,D0
0000155C  4E4F                     578              TRAP        #15
0000155E                           579              
0000155E  6000 FAAC                580              BRA         LOOP
00001562                           581  
00001562  43F9 00002805            582  opCMPL      LEA         dispLong,A1
00001568  103C 000E                583              MOVE.B      #14,D0
0000156C  4E4F                     584              TRAP        #15
0000156E                           585              
0000156E  43F9 0000276C            586              LEA         space, A1           ; Display space
00001574  103C 000E                587              MOVE.B      #14, D0             ; command for trap call to display message
00001578  4E4F                     588              TRAP        #15                 ; trap call
0000157A                           589              
0000157A  1401                     590              MOVE.B      D1,D2
0000157C  E642                     591              ASR         #3,D2
0000157E  C47C 0007                592              AND         #$07,D2
00001582  1601                     593              MOVE.B      D1,D3
00001584  C67C 0007                594              AND         #$07,D3
00001588  4EB9 00002090            595              JSR         printEA         ; Determines the "left" operand register
0000158E                           596              
0000158E  43F9 00002773            597              LEA         comma, A1           ; Display space
00001594  103C 000E                598              MOVE.B      #14, D0             ; command for trap call to display message
00001598  4E4F                     599              TRAP        #15                 ; trap call
0000159A                           600              
0000159A  4242                     601              CLR         D2
0000159C  3601                     602              MOVE.W      D1,D3
0000159E  E043                     603              ASR         #eight,D3
000015A0  E243                     604              ASR         #one,D3
000015A2  C67C 0007                605              AND         #$07,D3
000015A6  4EB9 00002090            606              JSR         printEA
000015AC                           607              
000015AC  43F9 00002768            608              LEA         newLine,A1
000015B2  103C 000E                609              MOVE.B      #14,D0
000015B6  4E4F                     610              TRAP        #15
000015B8                           611              
000015B8  6000 FA52                612              BRA         LOOP
000015BC                           613              
000015BC                           614  ***********************************************************************************************************
000015BC                           615  *
000015BC                           616  *               ORI OPCODE
000015BC                           617  *
000015BC                           618  ***********************************************************************************************************
000015BC                           619  
000015BC  43F9 0000277D            620  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
000015C2  103C 000E                621          MOVE.B      #14, D0             ; command for trap call to display message
000015C6  4E4F                     622          TRAP        #15                 ; trap call
000015C8                           623          
000015C8  1218                     624          MOVE.B      (A0)+, D1
000015CA  1401                     625          MOVE.B      D1,D2               ; copy data over
000015CC  EC42                     626          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000015CE  B43C 0000                627          CMP.B       #zero,D2
000015D2  6700 0016                628          BEQ         opORIB
000015D6  B43C 0001                629          CMP.B       #one,D2
000015DA  6700 0070                630          BEQ         opORIW
000015DE  B43C 0002                631          CMP.B       #two,D2
000015E2  6700 00CA                632          BEQ         opORIL
000015E6                           633          
000015E6  6000 117C                634          BRA         printInvalid
000015EA                           635          
000015EA  43F9 000027FF            636  opORIB  LEA         dispByte, A1        ; Display byte
000015F0  103C 000E                637          MOVE.B      #14, D0             ; command for trap call to display message
000015F4  4E4F                     638          TRAP        #15                 ; trap call
000015F6                           639          
000015F6  43F9 0000276C            640          LEA         space, A1           ; Display space
000015FC  103C 000E                641          MOVE.B      #14, D0             ; command for trap call to display message
00001600  4E4F                     642          TRAP        #15                 ; trap call
00001602                           643          
00001602  4242                     644          CLR         D2
00001604  1401                     645          MOVE.B      D1,D2
00001606  E642                     646          ASR         #three,D2
00001608  C47C 0007                647          AND         #seven,D2
0000160C  4243                     648          CLR         D3        
0000160E  1601                     649          MOVE.B      D1,D3
00001610  C67C 0007                650          AND         #seven,D3
00001614                           651          
00001614  4241                     652          CLR         D1
00001616  3218                     653          MOVE.W      (A0)+, D1
00001618                           654          
00001618  43F9 0000276F            655          LEA         hashTag, A1           ; Display space
0000161E  103C 000E                656          MOVE.B      #14, D0             ; command for trap call to display message
00001622  4E4F                     657          TRAP        #15                 ; trap call
00001624                           658          
00001624  103C 0003                659          MOVE.B      #3, D0
00001628  4E4F                     660          TRAP        #15
0000162A                           661          
0000162A  43F9 00002773            662          LEA         comma, A1           ; Display space
00001630  103C 000E                663          MOVE.B      #14, D0             ; command for trap call to display message
00001634  4E4F                     664          TRAP        #15                 ; trap call
00001636                           665          
00001636  4EB9 00002090            666          JSR         printEA
0000163C                           667          
0000163C  43F9 00002768            668          LEA         newLine, A1           ; Display space
00001642  103C 000E                669          MOVE.B      #14, D0             ; command for trap call to display message
00001646  4E4F                     670          TRAP        #15                 ; trap call
00001648                           671          
00001648  6000 F9C2                672          BRA         LOOP
0000164C                           673          
0000164C                           674          
0000164C  43F9 00002802            675  opORIW  LEA         dispWord, A1        ; Display byte
00001652  103C 000E                676          MOVE.B      #14, D0             ; command for trap call to display message
00001656  4E4F                     677          TRAP        #15                 ; trap call
00001658                           678          
00001658  43F9 0000276C            679          LEA         space, A1           ; Display space
0000165E  103C 000E                680          MOVE.B      #14, D0             ; command for trap call to display message
00001662  4E4F                     681          TRAP        #15                 ; trap call
00001664                           682          
00001664  4242                     683          CLR         D2
00001666  1401                     684          MOVE.B      D1,D2
00001668  E642                     685          ASR         #three,D2
0000166A  C47C 0007                686          AND         #seven,D2
0000166E  4243                     687          CLR         D3        
00001670  1601                     688          MOVE.B      D1,D3
00001672  C67C 0007                689          AND         #seven,D3
00001676                           690          
00001676  4241                     691          CLR         D1
00001678  3218                     692          MOVE.W      (A0)+, D1
0000167A                           693          
0000167A  43F9 0000276F            694          LEA         hashTag, A1           ; Display space
00001680  103C 000E                695          MOVE.B      #14, D0             ; command for trap call to display message
00001684  4E4F                     696          TRAP        #15                 ; trap call
00001686                           697          
00001686  103C 0003                698          MOVE.B      #3, D0
0000168A  4E4F                     699          TRAP        #15
0000168C                           700          
0000168C  43F9 00002773            701          LEA         comma, A1           ; Display space
00001692  103C 000E                702          MOVE.B      #14, D0             ; command for trap call to display message
00001696  4E4F                     703          TRAP        #15                 ; trap call
00001698                           704          
00001698  4EB9 00002090            705          JSR         printEA
0000169E                           706          
0000169E  43F9 00002768            707          LEA         newLine, A1           ; Display space
000016A4  103C 000E                708          MOVE.B      #14, D0             ; command for trap call to display message
000016A8  4E4F                     709          TRAP        #15                 ; trap call
000016AA                           710          
000016AA  6000 F960                711          BRA         LOOP
000016AE                           712       
000016AE  43F9 00002805            713  opORIL  LEA         dispLong, A1        ; Display byte
000016B4  103C 000E                714          MOVE.B      #14, D0             ; command for trap call to display message
000016B8  4E4F                     715          TRAP        #15                 ; trap call
000016BA                           716          
000016BA  43F9 0000276C            717          LEA         space, A1           ; Display space
000016C0  103C 000E                718          MOVE.B      #14, D0             ; command for trap call to display message
000016C4  4E4F                     719          TRAP        #15                 ; trap call
000016C6                           720          
000016C6  4242                     721          CLR         D2
000016C8  1401                     722          MOVE.B      D1,D2
000016CA  E642                     723          ASR         #three,D2
000016CC  C47C 0007                724          AND         #seven,D2
000016D0  4243                     725          CLR         D3        
000016D2  1601                     726          MOVE.B      D1,D3
000016D4  C67C 0007                727          AND         #seven,D3
000016D8                           728          
000016D8  4241                     729          CLR         D1
000016DA  2218                     730          MOVE.L      (A0)+, D1
000016DC                           731          
000016DC  43F9 0000276F            732          LEA         hashTag, A1           ; Display space
000016E2  103C 000E                733          MOVE.B      #14, D0             ; command for trap call to display message
000016E6  4E4F                     734          TRAP        #15                 ; trap call
000016E8                           735          
000016E8  103C 0003                736          MOVE.B      #3, D0
000016EC  4E4F                     737          TRAP        #15
000016EE                           738          
000016EE  43F9 00002773            739          LEA         comma, A1           ; Display space
000016F4  103C 000E                740          MOVE.B      #14, D0             ; command for trap call to display message
000016F8  4E4F                     741          TRAP        #15                 ; trap call
000016FA                           742          
000016FA  4EB9 00002090            743          JSR         printEA
00001700                           744          
00001700  43F9 00002768            745          LEA         newLine, A1           ; Display space
00001706  103C 000E                746          MOVE.B      #14, D0             ; command for trap call to display message
0000170A  4E4F                     747          TRAP        #15                 ; trap call
0000170C                           748          
0000170C  6000 F8FE                749          BRA         LOOP
00001710                           750           
00001710  43F9 00002781            751  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001716  103C 000E                752          MOVE.B      #14, D0             ; command for trap call to display message
0000171A  4E4F                     753          TRAP        #15                 ; trap call
0000171C                           754                  
0000171C  1218                     755          MOVE.B      (A0)+, D1
0000171E  1401                     756          MOVE.B      D1,D2               ; copy data over
00001720  EC42                     757          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001722  B43C 0000                758          CMP.B       #zero,D2
00001726  6700 0034                759          BEQ         opCMPIB
0000172A  B43C 0001                760          CMP.B       #one,D2
0000172E  6700 008E                761          BEQ         opCMPIW
00001732  B43C 0002                762          CMP.B       #two,D2
00001736  6700 00E8                763          BEQ         opCMPIL
0000173A                           764          
0000173A  1401                     765          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
0000173C  E542                     766          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
0000173E  1802                     767          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
00001740  4242                     768          CLR         D2                  ; Clear out data register
00001742  1404                     769          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
00001744  EA42                     770          ASR         #five,D2            ; Shift the register out to get just the mode
00001746  1802                     771          MOVE.B      D2,D4               ; Store mode into D4
00001748  4242                     772          CLR         D2
0000174A                           773          
0000174A  1401                     774          MOVE.B      D1,D2               ; Getting the EA register
0000174C  EB42                     775          ASL         #five,D2
0000174E  1A02                     776          MOVE.B      D2,D5               ; Move just the register into D5
00001750  4242                     777          CLR         D2                  ; Clearing D2 to put data back
00001752  1405                     778          MOVE.B      D5,D2               ; Putting back the register
00001754  EA42                     779          ASR         #five,D2            ; Shifting bits in order to read the register
00001756  1A02                     780          MOVE.B      D2,D5               ; Store register into D5
00001758                           781          
00001758  6000 F8B2                782          BRA         LOOP                ; go back to the loop
0000175C                           783  
0000175C  43F9 000027FF            784  opCMPIB LEA         dispByte, A1        ; Display byte
00001762  103C 000E                785          MOVE.B      #14, D0             ; command for trap call to display message
00001766  4E4F                     786          TRAP        #15                 ; trap call
00001768                           787          
00001768  43F9 0000276C            788          LEA         space, A1           ; Display space
0000176E  103C 000E                789          MOVE.B      #14, D0             ; command for trap call to display message
00001772  4E4F                     790          TRAP        #15                 ; trap call
00001774                           791          
00001774  4242                     792          CLR         D2
00001776  1401                     793          MOVE.B      D1,D2
00001778  E642                     794          ASR         #three,D2
0000177A  C47C 0007                795          AND         #seven,D2
0000177E  4243                     796          CLR         D3        
00001780  1601                     797          MOVE.B      D1,D3
00001782  C67C 0007                798          AND         #seven,D3
00001786                           799          
00001786  4241                     800          CLR         D1
00001788  3218                     801          MOVE.W      (A0)+, D1
0000178A                           802          
0000178A  43F9 0000276F            803          LEA         hashTag, A1           ; Display space
00001790  103C 000E                804          MOVE.B      #14, D0             ; command for trap call to display message
00001794  4E4F                     805          TRAP        #15                 ; trap call
00001796                           806          
00001796  103C 0003                807          MOVE.B      #3, D0
0000179A  4E4F                     808          TRAP        #15
0000179C                           809          
0000179C  43F9 00002773            810          LEA         comma, A1           ; Display space
000017A2  103C 000E                811          MOVE.B      #14, D0             ; command for trap call to display message
000017A6  4E4F                     812          TRAP        #15                 ; trap call
000017A8                           813          
000017A8  4EB9 00002090            814          JSR         printEA
000017AE                           815          
000017AE  43F9 00002768            816          LEA         newLine, A1           ; Display space
000017B4  103C 000E                817          MOVE.B      #14, D0             ; command for trap call to display message
000017B8  4E4F                     818          TRAP        #15                 ; trap call
000017BA                           819  
000017BA  6000 F850                820          BRA         LOOP
000017BE                           821  
000017BE  43F9 00002802            822  opCMPIW LEA         dispWord, A1        ; Display byte
000017C4  103C 000E                823          MOVE.B      #14, D0             ; command for trap call to display message
000017C8  4E4F                     824          TRAP        #15                 ; trap call
000017CA                           825          
000017CA  43F9 0000276C            826          LEA         space, A1           ; Display space
000017D0  103C 000E                827          MOVE.B      #14, D0             ; command for trap call to display message
000017D4  4E4F                     828          TRAP        #15                 ; trap call
000017D6                           829          
000017D6  4242                     830          CLR         D2
000017D8  1401                     831          MOVE.B      D1,D2
000017DA  E642                     832          ASR         #three,D2
000017DC  C47C 0007                833          AND         #seven,D2
000017E0  4243                     834          CLR         D3        
000017E2  1601                     835          MOVE.B      D1,D3
000017E4  C67C 0007                836          AND         #seven,D3
000017E8                           837          
000017E8  4241                     838          CLR         D1
000017EA  3218                     839          MOVE.W      (A0)+, D1
000017EC                           840          
000017EC  43F9 0000276F            841          LEA         hashTag, A1           ; Display space
000017F2  103C 000E                842          MOVE.B      #14, D0             ; command for trap call to display message
000017F6  4E4F                     843          TRAP        #15                 ; trap call
000017F8                           844          
000017F8  103C 0003                845          MOVE.B      #3, D0
000017FC  4E4F                     846          TRAP        #15
000017FE                           847          
000017FE  43F9 00002773            848          LEA         comma, A1           ; Display space
00001804  103C 000E                849          MOVE.B      #14, D0             ; command for trap call to display message
00001808  4E4F                     850          TRAP        #15                 ; trap call
0000180A                           851          
0000180A  4EB9 00002090            852          JSR         printEA
00001810                           853          
00001810  43F9 00002768            854          LEA         newLine, A1           ; Display space
00001816  103C 000E                855          MOVE.B      #14, D0             ; command for trap call to display message
0000181A  4E4F                     856          TRAP        #15                 ; trap call
0000181C  6000 F7EE                857          BRA         LOOP
00001820                           858  
00001820  43F9 00002805            859  opCMPIL LEA         dispLong, A1        ; Display byte
00001826  103C 000E                860          MOVE.B      #14, D0             ; command for trap call to display message
0000182A  4E4F                     861          TRAP        #15                 ; trap call
0000182C                           862          
0000182C  43F9 0000276C            863          LEA         space, A1           ; Display space
00001832  103C 000E                864          MOVE.B      #14, D0             ; command for trap call to display message
00001836  4E4F                     865          TRAP        #15                 ; trap call
00001838                           866          
00001838  4242                     867          CLR         D2
0000183A  1401                     868          MOVE.B      D1,D2
0000183C  E642                     869          ASR         #three,D2
0000183E  C47C 0007                870          AND         #seven,D2
00001842  4243                     871          CLR         D3        
00001844  1601                     872          MOVE.B      D1,D3
00001846  C67C 0007                873          AND         #seven,D3
0000184A                           874          
0000184A  4241                     875          CLR         D1
0000184C  3218                     876          MOVE.W      (A0)+, D1
0000184E                           877          
0000184E  43F9 0000276F            878          LEA         hashTag, A1           ; Display space
00001854  103C 000E                879          MOVE.B      #14, D0             ; command for trap call to display message
00001858  4E4F                     880          TRAP        #15                 ; trap call
0000185A                           881          
0000185A  103C 0003                882          MOVE.B      #3, D0
0000185E  4E4F                     883          TRAP        #15
00001860                           884          
00001860  43F9 00002773            885          LEA         comma, A1           ; Display space
00001866  103C 000E                886          MOVE.B      #14, D0             ; command for trap call to display message
0000186A  4E4F                     887          TRAP        #15                 ; trap call
0000186C                           888          
0000186C  4EB9 00002090            889          JSR         printEA
00001872                           890          
00001872  43F9 00002768            891          LEA         newLine, A1           ; Display space
00001878  103C 000E                892          MOVE.B      #14, D0             ; command for trap call to display message
0000187C  4E4F                     893          TRAP        #15                 ; trap call
0000187E                           894          
0000187E  6000 F78C                895          BRA         LOOP
00001882                           896  
00001882  43F9 00002786            897  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001888  103C 000E                898                  MOVE.B      #14, D0             ; command for trap call to display message
0000188C  4E4F                     899                  TRAP        #15                 ; trap call
0000188E                           900  
0000188E  43F9 0000276C            901                  LEA         space, A1           ; Display space
00001894  103C 000E                902                  MOVE.B      #14, D0             ; command for trap call to display message
00001898  4E4F                     903                  TRAP        #15                 ; trap call
0000189A                           904                  
0000189A  4242                     905                  CLR         D2
0000189C  1218                     906                  MOVE.B      (A0)+, D1
0000189E  1401                     907                  MOVE.B      D1,D2               ; copy data over
000018A0  E642                     908                  ASR         #three,D2           ; Shift to the right to remove register
000018A2  C47C 0007                909                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
000018A6                           910                  
000018A6  4243                     911                  CLR         D3                  ; Clear D3 so we can move D1 in
000018A8  1601                     912                  MOVE.B      D1,D3               ; Move othr byte in
000018AA  C67C 0007                913                  AND         #seven,D3           ; Set everything besides register to 0
000018AE                           914                  
000018AE  4241                     915                  CLR         D1
000018B0  3218                     916                  MOVE.W      (A0)+, D1
000018B2                           917                 
000018B2                           918                  
000018B2  43F9 0000276F            919                  LEA         hashTag, A1           ; Display space
000018B8  103C 000E                920                  MOVE.B      #14, D0             ; command for trap call to display message
000018BC  4E4F                     921                  TRAP        #15                 ; trap call
000018BE                           922          
000018BE  103C 0003                923                  MOVE.B      #3, D0
000018C2  4E4F                     924                  TRAP        #15
000018C4                           925          
000018C4  43F9 00002773            926                  LEA         comma, A1           ; Display space
000018CA  103C 000E                927                  MOVE.B      #14, D0             ; command for trap call to display message
000018CE  4E4F                     928                  TRAP        #15                 ; trap call
000018D0                           929                  
000018D0  4EB9 00002090            930                  JSR         printEA
000018D6                           931          
000018D6  43F9 00002768            932                  LEA         newLine, A1           ; Display space
000018DC  103C 000E                933                  MOVE.B      #14, D0             ; command for trap call to display message
000018E0  4E4F                     934                  TRAP        #15                 ; trap call
000018E2                           935                  
000018E2                           936                  
000018E2  6000 F728                937                  BRA         LOOP                
000018E6                           938          
000018E6                           939  opDynBCLR       
000018E6  4241                     940                  CLR         D1
000018E8  1218                     941                  MOVE.B      (A0)+,D1            ; Copy second byte in
000018EA  1601                     942                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
000018EC  E243                     943                  ASR         #one,D3             ; Shift register over to the end
000018EE  C67C 0007                944                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
000018F2                           945                  
000018F2  1401                     946                  MOVE.B      D1,D2
000018F4  EC42                     947                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
000018F6  B47C 0002                948                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
000018FA  6600 0E68                949                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
000018FE                           950  
000018FE                           951                  
000018FE  43F9 00002786            952                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
00001904  103C 000E                953                  MOVE.B      #14, D0             ; command for trap call to display message
00001908  4E4F                     954                  TRAP        #15                 ; trap call  
0000190A                           955                  
0000190A  43F9 0000276C            956                  LEA         space, A1           ; Display space
00001910  103C 000E                957                  MOVE.B      #14, D0             ; command for trap call to display message
00001914  4E4F                     958                  TRAP        #15                 ; trap call
00001916                           959                  
00001916  143C 0000                960                  MOVE.B      #zero,D2                
0000191A  4EB9 00002090            961                  JSR         printEA
00001920                           962                  
00001920  43F9 00002773            963                  LEA         comma, A1           ; Display space
00001926  103C 000E                964                  MOVE.B      #14, D0             ; command for trap call to display message
0000192A  4E4F                     965                  TRAP        #15                 ; trap call
0000192C                           966                  
0000192C  4242                     967                  CLR         D2
0000192E  1401                     968                  MOVE.B      D1,D2               ; Using D2 to store EA mode
00001930  E642                     969                  ASR         #three,D2           ; Remove/shift the register out
00001932  C47C 0007                970                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
00001936                           971                  
00001936  4243                     972                  CLR         D3                  ; Clearing D3 to avoid mashing data
00001938  1601                     973                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
0000193A  C67C 0007                974                  AND         #seven,D3           ; Change all bits except for register bits to 0
0000193E                           975                  
0000193E                           976  
0000193E  4EB9 00002090            977                  JSR         printEA
00001944                           978          
00001944  43F9 00002768            979                  LEA         newLine, A1           ; Display space
0000194A  103C 000E                980                  MOVE.B      #14, D0             ; command for trap call to display message
0000194E  4E4F                     981                  TRAP        #15                 ; trap call            
00001950                           982  
00001950                           983  
00001950  6000 F6BA                984                  BRA         LOOP                ; go back to the loop
00001954                           985   
00001954                           986  opMOVEB 
00001954  43F9 0000278B            987          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
0000195A  103C 000E                988          MOVE.B      #14, D0             ; command for trap call to display message
0000195E  4E4F                     989          TRAP        #15                 ; trap call
00001960  43F9 000027FF            990          LEA         dispByte, A1        ; display byte
00001966  103C 000E                991          MOVE.B      #14, D0             ; command for trap call to display message
0000196A  4E4F                     992          TRAP        #15                 ; trap call
0000196C  43F9 0000276C            993          LEA         space, A1           ; create spaces
00001972  103C 000E                994          MOVE.B      #14, D0             ; command for trap call to display message
00001976  4E4F                     995          TRAP        #15                 ; trap call
00001978                           996          
00001978                           997          
00001978  4245                     998          CLR         D5                  ; Clear D5
0000197A  1A01                     999          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000197C  E245                    1000          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
0000197E  CA7C 0007               1001          AND         #seven,D5
00001982                          1002          
00001982  4244                    1003          CLR         D4                  ; Clear out D4
00001984  1801                    1004          MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001986  C87C 0001               1005          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000198A                          1006          
0000198A  4241                    1007          CLR          D1
0000198C  4242                    1008          CLR          D2
0000198E  1218                    1009          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001990  1401                    1010          MOVE.B      D1,D2
00001992  EC42                    1011          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001994  D842                    1012          ADD         D2,D4               ; Adds the remaining bits to D4
00001996                          1013          
00001996  4242                    1014          CLR         D2
00001998  1401                    1015          MOVE.B      D1,D2               ; Copy new byte over to D2
0000199A  E642                    1016          ASR         #three,D2           ; Shift source register out
0000199C  C47C 0007               1017          AND         #seven,D2           ; Set everything to 0 except for the mode
000019A0                          1018          
000019A0  4243                    1019          CLR         D3
000019A2  1601                    1020          MOVE.B      D1,D3
000019A4  C67C 0007               1021          AND         #seven,D3
000019A8                          1022          
000019A8  4EB9 00002090           1023          JSR         printEA
000019AE                          1024          
000019AE  43F9 00002773           1025          LEA         comma, A1           ; Display space
000019B4  103C 000E               1026          MOVE.B      #14, D0             ; command for trap call to display message
000019B8  4E4F                    1027          TRAP        #15                 ; trap call
000019BA                          1028          
000019BA  4242                    1029          CLR         D2
000019BC  4243                    1030          CLR         D3
000019BE  1404                    1031          MOVE.B      D4,D2
000019C0  1605                    1032          MOVE.B      D5,D3
000019C2                          1033          
000019C2  4EB9 00002090           1034          JSR         printEA
000019C8                          1035          
000019C8                          1036          
000019C8  43F9 00002768           1037          LEA         newLine, A1           ; Display space
000019CE  103C 000E               1038          MOVE.B      #14, D0             ; command for trap call to display message
000019D2  4E4F                    1039          TRAP        #15                 ; trap call            
000019D4                          1040  
000019D4                          1041  
000019D4  6000 F636               1042          BRA         LOOP                ; go back to the loop
000019D8                          1043          
000019D8                          1044  opMOVEL     
000019D8                          1045          
000019D8  4245                    1046              CLR         D5                  ; Clear D5
000019DA  1A01                    1047              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
000019DC  E245                    1048              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
000019DE  CA7C 0007               1049              AND         #seven,D5
000019E2                          1050          
000019E2  4244                    1051              CLR         D4                  ; Clear out D4
000019E4  1801                    1052              MOVE.B      D1,D4               ; Copy byte over to store destination mode
000019E6  C87C 0001               1053              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
000019EA                          1054          
000019EA  4241                    1055              CLR          D1
000019EC  4242                    1056              CLR          D2
000019EE  1218                    1057              MOVE.B      (A0)+,D1            ; Copy byte into D1
000019F0  1401                    1058              MOVE.B      D1,D2
000019F2  EC42                    1059              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000019F4  D842                    1060              ADD         D2,D4               ; Adds the remaining bits to D4
000019F6                          1061          
000019F6  B87C 0001               1062              CMP         #one,D4             ; Check if it is MOVEA
000019FA  6700 006C               1063              BEQ         opMOVEAL            ; If it is, branch off
000019FE                          1064              
000019FE  43F9 0000278B           1065              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001A04  103C 000E               1066              MOVE.B      #14, D0             ; command for trap call to display message
00001A08  4E4F                    1067              TRAP        #15                 ; trap call  
00001A0A                          1068              
00001A0A                          1069              
00001A0A  43F9 00002805           1070              LEA         dispLong,A1
00001A10  103C 000E               1071              MOVE.B      #14, D0             ; command for trap call to display message
00001A14  4E4F                    1072              TRAP        #15                 ; trap call
00001A16                          1073              
00001A16  43F9 0000276C           1074              LEA         space, A1           ; create spaces
00001A1C  103C 000E               1075              MOVE.B      #14, D0             ; command for trap call to display message
00001A20  4E4F                    1076              TRAP        #15                 ; trap call
00001A22                          1077          
00001A22  4242                    1078              CLR         D2
00001A24  1401                    1079              MOVE.B      D1,D2               ; Copy new byte over to D2
00001A26  E642                    1080              ASR         #three,D2           ; Shift source register out
00001A28  C47C 0007               1081              AND         #seven,D2           ; Set everything to 0 except for the mode
00001A2C                          1082          
00001A2C  4243                    1083              CLR         D3
00001A2E  1601                    1084              MOVE.B      D1,D3
00001A30  C67C 0007               1085              AND         #seven,D3
00001A34                          1086              
00001A34  4241                    1087              CLR         D1                  ; Clear D1
00001A36  2218                    1088              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
00001A38                          1089              
00001A38  4EB9 00002090           1090              JSR         printEA
00001A3E                          1091              
00001A3E  43F9 00002773           1092              LEA         comma, A1           ; Display comma
00001A44  103C 000E               1093              MOVE.B      #14, D0             ; command for trap call to display message
00001A48  4E4F                    1094              TRAP        #15                 ; trap call
00001A4A                          1095          
00001A4A  4242                    1096              CLR         D2
00001A4C  4243                    1097              CLR         D3
00001A4E  1404                    1098              MOVE.B      D4,D2
00001A50  1605                    1099              MOVE.B      D5,D3
00001A52                          1100              
00001A52                          1101  
00001A52                          1102              
00001A52  4EB9 00002090           1103              JSR         printEA
00001A58                          1104          
00001A58                          1105          
00001A58  43F9 00002768           1106              LEA         newLine, A1           ; Display space
00001A5E  103C 000E               1107              MOVE.B      #14, D0             ; command for trap call to display message
00001A62  4E4F                    1108              TRAP        #15                 ; trap call            
00001A64                          1109  
00001A64                          1110  
00001A64  6000 F5A6               1111              BRA         LOOP                ; go back to the loop
00001A68                          1112              
00001A68                          1113  opMOVEAL
00001A68                          1114  
00001A68  43F9 00002790           1115              LEA         MOVEAmatch,A1
00001A6E  103C 000E               1116              MOVE.B      #14, D0             ; command for trap call to display message
00001A72  4E4F                    1117              TRAP        #15                 ; trap call
00001A74                          1118              
00001A74  43F9 00002805           1119              LEA         dispLong,A1
00001A7A  103C 000E               1120              MOVE.B      #14, D0             ; command for trap call to display message
00001A7E  4E4F                    1121              TRAP        #15                 ; trap call
00001A80                          1122              
00001A80                          1123  
00001A80  43F9 0000276C           1124              LEA         space, A1           ; create spaces
00001A86  103C 000E               1125              MOVE.B      #14, D0             ; command for trap call to display message
00001A8A  4E4F                    1126              TRAP        #15                 ; trap call
00001A8C                          1127              
00001A8C  4242                    1128              CLR         D2
00001A8E  1401                    1129              MOVE.B      D1,D2               ; Copy new byte over to D2
00001A90  E642                    1130              ASR         #three,D2           ; Shift source register out
00001A92  C47C 0007               1131              AND         #seven,D2           ; Set everything to 0 except for the mode
00001A96                          1132          
00001A96  4243                    1133              CLR         D3
00001A98  1601                    1134              MOVE.B      D1,D3
00001A9A  C67C 0007               1135              AND         #seven,D3
00001A9E                          1136              
00001A9E  4241                    1137              CLR         D1                  ; Clear D1
00001AA0  3218                    1138              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001AA2                          1139              
00001AA2                          1140              
00001AA2  4EB9 00002090           1141              JSR         printEA
00001AA8                          1142              
00001AA8  43F9 00002773           1143              LEA         comma, A1           ; Display comma
00001AAE  103C 000E               1144              MOVE.B      #14, D0             ; command for trap call to display message
00001AB2  4E4F                    1145              TRAP        #15                 ; trap call
00001AB4                          1146  
00001AB4  4242                    1147              CLR         D2
00001AB6  4243                    1148              CLR         D3
00001AB8  1404                    1149              MOVE.B      D4,D2
00001ABA  1605                    1150              MOVE.B      D5,D3
00001ABC                          1151          
00001ABC  4EB9 00002090           1152              JSR         printEA
00001AC2                          1153          
00001AC2                          1154          
00001AC2  43F9 00002768           1155              LEA         newLine, A1           ; Display space
00001AC8  103C 000E               1156              MOVE.B      #14, D0             ; command for trap call to display message
00001ACC  4E4F                    1157              TRAP        #15                 ; trap call            
00001ACE                          1158  
00001ACE                          1159  
00001ACE  6000 F53C               1160              BRA         LOOP                ; go back to the loop
00001AD2                          1161  
00001AD2                          1162  opMOVEW
00001AD2                          1163          
00001AD2  4245                    1164              CLR         D5                  ; Clear D5
00001AD4  1A01                    1165              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001AD6  E245                    1166              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001AD8  CA7C 0007               1167              AND         #seven,D5
00001ADC                          1168          
00001ADC  4244                    1169              CLR         D4                  ; Clear out D4
00001ADE  1801                    1170              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001AE0  C87C 0001               1171              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001AE4                          1172          
00001AE4  4241                    1173              CLR          D1
00001AE6  4242                    1174              CLR          D2
00001AE8  1218                    1175              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001AEA  1401                    1176              MOVE.B      D1,D2
00001AEC  EC42                    1177              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001AEE  D842                    1178              ADD         D2,D4               ; Adds the remaining bits to D4
00001AF0                          1179          
00001AF0  B87C 0001               1180              CMP         #one,D4             ; Check if it is MOVEA
00001AF4  6700 006C               1181              BEQ         opMOVEAW            ; If it is, branch off
00001AF8                          1182              
00001AF8  43F9 0000278B           1183              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001AFE  103C 000E               1184              MOVE.B      #14, D0             ; command for trap call to display message
00001B02  4E4F                    1185              TRAP        #15                 ; trap call  
00001B04                          1186              
00001B04  43F9 00002802           1187              LEA         dispWord,A1
00001B0A  103C 000E               1188              MOVE.B      #14, D0             ; command for trap call to display message
00001B0E  4E4F                    1189              TRAP        #15                 ; trap call
00001B10                          1190              
00001B10  43F9 0000276C           1191              LEA         space, A1           ; create spaces
00001B16  103C 000E               1192              MOVE.B      #14, D0             ; command for trap call to display message
00001B1A  4E4F                    1193              TRAP        #15                 ; trap call
00001B1C                          1194          
00001B1C  4242                    1195              CLR         D2
00001B1E  1401                    1196              MOVE.B      D1,D2               ; Copy new byte over to D2
00001B20  E642                    1197              ASR         #three,D2           ; Shift source register out
00001B22  C47C 0007               1198              AND         #seven,D2           ; Set everything to 0 except for the mode
00001B26                          1199          
00001B26  4243                    1200              CLR         D3
00001B28  1601                    1201              MOVE.B      D1,D3
00001B2A  C67C 0007               1202              AND         #seven,D3
00001B2E                          1203              
00001B2E  4241                    1204              CLR         D1                  ; Clear D1
00001B30  3218                    1205              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001B32                          1206              
00001B32  4EB9 00002090           1207              JSR         printEA
00001B38                          1208              
00001B38  43F9 00002773           1209              LEA         comma, A1           ; Display comma
00001B3E  103C 000E               1210              MOVE.B      #14, D0             ; command for trap call to display message
00001B42  4E4F                    1211              TRAP        #15                 ; trap call
00001B44                          1212          
00001B44  4242                    1213              CLR         D2
00001B46  4243                    1214              CLR         D3
00001B48  1404                    1215              MOVE.B      D4,D2
00001B4A  1605                    1216              MOVE.B      D5,D3
00001B4C                          1217              
00001B4C                          1218  
00001B4C                          1219              
00001B4C  4EB9 00002090           1220              JSR         printEA
00001B52                          1221          
00001B52                          1222          
00001B52  43F9 00002768           1223              LEA         newLine, A1           ; Display space
00001B58  103C 000E               1224              MOVE.B      #14, D0             ; command for trap call to display message
00001B5C  4E4F                    1225              TRAP        #15                 ; trap call            
00001B5E                          1226  
00001B5E                          1227  
00001B5E  6000 F4AC               1228              BRA         LOOP                ; go back to the loop
00001B62                          1229  opMOVEAW  
00001B62  43F9 00002790           1230              LEA         MOVEAmatch,A1
00001B68  103C 000E               1231              MOVE.B      #14, D0             ; command for trap call to display message
00001B6C  4E4F                    1232              TRAP        #15                 ; trap call
00001B6E                          1233              
00001B6E  43F9 00002802           1234              LEA         dispWord,A1
00001B74  103C 000E               1235              MOVE.B      #14, D0             ; command for trap call to display message
00001B78  4E4F                    1236              TRAP        #15                 ; trap call
00001B7A                          1237              
00001B7A                          1238  
00001B7A  43F9 0000276C           1239              LEA         space, A1           ; create spaces
00001B80  103C 000E               1240              MOVE.B      #14, D0             ; command for trap call to display message
00001B84  4E4F                    1241              TRAP        #15                 ; trap call
00001B86                          1242              
00001B86  4242                    1243              CLR         D2
00001B88  1401                    1244              MOVE.B      D1,D2               ; Copy new byte over to D2
00001B8A  E642                    1245              ASR         #three,D2           ; Shift source register out
00001B8C  C47C 0007               1246              AND         #seven,D2           ; Set everything to 0 except for the mode
00001B90                          1247          
00001B90  4243                    1248              CLR         D3
00001B92  1601                    1249              MOVE.B      D1,D3
00001B94  C67C 0007               1250              AND         #seven,D3
00001B98                          1251              
00001B98  4241                    1252              CLR         D1                  ; Clear D1
00001B9A  3218                    1253              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001B9C                          1254              
00001B9C                          1255              
00001B9C  4EB9 00002090           1256              JSR         printEA
00001BA2                          1257              
00001BA2  43F9 00002773           1258              LEA         comma, A1           ; Display comma
00001BA8  103C 000E               1259              MOVE.B      #14, D0             ; command for trap call to display message
00001BAC  4E4F                    1260              TRAP        #15                 ; trap call
00001BAE                          1261  
00001BAE  4242                    1262              CLR         D2
00001BB0  4243                    1263              CLR         D3
00001BB2  1404                    1264              MOVE.B      D4,D2
00001BB4  1605                    1265              MOVE.B      D5,D3
00001BB6                          1266          
00001BB6  4EB9 00002090           1267              JSR         printEA
00001BBC                          1268          
00001BBC                          1269          
00001BBC  43F9 00002768           1270              LEA         newLine, A1           ; Display space
00001BC2  103C 000E               1271              MOVE.B      #14, D0             ; command for trap call to display message
00001BC6  4E4F                    1272              TRAP        #15                 ; trap call            
00001BC8                          1273  
00001BC8                          1274  
00001BC8  6000 F442               1275              BRA         LOOP                ; go back to the loop
00001BCC                          1276  
00001BCC                          1277  opNEG   
00001BCC  43F9 00002796           1278              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001BD2  103C 000E               1279              MOVE.B      #14, D0             ; command for trap call to display message
00001BD6  4E4F                    1280              TRAP        #15                 ; trap call
00001BD8                          1281          
00001BD8                          1282          
00001BD8  1218                    1283              MOVE.B      (A0)+, D1
00001BDA  1401                    1284              MOVE.B      D1,D2               ; copy data over
00001BDC  EC42                    1285              ASR         #six,D2
00001BDE                          1286              
00001BDE  B47C 0000               1287              CMP         #zero,D2
00001BE2  6700 0016               1288              BEQ         opNEGB
00001BE6  B47C 0001               1289              CMP         #one,D2
00001BEA  6700 004E               1290              BEQ         opNEGL
00001BEE  B47C 0002               1291              CMP         #two,D2
00001BF2  6700 0086               1292              BEQ         opNEGW
00001BF6  6000 0AE2               1293              BRA         INVALID
00001BFA                          1294  opNEGB
00001BFA                          1295  
00001BFA  43F9 000027FF           1296              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001C00  103C 000E               1297              MOVE.B      #14, D0             ; command for trap call to display message
00001C04  4E4F                    1298              TRAP        #15                 ; trap call
00001C06                          1299          
00001C06  43F9 0000276C           1300              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001C0C  103C 000E               1301              MOVE.B      #14, D0             ; command for trap call to display message
00001C10  4E4F                    1302              TRAP        #15                 ; trap call
00001C12                          1303          
00001C12  4242                    1304              CLR         D2                  ; Clear Data register 2
00001C14  3401                    1305              MOVE        D1,D2               ; Move byte into D2
00001C16  E642                    1306              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001C18  C47C 0007               1307              AND         #seven,D2           ; Stores mode
00001C1C                          1308              
00001C1C  4243                    1309              CLR         D3
00001C1E  3601                    1310              MOVE        D1,D3
00001C20  C67C 0007               1311              AND         #seven,D3
00001C24                          1312          
00001C24  4EB9 00002090           1313              JSR         printEA
00001C2A                          1314                  
00001C2A  43F9 00002768           1315              LEA         newLine, A1           ; Display space
00001C30  103C 000E               1316              MOVE.B      #14, D0             ; command for trap call to display message
00001C34  4E4F                    1317              TRAP        #15                 ; trap call  
00001C36                          1318          
00001C36  6000 F3D4               1319              BRA         LOOP
00001C3A                          1320                  
00001C3A                          1321  
00001C3A                          1322  opNEGL
00001C3A                          1323  
00001C3A  43F9 00002805           1324              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001C40  103C 000E               1325              MOVE.B      #14, D0             ; command for trap call to display message
00001C44  4E4F                    1326              TRAP        #15                 ; trap call
00001C46                          1327  
00001C46  43F9 0000276C           1328              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001C4C  103C 000E               1329              MOVE.B      #14, D0             ; command for trap call to display message
00001C50  4E4F                    1330              TRAP        #15                 ; trap call
00001C52                          1331                  
00001C52  4242                    1332              CLR         D2                  ; Clear Data register 2
00001C54  3401                    1333              MOVE        D1,D2               ; Move byte into D2
00001C56  E642                    1334              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001C58  C47C 0007               1335              AND         #seven,D2           ; Stores mode
00001C5C                          1336          
00001C5C  4243                    1337              CLR         D3
00001C5E  3601                    1338              MOVE        D1,D3
00001C60  C67C 0007               1339              AND         #seven,D3
00001C64                          1340          
00001C64  4EB9 00002090           1341              JSR         printEA
00001C6A                          1342                      
00001C6A  43F9 00002768           1343              LEA         newLine, A1         ; Display space
00001C70  103C 000E               1344              MOVE.B      #14, D0             ; command for trap call to display message
00001C74  4E4F                    1345              TRAP        #15                 ; trap call  
00001C76                          1346          
00001C76  6000 F394               1347              BRA         LOOP
00001C7A                          1348          
00001C7A                          1349  
00001C7A                          1350  opNEGW
00001C7A                          1351  
00001C7A  43F9 00002802           1352              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001C80  103C 000E               1353              MOVE.B      #14, D0             ; command for trap call to display message
00001C84  4E4F                    1354              TRAP        #15                 ; trap call
00001C86                          1355          
00001C86  43F9 0000276C           1356              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001C8C  103C 000E               1357              MOVE.B      #14, D0             ; command for trap call to display message
00001C90  4E4F                    1358              TRAP        #15                 ; trap call        
00001C92                          1359                  
00001C92  4242                    1360              CLR         D2                  ; Clear Data register 2
00001C94  3401                    1361              MOVE        D1,D2               ; Move byte into D2
00001C96  E642                    1362              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001C98  C47C 0007               1363              AND         #seven,D2           ; Stores mode
00001C9C                          1364          
00001C9C  4243                    1365              CLR         D3
00001C9E  3601                    1366              MOVE        D1,D3
00001CA0  C67C 0007               1367              AND         #seven,D3
00001CA4                          1368          
00001CA4  4EB9 00002090           1369              JSR         printEA
00001CAA                          1370              
00001CAA  43F9 00002768           1371              LEA         newLine, A1           ; Display space
00001CB0  103C 000E               1372              MOVE.B      #14, D0             ; command for trap call to display message
00001CB4  4E4F                    1373              TRAP        #15                 ; trap call  
00001CB6                          1374          
00001CB6  6000 F354               1375              BRA         LOOP
00001CBA                          1376  
00001CBA                          1377  opRTSJSR
00001CBA                          1378          
00001CBA  1218                    1379              MOVE.B      (A0)+, D1
00001CBC                          1380              
00001CBC  1401                    1381              MOVE.B      D1,D2               ; copy data over
00001CBE  B47C 0075               1382              CMP         #117,D2
00001CC2  6700 0050               1383              BEQ         opRTS
00001CC6                          1384              
00001CC6  EC42                    1385              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
00001CC8  B47C 0002               1386              CMP         #two,D2             ; Checking if it is JSR
00001CCC  6700 0006               1387              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001CD0                          1388  
00001CD0  6000 0A08               1389              BRA         invalid
00001CD4                          1390  
00001CD4                          1391  opJSR
00001CD4                          1392                        
00001CD4  43F9 0000279E           1393              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001CDA  103C 000E               1394              MOVE.B      #14, D0             ; command for trap call to display message
00001CDE  4E4F                    1395              TRAP        #15                 ; trap call
00001CE0                          1396              
00001CE0  43F9 0000276C           1397              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001CE6  103C 000E               1398              MOVE.B      #14, D0             ; command for trap call to display message
00001CEA  4E4F                    1399              TRAP        #15                 ; trap call
00001CEC                          1400              
00001CEC  4242                    1401              CLR         D2
00001CEE  4243                    1402              CLR         D3
00001CF0                          1403              
00001CF0  1401                    1404              MOVE.B      D1,D2
00001CF2  E642                    1405              ASR         #three,D2
00001CF4  C47C 0007               1406              AND         #seven,D2
00001CF8                          1407              
00001CF8  1601                    1408              MOVE.B      D1,D3
00001CFA  C67C 0007               1409              AND         #seven,D3
00001CFE                          1410              
00001CFE  4EB9 00002090           1411              JSR         printEA
00001D04                          1412              
00001D04  43F9 00002768           1413              LEA         newLine, A1           ; Display space
00001D0A  103C 000E               1414              MOVE.B      #14, D0             ; command for trap call to display message
00001D0E  4E4F                    1415              TRAP        #15                 ; trap call  
00001D10                          1416              
00001D10  6000 F2FA               1417              BRA         loop            
00001D14                          1418  opRTS
00001D14                          1419  
00001D14  43F9 0000279A           1420              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
00001D1A  103C 000E               1421              MOVE.B      #14, D0             ; command for trap call to display message
00001D1E  4E4F                    1422              TRAP        #15                 ; trap call
00001D20                          1423              
00001D20  43F9 00002768           1424              LEA         newLine, A1           ; Display space
00001D26  103C 000E               1425              MOVE.B      #14, D0             ; command for trap call to display message
00001D2A  4E4F                    1426              TRAP        #15                 ; trap call 
00001D2C                          1427              
00001D2C  6000 F2DE               1428              BRA         loop
00001D30                          1429  
00001D30                          1430  opMOVEMLEA
00001D30  4242                    1431              CLR         D2                  ; Clear D2
00001D32  1401                    1432              MOVE.B      D1,D2               ; Copy byte over
00001D34  C47C 000F               1433              AND         #secNib,D2          ; Check only the second nibble
00001D38  B47C 000C               1434              CMP         #twelve,D2          ; Compare the second nibble to twelve
00001D3C  6700 000E               1435              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
00001D40  B47C 0008               1436              CMP         #eight,D2           ; Compare the second nibble to eight
00001D44  6700 0006               1437              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
00001D48  6000 001A               1438              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
00001D4C                          1439              
00001D4C                          1440  opMOVEM
00001D4C                          1441  
00001D4C  43F9 0000279A           1442              LEA         RTSMatch, A1       ; we know that the opcode will be MOVEM, so load A1 to print message
00001D52  103C 000E               1443              MOVE.B      #14, D0             ; command for trap call to display message
00001D56  4E4F                    1444              TRAP        #15                 ; trap call
00001D58                          1445              
00001D58  4244                    1446              CLR         D4                  ; Clearing D4 to store dr field
00001D5A  1801                    1447              MOVE.B      D1,D4               ; Moving byte to find dr field
00001D5C  E444                    1448              ASR         #two,D4             ; Moving dr field to readable spot
00001D5E  C87C 0001               1449              AND         #one,D4             ; seting everything except dr to 0
00001D62                          1450              
00001D62  1218                    1451              MOVE.B      (A0)+, D1
00001D64                          1452              
00001D64                          1453  
00001D64                          1454  opLEA
00001D64                          1455  
00001D64                          1456  ***********************************************************************************************************
00001D64                          1457  *
00001D64                          1458  *               SUBQ OPCODE
00001D64                          1459  *
00001D64                          1460  ***********************************************************************************************************
00001D64                          1461  
00001D64                          1462  opSUBQ      
00001D64  43F9 000027AC           1463              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
00001D6A  103C 000E               1464              MOVE.B      #14, D0             ; command for trap call to display message
00001D6E  4E4F                    1465              TRAP        #15                 ; trap call
00001D70                          1466              
00001D70  1401                    1467              MOVE.B      D1,D2
00001D72  EE42                    1468              ASR         #seven,D2           ; Move bits 7 places over to find size
00001D74  C47C 0007               1469              AND         #$07,D2
00001D78                          1470              
00001D78                          1471              ; Find size bits
00001D78  B43C 0000               1472              CMP.B       #zero,D2
00001D7C  6700 0012               1473              BEQ         opSUBQB             ; Byte in size
00001D80  B43C 0001               1474              CMP.B       #one,D2
00001D84  6700 0024               1475              BEQ         opSUBQW             ; Word in size
00001D88  B43C 0002               1476              CMP.B       #two,D2
00001D8C  6700 0032               1477              BEQ         opSUBQL             ; Long in size
00001D90                          1478              
00001D90                          1479              
00001D90  43F9 000027FF           1480  opSUBQB     LEA         dispByte,A1
00001D96  103C 000E               1481              MOVE.B      #14,D0
00001D9A  4E4F                    1482              TRAP        #15 
00001D9C                          1483              
00001D9C  E141                    1484              ASL         #eight,D1
00001D9E  1218                    1485              MOVE.B      (A0)+,D1
00001DA0  4EB9 000026E0           1486              JSR         PrntImm
00001DA6                          1487              
00001DA6  6000 F264               1488              BRA         LOOP
00001DAA                          1489              
00001DAA  43F9 00002802           1490  opSUBQW     LEA         dispWord,A1
00001DB0  103C 000E               1491              MOVE.B      #14,D0
00001DB4  4E4F                    1492              TRAP        #15
00001DB6                          1493              
00001DB6  4EB9 000026E0           1494              JSR         PrntImm
00001DBC                          1495              
00001DBC  6000 F24E               1496              BRA         LOOP
00001DC0                          1497              
00001DC0  43F9 00002805           1498  opSUBQL     LEA         dispLong,A1
00001DC6  103C 000E               1499              MOVE.B      #14,D0
00001DCA  4E4F                    1500              TRAP        #15
00001DCC                          1501              
00001DCC  4246                    1502              CLR         D6
00001DCE  1C3C 0001               1503              MOVE.B      #1,D6
00001DD2                          1504              
00001DD2  4EB9 000026E0           1505              JSR         PrntImm         
00001DD8                          1506              
00001DD8  6000 F232               1507              BRA         LOOP            ; trap call
00001DDC                          1508  
00001DDC                          1509  ***********************************************************************************************************
00001DDC                          1510  *
00001DDC                          1511  *               BRA OPCODE
00001DDC                          1512  *
00001DDC                          1513  ***********************************************************************************************************
00001DDC                          1514              
00001DDC  43F9 000027B1           1515  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001DE2  103C 000E               1516          MOVE.B      #14, D0             ; command for trap call to display message
00001DE6  4E4F                    1517          TRAP        #15                 ; trap call
00001DE8                          1518          
00001DE8  4242                    1519          CLR         D2
00001DEA  4243                    1520          CLR         D3      
00001DEC                          1521  
00001DEC  43F9 0000276C           1522          LEA         space,A1
00001DF2  103C 000E               1523          MOVE.B      #14,D0
00001DF6  4E4F                    1524          TRAP        #15
00001DF8                          1525          
00001DF8  143C 0007               1526          MOVE.B      #seven,D2
00001DFC  1218                    1527          MOVE.B      (A0)+,D1
00001DFE  4EB9 00002090           1528          JSR         printEA
00001E04                          1529          
00001E04  43F9 00002768           1530          LEA         newLine, A1           ; create new line
00001E0A  103C 000E               1531          MOVE.B      #14, D0             ; command for trap call to display message
00001E0E  4E4F                    1532          TRAP        #15                 ; trap call
00001E10                          1533  
00001E10  6000 F1FA               1534          BRA         LOOP
00001E14                          1535          
00001E14                          1536          
00001E14  43F9 000027B5           1537  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001E1A  103C 000E               1538          MOVE.B      #14, D0             ; command for trap call to display message
00001E1E  4E4F                    1539          TRAP        #15                 ; trap call
00001E20                          1540          
00001E20  4242                    1541          CLR         D2
00001E22  4243                    1542          CLR         D3      
00001E24                          1543  
00001E24  43F9 0000276C           1544          LEA         space,A1
00001E2A  103C 000E               1545          MOVE.B      #14,D0
00001E2E  4E4F                    1546          TRAP        #15
00001E30                          1547          
00001E30  143C 0007               1548          MOVE.B      #seven,D2
00001E34  1218                    1549          MOVE.B      (A0)+,D1
00001E36  4EB9 00002090           1550          JSR         printEA
00001E3C                          1551          
00001E3C  43F9 00002768           1552          LEA         newLine, A1           ; create new line
00001E42  103C 000E               1553          MOVE.B      #14, D0             ; command for trap call to display message
00001E46  4E4F                    1554          TRAP        #15                 ; trap call
00001E48                          1555  
00001E48  43F9 000027B9           1556  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001E4E  103C 000E               1557          MOVE.B      #14, D0             ; command for trap call to display message
00001E52  4E4F                    1558          TRAP        #15                 ; trap call
00001E54                          1559          
00001E54  4242                    1560          CLR         D2
00001E56  4243                    1561          CLR         D3      
00001E58                          1562  
00001E58  43F9 0000276C           1563          LEA         space,A1
00001E5E  103C 000E               1564          MOVE.B      #14,D0
00001E62  4E4F                    1565          TRAP        #15
00001E64                          1566          
00001E64  143C 0007               1567          MOVE.B      #seven,D2
00001E68  1218                    1568          MOVE.B      (A0)+,D1
00001E6A  4EB9 00002090           1569          JSR         printEA
00001E70                          1570          
00001E70  43F9 00002768           1571          LEA         newLine, A1           ; create new line
00001E76  103C 000E               1572          MOVE.B      #14, D0             ; command for trap call to display message
00001E7A  4E4F                    1573          TRAP        #15                 ; trap call
00001E7C                          1574  
00001E7C  43F9 000027BD           1575  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001E82  103C 000E               1576          MOVE.B      #14, D0             ; command for trap call to display message
00001E86  4E4F                    1577          TRAP        #15                 ; trap call
00001E88                          1578          
00001E88  4242                    1579          CLR         D2
00001E8A  4243                    1580          CLR         D3      
00001E8C                          1581  
00001E8C  43F9 0000276C           1582          LEA         space,A1
00001E92  103C 000E               1583          MOVE.B      #14,D0
00001E96  4E4F                    1584          TRAP        #15
00001E98                          1585          
00001E98  143C 0007               1586          MOVE.B      #seven,D2
00001E9C  1218                    1587          MOVE.B      (A0)+,D1
00001E9E  4EB9 00002090           1588          JSR         printEA
00001EA4                          1589          
00001EA4  43F9 00002768           1590          LEA         newLine, A1           ; create new line
00001EAA  103C 000E               1591          MOVE.B      #14, D0             ; command for trap call to display message
00001EAE  4E4F                    1592          TRAP        #15                 ; trap call
00001EB0                          1593  
00001EB0  43F9 000027C1           1594  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001EB6  103C 000E               1595          MOVE.B      #14, D0             ; command for trap call to display message
00001EBA  4E4F                    1596          TRAP        #15                 ; trap call
00001EBC                          1597          
00001EBC  4242                    1598          CLR         D2
00001EBE  4243                    1599          CLR         D3      
00001EC0                          1600  
00001EC0  43F9 0000276C           1601          LEA         space,A1
00001EC6  103C 000E               1602          MOVE.B      #14,D0
00001ECA  4E4F                    1603          TRAP        #15
00001ECC                          1604          
00001ECC  143C 0007               1605          MOVE.B      #seven,D2
00001ED0  1218                    1606          MOVE.B      (A0)+,D1
00001ED2  4EB9 00002090           1607          JSR         printEA
00001ED8                          1608          
00001ED8  43F9 00002768           1609          LEA         newLine, A1           ; create new line
00001EDE  103C 000E               1610          MOVE.B      #14, D0             ; command for trap call to display message
00001EE2  4E4F                    1611          TRAP        #15                 ; trap call
00001EE4                          1612  
00001EE4                          1613  ***********************************************************************************************************
00001EE4                          1614  *
00001EE4                          1615  *               SUB OPCODE
00001EE4                          1616  *
00001EE4                          1617  ***********************************************************************************************************
00001EE4                          1618  
00001EE4  43F9 000027CD           1619  opSUB       LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001EEA  103C 000E               1620              MOVE.B      #14, D0             ; command for trap call to display message
00001EEE  4E4F                    1621              TRAP        #15                 ; trap call
00001EF0                          1622          
00001EF0                          1623          
00001EF0  E141                    1624              ASL         #eight,D1
00001EF2  1218                    1625              MOVE.B      (A0)+,D1
00001EF4  4242                    1626              CLR         D2
00001EF6                          1627              
00001EF6  3401                    1628              MOVE.W      D1,D2
00001EF8  EC42                    1629              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001EFA  C47C 0007               1630              AND         #seven,D2
00001EFE                          1631              
00001EFE                          1632              ; These are for DN - EA
00001EFE  B43C 0000               1633              CMP.B       #zero,D2
00001F02  6700 002A               1634              BEQ         opSUBB              ; Byte in opmode
00001F06  B43C 0001               1635              CMP.B       #one,D2
00001F0A  6700 007C               1636              BEQ         opSUBW              ; Word in opmode
00001F0E  B43C 0002               1637              CMP.B       #two,D2
00001F12  6700 00CE               1638              BEQ         opSUBL              ; Long in opmode
00001F16                          1639              
00001F16                          1640              ; These are for EA - DN
00001F16  B43C 0004               1641              CMP.B       #four,D2
00001F1A  6700 0012               1642              BEQ         opSUBB              ; Byte in opmode
00001F1E  B43C 0005               1643              CMP.B       #five,D2
00001F22  6700 0064               1644              BEQ         opSUBW              ; Word in opmode
00001F26  B43C 0006               1645              CMP.B       #six,D2
00001F2A  6700 00B6               1646              BEQ         opSUBL              ; Long in opmode
00001F2E                          1647              
00001F2E  43F9 000027FF           1648  opSUBB      LEA         dispByte,A1
00001F34  103C 000E               1649              MOVE.B      #14,D0
00001F38  4E4F                    1650              TRAP        #15
00001F3A                          1651              
00001F3A  43F9 0000276C           1652              LEA         space, A1           ; Display space
00001F40  103C 000E               1653              MOVE.B      #14, D0             ; command for trap call to display message
00001F44  4E4F                    1654              TRAP        #15                 ; trap call         
00001F46                          1655              
00001F46  1401                    1656              MOVE.B      D1,D2
00001F48  E642                    1657              ASR         #3,D2
00001F4A  C47C 0007               1658              AND         #$07,D2
00001F4E  3601                    1659              MOVE.W      D1,D3
00001F50  C67C 0007               1660              AND         #$07,D3
00001F54  4EB9 00002090           1661              JSR         printEA         ; Determines the "left" operand register
00001F5A                          1662              
00001F5A  43F9 00002773           1663              LEA         comma, A1           ; Display space
00001F60  103C 000E               1664              MOVE.B      #14, D0             ; command for trap call to display message
00001F64  4E4F                    1665              TRAP        #15                 ; trap call
00001F66                          1666              
00001F66  4242                    1667              CLR         D2
00001F68  3601                    1668              MOVE.W      D1,D3
00001F6A  E043                    1669              ASR         #eight,D3
00001F6C  E243                    1670              ASR         #one,D3
00001F6E  C67C 0007               1671              AND         #$07,D3
00001F72  4EB9 00002090           1672              JSR         printEA
00001F78                          1673              
00001F78  43F9 00002768           1674              LEA         newLine,A1
00001F7E  103C 000E               1675              MOVE.B      #14,D0
00001F82  4E4F                    1676              TRAP        #15
00001F84                          1677              
00001F84  6000 F086               1678              BRA         LOOP
00001F88                          1679              
00001F88                          1680              
00001F88  43F9 00002802           1681  opSUBW      LEA         dispWord,A1
00001F8E  103C 000E               1682              MOVE.B      #14,D0
00001F92  4E4F                    1683              TRAP        #15
00001F94                          1684              
00001F94  43F9 0000276C           1685              LEA         space, A1           ; Display space
00001F9A  103C 000E               1686              MOVE.B      #14, D0             ; command for trap call to display message
00001F9E  4E4F                    1687              TRAP        #15                 ; trap call         
00001FA0                          1688              
00001FA0  1401                    1689              MOVE.B      D1,D2
00001FA2  E642                    1690              ASR         #3,D2
00001FA4  C47C 0007               1691              AND         #$07,D2
00001FA8  3601                    1692              MOVE.W      D1,D3
00001FAA  C67C 0007               1693              AND         #$07,D3
00001FAE  4EB9 00002090           1694              JSR         printEA         ; Determines the "left" operand register
00001FB4                          1695              
00001FB4  43F9 00002773           1696              LEA         comma, A1           ; Display space
00001FBA  103C 000E               1697              MOVE.B      #14, D0             ; command for trap call to display message
00001FBE  4E4F                    1698              TRAP        #15                 ; trap call
00001FC0                          1699              
00001FC0  4242                    1700              CLR         D2
00001FC2  3601                    1701              MOVE.W      D1,D3
00001FC4  E043                    1702              ASR         #eight,D3
00001FC6  E243                    1703              ASR         #one,D3
00001FC8  C67C 0007               1704              AND         #$07,D3
00001FCC  4EB9 00002090           1705              JSR         printEA
00001FD2                          1706              
00001FD2  43F9 00002768           1707              LEA         newLine,A1
00001FD8  103C 000E               1708              MOVE.B      #14,D0
00001FDC  4E4F                    1709              TRAP        #15
00001FDE                          1710              
00001FDE  6000 F02C               1711              BRA         LOOP
00001FE2                          1712              
00001FE2  43F9 00002805           1713  opSUBL      LEA         dispLong,A1
00001FE8  103C 000E               1714              MOVE.B      #14,D0
00001FEC  4E4F                    1715              TRAP        #15
00001FEE                          1716              
00001FEE  43F9 0000276C           1717              LEA         space, A1           ; Display space
00001FF4  103C 000E               1718              MOVE.B      #14, D0             ; command for trap call to display message
00001FF8  4E4F                    1719              TRAP        #15                 ; trap call         
00001FFA                          1720              
00001FFA  1401                    1721              MOVE.B      D1,D2
00001FFC  E642                    1722              ASR         #3,D2
00001FFE  C47C 0007               1723              AND         #$07,D2
00002002  3601                    1724              MOVE.W      D1,D3
00002004  C67C 0007               1725              AND         #$07,D3
00002008  4EB9 00002090           1726              JSR         printEA         ; Determines the "left" operand register
0000200E                          1727              
0000200E  43F9 00002773           1728              LEA         comma, A1           ; Display space
00002014  103C 000E               1729              MOVE.B      #14, D0             ; command for trap call to display message
00002018  4E4F                    1730              TRAP        #15                 ; trap call
0000201A                          1731              
0000201A  4242                    1732              CLR         D2
0000201C  3601                    1733              MOVE.W      D1,D3
0000201E  E043                    1734              ASR         #eight,D3
00002020  E243                    1735              ASR         #one,D3
00002022  C67C 0007               1736              AND         #$07,D3
00002026  4EB9 00002090           1737              JSR         printEA
0000202C                          1738              
0000202C  43F9 00002768           1739              LEA         newLine,A1
00002032  103C 000E               1740              MOVE.B      #14,D0
00002036  4E4F                    1741              TRAP        #15
00002038                          1742              
00002038  6000 EFD2               1743              BRA         LOOP
0000203C                          1744          
0000203C                          1745          
0000203C  43F9 000027D9           1746  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002042  103C 000E               1747          MOVE.B      #14, D0             ; command for trap call to display message
00002046  4E4F                    1748          TRAP        #15                 ; trap call
00002048                          1749  
00002048  43F9 000027F3           1750  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000204E  103C 000E               1751          MOVE.B      #14, D0             ; command for trap call to display message
00002052  4E4F                    1752          TRAP        #15                 ; trap call
00002054                          1753  
00002054  43F9 000027EF           1754  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000205A  103C 000E               1755          MOVE.B      #14, D0             ; command for trap call to display message
0000205E  4E4F                    1756          TRAP        #15                 ; trap call
00002060                          1757  
00002060  43F9 000027EB           1758  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00002066  103C 000E               1759          MOVE.B      #14, D0             ; command for trap call to display message
0000206A  4E4F                    1760          TRAP        #15                 ; trap call
0000206C                          1761  
0000206C  43F9 000027E7           1762  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00002072  103C 000E               1763          MOVE.B      #14, D0             ; command for trap call to display message
00002076  4E4F                    1764          TRAP        #15                 ; trap call
00002078                          1765  
00002078  43F9 000027FB           1766  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
0000207E  103C 000E               1767          MOVE.B      #14, D0             ; command for trap call to display message
00002082  4E4F                    1768          TRAP        #15                 ; trap call
00002084                          1769  
00002084  43F9 000027F7           1770  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
0000208A  103C 000E               1771          MOVE.B      #14, D0             ; command for trap call to display message
0000208E  4E4F                    1772          TRAP        #15                 ; trap call
00002090                          1773  
00002090                          1774  
00002090                          1775          
00002090                          1776  ***********************************************************************************************************
00002090                          1777  *
00002090                          1778  *                                           EA Print Check
00002090                          1779  *
00002090                          1780  ***********************************************************************************************************
00002090  48E7 FF7E               1781  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00002094                          1782  
00002094  B43C 0000               1783              CMP.B       #zero, D2
00002098  6700 002E               1784              BEQ         pDataReg
0000209C  B43C 0001               1785              CMP.B       #one, D2
000020A0  6700 00E6               1786              BEQ         pAddrReg
000020A4  B43C 0002               1787              CMP.B       #two, D2
000020A8  6700 019E               1788              BEQ         pAddrDir
000020AC  B43C 0003               1789              CMP.B       #three, D2
000020B0  6700 02C2               1790              BEQ         pAddrPost
000020B4  B43C 0004               1791              CMP.B       #four, D2
000020B8  6700 0446               1792              BEQ         pAddrDec
000020BC  B43C 0007               1793              CMP.B       #seven, D2
000020C0  6700 0576               1794              BEQ         pHex
000020C4  6000 0614               1795              BRA         invalid
000020C8                          1796  
000020C8                          1797  ***********************************************************************************************************
000020C8                          1798  * Data Register        
000020C8  B63C 0000               1799  pDataReg    CMP.B   #zero,D3
000020CC  6700 003A               1800              BEQ     displayD0
000020D0  B63C 0001               1801              CMP.B   #one,D3
000020D4  6700 0042               1802              BEQ     displayD1
000020D8  B63C 0002               1803              CMP.B   #two,D3
000020DC  6700 004A               1804              BEQ     displayD2
000020E0  B63C 0003               1805              CMP.B   #three,D3
000020E4  6700 0052               1806              BEQ     displayD3
000020E8  B63C 0004               1807              CMP.B   #four,D3
000020EC  6700 005A               1808              BEQ     displayD4
000020F0  B63C 0005               1809              CMP.B   #five,D3
000020F4  6700 0062               1810              BEQ     displayD5
000020F8  B63C 0006               1811              CMP.B   #six,D3
000020FC  6700 006A               1812              BEQ     displayD6
00002100  B63C 0007               1813              CMP.B   #seven,D3
00002104  6700 0072               1814              BEQ     displayD7
00002108                          1815              
00002108  43F9 00002822           1816  displayD0   LEA         dispD0, A1          ; Display space
0000210E  103C 000E               1817              MOVE.B      #14, D0             ; command for trap call to display message
00002112  4E4F                    1818              TRAP        #15                 ; trap call
00002114  6000 05C4               1819              BRA         endSUB              ; go to the end of the subroutine
00002118                          1820              
00002118  43F9 00002825           1821  displayD1   LEA         dispD1, A1          ; Display space
0000211E  103C 000E               1822              MOVE.B      #14, D0             ; command for trap call to display message
00002122  4E4F                    1823              TRAP        #15                 ; trap call
00002124  6000 05B4               1824              BRA         endSUB              ; go to the end of the subroutine
00002128                          1825  
00002128  43F9 00002828           1826  displayD2   LEA         dispD2, A1          ; Display space
0000212E  103C 000E               1827              MOVE.B      #14, D0             ; command for trap call to display message
00002132  4E4F                    1828              TRAP        #15                 ; trap call
00002134  6000 05A4               1829              BRA         endSUB              ; go to the end of the subroutine
00002138                          1830  
00002138  43F9 0000282B           1831  displayD3   LEA         dispD3, A1          ; Display space
0000213E  103C 000E               1832              MOVE.B      #14, D0             ; command for trap call to display message
00002142  4E4F                    1833              TRAP        #15                 ; trap call
00002144  6000 0594               1834              BRA         endSUB              ; go to the end of the subroutine
00002148                          1835  
00002148  43F9 0000282E           1836  displayD4   LEA         dispD4, A1          ; Display space
0000214E  103C 000E               1837              MOVE.B      #14, D0             ; command for trap call to display message
00002152  4E4F                    1838              TRAP        #15                 ; trap call
00002154  6000 0584               1839              BRA         endSUB              ; go to the end of the subroutine
00002158                          1840  
00002158  43F9 00002831           1841  displayD5   LEA         dispD5, A1          ; Display space
0000215E  103C 000E               1842              MOVE.B      #14, D0             ; command for trap call to display message
00002162  4E4F                    1843              TRAP        #15                 ; trap call
00002164  6000 0574               1844              BRA         endSUB              ; go to the end of the subroutine
00002168                          1845  
00002168  43F9 00002834           1846  displayD6   LEA         dispD6, A1          ; Display space
0000216E  103C 000E               1847              MOVE.B      #14, D0             ; command for trap call to display message
00002172  4E4F                    1848              TRAP        #15                 ; trap call
00002174  6000 0564               1849              BRA         endSUB              ; go to the end of the subroutine
00002178                          1850  
00002178  43F9 00002837           1851  displayD7   LEA         dispD7, A1          ; Display space
0000217E  103C 000E               1852              MOVE.B      #14, D0             ; command for trap call to display message
00002182  4E4F                    1853              TRAP        #15                 ; trap call
00002184  6000 0554               1854              BRA         endSUB              ; go to the end of the subroutine
00002188                          1855  ***********************************************************************************************************
00002188                          1856  * Address Register
00002188  B63C 0000               1857  pAddrReg    CMP.B   #zero,D3
0000218C  6700 003A               1858              BEQ     displayA0
00002190  B63C 0001               1859              CMP.B   #one,D3
00002194  6700 0042               1860              BEQ     displayA1
00002198  B63C 0002               1861              CMP.B   #two,D3
0000219C  6700 004A               1862              BEQ     displayA2
000021A0  B63C 0003               1863              CMP.B   #three,D3
000021A4  6700 0052               1864              BEQ     displayA3
000021A8  B63C 0004               1865              CMP.B   #four,D3
000021AC  6700 005A               1866              BEQ     displayA4
000021B0  B63C 0005               1867              CMP.B   #five,D3
000021B4  6700 0062               1868              BEQ     displayA5
000021B8  B63C 0006               1869              CMP.B   #six,D3
000021BC  6700 006A               1870              BEQ     displayA6
000021C0  B63C 0007               1871              CMP.B   #seven,D3
000021C4  6700 0072               1872              BEQ     displayA7
000021C8                          1873              
000021C8  43F9 00002808           1874  displayA0   LEA         dispA0, A1          ; Display space
000021CE  103C 000E               1875              MOVE.B      #14, D0             ; command for trap call to display message
000021D2  4E4F                    1876              TRAP        #15                 ; trap call
000021D4  6000 0504               1877              BRA         endSUB              ; go to the end of the subroutine
000021D8                          1878              
000021D8  43F9 0000280B           1879  displayA1   LEA         dispA1, A1          ; Display space
000021DE  103C 000E               1880              MOVE.B      #14, D0             ; command for trap call to display message
000021E2  4E4F                    1881              TRAP        #15                 ; trap call
000021E4  6000 04F4               1882              BRA         endSUB              ; go to the end of the subroutine
000021E8                          1883  
000021E8  43F9 0000280E           1884  displayA2   LEA         dispA2, A1          ; Display space
000021EE  103C 000E               1885              MOVE.B      #14, D0             ; command for trap call to display message
000021F2  4E4F                    1886              TRAP        #15                 ; trap call
000021F4  6000 04E4               1887              BRA         endSUB              ; go to the end of the subroutine
000021F8                          1888  
000021F8  43F9 00002811           1889  displayA3   LEA         dispA3, A1          ; Display space
000021FE  103C 000E               1890              MOVE.B      #14, D0             ; command for trap call to display message
00002202  4E4F                    1891              TRAP        #15                 ; trap call
00002204  6000 04D4               1892              BRA         endSUB              ; go to the end of the subroutine
00002208                          1893  
00002208  43F9 00002814           1894  displayA4   LEA         dispA4, A1          ; Display space
0000220E  103C 000E               1895              MOVE.B      #14, D0             ; command for trap call to display message
00002212  4E4F                    1896              TRAP        #15                 ; trap call
00002214  6000 04C4               1897              BRA         endSUB              ; go to the end of the subroutine
00002218                          1898  
00002218  43F9 00002817           1899  displayA5   LEA         dispA5, A1          ; Display space
0000221E  103C 000E               1900              MOVE.B      #14, D0             ; command for trap call to display message
00002222  4E4F                    1901              TRAP        #15                 ; trap call
00002224  6000 04B4               1902              BRA         endSUB              ; go to the end of the subroutine
00002228                          1903  
00002228  43F9 0000281A           1904  displayA6   LEA         dispA6, A1          ; Display space
0000222E  103C 000E               1905              MOVE.B      #14, D0             ; command for trap call to display message
00002232  4E4F                    1906              TRAP        #15                 ; trap call
00002234  6000 04A4               1907              BRA         endSUB              ; go to the end of the subroutine
00002238                          1908  
00002238  43F9 0000281D           1909  displayA7   LEA         dispA7, A1          ; Display space
0000223E  103C 000E               1910              MOVE.B      #14, D0             ; command for trap call to display message
00002242  4E4F                    1911              TRAP        #15                 ; trap call
00002244  6000 0494               1912              BRA         endSUB              ; go to the end of the subroutine
00002248                          1913  
00002248                          1914  ***********************************************************************************************************
00002248                          1915  * Address Register Direct
00002248                          1916  
00002248  43F9 00002775           1917  pAddrDir    LEA         opPer, A1           ; Display space
0000224E  103C 000E               1918              MOVE.B      #14, D0             ; command for trap call to display message
00002252  4E4F                    1919              TRAP        #15                 ; trap call
00002254                          1920              
00002254  B63C 0000               1921              CMP.B   #zero,D3
00002258  6700 003A               1922              BEQ     displayA0A
0000225C  B63C 0001               1923              CMP.B   #one,D3
00002260  6700 004E               1924              BEQ     displayA1A
00002264  B63C 0002               1925              CMP.B   #two,D3
00002268  6700 0062               1926              BEQ     displayA2A
0000226C  B63C 0003               1927              CMP.B   #three,D3
00002270  6700 0076               1928              BEQ     displayA3A
00002274  B63C 0004               1929              CMP.B   #four,D3
00002278  6700 008A               1930              BEQ     displayA4A
0000227C  B63C 0005               1931              CMP.B   #five,D3
00002280  6700 009E               1932              BEQ     displayA5A
00002284  B63C 0006               1933              CMP.B   #six,D3
00002288  6700 00B2               1934              BEQ     displayA6A
0000228C  B63C 0007               1935              CMP.B   #seven,D3
00002290  6700 00C6               1936              BEQ     displayA7A
00002294                          1937              
00002294  43F9 00002808           1938  displayA0A  LEA         dispA0, A1          ; Display space
0000229A  103C 000E               1939              MOVE.B      #14, D0             ; command for trap call to display message
0000229E  4E4F                    1940              TRAP        #15                 ; trap call
000022A0  43F9 00002777           1941              LEA         clPer, A1           ; Display space
000022A6  103C 000E               1942              MOVE.B      #14, D0             ; command for trap call to display message
000022AA  4E4F                    1943              TRAP        #15                 ; trap call
000022AC  6000 042C               1944              BRA         endSUB              ; go to the end of the subroutine
000022B0                          1945              
000022B0  43F9 0000280B           1946  displayA1A  LEA         dispA1, A1          ; Display space
000022B6  103C 000E               1947              MOVE.B      #14, D0             ; command for trap call to display message
000022BA  4E4F                    1948              TRAP        #15                 ; trap call
000022BC  43F9 00002777           1949              LEA         clPer, A1           ; Display space
000022C2  103C 000E               1950              MOVE.B      #14, D0             ; command for trap call to display message
000022C6  4E4F                    1951              TRAP        #15                 ; trap call
000022C8  6000 0410               1952              BRA         endSUB              ; go to the end of the subroutine
000022CC                          1953  
000022CC  43F9 0000280E           1954  displayA2A  LEA         dispA2, A1          ; Display space
000022D2  103C 000E               1955              MOVE.B      #14, D0             ; command for trap call to display message
000022D6  4E4F                    1956              TRAP        #15                 ; trap call
000022D8  43F9 00002777           1957              LEA         clPer, A1           ; Display space
000022DE  103C 000E               1958              MOVE.B      #14, D0             ; command for trap call to display message
000022E2  4E4F                    1959              TRAP        #15                 ; trap call
000022E4  6000 03F4               1960              BRA         endSUB              ; go to the end of the subroutine
000022E8                          1961  
000022E8  43F9 00002811           1962  displayA3A  LEA         dispA3, A1          ; Display space
000022EE  103C 000E               1963              MOVE.B      #14, D0             ; command for trap call to display message
000022F2  4E4F                    1964              TRAP        #15                 ; trap call
000022F4  43F9 00002777           1965              LEA         clPer, A1           ; Display space
000022FA  103C 000E               1966              MOVE.B      #14, D0             ; command for trap call to display message
000022FE  4E4F                    1967              TRAP        #15                 ; trap call
00002300  6000 03D8               1968              BRA         endSUB              ; go to the end of the subroutine
00002304                          1969  
00002304  43F9 00002814           1970  displayA4A  LEA         dispA4, A1          ; Display space
0000230A  103C 000E               1971              MOVE.B      #14, D0             ; command for trap call to display message
0000230E  4E4F                    1972              TRAP        #15                 ; trap call
00002310  43F9 00002777           1973              LEA         clPer, A1           ; Display space
00002316  103C 000E               1974              MOVE.B      #14, D0             ; command for trap call to display message
0000231A  4E4F                    1975              TRAP        #15                 ; trap call
0000231C  6000 03BC               1976              BRA         endSUB              ; go to the end of the subroutine
00002320                          1977  
00002320  43F9 00002817           1978  displayA5A  LEA         dispA5, A1          ; Display space
00002326  103C 000E               1979              MOVE.B      #14, D0             ; command for trap call to display message
0000232A  4E4F                    1980              TRAP        #15                 ; trap call
0000232C  43F9 00002777           1981              LEA         clPer, A1           ; Display space
00002332  103C 000E               1982              MOVE.B      #14, D0             ; command for trap call to display message
00002336  4E4F                    1983              TRAP        #15                 ; trap call
00002338  6000 03A0               1984              BRA         endSUB              ; go to the end of the subroutine
0000233C                          1985  
0000233C  43F9 0000281A           1986  displayA6A  LEA         dispA6, A1          ; Display space
00002342  103C 000E               1987              MOVE.B      #14, D0             ; command for trap call to display message
00002346  4E4F                    1988              TRAP        #15                 ; trap call
00002348  43F9 00002777           1989              LEA         clPer, A1           ; Display space
0000234E  103C 000E               1990              MOVE.B      #14, D0             ; command for trap call to display message
00002352  4E4F                    1991              TRAP        #15                 ; trap call
00002354  6000 0384               1992              BRA         endSUB              ; go to the end of the subroutine
00002358                          1993  
00002358  43F9 0000281D           1994  displayA7A  LEA         dispA7, A1          ; Display space
0000235E  103C 000E               1995              MOVE.B      #14, D0             ; command for trap call to display message
00002362  4E4F                    1996              TRAP        #15                 ; trap call
00002364  43F9 00002777           1997              LEA         clPer, A1           ; Display space
0000236A  103C 000E               1998              MOVE.B      #14, D0             ; command for trap call to display message
0000236E  4E4F                    1999              TRAP        #15                 ; trap call
00002370  6000 0368               2000              BRA         endSUB              ; go to the end of the subroutine
00002374                          2001              
00002374                          2002  ***********************************************************************************************************
00002374                          2003  * Addr Postincrement
00002374                          2004              
00002374  43F9 00002775           2005  pAddrPost   LEA         opPer, A1           ; Display space
0000237A  103C 000E               2006              MOVE.B      #14, D0             ; command for trap call to display message
0000237E  4E4F                    2007              TRAP        #15                 ; trap call
00002380                          2008              
00002380  B63C 0000               2009              CMP.B   #zero,D3
00002384  6700 003A               2010              BEQ     displayA0P
00002388  B63C 0001               2011              CMP.B   #one,D3
0000238C  6700 005A               2012              BEQ     displayA1P
00002390  B63C 0002               2013              CMP.B   #two,D3
00002394  6700 007A               2014              BEQ     displayA2P
00002398  B63C 0003               2015              CMP.B   #three,D3
0000239C  6700 009A               2016              BEQ     displayA3P
000023A0  B63C 0004               2017              CMP.B   #four,D3
000023A4  6700 00BA               2018              BEQ     displayA4P
000023A8  B63C 0005               2019              CMP.B   #five,D3
000023AC  6700 00DA               2020              BEQ     displayA5P
000023B0  B63C 0006               2021              CMP.B   #six,D3
000023B4  6700 00FA               2022              BEQ     displayA6P
000023B8  B63C 0007               2023              CMP.B   #seven,D3
000023BC  6700 011A               2024              BEQ     displayA7P
000023C0                          2025              
000023C0  43F9 00002808           2026  displayA0P  LEA         dispA0, A1          ; Display space
000023C6  103C 000E               2027              MOVE.B      #14, D0             ; command for trap call to display message
000023CA  4E4F                    2028              TRAP        #15                 ; trap call
000023CC  43F9 00002777           2029              LEA         clPer, A1           ; Display space
000023D2  103C 000E               2030              MOVE.B      #14, D0             ; command for trap call to display message
000023D6  4E4F                    2031              TRAP        #15                 ; trap call
000023D8  43F9 0000277B           2032              LEA         inc, A1             ; Display space
000023DE  103C 000E               2033              MOVE.B      #14, D0             ; command for trap call to display message
000023E2  4E4F                    2034              TRAP        #15                 ; trap call
000023E4  6000 02F4               2035              BRA         endSUB              ; go to the end of the subroutine
000023E8                          2036              
000023E8  43F9 0000280B           2037  displayA1P  LEA         dispA1, A1          ; Display space
000023EE  103C 000E               2038              MOVE.B      #14, D0             ; command for trap call to display message
000023F2  4E4F                    2039              TRAP        #15                 ; trap call
000023F4  43F9 00002777           2040              LEA         clPer, A1           ; Display space
000023FA  103C 000E               2041              MOVE.B      #14, D0             ; command for trap call to display message
000023FE  4E4F                    2042              TRAP        #15                 ; trap call
00002400  43F9 0000277B           2043              LEA         inc, A1             ; Display space
00002406  103C 000E               2044              MOVE.B      #14, D0             ; command for trap call to display message
0000240A  4E4F                    2045              TRAP        #15                 ; trap call
0000240C  6000 02CC               2046              BRA         endSUB              ; go to the end of the subroutine
00002410                          2047  
00002410  43F9 0000280E           2048  displayA2P  LEA         dispA2, A1          ; Display space
00002416  103C 000E               2049              MOVE.B      #14, D0             ; command for trap call to display message
0000241A  4E4F                    2050              TRAP        #15                 ; trap call
0000241C  43F9 00002777           2051              LEA         clPer, A1           ; Display space
00002422  103C 000E               2052              MOVE.B      #14, D0             ; command for trap call to display message
00002426  4E4F                    2053              TRAP        #15                 ; trap call
00002428  43F9 0000277B           2054              LEA         inc, A1             ; Display space
0000242E  103C 000E               2055              MOVE.B      #14, D0             ; command for trap call to display message
00002432  4E4F                    2056              TRAP        #15                 ; trap call
00002434  6000 02A4               2057              BRA         endSUB              ; go to the end of the subroutine
00002438                          2058  
00002438  43F9 00002811           2059  displayA3P  LEA         dispA3, A1          ; Display space
0000243E  103C 000E               2060              MOVE.B      #14, D0             ; command for trap call to display message
00002442  4E4F                    2061              TRAP        #15                 ; trap call
00002444  43F9 00002777           2062              LEA         clPer, A1           ; Display space
0000244A  103C 000E               2063              MOVE.B      #14, D0             ; command for trap call to display message
0000244E  4E4F                    2064              TRAP        #15                 ; trap call
00002450  43F9 0000277B           2065              LEA         inc, A1             ; Display space
00002456  103C 000E               2066              MOVE.B      #14, D0             ; command for trap call to display message
0000245A  4E4F                    2067              TRAP        #15                 ; trap call
0000245C  6000 027C               2068              BRA         endSUB              ; go to the end of the subroutine
00002460                          2069  
00002460  43F9 00002814           2070  displayA4P  LEA         dispA4, A1          ; Display space
00002466  103C 000E               2071              MOVE.B      #14, D0             ; command for trap call to display message
0000246A  4E4F                    2072              TRAP        #15                 ; trap call
0000246C  43F9 00002777           2073              LEA         clPer, A1           ; Display space
00002472  103C 000E               2074              MOVE.B      #14, D0             ; command for trap call to display message
00002476  4E4F                    2075              TRAP        #15                 ; trap call
00002478  43F9 0000277B           2076              LEA         inc, A1             ; Display space
0000247E  103C 000E               2077              MOVE.B      #14, D0             ; command for trap call to display message
00002482  4E4F                    2078              TRAP        #15                 ; trap call
00002484  6000 0254               2079              BRA         endSUB              ; go to the end of the subroutine
00002488                          2080  
00002488  43F9 00002817           2081  displayA5P  LEA         dispA5, A1          ; Display space
0000248E  103C 000E               2082              MOVE.B      #14, D0             ; command for trap call to display message
00002492  4E4F                    2083              TRAP        #15                 ; trap call
00002494  43F9 00002777           2084              LEA         clPer, A1           ; Display space
0000249A  103C 000E               2085              MOVE.B      #14, D0             ; command for trap call to display message
0000249E  4E4F                    2086              TRAP        #15                 ; trap call
000024A0  43F9 0000277B           2087              LEA         inc, A1             ; Display space
000024A6  103C 000E               2088              MOVE.B      #14, D0             ; command for trap call to display message
000024AA  4E4F                    2089              TRAP        #15                 ; trap call
000024AC  6000 022C               2090              BRA         endSUB              ; go to the end of the subroutine
000024B0                          2091  
000024B0  43F9 0000281A           2092  displayA6P  LEA         dispA6, A1          ; Display space
000024B6  103C 000E               2093              MOVE.B      #14, D0             ; command for trap call to display message
000024BA  4E4F                    2094              TRAP        #15                 ; trap call
000024BC  43F9 00002777           2095              LEA         clPer, A1           ; Display space
000024C2  103C 000E               2096              MOVE.B      #14, D0             ; command for trap call to display message
000024C6  4E4F                    2097              TRAP        #15                 ; trap call
000024C8  43F9 0000277B           2098              LEA         inc, A1             ; Display space
000024CE  103C 000E               2099              MOVE.B      #14, D0             ; command for trap call to display message
000024D2  4E4F                    2100              TRAP        #15                 ; trap call
000024D4  6000 0204               2101              BRA         endSUB              ; go to the end of the subroutine
000024D8                          2102  
000024D8  43F9 0000281D           2103  displayA7P  LEA         dispA7, A1          ; Display space
000024DE  103C 000E               2104              MOVE.B      #14, D0             ; command for trap call to display message
000024E2  4E4F                    2105              TRAP        #15                 ; trap call
000024E4  43F9 00002777           2106              LEA         clPer, A1           ; Display space
000024EA  103C 000E               2107              MOVE.B      #14, D0             ; command for trap call to display message
000024EE  4E4F                    2108              TRAP        #15                 ; trap call
000024F0  43F9 0000277B           2109              LEA         inc, A1             ; Display space
000024F6  103C 000E               2110              MOVE.B      #14, D0             ; command for trap call to display message
000024FA  4E4F                    2111              TRAP        #15                 ; trap call
000024FC  6000 01DC               2112              BRA         endSUB              ; go to the end of the subroutine
00002500                          2113  
00002500                          2114  ***********************************************************************************************************
00002500                          2115  * Addr Postdecrement
00002500                          2116  
00002500  43F9 00002779           2117  pAddrDec    LEA         dec, A1             ; Display space
00002506  103C 000E               2118              MOVE.B      #14, D0             ; command for trap call to display message
0000250A  4E4F                    2119              TRAP        #15                 ; trap call
0000250C                          2120              
0000250C  43F9 00002775           2121              LEA         opPer, A1           ; Display space
00002512  103C 000E               2122              MOVE.B      #14, D0             ; command for trap call to display message
00002516  4E4F                    2123              TRAP        #15                 ; trap call
00002518                          2124              
00002518  B63C 0000               2125              CMP.B   #zero,D3
0000251C  6700 003A               2126              BEQ     displayA0D
00002520  B63C 0001               2127              CMP.B   #one,D3
00002524  6700 004E               2128              BEQ     displayA1D
00002528  B63C 0002               2129              CMP.B   #two,D3
0000252C  6700 0062               2130              BEQ     displayA2D
00002530  B63C 0003               2131              CMP.B   #three,D3
00002534  6700 0076               2132              BEQ     displayA3D
00002538  B63C 0004               2133              CMP.B   #four,D3
0000253C  6700 008A               2134              BEQ     displayA4D
00002540  B63C 0005               2135              CMP.B   #five,D3
00002544  6700 009E               2136              BEQ     displayA5D
00002548  B63C 0006               2137              CMP.B   #six,D3
0000254C  6700 00B2               2138              BEQ     displayA6D
00002550  B63C 0007               2139              CMP.B   #seven,D3
00002554  6700 00C6               2140              BEQ     displayA7D
00002558                          2141              
00002558  43F9 00002808           2142  displayA0D  LEA         dispA0, A1          ; Display space
0000255E  103C 000E               2143              MOVE.B      #14, D0             ; command for trap call to display message
00002562  4E4F                    2144              TRAP        #15                 ; trap call
00002564  43F9 00002777           2145              LEA         clPer, A1           ; Display space
0000256A  103C 000E               2146              MOVE.B      #14, D0             ; command for trap call to display message
0000256E  4E4F                    2147              TRAP        #15                 ; trap call
00002570  6000 0168               2148              BRA         endSUB              ; go to the end of the subroutine
00002574                          2149              
00002574  43F9 0000280B           2150  displayA1D  LEA         dispA1, A1          ; Display space
0000257A  103C 000E               2151              MOVE.B      #14, D0             ; command for trap call to display message
0000257E  4E4F                    2152              TRAP        #15                 ; trap call
00002580  43F9 00002777           2153              LEA         clPer, A1           ; Display space
00002586  103C 000E               2154              MOVE.B      #14, D0             ; command for trap call to display message
0000258A  4E4F                    2155              TRAP        #15                 ; trap call
0000258C  6000 014C               2156              BRA         endSUB              ; go to the end of the subroutine
00002590                          2157  
00002590  43F9 0000280E           2158  displayA2D  LEA         dispA2, A1          ; Display space
00002596  103C 000E               2159              MOVE.B      #14, D0             ; command for trap call to display message
0000259A  4E4F                    2160              TRAP        #15                 ; trap call
0000259C  43F9 00002777           2161              LEA         clPer, A1           ; Display space
000025A2  103C 000E               2162              MOVE.B      #14, D0             ; command for trap call to display message
000025A6  4E4F                    2163              TRAP        #15                 ; trap call
000025A8  6000 0130               2164              BRA         endSUB              ; go to the end of the subroutine
000025AC                          2165  
000025AC  43F9 00002811           2166  displayA3D  LEA         dispA3, A1          ; Display space
000025B2  103C 000E               2167              MOVE.B      #14, D0             ; command for trap call to display message
000025B6  4E4F                    2168              TRAP        #15                 ; trap call
000025B8  43F9 00002777           2169              LEA         clPer, A1           ; Display space
000025BE  103C 000E               2170              MOVE.B      #14, D0             ; command for trap call to display message
000025C2  4E4F                    2171              TRAP        #15                 ; trap call
000025C4  6000 0114               2172              BRA         endSUB              ; go to the end of the subroutine
000025C8                          2173  
000025C8  43F9 00002814           2174  displayA4D  LEA         dispA4, A1          ; Display space
000025CE  103C 000E               2175              MOVE.B      #14, D0             ; command for trap call to display message
000025D2  4E4F                    2176              TRAP        #15                 ; trap call
000025D4  43F9 00002777           2177              LEA         clPer, A1           ; Display space
000025DA  103C 000E               2178              MOVE.B      #14, D0             ; command for trap call to display message
000025DE  4E4F                    2179              TRAP        #15                 ; trap call
000025E0  6000 00F8               2180              BRA         endSUB              ; go to the end of the subroutine
000025E4                          2181  
000025E4  43F9 00002817           2182  displayA5D  LEA         dispA5, A1          ; Display space
000025EA  103C 000E               2183              MOVE.B      #14, D0             ; command for trap call to display message
000025EE  4E4F                    2184              TRAP        #15                 ; trap call
000025F0  43F9 00002777           2185              LEA         clPer, A1           ; Display space
000025F6  103C 000E               2186              MOVE.B      #14, D0             ; command for trap call to display message
000025FA  4E4F                    2187              TRAP        #15                 ; trap call
000025FC  6000 00DC               2188              BRA         endSUB              ; go to the end of the subroutine
00002600                          2189  
00002600  43F9 0000281A           2190  displayA6D  LEA         dispA6, A1          ; Display space
00002606  103C 000E               2191              MOVE.B      #14, D0             ; command for trap call to display message
0000260A  4E4F                    2192              TRAP        #15                 ; trap call
0000260C  43F9 00002777           2193              LEA         clPer, A1           ; Display space
00002612  103C 000E               2194              MOVE.B      #14, D0             ; command for trap call to display message
00002616  4E4F                    2195              TRAP        #15                 ; trap call
00002618  6000 00C0               2196              BRA         endSUB              ; go to the end of the subroutine
0000261C                          2197  
0000261C  43F9 0000281D           2198  displayA7D  LEA         dispA7, A1          ; Display space
00002622  103C 000E               2199              MOVE.B      #14, D0             ; command for trap call to display message
00002626  4E4F                    2200              TRAP        #15                 ; trap call
00002628  43F9 00002777           2201              LEA         clPer, A1           ; Display space
0000262E  103C 000E               2202              MOVE.B      #14, D0             ; command for trap call to display message
00002632  4E4F                    2203              TRAP        #15                 ; trap call
00002634  6000 00A4               2204              BRA         endSUB              ; go to the end of the subroutine
00002638                          2205  
00002638                          2206  
00002638                          2207  ***********************************************************************************************************
00002638                          2208  * Absolute Address
00002638  B63C 0000               2209  pHex        CMP.B       #zero, D3
0000263C  6700 0012               2210              BEQ         AbsShort
00002640  B63C 0001               2211              CMP.B       #one, D3
00002644  6700 003C               2212              BEQ         AbsLong
00002648  B63C 0004               2213              CMP.B       #four, D3
0000264C  6700 0066               2214              BEQ         DispImm
00002650                          2215              
00002650  43F9 00002775           2216  AbsShort    LEA         opPer, A1           ; Display space
00002656  103C 000E               2217              MOVE.B      #14, D0             ; command for trap call to display message
0000265A  4E4F                    2218              TRAP        #15                 ; trap call
0000265C                          2219              
0000265C  43F9 00002771           2220              LEA         dispHex, A1         ; Display space
00002662  103C 000E               2221              MOVE.B      #14, D0             ; command for trap call to display message
00002666  4E4F                    2222              TRAP        #15                 ; trap call
00002668                          2223              
00002668  4241                    2224              CLR         D1
0000266A  3218                    2225              MOVE.W      (A0)+, D1
0000266C                          2226              
0000266C  103C 0003               2227              MOVE.B      #3, D0
00002670  4E4F                    2228              TRAP        #15
00002672                          2229              
00002672  43F9 00002777           2230              LEA         clPer, A1           ; Display space
00002678  103C 000E               2231              MOVE.B      #14, D0             ; command for trap call to display message
0000267C  4E4F                    2232              TRAP        #15                 ; trap call
0000267E                          2233              
0000267E  6000 005A               2234              BRA         endSub
00002682                          2235              
00002682  43F9 00002775           2236  AbsLong     LEA         opPer, A1           ; Display space
00002688  103C 000E               2237              MOVE.B      #14, D0             ; command for trap call to display message
0000268C  4E4F                    2238              TRAP        #15                 ; trap call
0000268E                          2239              
0000268E  43F9 00002771           2240              LEA         dispHex, A1         ; Display space
00002694  103C 000E               2241              MOVE.B      #14, D0             ; command for trap call to display message
00002698  4E4F                    2242              TRAP        #15                 ; trap call
0000269A                          2243              
0000269A  4241                    2244              CLR         D1
0000269C  2218                    2245              MOVE.L      (A0)+, D1
0000269E                          2246              
0000269E  103C 0003               2247              MOVE.B      #3, D0
000026A2  4E4F                    2248              TRAP        #15
000026A4                          2249              
000026A4  43F9 00002777           2250              LEA         clPer, A1           ; Display space
000026AA  103C 000E               2251              MOVE.B      #14, D0             ; command for trap call to display message
000026AE  4E4F                    2252              TRAP        #15                 ; trap call
000026B0                          2253              
000026B0  6000 0028               2254              BRA         endSub
000026B4                          2255  
000026B4  43F9 0000276F           2256  DispImm     LEA         hashTag, A1         ; Display space
000026BA  103C 000E               2257              MOVE.B      #14, D0             ; command for trap call to display message
000026BE  4E4F                    2258              TRAP        #15                 ; trap call
000026C0                          2259              
000026C0  4241                    2260              CLR         D1
000026C2  3218                    2261              MOVE.W      (A0)+, D1
000026C4                          2262  
000026C4  43F9 00002771           2263              LEA         dispHex, A1         ; Display space
000026CA  103C 000E               2264              MOVE.B      #14, D0             ; command for trap call to display message
000026CE  4E4F                    2265              TRAP        #15                 ; trap call
000026D0                          2266              
000026D0  103C 0003               2267              MOVE.B      #3, D0
000026D4  4E4F                    2268              TRAP        #15
000026D6                          2269  
000026D6  6000 0002               2270              BRA         endSub
000026DA                          2271  
000026DA                          2272  invalid
000026DA                          2273  
000026DA                          2274  endSUB
000026DA                          2275          
000026DA  4CDF 7EFF               2276          MOVEM.L  (SP)+, D0-D7/A1-A6
000026DE  4E75                    2277          RTS
000026E0                          2278          
000026E0                          2279  
000026E0                          2280  
000026E0                          2281          
000026E0  48E7 FF7E               2282  PrntImm MOVEM.L D0-D7/A1-A6, -(SP)
000026E4                          2283          
000026E4  43F9 0000276C           2284          LEA         space, A1        ; we know that the opcode will be ASR, so load A1 to print message
000026EA  103C 000E               2285          MOVE.B      #14, D0             ; command for trap call to display message
000026EE  4E4F                    2286          TRAP        #15                 ; trap call
000026F0                          2287          
000026F0  43F9 0000276F           2288          LEA         hashTag, A1        ; we know that the opcode will be ASR, so load A1 to print message
000026F6  103C 000E               2289          MOVE.B      #14, D0             ; command for trap call to display message
000026FA  4E4F                    2290          TRAP        #15                 ; trap call
000026FC                          2291          
000026FC  4242                    2292          CLR         D2
000026FE  3401                    2293          MOVE.W      D1, D2
00002700  E042                    2294          ASR         #eight, D2
00002702  E242                    2295          ASR         #one, D2
00002704  C47C 0007               2296          AND         #$07, D2
00002708                          2297          
00002708  4EB9 0000273A           2298          JSR         MemShiftImm
0000270E                          2299          
0000270E  43F9 00002773           2300          LEA         comma, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002714  103C 000E               2301          MOVE.B      #14, D0             ; command for trap call to display message
00002718  4E4F                    2302          TRAP        #15                 ; trap call
0000271A                          2303          
0000271A  4242                    2304          CLR         D2
0000271C  4243                    2305          CLR         D3
0000271E  1601                    2306          MOVE.B      D1,D3
00002720  C67C 0007               2307          AND         #$07, D3
00002724                          2308          
00002724  4EB8 2090               2309          JSR         printEA
00002728                          2310          
00002728  43F9 00002768           2311          LEA         newLine, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000272E  103C 000E               2312          MOVE.B      #14, D0             ; command for trap call to display message
00002732  4E4F                    2313          TRAP        #15                 ; trap call
00002734                          2314          
00002734  4CDF 7EFF               2315          MOVEM.L  (SP)+, D0-D7/A1-A6
00002738  4E75                    2316          RTS
0000273A                          2317          
0000273A                          2318          
0000273A  48E7 FF7E               2319  MemShiftImm     MOVEM.L D0-D7/A1-A6, -(SP)      ;caller saved data
0000273E  4241                    2320                  CLR     D1
00002740                          2321                  
00002740  1202                    2322                  MOVE.B  D2, D1
00002742  B23C 0000               2323                  CMP.B   #zero, D1
00002746  6700 000C               2324                  BEQ     displayEight
0000274A                          2325                  
0000274A  103C 0003               2326                  MOVE.B  #3, D0
0000274E  4E4F                    2327                  TRAP    #15
00002750  6000 000C               2328                  BRA     endSubroutine
00002754                          2329                  
00002754  123C 0008               2330  displayEight    MOVE.B  #$08, D1
00002758  103C 0003               2331                  MOVE.B  #3, D0
0000275C  4E4F                    2332                  TRAP    #15                
0000275E                          2333  endSubroutine
0000275E  4CDF 7EFF               2334                  MOVEM.L  (SP)+, D0-D7/A1-A6     ; recall data
00002762  4E75                    2335                  RTS                             ; Return to main routine‏
00002764                          2336  
00002764                          2337  ***********************************************************************************************************
00002764                          2338  ***********************************************************************************************************
00002764                          2339  ***********************************************************************************************************
00002764                          2340  
00002764                          2341  printInvalid
00002764                          2342  endPROG    
00002764                          2343  
00002764  FFFF FFFF               2344      SIMHALT                             ; halt simulator
00002768                          2345  
00002768= 20 0D 0A 00             2346  newLine     DC.B    ' ', CR, LF, 0
0000276C= 20 20 00                2347  space       DC.B    '  ', 0
0000276F                          2348  
0000276F= 23 00                   2349  hashTag     DC.B    '#', 0
00002771= 24 00                   2350  dispHex     DC.B    '$', 0
00002773= 2C 00                   2351  comma       DC.B    ',', 0
00002775                          2352  
00002775= 28 00                   2353  opPer       DC.B    '(', 0
00002777= 29 00                   2354  clPer       DC.B    ')', 0
00002779= 2D 00                   2355  dec         DC.B    '-', 0
0000277B= 2B 00                   2356  inc         DC.B    '+', 0
0000277D                          2357  
0000277D= 4F 52 49 00             2358  ORImatch    DC.B    'ORI', 0
00002781= 43 4D 50 49 00          2359  CMPImatch   DC.B    'CMPI', 0
00002786= 42 43 4C 52 00          2360  BCLRmatch   DC.B    'BCLR', 0
0000278B= 4D 4F 56 45 00          2361  MOVEmatch   DC.B    'MOVE', 0
00002790= 4D 4F 56 45 41 00       2362  MOVEAmatch  DC.B    'MOVEA', 0
00002796= 4E 45 47 00             2363  NEGmatch    DC.B    'NEG', 0
0000279A= 52 54 53 00             2364  RTSmatch    DC.B    'RTS', 0
0000279E= 4A 53 52 00             2365  JSRmatch    DC.B    'JSR', 0
000027A2= 4D 4F 56 45 4D 00       2366  MOVEMmatch  DC.B    'MOVEM', 0
000027A8= 4C 45 41 00             2367  LEAmatch    DC.B    'LEA', 0
000027AC= 53 55 42 51 00          2368  SUBQmatch   DC.B    'SUBQ', 0
000027B1= 42 52 41 00             2369  BRAmatch    DC.B    'BRA', 0
000027B5= 42 43 53 00             2370  BCSmatch    DC.B    'BCS', 0
000027B9= 42 56 43 00             2371  BVCmatch    DC.B    'BVC', 0
000027BD= 42 47 45 00             2372  BGEmatch    DC.B    'BGE', 0
000027C1= 42 4C 54 00             2373  BLTmatch    DC.B    'BLT', 0
000027C5= 44 49 56 53 00          2374  DIVSmatch   DC.B    'DIVS', 0
000027CA= 4F 52 00                2375  ORmatch     DC.B    'OR', 0
000027CD= 53 55 42 00             2376  SUBmatch    DC.B    'SUB', 0
000027D1= 45 4F 52 00             2377  EORmatch    DC.B    'EOR', 0
000027D5= 43 4D 50 00             2378  CMPmatch    DC.B    'CMP', 0
000027D9= 4D 55 4C 53 00          2379  MULSmatch   DC.B    'MULS', 0
000027DE= 41 44 44 00             2380  ADDmatch    DC.B    'ADD', 0
000027E2= 41 44 44 41 00          2381  ADDAmatch   DC.B    'ADDA', 0
000027E7= 4C 53 52 00             2382  LSRmatch    DC.B    'LSR', 0
000027EB= 4C 53 4C 00             2383  LSLmatch    DC.B    'LSL', 0
000027EF= 41 53 52 00             2384  ASRmatch    DC.B    'ASR', 0
000027F3= 41 53 4C 00             2385  ASLmatch    DC.B    'ASL', 0
000027F7= 52 4F 52 00             2386  RORmatch    DC.B    'ROR', 0
000027FB= 52 4F 4C 00             2387  ROLmatch    DC.B    'ROL', 0
000027FF                          2388   
000027FF= 2E 42 00                2389  dispByte    DC.B    '.B', 0
00002802= 2E 57 00                2390  dispWord    DC.B    '.W', 0
00002805= 2E 4C 00                2391  dispLong    DC.B    '.L', 0
00002808                          2392  
00002808= 41 30 00                2393  dispA0      DC.B    'A0', 0
0000280B= 41 31 00                2394  dispA1      DC.B    'A1', 0
0000280E= 41 32 00                2395  dispA2      DC.B    'A2', 0
00002811= 41 33 00                2396  dispA3      DC.B    'A3', 0
00002814= 41 34 00                2397  dispA4      DC.B    'A4', 0
00002817= 41 35 00                2398  dispA5      DC.B    'A5', 0
0000281A= 41 36 00                2399  dispA6      DC.B    'A6', 0
0000281D= 41 37 00                2400  dispA7      DC.B    'A7', 0
00002820                          2401  
00002820= 44 00                   2402  dispD       DC.B    'D',0
00002822= 44 30 00                2403  dispD0      DC.B    'D0', 0
00002825= 44 31 00                2404  dispD1      DC.B    'D1', 0
00002828= 44 32 00                2405  dispD2      DC.B    'D2', 0
0000282B= 44 33 00                2406  dispD3      DC.B    'D3', 0
0000282E= 44 34 00                2407  dispD4      DC.B    'D4', 0
00002831= 44 35 00                2408  dispD5      DC.B    'D5', 0
00002834= 44 36 00                2409  dispD6      DC.B    'D6', 0
00002837= 44 37 00                2410  dispD7      DC.B    'D7', 0  
0000283A                          2411             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             2682
ABSSHORT            2650
ADDAMATCH           27E2
ADDMATCH            27DE
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            27F3
ASRMATCH            27EF
BCLRMATCH           2786
BCSMATCH            27B5
BGEMATCH            27BD
BLTMATCH            27C1
BRAEIGHT            110E
BRAELEVEN           112C
BRAFIVE             10DE
BRAFOUR             10C2
BRAFOURTEEN         114A
BRAMATCH            27B1
BRANINE             1128
BRAONE              10B6
BRASIX              10E2
BRATHIRTEEN         114A
BRATHREE            10BE
BRATWELVE           1146
BRATWO              10BA
BRAZERO             1086
BVCMATCH            27B9
CLPER               2777
CMPIMATCH           2781
CMPMATCH            27D5
COMMA               2773
CR                  D
DEC                 2779
DISPA0              2808
DISPA1              280B
DISPA2              280E
DISPA3              2811
DISPA4              2814
DISPA5              2817
DISPA6              281A
DISPA7              281D
DISPBYTE            27FF
DISPD               2820
DISPD0              2822
DISPD1              2825
DISPD2              2828
DISPD3              282B
DISPD4              282E
DISPD5              2831
DISPD6              2834
DISPD7              2837
DISPHEX             2771
DISPIMM             26B4
DISPLAYA0           21C8
DISPLAYA0A          2294
DISPLAYA0D          2558
DISPLAYA0P          23C0
DISPLAYA1           21D8
DISPLAYA1A          22B0
DISPLAYA1D          2574
DISPLAYA1P          23E8
DISPLAYA2           21E8
DISPLAYA2A          22CC
DISPLAYA2D          2590
DISPLAYA2P          2410
DISPLAYA3           21F8
DISPLAYA3A          22E8
DISPLAYA3D          25AC
DISPLAYA3P          2438
DISPLAYA4           2208
DISPLAYA4A          2304
DISPLAYA4D          25C8
DISPLAYA4P          2460
DISPLAYA5           2218
DISPLAYA5A          2320
DISPLAYA5D          25E4
DISPLAYA5P          2488
DISPLAYA6           2228
DISPLAYA6A          233C
DISPLAYA6D          2600
DISPLAYA6P          24B0
DISPLAYA7           2238
DISPLAYA7A          2358
DISPLAYA7D          261C
DISPLAYA7P          24D8
DISPLAYD0           2108
DISPLAYD1           2118
DISPLAYD2           2128
DISPLAYD3           2138
DISPLAYD4           2148
DISPLAYD5           2158
DISPLAYD6           2168
DISPLAYD7           2178
DISPLAYEIGHT        2754
DISPLONG            2805
DISPWORD            2802
DIVSMATCH           27C5
EIGHT               8
ELEVEN              B
ENDPROG             2764
ENDSUB              26DA
ENDSUBROUTINE       275E
EORMATCH            27D1
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             276F
INC                 277B
INVALID             26DA
JSRMATCH            279E
LEAMATCH            27A8
LF                  A
LOOP                100C
LSLMATCH            27EB
LSRMATCH            27E7
MEMSHIFTIMM         273A
MOVEAMATCH          2790
MOVEMATCH           278B
MOVEMMATCH          27A2
MULSMATCH           27D9
NEGMATCH            2796
NEWLINE             2768
NINE                9
ONE                 1
OPASL               2048
OPASR               2054
OPBCLR              1882
OPBCS               1E14
OPBGE               1E7C
OPBLT               1EB0
OPBRA               1DDC
OPBVC               1E48
OPCMP               147C
OPCMPB              14AE
OPCMPI              1710
OPCMPIB             175C
OPCMPIL             1820
OPCMPIW             17BE
OPCMPL              1562
OPCMPW              1508
OPDIVS              12D0
OPDYNBCLR           18E6
OPEOR               132E
OPEORB              135C
OPEORL              141C
OPEORW              13BC
OPJSR               1CD4
OPLEA               1D64
OPLSL               2060
OPLSR               206C
OPMOVEAL            1A68
OPMOVEAW            1B62
OPMOVEB             1954
OPMOVEL             19D8
OPMOVEM             1D4C
OPMOVEMLEA          1D30
OPMOVEW             1AD2
OPMULS              203C
OPNEG               1BCC
OPNEGB              1BFA
OPNEGL              1C3A
OPNEGW              1C7A
OPOR                117E
OPORB               11BC
OPORI               15BC
OPORIB              15EA
OPORIL              16AE
OPORIW              164C
OPORL               1272
OPORW               1216
OPPER               2775
OPROL               2078
OPROR               2084
OPRTS               1D14
OPRTSJSR            1CBA
OPSUB               1EE4
OPSUBB              1F2E
OPSUBL              1FE2
OPSUBQ              1D64
OPSUBQB             1D90
OPSUBQL             1DC0
OPSUBQW             1DAA
OPSUBW              1F88
ORIMATCH            277D
ORMATCH             27CA
PADDRDEC            2500
PADDRDIR            2248
PADDRPOST           2374
PADDRREG            2188
PDATAREG            20C8
PHEX                2638
PRINTEA             2090
PRINTINVALID        2764
PRNTIMM             26E0
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
ROLMATCH            27FB
RORMATCH            27F7
RTSMATCH            279A
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               276C
START               1000
SUBMATCH            27CD
SUBQMATCH           27AC
TEST_END            3009
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
