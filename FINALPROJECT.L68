00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 2014-12-07 16:27:31

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Motorola 68k Disassembler
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =00003009                 11  test_end    EQU     $00003009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00003000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00003009             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 1444                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 0084                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0080                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 0094                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0090                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00B4                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00C6                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00C2                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00D4                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 00D0                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 00C8                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                102          AND.B       #secNib, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 04D0                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 061C                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                108          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 0786                109          BEQ         opBCLR
000010A6  C47C 0001                110          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                111          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 07DE                112          BEQ         opDynBCLR
000010B2  6000 13A4                113          BRA         printInvalid
000010B6                           114          
000010B6                           115          
000010B6  6000 0844                116  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           117  
000010BA  6000 08C4                118  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BE                           119  
000010BE                           120  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BE                           121  
000010BE  6000 09BA                122          BRA         opMOVEW
000010C2                           123  
000010C2  4242                     124  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010C4  1401                     125          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010C6  C43C 000F                126          AND.B       #secNib, D2             ; set first nibble to 0
000010CA                           127   
000010CA  B43C 0004                128          CMP.B       #four, D2           ; compare second nibble to 4
000010CE  6700 0AA4                129          BEQ         opNEG               ; branch to NEG method
000010D2  B43C 000E                130          CMP.B       #fourteen, D2       ; compare second nibble to E
000010D6  6700 0B8A                131          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010DA  6000 0BFC                132          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010DE                           133  
000010DE  6000 0C2C                134  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010E2                           135  
000010E2  4242                     136  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010E4  1401                     137          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010E6  C43C 000F                138          AND.B       #$0F, D2             ; set first nibble to 0
000010EA                           139   
000010EA  B43C 0000                140          CMP.B       #zero, D2           ; compare second nibble to 0
000010EE  6700 0C28                141          BEQ         opBRA               ; branch to BRA method
000010F2  B43C 0005                142          CMP.B       #five, D2           ; compare second nibble to 5
000010F6  6700 0C58                143          BEQ         opBCS               ; branch to BCS method
000010FA  B43C 0008                144          CMP.B       #eight, D2          ; compare second nibble to 8
000010FE  6700 0C5C                145          BEQ         opBVC               ; branch to BCS method
00001102  B43C 000C                146          CMP.B       #twelve, D2         ; compare second nibble to 12
00001106  6700 0C60                147          BEQ         opBGE               ; branch to BGE method
0000110A  6000 0C68                148          BRA         opBLT               ; otherwise, branch to BLT method
0000110E                           149  
0000110E                           150  braEight                                ; there are two opCodes available DIVS, or OR
0000110E  4242                     151              CLR     D2
00001110  E141                     152              ASL     #8,D1
00001112  1218                     153              MOVE.B  (A0)+,D1
00001114  3401                     154              MOVE.W  D1,D2
00001116  EC42                     155              ASR     #six,D2
00001118  C47C 0007                156              AND     #$07,D2
0000111C  B43C 0007                157              CMP.B   #seven,D2
00001120  6700 01B4                158              BEQ     opDIVS              ; If bits 8 - 6 are equal to 7, we have DIVS
00001124  6000 005E                159              BRA     opOR                ; else opcode is OR
00001128                           160  
00001128  6000 0C56                161  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000112C                           162  
0000112C                           163  braEleven                               ; there are two opCodes available EOR, or CMP
0000112C  4242                     164              CLR     D2
0000112E  E141                     165              ASL     #8,D1
00001130  1218                     166              MOVE.B  (A0)+,D1
00001132  3401                     167              MOVE.W  D1,D2
00001134  EC42                     168              ASR     #six,D2
00001136  C47C 0007                169              AND     #$07,D2
0000113A  B43C 0003                170              CMP.B   #three,D2
0000113E  6D00 02E4                171              BLT     opCMP               ; If opmode bits are less than 3, we have CMP
00001142  6000 01A2                172              BRA     opEOR               ; Else its EOR
00001146                           173              
00001146                           174  
00001146  6000 0C6C                175  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
0000114A                           176    
0000114A                           177  braThirteen ; there are two opCodes available ADD, or ADDA
0000114A                           178  
0000114A  4242                     179  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
0000114C  1401                     180              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000114E  C438 000F                181              AND.B       $0F, D2             ; set first nibble to 0
00001152                           182   
00001152  B43C 0000                183              CMP.B       #zero, D2           ; compare second nibble to 0
00001156  6700 0C74                184              BEQ         opASR               ; branch to ASR method
0000115A  B43C 0001                185              CMP.B       #one, D2            ; compare second nibble to 1
0000115E  6700 0C60                186              BEQ         opASL               ; branch to ASL method
00001162  B43C 0002                187              CMP.B       #two, D2            ; compare second nibble to 2
00001166  6700 0C7C                188              BEQ         opLSR               ; branch to LSR method
0000116A  B43C 0003                189              CMP.B       #three, D2          ; compare second nibble to 3
0000116E  6700 0C68                190              BEQ         opLSL               ; branch to LSL method
00001172  B43C 0006                191              CMP.B       #six, D2            ; compare second nibble to 6
00001176  6700 0C84                192              BEQ         opROR               ; branch to ROR method
0000117A  6000 0C74                193              BRA         opROL               ; otherwise, branch to ROL method
0000117E                           194              
0000117E                           195  
0000117E                           196  
0000117E                           197  ***********************************************************************************************************
0000117E                           198  *
0000117E                           199  *               BCC OPCODE
0000117E                           200  *
0000117E                           201  ***********************************************************************************************************
0000117E                           202          
0000117E  4242                     203  opBCC       CLR     D2
00001180                           204              ; Determine Condition (4 bits)
00001180                           205              ; Determine Displacement AFTER condition (8 bits)
00001180  6000 FE8A                206              BRA     LOOP
00001184                           207              
00001184                           208              
00001184                           209  ***********************************************************************************************************
00001184                           210  *
00001184                           211  *               OR OPCODE
00001184                           212  *
00001184                           213  ***********************************************************************************************************
00001184                           214  
00001184  43F9 000024BE            215  opOR        LEA         ORmatch,A1
0000118A  103C 000E                216              MOVE.B      #14,D0
0000118E  4E4F                     217              TRAP        #15
00001190                           218              
00001190  4242                     219              CLR         D2
00001192                           220              ; These are for EA to Dn direction
00001192  B43C 0000                221              CMP.B       #zero,D2
00001196  6700 002A                222              BEQ         opORB               ; Byte in opmode
0000119A  B43C 0001                223              CMP.B       #one,D2
0000119E  6700 007C                224              BEQ         opORW               ; Word in opmode
000011A2  B43C 0002                225              CMP.B       #two,D2
000011A6  6700 00D0                226              BEQ         opORL               ; Long in opmode
000011AA                           227              
000011AA                           228              ; These are for Dn to EA direction
000011AA  B43C 0004                229              CMP.B       #four,D2
000011AE  6700 0012                230              BEQ         opORB               ; Byte in opmode
000011B2  B43C 0005                231              CMP.B       #five,D2
000011B6  6700 0064                232              BEQ         opORW               ; Word in opmode
000011BA  B43C 0006                233              CMP.B       #six,D2
000011BE  6700 00B8                234              BEQ         opORL               ; Long in opmode
000011C2                           235              
000011C2  43F9 000024F3            236  opORB       LEA         dispByte,A1
000011C8  103C 000E                237              MOVE.B      #14,D0
000011CC  4E4F                     238              TRAP        #15
000011CE                           239              
000011CE  43F9 00002460            240              LEA         space, A1           ; Display space
000011D4  103C 000E                241              MOVE.B      #14, D0             ; command for trap call to display message
000011D8  4E4F                     242              TRAP        #15                 ; trap call
000011DA                           243              
000011DA                           244  
000011DA  1401                     245              MOVE.B      D1,D2
000011DC  E642                     246              ASR         #3,D2
000011DE  C47C 0007                247              AND         #$07,D2
000011E2  1601                     248              MOVE.B      D1,D3
000011E4  C67C 0007                249              AND         #$07,D3
000011E8  4EB9 00001E08            250              JSR         printEA         ; Determines the "left" operand register
000011EE                           251              
000011EE  43F9 00002467            252              LEA         comma, A1           ; Display space
000011F4  103C 000E                253              MOVE.B      #14, D0             ; command for trap call to display message
000011F8  4E4F                     254              TRAP        #15                 ; trap call
000011FA                           255              
000011FA  4242                     256              CLR         D2
000011FC  3601                     257              MOVE.W      D1,D3
000011FE  E043                     258              ASR         #eight,D3
00001200  E243                     259              ASR         #one,D3
00001202  C67C 0007                260              AND         #$07,D3
00001206  4EB9 00001E08            261              JSR         printEA
0000120C                           262              
0000120C  43F9 0000245C            263              LEA         newLine,A1
00001212  103C 000E                264              MOVE.B      #14,D0
00001216  4E4F                     265              TRAP        #15
00001218                           266              
00001218  6000 FDF2                267              BRA         LOOP
0000121C                           268              
0000121C                           269              
0000121C  43F9 000024F6            270  opORW       LEA         dispWord,A1
00001222  103C 000E                271              MOVE.B      #14,D0
00001226  4E4F                     272              TRAP        #15
00001228                           273              
00001228  43F9 00002460            274              LEA         space, A1           ; Display space
0000122E  103C 000E                275              MOVE.B      #14, D0             ; command for trap call to display message
00001232  4E4F                     276              TRAP        #15                 ; trap call
00001234                           277              
00001234  4242                     278              CLR         D2
00001236  1401                     279              MOVE.B      D1,D2
00001238  E642                     280              ASR         #3,D2
0000123A  C47C 0007                281              AND         #$07,D2
0000123E  1601                     282              MOVE.B      D1,D3
00001240  C67C 0007                283              AND         #$07,D3
00001244  4EB9 00001E08            284              JSR         printEA         ; Determines the "left" operand register
0000124A                           285              
0000124A  43F9 00002467            286              LEA         comma, A1           ; Display space
00001250  103C 000E                287              MOVE.B      #14, D0             ; command for trap call to display message
00001254  4E4F                     288              TRAP        #15                 ; trap call
00001256                           289              
00001256  4242                     290              CLR         D2
00001258  3601                     291              MOVE.W      D1,D3
0000125A  E043                     292              ASR         #eight,D3
0000125C  E243                     293              ASR         #one,D3
0000125E  C67C 0007                294              AND         #$07,D3
00001262  4EB9 00001E08            295              JSR         printEA
00001268                           296              
00001268  43F9 0000245C            297              LEA         newLine,A1
0000126E  103C 000E                298              MOVE.B      #14,D0
00001272  4E4F                     299              TRAP        #15
00001274                           300              
00001274  6000 FD96                301              BRA         LOOP
00001278                           302              
00001278  43F9 000024F9            303  opORL       LEA         dispLong,A1
0000127E  103C 000E                304              MOVE.B      #14,D0
00001282  4E4F                     305              TRAP        #15
00001284                           306              
00001284  43F9 00002460            307              LEA         space, A1           ; Display space
0000128A  103C 000E                308              MOVE.B      #14, D0             ; command for trap call to display message
0000128E  4E4F                     309              TRAP        #15                 ; trap call
00001290                           310              
00001290  1401                     311              MOVE.B      D1,D2
00001292  E642                     312              ASR         #3,D2
00001294  C47C 0007                313              AND         #$07,D2
00001298  1601                     314              MOVE.B      D1,D3
0000129A  C67C 0007                315              AND         #$07,D3
0000129E  4EB9 00001E08            316              JSR         printEA         ; Determines the "left" operand register
000012A4                           317              
000012A4  43F9 00002467            318              LEA         comma, A1           ; Display space
000012AA  103C 000E                319              MOVE.B      #14, D0             ; command for trap call to display message
000012AE  4E4F                     320              TRAP        #15                 ; trap call
000012B0                           321              
000012B0  4242                     322              CLR         D2
000012B2  3601                     323              MOVE.W      D1,D3
000012B4  E043                     324              ASR         #eight,D3
000012B6  E243                     325              ASR         #one,D3
000012B8  C67C 0007                326              AND         #$07,D3
000012BC  4EB9 00001E08            327              JSR         printEA
000012C2                           328              
000012C2  43F9 0000245C            329              LEA         newLine,A1
000012C8  103C 000E                330              MOVE.B      #14,D0
000012CC  4E4F                     331              TRAP        #15
000012CE                           332              
000012CE  6000 FD3C                333              BRA         LOOP            ; trap call
000012D2                           334              
000012D2  6000 FD38                335              BRA         LOOP
000012D6                           336              
000012D6                           337  ***********************************************************************************************************
000012D6                           338  *
000012D6                           339  *               DIVS OPCODE
000012D6                           340  *
000012D6                           341  ***********************************************************************************************************
000012D6                           342  
000012D6  43F9 000024B9            343  opDIVS      LEA     DIVSmatch,A1
000012DC  103C 000E                344              MOVE.B  #14,D0
000012E0  4E4F                     345              TRAP    #15
000012E2                           346      
000012E2  6000 FD28                347              BRA     LOOP
000012E6                           348              
000012E6                           349  **********************************************************************************************************
000012E6                           350  *
000012E6                           351  *               EOR OPCODE
000012E6                           352  *
000012E6                           353  ***********************************************************************************************************
000012E6                           354  
000012E6  43F9 000024C5            355  opEOR       LEA         EORmatch,A1
000012EC  103C 000E                356              MOVE.B      #14,D0
000012F0  4E4F                     357              TRAP        #15
000012F2                           358              
000012F2  4242                     359              CLR         D2
000012F4                           360              
000012F4  1401                     361              MOVE.B      D1,D2
000012F6  EE42                     362              ASR         #seven,D2           ; Move bits 7 places over to find opmode
000012F8  C47C 0007                363              AND         #$07,D2
000012FC  B43C 0005                364              CMP.B       #five,D2
00001300  6D00 0012                365              BLT         opEORB              ; Byte in opmode
00001304  B43C 0005                366              CMP.B       #five,D2
00001308  6700 0064                367              BEQ         opEORW              ; Word in opmode
0000130C  B43C 0005                368              CMP.B       #five,D2
00001310  6E00 00B8                369              BGT         opEORL              ; Long in opmode
00001314                           370              
00001314  43F9 000024F3            371  opEORB      LEA         dispByte,A1
0000131A  103C 000E                372              MOVE.B      #14,D0
0000131E  4E4F                     373              TRAP        #15
00001320                           374              
00001320  43F9 00002460            375              LEA         space, A1           ; Display space
00001326  103C 000E                376              MOVE.B      #14, D0             ; command for trap call to display message
0000132A  4E4F                     377              TRAP        #15                 ; trap call
0000132C                           378              
0000132C                           379  
0000132C  1401                     380              MOVE.B      D1,D2
0000132E  E642                     381              ASR         #3,D2
00001330  C47C 0007                382              AND         #$07,D2
00001334  1601                     383              MOVE.B      D1,D3
00001336  C67C 0007                384              AND         #$07,D3
0000133A  4EB9 00001E08            385              JSR         printEA         ; Determines the "left" operand register
00001340                           386              
00001340  43F9 00002467            387              LEA         comma, A1           ; Display space
00001346  103C 000E                388              MOVE.B      #14, D0             ; command for trap call to display message
0000134A  4E4F                     389              TRAP        #15                 ; trap call
0000134C                           390              
0000134C  4242                     391              CLR         D2
0000134E  3601                     392              MOVE.W      D1,D3
00001350  E043                     393              ASR         #eight,D3
00001352  E243                     394              ASR         #one,D3
00001354  C67C 0007                395              AND         #$07,D3
00001358  4EB9 00001E08            396              JSR         printEA
0000135E                           397              
0000135E  43F9 0000245C            398              LEA         newLine,A1
00001364  103C 000E                399              MOVE.B      #14,D0
00001368  4E4F                     400              TRAP        #15
0000136A                           401              
0000136A  6000 FCA0                402              BRA         LOOP
0000136E                           403              
0000136E                           404              
0000136E  43F9 000024F6            405  opEORW      LEA         dispWord,A1
00001374  103C 000E                406              MOVE.B      #14,D0
00001378  4E4F                     407              TRAP        #15
0000137A                           408              
0000137A  43F9 00002460            409              LEA         space, A1           ; Display space
00001380  103C 000E                410              MOVE.B      #14, D0             ; command for trap call to display message
00001384  4E4F                     411              TRAP        #15                 ; trap call
00001386                           412              
00001386  4242                     413              CLR         D2
00001388  1401                     414              MOVE.B      D1,D2
0000138A  E642                     415              ASR         #3,D2
0000138C  C47C 0007                416              AND         #$07,D2
00001390  1601                     417              MOVE.B      D1,D3
00001392  C67C 0007                418              AND         #$07,D3
00001396  4EB9 00001E08            419              JSR         printEA         ; Determines the "left" operand register
0000139C                           420              
0000139C  43F9 00002467            421              LEA         comma, A1           ; Display space
000013A2  103C 000E                422              MOVE.B      #14, D0             ; command for trap call to display message
000013A6  4E4F                     423              TRAP        #15                 ; trap call
000013A8                           424              
000013A8  4242                     425              CLR         D2
000013AA  3601                     426              MOVE.W      D1,D3
000013AC  E043                     427              ASR         #eight,D3
000013AE  E243                     428              ASR         #one,D3
000013B0  C67C 0007                429              AND         #$07,D3
000013B4  4EB9 00001E08            430              JSR         printEA
000013BA                           431              
000013BA  43F9 0000245C            432              LEA         newLine,A1
000013C0  103C 000E                433              MOVE.B      #14,D0
000013C4  4E4F                     434              TRAP        #15
000013C6                           435              
000013C6  6000 FC44                436              BRA         LOOP
000013CA                           437              
000013CA  43F9 000024F9            438  opEORL      LEA         dispLong,A1
000013D0  103C 000E                439              MOVE.B      #14,D0
000013D4  4E4F                     440              TRAP        #15
000013D6                           441              
000013D6  43F9 00002460            442              LEA         space, A1           ; Display space
000013DC  103C 000E                443              MOVE.B      #14, D0             ; command for trap call to display message
000013E0  4E4F                     444              TRAP        #15                 ; trap call
000013E2                           445              
000013E2  1401                     446              MOVE.B      D1,D2
000013E4  E642                     447              ASR         #3,D2
000013E6  C47C 0007                448              AND         #$07,D2
000013EA  1601                     449              MOVE.B      D1,D3
000013EC  C67C 0007                450              AND         #$07,D3
000013F0  4EB9 00001E08            451              JSR         printEA         ; Determines the "left" operand register
000013F6                           452              
000013F6  43F9 00002467            453              LEA         comma, A1           ; Display space
000013FC  103C 000E                454              MOVE.B      #14, D0             ; command for trap call to display message
00001400  4E4F                     455              TRAP        #15                 ; trap call
00001402                           456              
00001402  4242                     457              CLR         D2
00001404  3601                     458              MOVE.W      D1,D3
00001406  E043                     459              ASR         #eight,D3
00001408  E243                     460              ASR         #one,D3
0000140A  C67C 0007                461              AND         #$07,D3
0000140E  4EB9 00001E08            462              JSR         printEA
00001414                           463              
00001414  43F9 0000245C            464              LEA         newLine,A1
0000141A  103C 000E                465              MOVE.B      #14,D0
0000141E  4E4F                     466              TRAP        #15
00001420                           467              
00001420  6000 FBEA                468              BRA         LOOP            ; trap call
00001424                           469              
00001424                           470  
00001424                           471  ***********************************************************************************************************
00001424                           472  *
00001424                           473  *               CMP OPCODE
00001424                           474  *
00001424                           475  ***********************************************************************************************************
00001424                           476  
00001424  43F9 000024C9            477  opCMP       LEA         CMPmatch,A1
0000142A  103C 000E                478              MOVE.B      #14,D0
0000142E  4E4F                     479              TRAP        #15
00001430                           480              
00001430  4242                     481              CLR         D2
00001432                           482              
00001432  1401                     483              MOVE.B      D1,D2
00001434  EC42                     484              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001436  C47C 0007                485              AND         #$07,D2
0000143A  B43C 0000                486              CMP.B       #zero,D2
0000143E  6700 0016                487              BEQ         opCMPB              ; Byte in opmode
00001442  B43C 0001                488              CMP.B       #one,D2
00001446  6700 0068                489              BEQ         opCMPW              ; Word in opmode
0000144A  B43C 0002                490              CMP.B       #two,D2
0000144E  6700 00BA                491              BEQ         opCMPL              ; Long in opmode
00001452                           492              
00001452  6000 1004                493              BRA         printInvalid        ; Incorrect input
00001456                           494  
00001456  43F9 000024F3            495  opCMPB      LEA         dispByte,A1
0000145C  103C 000E                496              MOVE.B      #14,D0
00001460  4E4F                     497              TRAP        #15
00001462                           498              
00001462  43F9 00002460            499              LEA         space, A1           ; Display space
00001468  103C 000E                500              MOVE.B      #14, D0             ; command for trap call to display message
0000146C  4E4F                     501              TRAP        #15                 ; trap call
0000146E                           502              
0000146E  1401                     503              MOVE.B      D1,D2
00001470  E642                     504              ASR         #3,D2
00001472  C47C 0007                505              AND         #$07,D2
00001476  1601                     506              MOVE.B      D1,D3
00001478  C67C 0007                507              AND         #$07,D3
0000147C  4EB9 00001E08            508              JSR         printEA         ; Determines the "left" operand register
00001482                           509              
00001482  43F9 00002467            510              LEA         comma, A1           ; Display space
00001488  103C 000E                511              MOVE.B      #14, D0             ; command for trap call to display message
0000148C  4E4F                     512              TRAP        #15                 ; trap call
0000148E                           513              
0000148E  4242                     514              CLR         D2
00001490  3601                     515              MOVE.W      D1,D3
00001492  E043                     516              ASR         #eight,D3
00001494  E243                     517              ASR         #one,D3
00001496  C67C 0007                518              AND         #$07,D3
0000149A  4EB9 00001E08            519              JSR         printEA
000014A0                           520              
000014A0  43F9 0000245C            521              LEA         newLine,A1
000014A6  103C 000E                522              MOVE.B      #14,D0
000014AA  4E4F                     523              TRAP        #15
000014AC                           524              
000014AC  6000 FB5E                525              BRA         LOOP
000014B0                           526              
000014B0  43F9 000024F6            527  opCMPW      LEA         dispWord,A1
000014B6  103C 000E                528              MOVE.B      #14,D0
000014BA  4E4F                     529              TRAP        #15
000014BC                           530              
000014BC  43F9 00002460            531              LEA         space, A1           ; Display space
000014C2  103C 000E                532              MOVE.B      #14, D0             ; command for trap call to display message
000014C6  4E4F                     533              TRAP        #15                 ; trap call
000014C8                           534              
000014C8  1401                     535              MOVE.B      D1,D2
000014CA  E642                     536              ASR         #3,D2
000014CC  C47C 0007                537              AND         #$07,D2
000014D0  1601                     538              MOVE.B      D1,D3
000014D2  C67C 0007                539              AND         #$07,D3
000014D6  4EB9 00001E08            540              JSR         printEA         ; Determines the "left" operand register
000014DC                           541              
000014DC  43F9 00002467            542              LEA         comma, A1           ; Display space
000014E2  103C 000E                543              MOVE.B      #14, D0             ; command for trap call to display message
000014E6  4E4F                     544              TRAP        #15                 ; trap call
000014E8                           545              
000014E8  4242                     546              CLR         D2
000014EA  3601                     547              MOVE.W      D1,D3
000014EC  E043                     548              ASR         #eight,D3
000014EE  E243                     549              ASR         #one,D3
000014F0  C67C 0007                550              AND         #$07,D3
000014F4  4EB9 00001E08            551              JSR         printEA
000014FA                           552              
000014FA  43F9 0000245C            553              LEA         newLine,A1
00001500  103C 000E                554              MOVE.B      #14,D0
00001504  4E4F                     555              TRAP        #15
00001506                           556              
00001506  6000 FB04                557              BRA         LOOP
0000150A                           558  
0000150A  43F9 000024F9            559  opCMPL      LEA         dispLong,A1
00001510  103C 000E                560              MOVE.B      #14,D0
00001514  4E4F                     561              TRAP        #15
00001516                           562              
00001516  43F9 00002460            563              LEA         space, A1           ; Display space
0000151C  103C 000E                564              MOVE.B      #14, D0             ; command for trap call to display message
00001520  4E4F                     565              TRAP        #15                 ; trap call
00001522                           566              
00001522  1401                     567              MOVE.B      D1,D2
00001524  E642                     568              ASR         #3,D2
00001526  C47C 0007                569              AND         #$07,D2
0000152A  1601                     570              MOVE.B      D1,D3
0000152C  C67C 0007                571              AND         #$07,D3
00001530  4EB9 00001E08            572              JSR         printEA         ; Determines the "left" operand register
00001536                           573              
00001536  43F9 00002467            574              LEA         comma, A1           ; Display space
0000153C  103C 000E                575              MOVE.B      #14, D0             ; command for trap call to display message
00001540  4E4F                     576              TRAP        #15                 ; trap call
00001542                           577              
00001542  4242                     578              CLR         D2
00001544  3601                     579              MOVE.W      D1,D3
00001546  E043                     580              ASR         #eight,D3
00001548  E243                     581              ASR         #one,D3
0000154A  C67C 0007                582              AND         #$07,D3
0000154E  4EB9 00001E08            583              JSR         printEA
00001554                           584              
00001554  43F9 0000245C            585              LEA         newLine,A1
0000155A  103C 000E                586              MOVE.B      #14,D0
0000155E  4E4F                     587              TRAP        #15
00001560                           588              
00001560  6000 FAAA                589              BRA         LOOP
00001564                           590              
00001564                           591  ***********************************************************************************************************
00001564                           592  *
00001564                           593  *               ORI OPCODE
00001564                           594  *
00001564                           595  ***********************************************************************************************************
00001564                           596  
00001564  43F9 00002471            597  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
0000156A  103C 000E                598          MOVE.B      #14, D0             ; command for trap call to display message
0000156E  4E4F                     599          TRAP        #15                 ; trap call
00001570                           600          
00001570  1218                     601          MOVE.B      (A0)+, D1
00001572  1401                     602          MOVE.B      D1,D2               ; copy data over
00001574  EC42                     603          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001576  B43C 0000                604          CMP.B       #zero,D2
0000157A  6700 0016                605          BEQ         opORIB
0000157E  B43C 0001                606          CMP.B       #one,D2
00001582  6700 0070                607          BEQ         opORIW
00001586  B43C 0002                608          CMP.B       #two,D2
0000158A  6700 00CA                609          BEQ         opORIL
0000158E                           610          
0000158E  6000 0EC8                611          BRA         printInvalid
00001592                           612          
00001592  43F9 000024F3            613  opORIB  LEA         dispByte, A1        ; Display byte
00001598  103C 000E                614          MOVE.B      #14, D0             ; command for trap call to display message
0000159C  4E4F                     615          TRAP        #15                 ; trap call
0000159E                           616          
0000159E  43F9 00002460            617          LEA         space, A1           ; Display space
000015A4  103C 000E                618          MOVE.B      #14, D0             ; command for trap call to display message
000015A8  4E4F                     619          TRAP        #15                 ; trap call
000015AA                           620          
000015AA  4242                     621          CLR         D2
000015AC  1401                     622          MOVE.B      D1,D2
000015AE  E642                     623          ASR         #three,D2
000015B0  C47C 0007                624          AND         #seven,D2
000015B4  4243                     625          CLR         D3        
000015B6  1601                     626          MOVE.B      D1,D3
000015B8  C67C 0007                627          AND         #seven,D3
000015BC                           628          
000015BC  4241                     629          CLR         D1
000015BE  3218                     630          MOVE.W      (A0)+, D1
000015C0                           631          
000015C0  43F9 00002463            632          LEA         hashTag, A1           ; Display space
000015C6  103C 000E                633          MOVE.B      #14, D0             ; command for trap call to display message
000015CA  4E4F                     634          TRAP        #15                 ; trap call
000015CC                           635          
000015CC  103C 0003                636          MOVE.B      #3, D0
000015D0  4E4F                     637          TRAP        #15
000015D2                           638          
000015D2  43F9 00002467            639          LEA         comma, A1           ; Display space
000015D8  103C 000E                640          MOVE.B      #14, D0             ; command for trap call to display message
000015DC  4E4F                     641          TRAP        #15                 ; trap call
000015DE                           642          
000015DE  4EB9 00001E08            643          JSR         printEA
000015E4                           644          
000015E4  43F9 0000245C            645          LEA         newLine, A1           ; Display space
000015EA  103C 000E                646          MOVE.B      #14, D0             ; command for trap call to display message
000015EE  4E4F                     647          TRAP        #15                 ; trap call
000015F0                           648          
000015F0  6000 FA1A                649          BRA         LOOP
000015F4                           650          
000015F4                           651          
000015F4  43F9 000024F6            652  opORIW  LEA         dispWord, A1        ; Display byte
000015FA  103C 000E                653          MOVE.B      #14, D0             ; command for trap call to display message
000015FE  4E4F                     654          TRAP        #15                 ; trap call
00001600                           655          
00001600  43F9 00002460            656          LEA         space, A1           ; Display space
00001606  103C 000E                657          MOVE.B      #14, D0             ; command for trap call to display message
0000160A  4E4F                     658          TRAP        #15                 ; trap call
0000160C                           659          
0000160C  4242                     660          CLR         D2
0000160E  1401                     661          MOVE.B      D1,D2
00001610  E642                     662          ASR         #three,D2
00001612  C47C 0007                663          AND         #seven,D2
00001616  4243                     664          CLR         D3        
00001618  1601                     665          MOVE.B      D1,D3
0000161A  C67C 0007                666          AND         #seven,D3
0000161E                           667          
0000161E  4241                     668          CLR         D1
00001620  3218                     669          MOVE.W      (A0)+, D1
00001622                           670          
00001622  43F9 00002463            671          LEA         hashTag, A1           ; Display space
00001628  103C 000E                672          MOVE.B      #14, D0             ; command for trap call to display message
0000162C  4E4F                     673          TRAP        #15                 ; trap call
0000162E                           674          
0000162E  103C 0003                675          MOVE.B      #3, D0
00001632  4E4F                     676          TRAP        #15
00001634                           677          
00001634  43F9 00002467            678          LEA         comma, A1           ; Display space
0000163A  103C 000E                679          MOVE.B      #14, D0             ; command for trap call to display message
0000163E  4E4F                     680          TRAP        #15                 ; trap call
00001640                           681          
00001640  4EB9 00001E08            682          JSR         printEA
00001646                           683          
00001646  43F9 0000245C            684          LEA         newLine, A1           ; Display space
0000164C  103C 000E                685          MOVE.B      #14, D0             ; command for trap call to display message
00001650  4E4F                     686          TRAP        #15                 ; trap call
00001652                           687          
00001652  6000 F9B8                688          BRA         LOOP
00001656                           689       
00001656  43F9 000024F9            690  opORIL  LEA         dispLong, A1        ; Display byte
0000165C  103C 000E                691          MOVE.B      #14, D0             ; command for trap call to display message
00001660  4E4F                     692          TRAP        #15                 ; trap call
00001662                           693          
00001662  43F9 00002460            694          LEA         space, A1           ; Display space
00001668  103C 000E                695          MOVE.B      #14, D0             ; command for trap call to display message
0000166C  4E4F                     696          TRAP        #15                 ; trap call
0000166E                           697          
0000166E  4242                     698          CLR         D2
00001670  1401                     699          MOVE.B      D1,D2
00001672  E642                     700          ASR         #three,D2
00001674  C47C 0007                701          AND         #seven,D2
00001678  4243                     702          CLR         D3        
0000167A  1601                     703          MOVE.B      D1,D3
0000167C  C67C 0007                704          AND         #seven,D3
00001680                           705          
00001680  4241                     706          CLR         D1
00001682  2218                     707          MOVE.L      (A0)+, D1
00001684                           708          
00001684  43F9 00002463            709          LEA         hashTag, A1           ; Display space
0000168A  103C 000E                710          MOVE.B      #14, D0             ; command for trap call to display message
0000168E  4E4F                     711          TRAP        #15                 ; trap call
00001690                           712          
00001690  103C 0003                713          MOVE.B      #3, D0
00001694  4E4F                     714          TRAP        #15
00001696                           715          
00001696  43F9 00002467            716          LEA         comma, A1           ; Display space
0000169C  103C 000E                717          MOVE.B      #14, D0             ; command for trap call to display message
000016A0  4E4F                     718          TRAP        #15                 ; trap call
000016A2                           719          
000016A2  4EB9 00001E08            720          JSR         printEA
000016A8                           721          
000016A8  43F9 0000245C            722          LEA         newLine, A1           ; Display space
000016AE  103C 000E                723          MOVE.B      #14, D0             ; command for trap call to display message
000016B2  4E4F                     724          TRAP        #15                 ; trap call
000016B4                           725          
000016B4  6000 F956                726          BRA         LOOP
000016B8                           727           
000016B8  43F9 00002475            728  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000016BE  103C 000E                729          MOVE.B      #14, D0             ; command for trap call to display message
000016C2  4E4F                     730          TRAP        #15                 ; trap call
000016C4                           731                  
000016C4  1218                     732          MOVE.B      (A0)+, D1
000016C6  1401                     733          MOVE.B      D1,D2               ; copy data over
000016C8  EC42                     734          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000016CA  B43C 0000                735          CMP.B       #zero,D2
000016CE  6700 0034                736          BEQ         opCMPIB
000016D2  B43C 0001                737          CMP.B       #one,D2
000016D6  6700 008E                738          BEQ         opCMPIW
000016DA  B43C 0002                739          CMP.B       #two,D2
000016DE  6700 00E8                740          BEQ         opCMPIL
000016E2                           741          
000016E2  1401                     742          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000016E4  E542                     743          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
000016E6  1802                     744          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
000016E8  4242                     745          CLR         D2                  ; Clear out data register
000016EA  1404                     746          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
000016EC  EA42                     747          ASR         #five,D2            ; Shift the register out to get just the mode
000016EE  1802                     748          MOVE.B      D2,D4               ; Store mode into D4
000016F0  4242                     749          CLR         D2
000016F2                           750          
000016F2  1401                     751          MOVE.B      D1,D2               ; Getting the EA register
000016F4  EB42                     752          ASL         #five,D2
000016F6  1A02                     753          MOVE.B      D2,D5               ; Move just the register into D5
000016F8  4242                     754          CLR         D2                  ; Clearing D2 to put data back
000016FA  1405                     755          MOVE.B      D5,D2               ; Putting back the register
000016FC  EA42                     756          ASR         #five,D2            ; Shifting bits in order to read the register
000016FE  1A02                     757          MOVE.B      D2,D5               ; Store register into D5
00001700                           758          
00001700  6000 F90A                759          BRA         LOOP                ; go back to the loop
00001704                           760  
00001704  43F9 000024F3            761  opCMPIB LEA         dispByte, A1        ; Display byte
0000170A  103C 000E                762          MOVE.B      #14, D0             ; command for trap call to display message
0000170E  4E4F                     763          TRAP        #15                 ; trap call
00001710                           764          
00001710  43F9 00002460            765          LEA         space, A1           ; Display space
00001716  103C 000E                766          MOVE.B      #14, D0             ; command for trap call to display message
0000171A  4E4F                     767          TRAP        #15                 ; trap call
0000171C                           768          
0000171C  4242                     769          CLR         D2
0000171E  1401                     770          MOVE.B      D1,D2
00001720  E642                     771          ASR         #three,D2
00001722  C47C 0007                772          AND         #seven,D2
00001726  4243                     773          CLR         D3        
00001728  1601                     774          MOVE.B      D1,D3
0000172A  C67C 0007                775          AND         #seven,D3
0000172E                           776          
0000172E  4241                     777          CLR         D1
00001730  3218                     778          MOVE.W      (A0)+, D1
00001732                           779          
00001732  43F9 00002463            780          LEA         hashTag, A1           ; Display space
00001738  103C 000E                781          MOVE.B      #14, D0             ; command for trap call to display message
0000173C  4E4F                     782          TRAP        #15                 ; trap call
0000173E                           783          
0000173E  103C 0003                784          MOVE.B      #3, D0
00001742  4E4F                     785          TRAP        #15
00001744                           786          
00001744  43F9 00002467            787          LEA         comma, A1           ; Display space
0000174A  103C 000E                788          MOVE.B      #14, D0             ; command for trap call to display message
0000174E  4E4F                     789          TRAP        #15                 ; trap call
00001750                           790          
00001750  4EB9 00001E08            791          JSR         printEA
00001756                           792          
00001756  43F9 0000245C            793          LEA         newLine, A1           ; Display space
0000175C  103C 000E                794          MOVE.B      #14, D0             ; command for trap call to display message
00001760  4E4F                     795          TRAP        #15                 ; trap call
00001762                           796  
00001762  6000 F8A8                797          BRA         LOOP
00001766                           798  
00001766  43F9 000024F6            799  opCMPIW LEA         dispWord, A1        ; Display byte
0000176C  103C 000E                800          MOVE.B      #14, D0             ; command for trap call to display message
00001770  4E4F                     801          TRAP        #15                 ; trap call
00001772                           802          
00001772  43F9 00002460            803          LEA         space, A1           ; Display space
00001778  103C 000E                804          MOVE.B      #14, D0             ; command for trap call to display message
0000177C  4E4F                     805          TRAP        #15                 ; trap call
0000177E                           806          
0000177E  4242                     807          CLR         D2
00001780  1401                     808          MOVE.B      D1,D2
00001782  E642                     809          ASR         #three,D2
00001784  C47C 0007                810          AND         #seven,D2
00001788  4243                     811          CLR         D3        
0000178A  1601                     812          MOVE.B      D1,D3
0000178C  C67C 0007                813          AND         #seven,D3
00001790                           814          
00001790  4241                     815          CLR         D1
00001792  3218                     816          MOVE.W      (A0)+, D1
00001794                           817          
00001794  43F9 00002463            818          LEA         hashTag, A1           ; Display space
0000179A  103C 000E                819          MOVE.B      #14, D0             ; command for trap call to display message
0000179E  4E4F                     820          TRAP        #15                 ; trap call
000017A0                           821          
000017A0  103C 0003                822          MOVE.B      #3, D0
000017A4  4E4F                     823          TRAP        #15
000017A6                           824          
000017A6  43F9 00002467            825          LEA         comma, A1           ; Display space
000017AC  103C 000E                826          MOVE.B      #14, D0             ; command for trap call to display message
000017B0  4E4F                     827          TRAP        #15                 ; trap call
000017B2                           828          
000017B2  4EB9 00001E08            829          JSR         printEA
000017B8                           830          
000017B8  43F9 0000245C            831          LEA         newLine, A1           ; Display space
000017BE  103C 000E                832          MOVE.B      #14, D0             ; command for trap call to display message
000017C2  4E4F                     833          TRAP        #15                 ; trap call
000017C4  6000 F846                834          BRA         LOOP
000017C8                           835  
000017C8  43F9 000024F9            836  opCMPIL LEA         dispLong, A1        ; Display byte
000017CE  103C 000E                837          MOVE.B      #14, D0             ; command for trap call to display message
000017D2  4E4F                     838          TRAP        #15                 ; trap call
000017D4                           839          
000017D4  43F9 00002460            840          LEA         space, A1           ; Display space
000017DA  103C 000E                841          MOVE.B      #14, D0             ; command for trap call to display message
000017DE  4E4F                     842          TRAP        #15                 ; trap call
000017E0                           843          
000017E0  4242                     844          CLR         D2
000017E2  1401                     845          MOVE.B      D1,D2
000017E4  E642                     846          ASR         #three,D2
000017E6  C47C 0007                847          AND         #seven,D2
000017EA  4243                     848          CLR         D3        
000017EC  1601                     849          MOVE.B      D1,D3
000017EE  C67C 0007                850          AND         #seven,D3
000017F2                           851          
000017F2  4241                     852          CLR         D1
000017F4  3218                     853          MOVE.W      (A0)+, D1
000017F6                           854          
000017F6  43F9 00002463            855          LEA         hashTag, A1           ; Display space
000017FC  103C 000E                856          MOVE.B      #14, D0             ; command for trap call to display message
00001800  4E4F                     857          TRAP        #15                 ; trap call
00001802                           858          
00001802  103C 0003                859          MOVE.B      #3, D0
00001806  4E4F                     860          TRAP        #15
00001808                           861          
00001808  43F9 00002467            862          LEA         comma, A1           ; Display space
0000180E  103C 000E                863          MOVE.B      #14, D0             ; command for trap call to display message
00001812  4E4F                     864          TRAP        #15                 ; trap call
00001814                           865          
00001814  4EB9 00001E08            866          JSR         printEA
0000181A                           867          
0000181A  43F9 0000245C            868          LEA         newLine, A1           ; Display space
00001820  103C 000E                869          MOVE.B      #14, D0             ; command for trap call to display message
00001824  4E4F                     870          TRAP        #15                 ; trap call
00001826                           871          
00001826  6000 F7E4                872          BRA         LOOP
0000182A                           873  
0000182A  43F9 0000247A            874  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001830  103C 000E                875                  MOVE.B      #14, D0             ; command for trap call to display message
00001834  4E4F                     876                  TRAP        #15                 ; trap call
00001836                           877  
00001836  43F9 00002460            878                  LEA         space, A1           ; Display space
0000183C  103C 000E                879                  MOVE.B      #14, D0             ; command for trap call to display message
00001840  4E4F                     880                  TRAP        #15                 ; trap call
00001842                           881                  
00001842  4242                     882                  CLR         D2
00001844  1218                     883                  MOVE.B      (A0)+, D1
00001846  1401                     884                  MOVE.B      D1,D2               ; copy data over
00001848  E642                     885                  ASR         #three,D2           ; Shift to the right to remove register
0000184A  C47C 0007                886                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
0000184E                           887                  
0000184E  4243                     888                  CLR         D3                  ; Clear D3 so we can move D1 in
00001850  1601                     889                  MOVE.B      D1,D3               ; Move othr byte in
00001852  C67C 0007                890                  AND         #seven,D3           ; Set everything besides register to 0
00001856                           891                  
00001856  4241                     892                  CLR         D1
00001858  3218                     893                  MOVE.W      (A0)+, D1
0000185A                           894                 
0000185A                           895                  
0000185A  43F9 00002463            896                  LEA         hashTag, A1           ; Display space
00001860  103C 000E                897                  MOVE.B      #14, D0             ; command for trap call to display message
00001864  4E4F                     898                  TRAP        #15                 ; trap call
00001866                           899          
00001866  103C 0003                900                  MOVE.B      #3, D0
0000186A  4E4F                     901                  TRAP        #15
0000186C                           902          
0000186C  43F9 00002467            903                  LEA         comma, A1           ; Display space
00001872  103C 000E                904                  MOVE.B      #14, D0             ; command for trap call to display message
00001876  4E4F                     905                  TRAP        #15                 ; trap call
00001878                           906                  
00001878  4EB9 00001E08            907                  JSR         printEA
0000187E                           908          
0000187E  43F9 0000245C            909                  LEA         newLine, A1           ; Display space
00001884  103C 000E                910                  MOVE.B      #14, D0             ; command for trap call to display message
00001888  4E4F                     911                  TRAP        #15                 ; trap call
0000188A                           912                  
0000188A                           913                  
0000188A  6000 F780                914                  BRA         LOOP                
0000188E                           915          
0000188E                           916  opDynBCLR       
0000188E  4241                     917                  CLR         D1
00001890  1218                     918                  MOVE.B      (A0)+,D1            ; Copy second byte in
00001892  1601                     919                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
00001894  E243                     920                  ASR         #one,D3             ; Shift register over to the end
00001896  C67C 0007                921                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
0000189A                           922                  
0000189A  1401                     923                  MOVE.B      D1,D2
0000189C  EC42                     924                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
0000189E  B47C 0002                925                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
000018A2  6600 0BB4                926                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
000018A6                           927  
000018A6                           928                  
000018A6  43F9 0000247A            929                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
000018AC  103C 000E                930                  MOVE.B      #14, D0             ; command for trap call to display message
000018B0  4E4F                     931                  TRAP        #15                 ; trap call  
000018B2                           932                  
000018B2  43F9 00002460            933                  LEA         space, A1           ; Display space
000018B8  103C 000E                934                  MOVE.B      #14, D0             ; command for trap call to display message
000018BC  4E4F                     935                  TRAP        #15                 ; trap call
000018BE                           936                  
000018BE  143C 0000                937                  MOVE.B      #zero,D2                
000018C2  4EB9 00001E08            938                  JSR         printEA
000018C8                           939                  
000018C8  43F9 00002467            940                  LEA         comma, A1           ; Display space
000018CE  103C 000E                941                  MOVE.B      #14, D0             ; command for trap call to display message
000018D2  4E4F                     942                  TRAP        #15                 ; trap call
000018D4                           943                  
000018D4  4242                     944                  CLR         D2
000018D6  1401                     945                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000018D8  E642                     946                  ASR         #three,D2           ; Remove/shift the register out
000018DA  C47C 0007                947                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000018DE                           948                  
000018DE  4243                     949                  CLR         D3                  ; Clearing D3 to avoid mashing data
000018E0  1601                     950                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000018E2  C67C 0007                951                  AND         #seven,D3           ; Change all bits except for register bits to 0
000018E6                           952                  
000018E6                           953  
000018E6  4EB9 00001E08            954                  JSR         printEA
000018EC                           955          
000018EC  43F9 0000245C            956                  LEA         newLine, A1           ; Display space
000018F2  103C 000E                957                  MOVE.B      #14, D0             ; command for trap call to display message
000018F6  4E4F                     958                  TRAP        #15                 ; trap call            
000018F8                           959  
000018F8                           960  
000018F8  6000 F712                961                  BRA         LOOP                ; go back to the loop
000018FC                           962   
000018FC                           963  opMOVEB 
000018FC  43F9 0000247F            964          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
00001902  103C 000E                965          MOVE.B      #14, D0             ; command for trap call to display message
00001906  4E4F                     966          TRAP        #15                 ; trap call
00001908  43F9 000024F3            967          LEA         dispByte, A1        ; display byte
0000190E  103C 000E                968          MOVE.B      #14, D0             ; command for trap call to display message
00001912  4E4F                     969          TRAP        #15                 ; trap call
00001914  43F9 00002460            970          LEA         space, A1           ; create spaces
0000191A  103C 000E                971          MOVE.B      #14, D0             ; command for trap call to display message
0000191E  4E4F                     972          TRAP        #15                 ; trap call
00001920                           973          
00001920                           974          
00001920  4245                     975          CLR         D5                  ; Clear D5
00001922  1A01                     976          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001924  E245                     977          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001926  CA7C 0007                978          AND         #seven,D5
0000192A                           979          
0000192A  4244                     980          CLR         D4                  ; Clear out D4
0000192C  1801                     981          MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000192E  C87C 0001                982          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001932                           983          
00001932  4241                     984          CLR          D1
00001934  4242                     985          CLR          D2
00001936  1218                     986          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001938  1401                     987          MOVE.B      D1,D2
0000193A  EC42                     988          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000193C  D842                     989          ADD         D2,D4               ; Adds the remaining bits to D4
0000193E                           990          
0000193E  4242                     991          CLR         D2
00001940  1401                     992          MOVE.B      D1,D2               ; Copy new byte over to D2
00001942  E642                     993          ASR         #three,D2           ; Shift source register out
00001944  C47C 0007                994          AND         #seven,D2           ; Set everything to 0 except for the mode
00001948                           995          
00001948  4243                     996          CLR         D3
0000194A  1601                     997          MOVE.B      D1,D3
0000194C  C67C 0007                998          AND         #seven,D3
00001950                           999          
00001950  4EB9 00001E08           1000          JSR         printEA
00001956                          1001          
00001956  43F9 00002467           1002          LEA         comma, A1           ; Display space
0000195C  103C 000E               1003          MOVE.B      #14, D0             ; command for trap call to display message
00001960  4E4F                    1004          TRAP        #15                 ; trap call
00001962                          1005          
00001962  4242                    1006          CLR         D2
00001964  4243                    1007          CLR         D3
00001966  1404                    1008          MOVE.B      D4,D2
00001968  1605                    1009          MOVE.B      D5,D3
0000196A                          1010          
0000196A  4EB9 00001E08           1011          JSR         printEA
00001970                          1012          
00001970                          1013          
00001970  43F9 0000245C           1014          LEA         newLine, A1           ; Display space
00001976  103C 000E               1015          MOVE.B      #14, D0             ; command for trap call to display message
0000197A  4E4F                    1016          TRAP        #15                 ; trap call            
0000197C                          1017  
0000197C                          1018  
0000197C  6000 F68E               1019          BRA         LOOP                ; go back to the loop
00001980                          1020          
00001980                          1021  opMOVEL     
00001980                          1022          
00001980  4245                    1023              CLR         D5                  ; Clear D5
00001982  1A01                    1024              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001984  E245                    1025              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001986  CA7C 0007               1026              AND         #seven,D5
0000198A                          1027          
0000198A  4244                    1028              CLR         D4                  ; Clear out D4
0000198C  1801                    1029              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000198E  C87C 0001               1030              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001992                          1031          
00001992  4241                    1032              CLR          D1
00001994  4242                    1033              CLR          D2
00001996  1218                    1034              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001998  1401                    1035              MOVE.B      D1,D2
0000199A  EC42                    1036              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000199C  D842                    1037              ADD         D2,D4               ; Adds the remaining bits to D4
0000199E                          1038          
0000199E  B87C 0001               1039              CMP         #one,D4             ; Check if it is MOVEA
000019A2  6700 006C               1040              BEQ         opMOVEAL            ; If it is, branch off
000019A6                          1041              
000019A6  43F9 0000247F           1042              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000019AC  103C 000E               1043              MOVE.B      #14, D0             ; command for trap call to display message
000019B0  4E4F                    1044              TRAP        #15                 ; trap call  
000019B2                          1045              
000019B2                          1046              
000019B2  43F9 000024F9           1047              LEA         dispLong,A1
000019B8  103C 000E               1048              MOVE.B      #14, D0             ; command for trap call to display message
000019BC  4E4F                    1049              TRAP        #15                 ; trap call
000019BE                          1050              
000019BE  43F9 00002460           1051              LEA         space, A1           ; create spaces
000019C4  103C 000E               1052              MOVE.B      #14, D0             ; command for trap call to display message
000019C8  4E4F                    1053              TRAP        #15                 ; trap call
000019CA                          1054          
000019CA  4242                    1055              CLR         D2
000019CC  1401                    1056              MOVE.B      D1,D2               ; Copy new byte over to D2
000019CE  E642                    1057              ASR         #three,D2           ; Shift source register out
000019D0  C47C 0007               1058              AND         #seven,D2           ; Set everything to 0 except for the mode
000019D4                          1059          
000019D4  4243                    1060              CLR         D3
000019D6  1601                    1061              MOVE.B      D1,D3
000019D8  C67C 0007               1062              AND         #seven,D3
000019DC                          1063              
000019DC  4241                    1064              CLR         D1                  ; Clear D1
000019DE  2218                    1065              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
000019E0                          1066              
000019E0  4EB9 00001E08           1067              JSR         printEA
000019E6                          1068              
000019E6  43F9 00002467           1069              LEA         comma, A1           ; Display comma
000019EC  103C 000E               1070              MOVE.B      #14, D0             ; command for trap call to display message
000019F0  4E4F                    1071              TRAP        #15                 ; trap call
000019F2                          1072          
000019F2  4242                    1073              CLR         D2
000019F4  4243                    1074              CLR         D3
000019F6  1404                    1075              MOVE.B      D4,D2
000019F8  1605                    1076              MOVE.B      D5,D3
000019FA                          1077              
000019FA                          1078  
000019FA                          1079              
000019FA  4EB9 00001E08           1080              JSR         printEA
00001A00                          1081          
00001A00                          1082          
00001A00  43F9 0000245C           1083              LEA         newLine, A1           ; Display space
00001A06  103C 000E               1084              MOVE.B      #14, D0             ; command for trap call to display message
00001A0A  4E4F                    1085              TRAP        #15                 ; trap call            
00001A0C                          1086  
00001A0C                          1087  
00001A0C  6000 F5FE               1088              BRA         LOOP                ; go back to the loop
00001A10                          1089              
00001A10                          1090  opMOVEAL
00001A10                          1091  
00001A10  43F9 00002484           1092              LEA         MOVEAmatch,A1
00001A16  103C 000E               1093              MOVE.B      #14, D0             ; command for trap call to display message
00001A1A  4E4F                    1094              TRAP        #15                 ; trap call
00001A1C                          1095              
00001A1C  43F9 000024F9           1096              LEA         dispLong,A1
00001A22  103C 000E               1097              MOVE.B      #14, D0             ; command for trap call to display message
00001A26  4E4F                    1098              TRAP        #15                 ; trap call
00001A28                          1099              
00001A28                          1100  
00001A28  43F9 00002460           1101              LEA         space, A1           ; create spaces
00001A2E  103C 000E               1102              MOVE.B      #14, D0             ; command for trap call to display message
00001A32  4E4F                    1103              TRAP        #15                 ; trap call
00001A34                          1104              
00001A34  4242                    1105              CLR         D2
00001A36  1401                    1106              MOVE.B      D1,D2               ; Copy new byte over to D2
00001A38  E642                    1107              ASR         #three,D2           ; Shift source register out
00001A3A  C47C 0007               1108              AND         #seven,D2           ; Set everything to 0 except for the mode
00001A3E                          1109          
00001A3E  4243                    1110              CLR         D3
00001A40  1601                    1111              MOVE.B      D1,D3
00001A42  C67C 0007               1112              AND         #seven,D3
00001A46                          1113              
00001A46  4241                    1114              CLR         D1                  ; Clear D1
00001A48  3218                    1115              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001A4A                          1116              
00001A4A                          1117              
00001A4A  4EB9 00001E08           1118              JSR         printEA
00001A50                          1119              
00001A50  43F9 00002467           1120              LEA         comma, A1           ; Display comma
00001A56  103C 000E               1121              MOVE.B      #14, D0             ; command for trap call to display message
00001A5A  4E4F                    1122              TRAP        #15                 ; trap call
00001A5C                          1123  
00001A5C  4242                    1124              CLR         D2
00001A5E  4243                    1125              CLR         D3
00001A60  1404                    1126              MOVE.B      D4,D2
00001A62  1605                    1127              MOVE.B      D5,D3
00001A64                          1128          
00001A64  4EB9 00001E08           1129              JSR         printEA
00001A6A                          1130          
00001A6A                          1131          
00001A6A  43F9 0000245C           1132              LEA         newLine, A1           ; Display space
00001A70  103C 000E               1133              MOVE.B      #14, D0             ; command for trap call to display message
00001A74  4E4F                    1134              TRAP        #15                 ; trap call            
00001A76                          1135  
00001A76                          1136  
00001A76  6000 F594               1137              BRA         LOOP                ; go back to the loop
00001A7A                          1138  
00001A7A                          1139  opMOVEW
00001A7A                          1140          
00001A7A  4245                    1141              CLR         D5                  ; Clear D5
00001A7C  1A01                    1142              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001A7E  E245                    1143              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001A80  CA7C 0007               1144              AND         #seven,D5
00001A84                          1145          
00001A84  4244                    1146              CLR         D4                  ; Clear out D4
00001A86  1801                    1147              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001A88  C87C 0001               1148              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001A8C                          1149          
00001A8C  4241                    1150              CLR          D1
00001A8E  4242                    1151              CLR          D2
00001A90  1218                    1152              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001A92  1401                    1153              MOVE.B      D1,D2
00001A94  EC42                    1154              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001A96  D842                    1155              ADD         D2,D4               ; Adds the remaining bits to D4
00001A98                          1156          
00001A98  B87C 0001               1157              CMP         #one,D4             ; Check if it is MOVEA
00001A9C  6700 006C               1158              BEQ         opMOVEAW            ; If it is, branch off
00001AA0                          1159              
00001AA0  43F9 0000247F           1160              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001AA6  103C 000E               1161              MOVE.B      #14, D0             ; command for trap call to display message
00001AAA  4E4F                    1162              TRAP        #15                 ; trap call  
00001AAC                          1163              
00001AAC  43F9 000024F6           1164              LEA         dispWord,A1
00001AB2  103C 000E               1165              MOVE.B      #14, D0             ; command for trap call to display message
00001AB6  4E4F                    1166              TRAP        #15                 ; trap call
00001AB8                          1167              
00001AB8  43F9 00002460           1168              LEA         space, A1           ; create spaces
00001ABE  103C 000E               1169              MOVE.B      #14, D0             ; command for trap call to display message
00001AC2  4E4F                    1170              TRAP        #15                 ; trap call
00001AC4                          1171          
00001AC4  4242                    1172              CLR         D2
00001AC6  1401                    1173              MOVE.B      D1,D2               ; Copy new byte over to D2
00001AC8  E642                    1174              ASR         #three,D2           ; Shift source register out
00001ACA  C47C 0007               1175              AND         #seven,D2           ; Set everything to 0 except for the mode
00001ACE                          1176          
00001ACE  4243                    1177              CLR         D3
00001AD0  1601                    1178              MOVE.B      D1,D3
00001AD2  C67C 0007               1179              AND         #seven,D3
00001AD6                          1180              
00001AD6  4241                    1181              CLR         D1                  ; Clear D1
00001AD8  3218                    1182              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001ADA                          1183              
00001ADA  4EB9 00001E08           1184              JSR         printEA
00001AE0                          1185              
00001AE0  43F9 00002467           1186              LEA         comma, A1           ; Display comma
00001AE6  103C 000E               1187              MOVE.B      #14, D0             ; command for trap call to display message
00001AEA  4E4F                    1188              TRAP        #15                 ; trap call
00001AEC                          1189          
00001AEC  4242                    1190              CLR         D2
00001AEE  4243                    1191              CLR         D3
00001AF0  1404                    1192              MOVE.B      D4,D2
00001AF2  1605                    1193              MOVE.B      D5,D3
00001AF4                          1194              
00001AF4                          1195  
00001AF4                          1196              
00001AF4  4EB9 00001E08           1197              JSR         printEA
00001AFA                          1198          
00001AFA                          1199          
00001AFA  43F9 0000245C           1200              LEA         newLine, A1           ; Display space
00001B00  103C 000E               1201              MOVE.B      #14, D0             ; command for trap call to display message
00001B04  4E4F                    1202              TRAP        #15                 ; trap call            
00001B06                          1203  
00001B06                          1204  
00001B06  6000 F504               1205              BRA         LOOP                ; go back to the loop
00001B0A                          1206  opMOVEAW  
00001B0A  43F9 00002484           1207              LEA         MOVEAmatch,A1
00001B10  103C 000E               1208              MOVE.B      #14, D0             ; command for trap call to display message
00001B14  4E4F                    1209              TRAP        #15                 ; trap call
00001B16                          1210              
00001B16  43F9 000024F6           1211              LEA         dispWord,A1
00001B1C  103C 000E               1212              MOVE.B      #14, D0             ; command for trap call to display message
00001B20  4E4F                    1213              TRAP        #15                 ; trap call
00001B22                          1214              
00001B22                          1215  
00001B22  43F9 00002460           1216              LEA         space, A1           ; create spaces
00001B28  103C 000E               1217              MOVE.B      #14, D0             ; command for trap call to display message
00001B2C  4E4F                    1218              TRAP        #15                 ; trap call
00001B2E                          1219              
00001B2E  4242                    1220              CLR         D2
00001B30  1401                    1221              MOVE.B      D1,D2               ; Copy new byte over to D2
00001B32  E642                    1222              ASR         #three,D2           ; Shift source register out
00001B34  C47C 0007               1223              AND         #seven,D2           ; Set everything to 0 except for the mode
00001B38                          1224          
00001B38  4243                    1225              CLR         D3
00001B3A  1601                    1226              MOVE.B      D1,D3
00001B3C  C67C 0007               1227              AND         #seven,D3
00001B40                          1228              
00001B40  4241                    1229              CLR         D1                  ; Clear D1
00001B42  3218                    1230              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001B44                          1231              
00001B44                          1232              
00001B44  4EB9 00001E08           1233              JSR         printEA
00001B4A                          1234              
00001B4A  43F9 00002467           1235              LEA         comma, A1           ; Display comma
00001B50  103C 000E               1236              MOVE.B      #14, D0             ; command for trap call to display message
00001B54  4E4F                    1237              TRAP        #15                 ; trap call
00001B56                          1238  
00001B56  4242                    1239              CLR         D2
00001B58  4243                    1240              CLR         D3
00001B5A  1404                    1241              MOVE.B      D4,D2
00001B5C  1605                    1242              MOVE.B      D5,D3
00001B5E                          1243          
00001B5E  4EB9 00001E08           1244              JSR         printEA
00001B64                          1245          
00001B64                          1246          
00001B64  43F9 0000245C           1247              LEA         newLine, A1           ; Display space
00001B6A  103C 000E               1248              MOVE.B      #14, D0             ; command for trap call to display message
00001B6E  4E4F                    1249              TRAP        #15                 ; trap call            
00001B70                          1250  
00001B70                          1251  
00001B70  6000 F49A               1252              BRA         LOOP                ; go back to the loop
00001B74                          1253  
00001B74                          1254  opNEG   
00001B74  43F9 0000248A           1255              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001B7A  103C 000E               1256              MOVE.B      #14, D0             ; command for trap call to display message
00001B7E  4E4F                    1257              TRAP        #15                 ; trap call
00001B80                          1258          
00001B80                          1259          
00001B80  1218                    1260              MOVE.B      (A0)+, D1
00001B82  1401                    1261              MOVE.B      D1,D2               ; copy data over
00001B84  EC42                    1262              ASR         #six,D2
00001B86                          1263              
00001B86  B47C 0000               1264              CMP         #zero,D2
00001B8A  6700 0016               1265              BEQ         opNEGB
00001B8E  B47C 0001               1266              CMP         #one,D2
00001B92  6700 004E               1267              BEQ         opNEGL
00001B96  B47C 0002               1268              CMP         #two,D2
00001B9A  6700 0086               1269              BEQ         opNEGW
00001B9E  6000 08B2               1270              BRA         INVALID
00001BA2                          1271  opNEGB
00001BA2                          1272  
00001BA2  43F9 000024F3           1273              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001BA8  103C 000E               1274              MOVE.B      #14, D0             ; command for trap call to display message
00001BAC  4E4F                    1275              TRAP        #15                 ; trap call
00001BAE                          1276          
00001BAE  43F9 00002460           1277              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001BB4  103C 000E               1278              MOVE.B      #14, D0             ; command for trap call to display message
00001BB8  4E4F                    1279              TRAP        #15                 ; trap call
00001BBA                          1280          
00001BBA  4242                    1281              CLR         D2                  ; Clear Data register 2
00001BBC  3401                    1282              MOVE        D1,D2               ; Move byte into D2
00001BBE  E642                    1283              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001BC0  C47C 0007               1284              AND         #seven,D2           ; Stores mode
00001BC4                          1285              
00001BC4  4243                    1286              CLR         D3
00001BC6  3601                    1287              MOVE        D1,D3
00001BC8  C67C 0007               1288              AND         #seven,D3
00001BCC                          1289          
00001BCC  4EB9 00001E08           1290              JSR         printEA
00001BD2                          1291                  
00001BD2  43F9 0000245C           1292              LEA         newLine, A1           ; Display space
00001BD8  103C 000E               1293              MOVE.B      #14, D0             ; command for trap call to display message
00001BDC  4E4F                    1294              TRAP        #15                 ; trap call  
00001BDE                          1295          
00001BDE  6000 F42C               1296              BRA         LOOP
00001BE2                          1297                  
00001BE2                          1298  
00001BE2                          1299  opNEGL
00001BE2                          1300  
00001BE2  43F9 000024F9           1301              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001BE8  103C 000E               1302              MOVE.B      #14, D0             ; command for trap call to display message
00001BEC  4E4F                    1303              TRAP        #15                 ; trap call
00001BEE                          1304  
00001BEE  43F9 00002460           1305              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001BF4  103C 000E               1306              MOVE.B      #14, D0             ; command for trap call to display message
00001BF8  4E4F                    1307              TRAP        #15                 ; trap call
00001BFA                          1308                  
00001BFA  4242                    1309              CLR         D2                  ; Clear Data register 2
00001BFC  3401                    1310              MOVE        D1,D2               ; Move byte into D2
00001BFE  E642                    1311              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001C00  C47C 0007               1312              AND         #seven,D2           ; Stores mode
00001C04                          1313          
00001C04  4243                    1314              CLR         D3
00001C06  3601                    1315              MOVE        D1,D3
00001C08  C67C 0007               1316              AND         #seven,D3
00001C0C                          1317          
00001C0C  4EB9 00001E08           1318              JSR         printEA
00001C12                          1319                      
00001C12  43F9 0000245C           1320              LEA         newLine, A1         ; Display space
00001C18  103C 000E               1321              MOVE.B      #14, D0             ; command for trap call to display message
00001C1C  4E4F                    1322              TRAP        #15                 ; trap call  
00001C1E                          1323          
00001C1E  6000 F3EC               1324              BRA         LOOP
00001C22                          1325          
00001C22                          1326  
00001C22                          1327  opNEGW
00001C22                          1328  
00001C22  43F9 000024F6           1329              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001C28  103C 000E               1330              MOVE.B      #14, D0             ; command for trap call to display message
00001C2C  4E4F                    1331              TRAP        #15                 ; trap call
00001C2E                          1332          
00001C2E  43F9 00002460           1333              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001C34  103C 000E               1334              MOVE.B      #14, D0             ; command for trap call to display message
00001C38  4E4F                    1335              TRAP        #15                 ; trap call        
00001C3A                          1336                  
00001C3A  4242                    1337              CLR         D2                  ; Clear Data register 2
00001C3C  3401                    1338              MOVE        D1,D2               ; Move byte into D2
00001C3E  E642                    1339              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001C40  C47C 0007               1340              AND         #seven,D2           ; Stores mode
00001C44                          1341          
00001C44  4243                    1342              CLR         D3
00001C46  3601                    1343              MOVE        D1,D3
00001C48  C67C 0007               1344              AND         #seven,D3
00001C4C                          1345          
00001C4C  4EB9 00001E08           1346              JSR         printEA
00001C52                          1347              
00001C52  43F9 0000245C           1348              LEA         newLine, A1           ; Display space
00001C58  103C 000E               1349              MOVE.B      #14, D0             ; command for trap call to display message
00001C5C  4E4F                    1350              TRAP        #15                 ; trap call  
00001C5E                          1351          
00001C5E  6000 F3AC               1352              BRA         LOOP
00001C62                          1353  
00001C62                          1354  opRTSJSR
00001C62                          1355          
00001C62  1218                    1356              MOVE.B      (A0)+, D1
00001C64                          1357              
00001C64  1401                    1358              MOVE.B      D1,D2               ; copy data over
00001C66  B47C 0075               1359              CMP         #117,D2
00001C6A  6700 0050               1360              BEQ         opRTS
00001C6E                          1361              
00001C6E  EC42                    1362              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
00001C70  B47C 0002               1363              CMP         #two,D2             ; Checking if it is JSR
00001C74  6700 0006               1364              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001C78                          1365  
00001C78  6000 07D8               1366              BRA         invalid
00001C7C                          1367  
00001C7C                          1368  opJSR
00001C7C                          1369                        
00001C7C  43F9 00002492           1370              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001C82  103C 000E               1371              MOVE.B      #14, D0             ; command for trap call to display message
00001C86  4E4F                    1372              TRAP        #15                 ; trap call
00001C88                          1373              
00001C88  43F9 00002460           1374              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001C8E  103C 000E               1375              MOVE.B      #14, D0             ; command for trap call to display message
00001C92  4E4F                    1376              TRAP        #15                 ; trap call
00001C94                          1377              
00001C94  4242                    1378              CLR         D2
00001C96  4243                    1379              CLR         D3
00001C98                          1380              
00001C98  1401                    1381              MOVE.B      D1,D2
00001C9A  E642                    1382              ASR         #three,D2
00001C9C  C47C 0007               1383              AND         #seven,D2
00001CA0                          1384              
00001CA0  1601                    1385              MOVE.B      D1,D3
00001CA2  C67C 0007               1386              AND         #seven,D3
00001CA6                          1387              
00001CA6  4EB9 00001E08           1388              JSR         printEA
00001CAC                          1389              
00001CAC  43F9 0000245C           1390              LEA         newLine, A1           ; Display space
00001CB2  103C 000E               1391              MOVE.B      #14, D0             ; command for trap call to display message
00001CB6  4E4F                    1392              TRAP        #15                 ; trap call  
00001CB8                          1393              
00001CB8  6000 F352               1394              BRA         loop            
00001CBC                          1395  opRTS
00001CBC                          1396  
00001CBC  43F9 0000248E           1397              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
00001CC2  103C 000E               1398              MOVE.B      #14, D0             ; command for trap call to display message
00001CC6  4E4F                    1399              TRAP        #15                 ; trap call
00001CC8                          1400              
00001CC8  43F9 0000245C           1401              LEA         newLine, A1           ; Display space
00001CCE  103C 000E               1402              MOVE.B      #14, D0             ; command for trap call to display message
00001CD2  4E4F                    1403              TRAP        #15                 ; trap call 
00001CD4                          1404              
00001CD4  6000 F336               1405              BRA         loop
00001CD8                          1406  
00001CD8                          1407  opMOVEMLEA
00001CD8  4242                    1408              CLR         D2                  ; Clear D2
00001CDA  1401                    1409              MOVE.B      D1,D2               ; Copy byte over
00001CDC  C47C 000F               1410              AND         #secNib,D2          ; Check only the second nibble
00001CE0  B47C 000C               1411              CMP         #twelve,D2          ; Compare the second nibble to twelve
00001CE4  6700 000E               1412              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
00001CE8  B47C 0008               1413              CMP         #eight,D2           ; Compare the second nibble to eight
00001CEC  6700 0006               1414              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
00001CF0  6000 001A               1415              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
00001CF4                          1416              
00001CF4                          1417  opMOVEM
00001CF4                          1418  
00001CF4  43F9 0000248E           1419              LEA         RTSMatch, A1       ; we know that the opcode will be MOVEM, so load A1 to print message
00001CFA  103C 000E               1420              MOVE.B      #14, D0             ; command for trap call to display message
00001CFE  4E4F                    1421              TRAP        #15                 ; trap call
00001D00                          1422              
00001D00  4244                    1423              CLR         D4                  ; Clearing D4 to store dr field
00001D02  1801                    1424              MOVE.B      D1,D4               ; Moving byte to find dr field
00001D04  E444                    1425              ASR         #two,D4             ; Moving dr field to readable spot
00001D06  C87C 0001               1426              AND         #one,D4             ; seting everything except dr to 0
00001D0A                          1427              
00001D0A  1218                    1428              MOVE.B      (A0)+, D1
00001D0C                          1429              
00001D0C                          1430  
00001D0C                          1431  opLEA
00001D0C                          1432  
00001D0C                          1433  ***********************************************************************************************************
00001D0C                          1434  *
00001D0C                          1435  *               SUBQ OPCODE
00001D0C                          1436  *
00001D0C                          1437  ***********************************************************************************************************
00001D0C                          1438  
00001D0C                          1439  opSUBQ      
00001D0C  43F9 000024A0           1440              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
00001D12  103C 000E               1441              MOVE.B      #14, D0             ; command for trap call to display message
00001D16  4E4F                    1442              TRAP        #15                 ; trap call
00001D18                          1443  
00001D18                          1444  ***********************************************************************************************************
00001D18                          1445  *
00001D18                          1446  *               BRA OPCODE
00001D18                          1447  *
00001D18                          1448  ***********************************************************************************************************
00001D18                          1449              
00001D18  43F9 000024A5           1450  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001D1E  103C 000E               1451          MOVE.B      #14, D0             ; command for trap call to display message
00001D22  4E4F                    1452          TRAP        #15                 ; trap call
00001D24                          1453          
00001D24  4242                    1454          CLR         D2
00001D26  4243                    1455          CLR         D3      
00001D28                          1456  
00001D28  43F9 00002460           1457          LEA         space,A1
00001D2E  103C 000E               1458          MOVE.B      #14,D0
00001D32  4E4F                    1459          TRAP        #15
00001D34                          1460          
00001D34  143C 0007               1461          MOVE.B      #seven,D2
00001D38  1218                    1462          MOVE.B      (A0)+,D1
00001D3A  4EB9 00001E08           1463          JSR         printEA
00001D40                          1464          
00001D40  43F9 0000245C           1465          LEA         newLine, A1           ; create new line
00001D46  103C 000E               1466          MOVE.B      #14, D0             ; command for trap call to display message
00001D4A  4E4F                    1467          TRAP        #15                 ; trap call
00001D4C                          1468  
00001D4C  6000 F2BE               1469          BRA         LOOP
00001D50                          1470          
00001D50                          1471          
00001D50  43F9 000024A9           1472  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001D56  103C 000E               1473          MOVE.B      #14, D0             ; command for trap call to display message
00001D5A  4E4F                    1474          TRAP        #15                 ; trap call
00001D5C                          1475  
00001D5C  43F9 000024AD           1476  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001D62  103C 000E               1477          MOVE.B      #14, D0             ; command for trap call to display message
00001D66  4E4F                    1478          TRAP        #15                 ; trap call
00001D68                          1479  
00001D68  43F9 000024B1           1480  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001D6E  103C 000E               1481          MOVE.B      #14, D0             ; command for trap call to display message
00001D72  4E4F                    1482          TRAP        #15                 ; trap call
00001D74                          1483  
00001D74  43F9 000024B5           1484  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001D7A  103C 000E               1485          MOVE.B      #14, D0             ; command for trap call to display message
00001D7E  4E4F                    1486          TRAP        #15                 ; trap call
00001D80                          1487  
00001D80                          1488  ***********************************************************************************************************
00001D80                          1489  *
00001D80                          1490  *               SUB OPCODE
00001D80                          1491  *
00001D80                          1492  ***********************************************************************************************************
00001D80                          1493  
00001D80  43F9 000024C1           1494  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001D86  103C 000E               1495          MOVE.B      #14, D0             ; command for trap call to display message
00001D8A  4E4F                    1496          TRAP        #15                 ; trap call
00001D8C                          1497          
00001D8C                          1498          
00001D8C                          1499          
00001D8C  43F9 00002460           1500          LEA         space,A1
00001D92  103C 000E               1501          MOVE.B      #14,D0
00001D96  4E4F                    1502          TRAP        #15
00001D98                          1503          
00001D98  1218                    1504          MOVE.B      (A0)+,D1
00001D9A  1401                    1505          MOVE.B      D1,D2
00001D9C  E842                    1506          ASR         #4,D2
00001D9E                          1507          
00001D9E  4EB9 00001E08           1508          JSR         printEA
00001DA4                          1509          
00001DA4  43F9 0000245C           1510          LEA         newLine,A1
00001DAA  103C 000E               1511          MOVE.B      #14,D0
00001DAE  4E4F                    1512          TRAP        #15
00001DB0                          1513          
00001DB0  6000 F25A               1514          BRA         LOOP
00001DB4                          1515          
00001DB4                          1516          
00001DB4                          1517          
00001DB4  43F9 000024CD           1518  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001DBA  103C 000E               1519          MOVE.B      #14, D0             ; command for trap call to display message
00001DBE  4E4F                    1520          TRAP        #15                 ; trap call
00001DC0                          1521  
00001DC0  43F9 000024E7           1522  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001DC6  103C 000E               1523          MOVE.B      #14, D0             ; command for trap call to display message
00001DCA  4E4F                    1524          TRAP        #15                 ; trap call
00001DCC                          1525  
00001DCC  43F9 000024E3           1526  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001DD2  103C 000E               1527          MOVE.B      #14, D0             ; command for trap call to display message
00001DD6  4E4F                    1528          TRAP        #15                 ; trap call
00001DD8                          1529  
00001DD8  43F9 000024DF           1530  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00001DDE  103C 000E               1531          MOVE.B      #14, D0             ; command for trap call to display message
00001DE2  4E4F                    1532          TRAP        #15                 ; trap call
00001DE4                          1533  
00001DE4  43F9 000024DB           1534  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001DEA  103C 000E               1535          MOVE.B      #14, D0             ; command for trap call to display message
00001DEE  4E4F                    1536          TRAP        #15                 ; trap call
00001DF0                          1537  
00001DF0  43F9 000024EF           1538  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001DF6  103C 000E               1539          MOVE.B      #14, D0             ; command for trap call to display message
00001DFA  4E4F                    1540          TRAP        #15                 ; trap call
00001DFC                          1541  
00001DFC  43F9 000024EB           1542  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001E02  103C 000E               1543          MOVE.B      #14, D0             ; command for trap call to display message
00001E06  4E4F                    1544          TRAP        #15                 ; trap call
00001E08                          1545  
00001E08                          1546  
00001E08                          1547          
00001E08                          1548  ***********************************************************************************************************
00001E08                          1549  *
00001E08                          1550  *                                           EA Print Check
00001E08                          1551  *
00001E08                          1552  ***********************************************************************************************************
00001E08  48E7 FF7E               1553  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00001E0C                          1554  
00001E0C  B43C 0000               1555              CMP.B       #zero, D2
00001E10  6700 002E               1556              BEQ         pDataReg
00001E14  B43C 0001               1557              CMP.B       #one, D2
00001E18  6700 00E6               1558              BEQ         pAddrReg
00001E1C  B43C 0002               1559              CMP.B       #two, D2
00001E20  6700 019E               1560              BEQ         pAddrDir
00001E24  B43C 0003               1561              CMP.B       #three, D2
00001E28  6700 02C2               1562              BEQ         pAddrPost
00001E2C  B43C 0004               1563              CMP.B       #four, D2
00001E30  6700 0446               1564              BEQ         pAddrDec
00001E34  B43C 0007               1565              CMP.B       #seven, D2
00001E38  6700 0576               1566              BEQ         pHex
00001E3C  6000 0614               1567              BRA         invalid
00001E40                          1568  
00001E40                          1569  ***********************************************************************************************************
00001E40                          1570  * Data Register        
00001E40  B63C 0000               1571  pDataReg    CMP.B   #zero,D3
00001E44  6700 003A               1572              BEQ     displayD0
00001E48  B63C 0001               1573              CMP.B   #one,D3
00001E4C  6700 0042               1574              BEQ     displayD1
00001E50  B63C 0002               1575              CMP.B   #two,D3
00001E54  6700 004A               1576              BEQ     displayD2
00001E58  B63C 0003               1577              CMP.B   #three,D3
00001E5C  6700 0052               1578              BEQ     displayD3
00001E60  B63C 0004               1579              CMP.B   #four,D3
00001E64  6700 005A               1580              BEQ     displayD4
00001E68  B63C 0005               1581              CMP.B   #five,D3
00001E6C  6700 0062               1582              BEQ     displayD5
00001E70  B63C 0006               1583              CMP.B   #six,D3
00001E74  6700 006A               1584              BEQ     displayD6
00001E78  B63C 0007               1585              CMP.B   #seven,D3
00001E7C  6700 0072               1586              BEQ     displayD7
00001E80                          1587              
00001E80  43F9 00002516           1588  displayD0   LEA         dispD0, A1          ; Display space
00001E86  103C 000E               1589              MOVE.B      #14, D0             ; command for trap call to display message
00001E8A  4E4F                    1590              TRAP        #15                 ; trap call
00001E8C  6000 05C4               1591              BRA         endSUB              ; go to the end of the subroutine
00001E90                          1592              
00001E90  43F9 00002519           1593  displayD1   LEA         dispD1, A1          ; Display space
00001E96  103C 000E               1594              MOVE.B      #14, D0             ; command for trap call to display message
00001E9A  4E4F                    1595              TRAP        #15                 ; trap call
00001E9C  6000 05B4               1596              BRA         endSUB              ; go to the end of the subroutine
00001EA0                          1597  
00001EA0  43F9 0000251C           1598  displayD2   LEA         dispD2, A1          ; Display space
00001EA6  103C 000E               1599              MOVE.B      #14, D0             ; command for trap call to display message
00001EAA  4E4F                    1600              TRAP        #15                 ; trap call
00001EAC  6000 05A4               1601              BRA         endSUB              ; go to the end of the subroutine
00001EB0                          1602  
00001EB0  43F9 0000251F           1603  displayD3   LEA         dispD3, A1          ; Display space
00001EB6  103C 000E               1604              MOVE.B      #14, D0             ; command for trap call to display message
00001EBA  4E4F                    1605              TRAP        #15                 ; trap call
00001EBC  6000 0594               1606              BRA         endSUB              ; go to the end of the subroutine
00001EC0                          1607  
00001EC0  43F9 00002522           1608  displayD4   LEA         dispD4, A1          ; Display space
00001EC6  103C 000E               1609              MOVE.B      #14, D0             ; command for trap call to display message
00001ECA  4E4F                    1610              TRAP        #15                 ; trap call
00001ECC  6000 0584               1611              BRA         endSUB              ; go to the end of the subroutine
00001ED0                          1612  
00001ED0  43F9 00002525           1613  displayD5   LEA         dispD5, A1          ; Display space
00001ED6  103C 000E               1614              MOVE.B      #14, D0             ; command for trap call to display message
00001EDA  4E4F                    1615              TRAP        #15                 ; trap call
00001EDC  6000 0574               1616              BRA         endSUB              ; go to the end of the subroutine
00001EE0                          1617  
00001EE0  43F9 00002528           1618  displayD6   LEA         dispD6, A1          ; Display space
00001EE6  103C 000E               1619              MOVE.B      #14, D0             ; command for trap call to display message
00001EEA  4E4F                    1620              TRAP        #15                 ; trap call
00001EEC  6000 0564               1621              BRA         endSUB              ; go to the end of the subroutine
00001EF0                          1622  
00001EF0  43F9 0000252B           1623  displayD7   LEA         dispD7, A1          ; Display space
00001EF6  103C 000E               1624              MOVE.B      #14, D0             ; command for trap call to display message
00001EFA  4E4F                    1625              TRAP        #15                 ; trap call
00001EFC  6000 0554               1626              BRA         endSUB              ; go to the end of the subroutine
00001F00                          1627  ***********************************************************************************************************
00001F00                          1628  * Address Register
00001F00  B63C 0000               1629  pAddrReg    CMP.B   #zero,D3
00001F04  6700 003A               1630              BEQ     displayA0
00001F08  B63C 0001               1631              CMP.B   #one,D3
00001F0C  6700 0042               1632              BEQ     displayA1
00001F10  B63C 0002               1633              CMP.B   #two,D3
00001F14  6700 004A               1634              BEQ     displayA2
00001F18  B63C 0003               1635              CMP.B   #three,D3
00001F1C  6700 0052               1636              BEQ     displayA3
00001F20  B63C 0004               1637              CMP.B   #four,D3
00001F24  6700 005A               1638              BEQ     displayA4
00001F28  B63C 0005               1639              CMP.B   #five,D3
00001F2C  6700 0062               1640              BEQ     displayA5
00001F30  B63C 0006               1641              CMP.B   #six,D3
00001F34  6700 006A               1642              BEQ     displayA6
00001F38  B63C 0007               1643              CMP.B   #seven,D3
00001F3C  6700 0072               1644              BEQ     displayA7
00001F40                          1645              
00001F40  43F9 000024FC           1646  displayA0   LEA         dispA0, A1          ; Display space
00001F46  103C 000E               1647              MOVE.B      #14, D0             ; command for trap call to display message
00001F4A  4E4F                    1648              TRAP        #15                 ; trap call
00001F4C  6000 0504               1649              BRA         endSUB              ; go to the end of the subroutine
00001F50                          1650              
00001F50  43F9 000024FF           1651  displayA1   LEA         dispA1, A1          ; Display space
00001F56  103C 000E               1652              MOVE.B      #14, D0             ; command for trap call to display message
00001F5A  4E4F                    1653              TRAP        #15                 ; trap call
00001F5C  6000 04F4               1654              BRA         endSUB              ; go to the end of the subroutine
00001F60                          1655  
00001F60  43F9 00002502           1656  displayA2   LEA         dispA2, A1          ; Display space
00001F66  103C 000E               1657              MOVE.B      #14, D0             ; command for trap call to display message
00001F6A  4E4F                    1658              TRAP        #15                 ; trap call
00001F6C  6000 04E4               1659              BRA         endSUB              ; go to the end of the subroutine
00001F70                          1660  
00001F70  43F9 00002505           1661  displayA3   LEA         dispA3, A1          ; Display space
00001F76  103C 000E               1662              MOVE.B      #14, D0             ; command for trap call to display message
00001F7A  4E4F                    1663              TRAP        #15                 ; trap call
00001F7C  6000 04D4               1664              BRA         endSUB              ; go to the end of the subroutine
00001F80                          1665  
00001F80  43F9 00002508           1666  displayA4   LEA         dispA4, A1          ; Display space
00001F86  103C 000E               1667              MOVE.B      #14, D0             ; command for trap call to display message
00001F8A  4E4F                    1668              TRAP        #15                 ; trap call
00001F8C  6000 04C4               1669              BRA         endSUB              ; go to the end of the subroutine
00001F90                          1670  
00001F90  43F9 0000250B           1671  displayA5   LEA         dispA5, A1          ; Display space
00001F96  103C 000E               1672              MOVE.B      #14, D0             ; command for trap call to display message
00001F9A  4E4F                    1673              TRAP        #15                 ; trap call
00001F9C  6000 04B4               1674              BRA         endSUB              ; go to the end of the subroutine
00001FA0                          1675  
00001FA0  43F9 0000250E           1676  displayA6   LEA         dispA6, A1          ; Display space
00001FA6  103C 000E               1677              MOVE.B      #14, D0             ; command for trap call to display message
00001FAA  4E4F                    1678              TRAP        #15                 ; trap call
00001FAC  6000 04A4               1679              BRA         endSUB              ; go to the end of the subroutine
00001FB0                          1680  
00001FB0  43F9 00002511           1681  displayA7   LEA         dispA7, A1          ; Display space
00001FB6  103C 000E               1682              MOVE.B      #14, D0             ; command for trap call to display message
00001FBA  4E4F                    1683              TRAP        #15                 ; trap call
00001FBC  6000 0494               1684              BRA         endSUB              ; go to the end of the subroutine
00001FC0                          1685  
00001FC0                          1686  ***********************************************************************************************************
00001FC0                          1687  * Address Register Direct
00001FC0                          1688  
00001FC0  43F9 00002469           1689  pAddrDir    LEA         opPer, A1           ; Display space
00001FC6  103C 000E               1690              MOVE.B      #14, D0             ; command for trap call to display message
00001FCA  4E4F                    1691              TRAP        #15                 ; trap call
00001FCC                          1692              
00001FCC  B63C 0000               1693              CMP.B   #zero,D3
00001FD0  6700 003A               1694              BEQ     displayA0A
00001FD4  B63C 0001               1695              CMP.B   #one,D3
00001FD8  6700 004E               1696              BEQ     displayA1A
00001FDC  B63C 0002               1697              CMP.B   #two,D3
00001FE0  6700 0062               1698              BEQ     displayA2A
00001FE4  B63C 0003               1699              CMP.B   #three,D3
00001FE8  6700 0076               1700              BEQ     displayA3A
00001FEC  B63C 0004               1701              CMP.B   #four,D3
00001FF0  6700 008A               1702              BEQ     displayA4A
00001FF4  B63C 0005               1703              CMP.B   #five,D3
00001FF8  6700 009E               1704              BEQ     displayA5A
00001FFC  B63C 0006               1705              CMP.B   #six,D3
00002000  6700 00B2               1706              BEQ     displayA6A
00002004  B63C 0007               1707              CMP.B   #seven,D3
00002008  6700 00C6               1708              BEQ     displayA7A
0000200C                          1709              
0000200C  43F9 000024FC           1710  displayA0A  LEA         dispA0, A1          ; Display space
00002012  103C 000E               1711              MOVE.B      #14, D0             ; command for trap call to display message
00002016  4E4F                    1712              TRAP        #15                 ; trap call
00002018  43F9 0000246B           1713              LEA         clPer, A1           ; Display space
0000201E  103C 000E               1714              MOVE.B      #14, D0             ; command for trap call to display message
00002022  4E4F                    1715              TRAP        #15                 ; trap call
00002024  6000 042C               1716              BRA         endSUB              ; go to the end of the subroutine
00002028                          1717              
00002028  43F9 000024FF           1718  displayA1A  LEA         dispA1, A1          ; Display space
0000202E  103C 000E               1719              MOVE.B      #14, D0             ; command for trap call to display message
00002032  4E4F                    1720              TRAP        #15                 ; trap call
00002034  43F9 0000246B           1721              LEA         clPer, A1           ; Display space
0000203A  103C 000E               1722              MOVE.B      #14, D0             ; command for trap call to display message
0000203E  4E4F                    1723              TRAP        #15                 ; trap call
00002040  6000 0410               1724              BRA         endSUB              ; go to the end of the subroutine
00002044                          1725  
00002044  43F9 00002502           1726  displayA2A  LEA         dispA2, A1          ; Display space
0000204A  103C 000E               1727              MOVE.B      #14, D0             ; command for trap call to display message
0000204E  4E4F                    1728              TRAP        #15                 ; trap call
00002050  43F9 0000246B           1729              LEA         clPer, A1           ; Display space
00002056  103C 000E               1730              MOVE.B      #14, D0             ; command for trap call to display message
0000205A  4E4F                    1731              TRAP        #15                 ; trap call
0000205C  6000 03F4               1732              BRA         endSUB              ; go to the end of the subroutine
00002060                          1733  
00002060  43F9 00002505           1734  displayA3A  LEA         dispA3, A1          ; Display space
00002066  103C 000E               1735              MOVE.B      #14, D0             ; command for trap call to display message
0000206A  4E4F                    1736              TRAP        #15                 ; trap call
0000206C  43F9 0000246B           1737              LEA         clPer, A1           ; Display space
00002072  103C 000E               1738              MOVE.B      #14, D0             ; command for trap call to display message
00002076  4E4F                    1739              TRAP        #15                 ; trap call
00002078  6000 03D8               1740              BRA         endSUB              ; go to the end of the subroutine
0000207C                          1741  
0000207C  43F9 00002508           1742  displayA4A  LEA         dispA4, A1          ; Display space
00002082  103C 000E               1743              MOVE.B      #14, D0             ; command for trap call to display message
00002086  4E4F                    1744              TRAP        #15                 ; trap call
00002088  43F9 0000246B           1745              LEA         clPer, A1           ; Display space
0000208E  103C 000E               1746              MOVE.B      #14, D0             ; command for trap call to display message
00002092  4E4F                    1747              TRAP        #15                 ; trap call
00002094  6000 03BC               1748              BRA         endSUB              ; go to the end of the subroutine
00002098                          1749  
00002098  43F9 0000250B           1750  displayA5A  LEA         dispA5, A1          ; Display space
0000209E  103C 000E               1751              MOVE.B      #14, D0             ; command for trap call to display message
000020A2  4E4F                    1752              TRAP        #15                 ; trap call
000020A4  43F9 0000246B           1753              LEA         clPer, A1           ; Display space
000020AA  103C 000E               1754              MOVE.B      #14, D0             ; command for trap call to display message
000020AE  4E4F                    1755              TRAP        #15                 ; trap call
000020B0  6000 03A0               1756              BRA         endSUB              ; go to the end of the subroutine
000020B4                          1757  
000020B4  43F9 0000250E           1758  displayA6A  LEA         dispA6, A1          ; Display space
000020BA  103C 000E               1759              MOVE.B      #14, D0             ; command for trap call to display message
000020BE  4E4F                    1760              TRAP        #15                 ; trap call
000020C0  43F9 0000246B           1761              LEA         clPer, A1           ; Display space
000020C6  103C 000E               1762              MOVE.B      #14, D0             ; command for trap call to display message
000020CA  4E4F                    1763              TRAP        #15                 ; trap call
000020CC  6000 0384               1764              BRA         endSUB              ; go to the end of the subroutine
000020D0                          1765  
000020D0  43F9 00002511           1766  displayA7A  LEA         dispA7, A1          ; Display space
000020D6  103C 000E               1767              MOVE.B      #14, D0             ; command for trap call to display message
000020DA  4E4F                    1768              TRAP        #15                 ; trap call
000020DC  43F9 0000246B           1769              LEA         clPer, A1           ; Display space
000020E2  103C 000E               1770              MOVE.B      #14, D0             ; command for trap call to display message
000020E6  4E4F                    1771              TRAP        #15                 ; trap call
000020E8  6000 0368               1772              BRA         endSUB              ; go to the end of the subroutine
000020EC                          1773              
000020EC                          1774  ***********************************************************************************************************
000020EC                          1775  * Addr Postincrement
000020EC                          1776              
000020EC  43F9 00002469           1777  pAddrPost   LEA         opPer, A1           ; Display space
000020F2  103C 000E               1778              MOVE.B      #14, D0             ; command for trap call to display message
000020F6  4E4F                    1779              TRAP        #15                 ; trap call
000020F8                          1780              
000020F8  B63C 0000               1781              CMP.B   #zero,D3
000020FC  6700 003A               1782              BEQ     displayA0P
00002100  B63C 0001               1783              CMP.B   #one,D3
00002104  6700 005A               1784              BEQ     displayA1P
00002108  B63C 0002               1785              CMP.B   #two,D3
0000210C  6700 007A               1786              BEQ     displayA2P
00002110  B63C 0003               1787              CMP.B   #three,D3
00002114  6700 009A               1788              BEQ     displayA3P
00002118  B63C 0004               1789              CMP.B   #four,D3
0000211C  6700 00BA               1790              BEQ     displayA4P
00002120  B63C 0005               1791              CMP.B   #five,D3
00002124  6700 00DA               1792              BEQ     displayA5P
00002128  B63C 0006               1793              CMP.B   #six,D3
0000212C  6700 00FA               1794              BEQ     displayA6P
00002130  B63C 0007               1795              CMP.B   #seven,D3
00002134  6700 011A               1796              BEQ     displayA7P
00002138                          1797              
00002138  43F9 000024FC           1798  displayA0P  LEA         dispA0, A1          ; Display space
0000213E  103C 000E               1799              MOVE.B      #14, D0             ; command for trap call to display message
00002142  4E4F                    1800              TRAP        #15                 ; trap call
00002144  43F9 0000246B           1801              LEA         clPer, A1           ; Display space
0000214A  103C 000E               1802              MOVE.B      #14, D0             ; command for trap call to display message
0000214E  4E4F                    1803              TRAP        #15                 ; trap call
00002150  43F9 0000246F           1804              LEA         inc, A1             ; Display space
00002156  103C 000E               1805              MOVE.B      #14, D0             ; command for trap call to display message
0000215A  4E4F                    1806              TRAP        #15                 ; trap call
0000215C  6000 02F4               1807              BRA         endSUB              ; go to the end of the subroutine
00002160                          1808              
00002160  43F9 000024FF           1809  displayA1P  LEA         dispA1, A1          ; Display space
00002166  103C 000E               1810              MOVE.B      #14, D0             ; command for trap call to display message
0000216A  4E4F                    1811              TRAP        #15                 ; trap call
0000216C  43F9 0000246B           1812              LEA         clPer, A1           ; Display space
00002172  103C 000E               1813              MOVE.B      #14, D0             ; command for trap call to display message
00002176  4E4F                    1814              TRAP        #15                 ; trap call
00002178  43F9 0000246F           1815              LEA         inc, A1             ; Display space
0000217E  103C 000E               1816              MOVE.B      #14, D0             ; command for trap call to display message
00002182  4E4F                    1817              TRAP        #15                 ; trap call
00002184  6000 02CC               1818              BRA         endSUB              ; go to the end of the subroutine
00002188                          1819  
00002188  43F9 00002502           1820  displayA2P  LEA         dispA2, A1          ; Display space
0000218E  103C 000E               1821              MOVE.B      #14, D0             ; command for trap call to display message
00002192  4E4F                    1822              TRAP        #15                 ; trap call
00002194  43F9 0000246B           1823              LEA         clPer, A1           ; Display space
0000219A  103C 000E               1824              MOVE.B      #14, D0             ; command for trap call to display message
0000219E  4E4F                    1825              TRAP        #15                 ; trap call
000021A0  43F9 0000246F           1826              LEA         inc, A1             ; Display space
000021A6  103C 000E               1827              MOVE.B      #14, D0             ; command for trap call to display message
000021AA  4E4F                    1828              TRAP        #15                 ; trap call
000021AC  6000 02A4               1829              BRA         endSUB              ; go to the end of the subroutine
000021B0                          1830  
000021B0  43F9 00002505           1831  displayA3P  LEA         dispA3, A1          ; Display space
000021B6  103C 000E               1832              MOVE.B      #14, D0             ; command for trap call to display message
000021BA  4E4F                    1833              TRAP        #15                 ; trap call
000021BC  43F9 0000246B           1834              LEA         clPer, A1           ; Display space
000021C2  103C 000E               1835              MOVE.B      #14, D0             ; command for trap call to display message
000021C6  4E4F                    1836              TRAP        #15                 ; trap call
000021C8  43F9 0000246F           1837              LEA         inc, A1             ; Display space
000021CE  103C 000E               1838              MOVE.B      #14, D0             ; command for trap call to display message
000021D2  4E4F                    1839              TRAP        #15                 ; trap call
000021D4  6000 027C               1840              BRA         endSUB              ; go to the end of the subroutine
000021D8                          1841  
000021D8  43F9 00002508           1842  displayA4P  LEA         dispA4, A1          ; Display space
000021DE  103C 000E               1843              MOVE.B      #14, D0             ; command for trap call to display message
000021E2  4E4F                    1844              TRAP        #15                 ; trap call
000021E4  43F9 0000246B           1845              LEA         clPer, A1           ; Display space
000021EA  103C 000E               1846              MOVE.B      #14, D0             ; command for trap call to display message
000021EE  4E4F                    1847              TRAP        #15                 ; trap call
000021F0  43F9 0000246F           1848              LEA         inc, A1             ; Display space
000021F6  103C 000E               1849              MOVE.B      #14, D0             ; command for trap call to display message
000021FA  4E4F                    1850              TRAP        #15                 ; trap call
000021FC  6000 0254               1851              BRA         endSUB              ; go to the end of the subroutine
00002200                          1852  
00002200  43F9 0000250B           1853  displayA5P  LEA         dispA5, A1          ; Display space
00002206  103C 000E               1854              MOVE.B      #14, D0             ; command for trap call to display message
0000220A  4E4F                    1855              TRAP        #15                 ; trap call
0000220C  43F9 0000246B           1856              LEA         clPer, A1           ; Display space
00002212  103C 000E               1857              MOVE.B      #14, D0             ; command for trap call to display message
00002216  4E4F                    1858              TRAP        #15                 ; trap call
00002218  43F9 0000246F           1859              LEA         inc, A1             ; Display space
0000221E  103C 000E               1860              MOVE.B      #14, D0             ; command for trap call to display message
00002222  4E4F                    1861              TRAP        #15                 ; trap call
00002224  6000 022C               1862              BRA         endSUB              ; go to the end of the subroutine
00002228                          1863  
00002228  43F9 0000250E           1864  displayA6P  LEA         dispA6, A1          ; Display space
0000222E  103C 000E               1865              MOVE.B      #14, D0             ; command for trap call to display message
00002232  4E4F                    1866              TRAP        #15                 ; trap call
00002234  43F9 0000246B           1867              LEA         clPer, A1           ; Display space
0000223A  103C 000E               1868              MOVE.B      #14, D0             ; command for trap call to display message
0000223E  4E4F                    1869              TRAP        #15                 ; trap call
00002240  43F9 0000246F           1870              LEA         inc, A1             ; Display space
00002246  103C 000E               1871              MOVE.B      #14, D0             ; command for trap call to display message
0000224A  4E4F                    1872              TRAP        #15                 ; trap call
0000224C  6000 0204               1873              BRA         endSUB              ; go to the end of the subroutine
00002250                          1874  
00002250  43F9 00002511           1875  displayA7P  LEA         dispA7, A1          ; Display space
00002256  103C 000E               1876              MOVE.B      #14, D0             ; command for trap call to display message
0000225A  4E4F                    1877              TRAP        #15                 ; trap call
0000225C  43F9 0000246B           1878              LEA         clPer, A1           ; Display space
00002262  103C 000E               1879              MOVE.B      #14, D0             ; command for trap call to display message
00002266  4E4F                    1880              TRAP        #15                 ; trap call
00002268  43F9 0000246F           1881              LEA         inc, A1             ; Display space
0000226E  103C 000E               1882              MOVE.B      #14, D0             ; command for trap call to display message
00002272  4E4F                    1883              TRAP        #15                 ; trap call
00002274  6000 01DC               1884              BRA         endSUB              ; go to the end of the subroutine
00002278                          1885  
00002278                          1886  ***********************************************************************************************************
00002278                          1887  * Addr Postdecrement
00002278                          1888  
00002278  43F9 0000246D           1889  pAddrDec    LEA         dec, A1             ; Display space
0000227E  103C 000E               1890              MOVE.B      #14, D0             ; command for trap call to display message
00002282  4E4F                    1891              TRAP        #15                 ; trap call
00002284                          1892              
00002284  43F9 00002469           1893              LEA         opPer, A1           ; Display space
0000228A  103C 000E               1894              MOVE.B      #14, D0             ; command for trap call to display message
0000228E  4E4F                    1895              TRAP        #15                 ; trap call
00002290                          1896              
00002290  B63C 0000               1897              CMP.B   #zero,D3
00002294  6700 003A               1898              BEQ     displayA0D
00002298  B63C 0001               1899              CMP.B   #one,D3
0000229C  6700 004E               1900              BEQ     displayA1D
000022A0  B63C 0002               1901              CMP.B   #two,D3
000022A4  6700 0062               1902              BEQ     displayA2D
000022A8  B63C 0003               1903              CMP.B   #three,D3
000022AC  6700 0076               1904              BEQ     displayA3D
000022B0  B63C 0004               1905              CMP.B   #four,D3
000022B4  6700 008A               1906              BEQ     displayA4D
000022B8  B63C 0005               1907              CMP.B   #five,D3
000022BC  6700 009E               1908              BEQ     displayA5D
000022C0  B63C 0006               1909              CMP.B   #six,D3
000022C4  6700 00B2               1910              BEQ     displayA6D
000022C8  B63C 0007               1911              CMP.B   #seven,D3
000022CC  6700 00C6               1912              BEQ     displayA7D
000022D0                          1913              
000022D0  43F9 000024FC           1914  displayA0D  LEA         dispA0, A1          ; Display space
000022D6  103C 000E               1915              MOVE.B      #14, D0             ; command for trap call to display message
000022DA  4E4F                    1916              TRAP        #15                 ; trap call
000022DC  43F9 0000246B           1917              LEA         clPer, A1           ; Display space
000022E2  103C 000E               1918              MOVE.B      #14, D0             ; command for trap call to display message
000022E6  4E4F                    1919              TRAP        #15                 ; trap call
000022E8  6000 0168               1920              BRA         endSUB              ; go to the end of the subroutine
000022EC                          1921              
000022EC  43F9 000024FF           1922  displayA1D  LEA         dispA1, A1          ; Display space
000022F2  103C 000E               1923              MOVE.B      #14, D0             ; command for trap call to display message
000022F6  4E4F                    1924              TRAP        #15                 ; trap call
000022F8  43F9 0000246B           1925              LEA         clPer, A1           ; Display space
000022FE  103C 000E               1926              MOVE.B      #14, D0             ; command for trap call to display message
00002302  4E4F                    1927              TRAP        #15                 ; trap call
00002304  6000 014C               1928              BRA         endSUB              ; go to the end of the subroutine
00002308                          1929  
00002308  43F9 00002502           1930  displayA2D  LEA         dispA2, A1          ; Display space
0000230E  103C 000E               1931              MOVE.B      #14, D0             ; command for trap call to display message
00002312  4E4F                    1932              TRAP        #15                 ; trap call
00002314  43F9 0000246B           1933              LEA         clPer, A1           ; Display space
0000231A  103C 000E               1934              MOVE.B      #14, D0             ; command for trap call to display message
0000231E  4E4F                    1935              TRAP        #15                 ; trap call
00002320  6000 0130               1936              BRA         endSUB              ; go to the end of the subroutine
00002324                          1937  
00002324  43F9 00002505           1938  displayA3D  LEA         dispA3, A1          ; Display space
0000232A  103C 000E               1939              MOVE.B      #14, D0             ; command for trap call to display message
0000232E  4E4F                    1940              TRAP        #15                 ; trap call
00002330  43F9 0000246B           1941              LEA         clPer, A1           ; Display space
00002336  103C 000E               1942              MOVE.B      #14, D0             ; command for trap call to display message
0000233A  4E4F                    1943              TRAP        #15                 ; trap call
0000233C  6000 0114               1944              BRA         endSUB              ; go to the end of the subroutine
00002340                          1945  
00002340  43F9 00002508           1946  displayA4D  LEA         dispA4, A1          ; Display space
00002346  103C 000E               1947              MOVE.B      #14, D0             ; command for trap call to display message
0000234A  4E4F                    1948              TRAP        #15                 ; trap call
0000234C  43F9 0000246B           1949              LEA         clPer, A1           ; Display space
00002352  103C 000E               1950              MOVE.B      #14, D0             ; command for trap call to display message
00002356  4E4F                    1951              TRAP        #15                 ; trap call
00002358  6000 00F8               1952              BRA         endSUB              ; go to the end of the subroutine
0000235C                          1953  
0000235C  43F9 0000250B           1954  displayA5D  LEA         dispA5, A1          ; Display space
00002362  103C 000E               1955              MOVE.B      #14, D0             ; command for trap call to display message
00002366  4E4F                    1956              TRAP        #15                 ; trap call
00002368  43F9 0000246B           1957              LEA         clPer, A1           ; Display space
0000236E  103C 000E               1958              MOVE.B      #14, D0             ; command for trap call to display message
00002372  4E4F                    1959              TRAP        #15                 ; trap call
00002374  6000 00DC               1960              BRA         endSUB              ; go to the end of the subroutine
00002378                          1961  
00002378  43F9 0000250E           1962  displayA6D  LEA         dispA6, A1          ; Display space
0000237E  103C 000E               1963              MOVE.B      #14, D0             ; command for trap call to display message
00002382  4E4F                    1964              TRAP        #15                 ; trap call
00002384  43F9 0000246B           1965              LEA         clPer, A1           ; Display space
0000238A  103C 000E               1966              MOVE.B      #14, D0             ; command for trap call to display message
0000238E  4E4F                    1967              TRAP        #15                 ; trap call
00002390  6000 00C0               1968              BRA         endSUB              ; go to the end of the subroutine
00002394                          1969  
00002394  43F9 00002511           1970  displayA7D  LEA         dispA7, A1          ; Display space
0000239A  103C 000E               1971              MOVE.B      #14, D0             ; command for trap call to display message
0000239E  4E4F                    1972              TRAP        #15                 ; trap call
000023A0  43F9 0000246B           1973              LEA         clPer, A1           ; Display space
000023A6  103C 000E               1974              MOVE.B      #14, D0             ; command for trap call to display message
000023AA  4E4F                    1975              TRAP        #15                 ; trap call
000023AC  6000 00A4               1976              BRA         endSUB              ; go to the end of the subroutine
000023B0                          1977  
000023B0                          1978  
000023B0                          1979  ***********************************************************************************************************
000023B0                          1980  * Absolute Address
000023B0  B63C 0000               1981  pHex        CMP.B       #zero, D3
000023B4  6700 0012               1982              BEQ         AbsShort
000023B8  B63C 0001               1983              CMP.B       #one, D3
000023BC  6700 003C               1984              BEQ         AbsLong
000023C0  B63C 0004               1985              CMP.B       #four, D3
000023C4  6700 0066               1986              BEQ         DispImm
000023C8                          1987              
000023C8  43F9 00002469           1988  AbsShort    LEA         opPer, A1           ; Display space
000023CE  103C 000E               1989              MOVE.B      #14, D0             ; command for trap call to display message
000023D2  4E4F                    1990              TRAP        #15                 ; trap call
000023D4                          1991              
000023D4  43F9 00002465           1992              LEA         dispHex, A1         ; Display space
000023DA  103C 000E               1993              MOVE.B      #14, D0             ; command for trap call to display message
000023DE  4E4F                    1994              TRAP        #15                 ; trap call
000023E0                          1995              
000023E0  4241                    1996              CLR         D1
000023E2  3218                    1997              MOVE.W      (A0)+, D1
000023E4                          1998              
000023E4  103C 0003               1999              MOVE.B      #3, D0
000023E8  4E4F                    2000              TRAP        #15
000023EA                          2001              
000023EA  43F9 0000246B           2002              LEA         clPer, A1           ; Display space
000023F0  103C 000E               2003              MOVE.B      #14, D0             ; command for trap call to display message
000023F4  4E4F                    2004              TRAP        #15                 ; trap call
000023F6                          2005              
000023F6  6000 005A               2006              BRA         endSub
000023FA                          2007              
000023FA  43F9 00002469           2008  AbsLong     LEA         opPer, A1           ; Display space
00002400  103C 000E               2009              MOVE.B      #14, D0             ; command for trap call to display message
00002404  4E4F                    2010              TRAP        #15                 ; trap call
00002406                          2011              
00002406  43F9 00002465           2012              LEA         dispHex, A1         ; Display space
0000240C  103C 000E               2013              MOVE.B      #14, D0             ; command for trap call to display message
00002410  4E4F                    2014              TRAP        #15                 ; trap call
00002412                          2015              
00002412  4241                    2016              CLR         D1
00002414  2218                    2017              MOVE.L      (A0)+, D1
00002416                          2018              
00002416  103C 0003               2019              MOVE.B      #3, D0
0000241A  4E4F                    2020              TRAP        #15
0000241C                          2021              
0000241C  43F9 0000246B           2022              LEA         clPer, A1           ; Display space
00002422  103C 000E               2023              MOVE.B      #14, D0             ; command for trap call to display message
00002426  4E4F                    2024              TRAP        #15                 ; trap call
00002428                          2025              
00002428  6000 0028               2026              BRA         endSub
0000242C                          2027  
0000242C  43F9 00002463           2028  DispImm     LEA         hashTag, A1         ; Display space
00002432  103C 000E               2029              MOVE.B      #14, D0             ; command for trap call to display message
00002436  4E4F                    2030              TRAP        #15                 ; trap call
00002438                          2031              
00002438  4241                    2032              CLR         D1
0000243A  3218                    2033              MOVE.W      (A0)+, D1
0000243C                          2034  
0000243C  43F9 00002465           2035              LEA         dispHex, A1         ; Display space
00002442  103C 000E               2036              MOVE.B      #14, D0             ; command for trap call to display message
00002446  4E4F                    2037              TRAP        #15                 ; trap call
00002448                          2038              
00002448  103C 0003               2039              MOVE.B      #3, D0
0000244C  4E4F                    2040              TRAP        #15
0000244E                          2041  
0000244E  6000 0002               2042              BRA         endSub
00002452                          2043  
00002452                          2044  invalid
00002452                          2045  
00002452                          2046  endSUB
00002452                          2047          
00002452  4CDF 7EFF               2048          MOVEM.L  (SP)+, D0-D7/A1-A6
00002456  4E75                    2049          RTS
00002458                          2050  
00002458                          2051  ***********************************************************************************************************
00002458                          2052  ***********************************************************************************************************
00002458                          2053  ***********************************************************************************************************
00002458                          2054  
00002458                          2055  printInvalid
00002458                          2056  endPROG    
00002458                          2057  
00002458  FFFF FFFF               2058      SIMHALT                             ; halt simulator
0000245C                          2059  
0000245C= 20 0D 0A 00             2060  newLine     DC.B    ' ', CR, LF, 0
00002460= 20 20 00                2061  space       DC.B    '  ', 0
00002463                          2062  
00002463= 23 00                   2063  hashTag     DC.B    '#', 0
00002465= 24 00                   2064  dispHex     DC.B    '$', 0
00002467= 2C 00                   2065  comma       DC.B    ',', 0
00002469                          2066  
00002469= 28 00                   2067  opPer       DC.B    '(', 0
0000246B= 29 00                   2068  clPer       DC.B    ')', 0
0000246D= 2D 00                   2069  dec         DC.B    '-', 0
0000246F= 2B 00                   2070  inc         DC.B    '+', 0
00002471                          2071  
00002471= 4F 52 49 00             2072  ORImatch    DC.B    'ORI', 0
00002475= 43 4D 50 49 00          2073  CMPImatch   DC.B    'CMPI', 0
0000247A= 42 43 4C 52 00          2074  BCLRmatch   DC.B    'BCLR', 0
0000247F= 4D 4F 56 45 00          2075  MOVEmatch   DC.B    'MOVE', 0
00002484= 4D 4F 56 45 41 00       2076  MOVEAmatch  DC.B    'MOVEA', 0
0000248A= 4E 45 47 00             2077  NEGmatch    DC.B    'NEG', 0
0000248E= 52 54 53 00             2078  RTSmatch    DC.B    'RTS', 0
00002492= 4A 53 52 00             2079  JSRmatch    DC.B    'JSR', 0
00002496= 4D 4F 56 45 4D 00       2080  MOVEMmatch  DC.B    'MOVEM', 0
0000249C= 4C 45 41 00             2081  LEAmatch    DC.B    'LEA', 0
000024A0= 53 55 42 51 00          2082  SUBQmatch   DC.B    'SUBQ', 0
000024A5= 42 52 41 00             2083  BRAmatch    DC.B    'BRA', 0
000024A9= 42 43 53 00             2084  BCSmatch    DC.B    'BCS', 0
000024AD= 42 56 43 00             2085  BVCmatch    DC.B    'BVC', 0
000024B1= 42 47 45 00             2086  BGEmatch    DC.B    'BGE', 0
000024B5= 42 4C 54 00             2087  BLTmatch    DC.B    'BLT', 0
000024B9= 44 49 56 53 00          2088  DIVSmatch   DC.B    'DIVS', 0
000024BE= 4F 52 00                2089  ORmatch     DC.B    'OR', 0
000024C1= 53 55 42 00             2090  SUBmatch    DC.B    'SUB', 0
000024C5= 45 4F 52 00             2091  EORmatch    DC.B    'EOR', 0
000024C9= 43 4D 50 00             2092  CMPmatch    DC.B    'CMP', 0
000024CD= 4D 55 4C 53 00          2093  MULSmatch   DC.B    'MULS', 0
000024D2= 41 44 44 00             2094  ADDmatch    DC.B    'ADD', 0
000024D6= 41 44 44 41 00          2095  ADDAmatch   DC.B    'ADDA', 0
000024DB= 4C 53 52 00             2096  LSRmatch    DC.B    'LSR', 0
000024DF= 4C 53 4C 00             2097  LSLmatch    DC.B    'LSL', 0
000024E3= 41 53 52 00             2098  ASRmatch    DC.B    'ASR', 0
000024E7= 41 53 4C 00             2099  ASLmatch    DC.B    'ASL', 0
000024EB= 52 4F 52 00             2100  RORmatch    DC.B    'ROR', 0
000024EF= 52 4F 4C 00             2101  ROLmatch    DC.B    'ROL', 0
000024F3                          2102   
000024F3= 2E 42 00                2103  dispByte    DC.B    '.B', 0
000024F6= 2E 57 00                2104  dispWord    DC.B    '.W', 0
000024F9= 2E 4C 00                2105  dispLong    DC.B    '.L', 0
000024FC                          2106  
000024FC= 41 30 00                2107  dispA0      DC.B    'A0', 0
000024FF= 41 31 00                2108  dispA1      DC.B    'A1', 0
00002502= 41 32 00                2109  dispA2      DC.B    'A2', 0
00002505= 41 33 00                2110  dispA3      DC.B    'A3', 0
00002508= 41 34 00                2111  dispA4      DC.B    'A4', 0
0000250B= 41 35 00                2112  dispA5      DC.B    'A5', 0
0000250E= 41 36 00                2113  dispA6      DC.B    'A6', 0
00002511= 41 37 00                2114  dispA7      DC.B    'A7', 0
00002514                          2115  
00002514= 44 00                   2116  dispD       DC.B    'D',0
00002516= 44 30 00                2117  dispD0      DC.B    'D0', 0
00002519= 44 31 00                2118  dispD1      DC.B    'D1', 0
0000251C= 44 32 00                2119  dispD2      DC.B    'D2', 0
0000251F= 44 33 00                2120  dispD3      DC.B    'D3', 0
00002522= 44 34 00                2121  dispD4      DC.B    'D4', 0
00002525= 44 35 00                2122  dispD5      DC.B    'D5', 0
00002528= 44 36 00                2123  dispD6      DC.B    'D6', 0
0000252B= 44 37 00                2124  dispD7      DC.B    'D7', 0  
0000252E                          2125             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             23FA
ABSSHORT            23C8
ADDAMATCH           24D6
ADDMATCH            24D2
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            24E7
ASRMATCH            24E3
BCLRMATCH           247A
BCSMATCH            24A9
BGEMATCH            24B1
BLTMATCH            24B5
BRAEIGHT            110E
BRAELEVEN           112C
BRAFIVE             10DE
BRAFOUR             10C2
BRAFOURTEEN         114A
BRAMATCH            24A5
BRANINE             1128
BRAONE              10B6
BRASIX              10E2
BRATHIRTEEN         114A
BRATHREE            10BE
BRATWELVE           1146
BRATWO              10BA
BRAZERO             1086
BVCMATCH            24AD
CLPER               246B
CMPIMATCH           2475
CMPMATCH            24C9
COMMA               2467
CR                  D
DEC                 246D
DISPA0              24FC
DISPA1              24FF
DISPA2              2502
DISPA3              2505
DISPA4              2508
DISPA5              250B
DISPA6              250E
DISPA7              2511
DISPBYTE            24F3
DISPD               2514
DISPD0              2516
DISPD1              2519
DISPD2              251C
DISPD3              251F
DISPD4              2522
DISPD5              2525
DISPD6              2528
DISPD7              252B
DISPHEX             2465
DISPIMM             242C
DISPLAYA0           1F40
DISPLAYA0A          200C
DISPLAYA0D          22D0
DISPLAYA0P          2138
DISPLAYA1           1F50
DISPLAYA1A          2028
DISPLAYA1D          22EC
DISPLAYA1P          2160
DISPLAYA2           1F60
DISPLAYA2A          2044
DISPLAYA2D          2308
DISPLAYA2P          2188
DISPLAYA3           1F70
DISPLAYA3A          2060
DISPLAYA3D          2324
DISPLAYA3P          21B0
DISPLAYA4           1F80
DISPLAYA4A          207C
DISPLAYA4D          2340
DISPLAYA4P          21D8
DISPLAYA5           1F90
DISPLAYA5A          2098
DISPLAYA5D          235C
DISPLAYA5P          2200
DISPLAYA6           1FA0
DISPLAYA6A          20B4
DISPLAYA6D          2378
DISPLAYA6P          2228
DISPLAYA7           1FB0
DISPLAYA7A          20D0
DISPLAYA7D          2394
DISPLAYA7P          2250
DISPLAYD0           1E80
DISPLAYD1           1E90
DISPLAYD2           1EA0
DISPLAYD3           1EB0
DISPLAYD4           1EC0
DISPLAYD5           1ED0
DISPLAYD6           1EE0
DISPLAYD7           1EF0
DISPLONG            24F9
DISPWORD            24F6
DIVSMATCH           24B9
EIGHT               8
ELEVEN              B
ENDPROG             2458
ENDSUB              2452
EORMATCH            24C5
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             2463
INC                 246F
INVALID             2452
JSRMATCH            2492
LEAMATCH            249C
LF                  A
LOOP                100C
LSLMATCH            24DF
LSRMATCH            24DB
MOVEAMATCH          2484
MOVEMATCH           247F
MOVEMMATCH          2496
MULSMATCH           24CD
NEGMATCH            248A
NEWLINE             245C
NINE                9
ONE                 1
OPASL               1DC0
OPASR               1DCC
OPBCC               117E
OPBCLR              182A
OPBCS               1D50
OPBGE               1D68
OPBLT               1D74
OPBRA               1D18
OPBVC               1D5C
OPCMP               1424
OPCMPB              1456
OPCMPI              16B8
OPCMPIB             1704
OPCMPIL             17C8
OPCMPIW             1766
OPCMPL              150A
OPCMPW              14B0
OPDIVS              12D6
OPDYNBCLR           188E
OPEOR               12E6
OPEORB              1314
OPEORL              13CA
OPEORW              136E
OPJSR               1C7C
OPLEA               1D0C
OPLSL               1DD8
OPLSR               1DE4
OPMOVEAL            1A10
OPMOVEAW            1B0A
OPMOVEB             18FC
OPMOVEL             1980
OPMOVEM             1CF4
OPMOVEMLEA          1CD8
OPMOVEW             1A7A
OPMULS              1DB4
OPNEG               1B74
OPNEGB              1BA2
OPNEGL              1BE2
OPNEGW              1C22
OPOR                1184
OPORB               11C2
OPORI               1564
OPORIB              1592
OPORIL              1656
OPORIW              15F4
OPORL               1278
OPORW               121C
OPPER               2469
OPROL               1DF0
OPROR               1DFC
OPRTS               1CBC
OPRTSJSR            1C62
OPSUB               1D80
OPSUBQ              1D0C
ORIMATCH            2471
ORMATCH             24BE
PADDRDEC            2278
PADDRDIR            1FC0
PADDRPOST           20EC
PADDRREG            1F00
PDATAREG            1E40
PHEX                23B0
PRINTEA             1E08
PRINTINVALID        2458
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
ROLMATCH            24EF
RORMATCH            24EB
RTSMATCH            248E
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               2460
START               1000
SUBMATCH            24C1
SUBQMATCH           24A0
TEST_END            3009
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
