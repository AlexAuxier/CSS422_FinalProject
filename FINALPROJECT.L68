00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 12/6/2014 10:26:09 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =00003100                 11  test_end    EQU     $00003100   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000  =0000000F                 27  fifteen     EQU     $0F         ; defined hex value 15
00000000                            28  
00000000  =00000000                 29  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 30  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 31  s1L         EQU     %0010       ; long size 1
00000000                            32              
00000000  =00000000                 33  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 34  s2L         EQU     %0001       ; long size 2
00000000                            35  
00000000  =00000001                 36  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 37  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 38  s3L         EQU     %0010       ; long size 3
00000000                            39  
00000000  =00000000                 40  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 41  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 42  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 43  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 44  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 45  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            46  
00000000                            47              
00000000                            48  
00000000  =00000000                 49  mask0       EQU     %00000000
00000000  =00000001                 50  mask1       EQU     %00000001
00000000  =00000002                 51  mask2       EQU     %00000010
00000000  =00000004                 52  mask3       EQU     %00000100
00000000  =00000008                 53  mask4       EQU     %00001000
00000000  =00000010                 54  mask5       EQU     %00010000
00000000  =00000020                 55  mask6       EQU     %00100000
00000000  =00000040                 56  mask7       EQU     %01000000
00000000  =00000080                 57  mask8       EQU     %10000000
00000000                            58  
00000000  =00000005                 59  maskA       EQU     %00000101
00000000  =0000000A                 60  maskB       EQU     %00001010
00000000  =00000014                 61  maskC       EQU     %00010100
00000000  =00000028                 62  maskD       EQU     %00101000
00000000  =00000050                 63  maskE       EQU     %01010000
00000000  =000000A0                 64  maskF       EQU     %10100000
00000000                            65  
00000000                            66  
00000000  =000000F0                 67  firstNib    EQU     $F0
00000000  =0000000F                 68  secNib      EQU     $0F
00000000                            69               
00001000                            70              ORG    $1000
00001000                            71  START:                                  ; first instruction of program
00001000                            72        
00001000  207C 00003000             73          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00003100             74          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            75            
0000100C  4241                      76  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      77          CLR         D2                  ; clear out D2
00001010  B1CA                      78          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 1616                 79          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      80          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      81          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      82          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            83          
0000101C  B43C 0000                 84          CMP.B       #zero, D2           ; compare with 0
00001020  6700 006E                 85          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 86          CMP.B       #one, D2            ; compare with 1
00001028  6700 0096                 87          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 88          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0092                 89          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 90          CMP.B       #three, D2          ; compare with 3
00001038  6700 008E                 91          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 92          CMP.B       #four, D2           ; compare with 4
00001040  6700 008A                 93          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 94          CMP.B       #five, D2           ; compare with 5
00001048  6700 009E                 95          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 96          CMP.B       #six, D2            ; compare with 6
00001050  6700 009A                 97          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 98          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00BE                 99          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                100          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00B6                101          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                102          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00B2                103          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                104          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00AA                105          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                106          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 00A6                107          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                108          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 009E                109          BEQ         braFourteen         ; branch out to fourteen method
00001084  B43C 000F                110          CMP.B       #fifteen,D2
00001088  6700 15A0                111          BEQ         endProg
0000108C  6000 FF7E                112          BRA         loop
00001090                           113  
00001090  4242                     114  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001092  1401                     115          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001094  C43C 000F                116          AND.B       #secNib, D2             ; set first nibble to 0
00001098                           117   
00001098  B43C 0000                118          CMP.B       #zero, D2           ; compare second nibble to 0
0000109C  6700 00B6                119          BEQ         opORI               ; branch to ORI method
000010A0  B43C 000C                120          CMP.B       #twelve, D2         ; compare second nibble to 12
000010A4  6700 0202                121          BEQ         opCMPI              ; branch to CMPI method
000010A8  B43C 0008                122          CMP.B       #eight,D2           ; Test for static BCLR
000010AC  6700 036C                123          BEQ         opBCLR
000010B0  C47C 0001                124          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010B4  B43C 0001                125          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010B8  6700 03C4                126          BEQ         opDynBCLR
000010BC  6000 156C                127          BRA         printInvalid
000010C0                           128          
000010C0                           129          
000010C0  6000 042A                130  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010C4                           131  
000010C4  6000 04AA                132  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010C8                           133  
000010C8                           134  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010C8                           135  
000010C8  6000 05A0                136          BRA         opMOVEW
000010CC                           137  
000010CC  4242                     138  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010CE  1401                     139          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010D0  C43C 000F                140          AND.B       #secNib, D2             ; set first nibble to 0
000010D4                           141   
000010D4  B43C 0004                142          CMP.B       #four, D2           ; compare second nibble to 4
000010D8  6700 068A                143          BEQ         opNEG               ; branch to NEG method
000010DC  B43C 000E                144          CMP.B       #fourteen, D2       ; compare second nibble to E
000010E0  6700 0770                145          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010E4  6000 07E2                146          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010E8                           147  
000010E8  6000 0904                148  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010EC                           149  
000010EC  4242                     150  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010EE  1401                     151          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010F0  C438 000F                152          AND.B       $0F, D2             ; set first nibble to 0
000010F4                           153   
000010F4  B43C 0000                154          CMP.B       #zero, D2           ; compare second nibble to 0
000010F8  6700 0900                155          BEQ         opBRA               ; branch to BRA method
000010FC  B43C 0005                156          CMP.B       #five, D2           ; compare second nibble to 5
00001100  6700 0910                157          BEQ         opBCS               ; branch to BCS method
00001104  B43C 0008                158          CMP.B       #eight, D2          ; compare second nibble to 8
00001108  6700 0914                159          BEQ         opBVC               ; branch to BCS method
0000110C  B43C 000C                160          CMP.B       #twelve, D2         ; compare second nibble to 12
00001110  6700 0918                161          BEQ         opBGE               ; branch to BGE method
00001114  6000 0920                162          BRA         opBLT               ; otherwise, branch to BLT method
00001118                           163  
00001118                           164  braEight    ; there are two opCodes available DIVS, or OR
00001118                           165  
00001118  6000 0928                166  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000111C                           167  
0000111C                           168  braEleven   ; there are two opCodes available EOR, or CMP
0000111C                           169  
0000111C  6000 0930                170  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
00001120                           171    
00001120                           172  braThirteen ; there are two opCodes available ADD, or ADDA
00001120                           173  
00001120  4242                     174  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
00001122  1401                     175              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001124  C438 000F                176              AND.B       $0F, D2             ; set first nibble to 0
00001128                           177   
00001128  B43C 0000                178              CMP.B       #zero, D2           ; compare second nibble to 0
0000112C  6700 0938                179              BEQ         opASR               ; branch to ASR method
00001130  B43C 0001                180              CMP.B       #one, D2            ; compare second nibble to 1
00001134  6700 0924                181              BEQ         opASL               ; branch to ASL method
00001138  B43C 0002                182              CMP.B       #two, D2            ; compare second nibble to 2
0000113C  6700 0940                183              BEQ         opLSR               ; branch to LSR method
00001140  B43C 0003                184              CMP.B       #three, D2          ; compare second nibble to 3
00001144  6700 092C                185              BEQ         opLSL               ; branch to LSL method
00001148  B43C 0006                186              CMP.B       #six, D2            ; compare second nibble to 6
0000114C  6700 0948                187              BEQ         opROR               ; branch to ROR method
00001150  6000 0938                188              BRA         opROL               ; otherwise, branch to ROL method
00001154                           189  
00001154  43F9 0000264A            190  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
0000115A  103C 000E                191          MOVE.B      #14, D0             ; command for trap call to display message
0000115E  4E4F                     192          TRAP        #15                 ; trap call
00001160                           193          
00001160  1218                     194          MOVE.B      (A0)+, D1
00001162  1401                     195          MOVE.B      D1,D2               ; copy data over
00001164  EC42                     196          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001166  B43C 0000                197          CMP.B       #zero,D2
0000116A  6700 0016                198          BEQ         opORIB
0000116E  B43C 0001                199          CMP.B       #one,D2
00001172  6700 0070                200          BEQ         opORIW
00001176  B43C 0002                201          CMP.B       #two,D2
0000117A  6700 00CA                202          BEQ         opORIL
0000117E                           203          
0000117E  6000 14AA                204          BRA         printInvalid
00001182                           205          
00001182  43F9 000026CC            206  opORIB  LEA         dispByte, A1        ; Display byte
00001188  103C 000E                207          MOVE.B      #14, D0             ; command for trap call to display message
0000118C  4E4F                     208          TRAP        #15                 ; trap call
0000118E                           209          
0000118E  43F9 00002632            210          LEA         space, A1           ; Display space
00001194  103C 000E                211          MOVE.B      #14, D0             ; command for trap call to display message
00001198  4E4F                     212          TRAP        #15                 ; trap call
0000119A                           213          
0000119A  4242                     214          CLR         D2
0000119C  1401                     215          MOVE.B      D1,D2
0000119E  E642                     216          ASR         #three,D2
000011A0  C47C 0007                217          AND         #seven,D2
000011A4  4243                     218          CLR         D3        
000011A6  1601                     219          MOVE.B      D1,D3
000011A8  C67C 0007                220          AND         #seven,D3
000011AC                           221          
000011AC  4241                     222          CLR         D1
000011AE  3218                     223          MOVE.W      (A0)+, D1
000011B0                           224          
000011B0  43F9 00002635            225          LEA         hashTag, A1           ; Display space
000011B6  103C 000E                226          MOVE.B      #14, D0             ; command for trap call to display message
000011BA  4E4F                     227          TRAP        #15                 ; trap call
000011BC                           228          
000011BC  103C 0003                229          MOVE.B      #3, D0
000011C0  4E4F                     230          TRAP        #15
000011C2                           231          
000011C2  43F9 00002639            232          LEA         comma, A1           ; Display space
000011C8  103C 000E                233          MOVE.B      #14, D0             ; command for trap call to display message
000011CC  4E4F                     234          TRAP        #15                 ; trap call
000011CE                           235          
000011CE  4EB9 00001FDA            236          JSR         printEA
000011D4                           237          
000011D4  43F9 0000262E            238          LEA         newLine, A1           ; Display space
000011DA  103C 000E                239          MOVE.B      #14, D0             ; command for trap call to display message
000011DE  4E4F                     240          TRAP        #15                 ; trap call
000011E0                           241          
000011E0  6000 FE2A                242          BRA         LOOP
000011E4                           243          
000011E4                           244          
000011E4  43F9 000026CF            245  opORIW  LEA         dispWord, A1        ; Display byte
000011EA  103C 000E                246          MOVE.B      #14, D0             ; command for trap call to display message
000011EE  4E4F                     247          TRAP        #15                 ; trap call
000011F0                           248          
000011F0  43F9 00002632            249          LEA         space, A1           ; Display space
000011F6  103C 000E                250          MOVE.B      #14, D0             ; command for trap call to display message
000011FA  4E4F                     251          TRAP        #15                 ; trap call
000011FC                           252          
000011FC  4242                     253          CLR         D2
000011FE  1401                     254          MOVE.B      D1,D2
00001200  E642                     255          ASR         #three,D2
00001202  C47C 0007                256          AND         #seven,D2
00001206  4243                     257          CLR         D3        
00001208  1601                     258          MOVE.B      D1,D3
0000120A  C67C 0007                259          AND         #seven,D3
0000120E                           260          
0000120E  4241                     261          CLR         D1
00001210  3218                     262          MOVE.W      (A0)+, D1
00001212                           263          
00001212  43F9 00002635            264          LEA         hashTag, A1           ; Display space
00001218  103C 000E                265          MOVE.B      #14, D0             ; command for trap call to display message
0000121C  4E4F                     266          TRAP        #15                 ; trap call
0000121E                           267          
0000121E  103C 0003                268          MOVE.B      #3, D0
00001222  4E4F                     269          TRAP        #15
00001224                           270          
00001224  43F9 00002639            271          LEA         comma, A1           ; Display space
0000122A  103C 000E                272          MOVE.B      #14, D0             ; command for trap call to display message
0000122E  4E4F                     273          TRAP        #15                 ; trap call
00001230                           274          
00001230  4EB9 00001FDA            275          JSR         printEA
00001236                           276          
00001236  43F9 0000262E            277          LEA         newLine, A1           ; Display space
0000123C  103C 000E                278          MOVE.B      #14, D0             ; command for trap call to display message
00001240  4E4F                     279          TRAP        #15                 ; trap call
00001242                           280          
00001242  6000 FDC8                281          BRA         LOOP
00001246                           282       
00001246  43F9 000026D2            283  opORIL  LEA         dispLong, A1        ; Display byte
0000124C  103C 000E                284          MOVE.B      #14, D0             ; command for trap call to display message
00001250  4E4F                     285          TRAP        #15                 ; trap call
00001252                           286          
00001252  43F9 00002632            287          LEA         space, A1           ; Display space
00001258  103C 000E                288          MOVE.B      #14, D0             ; command for trap call to display message
0000125C  4E4F                     289          TRAP        #15                 ; trap call
0000125E                           290          
0000125E  4242                     291          CLR         D2
00001260  1401                     292          MOVE.B      D1,D2
00001262  E642                     293          ASR         #three,D2
00001264  C47C 0007                294          AND         #seven,D2
00001268  4243                     295          CLR         D3        
0000126A  1601                     296          MOVE.B      D1,D3
0000126C  C67C 0007                297          AND         #seven,D3
00001270                           298          
00001270  4241                     299          CLR         D1
00001272  2218                     300          MOVE.L      (A0)+, D1
00001274                           301          
00001274  43F9 00002635            302          LEA         hashTag, A1           ; Display space
0000127A  103C 000E                303          MOVE.B      #14, D0             ; command for trap call to display message
0000127E  4E4F                     304          TRAP        #15                 ; trap call
00001280                           305          
00001280  103C 0003                306          MOVE.B      #3, D0
00001284  4E4F                     307          TRAP        #15
00001286                           308          
00001286  43F9 00002639            309          LEA         comma, A1           ; Display space
0000128C  103C 000E                310          MOVE.B      #14, D0             ; command for trap call to display message
00001290  4E4F                     311          TRAP        #15                 ; trap call
00001292                           312          
00001292  4EB9 00001FDA            313          JSR         printEA
00001298                           314          
00001298  43F9 0000262E            315          LEA         newLine, A1           ; Display space
0000129E  103C 000E                316          MOVE.B      #14, D0             ; command for trap call to display message
000012A2  4E4F                     317          TRAP        #15                 ; trap call
000012A4                           318          
000012A4  6000 FD66                319          BRA         LOOP
000012A8                           320           
000012A8  43F9 0000264E            321  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000012AE  103C 000E                322          MOVE.B      #14, D0             ; command for trap call to display message
000012B2  4E4F                     323          TRAP        #15                 ; trap call
000012B4                           324                  
000012B4  1218                     325          MOVE.B      (A0)+, D1
000012B6  1401                     326          MOVE.B      D1,D2               ; copy data over
000012B8  EC42                     327          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000012BA  B43C 0000                328          CMP.B       #zero,D2
000012BE  6700 0034                329          BEQ         opCMPIB
000012C2  B43C 0001                330          CMP.B       #one,D2
000012C6  6700 008E                331          BEQ         opCMPIW
000012CA  B43C 0002                332          CMP.B       #two,D2
000012CE  6700 00E8                333          BEQ         opCMPIL
000012D2                           334          
000012D2  1401                     335          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000012D4  E542                     336          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
000012D6  1802                     337          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
000012D8  4242                     338          CLR         D2                  ; Clear out data register
000012DA  1404                     339          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
000012DC  EA42                     340          ASR         #five,D2            ; Shift the register out to get just the mode
000012DE  1802                     341          MOVE.B      D2,D4               ; Store mode into D4
000012E0  4242                     342          CLR         D2
000012E2                           343          
000012E2  1401                     344          MOVE.B      D1,D2               ; Getting the EA register
000012E4  EB42                     345          ASL         #five,D2
000012E6  1A02                     346          MOVE.B      D2,D5               ; Move just the register into D5
000012E8  4242                     347          CLR         D2                  ; Clearing D2 to put data back
000012EA  1405                     348          MOVE.B      D5,D2               ; Putting back the register
000012EC  EA42                     349          ASR         #five,D2            ; Shifting bits in order to read the register
000012EE  1A02                     350          MOVE.B      D2,D5               ; Store register into D5
000012F0                           351          
000012F0  6000 FD1A                352          BRA         LOOP                ; go back to the loop
000012F4                           353  
000012F4  43F9 000026CC            354  opCMPIB LEA         dispByte, A1        ; Display byte
000012FA  103C 000E                355          MOVE.B      #14, D0             ; command for trap call to display message
000012FE  4E4F                     356          TRAP        #15                 ; trap call
00001300                           357          
00001300  43F9 00002632            358          LEA         space, A1           ; Display space
00001306  103C 000E                359          MOVE.B      #14, D0             ; command for trap call to display message
0000130A  4E4F                     360          TRAP        #15                 ; trap call
0000130C                           361          
0000130C  4242                     362          CLR         D2
0000130E  1401                     363          MOVE.B      D1,D2
00001310  E642                     364          ASR         #three,D2
00001312  C47C 0007                365          AND         #seven,D2
00001316  4243                     366          CLR         D3        
00001318  1601                     367          MOVE.B      D1,D3
0000131A  C67C 0007                368          AND         #seven,D3
0000131E                           369          
0000131E  4241                     370          CLR         D1
00001320  3218                     371          MOVE.W      (A0)+, D1
00001322                           372          
00001322  43F9 00002635            373          LEA         hashTag, A1           ; Display space
00001328  103C 000E                374          MOVE.B      #14, D0             ; command for trap call to display message
0000132C  4E4F                     375          TRAP        #15                 ; trap call
0000132E                           376          
0000132E  103C 0003                377          MOVE.B      #3, D0
00001332  4E4F                     378          TRAP        #15
00001334                           379          
00001334  43F9 00002639            380          LEA         comma, A1           ; Display space
0000133A  103C 000E                381          MOVE.B      #14, D0             ; command for trap call to display message
0000133E  4E4F                     382          TRAP        #15                 ; trap call
00001340                           383          
00001340  4EB9 00001FDA            384          JSR         printEA
00001346                           385          
00001346  43F9 0000262E            386          LEA         newLine, A1           ; Display space
0000134C  103C 000E                387          MOVE.B      #14, D0             ; command for trap call to display message
00001350  4E4F                     388          TRAP        #15                 ; trap call
00001352                           389  
00001352  6000 FCB8                390          BRA         LOOP
00001356                           391  
00001356  43F9 000026CF            392  opCMPIW LEA         dispWord, A1        ; Display byte
0000135C  103C 000E                393          MOVE.B      #14, D0             ; command for trap call to display message
00001360  4E4F                     394          TRAP        #15                 ; trap call
00001362                           395          
00001362  43F9 00002632            396          LEA         space, A1           ; Display space
00001368  103C 000E                397          MOVE.B      #14, D0             ; command for trap call to display message
0000136C  4E4F                     398          TRAP        #15                 ; trap call
0000136E                           399          
0000136E  4242                     400          CLR         D2
00001370  1401                     401          MOVE.B      D1,D2
00001372  E642                     402          ASR         #three,D2
00001374  C47C 0007                403          AND         #seven,D2
00001378  4243                     404          CLR         D3        
0000137A  1601                     405          MOVE.B      D1,D3
0000137C  C67C 0007                406          AND         #seven,D3
00001380                           407          
00001380  4241                     408          CLR         D1
00001382  3218                     409          MOVE.W      (A0)+, D1
00001384                           410          
00001384  43F9 00002635            411          LEA         hashTag, A1           ; Display space
0000138A  103C 000E                412          MOVE.B      #14, D0             ; command for trap call to display message
0000138E  4E4F                     413          TRAP        #15                 ; trap call
00001390                           414          
00001390  103C 0003                415          MOVE.B      #3, D0
00001394  4E4F                     416          TRAP        #15
00001396                           417          
00001396  43F9 00002639            418          LEA         comma, A1           ; Display space
0000139C  103C 000E                419          MOVE.B      #14, D0             ; command for trap call to display message
000013A0  4E4F                     420          TRAP        #15                 ; trap call
000013A2                           421          
000013A2  4EB9 00001FDA            422          JSR         printEA
000013A8                           423          
000013A8  43F9 0000262E            424          LEA         newLine, A1           ; Display space
000013AE  103C 000E                425          MOVE.B      #14, D0             ; command for trap call to display message
000013B2  4E4F                     426          TRAP        #15                 ; trap call
000013B4  6000 FC56                427          BRA         LOOP
000013B8                           428  
000013B8  43F9 000026D2            429  opCMPIL LEA         dispLong, A1        ; Display byte
000013BE  103C 000E                430          MOVE.B      #14, D0             ; command for trap call to display message
000013C2  4E4F                     431          TRAP        #15                 ; trap call
000013C4                           432          
000013C4  43F9 00002632            433          LEA         space, A1           ; Display space
000013CA  103C 000E                434          MOVE.B      #14, D0             ; command for trap call to display message
000013CE  4E4F                     435          TRAP        #15                 ; trap call
000013D0                           436          
000013D0  4242                     437          CLR         D2
000013D2  1401                     438          MOVE.B      D1,D2
000013D4  E642                     439          ASR         #three,D2
000013D6  C47C 0007                440          AND         #seven,D2
000013DA  4243                     441          CLR         D3        
000013DC  1601                     442          MOVE.B      D1,D3
000013DE  C67C 0007                443          AND         #seven,D3
000013E2                           444          
000013E2  4241                     445          CLR         D1
000013E4  3218                     446          MOVE.W      (A0)+, D1
000013E6                           447          
000013E6  43F9 00002635            448          LEA         hashTag, A1           ; Display space
000013EC  103C 000E                449          MOVE.B      #14, D0             ; command for trap call to display message
000013F0  4E4F                     450          TRAP        #15                 ; trap call
000013F2                           451          
000013F2  103C 0003                452          MOVE.B      #3, D0
000013F6  4E4F                     453          TRAP        #15
000013F8                           454          
000013F8  43F9 00002639            455          LEA         comma, A1           ; Display space
000013FE  103C 000E                456          MOVE.B      #14, D0             ; command for trap call to display message
00001402  4E4F                     457          TRAP        #15                 ; trap call
00001404                           458          
00001404  4EB9 00001FDA            459          JSR         printEA
0000140A                           460          
0000140A  43F9 0000262E            461          LEA         newLine, A1           ; Display space
00001410  103C 000E                462          MOVE.B      #14, D0             ; command for trap call to display message
00001414  4E4F                     463          TRAP        #15                 ; trap call
00001416                           464          
00001416  6000 FBF4                465          BRA         LOOP
0000141A                           466  
0000141A  43F9 00002653            467  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001420  103C 000E                468                  MOVE.B      #14, D0             ; command for trap call to display message
00001424  4E4F                     469                  TRAP        #15                 ; trap call
00001426                           470  
00001426  43F9 00002632            471                  LEA         space, A1           ; Display space
0000142C  103C 000E                472                  MOVE.B      #14, D0             ; command for trap call to display message
00001430  4E4F                     473                  TRAP        #15                 ; trap call
00001432                           474                  
00001432  4242                     475                  CLR         D2
00001434  1218                     476                  MOVE.B      (A0)+, D1
00001436  1401                     477                  MOVE.B      D1,D2               ; copy data over
00001438  E642                     478                  ASR         #three,D2           ; Shift to the right to remove register
0000143A  C47C 0007                479                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
0000143E                           480                  
0000143E  4243                     481                  CLR         D3                  ; Clear D3 so we can move D1 in
00001440  1601                     482                  MOVE.B      D1,D3               ; Move othr byte in
00001442  C67C 0007                483                  AND         #seven,D3           ; Set everything besides register to 0
00001446                           484                  
00001446  4241                     485                  CLR         D1
00001448  3218                     486                  MOVE.W      (A0)+, D1
0000144A                           487                 
0000144A                           488                  
0000144A  43F9 00002635            489                  LEA         hashTag, A1           ; Display space
00001450  103C 000E                490                  MOVE.B      #14, D0             ; command for trap call to display message
00001454  4E4F                     491                  TRAP        #15                 ; trap call
00001456                           492          
00001456  103C 0003                493                  MOVE.B      #3, D0
0000145A  4E4F                     494                  TRAP        #15
0000145C                           495          
0000145C  43F9 00002639            496                  LEA         comma, A1           ; Display space
00001462  103C 000E                497                  MOVE.B      #14, D0             ; command for trap call to display message
00001466  4E4F                     498                  TRAP        #15                 ; trap call
00001468                           499                  
00001468  4EB9 00001FDA            500                  JSR         printEA
0000146E                           501          
0000146E  43F9 0000262E            502                  LEA         newLine, A1           ; Display space
00001474  103C 000E                503                  MOVE.B      #14, D0             ; command for trap call to display message
00001478  4E4F                     504                  TRAP        #15                 ; trap call
0000147A                           505                  
0000147A                           506                  
0000147A  6000 FB90                507                  BRA         LOOP                
0000147E                           508          
0000147E                           509  opDynBCLR       
0000147E  4241                     510                  CLR         D1
00001480  1218                     511                  MOVE.B      (A0)+,D1            ; Copy second byte in
00001482  1601                     512                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
00001484  E243                     513                  ASR         #one,D3             ; Shift register over to the end
00001486  C67C 0007                514                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
0000148A                           515                  
0000148A  1401                     516                  MOVE.B      D1,D2
0000148C  EC42                     517                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
0000148E  B47C 0002                518                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
00001492  6600 1196                519                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
00001496                           520  
00001496                           521                  
00001496  43F9 00002653            522                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
0000149C  103C 000E                523                  MOVE.B      #14, D0             ; command for trap call to display message
000014A0  4E4F                     524                  TRAP        #15                 ; trap call  
000014A2                           525                  
000014A2  43F9 00002632            526                  LEA         space, A1           ; Display space
000014A8  103C 000E                527                  MOVE.B      #14, D0             ; command for trap call to display message
000014AC  4E4F                     528                  TRAP        #15                 ; trap call
000014AE                           529                  
000014AE  143C 0000                530                  MOVE.B      #zero,D2                
000014B2  4EB9 00001FDA            531                  JSR         printEA
000014B8                           532                  
000014B8  43F9 00002639            533                  LEA         comma, A1           ; Display space
000014BE  103C 000E                534                  MOVE.B      #14, D0             ; command for trap call to display message
000014C2  4E4F                     535                  TRAP        #15                 ; trap call
000014C4                           536                  
000014C4  4242                     537                  CLR         D2
000014C6  1401                     538                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000014C8  E642                     539                  ASR         #three,D2           ; Remove/shift the register out
000014CA  C47C 0007                540                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000014CE                           541                  
000014CE  4243                     542                  CLR         D3                  ; Clearing D3 to avoid mashing data
000014D0  1601                     543                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000014D2  C67C 0007                544                  AND         #seven,D3           ; Change all bits except for register bits to 0
000014D6                           545                  
000014D6                           546  
000014D6  4EB9 00001FDA            547                  JSR         printEA
000014DC                           548          
000014DC  43F9 0000262E            549                  LEA         newLine, A1           ; Display space
000014E2  103C 000E                550                  MOVE.B      #14, D0             ; command for trap call to display message
000014E6  4E4F                     551                  TRAP        #15                 ; trap call            
000014E8                           552  
000014E8                           553  
000014E8  6000 FB22                554                  BRA         LOOP                ; go back to the loop
000014EC                           555   
000014EC                           556  opMOVEB 
000014EC  43F9 00002658            557          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
000014F2  103C 000E                558          MOVE.B      #14, D0             ; command for trap call to display message
000014F6  4E4F                     559          TRAP        #15                 ; trap call
000014F8  43F9 000026CC            560          LEA         dispByte, A1        ; display byte
000014FE  103C 000E                561          MOVE.B      #14, D0             ; command for trap call to display message
00001502  4E4F                     562          TRAP        #15                 ; trap call
00001504  43F9 00002632            563          LEA         space, A1           ; create spaces
0000150A  103C 000E                564          MOVE.B      #14, D0             ; command for trap call to display message
0000150E  4E4F                     565          TRAP        #15                 ; trap call
00001510                           566          
00001510                           567          
00001510  4245                     568          CLR         D5                  ; Clear D5
00001512  1A01                     569          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001514  E245                     570          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001516  CA7C 0007                571          AND         #seven,D5
0000151A                           572          
0000151A  4244                     573          CLR         D4                  ; Clear out D4
0000151C  1801                     574          MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000151E  C87C 0001                575          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001522                           576          
00001522  4241                     577          CLR          D1
00001524  4242                     578          CLR          D2
00001526  1218                     579          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001528  1401                     580          MOVE.B      D1,D2
0000152A  EC42                     581          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000152C  D842                     582          ADD         D2,D4               ; Adds the remaining bits to D4
0000152E                           583          
0000152E  4242                     584          CLR         D2
00001530  1401                     585          MOVE.B      D1,D2               ; Copy new byte over to D2
00001532  E642                     586          ASR         #three,D2           ; Shift source register out
00001534  C47C 0007                587          AND         #seven,D2           ; Set everything to 0 except for the mode
00001538                           588          
00001538  4243                     589          CLR         D3
0000153A  1601                     590          MOVE.B      D1,D3
0000153C  C67C 0007                591          AND         #seven,D3
00001540                           592          
00001540  4EB9 00001FDA            593          JSR         printEA
00001546                           594          
00001546  43F9 00002639            595          LEA         comma, A1           ; Display space
0000154C  103C 000E                596          MOVE.B      #14, D0             ; command for trap call to display message
00001550  4E4F                     597          TRAP        #15                 ; trap call
00001552                           598          
00001552  4242                     599          CLR         D2
00001554  4243                     600          CLR         D3
00001556  1404                     601          MOVE.B      D4,D2
00001558  1605                     602          MOVE.B      D5,D3
0000155A                           603          
0000155A  4EB9 00001FDA            604          JSR         printEA
00001560                           605          
00001560                           606          
00001560  43F9 0000262E            607          LEA         newLine, A1           ; Display space
00001566  103C 000E                608          MOVE.B      #14, D0             ; command for trap call to display message
0000156A  4E4F                     609          TRAP        #15                 ; trap call            
0000156C                           610  
0000156C                           611  
0000156C  6000 FA9E                612          BRA         LOOP                ; go back to the loop
00001570                           613          
00001570                           614  opMOVEL     
00001570                           615          
00001570  4245                     616              CLR         D5                  ; Clear D5
00001572  1A01                     617              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001574  E245                     618              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001576  CA7C 0007                619              AND         #seven,D5
0000157A                           620          
0000157A  4244                     621              CLR         D4                  ; Clear out D4
0000157C  1801                     622              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000157E  C87C 0001                623              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001582                           624          
00001582  4241                     625              CLR          D1
00001584  4242                     626              CLR          D2
00001586  1218                     627              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001588  1401                     628              MOVE.B      D1,D2
0000158A  EC42                     629              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000158C  D842                     630              ADD         D2,D4               ; Adds the remaining bits to D4
0000158E                           631          
0000158E  B87C 0001                632              CMP         #one,D4             ; Check if it is MOVEA
00001592  6700 006C                633              BEQ         opMOVEAL            ; If it is, branch off
00001596                           634              
00001596  43F9 00002658            635              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
0000159C  103C 000E                636              MOVE.B      #14, D0             ; command for trap call to display message
000015A0  4E4F                     637              TRAP        #15                 ; trap call  
000015A2                           638              
000015A2                           639              
000015A2  43F9 000026D2            640              LEA         dispLong,A1
000015A8  103C 000E                641              MOVE.B      #14, D0             ; command for trap call to display message
000015AC  4E4F                     642              TRAP        #15                 ; trap call
000015AE                           643              
000015AE  43F9 00002632            644              LEA         space, A1           ; create spaces
000015B4  103C 000E                645              MOVE.B      #14, D0             ; command for trap call to display message
000015B8  4E4F                     646              TRAP        #15                 ; trap call
000015BA                           647          
000015BA  4242                     648              CLR         D2
000015BC  1401                     649              MOVE.B      D1,D2               ; Copy new byte over to D2
000015BE  E642                     650              ASR         #three,D2           ; Shift source register out
000015C0  C47C 0007                651              AND         #seven,D2           ; Set everything to 0 except for the mode
000015C4                           652          
000015C4  4243                     653              CLR         D3
000015C6  1601                     654              MOVE.B      D1,D3
000015C8  C67C 0007                655              AND         #seven,D3
000015CC                           656              
000015CC  4241                     657              CLR         D1                  ; Clear D1
000015CE  2218                     658              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
000015D0                           659              
000015D0  4EB9 00001FDA            660              JSR         printEA
000015D6                           661              
000015D6  43F9 00002639            662              LEA         comma, A1           ; Display comma
000015DC  103C 000E                663              MOVE.B      #14, D0             ; command for trap call to display message
000015E0  4E4F                     664              TRAP        #15                 ; trap call
000015E2                           665          
000015E2  4242                     666              CLR         D2
000015E4  4243                     667              CLR         D3
000015E6  1404                     668              MOVE.B      D4,D2
000015E8  1605                     669              MOVE.B      D5,D3
000015EA                           670              
000015EA                           671  
000015EA                           672              
000015EA  4EB9 00001FDA            673              JSR         printEA
000015F0                           674          
000015F0                           675          
000015F0  43F9 0000262E            676              LEA         newLine, A1           ; Display space
000015F6  103C 000E                677              MOVE.B      #14, D0             ; command for trap call to display message
000015FA  4E4F                     678              TRAP        #15                 ; trap call            
000015FC                           679  
000015FC                           680  
000015FC  6000 FA0E                681              BRA         LOOP                ; go back to the loop
00001600                           682              
00001600                           683  opMOVEAL
00001600                           684  
00001600  43F9 0000265D            685              LEA         MOVEAmatch,A1
00001606  103C 000E                686              MOVE.B      #14, D0             ; command for trap call to display message
0000160A  4E4F                     687              TRAP        #15                 ; trap call
0000160C                           688              
0000160C  43F9 000026D2            689              LEA         dispLong,A1
00001612  103C 000E                690              MOVE.B      #14, D0             ; command for trap call to display message
00001616  4E4F                     691              TRAP        #15                 ; trap call
00001618                           692              
00001618                           693  
00001618  43F9 00002632            694              LEA         space, A1           ; create spaces
0000161E  103C 000E                695              MOVE.B      #14, D0             ; command for trap call to display message
00001622  4E4F                     696              TRAP        #15                 ; trap call
00001624                           697              
00001624  4242                     698              CLR         D2
00001626  1401                     699              MOVE.B      D1,D2               ; Copy new byte over to D2
00001628  E642                     700              ASR         #three,D2           ; Shift source register out
0000162A  C47C 0007                701              AND         #seven,D2           ; Set everything to 0 except for the mode
0000162E                           702          
0000162E  4243                     703              CLR         D3
00001630  1601                     704              MOVE.B      D1,D3
00001632  C67C 0007                705              AND         #seven,D3
00001636                           706              
00001636  4241                     707              CLR         D1                  ; Clear D1
00001638  3218                     708              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
0000163A                           709              
0000163A                           710              
0000163A  4EB9 00001FDA            711              JSR         printEA
00001640                           712              
00001640  43F9 00002639            713              LEA         comma, A1           ; Display comma
00001646  103C 000E                714              MOVE.B      #14, D0             ; command for trap call to display message
0000164A  4E4F                     715              TRAP        #15                 ; trap call
0000164C                           716  
0000164C  4242                     717              CLR         D2
0000164E  4243                     718              CLR         D3
00001650  1404                     719              MOVE.B      D4,D2
00001652  1605                     720              MOVE.B      D5,D3
00001654                           721          
00001654  4EB9 00001FDA            722              JSR         printEA
0000165A                           723          
0000165A                           724          
0000165A  43F9 0000262E            725              LEA         newLine, A1           ; Display space
00001660  103C 000E                726              MOVE.B      #14, D0             ; command for trap call to display message
00001664  4E4F                     727              TRAP        #15                 ; trap call            
00001666                           728  
00001666                           729  
00001666  6000 F9A4                730              BRA         LOOP                ; go back to the loop
0000166A                           731  
0000166A                           732  opMOVEW
0000166A                           733          
0000166A  4245                     734              CLR         D5                  ; Clear D5
0000166C  1A01                     735              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000166E  E245                     736              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001670  CA7C 0007                737              AND         #seven,D5
00001674                           738          
00001674  4244                     739              CLR         D4                  ; Clear out D4
00001676  1801                     740              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001678  C87C 0001                741              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000167C                           742          
0000167C  4241                     743              CLR          D1
0000167E  4242                     744              CLR          D2
00001680  1218                     745              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001682  1401                     746              MOVE.B      D1,D2
00001684  EC42                     747              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001686  D842                     748              ADD         D2,D4               ; Adds the remaining bits to D4
00001688                           749          
00001688  B87C 0001                750              CMP         #one,D4             ; Check if it is MOVEA
0000168C  6700 006C                751              BEQ         opMOVEAW            ; If it is, branch off
00001690                           752              
00001690  43F9 00002658            753              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001696  103C 000E                754              MOVE.B      #14, D0             ; command for trap call to display message
0000169A  4E4F                     755              TRAP        #15                 ; trap call  
0000169C                           756              
0000169C  43F9 000026CF            757              LEA         dispWord,A1
000016A2  103C 000E                758              MOVE.B      #14, D0             ; command for trap call to display message
000016A6  4E4F                     759              TRAP        #15                 ; trap call
000016A8                           760              
000016A8  43F9 00002632            761              LEA         space, A1           ; create spaces
000016AE  103C 000E                762              MOVE.B      #14, D0             ; command for trap call to display message
000016B2  4E4F                     763              TRAP        #15                 ; trap call
000016B4                           764          
000016B4  4242                     765              CLR         D2
000016B6  1401                     766              MOVE.B      D1,D2               ; Copy new byte over to D2
000016B8  E642                     767              ASR         #three,D2           ; Shift source register out
000016BA  C47C 0007                768              AND         #seven,D2           ; Set everything to 0 except for the mode
000016BE                           769          
000016BE  4243                     770              CLR         D3
000016C0  1601                     771              MOVE.B      D1,D3
000016C2  C67C 0007                772              AND         #seven,D3
000016C6                           773              
000016C6  4241                     774              CLR         D1                  ; Clear D1
000016C8  3218                     775              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
000016CA                           776              
000016CA  4EB9 00001FDA            777              JSR         printEA
000016D0                           778              
000016D0  43F9 00002639            779              LEA         comma, A1           ; Display comma
000016D6  103C 000E                780              MOVE.B      #14, D0             ; command for trap call to display message
000016DA  4E4F                     781              TRAP        #15                 ; trap call
000016DC                           782          
000016DC  4242                     783              CLR         D2
000016DE  4243                     784              CLR         D3
000016E0  1404                     785              MOVE.B      D4,D2
000016E2  1605                     786              MOVE.B      D5,D3
000016E4                           787              
000016E4                           788  
000016E4                           789              
000016E4  4EB9 00001FDA            790              JSR         printEA
000016EA                           791          
000016EA                           792          
000016EA  43F9 0000262E            793              LEA         newLine, A1           ; Display space
000016F0  103C 000E                794              MOVE.B      #14, D0             ; command for trap call to display message
000016F4  4E4F                     795              TRAP        #15                 ; trap call            
000016F6                           796  
000016F6                           797  
000016F6  6000 F914                798              BRA         LOOP                ; go back to the loop
000016FA                           799  opMOVEAW  
000016FA  43F9 0000265D            800              LEA         MOVEAmatch,A1
00001700  103C 000E                801              MOVE.B      #14, D0             ; command for trap call to display message
00001704  4E4F                     802              TRAP        #15                 ; trap call
00001706                           803              
00001706  43F9 000026CF            804              LEA         dispWord,A1
0000170C  103C 000E                805              MOVE.B      #14, D0             ; command for trap call to display message
00001710  4E4F                     806              TRAP        #15                 ; trap call
00001712                           807              
00001712                           808  
00001712  43F9 00002632            809              LEA         space, A1           ; create spaces
00001718  103C 000E                810              MOVE.B      #14, D0             ; command for trap call to display message
0000171C  4E4F                     811              TRAP        #15                 ; trap call
0000171E                           812              
0000171E  4242                     813              CLR         D2
00001720  1401                     814              MOVE.B      D1,D2               ; Copy new byte over to D2
00001722  E642                     815              ASR         #three,D2           ; Shift source register out
00001724  C47C 0007                816              AND         #seven,D2           ; Set everything to 0 except for the mode
00001728                           817          
00001728  4243                     818              CLR         D3
0000172A  1601                     819              MOVE.B      D1,D3
0000172C  C67C 0007                820              AND         #seven,D3
00001730                           821              
00001730  4241                     822              CLR         D1                  ; Clear D1
00001732  3218                     823              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001734                           824              
00001734                           825              
00001734  4EB9 00001FDA            826              JSR         printEA
0000173A                           827              
0000173A  43F9 00002639            828              LEA         comma, A1           ; Display comma
00001740  103C 000E                829              MOVE.B      #14, D0             ; command for trap call to display message
00001744  4E4F                     830              TRAP        #15                 ; trap call
00001746                           831  
00001746  4242                     832              CLR         D2
00001748  4243                     833              CLR         D3
0000174A  1404                     834              MOVE.B      D4,D2
0000174C  1605                     835              MOVE.B      D5,D3
0000174E                           836          
0000174E  4EB9 00001FDA            837              JSR         printEA
00001754                           838          
00001754                           839          
00001754  43F9 0000262E            840              LEA         newLine, A1           ; Display space
0000175A  103C 000E                841              MOVE.B      #14, D0             ; command for trap call to display message
0000175E  4E4F                     842              TRAP        #15                 ; trap call            
00001760                           843  
00001760                           844  
00001760  6000 F8AA                845              BRA         LOOP                ; go back to the loop
00001764                           846  
00001764                           847  opNEG   
00001764  43F9 00002663            848              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
0000176A  103C 000E                849              MOVE.B      #14, D0             ; command for trap call to display message
0000176E  4E4F                     850              TRAP        #15                 ; trap call
00001770                           851          
00001770                           852          
00001770  1218                     853              MOVE.B      (A0)+, D1
00001772  1401                     854              MOVE.B      D1,D2               ; copy data over
00001774  EC42                     855              ASR         #six,D2
00001776                           856              
00001776  B47C 0000                857              CMP         #zero,D2
0000177A  6700 0016                858              BEQ         opNEGB
0000177E  B47C 0001                859              CMP         #one,D2
00001782  6700 008E                860              BEQ         opNEGW
00001786  B47C 0002                861              CMP         #two,D2
0000178A  6700 0046                862              BEQ         opNEGL
0000178E  6000 0E94                863              BRA         invalid
00001792                           864  opNEGB
00001792                           865  
00001792  43F9 000026CC            866              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001798  103C 000E                867              MOVE.B      #14, D0             ; command for trap call to display message
0000179C  4E4F                     868              TRAP        #15                 ; trap call
0000179E                           869          
0000179E  43F9 00002632            870              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000017A4  103C 000E                871              MOVE.B      #14, D0             ; command for trap call to display message
000017A8  4E4F                     872              TRAP        #15                 ; trap call
000017AA                           873          
000017AA  4242                     874              CLR         D2                  ; Clear Data register 2
000017AC  3401                     875              MOVE        D1,D2               ; Move byte into D2
000017AE  E642                     876              ASR         #three,D2           ; Shift mode into place and moves mode into place
000017B0  C47C 0007                877              AND         #seven,D2           ; Stores mode
000017B4                           878              
000017B4  4243                     879              CLR         D3
000017B6  3601                     880              MOVE        D1,D3
000017B8  C67C 0007                881              AND         #seven,D3
000017BC                           882          
000017BC  4EB9 00001FDA            883              JSR         printEA
000017C2                           884                  
000017C2  43F9 0000262E            885              LEA         newLine, A1           ; Display space
000017C8  103C 000E                886              MOVE.B      #14, D0             ; command for trap call to display message
000017CC  4E4F                     887              TRAP        #15                 ; trap call  
000017CE                           888          
000017CE  6000 F83C                889              BRA         LOOP
000017D2                           890                  
000017D2                           891  
000017D2                           892  opNEGL
000017D2                           893  
000017D2  43F9 000026D2            894              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
000017D8  103C 000E                895              MOVE.B      #14, D0             ; command for trap call to display message
000017DC  4E4F                     896              TRAP        #15                 ; trap call
000017DE                           897  
000017DE  43F9 00002632            898              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000017E4  103C 000E                899              MOVE.B      #14, D0             ; command for trap call to display message
000017E8  4E4F                     900              TRAP        #15                 ; trap call
000017EA                           901                  
000017EA  4242                     902              CLR         D2                  ; Clear Data register 2
000017EC  3401                     903              MOVE        D1,D2               ; Move byte into D2
000017EE  E642                     904              ASR         #three,D2           ; Shift mode into place and moves mode into place
000017F0  C47C 0007                905              AND         #seven,D2           ; Stores mode
000017F4                           906          
000017F4  4243                     907              CLR         D3
000017F6  3601                     908              MOVE        D1,D3
000017F8  C67C 0007                909              AND         #seven,D3
000017FC                           910          
000017FC  4EB9 00001FDA            911              JSR         printEA
00001802                           912                      
00001802  43F9 0000262E            913              LEA         newLine, A1         ; Display space
00001808  103C 000E                914              MOVE.B      #14, D0             ; command for trap call to display message
0000180C  4E4F                     915              TRAP        #15                 ; trap call  
0000180E                           916          
0000180E  6000 F7FC                917              BRA         LOOP
00001812                           918          
00001812                           919  
00001812                           920  opNEGW
00001812                           921  
00001812  43F9 000026CF            922              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001818  103C 000E                923              MOVE.B      #14, D0             ; command for trap call to display message
0000181C  4E4F                     924              TRAP        #15                 ; trap call
0000181E                           925          
0000181E  43F9 00002632            926              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001824  103C 000E                927              MOVE.B      #14, D0             ; command for trap call to display message
00001828  4E4F                     928              TRAP        #15                 ; trap call        
0000182A                           929                  
0000182A  4242                     930              CLR         D2                  ; Clear Data register 2
0000182C  3401                     931              MOVE        D1,D2               ; Move byte into D2
0000182E  E642                     932              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001830  C47C 0007                933              AND         #seven,D2           ; Stores mode
00001834                           934          
00001834  4243                     935              CLR         D3
00001836  3601                     936              MOVE        D1,D3
00001838  C67C 0007                937              AND         #seven,D3
0000183C                           938          
0000183C  4EB9 00001FDA            939              JSR         printEA
00001842                           940              
00001842  43F9 0000262E            941              LEA         newLine, A1           ; Display space
00001848  103C 000E                942              MOVE.B      #14, D0             ; command for trap call to display message
0000184C  4E4F                     943              TRAP        #15                 ; trap call  
0000184E                           944          
0000184E  6000 F7BC                945              BRA         LOOP
00001852                           946  
00001852                           947  opRTSJSR
00001852                           948          
00001852  1218                     949              MOVE.B      (A0)+, D1
00001854                           950              
00001854  1401                     951              MOVE.B      D1,D2               ; copy data over
00001856  B47C 0075                952              CMP         #117,D2
0000185A  6700 0050                953              BEQ         opRTS
0000185E                           954              
0000185E  EC42                     955              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
00001860  B47C 0002                956              CMP         #two,D2             ; Checking if it is JSR
00001864  6700 0006                957              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001868                           958  
00001868  6000 0DBA                959              BRA         invalid
0000186C                           960  
0000186C                           961  opJSR
0000186C                           962                        
0000186C  43F9 0000266B            963              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001872  103C 000E                964              MOVE.B      #14, D0             ; command for trap call to display message
00001876  4E4F                     965              TRAP        #15                 ; trap call
00001878                           966              
00001878  43F9 00002632            967              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000187E  103C 000E                968              MOVE.B      #14, D0             ; command for trap call to display message
00001882  4E4F                     969              TRAP        #15                 ; trap call
00001884                           970              
00001884  4242                     971              CLR         D2
00001886  4243                     972              CLR         D3
00001888                           973              
00001888  1401                     974              MOVE.B      D1,D2
0000188A  E642                     975              ASR         #three,D2
0000188C  C47C 0007                976              AND         #seven,D2
00001890                           977              
00001890  1601                     978              MOVE.B      D1,D3
00001892  C67C 0007                979              AND         #seven,D3
00001896                           980              
00001896  4EB9 00001FDA            981              JSR         printEA
0000189C                           982              
0000189C  43F9 0000262E            983              LEA         newLine, A1           ; Display space
000018A2  103C 000E                984              MOVE.B      #14, D0             ; command for trap call to display message
000018A6  4E4F                     985              TRAP        #15                 ; trap call  
000018A8                           986              
000018A8  6000 F762                987              BRA         loop            
000018AC                           988  opRTS
000018AC                           989  
000018AC  43F9 00002667            990              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
000018B2  103C 000E                991              MOVE.B      #14, D0             ; command for trap call to display message
000018B6  4E4F                     992              TRAP        #15                 ; trap call
000018B8                           993              
000018B8  43F9 0000262E            994              LEA         newLine, A1           ; Display space
000018BE  103C 000E                995              MOVE.B      #14, D0             ; command for trap call to display message
000018C2  4E4F                     996              TRAP        #15                 ; trap call 
000018C4                           997              
000018C4  6000 F746                998              BRA         loop
000018C8                           999  
000018C8                          1000  opMOVEMLEA
000018C8  4242                    1001              CLR         D2                  ; Clear D2
000018CA  1401                    1002              MOVE.B      D1,D2               ; Copy byte over
000018CC  C47C 000F               1003              AND         #secNib,D2          ; Check only the second nibble
000018D0  B47C 000C               1004              CMP         #twelve,D2          ; Compare the second nibble to twelve
000018D4  6700 000E               1005              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
000018D8  B47C 0008               1006              CMP         #eight,D2           ; Compare the second nibble to eight
000018DC  6700 0006               1007              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
000018E0  6000 008C               1008              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
000018E4                          1009              
000018E4                          1010  opMOVEM            
000018E4  4246                    1011              CLR         D6                  ; Clearing D4 to store dr field
000018E6  1C01                    1012              MOVE.B      D1,D6               ; Moving byte to find dr field
000018E8  E446                    1013              ASR         #two,D6             ; Moving dr field to readable spot
000018EA  CC7C 0001               1014              AND         #one,D6             ; seting everything except dr to 0
000018EE                          1015  
000018EE  4241                    1016              CLR         D1  
000018F0  1218                    1017              MOVE.B      (A0)+, D1           ; Taking in next byte
000018F2                          1018              
000018F2  4245                    1019              CLR         D5
000018F4  1A01                    1020              MOVE.B      D1,D5               ; Using D6 to check if this is indeed MOVEM
000018F6  EC45                    1021              ASR         #six,D5
000018F8  CA7C 0001               1022              AND         #one,D5
000018FC  BA7C 0001               1023              CMP         #one,D5             ; This bit should be one if this is MOVEM
00001900  6600 0D22               1024              BNE         invalid             ; If this is not 1 then this is not moveM
00001904  4245                    1025              CLR         D5
00001906                          1026              
00001906  43F9 0000266F           1027              LEA         MOVEMMatch, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
0000190C  103C 000E               1028              MOVE.B      #14, D0             ; command for trap call to display message
00001910  4E4F                    1029              TRAP        #15                 ; trap call
00001912                          1030              
00001912  4245                    1031              CLR         D5                  ; Clearing D5 to store size
00001914  1A01                    1032              MOVE.B      D1,D5               ; Moving byte that contains bit for size
00001916  EA45                    1033              ASR         #five,D5            ; Moving size bit to the very right to read
00001918  CA7C 0001               1034              AND         #one,D5             ; Isolating the one bit for size
0000191C                          1035              
0000191C  4242                    1036              CLR         D2                  ; Storing EA mode in D2
0000191E  1401                    1037              MOVE.B      D1,D2
00001920  E642                    1038              ASR         #three,D2
00001922  C47C 0007               1039              AND         #seven,D2
00001926                          1040              
00001926  4243                    1041              CLR         D3                  ; Storing EA register into D3
00001928  1601                    1042              MOVE.B      D1,D3
0000192A  C67C 0007               1043              AND         #seven,D3
0000192E                          1044              
0000192E  4EB9 00001AA2           1045              JSR         MOVEMBRA
00001934                          1046              
00001934  B47C 0003               1047              CMP         #three,D2
00001938  6700 0024               1048              BEQ         skipPrintEA
0000193C                          1049              
0000193C  43F9 00002639           1050              LEA         comma, A1           ; Display comma
00001942  103C 000E               1051              MOVE.B      #14, D0             ; command for trap call to display message
00001946  4E4F                    1052              TRAP        #15                 ; trap call
00001948                          1053              
00001948                          1054  
00001948  4EB9 00001FDA           1055              JSR         printEA
0000194E                          1056              
0000194E  43F9 0000262E           1057              LEA         newline, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001954  103C 000E               1058              MOVE.B      #14, D0             ; command for trap call to display message
00001958  4E4F                    1059              TRAP        #15                 ; trap call            
0000195A                          1060  
0000195A  6000 F6B0               1061              BRA         loop            
0000195E                          1062  
0000195E                          1063  skipPrintEA 
0000195E                          1064  
0000195E  43F9 0000262E           1065              LEA         newline, A1        
00001964  103C 000E               1066              MOVE.B      #14, D0             ; command for trap call to display message
00001968  4E4F                    1067              TRAP        #15                 ; trap call            
0000196A                          1068  
0000196A  6000 F6A0               1069              BRA         loop 
0000196E                          1070  opLEA
0000196E  4244                    1071              CLR         D4                  ; Clearing space for source register
00001970  1801                    1072              MOVE.B      D1,D4               ; Moving byte to isolate register
00001972  E244                    1073              ASR         #one,D4
00001974  C87C 0007               1074              AND         #seven,D4           ; Isolated register
00001978                          1075  
00001978  4245                    1076              CLR         D5                  ; Clearing D5 to check if bits match LEA static bits
0000197A  1A01                    1077              MOVE.B      D1,D5
0000197C  CA7C 0001               1078              AND         #one,D5
00001980  E545                    1079              ASL         #two,D5
00001982                          1080              
00001982  1218                    1081              MOVE.B      (A0)+, D1           ; Taking in next byte
00001984                          1082              
00001984  1C01                    1083              MOVE.B      D1,D6
00001986  EC46                    1084              ASR         #six,D6
00001988  DA46                    1085              ADD         D6,D5
0000198A  4246                    1086              CLR         D6
0000198C                          1087  
0000198C  BA7C 0007               1088              CMP         #seven,D5
00001990  6600 0C92               1089              BNE         invalid   
00001994                          1090              
00001994  43F9 00002675           1091              LEA         LEAmatch, A1        ; we know that the opcode will be LEA, so load A1 to print message
0000199A  103C 000E               1092              MOVE.B      #14, D0             ; command for trap call to display message
0000199E  4E4F                    1093              TRAP        #15                 ; trap call            
000019A0                          1094  
000019A0  43F9 00002632           1095              LEA         space, A1         ; we know that the opcode will be MOVEM, so load A1 to print message
000019A6  103C 000E               1096              MOVE.B      #14, D0             ; command for trap call to display message
000019AA  4E4F                    1097              TRAP        #15                 ; trap call            
000019AC                          1098              
000019AC  4242                    1099              CLR         D2
000019AE  1401                    1100              MOVE.B      D1,D2
000019B0  E642                    1101              ASR         #three,D2
000019B2  C47C 0007               1102              AND         #seven,D2
000019B6                          1103              
000019B6  4243                    1104              CLR         D3
000019B8  1601                    1105              MOVE.B      D1,D3
000019BA  C67C 0007               1106              AND         #seven,D3
000019BE                          1107              
000019BE  4EB9 00001FDA           1108              JSR         printEA
000019C4                          1109              
000019C4  43F9 00002639           1110              LEA         comma, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
000019CA  103C 000E               1111              MOVE.B      #14, D0             ; command for trap call to display message
000019CE  4E4F                    1112              TRAP        #15                 ; trap call            
000019D0                          1113              
000019D0                          1114              
000019D0  4243                    1115              CLR         D3
000019D2  1604                    1116              MOVE.B      D4,D3
000019D4  143C 0001               1117              MOVE.B      #one,D2
000019D8                          1118              
000019D8  4EB9 00001FDA           1119              JSR         printEA             ; Prints out source address
000019DE                          1120              
000019DE  43F9 0000262E           1121              LEA         newline, A1         ; Prints new line
000019E4  103C 000E               1122              MOVE.B      #14, D0             ; command for trap call to display message
000019E8  4E4F                    1123              TRAP        #15                 ; trap call
000019EA                          1124  
000019EA  6000 F620               1125              BRA         loop            
000019EE                          1126              
000019EE                          1127              
000019EE                          1128             
000019EE                          1129  
000019EE                          1130  
000019EE                          1131  opSUBQ      
000019EE  43F9 00002679           1132              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
000019F4  103C 000E               1133              MOVE.B      #14, D0             ; command for trap call to display message
000019F8  4E4F                    1134              TRAP        #15                 ; trap call
000019FA                          1135  
000019FA  43F9 0000267E           1136  opBRA       LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001A00  103C 000E               1137              MOVE.B      #14, D0             ; command for trap call to display message
00001A04  4E4F                    1138              TRAP        #15                 ; trap call
00001A06  43F9 00002632           1139              LEA         space, A1           ; create spaces
00001A0C  103C 000E               1140              MOVE.B      #14, D0             ; command for trap call to display message
00001A10  4E4F                    1141              TRAP        #15                 ; trap call
00001A12                          1142  
00001A12  43F9 00002682           1143  opBCS       LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001A18  103C 000E               1144              MOVE.B      #14, D0             ; command for trap call to display message
00001A1C  4E4F                    1145              TRAP        #15                 ; trap call
00001A1E                          1146  
00001A1E  43F9 00002686           1147  opBVC       LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001A24  103C 000E               1148              MOVE.B      #14, D0             ; command for trap call to display message
00001A28  4E4F                    1149              TRAP        #15                 ; trap call
00001A2A                          1150  
00001A2A  43F9 0000268A           1151  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001A30  103C 000E               1152          MOVE.B      #14, D0             ; command for trap call to display message
00001A34  4E4F                    1153          TRAP        #15                 ; trap call
00001A36                          1154  
00001A36  43F9 0000268E           1155  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001A3C  103C 000E               1156          MOVE.B      #14, D0             ; command for trap call to display message
00001A40  4E4F                    1157          TRAP        #15                 ; trap call
00001A42                          1158  
00001A42  43F9 0000269A           1159  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001A48  103C 000E               1160          MOVE.B      #14, D0             ; command for trap call to display message
00001A4C  4E4F                    1161          TRAP        #15                 ; trap call
00001A4E                          1162  
00001A4E  43F9 000026A6           1163  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001A54  103C 000E               1164          MOVE.B      #14, D0             ; command for trap call to display message
00001A58  4E4F                    1165          TRAP        #15                 ; trap call
00001A5A                          1166  
00001A5A  43F9 000026C0           1167  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001A60  103C 000E               1168          MOVE.B      #14, D0             ; command for trap call to display message
00001A64  4E4F                    1169          TRAP        #15                 ; trap call
00001A66                          1170  
00001A66  43F9 000026BC           1171  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001A6C  103C 000E               1172          MOVE.B      #14, D0             ; command for trap call to display message
00001A70  4E4F                    1173          TRAP        #15                 ; trap call
00001A72                          1174  
00001A72  43F9 000026B8           1175  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00001A78  103C 000E               1176          MOVE.B      #14, D0             ; command for trap call to display message
00001A7C  4E4F                    1177          TRAP        #15                 ; trap call
00001A7E                          1178  
00001A7E  43F9 000026B4           1179  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001A84  103C 000E               1180          MOVE.B      #14, D0             ; command for trap call to display message
00001A88  4E4F                    1181          TRAP        #15                 ; trap call
00001A8A                          1182  
00001A8A  43F9 000026C8           1183  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001A90  103C 000E               1184          MOVE.B      #14, D0             ; command for trap call to display message
00001A94  4E4F                    1185          TRAP        #15                 ; trap call
00001A96                          1186  
00001A96                          1187  opROR   
00001A96  43F9 000026C4           1188          LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001A9C  103C 000E               1189          MOVE.B      #14, D0             ; command for trap call to display message
00001AA0  4E4F                    1190          TRAP        #15                 ; trap call
00001AA2                          1191  
00001AA2                          1192  
00001AA2  48E7 FF7E               1193  MOVEMBRA    MOVEM.L  D0-D7/A1-A6, -(SP)     ; Branches off depending on size bit
00001AA6  BA7C 0000               1194              CMP      #zero,D5
00001AAA  6700 000A               1195              BEQ      MOVEMW
00001AAE  BA7C 0001               1196              CMP      #one, D5
00001AB2  6700 001E               1197              BEQ      MOVEML
00001AB6                          1198              
00001AB6                          1199  MOVEMW     
00001AB6  43F9 000026CF           1200              LEA         dispWord, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001ABC  103C 000E               1201              MOVE.B      #14, D0             ; command for trap call to display message
00001AC0  4E4F                    1202              TRAP        #15                 ; trap call
00001AC2                          1203  
00001AC2  43F9 00002632           1204              LEA         space, A1           ; we know that the opcode will be ROR, so load A1 to print message
00001AC8  103C 000E               1205              MOVE.B      #14, D0             ; command for trap call to display message
00001ACC  4E4F                    1206              TRAP        #15                 ; trap call
00001ACE                          1207              
00001ACE  6000 001E               1208              BRA         CheckDR
00001AD2                          1209  
00001AD2                          1210  MOVEML   
00001AD2  43F9 000026D2           1211              LEA         dispLong, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001AD8  103C 000E               1212              MOVE.B      #14, D0             ; command for trap call to display message
00001ADC  4E4F                    1213              TRAP        #15                 ; trap call
00001ADE                          1214  
00001ADE  43F9 00002632           1215              LEA         space, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001AE4  103C 000E               1216              MOVE.B      #14, D0             ; command for trap call to display message
00001AE8  4E4F                    1217              TRAP        #15                 ; trap call
00001AEA                          1218           
00001AEA                          1219  
00001AEA  6000 0002               1220              BRA         CheckDR
00001AEE                          1221  
00001AEE                          1222  CheckDR     
00001AEE                          1223              
00001AEE                          1224                
00001AEE  3218                    1225              MOVE.W      (A0)+, D1           ; Taking in next word
00001AF0  BC7C 0000               1226              CMP         #zero,D6
00001AF4  6700 0036               1227              BEQ         printRegMem
00001AF8  BC7C 0001               1228              CMP         #one,D6
00001AFC  6700 0006               1229              BEQ         printStack
00001B00  6000 0B22               1230              BRA         invalid
00001B04                          1231              
00001B04                          1232  printStack 
00001B04  43F9 00002645           1233              LEA         stack,A1
00001B0A  103C 000E               1234              MOVE.B      #14, D0             ; command for trap call to display message
00001B0E  4E4F                    1235              TRAP        #15                 ; trap call
00001B10                          1236  
00001B10  43F9 00002641           1237              LEA         inc,A1
00001B16  103C 000E               1238              MOVE.B      #14, D0             ; command for trap call to display message
00001B1A  4E4F                    1239              TRAP        #15                 ; trap call
00001B1C                          1240              
00001B1C  43F9 00002639           1241              LEA         comma,A1
00001B22  103C 000E               1242              MOVE.B      #14, D0             ; command for trap call to display message
00001B26  4E4F                    1243              TRAP        #15                 ; trap call
00001B28                          1244              
00001B28                          1245              
00001B28  6000 0002               1246              BRA         printRegMem
00001B2C                          1247             
00001B2C                          1248  printRegMem 
00001B2C  4244                    1249              CLR         D4                  ; Using D4 to store predecrement mode addresses
00001B2E  1801                    1250              MOVE.B      D1,D4               ; Stores bits for D0-D7
00001B30                          1251              
00001B30  4245                    1252              CLR         D5
00001B32  1A01                    1253              MOVE.B      D1,D5
00001B34  CA7C 0001               1254              AND         #mask1,D5
00001B38  BA7C 0001               1255              CMP         #mask1,D5
00001B3C  6700 007A               1256              BEQ         DataReg0
00001B40                          1257              
00001B40  4245                    1258              CLR         D5
00001B42  1A01                    1259              MOVE.B      D1,D5
00001B44  CA7C 0002               1260              AND         #mask2,D5
00001B48  BA7C 0002               1261              CMP         #mask2,D5
00001B4C  6700 009A               1262              BEQ         DataReg1
00001B50                          1263  
00001B50  4245                    1264              CLR         D5
00001B52  1A01                    1265              MOVE.B      D1,D5
00001B54  CA7C 0004               1266              AND         #mask3,D5
00001B58  BA7C 0004               1267              CMP         #mask3,D5
00001B5C  6700 00CA               1268              BEQ         DataReg2            
00001B60                          1269              
00001B60  4245                    1270              CLR         D5
00001B62  1A01                    1271              MOVE.B      D1,D5
00001B64  CA7C 0008               1272              AND         #mask4,D5
00001B68  BA7C 0008               1273              CMP         #mask4,D5
00001B6C  6700 00FA               1274              BEQ         DataReg3            
00001B70                          1275              
00001B70  4245                    1276              CLR         D5
00001B72  1A01                    1277              MOVE.B      D1,D5
00001B74  CA7C 0010               1278              AND         #mask5,D5
00001B78  BA7C 0010               1279              CMP         #mask5,D5
00001B7C  6700 012A               1280              BEQ         DataReg4
00001B80                          1281  
00001B80  4245                    1282              CLR         D5
00001B82  1A01                    1283              MOVE.B      D1,D5
00001B84  CA7C 0020               1284              AND         #mask6,D5
00001B88  BA7C 0020               1285              CMP         #mask6,D5
00001B8C  6700 015A               1286              BEQ         DataReg5
00001B90                          1287  
00001B90  4245                    1288              CLR         D5
00001B92  1A01                    1289              MOVE.B      D1,D5
00001B94  CA7C 0040               1290              AND         #mask7,D5
00001B98  BA7C 0040               1291              CMP         #mask7,D5
00001B9C  6700 018A               1292              BEQ         DataReg6
00001BA0                          1293  
00001BA0  4245                    1294              CLR         D5
00001BA2  1A01                    1295              MOVE.B      D1,D5
00001BA4  CA7C 0080               1296              AND         #mask8,D5
00001BA8  BA7C 0080               1297              CMP         #mask8,D5
00001BAC  6700 01BA               1298              BEQ         DataReg7
00001BB0                          1299              
00001BB0  6000 0A72               1300              BRA         invalid
00001BB4  6000 0A6E               1301              BRA         invalid        
00001BB8                          1302              
00001BB8                          1303  DataReg0
00001BB8  43F9 000026F2           1304              LEA         dispD0, A1          ; Output string D0
00001BBE  103C 000E               1305              MOVE.B      #14, D0             ; command for trap call to display message
00001BC2  4E4F                    1306              TRAP        #15                 ; trap call
00001BC4                          1307              
00001BC4  4245                    1308              CLR         D5
00001BC6  1A01                    1309              MOVE.B      D1,D5
00001BC8  CA7C 0002               1310              AND         #mask2,D5
00001BCC  BA7C 0002               1311              CMP         #mask2,D5
00001BD0  6700 0006               1312              BEQ         Reg0Cont
00001BD4  6000 01A2               1313              BRA         printMem
00001BD8                          1314  Reg0Cont        
00001BD8  43F9 0000263F           1315              LEA         dec, A1             ; Output -
00001BDE  103C 000E               1316              MOVE.B      #14, D0             ; command for trap call to display message
00001BE2  4E4F                    1317              TRAP        #15                 ; trap call        
00001BE4  6000 0002               1318              BRA         DataReg1
00001BE8                          1319  
00001BE8                          1320  DataReg1
00001BE8  4245                    1321              CLR         D5
00001BEA  1A01                    1322              MOVE.B      D1,D5
00001BEC  CA7C 0005               1323              AND         #maskA,D5
00001BF0  BA7C 0005               1324              CMP         #maskA,D5
00001BF4  6700 0032               1325              BEQ         DataReg2
00001BF8                          1326              
00001BF8  43F9 000026F5           1327              LEA         dispD1, A1          ; Output string D0
00001BFE  103C 000E               1328              MOVE.B      #14, D0             ; command for trap call to display message
00001C02  4E4F                    1329              TRAP        #15                 ; trap call
00001C04                          1330              
00001C04  4245                    1331              CLR         D5
00001C06  1A01                    1332              MOVE.B      D1,D5
00001C08  CA7C 0004               1333              AND         #mask3,D5
00001C0C  BA7C 0004               1334              CMP         #mask3,D5
00001C10  6700 0006               1335              BEQ         Reg1Cont
00001C14  6000 0162               1336              BRA         printMem
00001C18                          1337  Reg1Cont        
00001C18  43F9 0000263F           1338              LEA         dec, A1             ; Output -
00001C1E  103C 000E               1339              MOVE.B      #14, D0             ; command for trap call to display message
00001C22  4E4F                    1340              TRAP        #15                 ; trap call        
00001C24  6000 0002               1341              BRA         DataReg2
00001C28                          1342  
00001C28                          1343  
00001C28                          1344  DataReg2
00001C28  4245                    1345              CLR         D5
00001C2A  1A01                    1346              MOVE.B      D1,D5
00001C2C  CA7C 000A               1347              AND         #maskB,D5
00001C30  BA7C 000A               1348              CMP         #maskB,D5
00001C34  6700 0032               1349              BEQ         DataReg3
00001C38                          1350              
00001C38                          1351              
00001C38  43F9 000026F8           1352              LEA         dispD2, A1          ; Output string D0
00001C3E  103C 000E               1353              MOVE.B      #14, D0             ; command for trap call to display message
00001C42  4E4F                    1354              TRAP        #15                 ; trap call
00001C44                          1355              
00001C44  4245                    1356              CLR         D5
00001C46  1A01                    1357              MOVE.B      D1,D5
00001C48  CA7C 0008               1358              AND         #mask4,D5
00001C4C  BA7C 0008               1359              CMP         #mask4,D5
00001C50  6700 0006               1360              BEQ         Reg2Cont
00001C54  6000 0122               1361              BRA         printMem
00001C58                          1362  Reg2Cont        
00001C58  43F9 0000263F           1363              LEA         dec, A1             ; Output -
00001C5E  103C 000E               1364              MOVE.B      #14, D0             ; command for trap call to display message
00001C62  4E4F                    1365              TRAP        #15                 ; trap call        
00001C64  6000 0002               1366              BRA         DataReg3
00001C68                          1367  
00001C68                          1368  DataReg3
00001C68  4245                    1369              CLR         D5
00001C6A  1A01                    1370              MOVE.B      D1,D5
00001C6C  CA7C 0014               1371              AND         #maskC,D5
00001C70  BA7C 0014               1372              CMP         #maskC,D5
00001C74  6700 0032               1373              BEQ         DataReg4
00001C78                          1374              
00001C78  43F9 000026FB           1375              LEA         dispD3, A1          ; Output string D0
00001C7E  103C 000E               1376              MOVE.B      #14, D0             ; command for trap call to display message
00001C82  4E4F                    1377              TRAP        #15                 ; trap call
00001C84                          1378              
00001C84  4245                    1379              CLR         D5
00001C86  1A01                    1380              MOVE.B      D1,D5
00001C88  CA7C 0010               1381              AND         #mask5,D5
00001C8C  BA7C 0010               1382              CMP         #mask5,D5
00001C90  6700 0006               1383              BEQ         Reg3Cont
00001C94  6000 00E2               1384              BRA         printMem
00001C98                          1385  Reg3Cont        
00001C98  43F9 0000263F           1386              LEA         dec, A1             ; Output -
00001C9E  103C 000E               1387              MOVE.B      #14, D0             ; command for trap call to display message
00001CA2  4E4F                    1388              TRAP        #15                 ; trap call        
00001CA4  6000 0002               1389              BRA         DataReg4
00001CA8                          1390  
00001CA8                          1391  
00001CA8                          1392  DataReg4
00001CA8  4245                    1393              CLR         D5
00001CAA  1A01                    1394              MOVE.B      D1,D5
00001CAC  CA7C 0028               1395              AND         #maskD,D5
00001CB0  BA7C 0028               1396              CMP         #maskD,D5
00001CB4  6700 0032               1397              BEQ         DataReg5
00001CB8                          1398              
00001CB8  43F9 000026FE           1399              LEA         dispD4, A1          ; Output string D0
00001CBE  103C 000E               1400              MOVE.B      #14, D0             ; command for trap call to display message
00001CC2  4E4F                    1401              TRAP        #15                 ; trap call
00001CC4                          1402              
00001CC4  4245                    1403              CLR         D5
00001CC6  1A01                    1404              MOVE.B      D1,D5
00001CC8  CA7C 0020               1405              AND         #mask6,D5
00001CCC  BA7C 0020               1406              CMP         #mask6,D5
00001CD0  6700 0006               1407              BEQ         Reg4Cont
00001CD4  6000 00A2               1408              BRA         printMem
00001CD8                          1409  Reg4Cont        
00001CD8  43F9 0000263F           1410              LEA         dec, A1             ; Output -
00001CDE  103C 000E               1411              MOVE.B      #14, D0             ; command for trap call to display message
00001CE2  4E4F                    1412              TRAP        #15                 ; trap call        
00001CE4  6000 0002               1413              BRA         DataReg5
00001CE8                          1414  
00001CE8                          1415  DataReg5
00001CE8  4245                    1416              CLR         D5
00001CEA  1A01                    1417              MOVE.B      D1,D5
00001CEC  CA7C 0050               1418              AND         #maskE,D5
00001CF0  BA7C 0050               1419              CMP         #maskE,D5
00001CF4  6700 0032               1420              BEQ         DataReg6
00001CF8                          1421              
00001CF8  43F9 00002701           1422              LEA         dispD5, A1          ; Output string D0
00001CFE  103C 000E               1423              MOVE.B      #14, D0             ; command for trap call to display message
00001D02  4E4F                    1424              TRAP        #15                 ; trap call
00001D04                          1425              
00001D04  4245                    1426              CLR         D5
00001D06  1A01                    1427              MOVE.B      D1,D5
00001D08  CA7C 0040               1428              AND         #mask7,D5
00001D0C  BA7C 0040               1429              CMP         #mask7,D5
00001D10  6700 0006               1430              BEQ         Reg5Cont
00001D14  6000 0062               1431              BRA         printMem
00001D18                          1432  Reg5Cont        
00001D18  43F9 0000263F           1433              LEA         dec, A1             ; Output -
00001D1E  103C 000E               1434              MOVE.B      #14, D0             ; command for trap call to display message
00001D22  4E4F                    1435              TRAP        #15                 ; trap call        
00001D24  6000 0042               1436              BRA         DataReg7
00001D28                          1437  
00001D28                          1438  DataReg6
00001D28  4245                    1439              CLR         D5
00001D2A  1A01                    1440              MOVE.B      D1,D5
00001D2C  CA7C 00A0               1441              AND         #maskF,D5
00001D30  BA7C 00A0               1442              CMP         #maskF,D5
00001D34  6700 0032               1443              BEQ         DataReg7
00001D38                          1444  
00001D38  43F9 00002704           1445              LEA         dispD6, A1          ; Output string D0
00001D3E  103C 000E               1446              MOVE.B      #14, D0             ; command for trap call to display message
00001D42  4E4F                    1447              TRAP        #15                 ; trap call
00001D44                          1448              
00001D44  4245                    1449              CLR         D5
00001D46  1A01                    1450              MOVE.B      D1,D5
00001D48  CA7C 0080               1451              AND         #mask8,D5
00001D4C  BA7C 0080               1452              CMP         #mask8,D5
00001D50  6700 0006               1453              BEQ         Reg6Cont
00001D54  6000 0022               1454              BRA         printMem
00001D58                          1455  Reg6Cont        
00001D58  43F9 0000263F           1456              LEA         dec, A1             ; Output -
00001D5E  103C 000E               1457              MOVE.B      #14, D0             ; command for trap call to display message
00001D62  4E4F                    1458              TRAP        #15                 ; trap call        
00001D64  6000 0002               1459              BRA         DataReg7
00001D68                          1460  
00001D68                          1461  DataReg7    
00001D68  43F9 00002707           1462              LEA         dispD7, A1             ; Output -
00001D6E  103C 000E               1463              MOVE.B      #14, D0             ; command for trap call to display message
00001D72  4E4F                    1464              TRAP        #15                 ; trap call        
00001D74  6000 0002               1465              BRA         printMem            
00001D78                          1466  printMem                                    ; Made this function in order to reuse if DR is 1
00001D78  6000 0002               1467              BRA         printMemNow
00001D7C                          1468  printMemNow               
00001D7C  43F9 00002643           1469              LEA         slash, A1           ; Display slash
00001D82  103C 000E               1470              MOVE.B      #14, D0             ; command for trap call to display message
00001D86  4E4F                    1471              TRAP        #15                 ; trap call
00001D88                          1472           
00001D88  4244                    1473              CLR         D4                  ; Using D4 to store predecrement mode addresses
00001D8A  3801                    1474              MOVE.W      D1,D4               ; Stores bits for D0-D7
00001D8C  E044                    1475              ASR         #eight,D4
00001D8E                          1476              
00001D8E  4245                    1477              CLR         D5
00001D90  1A04                    1478              MOVE.B      D4,D5
00001D92  CA7C 0001               1479              AND         #mask1,D5
00001D96  BA7C 0001               1480              CMP         #mask1,D5
00001D9A  6700 0072               1481              BEQ         AddrReg0
00001D9E                          1482              
00001D9E  4245                    1483              CLR         D5
00001DA0  1A04                    1484              MOVE.B      D4,D5
00001DA2  CA7C 0002               1485              AND         #mask2,D5
00001DA6  BA7C 0002               1486              CMP         #mask2,D5
00001DAA  6700 0092               1487              BEQ         AddrReg1
00001DAE                          1488  
00001DAE  4245                    1489              CLR         D5
00001DB0  1A04                    1490              MOVE.B      D4,D5
00001DB2  CA7C 0004               1491              AND         #mask3,D5
00001DB6  BA7C 0004               1492              CMP         #mask3,D5
00001DBA  6700 00C2               1493              BEQ         AddrReg2            
00001DBE                          1494              
00001DBE  4245                    1495              CLR         D5
00001DC0  1A04                    1496              MOVE.B      D4,D5
00001DC2  CA7C 0008               1497              AND         #mask4,D5
00001DC6  BA7C 0008               1498              CMP         #mask4,D5
00001DCA  6700 00F2               1499              BEQ         AddrReg3            
00001DCE                          1500              
00001DCE  4245                    1501              CLR         D5
00001DD0  1A04                    1502              MOVE.B      D4,D5
00001DD2  CA7C 0010               1503              AND         #mask5,D5
00001DD6  BA7C 0010               1504              CMP         #mask5,D5
00001DDA  6700 0122               1505              BEQ         AddrReg4
00001DDE                          1506  
00001DDE  4245                    1507              CLR         D5
00001DE0  1A04                    1508              MOVE.B      D4,D5
00001DE2  CA7C 0020               1509              AND         #mask6,D5
00001DE6  BA7C 0020               1510              CMP         #mask6,D5
00001DEA  6700 0152               1511              BEQ         AddrReg5
00001DEE                          1512  
00001DEE  4245                    1513              CLR         D5
00001DF0  1A04                    1514              MOVE.B      D4,D5
00001DF2  CA7C 0040               1515              AND         #mask7,D5
00001DF6  BA7C 0040               1516              CMP         #mask7,D5
00001DFA  6700 0182               1517              BEQ         AddrReg6
00001DFE                          1518  
00001DFE  4245                    1519              CLR         D5
00001E00  1A04                    1520              MOVE.B      D4,D5
00001E02  CA7C 0080               1521              AND         #mask8,D5
00001E06  BA7C 0080               1522              CMP         #mask8,D5
00001E0A  6700 01B2               1523              BEQ         AddrReg7
00001E0E                          1524  AddrReg0
00001E0E  43F9 000026D8           1525              LEA         dispA0, A1          ; Output string D0
00001E14  103C 000E               1526              MOVE.B      #14, D0             ; command for trap call to display message
00001E18  4E4F                    1527              TRAP        #15                 ; trap call
00001E1A                          1528              
00001E1A  4245                    1529              CLR         D5
00001E1C  1A01                    1530              MOVE.B      D1,D5
00001E1E  CA7C 0002               1531              AND         #mask2,D5
00001E22  BA7C 0002               1532              CMP         #mask2,D5
00001E26  6700 0006               1533              BEQ         Addr0Cont
00001E2A  6000 01A2               1534              BRA         endMOVE
00001E2E                          1535  Addr0Cont        
00001E2E  43F9 0000263F           1536              LEA         dec, A1             ; Output -
00001E34  103C 000E               1537              MOVE.B      #14, D0             ; command for trap call to display message
00001E38  4E4F                    1538              TRAP        #15                 ; trap call        
00001E3A  6000 0002               1539              BRA         AddrReg1
00001E3E                          1540  
00001E3E                          1541  AddrReg1
00001E3E  4245                    1542              CLR         D5
00001E40  1A04                    1543              MOVE.B      D4,D5
00001E42  CA7C 0005               1544              AND         #maskA,D5
00001E46  BA7C 0005               1545              CMP         #maskA,D5
00001E4A  6700 0032               1546              BEQ         AddrReg2
00001E4E                          1547              
00001E4E  43F9 000026DB           1548              LEA         dispA1, A1          ; Output string D0
00001E54  103C 000E               1549              MOVE.B      #14, D0             ; command for trap call to display message
00001E58  4E4F                    1550              TRAP        #15                 ; trap call
00001E5A                          1551              
00001E5A  4245                    1552              CLR         D5
00001E5C  1A04                    1553              MOVE.B      D4,D5
00001E5E  CA7C 0004               1554              AND         #mask3,D5
00001E62  BA7C 0004               1555              CMP         #mask3,D5
00001E66  6700 0006               1556              BEQ         Addr1Cont
00001E6A  6000 0162               1557              BRA         endMOVE
00001E6E                          1558  Addr1Cont        
00001E6E  43F9 0000263F           1559              LEA         dec, A1             ; Output -
00001E74  103C 000E               1560              MOVE.B      #14, D0             ; command for trap call to display message
00001E78  4E4F                    1561              TRAP        #15                 ; trap call        
00001E7A  6000 0002               1562              BRA         AddrReg2
00001E7E                          1563  
00001E7E                          1564  
00001E7E                          1565  AddrReg2
00001E7E  4245                    1566              CLR         D5
00001E80  1A04                    1567              MOVE.B      D4,D5
00001E82  CA7C 000A               1568              AND         #maskB,D5
00001E86  BA7C 000A               1569              CMP         #maskB,D5
00001E8A  6700 0032               1570              BEQ         AddrReg3
00001E8E                          1571              
00001E8E                          1572              
00001E8E  43F9 000026DE           1573              LEA         dispA2, A1          ; Output string D0
00001E94  103C 000E               1574              MOVE.B      #14, D0             ; command for trap call to display message
00001E98  4E4F                    1575              TRAP        #15                 ; trap call
00001E9A                          1576              
00001E9A  4245                    1577              CLR         D5
00001E9C  1A04                    1578              MOVE.B      D4,D5
00001E9E  CA7C 0008               1579              AND         #mask4,D5
00001EA2  BA7C 0008               1580              CMP         #mask4,D5
00001EA6  6700 0006               1581              BEQ         Addr2Cont
00001EAA  6000 0122               1582              BRA         endMOVE
00001EAE                          1583  Addr2Cont        
00001EAE  43F9 0000263F           1584              LEA         dec, A1             ; Output -
00001EB4  103C 000E               1585              MOVE.B      #14, D0             ; command for trap call to display message
00001EB8  4E4F                    1586              TRAP        #15                 ; trap call        
00001EBA  6000 0002               1587              BRA         AddrReg3
00001EBE                          1588  
00001EBE                          1589  AddrReg3
00001EBE  4245                    1590              CLR         D5
00001EC0  1A04                    1591              MOVE.B      D4,D5
00001EC2  CA7C 0014               1592              AND         #maskC,D5
00001EC6  BA7C 0014               1593              CMP         #maskC,D5
00001ECA  6700 0032               1594              BEQ         AddrReg4
00001ECE                          1595              
00001ECE  43F9 000026E1           1596              LEA         dispA3, A1          ; Output string D0
00001ED4  103C 000E               1597              MOVE.B      #14, D0             ; command for trap call to display message
00001ED8  4E4F                    1598              TRAP        #15                 ; trap call
00001EDA                          1599              
00001EDA  4245                    1600              CLR         D5
00001EDC  1A04                    1601              MOVE.B      D4,D5
00001EDE  CA7C 0010               1602              AND         #mask5,D5
00001EE2  BA7C 0010               1603              CMP         #mask5,D5
00001EE6  6700 0006               1604              BEQ         Addr3Cont
00001EEA  6000 00E2               1605              BRA         endMOVE
00001EEE                          1606  Addr3Cont        
00001EEE  43F9 0000263F           1607              LEA         dec, A1             ; Output -
00001EF4  103C 000E               1608              MOVE.B      #14, D0             ; command for trap call to display message
00001EF8  4E4F                    1609              TRAP        #15                 ; trap call        
00001EFA  6000 0002               1610              BRA         AddrReg4
00001EFE                          1611  
00001EFE                          1612  
00001EFE                          1613  AddrReg4
00001EFE  4245                    1614              CLR         D5
00001F00  1A04                    1615              MOVE.B      D4,D5
00001F02  CA7C 0028               1616              AND         #maskD,D5
00001F06  BA7C 0028               1617              CMP         #maskD,D5
00001F0A  6700 0032               1618              BEQ         AddrReg5
00001F0E                          1619              
00001F0E  43F9 000026E4           1620              LEA         dispA4, A1          ; Output string D0
00001F14  103C 000E               1621              MOVE.B      #14, D0             ; command for trap call to display message
00001F18  4E4F                    1622              TRAP        #15                 ; trap call
00001F1A                          1623              
00001F1A  4245                    1624              CLR         D5
00001F1C  1A04                    1625              MOVE.B      D4,D5
00001F1E  CA7C 0020               1626              AND         #mask6,D5
00001F22  BA7C 0020               1627              CMP         #mask6,D5
00001F26  6700 0006               1628              BEQ         Addr4Cont
00001F2A  6000 00A2               1629              BRA         endMOVE
00001F2E                          1630  Addr4Cont        
00001F2E  43F9 0000263F           1631              LEA         dec, A1             ; Output -
00001F34  103C 000E               1632              MOVE.B      #14, D0             ; command for trap call to display message
00001F38  4E4F                    1633              TRAP        #15                 ; trap call        
00001F3A  6000 0002               1634              BRA         AddrReg5
00001F3E                          1635  AddrReg5
00001F3E  4245                    1636              CLR         D5
00001F40  1A04                    1637              MOVE.B      D4,D5
00001F42  CA7C 0050               1638              AND         #maskE,D5
00001F46  BA7C 0050               1639              CMP         #maskE,D5
00001F4A  6700 0032               1640              BEQ         AddrReg6
00001F4E                          1641              
00001F4E  43F9 000026E7           1642              LEA         dispA5, A1          ; Output string D0
00001F54  103C 000E               1643              MOVE.B      #14, D0             ; command for trap call to display message
00001F58  4E4F                    1644              TRAP        #15                 ; trap call
00001F5A                          1645              
00001F5A  4245                    1646              CLR         D5
00001F5C  1A04                    1647              MOVE.B      D4,D5
00001F5E  CA7C 0040               1648              AND         #mask7,D5
00001F62  BA7C 0040               1649              CMP         #mask7,D5
00001F66  6700 0006               1650              BEQ         Addr5Cont
00001F6A  6000 0062               1651              BRA         endMOVE
00001F6E                          1652  Addr5Cont        
00001F6E  43F9 0000263F           1653              LEA         dec, A1             ; Output -
00001F74  103C 000E               1654              MOVE.B      #14, D0             ; command for trap call to display message
00001F78  4E4F                    1655              TRAP        #15                 ; trap call        
00001F7A  6000 0042               1656              BRA         AddrReg7
00001F7E                          1657  
00001F7E                          1658  AddrReg6
00001F7E  4245                    1659              CLR         D5
00001F80  1A04                    1660              MOVE.B      D4,D5
00001F82  CA7C 00A0               1661              AND         #maskF,D5
00001F86  BA7C 00A0               1662              CMP         #maskF,D5
00001F8A  6700 0032               1663              BEQ         AddrReg7
00001F8E                          1664  
00001F8E  43F9 000026EA           1665              LEA         dispA6, A1          ; Output string D0
00001F94  103C 000E               1666              MOVE.B      #14, D0             ; command for trap call to display message
00001F98  4E4F                    1667              TRAP        #15                 ; trap call
00001F9A                          1668              
00001F9A  4245                    1669              CLR         D5
00001F9C  1A04                    1670              MOVE.B      D4,D5
00001F9E  CA7C 0080               1671              AND         #mask8,D5
00001FA2  BA7C 0080               1672              CMP         #mask8,D5
00001FA6  6700 0006               1673              BEQ         Addr6Cont
00001FAA  6000 0022               1674              BRA         endMOVE
00001FAE                          1675  Addr6Cont        
00001FAE  43F9 0000263F           1676              LEA         dec, A1             ; Output -
00001FB4  103C 000E               1677              MOVE.B      #14, D0             ; command for trap call to display message
00001FB8  4E4F                    1678              TRAP        #15                 ; trap call        
00001FBA  6000 0002               1679              BRA         AddrReg7
00001FBE                          1680  
00001FBE                          1681  AddrReg7    
00001FBE  43F9 000026ED           1682              LEA         dispA7, A1          ; Output -
00001FC4  103C 000E               1683              MOVE.B      #14, D0             ; command for trap call to display message
00001FC8  4E4F                    1684              TRAP        #15                 ; trap call        
00001FCA  6000 0002               1685              BRA         endMOVE
00001FCE                          1686  
00001FCE                          1687  
00001FCE                          1688  
00001FCE                          1689  
00001FCE                          1690  endMOVE
00001FCE  4CDF 7EFF               1691              MOVEM.L  (SP)+, D0-D7/A1-A6
00001FD2  4E75                    1692              RTS
00001FD4                          1693  endMove1                                    ; Used if MOVEM has DR is 1
00001FD4  4CDF 7EFF               1694              MOVEM.L  (SP)+, D0-D7/A1-A6
00001FD8  4E75                    1695              RTS
00001FDA                          1696  
00001FDA                          1697  ***********************************************************************************************************
00001FDA                          1698  *
00001FDA                          1699  *                                           EA Print Check
00001FDA                          1700  *
00001FDA                          1701  ***********************************************************************************************************
00001FDA  48E7 FF7E               1702  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00001FDE                          1703  
00001FDE                          1704  
00001FDE  B43C 0000               1705              CMP.B       #zero, D2
00001FE2  6700 002E               1706              BEQ         pDataReg
00001FE6  B43C 0001               1707              CMP.B       #one, D2
00001FEA  6700 00E6               1708              BEQ         pAddrReg
00001FEE  B43C 0002               1709              CMP.B       #two, D2
00001FF2  6700 019E               1710              BEQ         pAddrDir
00001FF6  B43C 0003               1711              CMP.B       #three, D2
00001FFA  6700 02C2               1712              BEQ         pAddrPost
00001FFE  B43C 0004               1713              CMP.B       #four, D2
00002002  6700 0446               1714              BEQ         pAddrDec
00002006  B43C 0007               1715              CMP.B       #seven, D2
0000200A  6700 0576               1716              BEQ         pHex
0000200E  6000 0614               1717              BRA         invalid
00002012                          1718  
00002012                          1719  ***********************************************************************************************************
00002012                          1720  * Data Register        
00002012  B63C 0000               1721  pDataReg    CMP.B   #zero,D3
00002016  6700 003A               1722              BEQ     displayD0
0000201A  B63C 0001               1723              CMP.B   #one,D3
0000201E  6700 0042               1724              BEQ     displayD1
00002022  B63C 0002               1725              CMP.B   #two,D3
00002026  6700 004A               1726              BEQ     displayD2
0000202A  B63C 0003               1727              CMP.B   #three,D3
0000202E  6700 0052               1728              BEQ     displayD3
00002032  B63C 0004               1729              CMP.B   #four,D3
00002036  6700 005A               1730              BEQ     displayD4
0000203A  B63C 0005               1731              CMP.B   #five,D3
0000203E  6700 0062               1732              BEQ     displayD5
00002042  B63C 0006               1733              CMP.B   #six,D3
00002046  6700 006A               1734              BEQ     displayD6
0000204A  B63C 0007               1735              CMP.B   #seven,D3
0000204E  6700 0072               1736              BEQ     displayD7
00002052                          1737              
00002052  43F9 000026F2           1738  displayD0   LEA         dispD0, A1          ; Display space
00002058  103C 000E               1739              MOVE.B      #14, D0             ; command for trap call to display message
0000205C  4E4F                    1740              TRAP        #15                 ; trap call
0000205E  6000 05C4               1741              BRA         endSUB              ; go to the end of the subroutine
00002062                          1742              
00002062  43F9 000026F5           1743  displayD1   LEA         dispD1, A1          ; Display space
00002068  103C 000E               1744              MOVE.B      #14, D0             ; command for trap call to display message
0000206C  4E4F                    1745              TRAP        #15                 ; trap call
0000206E  6000 05B4               1746              BRA         endSUB              ; go to the end of the subroutine
00002072                          1747  
00002072  43F9 000026F8           1748  displayD2   LEA         dispD2, A1          ; Display space
00002078  103C 000E               1749              MOVE.B      #14, D0             ; command for trap call to display message
0000207C  4E4F                    1750              TRAP        #15                 ; trap call
0000207E  6000 05A4               1751              BRA         endSUB              ; go to the end of the subroutine
00002082                          1752  
00002082  43F9 000026FB           1753  displayD3   LEA         dispD3, A1          ; Display space
00002088  103C 000E               1754              MOVE.B      #14, D0             ; command for trap call to display message
0000208C  4E4F                    1755              TRAP        #15                 ; trap call
0000208E  6000 0594               1756              BRA         endSUB              ; go to the end of the subroutine
00002092                          1757  
00002092  43F9 000026FE           1758  displayD4   LEA         dispD4, A1          ; Display space
00002098  103C 000E               1759              MOVE.B      #14, D0             ; command for trap call to display message
0000209C  4E4F                    1760              TRAP        #15                 ; trap call
0000209E  6000 0584               1761              BRA         endSUB              ; go to the end of the subroutine
000020A2                          1762  
000020A2  43F9 00002701           1763  displayD5   LEA         dispD5, A1          ; Display space
000020A8  103C 000E               1764              MOVE.B      #14, D0             ; command for trap call to display message
000020AC  4E4F                    1765              TRAP        #15                 ; trap call
000020AE  6000 0574               1766              BRA         endSUB              ; go to the end of the subroutine
000020B2                          1767  
000020B2  43F9 00002704           1768  displayD6   LEA         dispD6, A1          ; Display space
000020B8  103C 000E               1769              MOVE.B      #14, D0             ; command for trap call to display message
000020BC  4E4F                    1770              TRAP        #15                 ; trap call
000020BE  6000 0564               1771              BRA         endSUB              ; go to the end of the subroutine
000020C2                          1772  
000020C2  43F9 00002707           1773  displayD7   LEA         dispD7, A1          ; Display space
000020C8  103C 000E               1774              MOVE.B      #14, D0             ; command for trap call to display message
000020CC  4E4F                    1775              TRAP        #15                 ; trap call
000020CE  6000 0554               1776              BRA         endSUB              ; go to the end of the subroutine
000020D2                          1777  ***********************************************************************************************************
000020D2                          1778  * Address Register
000020D2  B63C 0000               1779  pAddrReg    CMP.B   #zero,D3
000020D6  6700 003A               1780              BEQ     displayA0
000020DA  B63C 0001               1781              CMP.B   #one,D3
000020DE  6700 0042               1782              BEQ     displayA1
000020E2  B63C 0002               1783              CMP.B   #two,D3
000020E6  6700 004A               1784              BEQ     displayA2
000020EA  B63C 0003               1785              CMP.B   #three,D3
000020EE  6700 0052               1786              BEQ     displayA3
000020F2  B63C 0004               1787              CMP.B   #four,D3
000020F6  6700 005A               1788              BEQ     displayA4
000020FA  B63C 0005               1789              CMP.B   #five,D3
000020FE  6700 0062               1790              BEQ     displayA5
00002102  B63C 0006               1791              CMP.B   #six,D3
00002106  6700 006A               1792              BEQ     displayA6
0000210A  B63C 0007               1793              CMP.B   #seven,D3
0000210E  6700 0072               1794              BEQ     displayA7
00002112                          1795              
00002112  43F9 000026D8           1796  displayA0   LEA         dispA0, A1          ; Display space
00002118  103C 000E               1797              MOVE.B      #14, D0             ; command for trap call to display message
0000211C  4E4F                    1798              TRAP        #15                 ; trap call
0000211E  6000 0504               1799              BRA         endSUB              ; go to the end of the subroutine
00002122                          1800              
00002122  43F9 000026DB           1801  displayA1   LEA         dispA1, A1          ; Display space
00002128  103C 000E               1802              MOVE.B      #14, D0             ; command for trap call to display message
0000212C  4E4F                    1803              TRAP        #15                 ; trap call
0000212E  6000 04F4               1804              BRA         endSUB              ; go to the end of the subroutine
00002132                          1805  
00002132  43F9 000026DE           1806  displayA2   LEA         dispA2, A1          ; Display space
00002138  103C 000E               1807              MOVE.B      #14, D0             ; command for trap call to display message
0000213C  4E4F                    1808              TRAP        #15                 ; trap call
0000213E  6000 04E4               1809              BRA         endSUB              ; go to the end of the subroutine
00002142                          1810  
00002142  43F9 000026E1           1811  displayA3   LEA         dispA3, A1          ; Display space
00002148  103C 000E               1812              MOVE.B      #14, D0             ; command for trap call to display message
0000214C  4E4F                    1813              TRAP        #15                 ; trap call
0000214E  6000 04D4               1814              BRA         endSUB              ; go to the end of the subroutine
00002152                          1815  
00002152  43F9 000026E4           1816  displayA4   LEA         dispA4, A1          ; Display space
00002158  103C 000E               1817              MOVE.B      #14, D0             ; command for trap call to display message
0000215C  4E4F                    1818              TRAP        #15                 ; trap call
0000215E  6000 04C4               1819              BRA         endSUB              ; go to the end of the subroutine
00002162                          1820  
00002162  43F9 000026E7           1821  displayA5   LEA         dispA5, A1          ; Display space
00002168  103C 000E               1822              MOVE.B      #14, D0             ; command for trap call to display message
0000216C  4E4F                    1823              TRAP        #15                 ; trap call
0000216E  6000 04B4               1824              BRA         endSUB              ; go to the end of the subroutine
00002172                          1825  
00002172  43F9 000026EA           1826  displayA6   LEA         dispA6, A1          ; Display space
00002178  103C 000E               1827              MOVE.B      #14, D0             ; command for trap call to display message
0000217C  4E4F                    1828              TRAP        #15                 ; trap call
0000217E  6000 04A4               1829              BRA         endSUB              ; go to the end of the subroutine
00002182                          1830  
00002182  43F9 000026ED           1831  displayA7   LEA         dispA7, A1          ; Display space
00002188  103C 000E               1832              MOVE.B      #14, D0             ; command for trap call to display message
0000218C  4E4F                    1833              TRAP        #15                 ; trap call
0000218E  6000 0494               1834              BRA         endSUB              ; go to the end of the subroutine
00002192                          1835  
00002192                          1836  ***********************************************************************************************************
00002192                          1837  * Address Register Direct
00002192                          1838  
00002192  43F9 0000263B           1839  pAddrDir    LEA         opPer, A1           ; Display space
00002198  103C 000E               1840              MOVE.B      #14, D0             ; command for trap call to display message
0000219C  4E4F                    1841              TRAP        #15                 ; trap call
0000219E                          1842              
0000219E  B63C 0000               1843              CMP.B   #zero,D3
000021A2  6700 003A               1844              BEQ     displayA0A
000021A6  B63C 0001               1845              CMP.B   #one,D3
000021AA  6700 004E               1846              BEQ     displayA1A
000021AE  B63C 0002               1847              CMP.B   #two,D3
000021B2  6700 0062               1848              BEQ     displayA2A
000021B6  B63C 0003               1849              CMP.B   #three,D3
000021BA  6700 0076               1850              BEQ     displayA3A
000021BE  B63C 0004               1851              CMP.B   #four,D3
000021C2  6700 008A               1852              BEQ     displayA4A
000021C6  B63C 0005               1853              CMP.B   #five,D3
000021CA  6700 009E               1854              BEQ     displayA5A
000021CE  B63C 0006               1855              CMP.B   #six,D3
000021D2  6700 00B2               1856              BEQ     displayA6A
000021D6  B63C 0007               1857              CMP.B   #seven,D3
000021DA  6700 00C6               1858              BEQ     displayA7A
000021DE                          1859              
000021DE  43F9 000026D8           1860  displayA0A  LEA         dispA0, A1          ; Display space
000021E4  103C 000E               1861              MOVE.B      #14, D0             ; command for trap call to display message
000021E8  4E4F                    1862              TRAP        #15                 ; trap call
000021EA  43F9 0000263D           1863              LEA         clPer, A1           ; Display space
000021F0  103C 000E               1864              MOVE.B      #14, D0             ; command for trap call to display message
000021F4  4E4F                    1865              TRAP        #15                 ; trap call
000021F6  6000 042C               1866              BRA         endSUB              ; go to the end of the subroutine
000021FA                          1867              
000021FA  43F9 000026DB           1868  displayA1A  LEA         dispA1, A1          ; Display space
00002200  103C 000E               1869              MOVE.B      #14, D0             ; command for trap call to display message
00002204  4E4F                    1870              TRAP        #15                 ; trap call
00002206  43F9 0000263D           1871              LEA         clPer, A1           ; Display space
0000220C  103C 000E               1872              MOVE.B      #14, D0             ; command for trap call to display message
00002210  4E4F                    1873              TRAP        #15                 ; trap call
00002212  6000 0410               1874              BRA         endSUB              ; go to the end of the subroutine
00002216                          1875  
00002216  43F9 000026DE           1876  displayA2A  LEA         dispA2, A1          ; Display space
0000221C  103C 000E               1877              MOVE.B      #14, D0             ; command for trap call to display message
00002220  4E4F                    1878              TRAP        #15                 ; trap call
00002222  43F9 0000263D           1879              LEA         clPer, A1           ; Display space
00002228  103C 000E               1880              MOVE.B      #14, D0             ; command for trap call to display message
0000222C  4E4F                    1881              TRAP        #15                 ; trap call
0000222E  6000 03F4               1882              BRA         endSUB              ; go to the end of the subroutine
00002232                          1883  
00002232  43F9 000026E1           1884  displayA3A  LEA         dispA3, A1          ; Display space
00002238  103C 000E               1885              MOVE.B      #14, D0             ; command for trap call to display message
0000223C  4E4F                    1886              TRAP        #15                 ; trap call
0000223E  43F9 0000263D           1887              LEA         clPer, A1           ; Display space
00002244  103C 000E               1888              MOVE.B      #14, D0             ; command for trap call to display message
00002248  4E4F                    1889              TRAP        #15                 ; trap call
0000224A  6000 03D8               1890              BRA         endSUB              ; go to the end of the subroutine
0000224E                          1891  
0000224E  43F9 000026E4           1892  displayA4A  LEA         dispA4, A1          ; Display space
00002254  103C 000E               1893              MOVE.B      #14, D0             ; command for trap call to display message
00002258  4E4F                    1894              TRAP        #15                 ; trap call
0000225A  43F9 0000263D           1895              LEA         clPer, A1           ; Display space
00002260  103C 000E               1896              MOVE.B      #14, D0             ; command for trap call to display message
00002264  4E4F                    1897              TRAP        #15                 ; trap call
00002266  6000 03BC               1898              BRA         endSUB              ; go to the end of the subroutine
0000226A                          1899  
0000226A  43F9 000026E7           1900  displayA5A  LEA         dispA5, A1          ; Display space
00002270  103C 000E               1901              MOVE.B      #14, D0             ; command for trap call to display message
00002274  4E4F                    1902              TRAP        #15                 ; trap call
00002276  43F9 0000263D           1903              LEA         clPer, A1           ; Display space
0000227C  103C 000E               1904              MOVE.B      #14, D0             ; command for trap call to display message
00002280  4E4F                    1905              TRAP        #15                 ; trap call
00002282  6000 03A0               1906              BRA         endSUB              ; go to the end of the subroutine
00002286                          1907  
00002286  43F9 000026EA           1908  displayA6A  LEA         dispA6, A1          ; Display space
0000228C  103C 000E               1909              MOVE.B      #14, D0             ; command for trap call to display message
00002290  4E4F                    1910              TRAP        #15                 ; trap call
00002292  43F9 0000263D           1911              LEA         clPer, A1           ; Display space
00002298  103C 000E               1912              MOVE.B      #14, D0             ; command for trap call to display message
0000229C  4E4F                    1913              TRAP        #15                 ; trap call
0000229E  6000 0384               1914              BRA         endSUB              ; go to the end of the subroutine
000022A2                          1915  
000022A2  43F9 000026ED           1916  displayA7A  LEA         dispA7, A1          ; Display space
000022A8  103C 000E               1917              MOVE.B      #14, D0             ; command for trap call to display message
000022AC  4E4F                    1918              TRAP        #15                 ; trap call
000022AE  43F9 0000263D           1919              LEA         clPer, A1           ; Display space
000022B4  103C 000E               1920              MOVE.B      #14, D0             ; command for trap call to display message
000022B8  4E4F                    1921              TRAP        #15                 ; trap call
000022BA  6000 0368               1922              BRA         endSUB              ; go to the end of the subroutine
000022BE                          1923              
000022BE                          1924  ***********************************************************************************************************
000022BE                          1925  * Addr Postincrement
000022BE                          1926              
000022BE  43F9 0000263B           1927  pAddrPost   LEA         opPer, A1           ; Display space
000022C4  103C 000E               1928              MOVE.B      #14, D0             ; command for trap call to display message
000022C8  4E4F                    1929              TRAP        #15                 ; trap call
000022CA                          1930              
000022CA  B63C 0000               1931              CMP.B   #zero,D3
000022CE  6700 003A               1932              BEQ     displayA0P
000022D2  B63C 0001               1933              CMP.B   #one,D3
000022D6  6700 005A               1934              BEQ     displayA1P
000022DA  B63C 0002               1935              CMP.B   #two,D3
000022DE  6700 007A               1936              BEQ     displayA2P
000022E2  B63C 0003               1937              CMP.B   #three,D3
000022E6  6700 009A               1938              BEQ     displayA3P
000022EA  B63C 0004               1939              CMP.B   #four,D3
000022EE  6700 00BA               1940              BEQ     displayA4P
000022F2  B63C 0005               1941              CMP.B   #five,D3
000022F6  6700 00DA               1942              BEQ     displayA5P
000022FA  B63C 0006               1943              CMP.B   #six,D3
000022FE  6700 00FA               1944              BEQ     displayA6P
00002302  B63C 0007               1945              CMP.B   #seven,D3
00002306  6700 011A               1946              BEQ     displayA7P
0000230A                          1947              
0000230A  43F9 000026D8           1948  displayA0P  LEA         dispA0, A1          ; Display space
00002310  103C 000E               1949              MOVE.B      #14, D0             ; command for trap call to display message
00002314  4E4F                    1950              TRAP        #15                 ; trap call
00002316  43F9 0000263D           1951              LEA         clPer, A1           ; Display space
0000231C  103C 000E               1952              MOVE.B      #14, D0             ; command for trap call to display message
00002320  4E4F                    1953              TRAP        #15                 ; trap call
00002322  43F9 00002641           1954              LEA         inc, A1             ; Display space
00002328  103C 000E               1955              MOVE.B      #14, D0             ; command for trap call to display message
0000232C  4E4F                    1956              TRAP        #15                 ; trap call
0000232E  6000 02F4               1957              BRA         endSUB              ; go to the end of the subroutine
00002332                          1958              
00002332  43F9 000026DB           1959  displayA1P  LEA         dispA1, A1          ; Display space
00002338  103C 000E               1960              MOVE.B      #14, D0             ; command for trap call to display message
0000233C  4E4F                    1961              TRAP        #15                 ; trap call
0000233E  43F9 0000263D           1962              LEA         clPer, A1           ; Display space
00002344  103C 000E               1963              MOVE.B      #14, D0             ; command for trap call to display message
00002348  4E4F                    1964              TRAP        #15                 ; trap call
0000234A  43F9 00002641           1965              LEA         inc, A1             ; Display space
00002350  103C 000E               1966              MOVE.B      #14, D0             ; command for trap call to display message
00002354  4E4F                    1967              TRAP        #15                 ; trap call
00002356  6000 02CC               1968              BRA         endSUB              ; go to the end of the subroutine
0000235A                          1969  
0000235A  43F9 000026DE           1970  displayA2P  LEA         dispA2, A1          ; Display space
00002360  103C 000E               1971              MOVE.B      #14, D0             ; command for trap call to display message
00002364  4E4F                    1972              TRAP        #15                 ; trap call
00002366  43F9 0000263D           1973              LEA         clPer, A1           ; Display space
0000236C  103C 000E               1974              MOVE.B      #14, D0             ; command for trap call to display message
00002370  4E4F                    1975              TRAP        #15                 ; trap call
00002372  43F9 00002641           1976              LEA         inc, A1             ; Display space
00002378  103C 000E               1977              MOVE.B      #14, D0             ; command for trap call to display message
0000237C  4E4F                    1978              TRAP        #15                 ; trap call
0000237E  6000 02A4               1979              BRA         endSUB              ; go to the end of the subroutine
00002382                          1980  
00002382  43F9 000026E1           1981  displayA3P  LEA         dispA3, A1          ; Display space
00002388  103C 000E               1982              MOVE.B      #14, D0             ; command for trap call to display message
0000238C  4E4F                    1983              TRAP        #15                 ; trap call
0000238E  43F9 0000263D           1984              LEA         clPer, A1           ; Display space
00002394  103C 000E               1985              MOVE.B      #14, D0             ; command for trap call to display message
00002398  4E4F                    1986              TRAP        #15                 ; trap call
0000239A  43F9 00002641           1987              LEA         inc, A1             ; Display space
000023A0  103C 000E               1988              MOVE.B      #14, D0             ; command for trap call to display message
000023A4  4E4F                    1989              TRAP        #15                 ; trap call
000023A6  6000 027C               1990              BRA         endSUB              ; go to the end of the subroutine
000023AA                          1991  
000023AA  43F9 000026E4           1992  displayA4P  LEA         dispA4, A1          ; Display space
000023B0  103C 000E               1993              MOVE.B      #14, D0             ; command for trap call to display message
000023B4  4E4F                    1994              TRAP        #15                 ; trap call
000023B6  43F9 0000263D           1995              LEA         clPer, A1           ; Display space
000023BC  103C 000E               1996              MOVE.B      #14, D0             ; command for trap call to display message
000023C0  4E4F                    1997              TRAP        #15                 ; trap call
000023C2  43F9 00002641           1998              LEA         inc, A1             ; Display space
000023C8  103C 000E               1999              MOVE.B      #14, D0             ; command for trap call to display message
000023CC  4E4F                    2000              TRAP        #15                 ; trap call
000023CE  6000 0254               2001              BRA         endSUB              ; go to the end of the subroutine
000023D2                          2002  
000023D2  43F9 000026E7           2003  displayA5P  LEA         dispA5, A1          ; Display space
000023D8  103C 000E               2004              MOVE.B      #14, D0             ; command for trap call to display message
000023DC  4E4F                    2005              TRAP        #15                 ; trap call
000023DE  43F9 0000263D           2006              LEA         clPer, A1           ; Display space
000023E4  103C 000E               2007              MOVE.B      #14, D0             ; command for trap call to display message
000023E8  4E4F                    2008              TRAP        #15                 ; trap call
000023EA  43F9 00002641           2009              LEA         inc, A1             ; Display space
000023F0  103C 000E               2010              MOVE.B      #14, D0             ; command for trap call to display message
000023F4  4E4F                    2011              TRAP        #15                 ; trap call
000023F6  6000 022C               2012              BRA         endSUB              ; go to the end of the subroutine
000023FA                          2013  
000023FA  43F9 000026EA           2014  displayA6P  LEA         dispA6, A1          ; Display space
00002400  103C 000E               2015              MOVE.B      #14, D0             ; command for trap call to display message
00002404  4E4F                    2016              TRAP        #15                 ; trap call
00002406  43F9 0000263D           2017              LEA         clPer, A1           ; Display space
0000240C  103C 000E               2018              MOVE.B      #14, D0             ; command for trap call to display message
00002410  4E4F                    2019              TRAP        #15                 ; trap call
00002412  43F9 00002641           2020              LEA         inc, A1             ; Display space
00002418  103C 000E               2021              MOVE.B      #14, D0             ; command for trap call to display message
0000241C  4E4F                    2022              TRAP        #15                 ; trap call
0000241E  6000 0204               2023              BRA         endSUB              ; go to the end of the subroutine
00002422                          2024  
00002422  43F9 000026ED           2025  displayA7P  LEA         dispA7, A1          ; Display space
00002428  103C 000E               2026              MOVE.B      #14, D0             ; command for trap call to display message
0000242C  4E4F                    2027              TRAP        #15                 ; trap call
0000242E  43F9 0000263D           2028              LEA         clPer, A1           ; Display space
00002434  103C 000E               2029              MOVE.B      #14, D0             ; command for trap call to display message
00002438  4E4F                    2030              TRAP        #15                 ; trap call
0000243A  43F9 00002641           2031              LEA         inc, A1             ; Display space
00002440  103C 000E               2032              MOVE.B      #14, D0             ; command for trap call to display message
00002444  4E4F                    2033              TRAP        #15                 ; trap call
00002446  6000 01DC               2034              BRA         endSUB              ; go to the end of the subroutine
0000244A                          2035  
0000244A                          2036  ***********************************************************************************************************
0000244A                          2037  * Addr Postdecrement
0000244A                          2038  
0000244A  43F9 0000263F           2039  pAddrDec    LEA         dec, A1             ; Display space
00002450  103C 000E               2040              MOVE.B      #14, D0             ; command for trap call to display message
00002454  4E4F                    2041              TRAP        #15                 ; trap call
00002456                          2042              
00002456  43F9 0000263B           2043              LEA         opPer, A1           ; Display space
0000245C  103C 000E               2044              MOVE.B      #14, D0             ; command for trap call to display message
00002460  4E4F                    2045              TRAP        #15                 ; trap call
00002462                          2046              
00002462  B63C 0000               2047              CMP.B   #zero,D3
00002466  6700 003A               2048              BEQ     displayA0D
0000246A  B63C 0001               2049              CMP.B   #one,D3
0000246E  6700 004E               2050              BEQ     displayA1D
00002472  B63C 0002               2051              CMP.B   #two,D3
00002476  6700 0062               2052              BEQ     displayA2D
0000247A  B63C 0003               2053              CMP.B   #three,D3
0000247E  6700 0076               2054              BEQ     displayA3D
00002482  B63C 0004               2055              CMP.B   #four,D3
00002486  6700 008A               2056              BEQ     displayA4D
0000248A  B63C 0005               2057              CMP.B   #five,D3
0000248E  6700 009E               2058              BEQ     displayA5D
00002492  B63C 0006               2059              CMP.B   #six,D3
00002496  6700 00B2               2060              BEQ     displayA6D
0000249A  B63C 0007               2061              CMP.B   #seven,D3
0000249E  6700 00C6               2062              BEQ     displayA7D
000024A2                          2063              
000024A2  43F9 000026D8           2064  displayA0D  LEA         dispA0, A1          ; Display space
000024A8  103C 000E               2065              MOVE.B      #14, D0             ; command for trap call to display message
000024AC  4E4F                    2066              TRAP        #15                 ; trap call
000024AE  43F9 0000263D           2067              LEA         clPer, A1           ; Display space
000024B4  103C 000E               2068              MOVE.B      #14, D0             ; command for trap call to display message
000024B8  4E4F                    2069              TRAP        #15                 ; trap call
000024BA  6000 0168               2070              BRA         endSUB              ; go to the end of the subroutine
000024BE                          2071              
000024BE  43F9 000026DB           2072  displayA1D  LEA         dispA1, A1          ; Display space
000024C4  103C 000E               2073              MOVE.B      #14, D0             ; command for trap call to display message
000024C8  4E4F                    2074              TRAP        #15                 ; trap call
000024CA  43F9 0000263D           2075              LEA         clPer, A1           ; Display space
000024D0  103C 000E               2076              MOVE.B      #14, D0             ; command for trap call to display message
000024D4  4E4F                    2077              TRAP        #15                 ; trap call
000024D6  6000 014C               2078              BRA         endSUB              ; go to the end of the subroutine
000024DA                          2079  
000024DA  43F9 000026DE           2080  displayA2D  LEA         dispA2, A1          ; Display space
000024E0  103C 000E               2081              MOVE.B      #14, D0             ; command for trap call to display message
000024E4  4E4F                    2082              TRAP        #15                 ; trap call
000024E6  43F9 0000263D           2083              LEA         clPer, A1           ; Display space
000024EC  103C 000E               2084              MOVE.B      #14, D0             ; command for trap call to display message
000024F0  4E4F                    2085              TRAP        #15                 ; trap call
000024F2  6000 0130               2086              BRA         endSUB              ; go to the end of the subroutine
000024F6                          2087  
000024F6  43F9 000026E1           2088  displayA3D  LEA         dispA3, A1          ; Display space
000024FC  103C 000E               2089              MOVE.B      #14, D0             ; command for trap call to display message
00002500  4E4F                    2090              TRAP        #15                 ; trap call
00002502  43F9 0000263D           2091              LEA         clPer, A1           ; Display space
00002508  103C 000E               2092              MOVE.B      #14, D0             ; command for trap call to display message
0000250C  4E4F                    2093              TRAP        #15                 ; trap call
0000250E  6000 0114               2094              BRA         endSUB              ; go to the end of the subroutine
00002512                          2095  
00002512  43F9 000026E4           2096  displayA4D  LEA         dispA4, A1          ; Display space
00002518  103C 000E               2097              MOVE.B      #14, D0             ; command for trap call to display message
0000251C  4E4F                    2098              TRAP        #15                 ; trap call
0000251E  43F9 0000263D           2099              LEA         clPer, A1           ; Display space
00002524  103C 000E               2100              MOVE.B      #14, D0             ; command for trap call to display message
00002528  4E4F                    2101              TRAP        #15                 ; trap call
0000252A  6000 00F8               2102              BRA         endSUB              ; go to the end of the subroutine
0000252E                          2103  
0000252E  43F9 000026E7           2104  displayA5D  LEA         dispA5, A1          ; Display space
00002534  103C 000E               2105              MOVE.B      #14, D0             ; command for trap call to display message
00002538  4E4F                    2106              TRAP        #15                 ; trap call
0000253A  43F9 0000263D           2107              LEA         clPer, A1           ; Display space
00002540  103C 000E               2108              MOVE.B      #14, D0             ; command for trap call to display message
00002544  4E4F                    2109              TRAP        #15                 ; trap call
00002546  6000 00DC               2110              BRA         endSUB              ; go to the end of the subroutine
0000254A                          2111  
0000254A  43F9 000026EA           2112  displayA6D  LEA         dispA6, A1          ; Display space
00002550  103C 000E               2113              MOVE.B      #14, D0             ; command for trap call to display message
00002554  4E4F                    2114              TRAP        #15                 ; trap call
00002556  43F9 0000263D           2115              LEA         clPer, A1           ; Display space
0000255C  103C 000E               2116              MOVE.B      #14, D0             ; command for trap call to display message
00002560  4E4F                    2117              TRAP        #15                 ; trap call
00002562  6000 00C0               2118              BRA         endSUB              ; go to the end of the subroutine
00002566                          2119  
00002566  43F9 000026ED           2120  displayA7D  LEA         dispA7, A1          ; Display space
0000256C  103C 000E               2121              MOVE.B      #14, D0             ; command for trap call to display message
00002570  4E4F                    2122              TRAP        #15                 ; trap call
00002572  43F9 0000263D           2123              LEA         clPer, A1           ; Display space
00002578  103C 000E               2124              MOVE.B      #14, D0             ; command for trap call to display message
0000257C  4E4F                    2125              TRAP        #15                 ; trap call
0000257E  6000 00A4               2126              BRA         endSUB              ; go to the end of the subroutine
00002582                          2127  
00002582                          2128  
00002582                          2129  ***********************************************************************************************************
00002582                          2130  * Absolute Address
00002582  B63C 0000               2131  pHex        CMP.B       #zero, D3
00002586  6700 0012               2132              BEQ         AbsShort
0000258A  B63C 0001               2133              CMP.B       #one, D3
0000258E  6700 003C               2134              BEQ         AbsLong
00002592  B63C 0004               2135              CMP.B       #four, D3
00002596  6700 0066               2136              BEQ         DispImm
0000259A                          2137              
0000259A  43F9 0000263B           2138  AbsShort    LEA         opPer, A1           ; Display space
000025A0  103C 000E               2139              MOVE.B      #14, D0             ; command for trap call to display message
000025A4  4E4F                    2140              TRAP        #15                 ; trap call
000025A6                          2141              
000025A6  43F9 00002637           2142              LEA         dispHex, A1         ; Display space
000025AC  103C 000E               2143              MOVE.B      #14, D0             ; command for trap call to display message
000025B0  4E4F                    2144              TRAP        #15                 ; trap call
000025B2                          2145              
000025B2  4241                    2146              CLR         D1
000025B4  3218                    2147              MOVE.W      (A0)+, D1
000025B6                          2148              
000025B6  103C 0003               2149              MOVE.B      #3, D0
000025BA  4E4F                    2150              TRAP        #15
000025BC                          2151              
000025BC  43F9 0000263D           2152              LEA         clPer, A1           ; Display space
000025C2  103C 000E               2153              MOVE.B      #14, D0             ; command for trap call to display message
000025C6  4E4F                    2154              TRAP        #15                 ; trap call
000025C8                          2155              
000025C8  6000 005A               2156              BRA         endSub
000025CC                          2157              
000025CC  43F9 0000263B           2158  AbsLong     LEA         opPer, A1           ; Display space
000025D2  103C 000E               2159              MOVE.B      #14, D0             ; command for trap call to display message
000025D6  4E4F                    2160              TRAP        #15                 ; trap call
000025D8                          2161              
000025D8  43F9 00002637           2162              LEA         dispHex, A1         ; Display space
000025DE  103C 000E               2163              MOVE.B      #14, D0             ; command for trap call to display message
000025E2  4E4F                    2164              TRAP        #15                 ; trap call
000025E4                          2165              
000025E4  4241                    2166              CLR         D1
000025E6  2218                    2167              MOVE.L      (A0)+, D1
000025E8                          2168              
000025E8  103C 0003               2169              MOVE.B      #3, D0
000025EC  4E4F                    2170              TRAP        #15
000025EE                          2171              
000025EE  43F9 0000263D           2172              LEA         clPer, A1           ; Display space
000025F4  103C 000E               2173              MOVE.B      #14, D0             ; command for trap call to display message
000025F8  4E4F                    2174              TRAP        #15                 ; trap call
000025FA                          2175              
000025FA  6000 0028               2176              BRA         endSub
000025FE                          2177  
000025FE  43F9 00002635           2178  DispImm     LEA         hashTag, A1         ; Display space
00002604  103C 000E               2179              MOVE.B      #14, D0             ; command for trap call to display message
00002608  4E4F                    2180              TRAP        #15                 ; trap call
0000260A                          2181              
0000260A  4241                    2182              CLR         D1
0000260C  3218                    2183              MOVE.W      (A0)+, D1
0000260E                          2184  
0000260E  43F9 00002637           2185              LEA         dispHex, A1         ; Display space
00002614  103C 000E               2186              MOVE.B      #14, D0             ; command for trap call to display message
00002618  4E4F                    2187              TRAP        #15                 ; trap call
0000261A                          2188              
0000261A  103C 0003               2189              MOVE.B      #3, D0
0000261E  4E4F                    2190              TRAP        #15
00002620                          2191  
00002620  6000 0002               2192              BRA         endSub
00002624                          2193  
00002624                          2194  invalid
00002624                          2195  
00002624                          2196  endSUB
00002624                          2197          
00002624  4CDF 7EFF               2198          MOVEM.L  (SP)+, D0-D7/A1-A6
00002628  4E75                    2199          RTS
0000262A                          2200  
0000262A                          2201  ***********************************************************************************************************
0000262A                          2202  ***********************************************************************************************************
0000262A                          2203  ***********************************************************************************************************
0000262A                          2204  
0000262A                          2205  printInvalid
0000262A                          2206  endPROG    
0000262A                          2207  
0000262A  FFFF FFFF               2208      SIMHALT                             ; halt simulator
0000262E                          2209  
0000262E= 20 0D 0A 00             2210  newLine     DC.B    ' ', CR, LF, 0
00002632= 20 20 00                2211  space       DC.B    '  ', 0
00002635                          2212  
00002635= 23 00                   2213  hashTag     DC.B    '#', 0
00002637= 24 00                   2214  dispHex     DC.B    '$', 0
00002639= 2C 00                   2215  comma       DC.B    ',', 0
0000263B                          2216  
0000263B= 28 00                   2217  opPer       DC.B    '(', 0
0000263D= 29 00                   2218  clPer       DC.B    ')', 0
0000263F= 2D 00                   2219  dec         DC.B    '-', 0
00002641= 2B 00                   2220  inc         DC.B    '+', 0
00002643= 2F 00                   2221  slash       DC.B    '/', 0
00002645                          2222  
00002645= 28 53 50 29 00          2223  stack       DC.B    '(SP)', 0
0000264A                          2224  
0000264A= 4F 52 49 00             2225  ORImatch    DC.B    'ORI', 0
0000264E= 43 4D 50 49 00          2226  CMPImatch   DC.B    'CMPI', 0
00002653= 42 43 4C 52 00          2227  BCLRmatch   DC.B    'BCLR', 0
00002658= 4D 4F 56 45 00          2228  MOVEmatch   DC.B    'MOVE', 0
0000265D= 4D 4F 56 45 41 00       2229  MOVEAmatch  DC.B    'MOVEA', 0
00002663= 4E 45 47 00             2230  NEGmatch    DC.B    'NEG', 0
00002667= 52 54 53 00             2231  RTSmatch    DC.B    'RTS', 0
0000266B= 4A 53 52 00             2232  JSRmatch    DC.B    'JSR', 0
0000266F= 4D 4F 56 45 4D 00       2233  MOVEMmatch  DC.B    'MOVEM', 0
00002675= 4C 45 41 00             2234  LEAmatch    DC.B    'LEA', 0
00002679= 53 55 42 51 00          2235  SUBQmatch   DC.B    'SUBQ', 0
0000267E= 42 52 41 00             2236  BRAmatch    DC.B    'BRA', 0
00002682= 42 43 53 00             2237  BCSmatch    DC.B    'BCS', 0
00002686= 42 56 43 00             2238  BVCmatch    DC.B    'BVC', 0
0000268A= 42 47 45 00             2239  BGEmatch    DC.B    'BGE', 0
0000268E= 42 4C 54 00             2240  BLTmatch    DC.B    'BLT', 0
00002692= 44 49 56 53 00          2241  DIVSmatch   DC.B    'DIVS', 0
00002697= 4F 52 00                2242  ORmatch     DC.B    'OR', 0
0000269A= 53 55 42 00             2243  SUBmatch    DC.B    'SUB', 0
0000269E= 45 4F 52 00             2244  EORmatch    DC.B    'EOR', 0
000026A2= 43 4D 50 00             2245  CMPmatch    DC.B    'CMP', 0
000026A6= 4D 55 4C 53 00          2246  MULSmatch   DC.B    'MULS', 0
000026AB= 41 44 44 00             2247  ADDmatch    DC.B    'ADD', 0
000026AF= 41 44 44 41 00          2248  ADDAmatch   DC.B    'ADDA', 0
000026B4= 4C 53 52 00             2249  LSRmatch    DC.B    'LSR', 0
000026B8= 4C 53 4C 00             2250  LSLmatch    DC.B    'LSL', 0
000026BC= 41 53 52 00             2251  ASRmatch    DC.B    'ASR', 0
000026C0= 41 53 4C 00             2252  ASLmatch    DC.B    'ASL', 0
000026C4= 52 4F 52 00             2253  RORmatch    DC.B    'ROR', 0
000026C8= 52 4F 4C 00             2254  ROLmatch    DC.B    'ROL', 0
000026CC                          2255   
000026CC= 2E 42 00                2256  dispByte    DC.B    '.B', 0
000026CF= 2E 57 00                2257  dispWord    DC.B    '.W', 0
000026D2= 2E 4C 00                2258  dispLong    DC.B    '.L', 0
000026D5                          2259  
000026D5= 41 6E 00                2260  dispAn      DC.B    'An', 0
000026D8= 41 30 00                2261  dispA0      DC.B    'A0', 0
000026DB= 41 31 00                2262  dispA1      DC.B    'A1', 0
000026DE= 41 32 00                2263  dispA2      DC.B    'A2', 0
000026E1= 41 33 00                2264  dispA3      DC.B    'A3', 0
000026E4= 41 34 00                2265  dispA4      DC.B    'A4', 0
000026E7= 41 35 00                2266  dispA5      DC.B    'A5', 0
000026EA= 41 36 00                2267  dispA6      DC.B    'A6', 0
000026ED= 41 37 00                2268  dispA7      DC.B    'A7', 0
000026F0                          2269  
000026F0= 44 00                   2270  dispD       DC.B    'D',  0
000026F2= 44 30 00                2271  dispD0      DC.B    'D0', 0
000026F5= 44 31 00                2272  dispD1      DC.B    'D1', 0
000026F8= 44 32 00                2273  dispD2      DC.B    'D2', 0
000026FB= 44 33 00                2274  dispD3      DC.B    'D3', 0
000026FE= 44 34 00                2275  dispD4      DC.B    'D4', 0
00002701= 44 35 00                2276  dispD5      DC.B    'D5', 0
00002704= 44 36 00                2277  dispD6      DC.B    'D6', 0
00002707= 44 37 00                2278  dispD7      DC.B    'D7', 0  
0000270A                          2279  
0000270A                          2280  
0000270A= 49 6E 76 61 6C 69 ...   2281  inv      DC.B    'Invalid', 0  
00002712                          2282             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             25CC
ABSSHORT            259A
ADDAMATCH           26AF
ADDMATCH            26AB
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ADDR0CONT           1E2E
ADDR1CONT           1E6E
ADDR2CONT           1EAE
ADDR3CONT           1EEE
ADDR4CONT           1F2E
ADDR5CONT           1F6E
ADDR6CONT           1FAE
ADDRREG0            1E0E
ADDRREG1            1E3E
ADDRREG2            1E7E
ADDRREG3            1EBE
ADDRREG4            1EFE
ADDRREG5            1F3E
ADDRREG6            1F7E
ADDRREG7            1FBE
ASLMATCH            26C0
ASRMATCH            26BC
BCLRMATCH           2653
BCSMATCH            2682
BGEMATCH            268A
BLTMATCH            268E
BRAEIGHT            1118
BRAELEVEN           111C
BRAFIVE             10E8
BRAFOUR             10CC
BRAFOURTEEN         1120
BRAMATCH            267E
BRANINE             1118
BRAONE              10C0
BRASIX              10EC
BRATHIRTEEN         1120
BRATHREE            10C8
BRATWELVE           111C
BRATWO              10C4
BRAZERO             1090
BVCMATCH            2686
CHECKDR             1AEE
CLPER               263D
CMPIMATCH           264E
CMPMATCH            26A2
COMMA               2639
CR                  D
DATAREG0            1BB8
DATAREG1            1BE8
DATAREG2            1C28
DATAREG3            1C68
DATAREG4            1CA8
DATAREG5            1CE8
DATAREG6            1D28
DATAREG7            1D68
DEC                 263F
DISPA0              26D8
DISPA1              26DB
DISPA2              26DE
DISPA3              26E1
DISPA4              26E4
DISPA5              26E7
DISPA6              26EA
DISPA7              26ED
DISPAN              26D5
DISPBYTE            26CC
DISPD               26F0
DISPD0              26F2
DISPD1              26F5
DISPD2              26F8
DISPD3              26FB
DISPD4              26FE
DISPD5              2701
DISPD6              2704
DISPD7              2707
DISPHEX             2637
DISPIMM             25FE
DISPLAYA0           2112
DISPLAYA0A          21DE
DISPLAYA0D          24A2
DISPLAYA0P          230A
DISPLAYA1           2122
DISPLAYA1A          21FA
DISPLAYA1D          24BE
DISPLAYA1P          2332
DISPLAYA2           2132
DISPLAYA2A          2216
DISPLAYA2D          24DA
DISPLAYA2P          235A
DISPLAYA3           2142
DISPLAYA3A          2232
DISPLAYA3D          24F6
DISPLAYA3P          2382
DISPLAYA4           2152
DISPLAYA4A          224E
DISPLAYA4D          2512
DISPLAYA4P          23AA
DISPLAYA5           2162
DISPLAYA5A          226A
DISPLAYA5D          252E
DISPLAYA5P          23D2
DISPLAYA6           2172
DISPLAYA6A          2286
DISPLAYA6D          254A
DISPLAYA6P          23FA
DISPLAYA7           2182
DISPLAYA7A          22A2
DISPLAYA7D          2566
DISPLAYA7P          2422
DISPLAYD0           2052
DISPLAYD1           2062
DISPLAYD2           2072
DISPLAYD3           2082
DISPLAYD4           2092
DISPLAYD5           20A2
DISPLAYD6           20B2
DISPLAYD7           20C2
DISPLONG            26D2
DISPWORD            26CF
DIVSMATCH           2692
EIGHT               8
ELEVEN              B
ENDMOVE             1FCE
ENDMOVE1            1FD4
ENDPROG             262A
ENDSUB              2624
EORMATCH            269E
FIFTEEN             F
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             2635
INC                 2641
INV                 270A
INVALID             2624
JSRMATCH            266B
LEAMATCH            2675
LF                  A
LOOP                100C
LSLMATCH            26B8
LSRMATCH            26B4
MASK0               0
MASK1               1
MASK2               2
MASK3               4
MASK4               8
MASK5               10
MASK6               20
MASK7               40
MASK8               80
MASKA               5
MASKB               A
MASKC               14
MASKD               28
MASKE               50
MASKF               A0
MOVEAMATCH          265D
MOVEMATCH           2658
MOVEMBRA            1AA2
MOVEML              1AD2
MOVEMMATCH          266F
MOVEMW              1AB6
MULSMATCH           26A6
NEGMATCH            2663
NEWLINE             262E
NINE                9
ONE                 1
OPASL               1A5A
OPASR               1A66
OPBCLR              141A
OPBCS               1A12
OPBGE               1A2A
OPBLT               1A36
OPBRA               19FA
OPBVC               1A1E
OPCMPI              12A8
OPCMPIB             12F4
OPCMPIL             13B8
OPCMPIW             1356
OPDYNBCLR           147E
OPJSR               186C
OPLEA               196E
OPLSL               1A72
OPLSR               1A7E
OPMOVEAL            1600
OPMOVEAW            16FA
OPMOVEB             14EC
OPMOVEL             1570
OPMOVEM             18E4
OPMOVEMLEA          18C8
OPMOVEW             166A
OPMULS              1A4E
OPNEG               1764
OPNEGB              1792
OPNEGL              17D2
OPNEGW              1812
OPORI               1154
OPORIB              1182
OPORIL              1246
OPORIW              11E4
OPPER               263B
OPROL               1A8A
OPROR               1A96
OPRTS               18AC
OPRTSJSR            1852
OPSUB               1A42
OPSUBQ              19EE
ORIMATCH            264A
ORMATCH             2697
PADDRDEC            244A
PADDRDIR            2192
PADDRPOST           22BE
PADDRREG            20D2
PDATAREG            2012
PHEX                2582
PRINTEA             1FDA
PRINTINVALID        262A
PRINTMEM            1D78
PRINTMEMNOW         1D7C
PRINTREGMEM         1B2C
PRINTSTACK          1B04
REG0CONT            1BD8
REG1CONT            1C18
REG2CONT            1C58
REG3CONT            1C98
REG4CONT            1CD8
REG5CONT            1D18
REG6CONT            1D58
ROLMATCH            26C8
RORMATCH            26C4
RTSMATCH            2667
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SKIPPRINTEA         195E
SLASH               2643
SPACE               2632
STACK               2645
START               1000
SUBMATCH            269A
SUBQMATCH           2679
TEST_END            3100
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
