00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 11/26/2014 10:19:09 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00002000                 10  test_start  EQU     $00002000   ; defined starting address
00000000  =00002009                 11  test_end    EQU     $00002009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00002000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00002009             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 0AD8                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 0088                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0084                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 007C                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0074                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 0088                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0084                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00A8                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00A0                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 009C                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 0094                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 0090                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 0088                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C438 000F                102          AND.B       $0F, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 00AA                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 01F6                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0001                108          CMP.B       #one,D2             ; Test for static BCLR
000010A2  6700 0390                109          BEQ         opStatBCLR          ; branch to BCLR
000010A6  B43C 0008                110          CMP.B       #eight,D2           ; Test for static BCLR
000010AA  6700 0358                111          BEQ         opBCLR
000010AE  6000 0A3C                112          BRA         printInvalid
000010B2                           113          
000010B2                           114          
000010B2  6000 03AE                115  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010B6                           116  
000010B6                           117  braTwo  ; there are two opCodes available, MOVE.L, or MOVEA.L
000010B6                           118  
000010B6                           119  braThree ; there are two opCodes available, MOVE.W, or MOVEA.W
000010B6                           120  
000010B6  4242                     121  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010B8  1401                     122          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010BA  C438 000F                123          AND.B       $0F, D2             ; set first nibble to 0
000010BE                           124   
000010BE  B43C 0004                125          CMP.B       #four, D2           ; compare second nibble to 4
000010C2  6700 03C2                126          BEQ         opNEG               ; branch to NEG method
000010C6  B43C 000E                127          CMP.B       #fourteen, D2       ; compare second nibble to E
000010CA  6700 03C6                128          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010CE  6000 03C2                129          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010D2                           130  
000010D2  6000 03BE                131  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010D6                           132  
000010D6  4242                     133  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010D8  1401                     134          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010DA  C438 000F                135          AND.B       $0F, D2             ; set first nibble to 0
000010DE                           136   
000010DE  B43C 0000                137          CMP.B       #zero, D2           ; compare second nibble to 0
000010E2  6700 03BA                138          BEQ         opBRA               ; branch to BRA method
000010E6  B43C 0005                139          CMP.B       #five, D2           ; compare second nibble to 5
000010EA  6700 03CA                140          BEQ         opBCS               ; branch to BCS method
000010EE  B43C 0008                141          CMP.B       #eight, D2          ; compare second nibble to 8
000010F2  6700 03CE                142          BEQ         opBVC               ; branch to BCS method
000010F6  B43C 000C                143          CMP.B       #twelve, D2         ; compare second nibble to 12
000010FA  6700 03D2                144          BEQ         opBGE               ; branch to BGE method
000010FE  6000 03DA                145          BRA         opBLT               ; otherwise, branch to BLT method
00001102                           146  
00001102                           147  braEight    ; there are two opCodes available DIVS, or OR
00001102                           148  
00001102  6000 03E2                149  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
00001106                           150  
00001106                           151  braEleven   ; there are two opCodes available EOR, or CMP
00001106                           152  
00001106  6000 03EA                153  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
0000110A                           154    
0000110A                           155  braThirteen ; there are two opCodes available ADD, or ADDA
0000110A                           156  
0000110A  4242                     157  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
0000110C  1401                     158              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000110E  C438 000F                159              AND.B       $0F, D2             ; set first nibble to 0
00001112                           160   
00001112  B43C 0000                161              CMP.B       #zero, D2           ; compare second nibble to 0
00001116  6700 03F2                162              BEQ         opASR               ; branch to ASR method
0000111A  B43C 0001                163              CMP.B       #one, D2            ; compare second nibble to 1
0000111E  6700 03DE                164              BEQ         opASL               ; branch to ASL method
00001122  B43C 0002                165              CMP.B       #two, D2            ; compare second nibble to 2
00001126  6700 03FA                166              BEQ         opLSR               ; branch to LSR method
0000112A  B43C 0003                167              CMP.B       #three, D2          ; compare second nibble to 3
0000112E  6700 03E6                168              BEQ         opLSL               ; branch to LSL method
00001132  B43C 0006                169              CMP.B       #six, D2            ; compare second nibble to 6
00001136  6700 0402                170              BEQ         opROR               ; branch to ROR method
0000113A  6000 03F2                171              BRA         opROL               ; otherwise, branch to ROL method
0000113E                           172  
0000113E  43F9 00001B05            173  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
00001144  103C 000E                174          MOVE.B      #14, D0             ; command for trap call to display message
00001148  4E4F                     175          TRAP        #15                 ; trap call
0000114A                           176          
0000114A  1218                     177          MOVE.B      (A0)+, D1
0000114C  1401                     178          MOVE.B      D1,D2               ; copy data over
0000114E  EC42                     179          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001150  B43C 0000                180          CMP.B       #zero,D2
00001154  6700 0016                181          BEQ         opORIB
00001158  B43C 0001                182          CMP.B       #one,D2
0000115C  6700 0070                183          BEQ         opORIW
00001160  B43C 0002                184          CMP.B       #two,D2
00001164  6700 00CA                185          BEQ         opORIL
00001168                           186          
00001168  6000 0982                187          BRA         printInvalid
0000116C                           188          
0000116C  43F9 00001B87            189  opORIB  LEA         dispByte, A1        ; Display byte
00001172  103C 000E                190          MOVE.B      #14, D0             ; command for trap call to display message
00001176  4E4F                     191          TRAP        #15                 ; trap call
00001178                           192          
00001178  43F9 00001AF4            193          LEA         space, A1           ; Display space
0000117E  103C 000E                194          MOVE.B      #14, D0             ; command for trap call to display message
00001182  4E4F                     195          TRAP        #15                 ; trap call
00001184                           196          
00001184  4242                     197          CLR         D2
00001186  1401                     198          MOVE.B      D1,D2
00001188  E642                     199          ASR         #three,D2
0000118A  C47C 0007                200          AND         #seven,D2
0000118E  4243                     201          CLR         D3        
00001190  1601                     202          MOVE.B      D1,D3
00001192  C67C 0007                203          AND         #seven,D3
00001196                           204          
00001196  4241                     205          CLR         D1
00001198  3218                     206          MOVE.W      (A0)+, D1
0000119A                           207          
0000119A  43F9 00001AF7            208          LEA         hashTag, A1           ; Display space
000011A0  103C 000E                209          MOVE.B      #14, D0             ; command for trap call to display message
000011A4  4E4F                     210          TRAP        #15                 ; trap call
000011A6                           211          
000011A6  103C 0003                212          MOVE.B      #3, D0
000011AA  4E4F                     213          TRAP        #15
000011AC                           214          
000011AC  43F9 00001AFB            215          LEA         comma, A1           ; Display space
000011B2  103C 000E                216          MOVE.B      #14, D0             ; command for trap call to display message
000011B6  4E4F                     217          TRAP        #15                 ; trap call
000011B8                           218          
000011B8  4EB9 00001546            219          JSR         printEA
000011BE                           220          
000011BE  43F9 00001AF0            221          LEA         newLine, A1           ; Display space
000011C4  103C 000E                222          MOVE.B      #14, D0             ; command for trap call to display message
000011C8  4E4F                     223          TRAP        #15                 ; trap call
000011CA                           224          
000011CA  6000 FE40                225          BRA         LOOP
000011CE                           226          
000011CE                           227          
000011CE  43F9 00001B8A            228  opORIW  LEA         dispWord, A1        ; Display byte
000011D4  103C 000E                229          MOVE.B      #14, D0             ; command for trap call to display message
000011D8  4E4F                     230          TRAP        #15                 ; trap call
000011DA                           231          
000011DA  43F9 00001AF4            232          LEA         space, A1           ; Display space
000011E0  103C 000E                233          MOVE.B      #14, D0             ; command for trap call to display message
000011E4  4E4F                     234          TRAP        #15                 ; trap call
000011E6                           235          
000011E6  4242                     236          CLR         D2
000011E8  1401                     237          MOVE.B      D1,D2
000011EA  E642                     238          ASR         #three,D2
000011EC  C47C 0007                239          AND         #seven,D2
000011F0  4243                     240          CLR         D3        
000011F2  1601                     241          MOVE.B      D1,D3
000011F4  C67C 0007                242          AND         #seven,D3
000011F8                           243          
000011F8  4241                     244          CLR         D1
000011FA  3218                     245          MOVE.W      (A0)+, D1
000011FC                           246          
000011FC  43F9 00001AF7            247          LEA         hashTag, A1           ; Display space
00001202  103C 000E                248          MOVE.B      #14, D0             ; command for trap call to display message
00001206  4E4F                     249          TRAP        #15                 ; trap call
00001208                           250          
00001208  103C 0003                251          MOVE.B      #3, D0
0000120C  4E4F                     252          TRAP        #15
0000120E                           253          
0000120E  43F9 00001AFB            254          LEA         comma, A1           ; Display space
00001214  103C 000E                255          MOVE.B      #14, D0             ; command for trap call to display message
00001218  4E4F                     256          TRAP        #15                 ; trap call
0000121A                           257          
0000121A  4EB9 00001546            258          JSR         printEA
00001220                           259          
00001220  43F9 00001AF0            260          LEA         newLine, A1           ; Display space
00001226  103C 000E                261          MOVE.B      #14, D0             ; command for trap call to display message
0000122A  4E4F                     262          TRAP        #15                 ; trap call
0000122C                           263          
0000122C  6000 FDDE                264          BRA         LOOP
00001230                           265       
00001230  43F9 00001B8D            266  opORIL  LEA         dispLong, A1        ; Display byte
00001236  103C 000E                267          MOVE.B      #14, D0             ; command for trap call to display message
0000123A  4E4F                     268          TRAP        #15                 ; trap call
0000123C                           269          
0000123C  43F9 00001AF4            270          LEA         space, A1           ; Display space
00001242  103C 000E                271          MOVE.B      #14, D0             ; command for trap call to display message
00001246  4E4F                     272          TRAP        #15                 ; trap call
00001248                           273          
00001248  4242                     274          CLR         D2
0000124A  1401                     275          MOVE.B      D1,D2
0000124C  E642                     276          ASR         #three,D2
0000124E  C47C 0007                277          AND         #seven,D2
00001252  4243                     278          CLR         D3        
00001254  1601                     279          MOVE.B      D1,D3
00001256  C67C 0007                280          AND         #seven,D3
0000125A                           281          
0000125A  4241                     282          CLR         D1
0000125C  2218                     283          MOVE.L      (A0)+, D1
0000125E                           284          
0000125E  43F9 00001AF7            285          LEA         hashTag, A1           ; Display space
00001264  103C 000E                286          MOVE.B      #14, D0             ; command for trap call to display message
00001268  4E4F                     287          TRAP        #15                 ; trap call
0000126A                           288          
0000126A  103C 0003                289          MOVE.B      #3, D0
0000126E  4E4F                     290          TRAP        #15
00001270                           291          
00001270  43F9 00001AFB            292          LEA         comma, A1           ; Display space
00001276  103C 000E                293          MOVE.B      #14, D0             ; command for trap call to display message
0000127A  4E4F                     294          TRAP        #15                 ; trap call
0000127C                           295          
0000127C  4EB9 00001546            296          JSR         printEA
00001282                           297          
00001282  43F9 00001AF0            298          LEA         newLine, A1           ; Display space
00001288  103C 000E                299          MOVE.B      #14, D0             ; command for trap call to display message
0000128C  4E4F                     300          TRAP        #15                 ; trap call
0000128E                           301          
0000128E  6000 FD7C                302          BRA         LOOP
00001292                           303           
00001292  43F9 00001B09            304  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001298  103C 000E                305          MOVE.B      #14, D0             ; command for trap call to display message
0000129C  4E4F                     306          TRAP        #15                 ; trap call
0000129E                           307                  
0000129E  1218                     308          MOVE.B      (A0)+, D1
000012A0  1401                     309          MOVE.B      D1,D2               ; copy data over
000012A2  EC42                     310          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000012A4  B43C 0000                311          CMP.B       #zero,D2
000012A8  6700 0034                312          BEQ         opCMPIB
000012AC  B43C 0001                313          CMP.B       #one,D2
000012B0  6700 008E                314          BEQ         opCMPIW
000012B4  B43C 0002                315          CMP.B       #two,D2
000012B8  6700 00E8                316          BEQ         opCMPIL
000012BC                           317          
000012BC  1401                     318          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000012BE  E542                     319          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
000012C0  1802                     320          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
000012C2  4242                     321          CLR         D2                  ; Clear out data register
000012C4  1404                     322          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
000012C6  EA42                     323          ASR         #five,D2            ; Shift the register out to get just the mode
000012C8  1802                     324          MOVE.B      D2,D4               ; Store mode into D4
000012CA  4242                     325          CLR         D2
000012CC                           326          
000012CC  1401                     327          MOVE.B      D1,D2               ; Getting the EA register
000012CE  EB42                     328          ASL         #five,D2
000012D0  1A02                     329          MOVE.B      D2,D5               ; Move just the register into D5
000012D2  4242                     330          CLR         D2                  ; Clearing D2 to put data back
000012D4  1405                     331          MOVE.B      D5,D2               ; Putting back the register
000012D6  EA42                     332          ASR         #five,D2            ; Shifting bits in order to read the register
000012D8  1A02                     333          MOVE.B      D2,D5               ; Store register into D5
000012DA                           334          
000012DA  6000 FD30                335          BRA         LOOP                ; go back to the loop
000012DE                           336  
000012DE  43F9 00001B87            337  opCMPIB LEA         dispByte, A1        ; Display byte
000012E4  103C 000E                338          MOVE.B      #14, D0             ; command for trap call to display message
000012E8  4E4F                     339          TRAP        #15                 ; trap call
000012EA                           340          
000012EA  43F9 00001AF4            341          LEA         space, A1           ; Display space
000012F0  103C 000E                342          MOVE.B      #14, D0             ; command for trap call to display message
000012F4  4E4F                     343          TRAP        #15                 ; trap call
000012F6                           344          
000012F6  4242                     345          CLR         D2
000012F8  1401                     346          MOVE.B      D1,D2
000012FA  E642                     347          ASR         #three,D2
000012FC  C47C 0007                348          AND         #seven,D2
00001300  4243                     349          CLR         D3        
00001302  1601                     350          MOVE.B      D1,D3
00001304  C67C 0007                351          AND         #seven,D3
00001308                           352          
00001308  4241                     353          CLR         D1
0000130A  3218                     354          MOVE.W      (A0)+, D1
0000130C                           355          
0000130C  43F9 00001AF7            356          LEA         hashTag, A1           ; Display space
00001312  103C 000E                357          MOVE.B      #14, D0             ; command for trap call to display message
00001316  4E4F                     358          TRAP        #15                 ; trap call
00001318                           359          
00001318  103C 0003                360          MOVE.B      #3, D0
0000131C  4E4F                     361          TRAP        #15
0000131E                           362          
0000131E  43F9 00001AFB            363          LEA         comma, A1           ; Display space
00001324  103C 000E                364          MOVE.B      #14, D0             ; command for trap call to display message
00001328  4E4F                     365          TRAP        #15                 ; trap call
0000132A                           366          
0000132A  4EB9 00001546            367          JSR         printEA
00001330                           368          
00001330  43F9 00001AF0            369          LEA         newLine, A1           ; Display space
00001336  103C 000E                370          MOVE.B      #14, D0             ; command for trap call to display message
0000133A  4E4F                     371          TRAP        #15                 ; trap call
0000133C                           372  
0000133C  6000 FCCE                373          BRA         LOOP
00001340                           374  
00001340  43F9 00001B8A            375  opCMPIW LEA         dispWord, A1        ; Display byte
00001346  103C 000E                376          MOVE.B      #14, D0             ; command for trap call to display message
0000134A  4E4F                     377          TRAP        #15                 ; trap call
0000134C                           378          
0000134C  43F9 00001AF4            379          LEA         space, A1           ; Display space
00001352  103C 000E                380          MOVE.B      #14, D0             ; command for trap call to display message
00001356  4E4F                     381          TRAP        #15                 ; trap call
00001358                           382          
00001358  4242                     383          CLR         D2
0000135A  1401                     384          MOVE.B      D1,D2
0000135C  E642                     385          ASR         #three,D2
0000135E  C47C 0007                386          AND         #seven,D2
00001362  4243                     387          CLR         D3        
00001364  1601                     388          MOVE.B      D1,D3
00001366  C67C 0007                389          AND         #seven,D3
0000136A                           390          
0000136A  4241                     391          CLR         D1
0000136C  3218                     392          MOVE.W      (A0)+, D1
0000136E                           393          
0000136E  43F9 00001AF7            394          LEA         hashTag, A1           ; Display space
00001374  103C 000E                395          MOVE.B      #14, D0             ; command for trap call to display message
00001378  4E4F                     396          TRAP        #15                 ; trap call
0000137A                           397          
0000137A  103C 0003                398          MOVE.B      #3, D0
0000137E  4E4F                     399          TRAP        #15
00001380                           400          
00001380  43F9 00001AFB            401          LEA         comma, A1           ; Display space
00001386  103C 000E                402          MOVE.B      #14, D0             ; command for trap call to display message
0000138A  4E4F                     403          TRAP        #15                 ; trap call
0000138C                           404          
0000138C  4EB9 00001546            405          JSR         printEA
00001392                           406          
00001392  43F9 00001AF0            407          LEA         newLine, A1           ; Display space
00001398  103C 000E                408          MOVE.B      #14, D0             ; command for trap call to display message
0000139C  4E4F                     409          TRAP        #15                 ; trap call
0000139E  6000 FC6C                410          BRA         LOOP
000013A2                           411  
000013A2  43F9 00001B8D            412  opCMPIL LEA         dispLong, A1        ; Display byte
000013A8  103C 000E                413          MOVE.B      #14, D0             ; command for trap call to display message
000013AC  4E4F                     414          TRAP        #15                 ; trap call
000013AE                           415          
000013AE  43F9 00001AF4            416          LEA         space, A1           ; Display space
000013B4  103C 000E                417          MOVE.B      #14, D0             ; command for trap call to display message
000013B8  4E4F                     418          TRAP        #15                 ; trap call
000013BA                           419          
000013BA  4242                     420          CLR         D2
000013BC  1401                     421          MOVE.B      D1,D2
000013BE  E642                     422          ASR         #three,D2
000013C0  C47C 0007                423          AND         #seven,D2
000013C4  4243                     424          CLR         D3        
000013C6  1601                     425          MOVE.B      D1,D3
000013C8  C67C 0007                426          AND         #seven,D3
000013CC                           427          
000013CC  4241                     428          CLR         D1
000013CE  3218                     429          MOVE.W      (A0)+, D1
000013D0                           430          
000013D0  43F9 00001AF7            431          LEA         hashTag, A1           ; Display space
000013D6  103C 000E                432          MOVE.B      #14, D0             ; command for trap call to display message
000013DA  4E4F                     433          TRAP        #15                 ; trap call
000013DC                           434          
000013DC  103C 0003                435          MOVE.B      #3, D0
000013E0  4E4F                     436          TRAP        #15
000013E2                           437          
000013E2  43F9 00001AFB            438          LEA         comma, A1           ; Display space
000013E8  103C 000E                439          MOVE.B      #14, D0             ; command for trap call to display message
000013EC  4E4F                     440          TRAP        #15                 ; trap call
000013EE                           441          
000013EE  4EB9 00001546            442          JSR         printEA
000013F4                           443          
000013F4  43F9 00001AF0            444          LEA         newLine, A1           ; Display space
000013FA  103C 000E                445          MOVE.B      #14, D0             ; command for trap call to display message
000013FE  4E4F                     446          TRAP        #15                 ; trap call
00001400                           447          
00001400  6000 FC0A                448          BRA         LOOP
00001404                           449  
00001404  43F9 00001B0E            450  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000140A  103C 000E                451                  MOVE.B      #14, D0             ; command for trap call to display message
0000140E  4E4F                     452                  TRAP        #15                 ; trap call
00001410                           453                  
00001410  E242                     454                  ASR         #one,D2             ; Shift to the right to remove the 1
00001412  1602                     455                  MOVE.B      D2,D3               ; Store register into D3
00001414                           456                  
00001414  4242                     457                  CLR         D2
00001416  1218                     458                  MOVE.B      (A0)+,D1
00001418  1401                     459                  MOVE.B      D1,D2
0000141A  E442                     460                  ASR         #two,D2             ; Shift two bits over in order to put mode into the first nibble
0000141C  C47C 000F                461                  AND         #secNib,D2          ; Clear first nibble
00001420  E242                     462                  ASR         #one,D2             ; shift to remove register and have just the mode
00001422  1802                     463                  MOVE.B      D2,D4               ; Move mode into D4
00001424  4242                     464                  CLR         D2
00001426                           465                  
00001426  1401                     466                  MOVE.B      D1,D2               ; Move data back into D2 to retrieve the register
00001428  E342                     467                  ASL         #one,D2             ; shift one to the left to move node to other nibble
0000142A  C47C 000F                468                  AND         #secNib,D2          ; Clear other nibble
0000142E  E242                     469                  ASR         #one,D2             ; Move register back 
00001430  1A02                     470                  MOVE.B      D2,D5               ; Store EA register
00001432                           471                  
00001432                           472  
00001432  4242                     473                  CLR         D2                
00001434                           474          
00001434  43F9 00001B0E            475  opStatBCLR      LEA         BCLRmatch, A1       ; we know that the opcode will be BCLR, so load A1 to print message
0000143A  103C 000E                476                  MOVE.B      #14, D0             ; command for trap call to display message
0000143E  4E4F                     477                  TRAP        #15                 ; trap call
00001440                           478                  
00001440  4242                     479                  CLR         D2
00001442  1218                     480                  MOVE.B      (A0)+,D1
00001444  1401                     481                  MOVE.B      D1,D2
00001446  E442                     482                  ASR         #two,D2             ; Shift two bits over in order to put mode into the first nibble
00001448  C47C 000F                483                  AND         #secNib,D2          ; Clear first nibble
0000144C  E242                     484                  ASR         #one,D2             ; shift to remove register and have just the mode
0000144E  1602                     485                  MOVE.B      D2,D3               ; Move mode into D3
00001450  4242                     486                  CLR         D2
00001452                           487                  
00001452  1401                     488                  MOVE.B      D1,D2               ; Move data back into D2 to retrieve the register
00001454  E342                     489                  ASL         #one,D2             ; shift one to the left to move node to other nibble
00001456  C47C 000F                490                  AND         #secNib,D2          ; Clear other nibble
0000145A  E242                     491                  ASR         #one,D2             ; Move register back 
0000145C  1802                     492                  MOVE.B      D2,D4               ; Store register
0000145E                           493  
0000145E  6000 FBAC                494                  BRA         LOOP                ; go back to the loop
00001462                           495   
00001462  43F9 00001B13            496  opMOVEB LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
00001468  103C 000E                497          MOVE.B      #14, D0             ; command for trap call to display message
0000146C  4E4F                     498          TRAP        #15                 ; trap call
0000146E  43F9 00001B87            499          LEA         dispByte, A1        ; display byte
00001474  103C 000E                500          MOVE.B      #14, D0             ; command for trap call to display message
00001478  4E4F                     501          TRAP        #15                 ; trap call
0000147A  43F9 00001AF4            502          LEA         space, A1           ; create spaces
00001480  103C 000E                503          MOVE.B      #14, D0             ; command for trap call to display message
00001484  4E4F                     504          TRAP        #15                 ; trap call
00001486                           505  
00001486  43F9 00001B1E            506  opNEG   LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
0000148C  103C 000E                507          MOVE.B      #14, D0             ; command for trap call to display message
00001490  4E4F                     508          TRAP        #15                 ; trap call
00001492                           509  
00001492                           510  opRTSJSR
00001492                           511  
00001492                           512  opMOVEMLEA
00001492                           513  
00001492  43F9 00001B34            514  opSUBQ  LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
00001498  103C 000E                515          MOVE.B      #14, D0             ; command for trap call to display message
0000149C  4E4F                     516          TRAP        #15                 ; trap call
0000149E                           517  
0000149E  43F9 00001B39            518  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
000014A4  103C 000E                519          MOVE.B      #14, D0             ; command for trap call to display message
000014A8  4E4F                     520          TRAP        #15                 ; trap call
000014AA  43F9 00001AF4            521          LEA         space, A1           ; create spaces
000014B0  103C 000E                522          MOVE.B      #14, D0             ; command for trap call to display message
000014B4  4E4F                     523          TRAP        #15                 ; trap call
000014B6                           524  
000014B6  43F9 00001B3D            525  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
000014BC  103C 000E                526          MOVE.B      #14, D0             ; command for trap call to display message
000014C0  4E4F                     527          TRAP        #15                 ; trap call
000014C2                           528  
000014C2  43F9 00001B41            529  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
000014C8  103C 000E                530          MOVE.B      #14, D0             ; command for trap call to display message
000014CC  4E4F                     531          TRAP        #15                 ; trap call
000014CE                           532  
000014CE  43F9 00001B45            533  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
000014D4  103C 000E                534          MOVE.B      #14, D0             ; command for trap call to display message
000014D8  4E4F                     535          TRAP        #15                 ; trap call
000014DA                           536  
000014DA  43F9 00001B49            537  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
000014E0  103C 000E                538          MOVE.B      #14, D0             ; command for trap call to display message
000014E4  4E4F                     539          TRAP        #15                 ; trap call
000014E6                           540  
000014E6  43F9 00001B55            541  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
000014EC  103C 000E                542          MOVE.B      #14, D0             ; command for trap call to display message
000014F0  4E4F                     543          TRAP        #15                 ; trap call
000014F2                           544  
000014F2  43F9 00001B61            545  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
000014F8  103C 000E                546          MOVE.B      #14, D0             ; command for trap call to display message
000014FC  4E4F                     547          TRAP        #15                 ; trap call
000014FE                           548  
000014FE  43F9 00001B7B            549  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001504  103C 000E                550          MOVE.B      #14, D0             ; command for trap call to display message
00001508  4E4F                     551          TRAP        #15                 ; trap call
0000150A                           552  
0000150A  43F9 00001B77            553  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001510  103C 000E                554          MOVE.B      #14, D0             ; command for trap call to display message
00001514  4E4F                     555          TRAP        #15                 ; trap call
00001516                           556  
00001516  43F9 00001B73            557  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
0000151C  103C 000E                558          MOVE.B      #14, D0             ; command for trap call to display message
00001520  4E4F                     559          TRAP        #15                 ; trap call
00001522                           560  
00001522  43F9 00001B6F            561  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001528  103C 000E                562          MOVE.B      #14, D0             ; command for trap call to display message
0000152C  4E4F                     563          TRAP        #15                 ; trap call
0000152E                           564  
0000152E  43F9 00001B83            565  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001534  103C 000E                566          MOVE.B      #14, D0             ; command for trap call to display message
00001538  4E4F                     567          TRAP        #15                 ; trap call
0000153A                           568  
0000153A  43F9 00001B7F            569  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001540  103C 000E                570          MOVE.B      #14, D0             ; command for trap call to display message
00001544  4E4F                     571          TRAP        #15                 ; trap call
00001546                           572  
00001546                           573  
00001546                           574  ***********************************************************************************************************
00001546                           575  *
00001546                           576  *                                           EA Print Check
00001546                           577  *
00001546                           578  ***********************************************************************************************************
00001546  48E7 FFFE                579  printEA     MOVEM.L  D0-D7/A0-A6, -(SP)
0000154A                           580  
0000154A  B43C 0000                581              CMP.B       #zero, D2
0000154E  6700 0026                582              BEQ         pDataReg
00001552  B43C 0001                583              CMP.B       #one, D2
00001556  6700 00DE                584              BEQ         pAddrReg
0000155A  B43C 0002                585              CMP.B       #two, D2
0000155E  6700 0196                586              BEQ         pAddrDir
00001562  B43C 0003                587              CMP.B       #three, D2
00001566  6700 02BA                588              BEQ         pAddrPost
0000156A  B43C 0004                589              CMP.B       #four, D2
0000156E  6700 043E                590              BEQ         pAddrDec
00001572  6000 0572                591              BRA         invalid
00001576                           592  
00001576                           593  ***********************************************************************************************************
00001576                           594  * Data Register        
00001576  B63C 0000                595  pDataReg    CMP.B   #zero,D3
0000157A  6700 003A                596              BEQ     displayD0
0000157E  B63C 0001                597              CMP.B   #one,D3
00001582  6700 0042                598              BEQ     displayD1
00001586  B63C 0002                599              CMP.B   #two,D3
0000158A  6700 004A                600              BEQ     displayD2
0000158E  B63C 0003                601              CMP.B   #three,D3
00001592  6700 0052                602              BEQ     displayD3
00001596  B63C 0004                603              CMP.B   #four,D3
0000159A  6700 005A                604              BEQ     displayD4
0000159E  B63C 0005                605              CMP.B   #five,D3
000015A2  6700 0062                606              BEQ     displayD5
000015A6  B63C 0006                607              CMP.B   #six,D3
000015AA  6700 006A                608              BEQ     displayD6
000015AE  B63C 0007                609              CMP.B   #seven,D3
000015B2  6700 0072                610              BEQ     displayD7
000015B6                           611              
000015B6  43F9 00001BA8            612  displayD0   LEA         dispD0, A1          ; Display space
000015BC  103C 000E                613              MOVE.B      #14, D0             ; command for trap call to display message
000015C0  4E4F                     614              TRAP        #15                 ; trap call
000015C2  6000 0522                615              BRA         endSUB              ; go to the end of the subroutine
000015C6                           616              
000015C6  43F9 00001BAB            617  displayD1   LEA         dispD1, A1          ; Display space
000015CC  103C 000E                618              MOVE.B      #14, D0             ; command for trap call to display message
000015D0  4E4F                     619              TRAP        #15                 ; trap call
000015D2  6000 0512                620              BRA         endSUB              ; go to the end of the subroutine
000015D6                           621  
000015D6  43F9 00001BAE            622  displayD2   LEA         dispD2, A1          ; Display space
000015DC  103C 000E                623              MOVE.B      #14, D0             ; command for trap call to display message
000015E0  4E4F                     624              TRAP        #15                 ; trap call
000015E2  6000 0502                625              BRA         endSUB              ; go to the end of the subroutine
000015E6                           626  
000015E6  43F9 00001BB1            627  displayD3   LEA         dispD3, A1          ; Display space
000015EC  103C 000E                628              MOVE.B      #14, D0             ; command for trap call to display message
000015F0  4E4F                     629              TRAP        #15                 ; trap call
000015F2  6000 04F2                630              BRA         endSUB              ; go to the end of the subroutine
000015F6                           631  
000015F6  43F9 00001BB4            632  displayD4   LEA         dispD4, A1          ; Display space
000015FC  103C 000E                633              MOVE.B      #14, D0             ; command for trap call to display message
00001600  4E4F                     634              TRAP        #15                 ; trap call
00001602  6000 04E2                635              BRA         endSUB              ; go to the end of the subroutine
00001606                           636  
00001606  43F9 00001BB7            637  displayD5   LEA         dispD5, A1          ; Display space
0000160C  103C 000E                638              MOVE.B      #14, D0             ; command for trap call to display message
00001610  4E4F                     639              TRAP        #15                 ; trap call
00001612  6000 04D2                640              BRA         endSUB              ; go to the end of the subroutine
00001616                           641  
00001616  43F9 00001BBA            642  displayD6   LEA         dispD6, A1          ; Display space
0000161C  103C 000E                643              MOVE.B      #14, D0             ; command for trap call to display message
00001620  4E4F                     644              TRAP        #15                 ; trap call
00001622  6000 04C2                645              BRA         endSUB              ; go to the end of the subroutine
00001626                           646  
00001626  43F9 00001BBD            647  displayD7   LEA         dispD7, A1          ; Display space
0000162C  103C 000E                648              MOVE.B      #14, D0             ; command for trap call to display message
00001630  4E4F                     649              TRAP        #15                 ; trap call
00001632  6000 04B2                650              BRA         endSUB              ; go to the end of the subroutine
00001636                           651  ***********************************************************************************************************
00001636                           652  * Address Register
00001636  B63C 0000                653  pAddrReg    CMP.B   #zero,D3
0000163A  6700 003A                654              BEQ     displayA0
0000163E  B63C 0001                655              CMP.B   #one,D3
00001642  6700 0042                656              BEQ     displayA1
00001646  B63C 0002                657              CMP.B   #two,D3
0000164A  6700 004A                658              BEQ     displayA2
0000164E  B63C 0003                659              CMP.B   #three,D3
00001652  6700 0052                660              BEQ     displayA3
00001656  B63C 0004                661              CMP.B   #four,D3
0000165A  6700 005A                662              BEQ     displayA4
0000165E  B63C 0005                663              CMP.B   #five,D3
00001662  6700 0062                664              BEQ     displayA5
00001666  B63C 0006                665              CMP.B   #six,D3
0000166A  6700 006A                666              BEQ     displayA6
0000166E  B63C 0007                667              CMP.B   #seven,D3
00001672  6700 0072                668              BEQ     displayA7
00001676                           669              
00001676  43F9 00001B90            670  displayA0   LEA         dispA0, A1          ; Display space
0000167C  103C 000E                671              MOVE.B      #14, D0             ; command for trap call to display message
00001680  4E4F                     672              TRAP        #15                 ; trap call
00001682  6000 0462                673              BRA         endSUB              ; go to the end of the subroutine
00001686                           674              
00001686  43F9 00001B93            675  displayA1   LEA         dispA1, A1          ; Display space
0000168C  103C 000E                676              MOVE.B      #14, D0             ; command for trap call to display message
00001690  4E4F                     677              TRAP        #15                 ; trap call
00001692  6000 0452                678              BRA         endSUB              ; go to the end of the subroutine
00001696                           679  
00001696  43F9 00001B96            680  displayA2   LEA         dispA2, A1          ; Display space
0000169C  103C 000E                681              MOVE.B      #14, D0             ; command for trap call to display message
000016A0  4E4F                     682              TRAP        #15                 ; trap call
000016A2  6000 0442                683              BRA         endSUB              ; go to the end of the subroutine
000016A6                           684  
000016A6  43F9 00001B99            685  displayA3   LEA         dispA3, A1          ; Display space
000016AC  103C 000E                686              MOVE.B      #14, D0             ; command for trap call to display message
000016B0  4E4F                     687              TRAP        #15                 ; trap call
000016B2  6000 0432                688              BRA         endSUB              ; go to the end of the subroutine
000016B6                           689  
000016B6  43F9 00001B9C            690  displayA4   LEA         dispA4, A1          ; Display space
000016BC  103C 000E                691              MOVE.B      #14, D0             ; command for trap call to display message
000016C0  4E4F                     692              TRAP        #15                 ; trap call
000016C2  6000 0422                693              BRA         endSUB              ; go to the end of the subroutine
000016C6                           694  
000016C6  43F9 00001B9F            695  displayA5   LEA         dispA5, A1          ; Display space
000016CC  103C 000E                696              MOVE.B      #14, D0             ; command for trap call to display message
000016D0  4E4F                     697              TRAP        #15                 ; trap call
000016D2  6000 0412                698              BRA         endSUB              ; go to the end of the subroutine
000016D6                           699  
000016D6  43F9 00001BA2            700  displayA6   LEA         dispA6, A1          ; Display space
000016DC  103C 000E                701              MOVE.B      #14, D0             ; command for trap call to display message
000016E0  4E4F                     702              TRAP        #15                 ; trap call
000016E2  6000 0402                703              BRA         endSUB              ; go to the end of the subroutine
000016E6                           704  
000016E6  43F9 00001BA5            705  displayA7   LEA         dispA7, A1          ; Display space
000016EC  103C 000E                706              MOVE.B      #14, D0             ; command for trap call to display message
000016F0  4E4F                     707              TRAP        #15                 ; trap call
000016F2  6000 03F2                708              BRA         endSUB              ; go to the end of the subroutine
000016F6                           709  
000016F6                           710  ***********************************************************************************************************
000016F6                           711  * Address Register Direct
000016F6                           712  
000016F6  43F9 00001AFD            713  pAddrDir    LEA         opPer, A1           ; Display space
000016FC  103C 000E                714              MOVE.B      #14, D0             ; command for trap call to display message
00001700  4E4F                     715              TRAP        #15                 ; trap call
00001702                           716              
00001702  B63C 0000                717              CMP.B   #zero,D3
00001706  6700 003A                718              BEQ     displayA0A
0000170A  B63C 0001                719              CMP.B   #one,D3
0000170E  6700 004E                720              BEQ     displayA1A
00001712  B63C 0002                721              CMP.B   #two,D3
00001716  6700 0062                722              BEQ     displayA2A
0000171A  B63C 0003                723              CMP.B   #three,D3
0000171E  6700 0076                724              BEQ     displayA3A
00001722  B63C 0004                725              CMP.B   #four,D3
00001726  6700 008A                726              BEQ     displayA4A
0000172A  B63C 0005                727              CMP.B   #five,D3
0000172E  6700 009E                728              BEQ     displayA5A
00001732  B63C 0006                729              CMP.B   #six,D3
00001736  6700 00B2                730              BEQ     displayA6A
0000173A  B63C 0007                731              CMP.B   #seven,D3
0000173E  6700 00C6                732              BEQ     displayA7A
00001742                           733              
00001742  43F9 00001B90            734  displayA0A  LEA         dispA0, A1          ; Display space
00001748  103C 000E                735              MOVE.B      #14, D0             ; command for trap call to display message
0000174C  4E4F                     736              TRAP        #15                 ; trap call
0000174E  43F9 00001AFF            737              LEA         clPer, A1           ; Display space
00001754  103C 000E                738              MOVE.B      #14, D0             ; command for trap call to display message
00001758  4E4F                     739              TRAP        #15                 ; trap call
0000175A  6000 038A                740              BRA         endSUB              ; go to the end of the subroutine
0000175E                           741              
0000175E  43F9 00001B93            742  displayA1A  LEA         dispA1, A1          ; Display space
00001764  103C 000E                743              MOVE.B      #14, D0             ; command for trap call to display message
00001768  4E4F                     744              TRAP        #15                 ; trap call
0000176A  43F9 00001AFF            745              LEA         clPer, A1           ; Display space
00001770  103C 000E                746              MOVE.B      #14, D0             ; command for trap call to display message
00001774  4E4F                     747              TRAP        #15                 ; trap call
00001776  6000 036E                748              BRA         endSUB              ; go to the end of the subroutine
0000177A                           749  
0000177A  43F9 00001B96            750  displayA2A  LEA         dispA2, A1          ; Display space
00001780  103C 000E                751              MOVE.B      #14, D0             ; command for trap call to display message
00001784  4E4F                     752              TRAP        #15                 ; trap call
00001786  43F9 00001AFF            753              LEA         clPer, A1           ; Display space
0000178C  103C 000E                754              MOVE.B      #14, D0             ; command for trap call to display message
00001790  4E4F                     755              TRAP        #15                 ; trap call
00001792  6000 0352                756              BRA         endSUB              ; go to the end of the subroutine
00001796                           757  
00001796  43F9 00001B99            758  displayA3A  LEA         dispA3, A1          ; Display space
0000179C  103C 000E                759              MOVE.B      #14, D0             ; command for trap call to display message
000017A0  4E4F                     760              TRAP        #15                 ; trap call
000017A2  43F9 00001AFF            761              LEA         clPer, A1           ; Display space
000017A8  103C 000E                762              MOVE.B      #14, D0             ; command for trap call to display message
000017AC  4E4F                     763              TRAP        #15                 ; trap call
000017AE  6000 0336                764              BRA         endSUB              ; go to the end of the subroutine
000017B2                           765  
000017B2  43F9 00001B9C            766  displayA4A  LEA         dispA4, A1          ; Display space
000017B8  103C 000E                767              MOVE.B      #14, D0             ; command for trap call to display message
000017BC  4E4F                     768              TRAP        #15                 ; trap call
000017BE  43F9 00001AFF            769              LEA         clPer, A1           ; Display space
000017C4  103C 000E                770              MOVE.B      #14, D0             ; command for trap call to display message
000017C8  4E4F                     771              TRAP        #15                 ; trap call
000017CA  6000 031A                772              BRA         endSUB              ; go to the end of the subroutine
000017CE                           773  
000017CE  43F9 00001B9F            774  displayA5A  LEA         dispA5, A1          ; Display space
000017D4  103C 000E                775              MOVE.B      #14, D0             ; command for trap call to display message
000017D8  4E4F                     776              TRAP        #15                 ; trap call
000017DA  43F9 00001AFF            777              LEA         clPer, A1           ; Display space
000017E0  103C 000E                778              MOVE.B      #14, D0             ; command for trap call to display message
000017E4  4E4F                     779              TRAP        #15                 ; trap call
000017E6  6000 02FE                780              BRA         endSUB              ; go to the end of the subroutine
000017EA                           781  
000017EA  43F9 00001BA2            782  displayA6A  LEA         dispA6, A1          ; Display space
000017F0  103C 000E                783              MOVE.B      #14, D0             ; command for trap call to display message
000017F4  4E4F                     784              TRAP        #15                 ; trap call
000017F6  43F9 00001AFF            785              LEA         clPer, A1           ; Display space
000017FC  103C 000E                786              MOVE.B      #14, D0             ; command for trap call to display message
00001800  4E4F                     787              TRAP        #15                 ; trap call
00001802  6000 02E2                788              BRA         endSUB              ; go to the end of the subroutine
00001806                           789  
00001806  43F9 00001BA5            790  displayA7A  LEA         dispA7, A1          ; Display space
0000180C  103C 000E                791              MOVE.B      #14, D0             ; command for trap call to display message
00001810  4E4F                     792              TRAP        #15                 ; trap call
00001812  43F9 00001AFF            793              LEA         clPer, A1           ; Display space
00001818  103C 000E                794              MOVE.B      #14, D0             ; command for trap call to display message
0000181C  4E4F                     795              TRAP        #15                 ; trap call
0000181E  6000 02C6                796              BRA         endSUB              ; go to the end of the subroutine
00001822                           797              
00001822                           798  ***********************************************************************************************************
00001822                           799  * Addr Postincrement
00001822                           800              
00001822  43F9 00001AFD            801  pAddrPost   LEA         opPer, A1           ; Display space
00001828  103C 000E                802              MOVE.B      #14, D0             ; command for trap call to display message
0000182C  4E4F                     803              TRAP        #15                 ; trap call
0000182E                           804              
0000182E  B63C 0000                805              CMP.B   #zero,D3
00001832  6700 003A                806              BEQ     displayA0P
00001836  B63C 0001                807              CMP.B   #one,D3
0000183A  6700 005A                808              BEQ     displayA1P
0000183E  B63C 0002                809              CMP.B   #two,D3
00001842  6700 007A                810              BEQ     displayA2P
00001846  B63C 0003                811              CMP.B   #three,D3
0000184A  6700 009A                812              BEQ     displayA3P
0000184E  B63C 0004                813              CMP.B   #four,D3
00001852  6700 00BA                814              BEQ     displayA4P
00001856  B63C 0005                815              CMP.B   #five,D3
0000185A  6700 00DA                816              BEQ     displayA5P
0000185E  B63C 0006                817              CMP.B   #six,D3
00001862  6700 00FA                818              BEQ     displayA6P
00001866  B63C 0007                819              CMP.B   #seven,D3
0000186A  6700 011A                820              BEQ     displayA7P
0000186E                           821              
0000186E  43F9 00001B90            822  displayA0P  LEA         dispA0, A1          ; Display space
00001874  103C 000E                823              MOVE.B      #14, D0             ; command for trap call to display message
00001878  4E4F                     824              TRAP        #15                 ; trap call
0000187A  43F9 00001AFF            825              LEA         clPer, A1           ; Display space
00001880  103C 000E                826              MOVE.B      #14, D0             ; command for trap call to display message
00001884  4E4F                     827              TRAP        #15                 ; trap call
00001886  43F9 00001B03            828              LEA         inc, A1             ; Display space
0000188C  103C 000E                829              MOVE.B      #14, D0             ; command for trap call to display message
00001890  4E4F                     830              TRAP        #15                 ; trap call
00001892  6000 0252                831              BRA         endSUB              ; go to the end of the subroutine
00001896                           832              
00001896  43F9 00001B93            833  displayA1P  LEA         dispA1, A1          ; Display space
0000189C  103C 000E                834              MOVE.B      #14, D0             ; command for trap call to display message
000018A0  4E4F                     835              TRAP        #15                 ; trap call
000018A2  43F9 00001AFF            836              LEA         clPer, A1           ; Display space
000018A8  103C 000E                837              MOVE.B      #14, D0             ; command for trap call to display message
000018AC  4E4F                     838              TRAP        #15                 ; trap call
000018AE  43F9 00001B03            839              LEA         inc, A1             ; Display space
000018B4  103C 000E                840              MOVE.B      #14, D0             ; command for trap call to display message
000018B8  4E4F                     841              TRAP        #15                 ; trap call
000018BA  6000 022A                842              BRA         endSUB              ; go to the end of the subroutine
000018BE                           843  
000018BE  43F9 00001B96            844  displayA2P  LEA         dispA2, A1          ; Display space
000018C4  103C 000E                845              MOVE.B      #14, D0             ; command for trap call to display message
000018C8  4E4F                     846              TRAP        #15                 ; trap call
000018CA  43F9 00001AFF            847              LEA         clPer, A1           ; Display space
000018D0  103C 000E                848              MOVE.B      #14, D0             ; command for trap call to display message
000018D4  4E4F                     849              TRAP        #15                 ; trap call
000018D6  43F9 00001B03            850              LEA         inc, A1             ; Display space
000018DC  103C 000E                851              MOVE.B      #14, D0             ; command for trap call to display message
000018E0  4E4F                     852              TRAP        #15                 ; trap call
000018E2  6000 0202                853              BRA         endSUB              ; go to the end of the subroutine
000018E6                           854  
000018E6  43F9 00001B99            855  displayA3P  LEA         dispA3, A1          ; Display space
000018EC  103C 000E                856              MOVE.B      #14, D0             ; command for trap call to display message
000018F0  4E4F                     857              TRAP        #15                 ; trap call
000018F2  43F9 00001AFF            858              LEA         clPer, A1           ; Display space
000018F8  103C 000E                859              MOVE.B      #14, D0             ; command for trap call to display message
000018FC  4E4F                     860              TRAP        #15                 ; trap call
000018FE  43F9 00001B03            861              LEA         inc, A1             ; Display space
00001904  103C 000E                862              MOVE.B      #14, D0             ; command for trap call to display message
00001908  4E4F                     863              TRAP        #15                 ; trap call
0000190A  6000 01DA                864              BRA         endSUB              ; go to the end of the subroutine
0000190E                           865  
0000190E  43F9 00001B9C            866  displayA4P  LEA         dispA4, A1          ; Display space
00001914  103C 000E                867              MOVE.B      #14, D0             ; command for trap call to display message
00001918  4E4F                     868              TRAP        #15                 ; trap call
0000191A  43F9 00001AFF            869              LEA         clPer, A1           ; Display space
00001920  103C 000E                870              MOVE.B      #14, D0             ; command for trap call to display message
00001924  4E4F                     871              TRAP        #15                 ; trap call
00001926  43F9 00001B03            872              LEA         inc, A1             ; Display space
0000192C  103C 000E                873              MOVE.B      #14, D0             ; command for trap call to display message
00001930  4E4F                     874              TRAP        #15                 ; trap call
00001932  6000 01B2                875              BRA         endSUB              ; go to the end of the subroutine
00001936                           876  
00001936  43F9 00001B9F            877  displayA5P  LEA         dispA5, A1          ; Display space
0000193C  103C 000E                878              MOVE.B      #14, D0             ; command for trap call to display message
00001940  4E4F                     879              TRAP        #15                 ; trap call
00001942  43F9 00001AFF            880              LEA         clPer, A1           ; Display space
00001948  103C 000E                881              MOVE.B      #14, D0             ; command for trap call to display message
0000194C  4E4F                     882              TRAP        #15                 ; trap call
0000194E  43F9 00001B03            883              LEA         inc, A1             ; Display space
00001954  103C 000E                884              MOVE.B      #14, D0             ; command for trap call to display message
00001958  4E4F                     885              TRAP        #15                 ; trap call
0000195A  6000 018A                886              BRA         endSUB              ; go to the end of the subroutine
0000195E                           887  
0000195E  43F9 00001BA2            888  displayA6P  LEA         dispA6, A1          ; Display space
00001964  103C 000E                889              MOVE.B      #14, D0             ; command for trap call to display message
00001968  4E4F                     890              TRAP        #15                 ; trap call
0000196A  43F9 00001AFF            891              LEA         clPer, A1           ; Display space
00001970  103C 000E                892              MOVE.B      #14, D0             ; command for trap call to display message
00001974  4E4F                     893              TRAP        #15                 ; trap call
00001976  43F9 00001B03            894              LEA         inc, A1             ; Display space
0000197C  103C 000E                895              MOVE.B      #14, D0             ; command for trap call to display message
00001980  4E4F                     896              TRAP        #15                 ; trap call
00001982  6000 0162                897              BRA         endSUB              ; go to the end of the subroutine
00001986                           898  
00001986  43F9 00001BA5            899  displayA7P  LEA         dispA7, A1          ; Display space
0000198C  103C 000E                900              MOVE.B      #14, D0             ; command for trap call to display message
00001990  4E4F                     901              TRAP        #15                 ; trap call
00001992  43F9 00001AFF            902              LEA         clPer, A1           ; Display space
00001998  103C 000E                903              MOVE.B      #14, D0             ; command for trap call to display message
0000199C  4E4F                     904              TRAP        #15                 ; trap call
0000199E  43F9 00001B03            905              LEA         inc, A1             ; Display space
000019A4  103C 000E                906              MOVE.B      #14, D0             ; command for trap call to display message
000019A8  4E4F                     907              TRAP        #15                 ; trap call
000019AA  6000 013A                908              BRA         endSUB              ; go to the end of the subroutine
000019AE                           909  
000019AE                           910  ***********************************************************************************************************
000019AE                           911  * Addr Postdecrement
000019AE                           912  
000019AE  43F9 00001B01            913  pAddrDec    LEA         dec, A1             ; Display space
000019B4  103C 000E                914              MOVE.B      #14, D0             ; command for trap call to display message
000019B8  4E4F                     915              TRAP        #15                 ; trap call
000019BA                           916              
000019BA  43F9 00001AFD            917              LEA         opPer, A1           ; Display space
000019C0  103C 000E                918              MOVE.B      #14, D0             ; command for trap call to display message
000019C4  4E4F                     919              TRAP        #15                 ; trap call
000019C6                           920              
000019C6  B63C 0000                921              CMP.B   #zero,D3
000019CA  6700 003A                922              BEQ     displayA0D
000019CE  B63C 0001                923              CMP.B   #one,D3
000019D2  6700 004E                924              BEQ     displayA1D
000019D6  B63C 0002                925              CMP.B   #two,D3
000019DA  6700 0062                926              BEQ     displayA2D
000019DE  B63C 0003                927              CMP.B   #three,D3
000019E2  6700 0076                928              BEQ     displayA3D
000019E6  B63C 0004                929              CMP.B   #four,D3
000019EA  6700 008A                930              BEQ     displayA4D
000019EE  B63C 0005                931              CMP.B   #five,D3
000019F2  6700 009E                932              BEQ     displayA5D
000019F6  B63C 0006                933              CMP.B   #six,D3
000019FA  6700 00B2                934              BEQ     displayA6D
000019FE  B63C 0007                935              CMP.B   #seven,D3
00001A02  6700 00C6                936              BEQ     displayA7D
00001A06                           937              
00001A06  43F9 00001B90            938  displayA0D  LEA         dispA0, A1          ; Display space
00001A0C  103C 000E                939              MOVE.B      #14, D0             ; command for trap call to display message
00001A10  4E4F                     940              TRAP        #15                 ; trap call
00001A12  43F9 00001AFF            941              LEA         clPer, A1           ; Display space
00001A18  103C 000E                942              MOVE.B      #14, D0             ; command for trap call to display message
00001A1C  4E4F                     943              TRAP        #15                 ; trap call
00001A1E  6000 00C6                944              BRA         endSUB              ; go to the end of the subroutine
00001A22                           945              
00001A22  43F9 00001B93            946  displayA1D  LEA         dispA1, A1          ; Display space
00001A28  103C 000E                947              MOVE.B      #14, D0             ; command for trap call to display message
00001A2C  4E4F                     948              TRAP        #15                 ; trap call
00001A2E  43F9 00001AFF            949              LEA         clPer, A1           ; Display space
00001A34  103C 000E                950              MOVE.B      #14, D0             ; command for trap call to display message
00001A38  4E4F                     951              TRAP        #15                 ; trap call
00001A3A  6000 00AA                952              BRA         endSUB              ; go to the end of the subroutine
00001A3E                           953  
00001A3E  43F9 00001B96            954  displayA2D  LEA         dispA2, A1          ; Display space
00001A44  103C 000E                955              MOVE.B      #14, D0             ; command for trap call to display message
00001A48  4E4F                     956              TRAP        #15                 ; trap call
00001A4A  43F9 00001AFF            957              LEA         clPer, A1           ; Display space
00001A50  103C 000E                958              MOVE.B      #14, D0             ; command for trap call to display message
00001A54  4E4F                     959              TRAP        #15                 ; trap call
00001A56  6000 008E                960              BRA         endSUB              ; go to the end of the subroutine
00001A5A                           961  
00001A5A  43F9 00001B99            962  displayA3D  LEA         dispA3, A1          ; Display space
00001A60  103C 000E                963              MOVE.B      #14, D0             ; command for trap call to display message
00001A64  4E4F                     964              TRAP        #15                 ; trap call
00001A66  43F9 00001AFF            965              LEA         clPer, A1           ; Display space
00001A6C  103C 000E                966              MOVE.B      #14, D0             ; command for trap call to display message
00001A70  4E4F                     967              TRAP        #15                 ; trap call
00001A72  6000 0072                968              BRA         endSUB              ; go to the end of the subroutine
00001A76                           969  
00001A76  43F9 00001B9C            970  displayA4D  LEA         dispA4, A1          ; Display space
00001A7C  103C 000E                971              MOVE.B      #14, D0             ; command for trap call to display message
00001A80  4E4F                     972              TRAP        #15                 ; trap call
00001A82  43F9 00001AFF            973              LEA         clPer, A1           ; Display space
00001A88  103C 000E                974              MOVE.B      #14, D0             ; command for trap call to display message
00001A8C  4E4F                     975              TRAP        #15                 ; trap call
00001A8E  6000 0056                976              BRA         endSUB              ; go to the end of the subroutine
00001A92                           977  
00001A92  43F9 00001B9F            978  displayA5D  LEA         dispA5, A1          ; Display space
00001A98  103C 000E                979              MOVE.B      #14, D0             ; command for trap call to display message
00001A9C  4E4F                     980              TRAP        #15                 ; trap call
00001A9E  43F9 00001AFF            981              LEA         clPer, A1           ; Display space
00001AA4  103C 000E                982              MOVE.B      #14, D0             ; command for trap call to display message
00001AA8  4E4F                     983              TRAP        #15                 ; trap call
00001AAA  6000 003A                984              BRA         endSUB              ; go to the end of the subroutine
00001AAE                           985  
00001AAE  43F9 00001BA2            986  displayA6D  LEA         dispA6, A1          ; Display space
00001AB4  103C 000E                987              MOVE.B      #14, D0             ; command for trap call to display message
00001AB8  4E4F                     988              TRAP        #15                 ; trap call
00001ABA  43F9 00001AFF            989              LEA         clPer, A1           ; Display space
00001AC0  103C 000E                990              MOVE.B      #14, D0             ; command for trap call to display message
00001AC4  4E4F                     991              TRAP        #15                 ; trap call
00001AC6  6000 001E                992              BRA         endSUB              ; go to the end of the subroutine
00001ACA                           993  
00001ACA  43F9 00001BA5            994  displayA7D  LEA         dispA7, A1          ; Display space
00001AD0  103C 000E                995              MOVE.B      #14, D0             ; command for trap call to display message
00001AD4  4E4F                     996              TRAP        #15                 ; trap call
00001AD6  43F9 00001AFF            997              LEA         clPer, A1           ; Display space
00001ADC  103C 000E                998              MOVE.B      #14, D0             ; command for trap call to display message
00001AE0  4E4F                     999              TRAP        #15                 ; trap call
00001AE2  6000 0002               1000              BRA         endSUB              ; go to the end of the subroutine
00001AE6                          1001  
00001AE6                          1002  
00001AE6                          1003  invalid
00001AE6                          1004  
00001AE6                          1005  endSUB
00001AE6                          1006          
00001AE6  4CDF 7FFF               1007          MOVEM.L  (SP)+, D0-D7/A0-A6
00001AEA  4E75                    1008          RTS
00001AEC                          1009  
00001AEC                          1010  ***********************************************************************************************************
00001AEC                          1011  ***********************************************************************************************************
00001AEC                          1012  ***********************************************************************************************************
00001AEC                          1013  
00001AEC                          1014  printInvalid
00001AEC                          1015  endPROG    
00001AEC                          1016  
00001AEC  FFFF FFFF               1017      SIMHALT                             ; halt simulator
00001AF0                          1018  
00001AF0= 20 0D 0A 00             1019  newLine     DC.B    ' ', CR, LF, 0
00001AF4= 20 20 00                1020  space       DC.B    '  ', 0
00001AF7                          1021  
00001AF7= 23 00                   1022  hashTag     DC.B    '#', 0
00001AF9= 24 00                   1023  dispHex     DC.B    '$', 0
00001AFB= 2C 00                   1024  comma       DC.B    ',', 0
00001AFD                          1025  
00001AFD= 28 00                   1026  opPer       DC.B    '(', 0
00001AFF= 29 00                   1027  clPer       DC.B    ')', 0
00001B01= 2D 00                   1028  dec         DC.B    '-', 0
00001B03= 2B 00                   1029  inc         DC.B    '+', 0
00001B05                          1030  
00001B05= 4F 52 49 00             1031  ORImatch    DC.B    'ORI', 0
00001B09= 43 4D 50 49 00          1032  CMPImatch   DC.B    'CMPI', 0
00001B0E= 42 43 4C 52 00          1033  BCLRmatch   DC.B    'BCLR', 0
00001B13= 4D 4F 56 45 00          1034  MOVEmatch   DC.B    'MOVE', 0
00001B18= 4D 4F 56 45 41 00       1035  MOVEAmatch  DC.B    'MOVEA', 0
00001B1E= 4E 45 47 00             1036  NEGmatch    DC.B    'NEG', 0
00001B22= 52 54 53 00             1037  RTSmatch    DC.B    'RTS', 0
00001B26= 4A 53 52 00             1038  JSRmatch    DC.B    'JSR', 0
00001B2A= 4D 4F 56 45 4D 00       1039  MOVEMmatch  DC.B    'MOVEM', 0
00001B30= 4C 45 41 00             1040  LEAmatch    DC.B    'LEA', 0
00001B34= 53 55 42 51 00          1041  SUBQmatch   DC.B    'SUBQ', 0
00001B39= 42 52 41 00             1042  BRAmatch    DC.B    'BRA', 0
00001B3D= 42 43 53 00             1043  BCSmatch    DC.B    'BCS', 0
00001B41= 42 56 43 00             1044  BVCmatch    DC.B    'BVC', 0
00001B45= 42 47 45 00             1045  BGEmatch    DC.B    'BGE', 0
00001B49= 42 4C 54 00             1046  BLTmatch    DC.B    'BLT', 0
00001B4D= 44 49 56 53 00          1047  DIVSmatch   DC.B    'DIVS', 0
00001B52= 4F 52 00                1048  ORmatch     DC.B    'OR', 0
00001B55= 53 55 42 00             1049  SUBmatch    DC.B    'SUB', 0
00001B59= 45 4F 52 00             1050  EORmatch    DC.B    'EOR', 0
00001B5D= 43 4D 50 00             1051  CMPmatch    DC.B    'CMP', 0
00001B61= 4D 55 4C 53 00          1052  MULSmatch   DC.B    'MULS', 0
00001B66= 41 44 44 00             1053  ADDmatch    DC.B    'ADD', 0
00001B6A= 41 44 44 41 00          1054  ADDAmatch   DC.B    'ADDA', 0
00001B6F= 4C 53 52 00             1055  LSRmatch    DC.B    'LSR', 0
00001B73= 4C 53 4C 00             1056  LSLmatch    DC.B    'LSL', 0
00001B77= 41 53 52 00             1057  ASRmatch    DC.B    'ASR', 0
00001B7B= 41 53 4C 00             1058  ASLmatch    DC.B    'ASL', 0
00001B7F= 52 4F 52 00             1059  RORmatch    DC.B    'ROR', 0
00001B83= 52 4F 4C 00             1060  ROLmatch    DC.B    'ROL', 0
00001B87                          1061   
00001B87= 2E 42 00                1062  dispByte    DC.B    '.B', 0
00001B8A= 2E 57 00                1063  dispWord    DC.B    '.W', 0
00001B8D= 2E 4C 00                1064  dispLong    DC.B    '.L', 0
00001B90                          1065  
00001B90= 41 30 00                1066  dispA0      DC.B    'A0', 0
00001B93= 41 31 00                1067  dispA1      DC.B    'A1', 0
00001B96= 41 32 00                1068  dispA2      DC.B    'A2', 0
00001B99= 41 33 00                1069  dispA3      DC.B    'A3', 0
00001B9C= 41 34 00                1070  dispA4      DC.B    'A4', 0
00001B9F= 41 35 00                1071  dispA5      DC.B    'A5', 0
00001BA2= 41 36 00                1072  dispA6      DC.B    'A6', 0
00001BA5= 41 37 00                1073  dispA7      DC.B    'A7', 0
00001BA8                          1074  
00001BA8= 44 30 00                1075  dispD0      DC.B    'D0', 0
00001BAB= 44 31 00                1076  dispD1      DC.B    'D1', 0
00001BAE= 44 32 00                1077  dispD2      DC.B    'D2', 0
00001BB1= 44 33 00                1078  dispD3      DC.B    'D3', 0
00001BB4= 44 34 00                1079  dispD4      DC.B    'D4', 0
00001BB7= 44 35 00                1080  dispD5      DC.B    'D5', 0
00001BBA= 44 36 00                1081  dispD6      DC.B    'D6', 0
00001BBD= 44 37 00                1082  dispD7      DC.B    'D7', 0  
00001BC0                          1083             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAMATCH           1B6A
ADDMATCH            1B66
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            1B7B
ASRMATCH            1B77
BCLRMATCH           1B0E
BCSMATCH            1B3D
BGEMATCH            1B45
BLTMATCH            1B49
BRAEIGHT            1102
BRAELEVEN           1106
BRAFIVE             10D2
BRAFOUR             10B6
BRAFOURTEEN         110A
BRAMATCH            1B39
BRANINE             1102
BRAONE              10B2
BRASIX              10D6
BRATHIRTEEN         110A
BRATHREE            10B6
BRATWELVE           1106
BRATWO              10B6
BRAZERO             1086
BVCMATCH            1B41
CLPER               1AFF
CMPIMATCH           1B09
CMPMATCH            1B5D
COMMA               1AFB
CR                  D
DEC                 1B01
DISPA0              1B90
DISPA1              1B93
DISPA2              1B96
DISPA3              1B99
DISPA4              1B9C
DISPA5              1B9F
DISPA6              1BA2
DISPA7              1BA5
DISPBYTE            1B87
DISPD0              1BA8
DISPD1              1BAB
DISPD2              1BAE
DISPD3              1BB1
DISPD4              1BB4
DISPD5              1BB7
DISPD6              1BBA
DISPD7              1BBD
DISPHEX             1AF9
DISPLAYA0           1676
DISPLAYA0A          1742
DISPLAYA0D          1A06
DISPLAYA0P          186E
DISPLAYA1           1686
DISPLAYA1A          175E
DISPLAYA1D          1A22
DISPLAYA1P          1896
DISPLAYA2           1696
DISPLAYA2A          177A
DISPLAYA2D          1A3E
DISPLAYA2P          18BE
DISPLAYA3           16A6
DISPLAYA3A          1796
DISPLAYA3D          1A5A
DISPLAYA3P          18E6
DISPLAYA4           16B6
DISPLAYA4A          17B2
DISPLAYA4D          1A76
DISPLAYA4P          190E
DISPLAYA5           16C6
DISPLAYA5A          17CE
DISPLAYA5D          1A92
DISPLAYA5P          1936
DISPLAYA6           16D6
DISPLAYA6A          17EA
DISPLAYA6D          1AAE
DISPLAYA6P          195E
DISPLAYA7           16E6
DISPLAYA7A          1806
DISPLAYA7D          1ACA
DISPLAYA7P          1986
DISPLAYD0           15B6
DISPLAYD1           15C6
DISPLAYD2           15D6
DISPLAYD3           15E6
DISPLAYD4           15F6
DISPLAYD5           1606
DISPLAYD6           1616
DISPLAYD7           1626
DISPLONG            1B8D
DISPWORD            1B8A
DIVSMATCH           1B4D
EIGHT               8
ELEVEN              B
ENDPROG             1AEC
ENDSUB              1AE6
EORMATCH            1B59
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             1AF7
INC                 1B03
INVALID             1AE6
JSRMATCH            1B26
LEAMATCH            1B30
LF                  A
LOOP                100C
LSLMATCH            1B73
LSRMATCH            1B6F
MOVEAMATCH          1B18
MOVEMATCH           1B13
MOVEMMATCH          1B2A
MULSMATCH           1B61
NEGMATCH            1B1E
NEWLINE             1AF0
NINE                9
ONE                 1
OPASL               14FE
OPASR               150A
OPBCLR              1404
OPBCS               14B6
OPBGE               14CE
OPBLT               14DA
OPBRA               149E
OPBVC               14C2
OPCMPI              1292
OPCMPIB             12DE
OPCMPIL             13A2
OPCMPIW             1340
OPLSL               1516
OPLSR               1522
OPMOVEB             1462
OPMOVEMLEA          1492
OPMULS              14F2
OPNEG               1486
OPORI               113E
OPORIB              116C
OPORIL              1230
OPORIW              11CE
OPPER               1AFD
OPROL               152E
OPROR               153A
OPRTSJSR            1492
OPSTATBCLR          1434
OPSUB               14E6
OPSUBQ              1492
ORIMATCH            1B05
ORMATCH             1B52
PADDRDEC            19AE
PADDRDIR            16F6
PADDRPOST           1822
PADDRREG            1636
PDATAREG            1576
PRINTEA             1546
PRINTINVALID        1AEC
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
ROLMATCH            1B83
RORMATCH            1B7F
RTSMATCH            1B22
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               1AF4
START               1000
SUBMATCH            1B55
SUBQMATCH           1B34
TEST_END            2009
TEST_START          2000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
