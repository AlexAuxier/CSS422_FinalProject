00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 12/6/2014 6:21:33 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00002000                 10  test_start  EQU     $00002000   ; defined starting address
00000000  =00002009                 11  test_end    EQU     $00002009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000  =0000000F                 27  fifteen     EQU     $0F         ; defined hex value 15
00000000                            28  
00000000  =00000000                 29  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 30  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 31  s1L         EQU     %0010       ; long size 1
00000000                            32  
00000000  =00000000                 33  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 34  s2L         EQU     %0001       ; long size 2
00000000                            35  
00000000  =00000001                 36  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 37  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 38  s3L         EQU     %0010       ; long size 3
00000000                            39  
00000000  =00000000                 40  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 41  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 42  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 43  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 44  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 45  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            46  
00000000  =00000000                 47  reg0        EQU     %0000       ; register 0
00000000  =00000001                 48  reg1        EQU     %0001       ; register 1
00000000  =00000002                 49  reg2        EQU     %0010       ; register 2
00000000  =00000003                 50  reg3        EQU     %0011       ; register 3
00000000  =00000004                 51  reg4        EQU     %0100       ; register 4
00000000  =00000005                 52  reg5        EQU     %0101       ; register 5
00000000  =00000006                 53  reg6        EQU     %0110       ; register 6
00000000  =00000007                 54  reg7        EQU     %0111       ; register 7
00000000                            55  
00000000  =00000000                 56  mask0       EQU     %00000000
00000000  =00000001                 57  mask1       EQU     %00000001
00000000  =00000002                 58  mask2       EQU     %00000010
00000000  =00000004                 59  mask3       EQU     %00000100
00000000  =00000008                 60  mask4       EQU     %00001000
00000000  =00000010                 61  mask5       EQU     %00010000
00000000  =00000020                 62  mask6       EQU     %00100000
00000000  =00000040                 63  mask7       EQU     %01000000
00000000  =00000080                 64  mask8       EQU     %10000000
00000000                            65  
00000000  =00000005                 66  maskA       EQU     %00000101
00000000  =0000000A                 67  maskB       EQU     %00001010
00000000  =00000014                 68  maskC       EQU     %00010100
00000000  =00000028                 69  maskD       EQU     %00101000
00000000  =00000050                 70  maskE       EQU     %01010000
00000000  =000000A0                 71  maskF       EQU     %10100000
00000000                            72  
00000000                            73  
00000000  =000000F0                 74  firstNib    EQU     $F0
00000000  =0000000F                 75  secNib      EQU     $0F
00000000                            76               
00001000                            77              ORG    $1000
00001000                            78  START:                                  ; first instruction of program
00001000                            79        
00001000  207C 00002000             80          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00002009             81          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            82            
0000100C  4241                      83  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      84          CLR         D2                  ; clear out D2
00001010  B1CA                      85          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 1622                 86          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      87          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      88          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      89          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            90          
0000101C  B43C 0000                 91          CMP.B       #zero, D2           ; compare with 0
00001020  6700 006E                 92          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 93          CMP.B       #one, D2            ; compare with 1
00001028  6700 0096                 94          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 95          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0092                 96          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 97          CMP.B       #three, D2          ; compare with 3
00001038  6700 008E                 98          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 99          CMP.B       #four, D2           ; compare with 4
00001040  6700 008A                100          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                101          CMP.B       #five, D2           ; compare with 5
00001048  6700 009E                102          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                103          CMP.B       #six, D2            ; compare with 6
00001050  6700 009A                104          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                105          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00BE                106          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                107          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00B6                108          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                109          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00B2                110          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                111          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00AA                112          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                113          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 00A6                114          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                115          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 009E                116          BEQ         braFourteen         ; branch out to fourteen method
00001084  B43C 000F                117          CMP.B       #fifteen,D2
00001088  6700 15AC                118          BEQ         endProg
0000108C  6000 FF7E                119          BRA         loop
00001090                           120  
00001090  4242                     121  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001092  1401                     122          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001094  C43C 000F                123          AND.B       #secNib, D2             ; set first nibble to 0
00001098                           124   
00001098  B43C 0000                125          CMP.B       #zero, D2           ; compare second nibble to 0
0000109C  6700 00B6                126          BEQ         opORI               ; branch to ORI method
000010A0  B43C 000C                127          CMP.B       #twelve, D2         ; compare second nibble to 12
000010A4  6700 0202                128          BEQ         opCMPI              ; branch to CMPI method
000010A8  B43C 0008                129          CMP.B       #eight,D2           ; Test for static BCLR
000010AC  6700 036C                130          BEQ         opBCLR
000010B0  C47C 0001                131          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010B4  B43C 0001                132          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010B8  6700 03C4                133          BEQ         opDynBCLR
000010BC  6000 1578                134          BRA         printInvalid
000010C0                           135          
000010C0                           136          
000010C0  6000 042A                137  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010C4                           138  
000010C4  6000 04AA                139  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010C8                           140  
000010C8                           141  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010C8                           142  
000010C8  6000 05A0                143          BRA         opMOVEW
000010CC                           144  
000010CC  4242                     145  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010CE  1401                     146          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010D0  C43C 000F                147          AND.B       #secNib, D2             ; set first nibble to 0
000010D4                           148   
000010D4  B43C 0004                149          CMP.B       #four, D2           ; compare second nibble to 4
000010D8  6700 068A                150          BEQ         opNEG               ; branch to NEG method
000010DC  B43C 000E                151          CMP.B       #fourteen, D2       ; compare second nibble to E
000010E0  6700 0770                152          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010E4  6000 07E2                153          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010E8                           154  
000010E8  6000 0900                155  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010EC                           156  
000010EC  4242                     157  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010EE  1401                     158          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010F0  C438 000F                159          AND.B       $0F, D2             ; set first nibble to 0
000010F4                           160   
000010F4  B43C 0000                161          CMP.B       #zero, D2           ; compare second nibble to 0
000010F8  6700 08FC                162          BEQ         opBRA               ; branch to BRA method
000010FC  B43C 0005                163          CMP.B       #five, D2           ; compare second nibble to 5
00001100  6700 090C                164          BEQ         opBCS               ; branch to BCS method
00001104  B43C 0008                165          CMP.B       #eight, D2          ; compare second nibble to 8
00001108  6700 0910                166          BEQ         opBVC               ; branch to BCS method
0000110C  B43C 000C                167          CMP.B       #twelve, D2         ; compare second nibble to 12
00001110  6700 0914                168          BEQ         opBGE               ; branch to BGE method
00001114  6000 091C                169          BRA         opBLT               ; otherwise, branch to BLT method
00001118                           170  
00001118                           171  braEight    ; there are two opCodes available DIVS, or OR
00001118                           172  
00001118  6000 0924                173  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000111C                           174  
0000111C                           175  braEleven   ; there are two opCodes available EOR, or CMP
0000111C                           176  
0000111C  6000 092C                177  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
00001120                           178    
00001120                           179  braThirteen ; there are two opCodes available ADD, or ADDA
00001120                           180  
00001120  4242                     181  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
00001122  1401                     182              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001124  C438 000F                183              AND.B       $0F, D2             ; set first nibble to 0
00001128                           184   
00001128  B43C 0000                185              CMP.B       #zero, D2           ; compare second nibble to 0
0000112C  6700 0934                186              BEQ         opASR               ; branch to ASR method
00001130  B43C 0001                187              CMP.B       #one, D2            ; compare second nibble to 1
00001134  6700 0920                188              BEQ         opASL               ; branch to ASL method
00001138  B43C 0002                189              CMP.B       #two, D2            ; compare second nibble to 2
0000113C  6700 093C                190              BEQ         opLSR               ; branch to LSR method
00001140  B43C 0003                191              CMP.B       #three, D2          ; compare second nibble to 3
00001144  6700 0928                192              BEQ         opLSL               ; branch to LSL method
00001148  B43C 0006                193              CMP.B       #six, D2            ; compare second nibble to 6
0000114C  6700 0944                194              BEQ         opROR               ; branch to ROR method
00001150  6000 0934                195              BRA         opROL               ; otherwise, branch to ROL method
00001154                           196  
00001154  43F9 00002656            197  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
0000115A  103C 000E                198          MOVE.B      #14, D0             ; command for trap call to display message
0000115E  4E4F                     199          TRAP        #15                 ; trap call
00001160                           200          
00001160  1218                     201          MOVE.B      (A0)+, D1
00001162  1401                     202          MOVE.B      D1,D2               ; copy data over
00001164  EC42                     203          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001166  B43C 0000                204          CMP.B       #zero,D2
0000116A  6700 0016                205          BEQ         opORIB
0000116E  B43C 0001                206          CMP.B       #one,D2
00001172  6700 0070                207          BEQ         opORIW
00001176  B43C 0002                208          CMP.B       #two,D2
0000117A  6700 00CA                209          BEQ         opORIL
0000117E                           210          
0000117E  6000 14B6                211          BRA         printInvalid
00001182                           212          
00001182  43F9 000026D8            213  opORIB  LEA         dispByte, A1        ; Display byte
00001188  103C 000E                214          MOVE.B      #14, D0             ; command for trap call to display message
0000118C  4E4F                     215          TRAP        #15                 ; trap call
0000118E                           216          
0000118E  43F9 0000263E            217          LEA         space, A1           ; Display space
00001194  103C 000E                218          MOVE.B      #14, D0             ; command for trap call to display message
00001198  4E4F                     219          TRAP        #15                 ; trap call
0000119A                           220          
0000119A  4242                     221          CLR         D2
0000119C  1401                     222          MOVE.B      D1,D2
0000119E  E642                     223          ASR         #three,D2
000011A0  C47C 0007                224          AND         #seven,D2
000011A4  4243                     225          CLR         D3        
000011A6  1601                     226          MOVE.B      D1,D3
000011A8  C67C 0007                227          AND         #seven,D3
000011AC                           228          
000011AC  4241                     229          CLR         D1
000011AE  3218                     230          MOVE.W      (A0)+, D1
000011B0                           231          
000011B0  43F9 00002641            232          LEA         hashTag, A1           ; Display space
000011B6  103C 000E                233          MOVE.B      #14, D0             ; command for trap call to display message
000011BA  4E4F                     234          TRAP        #15                 ; trap call
000011BC                           235          
000011BC  103C 0003                236          MOVE.B      #3, D0
000011C0  4E4F                     237          TRAP        #15
000011C2                           238          
000011C2  43F9 00002645            239          LEA         comma, A1           ; Display space
000011C8  103C 000E                240          MOVE.B      #14, D0             ; command for trap call to display message
000011CC  4E4F                     241          TRAP        #15                 ; trap call
000011CE                           242          
000011CE  4EB9 00001FE6            243          JSR         printEA
000011D4                           244          
000011D4  43F9 0000263A            245          LEA         newLine, A1           ; Display space
000011DA  103C 000E                246          MOVE.B      #14, D0             ; command for trap call to display message
000011DE  4E4F                     247          TRAP        #15                 ; trap call
000011E0                           248          
000011E0  6000 FE2A                249          BRA         LOOP
000011E4                           250          
000011E4                           251          
000011E4  43F9 000026DB            252  opORIW  LEA         dispWord, A1        ; Display byte
000011EA  103C 000E                253          MOVE.B      #14, D0             ; command for trap call to display message
000011EE  4E4F                     254          TRAP        #15                 ; trap call
000011F0                           255          
000011F0  43F9 0000263E            256          LEA         space, A1           ; Display space
000011F6  103C 000E                257          MOVE.B      #14, D0             ; command for trap call to display message
000011FA  4E4F                     258          TRAP        #15                 ; trap call
000011FC                           259          
000011FC  4242                     260          CLR         D2
000011FE  1401                     261          MOVE.B      D1,D2
00001200  E642                     262          ASR         #three,D2
00001202  C47C 0007                263          AND         #seven,D2
00001206  4243                     264          CLR         D3        
00001208  1601                     265          MOVE.B      D1,D3
0000120A  C67C 0007                266          AND         #seven,D3
0000120E                           267          
0000120E  4241                     268          CLR         D1
00001210  3218                     269          MOVE.W      (A0)+, D1
00001212                           270          
00001212  43F9 00002641            271          LEA         hashTag, A1           ; Display space
00001218  103C 000E                272          MOVE.B      #14, D0             ; command for trap call to display message
0000121C  4E4F                     273          TRAP        #15                 ; trap call
0000121E                           274          
0000121E  103C 0003                275          MOVE.B      #3, D0
00001222  4E4F                     276          TRAP        #15
00001224                           277          
00001224  43F9 00002645            278          LEA         comma, A1           ; Display space
0000122A  103C 000E                279          MOVE.B      #14, D0             ; command for trap call to display message
0000122E  4E4F                     280          TRAP        #15                 ; trap call
00001230                           281          
00001230  4EB9 00001FE6            282          JSR         printEA
00001236                           283          
00001236  43F9 0000263A            284          LEA         newLine, A1           ; Display space
0000123C  103C 000E                285          MOVE.B      #14, D0             ; command for trap call to display message
00001240  4E4F                     286          TRAP        #15                 ; trap call
00001242                           287          
00001242  6000 FDC8                288          BRA         LOOP
00001246                           289       
00001246  43F9 000026DE            290  opORIL  LEA         dispLong, A1        ; Display byte
0000124C  103C 000E                291          MOVE.B      #14, D0             ; command for trap call to display message
00001250  4E4F                     292          TRAP        #15                 ; trap call
00001252                           293          
00001252  43F9 0000263E            294          LEA         space, A1           ; Display space
00001258  103C 000E                295          MOVE.B      #14, D0             ; command for trap call to display message
0000125C  4E4F                     296          TRAP        #15                 ; trap call
0000125E                           297          
0000125E  4242                     298          CLR         D2
00001260  1401                     299          MOVE.B      D1,D2
00001262  E642                     300          ASR         #three,D2
00001264  C47C 0007                301          AND         #seven,D2
00001268  4243                     302          CLR         D3        
0000126A  1601                     303          MOVE.B      D1,D3
0000126C  C67C 0007                304          AND         #seven,D3
00001270                           305          
00001270  4241                     306          CLR         D1
00001272  2218                     307          MOVE.L      (A0)+, D1
00001274                           308          
00001274  43F9 00002641            309          LEA         hashTag, A1           ; Display space
0000127A  103C 000E                310          MOVE.B      #14, D0             ; command for trap call to display message
0000127E  4E4F                     311          TRAP        #15                 ; trap call
00001280                           312          
00001280  103C 0003                313          MOVE.B      #3, D0
00001284  4E4F                     314          TRAP        #15
00001286                           315          
00001286  43F9 00002645            316          LEA         comma, A1           ; Display space
0000128C  103C 000E                317          MOVE.B      #14, D0             ; command for trap call to display message
00001290  4E4F                     318          TRAP        #15                 ; trap call
00001292                           319          
00001292  4EB9 00001FE6            320          JSR         printEA
00001298                           321          
00001298  43F9 0000263A            322          LEA         newLine, A1           ; Display space
0000129E  103C 000E                323          MOVE.B      #14, D0             ; command for trap call to display message
000012A2  4E4F                     324          TRAP        #15                 ; trap call
000012A4                           325          
000012A4  6000 FD66                326          BRA         LOOP
000012A8                           327           
000012A8  43F9 0000265A            328  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000012AE  103C 000E                329          MOVE.B      #14, D0             ; command for trap call to display message
000012B2  4E4F                     330          TRAP        #15                 ; trap call
000012B4                           331                  
000012B4  1218                     332          MOVE.B      (A0)+, D1
000012B6  1401                     333          MOVE.B      D1,D2               ; copy data over
000012B8  EC42                     334          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000012BA  B43C 0000                335          CMP.B       #zero,D2
000012BE  6700 0034                336          BEQ         opCMPIB
000012C2  B43C 0001                337          CMP.B       #one,D2
000012C6  6700 008E                338          BEQ         opCMPIW
000012CA  B43C 0002                339          CMP.B       #two,D2
000012CE  6700 00E8                340          BEQ         opCMPIL
000012D2                           341          
000012D2  1401                     342          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000012D4  E542                     343          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
000012D6  1802                     344          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
000012D8  4242                     345          CLR         D2                  ; Clear out data register
000012DA  1404                     346          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
000012DC  EA42                     347          ASR         #five,D2            ; Shift the register out to get just the mode
000012DE  1802                     348          MOVE.B      D2,D4               ; Store mode into D4
000012E0  4242                     349          CLR         D2
000012E2                           350          
000012E2  1401                     351          MOVE.B      D1,D2               ; Getting the EA register
000012E4  EB42                     352          ASL         #five,D2
000012E6  1A02                     353          MOVE.B      D2,D5               ; Move just the register into D5
000012E8  4242                     354          CLR         D2                  ; Clearing D2 to put data back
000012EA  1405                     355          MOVE.B      D5,D2               ; Putting back the register
000012EC  EA42                     356          ASR         #five,D2            ; Shifting bits in order to read the register
000012EE  1A02                     357          MOVE.B      D2,D5               ; Store register into D5
000012F0                           358          
000012F0  6000 FD1A                359          BRA         LOOP                ; go back to the loop
000012F4                           360  
000012F4  43F9 000026D8            361  opCMPIB LEA         dispByte, A1        ; Display byte
000012FA  103C 000E                362          MOVE.B      #14, D0             ; command for trap call to display message
000012FE  4E4F                     363          TRAP        #15                 ; trap call
00001300                           364          
00001300  43F9 0000263E            365          LEA         space, A1           ; Display space
00001306  103C 000E                366          MOVE.B      #14, D0             ; command for trap call to display message
0000130A  4E4F                     367          TRAP        #15                 ; trap call
0000130C                           368          
0000130C  4242                     369          CLR         D2
0000130E  1401                     370          MOVE.B      D1,D2
00001310  E642                     371          ASR         #three,D2
00001312  C47C 0007                372          AND         #seven,D2
00001316  4243                     373          CLR         D3        
00001318  1601                     374          MOVE.B      D1,D3
0000131A  C67C 0007                375          AND         #seven,D3
0000131E                           376          
0000131E  4241                     377          CLR         D1
00001320  3218                     378          MOVE.W      (A0)+, D1
00001322                           379          
00001322  43F9 00002641            380          LEA         hashTag, A1           ; Display space
00001328  103C 000E                381          MOVE.B      #14, D0             ; command for trap call to display message
0000132C  4E4F                     382          TRAP        #15                 ; trap call
0000132E                           383          
0000132E  103C 0003                384          MOVE.B      #3, D0
00001332  4E4F                     385          TRAP        #15
00001334                           386          
00001334  43F9 00002645            387          LEA         comma, A1           ; Display space
0000133A  103C 000E                388          MOVE.B      #14, D0             ; command for trap call to display message
0000133E  4E4F                     389          TRAP        #15                 ; trap call
00001340                           390          
00001340  4EB9 00001FE6            391          JSR         printEA
00001346                           392          
00001346  43F9 0000263A            393          LEA         newLine, A1           ; Display space
0000134C  103C 000E                394          MOVE.B      #14, D0             ; command for trap call to display message
00001350  4E4F                     395          TRAP        #15                 ; trap call
00001352                           396  
00001352  6000 FCB8                397          BRA         LOOP
00001356                           398  
00001356  43F9 000026DB            399  opCMPIW LEA         dispWord, A1        ; Display byte
0000135C  103C 000E                400          MOVE.B      #14, D0             ; command for trap call to display message
00001360  4E4F                     401          TRAP        #15                 ; trap call
00001362                           402          
00001362  43F9 0000263E            403          LEA         space, A1           ; Display space
00001368  103C 000E                404          MOVE.B      #14, D0             ; command for trap call to display message
0000136C  4E4F                     405          TRAP        #15                 ; trap call
0000136E                           406          
0000136E  4242                     407          CLR         D2
00001370  1401                     408          MOVE.B      D1,D2
00001372  E642                     409          ASR         #three,D2
00001374  C47C 0007                410          AND         #seven,D2
00001378  4243                     411          CLR         D3        
0000137A  1601                     412          MOVE.B      D1,D3
0000137C  C67C 0007                413          AND         #seven,D3
00001380                           414          
00001380  4241                     415          CLR         D1
00001382  3218                     416          MOVE.W      (A0)+, D1
00001384                           417          
00001384  43F9 00002641            418          LEA         hashTag, A1           ; Display space
0000138A  103C 000E                419          MOVE.B      #14, D0             ; command for trap call to display message
0000138E  4E4F                     420          TRAP        #15                 ; trap call
00001390                           421          
00001390  103C 0003                422          MOVE.B      #3, D0
00001394  4E4F                     423          TRAP        #15
00001396                           424          
00001396  43F9 00002645            425          LEA         comma, A1           ; Display space
0000139C  103C 000E                426          MOVE.B      #14, D0             ; command for trap call to display message
000013A0  4E4F                     427          TRAP        #15                 ; trap call
000013A2                           428          
000013A2  4EB9 00001FE6            429          JSR         printEA
000013A8                           430          
000013A8  43F9 0000263A            431          LEA         newLine, A1           ; Display space
000013AE  103C 000E                432          MOVE.B      #14, D0             ; command for trap call to display message
000013B2  4E4F                     433          TRAP        #15                 ; trap call
000013B4  6000 FC56                434          BRA         LOOP
000013B8                           435  
000013B8  43F9 000026DE            436  opCMPIL LEA         dispLong, A1        ; Display byte
000013BE  103C 000E                437          MOVE.B      #14, D0             ; command for trap call to display message
000013C2  4E4F                     438          TRAP        #15                 ; trap call
000013C4                           439          
000013C4  43F9 0000263E            440          LEA         space, A1           ; Display space
000013CA  103C 000E                441          MOVE.B      #14, D0             ; command for trap call to display message
000013CE  4E4F                     442          TRAP        #15                 ; trap call
000013D0                           443          
000013D0  4242                     444          CLR         D2
000013D2  1401                     445          MOVE.B      D1,D2
000013D4  E642                     446          ASR         #three,D2
000013D6  C47C 0007                447          AND         #seven,D2
000013DA  4243                     448          CLR         D3        
000013DC  1601                     449          MOVE.B      D1,D3
000013DE  C67C 0007                450          AND         #seven,D3
000013E2                           451          
000013E2  4241                     452          CLR         D1
000013E4  3218                     453          MOVE.W      (A0)+, D1
000013E6                           454          
000013E6  43F9 00002641            455          LEA         hashTag, A1           ; Display space
000013EC  103C 000E                456          MOVE.B      #14, D0             ; command for trap call to display message
000013F0  4E4F                     457          TRAP        #15                 ; trap call
000013F2                           458          
000013F2  103C 0003                459          MOVE.B      #3, D0
000013F6  4E4F                     460          TRAP        #15
000013F8                           461          
000013F8  43F9 00002645            462          LEA         comma, A1           ; Display space
000013FE  103C 000E                463          MOVE.B      #14, D0             ; command for trap call to display message
00001402  4E4F                     464          TRAP        #15                 ; trap call
00001404                           465          
00001404  4EB9 00001FE6            466          JSR         printEA
0000140A                           467          
0000140A  43F9 0000263A            468          LEA         newLine, A1           ; Display space
00001410  103C 000E                469          MOVE.B      #14, D0             ; command for trap call to display message
00001414  4E4F                     470          TRAP        #15                 ; trap call
00001416                           471          
00001416  6000 FBF4                472          BRA         LOOP
0000141A                           473  
0000141A  43F9 0000265F            474  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001420  103C 000E                475                  MOVE.B      #14, D0             ; command for trap call to display message
00001424  4E4F                     476                  TRAP        #15                 ; trap call
00001426                           477  
00001426  43F9 0000263E            478                  LEA         space, A1           ; Display space
0000142C  103C 000E                479                  MOVE.B      #14, D0             ; command for trap call to display message
00001430  4E4F                     480                  TRAP        #15                 ; trap call
00001432                           481                  
00001432  4242                     482                  CLR         D2
00001434  1218                     483                  MOVE.B      (A0)+, D1
00001436  1401                     484                  MOVE.B      D1,D2               ; copy data over
00001438  E642                     485                  ASR         #three,D2           ; Shift to the right to remove register
0000143A  C47C 0007                486                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
0000143E                           487                  
0000143E  4243                     488                  CLR         D3                  ; Clear D3 so we can move D1 in
00001440  1601                     489                  MOVE.B      D1,D3               ; Move othr byte in
00001442  C67C 0007                490                  AND         #seven,D3           ; Set everything besides register to 0
00001446                           491                  
00001446  4241                     492                  CLR         D1
00001448  3218                     493                  MOVE.W      (A0)+, D1
0000144A                           494                 
0000144A                           495                  
0000144A  43F9 00002641            496                  LEA         hashTag, A1           ; Display space
00001450  103C 000E                497                  MOVE.B      #14, D0             ; command for trap call to display message
00001454  4E4F                     498                  TRAP        #15                 ; trap call
00001456                           499          
00001456  103C 0003                500                  MOVE.B      #3, D0
0000145A  4E4F                     501                  TRAP        #15
0000145C                           502          
0000145C  43F9 00002645            503                  LEA         comma, A1           ; Display space
00001462  103C 000E                504                  MOVE.B      #14, D0             ; command for trap call to display message
00001466  4E4F                     505                  TRAP        #15                 ; trap call
00001468                           506                  
00001468  4EB9 00001FE6            507                  JSR         printEA
0000146E                           508          
0000146E  43F9 0000263A            509                  LEA         newLine, A1           ; Display space
00001474  103C 000E                510                  MOVE.B      #14, D0             ; command for trap call to display message
00001478  4E4F                     511                  TRAP        #15                 ; trap call
0000147A                           512                  
0000147A                           513                  
0000147A  6000 FB90                514                  BRA         LOOP                
0000147E                           515          
0000147E                           516  opDynBCLR       
0000147E  4241                     517                  CLR         D1
00001480  1218                     518                  MOVE.B      (A0)+,D1            ; Copy second byte in
00001482  1601                     519                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
00001484  E243                     520                  ASR         #one,D3             ; Shift register over to the end
00001486  C67C 0007                521                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
0000148A                           522                  
0000148A  1401                     523                  MOVE.B      D1,D2
0000148C  EC42                     524                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
0000148E  B47C 0002                525                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
00001492  6600 11A2                526                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
00001496                           527  
00001496                           528                  
00001496  43F9 0000265F            529                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
0000149C  103C 000E                530                  MOVE.B      #14, D0             ; command for trap call to display message
000014A0  4E4F                     531                  TRAP        #15                 ; trap call  
000014A2                           532                  
000014A2  43F9 0000263E            533                  LEA         space, A1           ; Display space
000014A8  103C 000E                534                  MOVE.B      #14, D0             ; command for trap call to display message
000014AC  4E4F                     535                  TRAP        #15                 ; trap call
000014AE                           536                  
000014AE  143C 0000                537                  MOVE.B      #zero,D2                
000014B2  4EB9 00001FE6            538                  JSR         printEA
000014B8                           539                  
000014B8  43F9 00002645            540                  LEA         comma, A1           ; Display space
000014BE  103C 000E                541                  MOVE.B      #14, D0             ; command for trap call to display message
000014C2  4E4F                     542                  TRAP        #15                 ; trap call
000014C4                           543                  
000014C4  4242                     544                  CLR         D2
000014C6  1401                     545                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000014C8  E642                     546                  ASR         #three,D2           ; Remove/shift the register out
000014CA  C47C 0007                547                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000014CE                           548                  
000014CE  4243                     549                  CLR         D3                  ; Clearing D3 to avoid mashing data
000014D0  1601                     550                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000014D2  C67C 0007                551                  AND         #seven,D3           ; Change all bits except for register bits to 0
000014D6                           552                  
000014D6                           553  
000014D6  4EB9 00001FE6            554                  JSR         printEA
000014DC                           555          
000014DC  43F9 0000263A            556                  LEA         newLine, A1           ; Display space
000014E2  103C 000E                557                  MOVE.B      #14, D0             ; command for trap call to display message
000014E6  4E4F                     558                  TRAP        #15                 ; trap call            
000014E8                           559  
000014E8                           560  
000014E8  6000 FB22                561                  BRA         LOOP                ; go back to the loop
000014EC                           562   
000014EC                           563  opMOVEB 
000014EC  43F9 00002664            564          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
000014F2  103C 000E                565          MOVE.B      #14, D0             ; command for trap call to display message
000014F6  4E4F                     566          TRAP        #15                 ; trap call
000014F8  43F9 000026D8            567          LEA         dispByte, A1        ; display byte
000014FE  103C 000E                568          MOVE.B      #14, D0             ; command for trap call to display message
00001502  4E4F                     569          TRAP        #15                 ; trap call
00001504  43F9 0000263E            570          LEA         space, A1           ; create spaces
0000150A  103C 000E                571          MOVE.B      #14, D0             ; command for trap call to display message
0000150E  4E4F                     572          TRAP        #15                 ; trap call
00001510                           573          
00001510                           574          
00001510  4245                     575          CLR         D5                  ; Clear D5
00001512  1A01                     576          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001514  E245                     577          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001516  CA7C 0007                578          AND         #seven,D5
0000151A                           579          
0000151A  4244                     580          CLR         D4                  ; Clear out D4
0000151C  1801                     581          MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000151E  C87C 0001                582          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001522                           583          
00001522  4241                     584          CLR          D1
00001524  4242                     585          CLR          D2
00001526  1218                     586          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001528  1401                     587          MOVE.B      D1,D2
0000152A  EC42                     588          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000152C  D842                     589          ADD         D2,D4               ; Adds the remaining bits to D4
0000152E                           590          
0000152E  4242                     591          CLR         D2
00001530  1401                     592          MOVE.B      D1,D2               ; Copy new byte over to D2
00001532  E642                     593          ASR         #three,D2           ; Shift source register out
00001534  C47C 0007                594          AND         #seven,D2           ; Set everything to 0 except for the mode
00001538                           595          
00001538  4243                     596          CLR         D3
0000153A  1601                     597          MOVE.B      D1,D3
0000153C  C67C 0007                598          AND         #seven,D3
00001540                           599          
00001540  4EB9 00001FE6            600          JSR         printEA
00001546                           601          
00001546  43F9 00002645            602          LEA         comma, A1           ; Display space
0000154C  103C 000E                603          MOVE.B      #14, D0             ; command for trap call to display message
00001550  4E4F                     604          TRAP        #15                 ; trap call
00001552                           605          
00001552  4242                     606          CLR         D2
00001554  4243                     607          CLR         D3
00001556  1404                     608          MOVE.B      D4,D2
00001558  1605                     609          MOVE.B      D5,D3
0000155A                           610          
0000155A  4EB9 00001FE6            611          JSR         printEA
00001560                           612          
00001560                           613          
00001560  43F9 0000263A            614          LEA         newLine, A1           ; Display space
00001566  103C 000E                615          MOVE.B      #14, D0             ; command for trap call to display message
0000156A  4E4F                     616          TRAP        #15                 ; trap call            
0000156C                           617  
0000156C                           618  
0000156C  6000 FA9E                619          BRA         LOOP                ; go back to the loop
00001570                           620          
00001570                           621  opMOVEL     
00001570                           622          
00001570  4245                     623              CLR         D5                  ; Clear D5
00001572  1A01                     624              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001574  E245                     625              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001576  CA7C 0007                626              AND         #seven,D5
0000157A                           627          
0000157A  4244                     628              CLR         D4                  ; Clear out D4
0000157C  1801                     629              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000157E  C87C 0001                630              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001582                           631          
00001582  4241                     632              CLR          D1
00001584  4242                     633              CLR          D2
00001586  1218                     634              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001588  1401                     635              MOVE.B      D1,D2
0000158A  EC42                     636              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000158C  D842                     637              ADD         D2,D4               ; Adds the remaining bits to D4
0000158E                           638          
0000158E  B87C 0001                639              CMP         #one,D4             ; Check if it is MOVEA
00001592  6700 006C                640              BEQ         opMOVEAL            ; If it is, branch off
00001596                           641              
00001596  43F9 00002664            642              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
0000159C  103C 000E                643              MOVE.B      #14, D0             ; command for trap call to display message
000015A0  4E4F                     644              TRAP        #15                 ; trap call  
000015A2                           645              
000015A2                           646              
000015A2  43F9 000026DE            647              LEA         dispLong,A1
000015A8  103C 000E                648              MOVE.B      #14, D0             ; command for trap call to display message
000015AC  4E4F                     649              TRAP        #15                 ; trap call
000015AE                           650              
000015AE  43F9 0000263E            651              LEA         space, A1           ; create spaces
000015B4  103C 000E                652              MOVE.B      #14, D0             ; command for trap call to display message
000015B8  4E4F                     653              TRAP        #15                 ; trap call
000015BA                           654          
000015BA  4242                     655              CLR         D2
000015BC  1401                     656              MOVE.B      D1,D2               ; Copy new byte over to D2
000015BE  E642                     657              ASR         #three,D2           ; Shift source register out
000015C0  C47C 0007                658              AND         #seven,D2           ; Set everything to 0 except for the mode
000015C4                           659          
000015C4  4243                     660              CLR         D3
000015C6  1601                     661              MOVE.B      D1,D3
000015C8  C67C 0007                662              AND         #seven,D3
000015CC                           663              
000015CC  4241                     664              CLR         D1                  ; Clear D1
000015CE  2218                     665              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
000015D0                           666              
000015D0  4EB9 00001FE6            667              JSR         printEA
000015D6                           668              
000015D6  43F9 00002645            669              LEA         comma, A1           ; Display comma
000015DC  103C 000E                670              MOVE.B      #14, D0             ; command for trap call to display message
000015E0  4E4F                     671              TRAP        #15                 ; trap call
000015E2                           672          
000015E2  4242                     673              CLR         D2
000015E4  4243                     674              CLR         D3
000015E6  1404                     675              MOVE.B      D4,D2
000015E8  1605                     676              MOVE.B      D5,D3
000015EA                           677              
000015EA                           678  
000015EA                           679              
000015EA  4EB9 00001FE6            680              JSR         printEA
000015F0                           681          
000015F0                           682          
000015F0  43F9 0000263A            683              LEA         newLine, A1           ; Display space
000015F6  103C 000E                684              MOVE.B      #14, D0             ; command for trap call to display message
000015FA  4E4F                     685              TRAP        #15                 ; trap call            
000015FC                           686  
000015FC                           687  
000015FC  6000 FA0E                688              BRA         LOOP                ; go back to the loop
00001600                           689              
00001600                           690  opMOVEAL
00001600                           691  
00001600  43F9 00002669            692              LEA         MOVEAmatch,A1
00001606  103C 000E                693              MOVE.B      #14, D0             ; command for trap call to display message
0000160A  4E4F                     694              TRAP        #15                 ; trap call
0000160C                           695              
0000160C  43F9 000026DE            696              LEA         dispLong,A1
00001612  103C 000E                697              MOVE.B      #14, D0             ; command for trap call to display message
00001616  4E4F                     698              TRAP        #15                 ; trap call
00001618                           699              
00001618                           700  
00001618  43F9 0000263E            701              LEA         space, A1           ; create spaces
0000161E  103C 000E                702              MOVE.B      #14, D0             ; command for trap call to display message
00001622  4E4F                     703              TRAP        #15                 ; trap call
00001624                           704              
00001624  4242                     705              CLR         D2
00001626  1401                     706              MOVE.B      D1,D2               ; Copy new byte over to D2
00001628  E642                     707              ASR         #three,D2           ; Shift source register out
0000162A  C47C 0007                708              AND         #seven,D2           ; Set everything to 0 except for the mode
0000162E                           709          
0000162E  4243                     710              CLR         D3
00001630  1601                     711              MOVE.B      D1,D3
00001632  C67C 0007                712              AND         #seven,D3
00001636                           713              
00001636  4241                     714              CLR         D1                  ; Clear D1
00001638  3218                     715              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
0000163A                           716              
0000163A                           717              
0000163A  4EB9 00001FE6            718              JSR         printEA
00001640                           719              
00001640  43F9 00002645            720              LEA         comma, A1           ; Display comma
00001646  103C 000E                721              MOVE.B      #14, D0             ; command for trap call to display message
0000164A  4E4F                     722              TRAP        #15                 ; trap call
0000164C                           723  
0000164C  4242                     724              CLR         D2
0000164E  4243                     725              CLR         D3
00001650  1404                     726              MOVE.B      D4,D2
00001652  1605                     727              MOVE.B      D5,D3
00001654                           728          
00001654  4EB9 00001FE6            729              JSR         printEA
0000165A                           730          
0000165A                           731          
0000165A  43F9 0000263A            732              LEA         newLine, A1           ; Display space
00001660  103C 000E                733              MOVE.B      #14, D0             ; command for trap call to display message
00001664  4E4F                     734              TRAP        #15                 ; trap call            
00001666                           735  
00001666                           736  
00001666  6000 F9A4                737              BRA         LOOP                ; go back to the loop
0000166A                           738  
0000166A                           739  opMOVEW
0000166A                           740          
0000166A  4245                     741              CLR         D5                  ; Clear D5
0000166C  1A01                     742              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000166E  E245                     743              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001670  CA7C 0007                744              AND         #seven,D5
00001674                           745          
00001674  4244                     746              CLR         D4                  ; Clear out D4
00001676  1801                     747              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001678  C87C 0001                748              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000167C                           749          
0000167C  4241                     750              CLR          D1
0000167E  4242                     751              CLR          D2
00001680  1218                     752              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001682  1401                     753              MOVE.B      D1,D2
00001684  EC42                     754              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001686  D842                     755              ADD         D2,D4               ; Adds the remaining bits to D4
00001688                           756          
00001688  B87C 0001                757              CMP         #one,D4             ; Check if it is MOVEA
0000168C  6700 006C                758              BEQ         opMOVEAW            ; If it is, branch off
00001690                           759              
00001690  43F9 00002664            760              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001696  103C 000E                761              MOVE.B      #14, D0             ; command for trap call to display message
0000169A  4E4F                     762              TRAP        #15                 ; trap call  
0000169C                           763              
0000169C  43F9 000026DB            764              LEA         dispWord,A1
000016A2  103C 000E                765              MOVE.B      #14, D0             ; command for trap call to display message
000016A6  4E4F                     766              TRAP        #15                 ; trap call
000016A8                           767              
000016A8  43F9 0000263E            768              LEA         space, A1           ; create spaces
000016AE  103C 000E                769              MOVE.B      #14, D0             ; command for trap call to display message
000016B2  4E4F                     770              TRAP        #15                 ; trap call
000016B4                           771          
000016B4  4242                     772              CLR         D2
000016B6  1401                     773              MOVE.B      D1,D2               ; Copy new byte over to D2
000016B8  E642                     774              ASR         #three,D2           ; Shift source register out
000016BA  C47C 0007                775              AND         #seven,D2           ; Set everything to 0 except for the mode
000016BE                           776          
000016BE  4243                     777              CLR         D3
000016C0  1601                     778              MOVE.B      D1,D3
000016C2  C67C 0007                779              AND         #seven,D3
000016C6                           780              
000016C6  4241                     781              CLR         D1                  ; Clear D1
000016C8  3218                     782              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
000016CA                           783              
000016CA  4EB9 00001FE6            784              JSR         printEA
000016D0                           785              
000016D0  43F9 00002645            786              LEA         comma, A1           ; Display comma
000016D6  103C 000E                787              MOVE.B      #14, D0             ; command for trap call to display message
000016DA  4E4F                     788              TRAP        #15                 ; trap call
000016DC                           789          
000016DC  4242                     790              CLR         D2
000016DE  4243                     791              CLR         D3
000016E0  1404                     792              MOVE.B      D4,D2
000016E2  1605                     793              MOVE.B      D5,D3
000016E4                           794              
000016E4                           795  
000016E4                           796              
000016E4  4EB9 00001FE6            797              JSR         printEA
000016EA                           798          
000016EA                           799          
000016EA  43F9 0000263A            800              LEA         newLine, A1           ; Display space
000016F0  103C 000E                801              MOVE.B      #14, D0             ; command for trap call to display message
000016F4  4E4F                     802              TRAP        #15                 ; trap call            
000016F6                           803  
000016F6                           804  
000016F6  6000 F914                805              BRA         LOOP                ; go back to the loop
000016FA                           806  opMOVEAW  
000016FA  43F9 00002669            807              LEA         MOVEAmatch,A1
00001700  103C 000E                808              MOVE.B      #14, D0             ; command for trap call to display message
00001704  4E4F                     809              TRAP        #15                 ; trap call
00001706                           810              
00001706  43F9 000026DB            811              LEA         dispWord,A1
0000170C  103C 000E                812              MOVE.B      #14, D0             ; command for trap call to display message
00001710  4E4F                     813              TRAP        #15                 ; trap call
00001712                           814              
00001712                           815  
00001712  43F9 0000263E            816              LEA         space, A1           ; create spaces
00001718  103C 000E                817              MOVE.B      #14, D0             ; command for trap call to display message
0000171C  4E4F                     818              TRAP        #15                 ; trap call
0000171E                           819              
0000171E  4242                     820              CLR         D2
00001720  1401                     821              MOVE.B      D1,D2               ; Copy new byte over to D2
00001722  E642                     822              ASR         #three,D2           ; Shift source register out
00001724  C47C 0007                823              AND         #seven,D2           ; Set everything to 0 except for the mode
00001728                           824          
00001728  4243                     825              CLR         D3
0000172A  1601                     826              MOVE.B      D1,D3
0000172C  C67C 0007                827              AND         #seven,D3
00001730                           828              
00001730  4241                     829              CLR         D1                  ; Clear D1
00001732  3218                     830              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001734                           831              
00001734                           832              
00001734  4EB9 00001FE6            833              JSR         printEA
0000173A                           834              
0000173A  43F9 00002645            835              LEA         comma, A1           ; Display comma
00001740  103C 000E                836              MOVE.B      #14, D0             ; command for trap call to display message
00001744  4E4F                     837              TRAP        #15                 ; trap call
00001746                           838  
00001746  4242                     839              CLR         D2
00001748  4243                     840              CLR         D3
0000174A  1404                     841              MOVE.B      D4,D2
0000174C  1605                     842              MOVE.B      D5,D3
0000174E                           843          
0000174E  4EB9 00001FE6            844              JSR         printEA
00001754                           845          
00001754                           846          
00001754  43F9 0000263A            847              LEA         newLine, A1           ; Display space
0000175A  103C 000E                848              MOVE.B      #14, D0             ; command for trap call to display message
0000175E  4E4F                     849              TRAP        #15                 ; trap call            
00001760                           850  
00001760                           851  
00001760  6000 F8AA                852              BRA         LOOP                ; go back to the loop
00001764                           853  
00001764                           854  opNEG   
00001764  43F9 0000266F            855              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
0000176A  103C 000E                856              MOVE.B      #14, D0             ; command for trap call to display message
0000176E  4E4F                     857              TRAP        #15                 ; trap call
00001770                           858          
00001770                           859          
00001770  1218                     860              MOVE.B      (A0)+, D1
00001772  1401                     861              MOVE.B      D1,D2               ; copy data over
00001774  EC42                     862              ASR         #six,D2
00001776                           863              
00001776  B47C 0000                864              CMP         #zero,D2
0000177A  6700 0016                865              BEQ         opNEGB
0000177E  B47C 0001                866              CMP         #one,D2
00001782  6700 004E                867              BEQ         opNEGL
00001786  B47C 0002                868              CMP         #two,D2
0000178A  6700 0086                869              BEQ         opNEGW
0000178E  6000 0EA0                870              BRA         INVALID
00001792                           871  opNEGB
00001792                           872  
00001792  43F9 000026D8            873              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001798  103C 000E                874              MOVE.B      #14, D0             ; command for trap call to display message
0000179C  4E4F                     875              TRAP        #15                 ; trap call
0000179E                           876          
0000179E  43F9 0000263E            877              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000017A4  103C 000E                878              MOVE.B      #14, D0             ; command for trap call to display message
000017A8  4E4F                     879              TRAP        #15                 ; trap call
000017AA                           880          
000017AA  4242                     881              CLR         D2                  ; Clear Data register 2
000017AC  3401                     882              MOVE        D1,D2               ; Move byte into D2
000017AE  E642                     883              ASR         #three,D2           ; Shift mode into place and moves mode into place
000017B0  C47C 0007                884              AND         #seven,D2           ; Stores mode
000017B4                           885              
000017B4  4243                     886              CLR         D3
000017B6  3601                     887              MOVE        D1,D3
000017B8  C67C 0007                888              AND         #seven,D3
000017BC                           889          
000017BC  4EB9 00001FE6            890              JSR         printEA
000017C2                           891                  
000017C2  43F9 0000263A            892              LEA         newLine, A1           ; Display space
000017C8  103C 000E                893              MOVE.B      #14, D0             ; command for trap call to display message
000017CC  4E4F                     894              TRAP        #15                 ; trap call  
000017CE                           895          
000017CE  6000 F83C                896              BRA         LOOP
000017D2                           897                  
000017D2                           898  
000017D2                           899  opNEGL
000017D2                           900  
000017D2  43F9 000026DE            901              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
000017D8  103C 000E                902              MOVE.B      #14, D0             ; command for trap call to display message
000017DC  4E4F                     903              TRAP        #15                 ; trap call
000017DE                           904  
000017DE  43F9 0000263E            905              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000017E4  103C 000E                906              MOVE.B      #14, D0             ; command for trap call to display message
000017E8  4E4F                     907              TRAP        #15                 ; trap call
000017EA                           908                  
000017EA  4242                     909              CLR         D2                  ; Clear Data register 2
000017EC  3401                     910              MOVE        D1,D2               ; Move byte into D2
000017EE  E642                     911              ASR         #three,D2           ; Shift mode into place and moves mode into place
000017F0  C47C 0007                912              AND         #seven,D2           ; Stores mode
000017F4                           913          
000017F4  4243                     914              CLR         D3
000017F6  3601                     915              MOVE        D1,D3
000017F8  C67C 0007                916              AND         #seven,D3
000017FC                           917          
000017FC  4EB9 00001FE6            918              JSR         printEA
00001802                           919                      
00001802  43F9 0000263A            920              LEA         newLine, A1         ; Display space
00001808  103C 000E                921              MOVE.B      #14, D0             ; command for trap call to display message
0000180C  4E4F                     922              TRAP        #15                 ; trap call  
0000180E                           923          
0000180E  6000 F7FC                924              BRA         LOOP
00001812                           925          
00001812                           926  
00001812                           927  opNEGW
00001812                           928  
00001812  43F9 000026DB            929              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001818  103C 000E                930              MOVE.B      #14, D0             ; command for trap call to display message
0000181C  4E4F                     931              TRAP        #15                 ; trap call
0000181E                           932          
0000181E  43F9 0000263E            933              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001824  103C 000E                934              MOVE.B      #14, D0             ; command for trap call to display message
00001828  4E4F                     935              TRAP        #15                 ; trap call        
0000182A                           936                  
0000182A  4242                     937              CLR         D2                  ; Clear Data register 2
0000182C  3401                     938              MOVE        D1,D2               ; Move byte into D2
0000182E  E642                     939              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001830  C47C 0007                940              AND         #seven,D2           ; Stores mode
00001834                           941          
00001834  4243                     942              CLR         D3
00001836  3601                     943              MOVE        D1,D3
00001838  C67C 0007                944              AND         #seven,D3
0000183C                           945          
0000183C  4EB9 00001FE6            946              JSR         printEA
00001842                           947              
00001842  43F9 0000263A            948              LEA         newLine, A1           ; Display space
00001848  103C 000E                949              MOVE.B      #14, D0             ; command for trap call to display message
0000184C  4E4F                     950              TRAP        #15                 ; trap call  
0000184E                           951          
0000184E  6000 F7BC                952              BRA         LOOP
00001852                           953  
00001852                           954  opRTSJSR
00001852                           955          
00001852  1218                     956              MOVE.B      (A0)+, D1
00001854                           957              
00001854  1401                     958              MOVE.B      D1,D2               ; copy data over
00001856  B47C 0075                959              CMP         #117,D2
0000185A  6700 0050                960              BEQ         opRTS
0000185E                           961              
0000185E  EC42                     962              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
00001860  B47C 0002                963              CMP         #two,D2             ; Checking if it is JSR
00001864  6700 0006                964              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001868                           965  
00001868  6000 0DC6                966              BRA         invalid
0000186C                           967  
0000186C                           968  opJSR
0000186C                           969                        
0000186C  43F9 00002677            970              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001872  103C 000E                971              MOVE.B      #14, D0             ; command for trap call to display message
00001876  4E4F                     972              TRAP        #15                 ; trap call
00001878                           973              
00001878  43F9 0000263E            974              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000187E  103C 000E                975              MOVE.B      #14, D0             ; command for trap call to display message
00001882  4E4F                     976              TRAP        #15                 ; trap call
00001884                           977              
00001884  4242                     978              CLR         D2
00001886  4243                     979              CLR         D3
00001888                           980              
00001888  1401                     981              MOVE.B      D1,D2
0000188A  E642                     982              ASR         #three,D2
0000188C  C47C 0007                983              AND         #seven,D2
00001890                           984              
00001890  1601                     985              MOVE.B      D1,D3
00001892  C67C 0007                986              AND         #seven,D3
00001896                           987              
00001896  4EB9 00001FE6            988              JSR         printEA
0000189C                           989              
0000189C  43F9 0000263A            990              LEA         newLine, A1           ; Display space
000018A2  103C 000E                991              MOVE.B      #14, D0             ; command for trap call to display message
000018A6  4E4F                     992              TRAP        #15                 ; trap call  
000018A8                           993              
000018A8  6000 F762                994              BRA         loop            
000018AC                           995  opRTS
000018AC                           996  
000018AC  43F9 00002673            997              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
000018B2  103C 000E                998              MOVE.B      #14, D0             ; command for trap call to display message
000018B6  4E4F                     999              TRAP        #15                 ; trap call
000018B8                          1000              
000018B8  43F9 0000263A           1001              LEA         newLine, A1           ; Display space
000018BE  103C 000E               1002              MOVE.B      #14, D0             ; command for trap call to display message
000018C2  4E4F                    1003              TRAP        #15                 ; trap call 
000018C4                          1004              
000018C4  6000 F746               1005              BRA         loop
000018C8                          1006  
000018C8                          1007  opMOVEMLEA
000018C8  4242                    1008              CLR         D2                  ; Clear D2
000018CA  1401                    1009              MOVE.B      D1,D2               ; Copy byte over
000018CC  C47C 000F               1010              AND         #secNib,D2          ; Check only the second nibble
000018D0  B47C 000C               1011              CMP         #twelve,D2          ; Compare the second nibble to twelve
000018D4  6700 000E               1012              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
000018D8  B47C 0008               1013              CMP         #eight,D2           ; Compare the second nibble to eight
000018DC  6700 0006               1014              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
000018E0  6000 008C               1015              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
000018E4                          1016              
000018E4                          1017  opMOVEM            
000018E4  4246                    1018              CLR         D6                  ; Clearing D4 to store dr field
000018E6  1C01                    1019              MOVE.B      D1,D6               ; Moving byte to find dr field
000018E8  E446                    1020              ASR         #two,D6             ; Moving dr field to readable spot
000018EA  CC7C 0001               1021              AND         #one,D6             ; seting everything except dr to 0
000018EE                          1022  
000018EE  4241                    1023              CLR         D1  
000018F0  1218                    1024              MOVE.B      (A0)+, D1           ; Taking in next byte
000018F2                          1025              
000018F2  4245                    1026              CLR         D5
000018F4  1A01                    1027              MOVE.B      D1,D5               ; Using D6 to check if this is indeed MOVEM
000018F6  EC45                    1028              ASR         #six,D5
000018F8  CA7C 0001               1029              AND         #one,D5
000018FC  BA7C 0001               1030              CMP         #one,D5             ; This bit should be one if this is MOVEM
00001900  6600 0D2E               1031              BNE         invalid             ; If this is not 1 then this is not moveM
00001904  4245                    1032              CLR         D5
00001906                          1033              
00001906  43F9 0000267B           1034              LEA         MOVEMMatch, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
0000190C  103C 000E               1035              MOVE.B      #14, D0             ; command for trap call to display message
00001910  4E4F                    1036              TRAP        #15                 ; trap call
00001912                          1037              
00001912  4245                    1038              CLR         D5                  ; Clearing D5 to store size
00001914  1A01                    1039              MOVE.B      D1,D5               ; Moving byte that contains bit for size
00001916  EA45                    1040              ASR         #five,D5            ; Moving size bit to the very right to read
00001918  CA7C 0001               1041              AND         #one,D5             ; Isolating the one bit for size
0000191C                          1042              
0000191C  4242                    1043              CLR         D2                  ; Storing EA mode in D2
0000191E  1401                    1044              MOVE.B      D1,D2
00001920  E642                    1045              ASR         #three,D2
00001922  C47C 0007               1046              AND         #seven,D2
00001926                          1047              
00001926  4243                    1048              CLR         D3                  ; Storing EA register into D3
00001928  1601                    1049              MOVE.B      D1,D3
0000192A  C67C 0007               1050              AND         #seven,D3
0000192E                          1051              
0000192E  4EB9 00001A9E           1052              JSR         MOVEMBRA
00001934                          1053              
00001934  B47C 0003               1054              CMP         #three,D2
00001938  6700 0024               1055              BEQ         skipPrintEA
0000193C                          1056              
0000193C  43F9 00002645           1057              LEA         comma, A1           ; Display comma
00001942  103C 000E               1058              MOVE.B      #14, D0             ; command for trap call to display message
00001946  4E4F                    1059              TRAP        #15                 ; trap call
00001948                          1060              
00001948                          1061  
00001948  4EB9 00001FE6           1062              JSR         printEA
0000194E                          1063              
0000194E  43F9 0000263A           1064              LEA         newline, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001954  103C 000E               1065              MOVE.B      #14, D0             ; command for trap call to display message
00001958  4E4F                    1066              TRAP        #15                 ; trap call            
0000195A                          1067  
0000195A  6000 F6B0               1068              BRA         loop            
0000195E                          1069  
0000195E                          1070  skipPrintEA 
0000195E                          1071  
0000195E  43F9 0000263A           1072              LEA         newline, A1        
00001964  103C 000E               1073              MOVE.B      #14, D0             ; command for trap call to display message
00001968  4E4F                    1074              TRAP        #15                 ; trap call            
0000196A                          1075  
0000196A  6000 F6A0               1076              BRA         loop 
0000196E                          1077  opLEA
0000196E  4244                    1078              CLR         D4                  ; Clearing space for source register
00001970  1801                    1079              MOVE.B      D1,D4               ; Moving byte to isolate register
00001972  E244                    1080              ASR         #one,D4
00001974  C87C 0007               1081              AND         #seven,D4           ; Isolated register
00001978                          1082  
00001978  4245                    1083              CLR         D5                  ; Clearing D5 to check if bits match LEA static bits
0000197A  1A01                    1084              MOVE.B      D1,D5
0000197C  CA7C 0001               1085              AND         #one,D5
00001980  E545                    1086              ASL         #two,D5
00001982                          1087              
00001982  1218                    1088              MOVE.B      (A0)+, D1           ; Taking in next byte
00001984                          1089              
00001984  1C01                    1090              MOVE.B      D1,D6
00001986  EC46                    1091              ASR         #six,D6
00001988  DA46                    1092              ADD         D6,D5
0000198A  4246                    1093              CLR         D6
0000198C                          1094  
0000198C  BA7C 0007               1095              CMP         #seven,D5
00001990  6600 0C9E               1096              BNE         invalid   
00001994                          1097              
00001994  43F9 00002681           1098              LEA         LEAmatch, A1        ; we know that the opcode will be LEA, so load A1 to print message
0000199A  103C 000E               1099              MOVE.B      #14, D0             ; command for trap call to display message
0000199E  4E4F                    1100              TRAP        #15                 ; trap call            
000019A0                          1101  
000019A0  43F9 0000263E           1102              LEA         space, A1         ; we know that the opcode will be MOVEM, so load A1 to print message
000019A6  103C 000E               1103              MOVE.B      #14, D0             ; command for trap call to display message
000019AA  4E4F                    1104              TRAP        #15                 ; trap call            
000019AC                          1105              
000019AC  4242                    1106              CLR         D2
000019AE  1401                    1107              MOVE.B      D1,D2
000019B0  E642                    1108              ASR         #three,D2
000019B2  C47C 0007               1109              AND         #seven,D2
000019B6                          1110              
000019B6  4243                    1111              CLR         D3
000019B8  1601                    1112              MOVE.B      D1,D3
000019BA  C67C 0007               1113              AND         #seven,D3
000019BE                          1114              
000019BE  4EB9 00001FE6           1115              JSR         printEA
000019C4                          1116              
000019C4  43F9 00002645           1117              LEA         comma, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
000019CA  103C 000E               1118              MOVE.B      #14, D0             ; command for trap call to display message
000019CE  4E4F                    1119              TRAP        #15                 ; trap call            
000019D0                          1120              
000019D0                          1121              
000019D0  4243                    1122              CLR         D3
000019D2  1604                    1123              MOVE.B      D4,D3
000019D4  143C 0002               1124              MOVE.B      #2,D2
000019D8                          1125              
000019D8  4EB9 00001FE6           1126              JSR         printEA             ; Prints out source address
000019DE                          1127              
000019DE  43F9 0000263A           1128              LEA         newline, A1         ; Prints new line
000019E4  103C 000E               1129              MOVE.B      #14, D0             ; command for trap call to display message
000019E8  4E4F                    1130              TRAP        #15                 ; trap call            
000019EA                          1131              
000019EA                          1132              
000019EA                          1133             
000019EA                          1134  
000019EA                          1135  
000019EA                          1136  opSUBQ      
000019EA  43F9 00002685           1137              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
000019F0  103C 000E               1138              MOVE.B      #14, D0             ; command for trap call to display message
000019F4  4E4F                    1139              TRAP        #15                 ; trap call
000019F6                          1140  
000019F6  43F9 0000268A           1141  opBRA       LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
000019FC  103C 000E               1142              MOVE.B      #14, D0             ; command for trap call to display message
00001A00  4E4F                    1143              TRAP        #15                 ; trap call
00001A02  43F9 0000263E           1144              LEA         space, A1           ; create spaces
00001A08  103C 000E               1145              MOVE.B      #14, D0             ; command for trap call to display message
00001A0C  4E4F                    1146              TRAP        #15                 ; trap call
00001A0E                          1147  
00001A0E  43F9 0000268E           1148  opBCS       LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001A14  103C 000E               1149              MOVE.B      #14, D0             ; command for trap call to display message
00001A18  4E4F                    1150              TRAP        #15                 ; trap call
00001A1A                          1151  
00001A1A  43F9 00002692           1152  opBVC       LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001A20  103C 000E               1153              MOVE.B      #14, D0             ; command for trap call to display message
00001A24  4E4F                    1154              TRAP        #15                 ; trap call
00001A26                          1155  
00001A26  43F9 00002696           1156  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001A2C  103C 000E               1157          MOVE.B      #14, D0             ; command for trap call to display message
00001A30  4E4F                    1158          TRAP        #15                 ; trap call
00001A32                          1159  
00001A32  43F9 0000269A           1160  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001A38  103C 000E               1161          MOVE.B      #14, D0             ; command for trap call to display message
00001A3C  4E4F                    1162          TRAP        #15                 ; trap call
00001A3E                          1163  
00001A3E  43F9 000026A6           1164  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001A44  103C 000E               1165          MOVE.B      #14, D0             ; command for trap call to display message
00001A48  4E4F                    1166          TRAP        #15                 ; trap call
00001A4A                          1167  
00001A4A  43F9 000026B2           1168  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001A50  103C 000E               1169          MOVE.B      #14, D0             ; command for trap call to display message
00001A54  4E4F                    1170          TRAP        #15                 ; trap call
00001A56                          1171  
00001A56  43F9 000026CC           1172  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001A5C  103C 000E               1173          MOVE.B      #14, D0             ; command for trap call to display message
00001A60  4E4F                    1174          TRAP        #15                 ; trap call
00001A62                          1175  
00001A62  43F9 000026C8           1176  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001A68  103C 000E               1177          MOVE.B      #14, D0             ; command for trap call to display message
00001A6C  4E4F                    1178          TRAP        #15                 ; trap call
00001A6E                          1179  
00001A6E  43F9 000026C4           1180  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00001A74  103C 000E               1181          MOVE.B      #14, D0             ; command for trap call to display message
00001A78  4E4F                    1182          TRAP        #15                 ; trap call
00001A7A                          1183  
00001A7A  43F9 000026C0           1184  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001A80  103C 000E               1185          MOVE.B      #14, D0             ; command for trap call to display message
00001A84  4E4F                    1186          TRAP        #15                 ; trap call
00001A86                          1187  
00001A86  43F9 000026D4           1188  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001A8C  103C 000E               1189          MOVE.B      #14, D0             ; command for trap call to display message
00001A90  4E4F                    1190          TRAP        #15                 ; trap call
00001A92                          1191  
00001A92                          1192  opROR   
00001A92  43F9 000026D0           1193          LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001A98  103C 000E               1194          MOVE.B      #14, D0             ; command for trap call to display message
00001A9C  4E4F                    1195          TRAP        #15                 ; trap call
00001A9E                          1196  
00001A9E                          1197  
00001A9E  48E7 FF7E               1198  MOVEMBRA    MOVEM.L  D0-D7/A1-A6, -(SP)     ; Branches off depending on size bit
00001AA2  BA7C 0000               1199              CMP      #zero,D5
00001AA6  6700 000A               1200              BEQ      MOVEMW
00001AAA  BA7C 0001               1201              CMP      #one, D5
00001AAE  6700 001E               1202              BEQ      MOVEML
00001AB2                          1203              
00001AB2                          1204  MOVEMW     
00001AB2  43F9 000026DB           1205              LEA         dispWord, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001AB8  103C 000E               1206              MOVE.B      #14, D0             ; command for trap call to display message
00001ABC  4E4F                    1207              TRAP        #15                 ; trap call
00001ABE                          1208  
00001ABE  43F9 0000263E           1209              LEA         space, A1           ; we know that the opcode will be ROR, so load A1 to print message
00001AC4  103C 000E               1210              MOVE.B      #14, D0             ; command for trap call to display message
00001AC8  4E4F                    1211              TRAP        #15                 ; trap call
00001ACA                          1212              
00001ACA  6000 001E               1213              BRA         CheckDR
00001ACE                          1214  
00001ACE                          1215  MOVEML   
00001ACE  43F9 000026DE           1216              LEA         dispLong, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001AD4  103C 000E               1217              MOVE.B      #14, D0             ; command for trap call to display message
00001AD8  4E4F                    1218              TRAP        #15                 ; trap call
00001ADA                          1219  
00001ADA  43F9 0000263E           1220              LEA         space, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001AE0  103C 000E               1221              MOVE.B      #14, D0             ; command for trap call to display message
00001AE4  4E4F                    1222              TRAP        #15                 ; trap call
00001AE6                          1223           
00001AE6                          1224  
00001AE6  6000 0002               1225              BRA         CheckDR
00001AEA                          1226  
00001AEA                          1227  CheckDR     
00001AEA                          1228              
00001AEA                          1229                
00001AEA  3218                    1230              MOVE.W      (A0)+, D1           ; Taking in next word
00001AEC  BC7C 0000               1231              CMP         #zero,D6
00001AF0  6700 0036               1232              BEQ         printRegMem
00001AF4  BC7C 0001               1233              CMP         #one,D6
00001AF8  6700 0006               1234              BEQ         printStack
00001AFC  6000 0B32               1235              BRA         invalid
00001B00                          1236              
00001B00                          1237  printStack 
00001B00  43F9 00002651           1238              LEA         stack,A1
00001B06  103C 000E               1239              MOVE.B      #14, D0             ; command for trap call to display message
00001B0A  4E4F                    1240              TRAP        #15                 ; trap call
00001B0C                          1241  
00001B0C  43F9 0000264D           1242              LEA         inc,A1
00001B12  103C 000E               1243              MOVE.B      #14, D0             ; command for trap call to display message
00001B16  4E4F                    1244              TRAP        #15                 ; trap call
00001B18                          1245              
00001B18  43F9 00002645           1246              LEA         comma,A1
00001B1E  103C 000E               1247              MOVE.B      #14, D0             ; command for trap call to display message
00001B22  4E4F                    1248              TRAP        #15                 ; trap call
00001B24                          1249              
00001B24                          1250              
00001B24  6000 0002               1251              BRA         printRegMem
00001B28                          1252             
00001B28                          1253  printRegMem 
00001B28  4244                    1254              CLR         D4                  ; Using D4 to store predecrement mode addresses
00001B2A  1801                    1255              MOVE.B      D1,D4               ; Stores bits for D0-D7
00001B2C                          1256              
00001B2C  4245                    1257              CLR         D5
00001B2E  1A01                    1258              MOVE.B      D1,D5
00001B30  CA7C 0001               1259              AND         #mask1,D5
00001B34  BA7C 0001               1260              CMP         #mask1,D5
00001B38  6700 007A               1261              BEQ         DataReg0
00001B3C                          1262              
00001B3C  4245                    1263              CLR         D5
00001B3E  1A01                    1264              MOVE.B      D1,D5
00001B40  CA7C 0002               1265              AND         #mask2,D5
00001B44  BA7C 0002               1266              CMP         #mask2,D5
00001B48  6700 009A               1267              BEQ         DataReg1
00001B4C                          1268  
00001B4C  4245                    1269              CLR         D5
00001B4E  1A01                    1270              MOVE.B      D1,D5
00001B50  CA7C 0004               1271              AND         #mask3,D5
00001B54  BA7C 0004               1272              CMP         #mask3,D5
00001B58  6700 00CA               1273              BEQ         DataReg2            
00001B5C                          1274              
00001B5C  4245                    1275              CLR         D5
00001B5E  1A01                    1276              MOVE.B      D1,D5
00001B60  CA7C 0008               1277              AND         #mask4,D5
00001B64  BA7C 0008               1278              CMP         #mask4,D5
00001B68  6700 00FA               1279              BEQ         DataReg3            
00001B6C                          1280              
00001B6C  4245                    1281              CLR         D5
00001B6E  1A01                    1282              MOVE.B      D1,D5
00001B70  CA7C 0010               1283              AND         #mask5,D5
00001B74  BA7C 0010               1284              CMP         #mask5,D5
00001B78  6700 012A               1285              BEQ         DataReg4
00001B7C                          1286  
00001B7C  4245                    1287              CLR         D5
00001B7E  1A01                    1288              MOVE.B      D1,D5
00001B80  CA7C 0020               1289              AND         #mask6,D5
00001B84  BA7C 0020               1290              CMP         #mask6,D5
00001B88  6700 015A               1291              BEQ         DataReg5
00001B8C                          1292  
00001B8C  4245                    1293              CLR         D5
00001B8E  1A01                    1294              MOVE.B      D1,D5
00001B90  CA7C 0040               1295              AND         #mask7,D5
00001B94  BA7C 0040               1296              CMP         #mask7,D5
00001B98  6700 018A               1297              BEQ         DataReg6
00001B9C                          1298  
00001B9C  4245                    1299              CLR         D5
00001B9E  1A01                    1300              MOVE.B      D1,D5
00001BA0  CA7C 0080               1301              AND         #mask8,D5
00001BA4  BA7C 0080               1302              CMP         #mask8,D5
00001BA8  6700 01BA               1303              BEQ         DataReg7
00001BAC                          1304              
00001BAC  6000 0A82               1305              BRA         invalid
00001BB0  6000 0A7E               1306              BRA         invalid        
00001BB4                          1307              
00001BB4                          1308  DataReg0
00001BB4  43F9 000026FE           1309              LEA         dispD0, A1          ; Output string D0
00001BBA  103C 000E               1310              MOVE.B      #14, D0             ; command for trap call to display message
00001BBE  4E4F                    1311              TRAP        #15                 ; trap call
00001BC0                          1312              
00001BC0  4245                    1313              CLR         D5
00001BC2  1A01                    1314              MOVE.B      D1,D5
00001BC4  CA7C 0002               1315              AND         #mask2,D5
00001BC8  BA7C 0002               1316              CMP         #mask2,D5
00001BCC  6700 0006               1317              BEQ         Reg0Cont
00001BD0  6000 01A2               1318              BRA         printMem
00001BD4                          1319  Reg0Cont        
00001BD4  43F9 0000264B           1320              LEA         dec, A1             ; Output -
00001BDA  103C 000E               1321              MOVE.B      #14, D0             ; command for trap call to display message
00001BDE  4E4F                    1322              TRAP        #15                 ; trap call        
00001BE0  6000 0002               1323              BRA         DataReg1
00001BE4                          1324  
00001BE4                          1325  DataReg1
00001BE4  4245                    1326              CLR         D5
00001BE6  1A01                    1327              MOVE.B      D1,D5
00001BE8  CA7C 0005               1328              AND         #maskA,D5
00001BEC  BA7C 0005               1329              CMP         #maskA,D5
00001BF0  6700 0032               1330              BEQ         DataReg2
00001BF4                          1331              
00001BF4  43F9 00002701           1332              LEA         dispD1, A1          ; Output string D0
00001BFA  103C 000E               1333              MOVE.B      #14, D0             ; command for trap call to display message
00001BFE  4E4F                    1334              TRAP        #15                 ; trap call
00001C00                          1335              
00001C00  4245                    1336              CLR         D5
00001C02  1A01                    1337              MOVE.B      D1,D5
00001C04  CA7C 0004               1338              AND         #mask3,D5
00001C08  BA7C 0004               1339              CMP         #mask3,D5
00001C0C  6700 0006               1340              BEQ         Reg1Cont
00001C10  6000 0162               1341              BRA         printMem
00001C14                          1342  Reg1Cont        
00001C14  43F9 0000264B           1343              LEA         dec, A1             ; Output -
00001C1A  103C 000E               1344              MOVE.B      #14, D0             ; command for trap call to display message
00001C1E  4E4F                    1345              TRAP        #15                 ; trap call        
00001C20  6000 0002               1346              BRA         DataReg2
00001C24                          1347  
00001C24                          1348  
00001C24                          1349  DataReg2
00001C24  4245                    1350              CLR         D5
00001C26  1A01                    1351              MOVE.B      D1,D5
00001C28  CA7C 000A               1352              AND         #maskB,D5
00001C2C  BA7C 000A               1353              CMP         #maskB,D5
00001C30  6700 0032               1354              BEQ         DataReg3
00001C34                          1355              
00001C34                          1356              
00001C34  43F9 00002704           1357              LEA         dispD2, A1          ; Output string D0
00001C3A  103C 000E               1358              MOVE.B      #14, D0             ; command for trap call to display message
00001C3E  4E4F                    1359              TRAP        #15                 ; trap call
00001C40                          1360              
00001C40  4245                    1361              CLR         D5
00001C42  1A01                    1362              MOVE.B      D1,D5
00001C44  CA7C 0008               1363              AND         #mask4,D5
00001C48  BA7C 0008               1364              CMP         #mask4,D5
00001C4C  6700 0006               1365              BEQ         Reg2Cont
00001C50  6000 0122               1366              BRA         printMem
00001C54                          1367  Reg2Cont        
00001C54  43F9 0000264B           1368              LEA         dec, A1             ; Output -
00001C5A  103C 000E               1369              MOVE.B      #14, D0             ; command for trap call to display message
00001C5E  4E4F                    1370              TRAP        #15                 ; trap call        
00001C60  6000 0002               1371              BRA         DataReg3
00001C64                          1372  
00001C64                          1373  DataReg3
00001C64  4245                    1374              CLR         D5
00001C66  1A01                    1375              MOVE.B      D1,D5
00001C68  CA7C 0014               1376              AND         #maskC,D5
00001C6C  BA7C 0014               1377              CMP         #maskC,D5
00001C70  6700 0032               1378              BEQ         DataReg4
00001C74                          1379              
00001C74  43F9 00002707           1380              LEA         dispD3, A1          ; Output string D0
00001C7A  103C 000E               1381              MOVE.B      #14, D0             ; command for trap call to display message
00001C7E  4E4F                    1382              TRAP        #15                 ; trap call
00001C80                          1383              
00001C80  4245                    1384              CLR         D5
00001C82  1A01                    1385              MOVE.B      D1,D5
00001C84  CA7C 0010               1386              AND         #mask5,D5
00001C88  BA7C 0010               1387              CMP         #mask5,D5
00001C8C  6700 0006               1388              BEQ         Reg3Cont
00001C90  6000 00E2               1389              BRA         printMem
00001C94                          1390  Reg3Cont        
00001C94  43F9 0000264B           1391              LEA         dec, A1             ; Output -
00001C9A  103C 000E               1392              MOVE.B      #14, D0             ; command for trap call to display message
00001C9E  4E4F                    1393              TRAP        #15                 ; trap call        
00001CA0  6000 0002               1394              BRA         DataReg4
00001CA4                          1395  
00001CA4                          1396  
00001CA4                          1397  DataReg4
00001CA4  4245                    1398              CLR         D5
00001CA6  1A01                    1399              MOVE.B      D1,D5
00001CA8  CA7C 0028               1400              AND         #maskD,D5
00001CAC  BA7C 0028               1401              CMP         #maskD,D5
00001CB0  6700 0032               1402              BEQ         DataReg5
00001CB4                          1403              
00001CB4  43F9 0000270A           1404              LEA         dispD4, A1          ; Output string D0
00001CBA  103C 000E               1405              MOVE.B      #14, D0             ; command for trap call to display message
00001CBE  4E4F                    1406              TRAP        #15                 ; trap call
00001CC0                          1407              
00001CC0  4245                    1408              CLR         D5
00001CC2  1A01                    1409              MOVE.B      D1,D5
00001CC4  CA7C 0020               1410              AND         #mask6,D5
00001CC8  BA7C 0020               1411              CMP         #mask6,D5
00001CCC  6700 0006               1412              BEQ         Reg4Cont
00001CD0  6000 00A2               1413              BRA         printMem
00001CD4                          1414  Reg4Cont        
00001CD4  43F9 0000264B           1415              LEA         dec, A1             ; Output -
00001CDA  103C 000E               1416              MOVE.B      #14, D0             ; command for trap call to display message
00001CDE  4E4F                    1417              TRAP        #15                 ; trap call        
00001CE0  6000 0002               1418              BRA         DataReg5
00001CE4                          1419  
00001CE4                          1420  DataReg5
00001CE4  4245                    1421              CLR         D5
00001CE6  1A01                    1422              MOVE.B      D1,D5
00001CE8  CA7C 0050               1423              AND         #maskE,D5
00001CEC  BA7C 0050               1424              CMP         #maskE,D5
00001CF0  6700 0032               1425              BEQ         DataReg6
00001CF4                          1426              
00001CF4  43F9 0000270D           1427              LEA         dispD5, A1          ; Output string D0
00001CFA  103C 000E               1428              MOVE.B      #14, D0             ; command for trap call to display message
00001CFE  4E4F                    1429              TRAP        #15                 ; trap call
00001D00                          1430              
00001D00  4245                    1431              CLR         D5
00001D02  1A01                    1432              MOVE.B      D1,D5
00001D04  CA7C 0040               1433              AND         #mask7,D5
00001D08  BA7C 0040               1434              CMP         #mask7,D5
00001D0C  6700 0006               1435              BEQ         Reg5Cont
00001D10  6000 0062               1436              BRA         printMem
00001D14                          1437  Reg5Cont        
00001D14  43F9 0000264B           1438              LEA         dec, A1             ; Output -
00001D1A  103C 000E               1439              MOVE.B      #14, D0             ; command for trap call to display message
00001D1E  4E4F                    1440              TRAP        #15                 ; trap call        
00001D20  6000 0042               1441              BRA         DataReg7
00001D24                          1442  
00001D24                          1443  DataReg6
00001D24  4245                    1444              CLR         D5
00001D26  1A01                    1445              MOVE.B      D1,D5
00001D28  CA7C 00A0               1446              AND         #maskF,D5
00001D2C  BA7C 00A0               1447              CMP         #maskF,D5
00001D30  6700 0032               1448              BEQ         DataReg7
00001D34                          1449  
00001D34  43F9 00002710           1450              LEA         dispD6, A1          ; Output string D0
00001D3A  103C 000E               1451              MOVE.B      #14, D0             ; command for trap call to display message
00001D3E  4E4F                    1452              TRAP        #15                 ; trap call
00001D40                          1453              
00001D40  4245                    1454              CLR         D5
00001D42  1A01                    1455              MOVE.B      D1,D5
00001D44  CA7C 0080               1456              AND         #mask8,D5
00001D48  BA7C 0080               1457              CMP         #mask8,D5
00001D4C  6700 0006               1458              BEQ         Reg6Cont
00001D50  6000 0022               1459              BRA         printMem
00001D54                          1460  Reg6Cont        
00001D54  43F9 0000264B           1461              LEA         dec, A1             ; Output -
00001D5A  103C 000E               1462              MOVE.B      #14, D0             ; command for trap call to display message
00001D5E  4E4F                    1463              TRAP        #15                 ; trap call        
00001D60  6000 0002               1464              BRA         DataReg7
00001D64                          1465  
00001D64                          1466  DataReg7    
00001D64  43F9 00002713           1467              LEA         dispD7, A1             ; Output -
00001D6A  103C 000E               1468              MOVE.B      #14, D0             ; command for trap call to display message
00001D6E  4E4F                    1469              TRAP        #15                 ; trap call        
00001D70  6000 0002               1470              BRA         printMem            
00001D74                          1471  printMem                                    ; Made this function in order to reuse if DR is 1
00001D74  BC7C 0001               1472              CMP         #one,D6
00001D78  6700 0266               1473              BEQ         endMOVE1
00001D7C  6000 0002               1474              BRA         printMemNow
00001D80                          1475  printMemNow               
00001D80  43F9 0000264F           1476              LEA         slash, A1           ; Display slash
00001D86  103C 000E               1477              MOVE.B      #14, D0             ; command for trap call to display message
00001D8A  4E4F                    1478              TRAP        #15                 ; trap call
00001D8C                          1479           
00001D8C  4244                    1480              CLR         D4                  ; Using D4 to store predecrement mode addresses
00001D8E  3801                    1481              MOVE.W      D1,D4               ; Stores bits for D0-D7
00001D90  E044                    1482              ASR         #eight,D4
00001D92                          1483              
00001D92  4245                    1484              CLR         D5
00001D94  1A04                    1485              MOVE.B      D4,D5
00001D96  CA7C 0001               1486              AND         #mask1,D5
00001D9A  BA7C 0001               1487              CMP         #mask1,D5
00001D9E  6700 0072               1488              BEQ         AddrReg0
00001DA2                          1489              
00001DA2  4245                    1490              CLR         D5
00001DA4  1A04                    1491              MOVE.B      D4,D5
00001DA6  CA7C 0002               1492              AND         #mask2,D5
00001DAA  BA7C 0002               1493              CMP         #mask2,D5
00001DAE  6700 0092               1494              BEQ         AddrReg1
00001DB2                          1495  
00001DB2  4245                    1496              CLR         D5
00001DB4  1A04                    1497              MOVE.B      D4,D5
00001DB6  CA7C 0004               1498              AND         #mask3,D5
00001DBA  BA7C 0004               1499              CMP         #mask3,D5
00001DBE  6700 00C2               1500              BEQ         AddrReg2            
00001DC2                          1501              
00001DC2  4245                    1502              CLR         D5
00001DC4  1A04                    1503              MOVE.B      D4,D5
00001DC6  CA7C 0008               1504              AND         #mask4,D5
00001DCA  BA7C 0008               1505              CMP         #mask4,D5
00001DCE  6700 00F2               1506              BEQ         AddrReg3            
00001DD2                          1507              
00001DD2  4245                    1508              CLR         D5
00001DD4  1A04                    1509              MOVE.B      D4,D5
00001DD6  CA7C 0010               1510              AND         #mask5,D5
00001DDA  BA7C 0010               1511              CMP         #mask5,D5
00001DDE  6700 0122               1512              BEQ         AddrReg4
00001DE2                          1513  
00001DE2  4245                    1514              CLR         D5
00001DE4  1A04                    1515              MOVE.B      D4,D5
00001DE6  CA7C 0020               1516              AND         #mask6,D5
00001DEA  BA7C 0020               1517              CMP         #mask6,D5
00001DEE  6700 0152               1518              BEQ         AddrReg5
00001DF2                          1519  
00001DF2  4245                    1520              CLR         D5
00001DF4  1A04                    1521              MOVE.B      D4,D5
00001DF6  CA7C 0040               1522              AND         #mask7,D5
00001DFA  BA7C 0040               1523              CMP         #mask7,D5
00001DFE  6700 0182               1524              BEQ         AddrReg6
00001E02                          1525  
00001E02  4245                    1526              CLR         D5
00001E04  1A04                    1527              MOVE.B      D4,D5
00001E06  CA7C 0080               1528              AND         #mask8,D5
00001E0A  BA7C 0080               1529              CMP         #mask8,D5
00001E0E  6700 01B2               1530              BEQ         AddrReg7
00001E12                          1531  AddrReg0
00001E12  43F9 000026E4           1532              LEA         dispA0, A1          ; Output string D0
00001E18  103C 000E               1533              MOVE.B      #14, D0             ; command for trap call to display message
00001E1C  4E4F                    1534              TRAP        #15                 ; trap call
00001E1E                          1535              
00001E1E  4245                    1536              CLR         D5
00001E20  1A01                    1537              MOVE.B      D1,D5
00001E22  CA7C 0002               1538              AND         #mask2,D5
00001E26  BA7C 0002               1539              CMP         #mask2,D5
00001E2A  6700 0006               1540              BEQ         Addr0Cont
00001E2E  6000 01A2               1541              BRA         endMOVE
00001E32                          1542  Addr0Cont        
00001E32  43F9 0000264B           1543              LEA         dec, A1             ; Output -
00001E38  103C 000E               1544              MOVE.B      #14, D0             ; command for trap call to display message
00001E3C  4E4F                    1545              TRAP        #15                 ; trap call        
00001E3E  6000 0002               1546              BRA         AddrReg1
00001E42                          1547  
00001E42                          1548  AddrReg1
00001E42  4245                    1549              CLR         D5
00001E44  1A04                    1550              MOVE.B      D4,D5
00001E46  CA7C 0005               1551              AND         #maskA,D5
00001E4A  BA7C 0005               1552              CMP         #maskA,D5
00001E4E  6700 0032               1553              BEQ         AddrReg2
00001E52                          1554              
00001E52  43F9 000026E7           1555              LEA         dispA1, A1          ; Output string D0
00001E58  103C 000E               1556              MOVE.B      #14, D0             ; command for trap call to display message
00001E5C  4E4F                    1557              TRAP        #15                 ; trap call
00001E5E                          1558              
00001E5E  4245                    1559              CLR         D5
00001E60  1A04                    1560              MOVE.B      D4,D5
00001E62  CA7C 0004               1561              AND         #mask3,D5
00001E66  BA7C 0004               1562              CMP         #mask3,D5
00001E6A  6700 0006               1563              BEQ         Addr1Cont
00001E6E  6000 0162               1564              BRA         endMOVE
00001E72                          1565  Addr1Cont        
00001E72  43F9 0000264B           1566              LEA         dec, A1             ; Output -
00001E78  103C 000E               1567              MOVE.B      #14, D0             ; command for trap call to display message
00001E7C  4E4F                    1568              TRAP        #15                 ; trap call        
00001E7E  6000 0002               1569              BRA         AddrReg2
00001E82                          1570  
00001E82                          1571  
00001E82                          1572  AddrReg2
00001E82  4245                    1573              CLR         D5
00001E84  1A04                    1574              MOVE.B      D4,D5
00001E86  CA7C 000A               1575              AND         #maskB,D5
00001E8A  BA7C 000A               1576              CMP         #maskB,D5
00001E8E  6700 0032               1577              BEQ         AddrReg3
00001E92                          1578              
00001E92                          1579              
00001E92  43F9 000026EA           1580              LEA         dispA2, A1          ; Output string D0
00001E98  103C 000E               1581              MOVE.B      #14, D0             ; command for trap call to display message
00001E9C  4E4F                    1582              TRAP        #15                 ; trap call
00001E9E                          1583              
00001E9E  4245                    1584              CLR         D5
00001EA0  1A04                    1585              MOVE.B      D4,D5
00001EA2  CA7C 0008               1586              AND         #mask4,D5
00001EA6  BA7C 0008               1587              CMP         #mask4,D5
00001EAA  6700 0006               1588              BEQ         Addr2Cont
00001EAE  6000 0122               1589              BRA         endMOVE
00001EB2                          1590  Addr2Cont        
00001EB2  43F9 0000264B           1591              LEA         dec, A1             ; Output -
00001EB8  103C 000E               1592              MOVE.B      #14, D0             ; command for trap call to display message
00001EBC  4E4F                    1593              TRAP        #15                 ; trap call        
00001EBE  6000 0002               1594              BRA         AddrReg3
00001EC2                          1595  
00001EC2                          1596  AddrReg3
00001EC2  4245                    1597              CLR         D5
00001EC4  1A04                    1598              MOVE.B      D4,D5
00001EC6  CA7C 0014               1599              AND         #maskC,D5
00001ECA  BA7C 0014               1600              CMP         #maskC,D5
00001ECE  6700 0032               1601              BEQ         AddrReg4
00001ED2                          1602              
00001ED2  43F9 000026ED           1603              LEA         dispA3, A1          ; Output string D0
00001ED8  103C 000E               1604              MOVE.B      #14, D0             ; command for trap call to display message
00001EDC  4E4F                    1605              TRAP        #15                 ; trap call
00001EDE                          1606              
00001EDE  4245                    1607              CLR         D5
00001EE0  1A04                    1608              MOVE.B      D4,D5
00001EE2  CA7C 0010               1609              AND         #mask5,D5
00001EE6  BA7C 0010               1610              CMP         #mask5,D5
00001EEA  6700 0006               1611              BEQ         Addr3Cont
00001EEE  6000 00E2               1612              BRA         endMOVE
00001EF2                          1613  Addr3Cont        
00001EF2  43F9 0000264B           1614              LEA         dec, A1             ; Output -
00001EF8  103C 000E               1615              MOVE.B      #14, D0             ; command for trap call to display message
00001EFC  4E4F                    1616              TRAP        #15                 ; trap call        
00001EFE  6000 0002               1617              BRA         AddrReg4
00001F02                          1618  
00001F02                          1619  
00001F02                          1620  AddrReg4
00001F02  4245                    1621              CLR         D5
00001F04  1A04                    1622              MOVE.B      D4,D5
00001F06  CA7C 0028               1623              AND         #maskD,D5
00001F0A  BA7C 0028               1624              CMP         #maskD,D5
00001F0E  6700 0032               1625              BEQ         AddrReg5
00001F12                          1626              
00001F12  43F9 000026F0           1627              LEA         dispA4, A1          ; Output string D0
00001F18  103C 000E               1628              MOVE.B      #14, D0             ; command for trap call to display message
00001F1C  4E4F                    1629              TRAP        #15                 ; trap call
00001F1E                          1630              
00001F1E  4245                    1631              CLR         D5
00001F20  1A04                    1632              MOVE.B      D4,D5
00001F22  CA7C 0020               1633              AND         #mask6,D5
00001F26  BA7C 0020               1634              CMP         #mask6,D5
00001F2A  6700 0006               1635              BEQ         Addr4Cont
00001F2E  6000 00A2               1636              BRA         endMOVE
00001F32                          1637  Addr4Cont        
00001F32  43F9 0000264B           1638              LEA         dec, A1             ; Output -
00001F38  103C 000E               1639              MOVE.B      #14, D0             ; command for trap call to display message
00001F3C  4E4F                    1640              TRAP        #15                 ; trap call        
00001F3E  6000 0002               1641              BRA         AddrReg5
00001F42                          1642  AddrReg5
00001F42  4245                    1643              CLR         D5
00001F44  1A04                    1644              MOVE.B      D4,D5
00001F46  CA7C 0050               1645              AND         #maskE,D5
00001F4A  BA7C 0050               1646              CMP         #maskE,D5
00001F4E  6700 0032               1647              BEQ         AddrReg6
00001F52                          1648              
00001F52  43F9 000026F3           1649              LEA         dispA5, A1          ; Output string D0
00001F58  103C 000E               1650              MOVE.B      #14, D0             ; command for trap call to display message
00001F5C  4E4F                    1651              TRAP        #15                 ; trap call
00001F5E                          1652              
00001F5E  4245                    1653              CLR         D5
00001F60  1A04                    1654              MOVE.B      D4,D5
00001F62  CA7C 0040               1655              AND         #mask7,D5
00001F66  BA7C 0040               1656              CMP         #mask7,D5
00001F6A  6700 0006               1657              BEQ         Addr5Cont
00001F6E  6000 0062               1658              BRA         endMOVE
00001F72                          1659  Addr5Cont        
00001F72  43F9 0000264B           1660              LEA         dec, A1             ; Output -
00001F78  103C 000E               1661              MOVE.B      #14, D0             ; command for trap call to display message
00001F7C  4E4F                    1662              TRAP        #15                 ; trap call        
00001F7E  6000 0042               1663              BRA         AddrReg7
00001F82                          1664  
00001F82                          1665  AddrReg6
00001F82  4245                    1666              CLR         D5
00001F84  1A04                    1667              MOVE.B      D4,D5
00001F86  CA7C 00A0               1668              AND         #maskF,D5
00001F8A  BA7C 00A0               1669              CMP         #maskF,D5
00001F8E  6700 0032               1670              BEQ         AddrReg7
00001F92                          1671  
00001F92  43F9 000026F6           1672              LEA         dispA6, A1          ; Output string D0
00001F98  103C 000E               1673              MOVE.B      #14, D0             ; command for trap call to display message
00001F9C  4E4F                    1674              TRAP        #15                 ; trap call
00001F9E                          1675              
00001F9E  4245                    1676              CLR         D5
00001FA0  1A04                    1677              MOVE.B      D4,D5
00001FA2  CA7C 0080               1678              AND         #mask8,D5
00001FA6  BA7C 0080               1679              CMP         #mask8,D5
00001FAA  6700 0006               1680              BEQ         Addr6Cont
00001FAE  6000 0022               1681              BRA         endMOVE
00001FB2                          1682  Addr6Cont        
00001FB2  43F9 0000264B           1683              LEA         dec, A1             ; Output -
00001FB8  103C 000E               1684              MOVE.B      #14, D0             ; command for trap call to display message
00001FBC  4E4F                    1685              TRAP        #15                 ; trap call        
00001FBE  6000 0002               1686              BRA         AddrReg7
00001FC2                          1687  
00001FC2                          1688  AddrReg7    
00001FC2  43F9 000026F9           1689              LEA         dispA7, A1          ; Output -
00001FC8  103C 000E               1690              MOVE.B      #14, D0             ; command for trap call to display message
00001FCC  4E4F                    1691              TRAP        #15                 ; trap call        
00001FCE  6000 0002               1692              BRA         endMOVE
00001FD2                          1693  
00001FD2                          1694  
00001FD2                          1695  
00001FD2                          1696  
00001FD2                          1697  endMOVE
00001FD2  BC7C 0001               1698              CMP         #one,D6
00001FD6  6700 FB50               1699              BEQ         printRegMem
00001FDA  4CDF 7EFF               1700              MOVEM.L  (SP)+, D0-D7/A1-A6
00001FDE  4E75                    1701              RTS
00001FE0                          1702  endMove1                                    ; Used if MOVEM has DR is 1
00001FE0  4CDF 7EFF               1703              MOVEM.L  (SP)+, D0-D7/A1-A6
00001FE4  4E75                    1704              RTS
00001FE6                          1705  
00001FE6                          1706  ***********************************************************************************************************
00001FE6                          1707  *
00001FE6                          1708  *                                           EA Print Check
00001FE6                          1709  *
00001FE6                          1710  ***********************************************************************************************************
00001FE6  48E7 FF7E               1711  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00001FEA                          1712  
00001FEA  B43C 0000               1713              CMP.B       #zero, D2
00001FEE  6700 002E               1714              BEQ         pDataReg
00001FF2  B43C 0001               1715              CMP.B       #one, D2
00001FF6  6700 00E6               1716              BEQ         pAddrReg
00001FFA  B43C 0002               1717              CMP.B       #two, D2
00001FFE  6700 019E               1718              BEQ         pAddrDir
00002002  B43C 0003               1719              CMP.B       #three, D2
00002006  6700 02C2               1720              BEQ         pAddrPost
0000200A  B43C 0004               1721              CMP.B       #four, D2
0000200E  6700 0446               1722              BEQ         pAddrDec
00002012  B43C 0007               1723              CMP.B       #seven, D2
00002016  6700 0576               1724              BEQ         pHex
0000201A  6000 0614               1725              BRA         invalid
0000201E                          1726  
0000201E                          1727  ***********************************************************************************************************
0000201E                          1728  * Data Register        
0000201E  B63C 0000               1729  pDataReg    CMP.B   #zero,D3
00002022  6700 003A               1730              BEQ     displayD0
00002026  B63C 0001               1731              CMP.B   #one,D3
0000202A  6700 0042               1732              BEQ     displayD1
0000202E  B63C 0002               1733              CMP.B   #two,D3
00002032  6700 004A               1734              BEQ     displayD2
00002036  B63C 0003               1735              CMP.B   #three,D3
0000203A  6700 0052               1736              BEQ     displayD3
0000203E  B63C 0004               1737              CMP.B   #four,D3
00002042  6700 005A               1738              BEQ     displayD4
00002046  B63C 0005               1739              CMP.B   #five,D3
0000204A  6700 0062               1740              BEQ     displayD5
0000204E  B63C 0006               1741              CMP.B   #six,D3
00002052  6700 006A               1742              BEQ     displayD6
00002056  B63C 0007               1743              CMP.B   #seven,D3
0000205A  6700 0072               1744              BEQ     displayD7
0000205E                          1745              
0000205E  43F9 000026FE           1746  displayD0   LEA         dispD0, A1          ; Display space
00002064  103C 000E               1747              MOVE.B      #14, D0             ; command for trap call to display message
00002068  4E4F                    1748              TRAP        #15                 ; trap call
0000206A  6000 05C4               1749              BRA         endSUB              ; go to the end of the subroutine
0000206E                          1750              
0000206E  43F9 00002701           1751  displayD1   LEA         dispD1, A1          ; Display space
00002074  103C 000E               1752              MOVE.B      #14, D0             ; command for trap call to display message
00002078  4E4F                    1753              TRAP        #15                 ; trap call
0000207A  6000 05B4               1754              BRA         endSUB              ; go to the end of the subroutine
0000207E                          1755  
0000207E  43F9 00002704           1756  displayD2   LEA         dispD2, A1          ; Display space
00002084  103C 000E               1757              MOVE.B      #14, D0             ; command for trap call to display message
00002088  4E4F                    1758              TRAP        #15                 ; trap call
0000208A  6000 05A4               1759              BRA         endSUB              ; go to the end of the subroutine
0000208E                          1760  
0000208E  43F9 00002707           1761  displayD3   LEA         dispD3, A1          ; Display space
00002094  103C 000E               1762              MOVE.B      #14, D0             ; command for trap call to display message
00002098  4E4F                    1763              TRAP        #15                 ; trap call
0000209A  6000 0594               1764              BRA         endSUB              ; go to the end of the subroutine
0000209E                          1765  
0000209E  43F9 0000270A           1766  displayD4   LEA         dispD4, A1          ; Display space
000020A4  103C 000E               1767              MOVE.B      #14, D0             ; command for trap call to display message
000020A8  4E4F                    1768              TRAP        #15                 ; trap call
000020AA  6000 0584               1769              BRA         endSUB              ; go to the end of the subroutine
000020AE                          1770  
000020AE  43F9 0000270D           1771  displayD5   LEA         dispD5, A1          ; Display space
000020B4  103C 000E               1772              MOVE.B      #14, D0             ; command for trap call to display message
000020B8  4E4F                    1773              TRAP        #15                 ; trap call
000020BA  6000 0574               1774              BRA         endSUB              ; go to the end of the subroutine
000020BE                          1775  
000020BE  43F9 00002710           1776  displayD6   LEA         dispD6, A1          ; Display space
000020C4  103C 000E               1777              MOVE.B      #14, D0             ; command for trap call to display message
000020C8  4E4F                    1778              TRAP        #15                 ; trap call
000020CA  6000 0564               1779              BRA         endSUB              ; go to the end of the subroutine
000020CE                          1780  
000020CE  43F9 00002713           1781  displayD7   LEA         dispD7, A1          ; Display space
000020D4  103C 000E               1782              MOVE.B      #14, D0             ; command for trap call to display message
000020D8  4E4F                    1783              TRAP        #15                 ; trap call
000020DA  6000 0554               1784              BRA         endSUB              ; go to the end of the subroutine
000020DE                          1785  ***********************************************************************************************************
000020DE                          1786  * Address Register
000020DE  B63C 0000               1787  pAddrReg    CMP.B   #zero,D3
000020E2  6700 003A               1788              BEQ     displayA0
000020E6  B63C 0001               1789              CMP.B   #one,D3
000020EA  6700 0042               1790              BEQ     displayA1
000020EE  B63C 0002               1791              CMP.B   #two,D3
000020F2  6700 004A               1792              BEQ     displayA2
000020F6  B63C 0003               1793              CMP.B   #three,D3
000020FA  6700 0052               1794              BEQ     displayA3
000020FE  B63C 0004               1795              CMP.B   #four,D3
00002102  6700 005A               1796              BEQ     displayA4
00002106  B63C 0005               1797              CMP.B   #five,D3
0000210A  6700 0062               1798              BEQ     displayA5
0000210E  B63C 0006               1799              CMP.B   #six,D3
00002112  6700 006A               1800              BEQ     displayA6
00002116  B63C 0007               1801              CMP.B   #seven,D3
0000211A  6700 0072               1802              BEQ     displayA7
0000211E                          1803              
0000211E  43F9 000026E4           1804  displayA0   LEA         dispA0, A1          ; Display space
00002124  103C 000E               1805              MOVE.B      #14, D0             ; command for trap call to display message
00002128  4E4F                    1806              TRAP        #15                 ; trap call
0000212A  6000 0504               1807              BRA         endSUB              ; go to the end of the subroutine
0000212E                          1808              
0000212E  43F9 000026E7           1809  displayA1   LEA         dispA1, A1          ; Display space
00002134  103C 000E               1810              MOVE.B      #14, D0             ; command for trap call to display message
00002138  4E4F                    1811              TRAP        #15                 ; trap call
0000213A  6000 04F4               1812              BRA         endSUB              ; go to the end of the subroutine
0000213E                          1813  
0000213E  43F9 000026EA           1814  displayA2   LEA         dispA2, A1          ; Display space
00002144  103C 000E               1815              MOVE.B      #14, D0             ; command for trap call to display message
00002148  4E4F                    1816              TRAP        #15                 ; trap call
0000214A  6000 04E4               1817              BRA         endSUB              ; go to the end of the subroutine
0000214E                          1818  
0000214E  43F9 000026ED           1819  displayA3   LEA         dispA3, A1          ; Display space
00002154  103C 000E               1820              MOVE.B      #14, D0             ; command for trap call to display message
00002158  4E4F                    1821              TRAP        #15                 ; trap call
0000215A  6000 04D4               1822              BRA         endSUB              ; go to the end of the subroutine
0000215E                          1823  
0000215E  43F9 000026F0           1824  displayA4   LEA         dispA4, A1          ; Display space
00002164  103C 000E               1825              MOVE.B      #14, D0             ; command for trap call to display message
00002168  4E4F                    1826              TRAP        #15                 ; trap call
0000216A  6000 04C4               1827              BRA         endSUB              ; go to the end of the subroutine
0000216E                          1828  
0000216E  43F9 000026F3           1829  displayA5   LEA         dispA5, A1          ; Display space
00002174  103C 000E               1830              MOVE.B      #14, D0             ; command for trap call to display message
00002178  4E4F                    1831              TRAP        #15                 ; trap call
0000217A  6000 04B4               1832              BRA         endSUB              ; go to the end of the subroutine
0000217E                          1833  
0000217E  43F9 000026F6           1834  displayA6   LEA         dispA6, A1          ; Display space
00002184  103C 000E               1835              MOVE.B      #14, D0             ; command for trap call to display message
00002188  4E4F                    1836              TRAP        #15                 ; trap call
0000218A  6000 04A4               1837              BRA         endSUB              ; go to the end of the subroutine
0000218E                          1838  
0000218E  43F9 000026F9           1839  displayA7   LEA         dispA7, A1          ; Display space
00002194  103C 000E               1840              MOVE.B      #14, D0             ; command for trap call to display message
00002198  4E4F                    1841              TRAP        #15                 ; trap call
0000219A  6000 0494               1842              BRA         endSUB              ; go to the end of the subroutine
0000219E                          1843  
0000219E                          1844  ***********************************************************************************************************
0000219E                          1845  * Address Register Direct
0000219E                          1846  
0000219E  43F9 00002647           1847  pAddrDir    LEA         opPer, A1           ; Display space
000021A4  103C 000E               1848              MOVE.B      #14, D0             ; command for trap call to display message
000021A8  4E4F                    1849              TRAP        #15                 ; trap call
000021AA                          1850              
000021AA  B63C 0000               1851              CMP.B   #zero,D3
000021AE  6700 003A               1852              BEQ     displayA0A
000021B2  B63C 0001               1853              CMP.B   #one,D3
000021B6  6700 004E               1854              BEQ     displayA1A
000021BA  B63C 0002               1855              CMP.B   #two,D3
000021BE  6700 0062               1856              BEQ     displayA2A
000021C2  B63C 0003               1857              CMP.B   #three,D3
000021C6  6700 0076               1858              BEQ     displayA3A
000021CA  B63C 0004               1859              CMP.B   #four,D3
000021CE  6700 008A               1860              BEQ     displayA4A
000021D2  B63C 0005               1861              CMP.B   #five,D3
000021D6  6700 009E               1862              BEQ     displayA5A
000021DA  B63C 0006               1863              CMP.B   #six,D3
000021DE  6700 00B2               1864              BEQ     displayA6A
000021E2  B63C 0007               1865              CMP.B   #seven,D3
000021E6  6700 00C6               1866              BEQ     displayA7A
000021EA                          1867              
000021EA  43F9 000026E4           1868  displayA0A  LEA         dispA0, A1          ; Display space
000021F0  103C 000E               1869              MOVE.B      #14, D0             ; command for trap call to display message
000021F4  4E4F                    1870              TRAP        #15                 ; trap call
000021F6  43F9 00002649           1871              LEA         clPer, A1           ; Display space
000021FC  103C 000E               1872              MOVE.B      #14, D0             ; command for trap call to display message
00002200  4E4F                    1873              TRAP        #15                 ; trap call
00002202  6000 042C               1874              BRA         endSUB              ; go to the end of the subroutine
00002206                          1875              
00002206  43F9 000026E7           1876  displayA1A  LEA         dispA1, A1          ; Display space
0000220C  103C 000E               1877              MOVE.B      #14, D0             ; command for trap call to display message
00002210  4E4F                    1878              TRAP        #15                 ; trap call
00002212  43F9 00002649           1879              LEA         clPer, A1           ; Display space
00002218  103C 000E               1880              MOVE.B      #14, D0             ; command for trap call to display message
0000221C  4E4F                    1881              TRAP        #15                 ; trap call
0000221E  6000 0410               1882              BRA         endSUB              ; go to the end of the subroutine
00002222                          1883  
00002222  43F9 000026EA           1884  displayA2A  LEA         dispA2, A1          ; Display space
00002228  103C 000E               1885              MOVE.B      #14, D0             ; command for trap call to display message
0000222C  4E4F                    1886              TRAP        #15                 ; trap call
0000222E  43F9 00002649           1887              LEA         clPer, A1           ; Display space
00002234  103C 000E               1888              MOVE.B      #14, D0             ; command for trap call to display message
00002238  4E4F                    1889              TRAP        #15                 ; trap call
0000223A  6000 03F4               1890              BRA         endSUB              ; go to the end of the subroutine
0000223E                          1891  
0000223E  43F9 000026ED           1892  displayA3A  LEA         dispA3, A1          ; Display space
00002244  103C 000E               1893              MOVE.B      #14, D0             ; command for trap call to display message
00002248  4E4F                    1894              TRAP        #15                 ; trap call
0000224A  43F9 00002649           1895              LEA         clPer, A1           ; Display space
00002250  103C 000E               1896              MOVE.B      #14, D0             ; command for trap call to display message
00002254  4E4F                    1897              TRAP        #15                 ; trap call
00002256  6000 03D8               1898              BRA         endSUB              ; go to the end of the subroutine
0000225A                          1899  
0000225A  43F9 000026F0           1900  displayA4A  LEA         dispA4, A1          ; Display space
00002260  103C 000E               1901              MOVE.B      #14, D0             ; command for trap call to display message
00002264  4E4F                    1902              TRAP        #15                 ; trap call
00002266  43F9 00002649           1903              LEA         clPer, A1           ; Display space
0000226C  103C 000E               1904              MOVE.B      #14, D0             ; command for trap call to display message
00002270  4E4F                    1905              TRAP        #15                 ; trap call
00002272  6000 03BC               1906              BRA         endSUB              ; go to the end of the subroutine
00002276                          1907  
00002276  43F9 000026F3           1908  displayA5A  LEA         dispA5, A1          ; Display space
0000227C  103C 000E               1909              MOVE.B      #14, D0             ; command for trap call to display message
00002280  4E4F                    1910              TRAP        #15                 ; trap call
00002282  43F9 00002649           1911              LEA         clPer, A1           ; Display space
00002288  103C 000E               1912              MOVE.B      #14, D0             ; command for trap call to display message
0000228C  4E4F                    1913              TRAP        #15                 ; trap call
0000228E  6000 03A0               1914              BRA         endSUB              ; go to the end of the subroutine
00002292                          1915  
00002292  43F9 000026F6           1916  displayA6A  LEA         dispA6, A1          ; Display space
00002298  103C 000E               1917              MOVE.B      #14, D0             ; command for trap call to display message
0000229C  4E4F                    1918              TRAP        #15                 ; trap call
0000229E  43F9 00002649           1919              LEA         clPer, A1           ; Display space
000022A4  103C 000E               1920              MOVE.B      #14, D0             ; command for trap call to display message
000022A8  4E4F                    1921              TRAP        #15                 ; trap call
000022AA  6000 0384               1922              BRA         endSUB              ; go to the end of the subroutine
000022AE                          1923  
000022AE  43F9 000026F9           1924  displayA7A  LEA         dispA7, A1          ; Display space
000022B4  103C 000E               1925              MOVE.B      #14, D0             ; command for trap call to display message
000022B8  4E4F                    1926              TRAP        #15                 ; trap call
000022BA  43F9 00002649           1927              LEA         clPer, A1           ; Display space
000022C0  103C 000E               1928              MOVE.B      #14, D0             ; command for trap call to display message
000022C4  4E4F                    1929              TRAP        #15                 ; trap call
000022C6  6000 0368               1930              BRA         endSUB              ; go to the end of the subroutine
000022CA                          1931              
000022CA                          1932  ***********************************************************************************************************
000022CA                          1933  * Addr Postincrement
000022CA                          1934              
000022CA  43F9 00002647           1935  pAddrPost   LEA         opPer, A1           ; Display space
000022D0  103C 000E               1936              MOVE.B      #14, D0             ; command for trap call to display message
000022D4  4E4F                    1937              TRAP        #15                 ; trap call
000022D6                          1938              
000022D6  B63C 0000               1939              CMP.B   #zero,D3
000022DA  6700 003A               1940              BEQ     displayA0P
000022DE  B63C 0001               1941              CMP.B   #one,D3
000022E2  6700 005A               1942              BEQ     displayA1P
000022E6  B63C 0002               1943              CMP.B   #two,D3
000022EA  6700 007A               1944              BEQ     displayA2P
000022EE  B63C 0003               1945              CMP.B   #three,D3
000022F2  6700 009A               1946              BEQ     displayA3P
000022F6  B63C 0004               1947              CMP.B   #four,D3
000022FA  6700 00BA               1948              BEQ     displayA4P
000022FE  B63C 0005               1949              CMP.B   #five,D3
00002302  6700 00DA               1950              BEQ     displayA5P
00002306  B63C 0006               1951              CMP.B   #six,D3
0000230A  6700 00FA               1952              BEQ     displayA6P
0000230E  B63C 0007               1953              CMP.B   #seven,D3
00002312  6700 011A               1954              BEQ     displayA7P
00002316                          1955              
00002316  43F9 000026E4           1956  displayA0P  LEA         dispA0, A1          ; Display space
0000231C  103C 000E               1957              MOVE.B      #14, D0             ; command for trap call to display message
00002320  4E4F                    1958              TRAP        #15                 ; trap call
00002322  43F9 00002649           1959              LEA         clPer, A1           ; Display space
00002328  103C 000E               1960              MOVE.B      #14, D0             ; command for trap call to display message
0000232C  4E4F                    1961              TRAP        #15                 ; trap call
0000232E  43F9 0000264D           1962              LEA         inc, A1             ; Display space
00002334  103C 000E               1963              MOVE.B      #14, D0             ; command for trap call to display message
00002338  4E4F                    1964              TRAP        #15                 ; trap call
0000233A  6000 02F4               1965              BRA         endSUB              ; go to the end of the subroutine
0000233E                          1966              
0000233E  43F9 000026E7           1967  displayA1P  LEA         dispA1, A1          ; Display space
00002344  103C 000E               1968              MOVE.B      #14, D0             ; command for trap call to display message
00002348  4E4F                    1969              TRAP        #15                 ; trap call
0000234A  43F9 00002649           1970              LEA         clPer, A1           ; Display space
00002350  103C 000E               1971              MOVE.B      #14, D0             ; command for trap call to display message
00002354  4E4F                    1972              TRAP        #15                 ; trap call
00002356  43F9 0000264D           1973              LEA         inc, A1             ; Display space
0000235C  103C 000E               1974              MOVE.B      #14, D0             ; command for trap call to display message
00002360  4E4F                    1975              TRAP        #15                 ; trap call
00002362  6000 02CC               1976              BRA         endSUB              ; go to the end of the subroutine
00002366                          1977  
00002366  43F9 000026EA           1978  displayA2P  LEA         dispA2, A1          ; Display space
0000236C  103C 000E               1979              MOVE.B      #14, D0             ; command for trap call to display message
00002370  4E4F                    1980              TRAP        #15                 ; trap call
00002372  43F9 00002649           1981              LEA         clPer, A1           ; Display space
00002378  103C 000E               1982              MOVE.B      #14, D0             ; command for trap call to display message
0000237C  4E4F                    1983              TRAP        #15                 ; trap call
0000237E  43F9 0000264D           1984              LEA         inc, A1             ; Display space
00002384  103C 000E               1985              MOVE.B      #14, D0             ; command for trap call to display message
00002388  4E4F                    1986              TRAP        #15                 ; trap call
0000238A  6000 02A4               1987              BRA         endSUB              ; go to the end of the subroutine
0000238E                          1988  
0000238E  43F9 000026ED           1989  displayA3P  LEA         dispA3, A1          ; Display space
00002394  103C 000E               1990              MOVE.B      #14, D0             ; command for trap call to display message
00002398  4E4F                    1991              TRAP        #15                 ; trap call
0000239A  43F9 00002649           1992              LEA         clPer, A1           ; Display space
000023A0  103C 000E               1993              MOVE.B      #14, D0             ; command for trap call to display message
000023A4  4E4F                    1994              TRAP        #15                 ; trap call
000023A6  43F9 0000264D           1995              LEA         inc, A1             ; Display space
000023AC  103C 000E               1996              MOVE.B      #14, D0             ; command for trap call to display message
000023B0  4E4F                    1997              TRAP        #15                 ; trap call
000023B2  6000 027C               1998              BRA         endSUB              ; go to the end of the subroutine
000023B6                          1999  
000023B6  43F9 000026F0           2000  displayA4P  LEA         dispA4, A1          ; Display space
000023BC  103C 000E               2001              MOVE.B      #14, D0             ; command for trap call to display message
000023C0  4E4F                    2002              TRAP        #15                 ; trap call
000023C2  43F9 00002649           2003              LEA         clPer, A1           ; Display space
000023C8  103C 000E               2004              MOVE.B      #14, D0             ; command for trap call to display message
000023CC  4E4F                    2005              TRAP        #15                 ; trap call
000023CE  43F9 0000264D           2006              LEA         inc, A1             ; Display space
000023D4  103C 000E               2007              MOVE.B      #14, D0             ; command for trap call to display message
000023D8  4E4F                    2008              TRAP        #15                 ; trap call
000023DA  6000 0254               2009              BRA         endSUB              ; go to the end of the subroutine
000023DE                          2010  
000023DE  43F9 000026F3           2011  displayA5P  LEA         dispA5, A1          ; Display space
000023E4  103C 000E               2012              MOVE.B      #14, D0             ; command for trap call to display message
000023E8  4E4F                    2013              TRAP        #15                 ; trap call
000023EA  43F9 00002649           2014              LEA         clPer, A1           ; Display space
000023F0  103C 000E               2015              MOVE.B      #14, D0             ; command for trap call to display message
000023F4  4E4F                    2016              TRAP        #15                 ; trap call
000023F6  43F9 0000264D           2017              LEA         inc, A1             ; Display space
000023FC  103C 000E               2018              MOVE.B      #14, D0             ; command for trap call to display message
00002400  4E4F                    2019              TRAP        #15                 ; trap call
00002402  6000 022C               2020              BRA         endSUB              ; go to the end of the subroutine
00002406                          2021  
00002406  43F9 000026F6           2022  displayA6P  LEA         dispA6, A1          ; Display space
0000240C  103C 000E               2023              MOVE.B      #14, D0             ; command for trap call to display message
00002410  4E4F                    2024              TRAP        #15                 ; trap call
00002412  43F9 00002649           2025              LEA         clPer, A1           ; Display space
00002418  103C 000E               2026              MOVE.B      #14, D0             ; command for trap call to display message
0000241C  4E4F                    2027              TRAP        #15                 ; trap call
0000241E  43F9 0000264D           2028              LEA         inc, A1             ; Display space
00002424  103C 000E               2029              MOVE.B      #14, D0             ; command for trap call to display message
00002428  4E4F                    2030              TRAP        #15                 ; trap call
0000242A  6000 0204               2031              BRA         endSUB              ; go to the end of the subroutine
0000242E                          2032  
0000242E  43F9 000026F9           2033  displayA7P  LEA         dispA7, A1          ; Display space
00002434  103C 000E               2034              MOVE.B      #14, D0             ; command for trap call to display message
00002438  4E4F                    2035              TRAP        #15                 ; trap call
0000243A  43F9 00002649           2036              LEA         clPer, A1           ; Display space
00002440  103C 000E               2037              MOVE.B      #14, D0             ; command for trap call to display message
00002444  4E4F                    2038              TRAP        #15                 ; trap call
00002446  43F9 0000264D           2039              LEA         inc, A1             ; Display space
0000244C  103C 000E               2040              MOVE.B      #14, D0             ; command for trap call to display message
00002450  4E4F                    2041              TRAP        #15                 ; trap call
00002452  6000 01DC               2042              BRA         endSUB              ; go to the end of the subroutine
00002456                          2043  
00002456                          2044  ***********************************************************************************************************
00002456                          2045  * Addr Postdecrement
00002456                          2046  
00002456  43F9 0000264B           2047  pAddrDec    LEA         dec, A1             ; Display space
0000245C  103C 000E               2048              MOVE.B      #14, D0             ; command for trap call to display message
00002460  4E4F                    2049              TRAP        #15                 ; trap call
00002462                          2050              
00002462  43F9 00002647           2051              LEA         opPer, A1           ; Display space
00002468  103C 000E               2052              MOVE.B      #14, D0             ; command for trap call to display message
0000246C  4E4F                    2053              TRAP        #15                 ; trap call
0000246E                          2054              
0000246E  B63C 0000               2055              CMP.B   #zero,D3
00002472  6700 003A               2056              BEQ     displayA0D
00002476  B63C 0001               2057              CMP.B   #one,D3
0000247A  6700 004E               2058              BEQ     displayA1D
0000247E  B63C 0002               2059              CMP.B   #two,D3
00002482  6700 0062               2060              BEQ     displayA2D
00002486  B63C 0003               2061              CMP.B   #three,D3
0000248A  6700 0076               2062              BEQ     displayA3D
0000248E  B63C 0004               2063              CMP.B   #four,D3
00002492  6700 008A               2064              BEQ     displayA4D
00002496  B63C 0005               2065              CMP.B   #five,D3
0000249A  6700 009E               2066              BEQ     displayA5D
0000249E  B63C 0006               2067              CMP.B   #six,D3
000024A2  6700 00B2               2068              BEQ     displayA6D
000024A6  B63C 0007               2069              CMP.B   #seven,D3
000024AA  6700 00C6               2070              BEQ     displayA7D
000024AE                          2071              
000024AE  43F9 000026E4           2072  displayA0D  LEA         dispA0, A1          ; Display space
000024B4  103C 000E               2073              MOVE.B      #14, D0             ; command for trap call to display message
000024B8  4E4F                    2074              TRAP        #15                 ; trap call
000024BA  43F9 00002649           2075              LEA         clPer, A1           ; Display space
000024C0  103C 000E               2076              MOVE.B      #14, D0             ; command for trap call to display message
000024C4  4E4F                    2077              TRAP        #15                 ; trap call
000024C6  6000 0168               2078              BRA         endSUB              ; go to the end of the subroutine
000024CA                          2079              
000024CA  43F9 000026E7           2080  displayA1D  LEA         dispA1, A1          ; Display space
000024D0  103C 000E               2081              MOVE.B      #14, D0             ; command for trap call to display message
000024D4  4E4F                    2082              TRAP        #15                 ; trap call
000024D6  43F9 00002649           2083              LEA         clPer, A1           ; Display space
000024DC  103C 000E               2084              MOVE.B      #14, D0             ; command for trap call to display message
000024E0  4E4F                    2085              TRAP        #15                 ; trap call
000024E2  6000 014C               2086              BRA         endSUB              ; go to the end of the subroutine
000024E6                          2087  
000024E6  43F9 000026EA           2088  displayA2D  LEA         dispA2, A1          ; Display space
000024EC  103C 000E               2089              MOVE.B      #14, D0             ; command for trap call to display message
000024F0  4E4F                    2090              TRAP        #15                 ; trap call
000024F2  43F9 00002649           2091              LEA         clPer, A1           ; Display space
000024F8  103C 000E               2092              MOVE.B      #14, D0             ; command for trap call to display message
000024FC  4E4F                    2093              TRAP        #15                 ; trap call
000024FE  6000 0130               2094              BRA         endSUB              ; go to the end of the subroutine
00002502                          2095  
00002502  43F9 000026ED           2096  displayA3D  LEA         dispA3, A1          ; Display space
00002508  103C 000E               2097              MOVE.B      #14, D0             ; command for trap call to display message
0000250C  4E4F                    2098              TRAP        #15                 ; trap call
0000250E  43F9 00002649           2099              LEA         clPer, A1           ; Display space
00002514  103C 000E               2100              MOVE.B      #14, D0             ; command for trap call to display message
00002518  4E4F                    2101              TRAP        #15                 ; trap call
0000251A  6000 0114               2102              BRA         endSUB              ; go to the end of the subroutine
0000251E                          2103  
0000251E  43F9 000026F0           2104  displayA4D  LEA         dispA4, A1          ; Display space
00002524  103C 000E               2105              MOVE.B      #14, D0             ; command for trap call to display message
00002528  4E4F                    2106              TRAP        #15                 ; trap call
0000252A  43F9 00002649           2107              LEA         clPer, A1           ; Display space
00002530  103C 000E               2108              MOVE.B      #14, D0             ; command for trap call to display message
00002534  4E4F                    2109              TRAP        #15                 ; trap call
00002536  6000 00F8               2110              BRA         endSUB              ; go to the end of the subroutine
0000253A                          2111  
0000253A  43F9 000026F3           2112  displayA5D  LEA         dispA5, A1          ; Display space
00002540  103C 000E               2113              MOVE.B      #14, D0             ; command for trap call to display message
00002544  4E4F                    2114              TRAP        #15                 ; trap call
00002546  43F9 00002649           2115              LEA         clPer, A1           ; Display space
0000254C  103C 000E               2116              MOVE.B      #14, D0             ; command for trap call to display message
00002550  4E4F                    2117              TRAP        #15                 ; trap call
00002552  6000 00DC               2118              BRA         endSUB              ; go to the end of the subroutine
00002556                          2119  
00002556  43F9 000026F6           2120  displayA6D  LEA         dispA6, A1          ; Display space
0000255C  103C 000E               2121              MOVE.B      #14, D0             ; command for trap call to display message
00002560  4E4F                    2122              TRAP        #15                 ; trap call
00002562  43F9 00002649           2123              LEA         clPer, A1           ; Display space
00002568  103C 000E               2124              MOVE.B      #14, D0             ; command for trap call to display message
0000256C  4E4F                    2125              TRAP        #15                 ; trap call
0000256E  6000 00C0               2126              BRA         endSUB              ; go to the end of the subroutine
00002572                          2127  
00002572  43F9 000026F9           2128  displayA7D  LEA         dispA7, A1          ; Display space
00002578  103C 000E               2129              MOVE.B      #14, D0             ; command for trap call to display message
0000257C  4E4F                    2130              TRAP        #15                 ; trap call
0000257E  43F9 00002649           2131              LEA         clPer, A1           ; Display space
00002584  103C 000E               2132              MOVE.B      #14, D0             ; command for trap call to display message
00002588  4E4F                    2133              TRAP        #15                 ; trap call
0000258A  6000 00A4               2134              BRA         endSUB              ; go to the end of the subroutine
0000258E                          2135  
0000258E                          2136  
0000258E                          2137  ***********************************************************************************************************
0000258E                          2138  * Absolute Address
0000258E  B63C 0000               2139  pHex        CMP.B       #zero, D3
00002592  6700 0012               2140              BEQ         AbsShort
00002596  B63C 0001               2141              CMP.B       #one, D3
0000259A  6700 003C               2142              BEQ         AbsLong
0000259E  B63C 0004               2143              CMP.B       #four, D3
000025A2  6700 0066               2144              BEQ         DispImm
000025A6                          2145              
000025A6  43F9 00002647           2146  AbsShort    LEA         opPer, A1           ; Display space
000025AC  103C 000E               2147              MOVE.B      #14, D0             ; command for trap call to display message
000025B0  4E4F                    2148              TRAP        #15                 ; trap call
000025B2                          2149              
000025B2  43F9 00002643           2150              LEA         dispHex, A1         ; Display space
000025B8  103C 000E               2151              MOVE.B      #14, D0             ; command for trap call to display message
000025BC  4E4F                    2152              TRAP        #15                 ; trap call
000025BE                          2153              
000025BE  4241                    2154              CLR         D1
000025C0  3218                    2155              MOVE.W      (A0)+, D1
000025C2                          2156              
000025C2  103C 0003               2157              MOVE.B      #3, D0
000025C6  4E4F                    2158              TRAP        #15
000025C8                          2159              
000025C8  43F9 00002649           2160              LEA         clPer, A1           ; Display space
000025CE  103C 000E               2161              MOVE.B      #14, D0             ; command for trap call to display message
000025D2  4E4F                    2162              TRAP        #15                 ; trap call
000025D4                          2163              
000025D4  6000 005A               2164              BRA         endSub
000025D8                          2165              
000025D8  43F9 00002647           2166  AbsLong     LEA         opPer, A1           ; Display space
000025DE  103C 000E               2167              MOVE.B      #14, D0             ; command for trap call to display message
000025E2  4E4F                    2168              TRAP        #15                 ; trap call
000025E4                          2169              
000025E4  43F9 00002643           2170              LEA         dispHex, A1         ; Display space
000025EA  103C 000E               2171              MOVE.B      #14, D0             ; command for trap call to display message
000025EE  4E4F                    2172              TRAP        #15                 ; trap call
000025F0                          2173              
000025F0  4241                    2174              CLR         D1
000025F2  2218                    2175              MOVE.L      (A0)+, D1
000025F4                          2176              
000025F4  103C 0003               2177              MOVE.B      #3, D0
000025F8  4E4F                    2178              TRAP        #15
000025FA                          2179              
000025FA  43F9 00002649           2180              LEA         clPer, A1           ; Display space
00002600  103C 000E               2181              MOVE.B      #14, D0             ; command for trap call to display message
00002604  4E4F                    2182              TRAP        #15                 ; trap call
00002606                          2183              
00002606  6000 0028               2184              BRA         endSub
0000260A                          2185  
0000260A  43F9 00002641           2186  DispImm     LEA         hashTag, A1         ; Display space
00002610  103C 000E               2187              MOVE.B      #14, D0             ; command for trap call to display message
00002614  4E4F                    2188              TRAP        #15                 ; trap call
00002616                          2189              
00002616  4241                    2190              CLR         D1
00002618  3218                    2191              MOVE.W      (A0)+, D1
0000261A                          2192  
0000261A  43F9 00002643           2193              LEA         dispHex, A1         ; Display space
00002620  103C 000E               2194              MOVE.B      #14, D0             ; command for trap call to display message
00002624  4E4F                    2195              TRAP        #15                 ; trap call
00002626                          2196              
00002626  103C 0003               2197              MOVE.B      #3, D0
0000262A  4E4F                    2198              TRAP        #15
0000262C                          2199  
0000262C  6000 0002               2200              BRA         endSub
00002630                          2201  
00002630                          2202  invalid
00002630                          2203  
00002630                          2204  endSUB
00002630                          2205          
00002630  4CDF 7EFF               2206          MOVEM.L  (SP)+, D0-D7/A1-A6
00002634  4E75                    2207          RTS
00002636                          2208  
00002636                          2209  ***********************************************************************************************************
00002636                          2210  ***********************************************************************************************************
00002636                          2211  ***********************************************************************************************************
00002636                          2212  
00002636                          2213  printInvalid
00002636                          2214  endPROG    
00002636                          2215  
00002636  FFFF FFFF               2216      SIMHALT                             ; halt simulator
0000263A                          2217  
0000263A= 20 0D 0A 00             2218  newLine     DC.B    ' ', CR, LF, 0
0000263E= 20 20 00                2219  space       DC.B    '  ', 0
00002641                          2220  
00002641= 23 00                   2221  hashTag     DC.B    '#', 0
00002643= 24 00                   2222  dispHex     DC.B    '$', 0
00002645= 2C 00                   2223  comma       DC.B    ',', 0
00002647                          2224  
00002647= 28 00                   2225  opPer       DC.B    '(', 0
00002649= 29 00                   2226  clPer       DC.B    ')', 0
0000264B= 2D 00                   2227  dec         DC.B    '-', 0
0000264D= 2B 00                   2228  inc         DC.B    '+', 0
0000264F= 2F 00                   2229  slash       DC.B    '/', 0
00002651                          2230  
00002651= 28 53 50 29 00          2231  stack       DC.B    '(SP)', 0
00002656                          2232  
00002656= 4F 52 49 00             2233  ORImatch    DC.B    'ORI', 0
0000265A= 43 4D 50 49 00          2234  CMPImatch   DC.B    'CMPI', 0
0000265F= 42 43 4C 52 00          2235  BCLRmatch   DC.B    'BCLR', 0
00002664= 4D 4F 56 45 00          2236  MOVEmatch   DC.B    'MOVE', 0
00002669= 4D 4F 56 45 41 00       2237  MOVEAmatch  DC.B    'MOVEA', 0
0000266F= 4E 45 47 00             2238  NEGmatch    DC.B    'NEG', 0
00002673= 52 54 53 00             2239  RTSmatch    DC.B    'RTS', 0
00002677= 4A 53 52 00             2240  JSRmatch    DC.B    'JSR', 0
0000267B= 4D 4F 56 45 4D 00       2241  MOVEMmatch  DC.B    'MOVEM', 0
00002681= 4C 45 41 00             2242  LEAmatch    DC.B    'LEA', 0
00002685= 53 55 42 51 00          2243  SUBQmatch   DC.B    'SUBQ', 0
0000268A= 42 52 41 00             2244  BRAmatch    DC.B    'BRA', 0
0000268E= 42 43 53 00             2245  BCSmatch    DC.B    'BCS', 0
00002692= 42 56 43 00             2246  BVCmatch    DC.B    'BVC', 0
00002696= 42 47 45 00             2247  BGEmatch    DC.B    'BGE', 0
0000269A= 42 4C 54 00             2248  BLTmatch    DC.B    'BLT', 0
0000269E= 44 49 56 53 00          2249  DIVSmatch   DC.B    'DIVS', 0
000026A3= 4F 52 00                2250  ORmatch     DC.B    'OR', 0
000026A6= 53 55 42 00             2251  SUBmatch    DC.B    'SUB', 0
000026AA= 45 4F 52 00             2252  EORmatch    DC.B    'EOR', 0
000026AE= 43 4D 50 00             2253  CMPmatch    DC.B    'CMP', 0
000026B2= 4D 55 4C 53 00          2254  MULSmatch   DC.B    'MULS', 0
000026B7= 41 44 44 00             2255  ADDmatch    DC.B    'ADD', 0
000026BB= 41 44 44 41 00          2256  ADDAmatch   DC.B    'ADDA', 0
000026C0= 4C 53 52 00             2257  LSRmatch    DC.B    'LSR', 0
000026C4= 4C 53 4C 00             2258  LSLmatch    DC.B    'LSL', 0
000026C8= 41 53 52 00             2259  ASRmatch    DC.B    'ASR', 0
000026CC= 41 53 4C 00             2260  ASLmatch    DC.B    'ASL', 0
000026D0= 52 4F 52 00             2261  RORmatch    DC.B    'ROR', 0
000026D4= 52 4F 4C 00             2262  ROLmatch    DC.B    'ROL', 0
000026D8                          2263   
000026D8= 2E 42 00                2264  dispByte    DC.B    '.B', 0
000026DB= 2E 57 00                2265  dispWord    DC.B    '.W', 0
000026DE= 2E 4C 00                2266  dispLong    DC.B    '.L', 0
000026E1                          2267  
000026E1= 41 6E 00                2268  dispAn      DC.B    'An', 0
000026E4= 41 30 00                2269  dispA0      DC.B    'A0', 0
000026E7= 41 31 00                2270  dispA1      DC.B    'A1', 0
000026EA= 41 32 00                2271  dispA2      DC.B    'A2', 0
000026ED= 41 33 00                2272  dispA3      DC.B    'A3', 0
000026F0= 41 34 00                2273  dispA4      DC.B    'A4', 0
000026F3= 41 35 00                2274  dispA5      DC.B    'A5', 0
000026F6= 41 36 00                2275  dispA6      DC.B    'A6', 0
000026F9= 41 37 00                2276  dispA7      DC.B    'A7', 0
000026FC                          2277  
000026FC= 44 00                   2278  dispD       DC.B    'D',  0
000026FE= 44 30 00                2279  dispD0      DC.B    'D0', 0
00002701= 44 31 00                2280  dispD1      DC.B    'D1', 0
00002704= 44 32 00                2281  dispD2      DC.B    'D2', 0
00002707= 44 33 00                2282  dispD3      DC.B    'D3', 0
0000270A= 44 34 00                2283  dispD4      DC.B    'D4', 0
0000270D= 44 35 00                2284  dispD5      DC.B    'D5', 0
00002710= 44 36 00                2285  dispD6      DC.B    'D6', 0
00002713= 44 37 00                2286  dispD7      DC.B    'D7', 0  
00002716                          2287             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             25D8
ABSSHORT            25A6
ADDAMATCH           26BB
ADDMATCH            26B7
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ADDR0CONT           1E32
ADDR1CONT           1E72
ADDR2CONT           1EB2
ADDR3CONT           1EF2
ADDR4CONT           1F32
ADDR5CONT           1F72
ADDR6CONT           1FB2
ADDRREG0            1E12
ADDRREG1            1E42
ADDRREG2            1E82
ADDRREG3            1EC2
ADDRREG4            1F02
ADDRREG5            1F42
ADDRREG6            1F82
ADDRREG7            1FC2
ASLMATCH            26CC
ASRMATCH            26C8
BCLRMATCH           265F
BCSMATCH            268E
BGEMATCH            2696
BLTMATCH            269A
BRAEIGHT            1118
BRAELEVEN           111C
BRAFIVE             10E8
BRAFOUR             10CC
BRAFOURTEEN         1120
BRAMATCH            268A
BRANINE             1118
BRAONE              10C0
BRASIX              10EC
BRATHIRTEEN         1120
BRATHREE            10C8
BRATWELVE           111C
BRATWO              10C4
BRAZERO             1090
BVCMATCH            2692
CHECKDR             1AEA
CLPER               2649
CMPIMATCH           265A
CMPMATCH            26AE
COMMA               2645
CR                  D
DATAREG0            1BB4
DATAREG1            1BE4
DATAREG2            1C24
DATAREG3            1C64
DATAREG4            1CA4
DATAREG5            1CE4
DATAREG6            1D24
DATAREG7            1D64
DEC                 264B
DISPA0              26E4
DISPA1              26E7
DISPA2              26EA
DISPA3              26ED
DISPA4              26F0
DISPA5              26F3
DISPA6              26F6
DISPA7              26F9
DISPAN              26E1
DISPBYTE            26D8
DISPD               26FC
DISPD0              26FE
DISPD1              2701
DISPD2              2704
DISPD3              2707
DISPD4              270A
DISPD5              270D
DISPD6              2710
DISPD7              2713
DISPHEX             2643
DISPIMM             260A
DISPLAYA0           211E
DISPLAYA0A          21EA
DISPLAYA0D          24AE
DISPLAYA0P          2316
DISPLAYA1           212E
DISPLAYA1A          2206
DISPLAYA1D          24CA
DISPLAYA1P          233E
DISPLAYA2           213E
DISPLAYA2A          2222
DISPLAYA2D          24E6
DISPLAYA2P          2366
DISPLAYA3           214E
DISPLAYA3A          223E
DISPLAYA3D          2502
DISPLAYA3P          238E
DISPLAYA4           215E
DISPLAYA4A          225A
DISPLAYA4D          251E
DISPLAYA4P          23B6
DISPLAYA5           216E
DISPLAYA5A          2276
DISPLAYA5D          253A
DISPLAYA5P          23DE
DISPLAYA6           217E
DISPLAYA6A          2292
DISPLAYA6D          2556
DISPLAYA6P          2406
DISPLAYA7           218E
DISPLAYA7A          22AE
DISPLAYA7D          2572
DISPLAYA7P          242E
DISPLAYD0           205E
DISPLAYD1           206E
DISPLAYD2           207E
DISPLAYD3           208E
DISPLAYD4           209E
DISPLAYD5           20AE
DISPLAYD6           20BE
DISPLAYD7           20CE
DISPLONG            26DE
DISPWORD            26DB
DIVSMATCH           269E
EIGHT               8
ELEVEN              B
ENDMOVE             1FD2
ENDMOVE1            1FE0
ENDPROG             2636
ENDSUB              2630
EORMATCH            26AA
FIFTEEN             F
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             2641
INC                 264D
INVALID             2630
JSRMATCH            2677
LEAMATCH            2681
LF                  A
LOOP                100C
LSLMATCH            26C4
LSRMATCH            26C0
MASK0               0
MASK1               1
MASK2               2
MASK3               4
MASK4               8
MASK5               10
MASK6               20
MASK7               40
MASK8               80
MASKA               5
MASKB               A
MASKC               14
MASKD               28
MASKE               50
MASKF               A0
MOVEAMATCH          2669
MOVEMATCH           2664
MOVEMBRA            1A9E
MOVEML              1ACE
MOVEMMATCH          267B
MOVEMW              1AB2
MULSMATCH           26B2
NEGMATCH            266F
NEWLINE             263A
NINE                9
ONE                 1
OPASL               1A56
OPASR               1A62
OPBCLR              141A
OPBCS               1A0E
OPBGE               1A26
OPBLT               1A32
OPBRA               19F6
OPBVC               1A1A
OPCMPI              12A8
OPCMPIB             12F4
OPCMPIL             13B8
OPCMPIW             1356
OPDYNBCLR           147E
OPJSR               186C
OPLEA               196E
OPLSL               1A6E
OPLSR               1A7A
OPMOVEAL            1600
OPMOVEAW            16FA
OPMOVEB             14EC
OPMOVEL             1570
OPMOVEM             18E4
OPMOVEMLEA          18C8
OPMOVEW             166A
OPMULS              1A4A
OPNEG               1764
OPNEGB              1792
OPNEGL              17D2
OPNEGW              1812
OPORI               1154
OPORIB              1182
OPORIL              1246
OPORIW              11E4
OPPER               2647
OPROL               1A86
OPROR               1A92
OPRTS               18AC
OPRTSJSR            1852
OPSUB               1A3E
OPSUBQ              19EA
ORIMATCH            2656
ORMATCH             26A3
PADDRDEC            2456
PADDRDIR            219E
PADDRPOST           22CA
PADDRREG            20DE
PDATAREG            201E
PHEX                258E
PRINTEA             1FE6
PRINTINVALID        2636
PRINTMEM            1D74
PRINTMEMNOW         1D80
PRINTREGMEM         1B28
PRINTSTACK          1B00
REG0                0
REG0CONT            1BD4
REG1                1
REG1CONT            1C14
REG2                2
REG2CONT            1C54
REG3                3
REG3CONT            1C94
REG4                4
REG4CONT            1CD4
REG5                5
REG5CONT            1D14
REG6                6
REG6CONT            1D54
REG7                7
ROLMATCH            26D4
RORMATCH            26D0
RTSMATCH            2673
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SKIPPRINTEA         195E
SLASH               264F
SPACE               263E
STACK               2651
START               1000
SUBMATCH            26A6
SUBQMATCH           2685
TEST_END            2009
TEST_START          2000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
