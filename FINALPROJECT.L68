00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 12/9/2014 8:40:56 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =00003100                 11  test_end    EQU     $00003100   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000  =0000000F                 27  fifteen     EQU     $0F         ; defined hex value 15
00000000                            28  
00000000  =00000000                 29  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 30  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 31  s1L         EQU     %0010       ; long size 1
00000000                            32              
00000000  =00000000                 33  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 34  s2L         EQU     %0001       ; long size 2
00000000                            35  
00000000  =00000001                 36  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 37  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 38  s3L         EQU     %0010       ; long size 3
00000000                            39  
00000000  =00000000                 40  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 41  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 42  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 43  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 44  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 45  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            46  
00000000                            47              
00000000                            48  
00000000  =00000000                 49  mask0       EQU     %00000000
00000000  =00000001                 50  mask1       EQU     %00000001
00000000  =00000002                 51  mask2       EQU     %00000010
00000000  =00000004                 52  mask3       EQU     %00000100
00000000  =00000008                 53  mask4       EQU     %00001000
00000000  =00000010                 54  mask5       EQU     %00010000
00000000  =00000020                 55  mask6       EQU     %00100000
00000000  =00000040                 56  mask7       EQU     %01000000
00000000  =00000080                 57  mask8       EQU     %10000000
00000000                            58  
00000000  =00000005                 59  maskA       EQU     %00000101
00000000  =0000000A                 60  maskB       EQU     %00001010
00000000  =00000014                 61  maskC       EQU     %00010100
00000000  =00000028                 62  maskD       EQU     %00101000
00000000  =00000050                 63  maskE       EQU     %01010000
00000000  =000000A0                 64  maskF       EQU     %10100000
00000000                            65  
00000000                            66  
00000000  =000000F0                 67  firstNib    EQU     $F0
00000000  =0000000F                 68  secNib      EQU     $0F
00000000                            69               
00001000                            70              ORG    $1000
00001000                            71  START:                                  ; first instruction of program
00001000                            72        
00001000  207C 00003000             73          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00003100             74          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            75            
0000100C  4241                      76  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      77          CLR         D2                  ; clear out D2
00001010  B1CA                      78          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 1624                 79          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      80          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      81          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      82          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            83          
0000101C  B43C 0000                 84          CMP.B       #zero, D2           ; compare with 0
00001020  6700 006E                 85          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 86          CMP.B       #one, D2            ; compare with 1
00001028  6700 0096                 87          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 88          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0092                 89          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 90          CMP.B       #three, D2          ; compare with 3
00001038  6700 008E                 91          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 92          CMP.B       #four, D2           ; compare with 4
00001040  6700 008A                 93          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 94          CMP.B       #five, D2           ; compare with 5
00001048  6700 009E                 95          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 96          CMP.B       #six, D2            ; compare with 6
00001050  6700 009A                 97          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 98          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00BE                 99          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                100          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00B6                101          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                102          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00B2                103          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                104          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00AA                105          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                106          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 00A6                107          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                108          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 009E                109          BEQ         braFourteen         ; branch out to fourteen method
00001084  B43C 000F                110          CMP.B       #fifteen,D2
00001088  6700 15AE                111          BEQ         endProg
0000108C  6000 FF7E                112          BRA         loop
00001090                           113  
00001090  4242                     114  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001092  1401                     115          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001094  C43C 000F                116          AND.B       #secNib, D2             ; set first nibble to 0
00001098                           117   
00001098  B43C 0000                118          CMP.B       #zero, D2           ; compare second nibble to 0
0000109C  6700 00B6                119          BEQ         opORI               ; branch to ORI method
000010A0  B43C 000C                120          CMP.B       #twelve, D2         ; compare second nibble to 12
000010A4  6700 0202                121          BEQ         opCMPI              ; branch to CMPI method
000010A8  B43C 0008                122          CMP.B       #eight,D2           ; Test for static BCLR
000010AC  6700 036C                123          BEQ         opBCLR
000010B0  C47C 0001                124          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010B4  B43C 0001                125          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010B8  6700 03C4                126          BEQ         opDynBCLR
000010BC  6000 157A                127          BRA         printInvalid
000010C0                           128          
000010C0                           129          
000010C0  6000 042A                130  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010C4                           131  
000010C4  6000 04AA                132  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010C8                           133  
000010C8                           134  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010C8                           135  
000010C8  6000 05A2                136          BRA         opMOVEW
000010CC                           137  
000010CC  4242                     138  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010CE  1401                     139          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010D0  C43C 000F                140          AND.B       #secNib, D2             ; set first nibble to 0
000010D4                           141   
000010D4  B43C 0004                142          CMP.B       #four, D2           ; compare second nibble to 4
000010D8  6700 0688                143          BEQ         opNEG               ; branch to NEG method
000010DC  B43C 000E                144          CMP.B       #fourteen, D2       ; compare second nibble to E
000010E0  6700 076E                145          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010E4  6000 07E0                146          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010E8                           147  
000010E8  6000 0902                148  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010EC                           149  
000010EC  4242                     150  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010EE  1401                     151          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010F0  C438 000F                152          AND.B       $0F, D2             ; set first nibble to 0
000010F4                           153   
000010F4  B43C 0000                154          CMP.B       #zero, D2           ; compare second nibble to 0
000010F8  6700 08FE                155          BEQ         opBRA               ; branch to BRA method
000010FC  B43C 0005                156          CMP.B       #five, D2           ; compare second nibble to 5
00001100  6700 090E                157          BEQ         opBCS               ; branch to BCS method
00001104  B43C 0008                158          CMP.B       #eight, D2          ; compare second nibble to 8
00001108  6700 0912                159          BEQ         opBVC               ; branch to BCS method
0000110C  B43C 000C                160          CMP.B       #twelve, D2         ; compare second nibble to 12
00001110  6700 0916                161          BEQ         opBGE               ; branch to BGE method
00001114  6000 091E                162          BRA         opBLT               ; otherwise, branch to BLT method
00001118                           163  
00001118                           164  braEight    ; there are two opCodes available DIVS, or OR
00001118                           165  
00001118  6000 0926                166  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000111C                           167  
0000111C                           168  braEleven   ; there are two opCodes available EOR, or CMP
0000111C                           169  
0000111C  6000 092E                170  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
00001120                           171    
00001120                           172  braThirteen ; there are two opCodes available ADD, or ADDA
00001120                           173  
00001120  4242                     174  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
00001122  1401                     175              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001124  C438 000F                176              AND.B       $0F, D2             ; set first nibble to 0
00001128                           177   
00001128  B43C 0000                178              CMP.B       #zero, D2           ; compare second nibble to 0
0000112C  6700 0936                179              BEQ         opASR               ; branch to ASR method
00001130  B43C 0001                180              CMP.B       #one, D2            ; compare second nibble to 1
00001134  6700 0922                181              BEQ         opASL               ; branch to ASL method
00001138  B43C 0002                182              CMP.B       #two, D2            ; compare second nibble to 2
0000113C  6700 093E                183              BEQ         opLSR               ; branch to LSR method
00001140  B43C 0003                184              CMP.B       #three, D2          ; compare second nibble to 3
00001144  6700 092A                185              BEQ         opLSL               ; branch to LSL method
00001148  B43C 0006                186              CMP.B       #six, D2            ; compare second nibble to 6
0000114C  6700 0946                187              BEQ         opROR               ; branch to ROR method
00001150  6000 0936                188              BRA         opROL               ; otherwise, branch to ROL method
00001154                           189  
00001154  43F9 00002658            190  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
0000115A  103C 000E                191          MOVE.B      #14, D0             ; command for trap call to display message
0000115E  4E4F                     192          TRAP        #15                 ; trap call
00001160                           193          
00001160  1218                     194          MOVE.B      (A0)+, D1
00001162  1401                     195          MOVE.B      D1,D2               ; copy data over
00001164  EC42                     196          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001166  B43C 0000                197          CMP.B       #zero,D2
0000116A  6700 0016                198          BEQ         opORIB
0000116E  B43C 0001                199          CMP.B       #one,D2
00001172  6700 0070                200          BEQ         opORIW
00001176  B43C 0002                201          CMP.B       #two,D2
0000117A  6700 00CA                202          BEQ         opORIL
0000117E                           203          
0000117E  6000 14B8                204          BRA         printInvalid
00001182                           205          
00001182  43F9 000026DA            206  opORIB  LEA         dispByte, A1        ; Display byte
00001188  103C 000E                207          MOVE.B      #14, D0             ; command for trap call to display message
0000118C  4E4F                     208          TRAP        #15                 ; trap call
0000118E                           209          
0000118E  43F9 00002640            210          LEA         space, A1           ; Display space
00001194  103C 000E                211          MOVE.B      #14, D0             ; command for trap call to display message
00001198  4E4F                     212          TRAP        #15                 ; trap call
0000119A                           213          
0000119A  4244                     214          CLR         D4
0000119C  1801                     215          MOVE.B      D1,D4
0000119E  E644                     216          ASR         #three,D4
000011A0  C87C 0007                217          AND         #seven,D4
000011A4  4245                     218          CLR         D5        
000011A6  1A01                     219          MOVE.B      D1,D5
000011A8  CA7C 0007                220          AND         #seven,D5
000011AC                           221          
000011AC  163C 0004                222          MOVE.B      #four,D3
000011B0  143C 0007                223          MOVE.B      #seven,D2
000011B4                           224  
000011B4  4EB9 00001FD8            225          JSR         printEA
000011BA                           226          
000011BA  43F9 00002647            227          LEA         comma, A1           ; Display space
000011C0  103C 000E                228          MOVE.B      #14, D0             ; command for trap call to display message
000011C4  4E4F                     229          TRAP        #15                 ; trap call
000011C6                           230          
000011C6  4242                     231          CLR         D2
000011C8  4243                     232          CLR         D3
000011CA  1404                     233          MOVE.B      D4,D2
000011CC  1605                     234          MOVE.B      D5,D3
000011CE                           235          
000011CE  4EB9 00001FD8            236          JSR         printEA
000011D4                           237          
000011D4  43F9 0000263C            238          LEA         newLine, A1           ; Display space
000011DA  103C 000E                239          MOVE.B      #14, D0             ; command for trap call to display message
000011DE  4E4F                     240          TRAP        #15                 ; trap call
000011E0                           241          
000011E0  6000 FE2A                242          BRA         LOOP
000011E4                           243          
000011E4                           244          
000011E4  43F9 000026DD            245  opORIW  LEA         dispWord, A1        ; Display byte
000011EA  103C 000E                246          MOVE.B      #14, D0             ; command for trap call to display message
000011EE  4E4F                     247          TRAP        #15                 ; trap call
000011F0                           248          
000011F0  43F9 00002640            249          LEA         space, A1           ; Display space
000011F6  103C 000E                250          MOVE.B      #14, D0             ; command for trap call to display message
000011FA  4E4F                     251          TRAP        #15                 ; trap call
000011FC                           252          
000011FC  4242                     253          CLR         D2
000011FE  1401                     254          MOVE.B      D1,D2
00001200  E642                     255          ASR         #three,D2
00001202  C47C 0007                256          AND         #seven,D2
00001206  4243                     257          CLR         D3        
00001208  1601                     258          MOVE.B      D1,D3
0000120A  C67C 0007                259          AND         #seven,D3
0000120E                           260          
0000120E  4241                     261          CLR         D1
00001210  3218                     262          MOVE.W      (A0)+, D1
00001212                           263          
00001212  43F9 00002643            264          LEA         hashTag, A1           ; Display space
00001218  103C 000E                265          MOVE.B      #14, D0             ; command for trap call to display message
0000121C  4E4F                     266          TRAP        #15                 ; trap call
0000121E                           267          
0000121E  103C 0003                268          MOVE.B      #3, D0
00001222  4E4F                     269          TRAP        #15
00001224                           270          
00001224  43F9 00002647            271          LEA         comma, A1           ; Display space
0000122A  103C 000E                272          MOVE.B      #14, D0             ; command for trap call to display message
0000122E  4E4F                     273          TRAP        #15                 ; trap call
00001230                           274          
00001230  4EB9 00001FD8            275          JSR         printEA
00001236                           276          
00001236  43F9 0000263C            277          LEA         newLine, A1           ; Display space
0000123C  103C 000E                278          MOVE.B      #14, D0             ; command for trap call to display message
00001240  4E4F                     279          TRAP        #15                 ; trap call
00001242                           280          
00001242  6000 FDC8                281          BRA         LOOP
00001246                           282       
00001246  43F9 000026E0            283  opORIL  LEA         dispLong, A1        ; Display byte
0000124C  103C 000E                284          MOVE.B      #14, D0             ; command for trap call to display message
00001250  4E4F                     285          TRAP        #15                 ; trap call
00001252                           286          
00001252  43F9 00002640            287          LEA         space, A1           ; Display space
00001258  103C 000E                288          MOVE.B      #14, D0             ; command for trap call to display message
0000125C  4E4F                     289          TRAP        #15                 ; trap call
0000125E                           290          
0000125E  4242                     291          CLR         D2
00001260  1401                     292          MOVE.B      D1,D2
00001262  E642                     293          ASR         #three,D2
00001264  C47C 0007                294          AND         #seven,D2
00001268  4243                     295          CLR         D3        
0000126A  1601                     296          MOVE.B      D1,D3
0000126C  C67C 0007                297          AND         #seven,D3
00001270                           298          
00001270  4241                     299          CLR         D1
00001272  2218                     300          MOVE.L      (A0)+, D1
00001274                           301          
00001274  43F9 00002643            302          LEA         hashTag, A1           ; Display space
0000127A  103C 000E                303          MOVE.B      #14, D0             ; command for trap call to display message
0000127E  4E4F                     304          TRAP        #15                 ; trap call
00001280                           305          
00001280  103C 0003                306          MOVE.B      #3, D0
00001284  4E4F                     307          TRAP        #15
00001286                           308          
00001286  43F9 00002647            309          LEA         comma, A1           ; Display space
0000128C  103C 000E                310          MOVE.B      #14, D0             ; command for trap call to display message
00001290  4E4F                     311          TRAP        #15                 ; trap call
00001292                           312          
00001292  4EB9 00001FD8            313          JSR         printEA
00001298                           314          
00001298  43F9 0000263C            315          LEA         newLine, A1           ; Display space
0000129E  103C 000E                316          MOVE.B      #14, D0             ; command for trap call to display message
000012A2  4E4F                     317          TRAP        #15                 ; trap call
000012A4                           318          
000012A4  6000 FD66                319          BRA         LOOP
000012A8                           320           
000012A8  43F9 0000265C            321  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000012AE  103C 000E                322          MOVE.B      #14, D0             ; command for trap call to display message
000012B2  4E4F                     323          TRAP        #15                 ; trap call
000012B4                           324                  
000012B4  1218                     325          MOVE.B      (A0)+, D1
000012B6  1401                     326          MOVE.B      D1,D2               ; copy data over
000012B8  EC42                     327          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000012BA  B43C 0000                328          CMP.B       #zero,D2
000012BE  6700 0034                329          BEQ         opCMPIB
000012C2  B43C 0001                330          CMP.B       #one,D2
000012C6  6700 008E                331          BEQ         opCMPIW
000012CA  B43C 0002                332          CMP.B       #two,D2
000012CE  6700 00E8                333          BEQ         opCMPIL
000012D2                           334          
000012D2  1401                     335          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000012D4  E542                     336          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
000012D6  1802                     337          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
000012D8  4242                     338          CLR         D2                  ; Clear out data register
000012DA  1404                     339          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
000012DC  EA42                     340          ASR         #five,D2            ; Shift the register out to get just the mode
000012DE  1802                     341          MOVE.B      D2,D4               ; Store mode into D4
000012E0  4242                     342          CLR         D2
000012E2                           343          
000012E2  1401                     344          MOVE.B      D1,D2               ; Getting the EA register
000012E4  EB42                     345          ASL         #five,D2
000012E6  1A02                     346          MOVE.B      D2,D5               ; Move just the register into D5
000012E8  4242                     347          CLR         D2                  ; Clearing D2 to put data back
000012EA  1405                     348          MOVE.B      D5,D2               ; Putting back the register
000012EC  EA42                     349          ASR         #five,D2            ; Shifting bits in order to read the register
000012EE  1A02                     350          MOVE.B      D2,D5               ; Store register into D5
000012F0                           351          
000012F0  6000 FD1A                352          BRA         LOOP                ; go back to the loop
000012F4                           353  
000012F4  43F9 000026DA            354  opCMPIB LEA         dispByte, A1        ; Display byte
000012FA  103C 000E                355          MOVE.B      #14, D0             ; command for trap call to display message
000012FE  4E4F                     356          TRAP        #15                 ; trap call
00001300                           357          
00001300  43F9 00002640            358          LEA         space, A1           ; Display space
00001306  103C 000E                359          MOVE.B      #14, D0             ; command for trap call to display message
0000130A  4E4F                     360          TRAP        #15                 ; trap call
0000130C                           361          
0000130C  4242                     362          CLR         D2
0000130E  1401                     363          MOVE.B      D1,D2
00001310  E642                     364          ASR         #three,D2
00001312  C47C 0007                365          AND         #seven,D2
00001316  4243                     366          CLR         D3        
00001318  1601                     367          MOVE.B      D1,D3
0000131A  C67C 0007                368          AND         #seven,D3
0000131E                           369          
0000131E  4241                     370          CLR         D1
00001320  3218                     371          MOVE.W      (A0)+, D1
00001322                           372          
00001322  43F9 00002643            373          LEA         hashTag, A1           ; Display space
00001328  103C 000E                374          MOVE.B      #14, D0             ; command for trap call to display message
0000132C  4E4F                     375          TRAP        #15                 ; trap call
0000132E                           376          
0000132E  103C 0003                377          MOVE.B      #3, D0
00001332  4E4F                     378          TRAP        #15
00001334                           379          
00001334  43F9 00002647            380          LEA         comma, A1           ; Display space
0000133A  103C 000E                381          MOVE.B      #14, D0             ; command for trap call to display message
0000133E  4E4F                     382          TRAP        #15                 ; trap call
00001340                           383          
00001340  4EB9 00001FD8            384          JSR         printEA
00001346                           385          
00001346  43F9 0000263C            386          LEA         newLine, A1           ; Display space
0000134C  103C 000E                387          MOVE.B      #14, D0             ; command for trap call to display message
00001350  4E4F                     388          TRAP        #15                 ; trap call
00001352                           389  
00001352  6000 FCB8                390          BRA         LOOP
00001356                           391  
00001356  43F9 000026DD            392  opCMPIW LEA         dispWord, A1        ; Display byte
0000135C  103C 000E                393          MOVE.B      #14, D0             ; command for trap call to display message
00001360  4E4F                     394          TRAP        #15                 ; trap call
00001362                           395          
00001362  43F9 00002640            396          LEA         space, A1           ; Display space
00001368  103C 000E                397          MOVE.B      #14, D0             ; command for trap call to display message
0000136C  4E4F                     398          TRAP        #15                 ; trap call
0000136E                           399          
0000136E  4242                     400          CLR         D2
00001370  1401                     401          MOVE.B      D1,D2
00001372  E642                     402          ASR         #three,D2
00001374  C47C 0007                403          AND         #seven,D2
00001378  4243                     404          CLR         D3        
0000137A  1601                     405          MOVE.B      D1,D3
0000137C  C67C 0007                406          AND         #seven,D3
00001380                           407          
00001380  4241                     408          CLR         D1
00001382  3218                     409          MOVE.W      (A0)+, D1
00001384                           410          
00001384  43F9 00002643            411          LEA         hashTag, A1           ; Display space
0000138A  103C 000E                412          MOVE.B      #14, D0             ; command for trap call to display message
0000138E  4E4F                     413          TRAP        #15                 ; trap call
00001390                           414          
00001390  103C 0003                415          MOVE.B      #3, D0
00001394  4E4F                     416          TRAP        #15
00001396                           417          
00001396  43F9 00002647            418          LEA         comma, A1           ; Display space
0000139C  103C 000E                419          MOVE.B      #14, D0             ; command for trap call to display message
000013A0  4E4F                     420          TRAP        #15                 ; trap call
000013A2                           421          
000013A2  4EB9 00001FD8            422          JSR         printEA
000013A8                           423          
000013A8  43F9 0000263C            424          LEA         newLine, A1           ; Display space
000013AE  103C 000E                425          MOVE.B      #14, D0             ; command for trap call to display message
000013B2  4E4F                     426          TRAP        #15                 ; trap call
000013B4  6000 FC56                427          BRA         LOOP
000013B8                           428  
000013B8  43F9 000026E0            429  opCMPIL LEA         dispLong, A1        ; Display byte
000013BE  103C 000E                430          MOVE.B      #14, D0             ; command for trap call to display message
000013C2  4E4F                     431          TRAP        #15                 ; trap call
000013C4                           432          
000013C4  43F9 00002640            433          LEA         space, A1           ; Display space
000013CA  103C 000E                434          MOVE.B      #14, D0             ; command for trap call to display message
000013CE  4E4F                     435          TRAP        #15                 ; trap call
000013D0                           436          
000013D0  4242                     437          CLR         D2
000013D2  1401                     438          MOVE.B      D1,D2
000013D4  E642                     439          ASR         #three,D2
000013D6  C47C 0007                440          AND         #seven,D2
000013DA  4243                     441          CLR         D3        
000013DC  1601                     442          MOVE.B      D1,D3
000013DE  C67C 0007                443          AND         #seven,D3
000013E2                           444          
000013E2  4241                     445          CLR         D1
000013E4  3218                     446          MOVE.W      (A0)+, D1
000013E6                           447          
000013E6  43F9 00002643            448          LEA         hashTag, A1           ; Display space
000013EC  103C 000E                449          MOVE.B      #14, D0             ; command for trap call to display message
000013F0  4E4F                     450          TRAP        #15                 ; trap call
000013F2                           451          
000013F2  103C 0003                452          MOVE.B      #3, D0
000013F6  4E4F                     453          TRAP        #15
000013F8                           454          
000013F8  43F9 00002647            455          LEA         comma, A1           ; Display space
000013FE  103C 000E                456          MOVE.B      #14, D0             ; command for trap call to display message
00001402  4E4F                     457          TRAP        #15                 ; trap call
00001404                           458          
00001404  4EB9 00001FD8            459          JSR         printEA
0000140A                           460          
0000140A  43F9 0000263C            461          LEA         newLine, A1           ; Display space
00001410  103C 000E                462          MOVE.B      #14, D0             ; command for trap call to display message
00001414  4E4F                     463          TRAP        #15                 ; trap call
00001416                           464          
00001416  6000 FBF4                465          BRA         LOOP
0000141A                           466  
0000141A  43F9 00002661            467  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001420  103C 000E                468                  MOVE.B      #14, D0             ; command for trap call to display message
00001424  4E4F                     469                  TRAP        #15                 ; trap call
00001426                           470  
00001426  43F9 00002640            471                  LEA         space, A1           ; Display space
0000142C  103C 000E                472                  MOVE.B      #14, D0             ; command for trap call to display message
00001430  4E4F                     473                  TRAP        #15                 ; trap call
00001432                           474                  
00001432  4242                     475                  CLR         D2
00001434  1218                     476                  MOVE.B      (A0)+, D1
00001436  1401                     477                  MOVE.B      D1,D2               ; copy data over
00001438  E642                     478                  ASR         #three,D2           ; Shift to the right to remove register
0000143A  C47C 0007                479                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
0000143E                           480                  
0000143E  4243                     481                  CLR         D3                  ; Clear D3 so we can move D1 in
00001440  1601                     482                  MOVE.B      D1,D3               ; Move othr byte in
00001442  C67C 0007                483                  AND         #seven,D3           ; Set everything besides register to 0
00001446                           484                  
00001446  4241                     485                  CLR         D1
00001448  3218                     486                  MOVE.W      (A0)+, D1
0000144A                           487                 
0000144A                           488                  
0000144A  43F9 00002643            489                  LEA         hashTag, A1           ; Display space
00001450  103C 000E                490                  MOVE.B      #14, D0             ; command for trap call to display message
00001454  4E4F                     491                  TRAP        #15                 ; trap call
00001456                           492          
00001456  103C 0003                493                  MOVE.B      #3, D0
0000145A  4E4F                     494                  TRAP        #15
0000145C                           495          
0000145C  43F9 00002647            496                  LEA         comma, A1           ; Display space
00001462  103C 000E                497                  MOVE.B      #14, D0             ; command for trap call to display message
00001466  4E4F                     498                  TRAP        #15                 ; trap call
00001468                           499                  
00001468  4EB9 00001FD8            500                  JSR         printEA
0000146E                           501          
0000146E  43F9 0000263C            502                  LEA         newLine, A1           ; Display space
00001474  103C 000E                503                  MOVE.B      #14, D0             ; command for trap call to display message
00001478  4E4F                     504                  TRAP        #15                 ; trap call
0000147A                           505                  
0000147A                           506                  
0000147A  6000 FB90                507                  BRA         LOOP                
0000147E                           508          
0000147E                           509  opDynBCLR       
0000147E  4241                     510                  CLR         D1
00001480  1218                     511                  MOVE.B      (A0)+,D1            ; Copy second byte in
00001482  1601                     512                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
00001484  E243                     513                  ASR         #one,D3             ; Shift register over to the end
00001486  C67C 0007                514                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
0000148A                           515                  
0000148A  1401                     516                  MOVE.B      D1,D2
0000148C  EC42                     517                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
0000148E  B47C 0002                518                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
00001492  6600 11A4                519                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
00001496                           520  
00001496                           521                  
00001496  43F9 00002661            522                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
0000149C  103C 000E                523                  MOVE.B      #14, D0             ; command for trap call to display message
000014A0  4E4F                     524                  TRAP        #15                 ; trap call  
000014A2                           525                  
000014A2  43F9 00002640            526                  LEA         space, A1           ; Display space
000014A8  103C 000E                527                  MOVE.B      #14, D0             ; command for trap call to display message
000014AC  4E4F                     528                  TRAP        #15                 ; trap call
000014AE                           529                  
000014AE  143C 0000                530                  MOVE.B      #zero,D2                
000014B2  4EB9 00001FD8            531                  JSR         printEA
000014B8                           532                  
000014B8  43F9 00002647            533                  LEA         comma, A1           ; Display space
000014BE  103C 000E                534                  MOVE.B      #14, D0             ; command for trap call to display message
000014C2  4E4F                     535                  TRAP        #15                 ; trap call
000014C4                           536                  
000014C4  4242                     537                  CLR         D2
000014C6  1401                     538                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000014C8  E642                     539                  ASR         #three,D2           ; Remove/shift the register out
000014CA  C47C 0007                540                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000014CE                           541                  
000014CE  4243                     542                  CLR         D3                  ; Clearing D3 to avoid mashing data
000014D0  1601                     543                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000014D2  C67C 0007                544                  AND         #seven,D3           ; Change all bits except for register bits to 0
000014D6                           545                  
000014D6                           546  
000014D6  4EB9 00001FD8            547                  JSR         printEA
000014DC                           548          
000014DC  43F9 0000263C            549                  LEA         newLine, A1           ; Display space
000014E2  103C 000E                550                  MOVE.B      #14, D0             ; command for trap call to display message
000014E6  4E4F                     551                  TRAP        #15                 ; trap call            
000014E8                           552  
000014E8                           553  
000014E8  6000 FB22                554                  BRA         LOOP                ; go back to the loop
000014EC                           555   
000014EC                           556  opMOVEB 
000014EC  43F9 00002666            557          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
000014F2  103C 000E                558          MOVE.B      #14, D0             ; command for trap call to display message
000014F6  4E4F                     559          TRAP        #15                 ; trap call
000014F8  43F9 000026DA            560          LEA         dispByte, A1        ; display byte
000014FE  103C 000E                561          MOVE.B      #14, D0             ; command for trap call to display message
00001502  4E4F                     562          TRAP        #15                 ; trap call
00001504  43F9 00002640            563          LEA         space, A1           ; create spaces
0000150A  103C 000E                564          MOVE.B      #14, D0             ; command for trap call to display message
0000150E  4E4F                     565          TRAP        #15                 ; trap call
00001510                           566          
00001510                           567          
00001510  4245                     568          CLR         D5                  ; Clear D5
00001512  1A01                     569          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001514  E245                     570          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001516  CA7C 0007                571          AND         #seven,D5
0000151A                           572          
0000151A  4244                     573          CLR         D4                  ; Clear out D4
0000151C  1801                     574          MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000151E  C87C 0001                575          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001522                           576          
00001522  4241                     577          CLR          D1
00001524  4242                     578          CLR          D2
00001526  1218                     579          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001528  1401                     580          MOVE.B      D1,D2
0000152A  EC42                     581          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000152C  D842                     582          ADD         D2,D4               ; Adds the remaining bits to D4
0000152E                           583          
0000152E  4242                     584          CLR         D2
00001530  1401                     585          MOVE.B      D1,D2               ; Copy new byte over to D2
00001532  E642                     586          ASR         #three,D2           ; Shift source register out
00001534  C47C 0007                587          AND         #seven,D2           ; Set everything to 0 except for the mode
00001538                           588          
00001538  4243                     589          CLR         D3
0000153A  1601                     590          MOVE.B      D1,D3
0000153C  C67C 0007                591          AND         #seven,D3
00001540                           592          
00001540  4EB9 00001FD8            593          JSR         printEA
00001546                           594          
00001546  43F9 00002647            595          LEA         comma, A1           ; Display space
0000154C  103C 000E                596          MOVE.B      #14, D0             ; command for trap call to display message
00001550  4E4F                     597          TRAP        #15                 ; trap call
00001552                           598          
00001552  4242                     599          CLR         D2
00001554  4243                     600          CLR         D3
00001556  1404                     601          MOVE.B      D4,D2
00001558  1605                     602          MOVE.B      D5,D3
0000155A                           603          
0000155A  4EB9 00001FD8            604          JSR         printEA
00001560                           605          
00001560                           606          
00001560  43F9 0000263C            607          LEA         newLine, A1           ; Display space
00001566  103C 000E                608          MOVE.B      #14, D0             ; command for trap call to display message
0000156A  4E4F                     609          TRAP        #15                 ; trap call            
0000156C                           610  
0000156C                           611  
0000156C  6000 FA9E                612          BRA         LOOP                ; go back to the loop
00001570                           613          
00001570                           614  opMOVEL     
00001570                           615          
00001570  4245                     616              CLR         D5                  ; Clear D5
00001572  1A01                     617              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001574  E245                     618              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001576  CA7C 0007                619              AND         #seven,D5
0000157A                           620          
0000157A  4244                     621              CLR         D4                  ; Clear out D4
0000157C  1801                     622              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000157E  C87C 0001                623              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001582                           624          
00001582  4241                     625              CLR          D1
00001584  4242                     626              CLR          D2
00001586  1218                     627              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001588  1401                     628              MOVE.B      D1,D2
0000158A  EC42                     629              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000158C  D842                     630              ADD         D2,D4               ; Adds the remaining bits to D4
0000158E                           631          
0000158E  B87C 0001                632              CMP         #one,D4             ; Check if it is MOVEA
00001592  6700 0070                633              BEQ         opMOVEAL            ; If it is, branch off
00001596                           634              
00001596  43F9 00002666            635              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
0000159C  103C 000E                636              MOVE.B      #14, D0             ; command for trap call to display message
000015A0  4E4F                     637              TRAP        #15                 ; trap call  
000015A2                           638              
000015A2                           639              
000015A2  43F9 000026E0            640              LEA         dispLong,A1
000015A8  103C 000E                641              MOVE.B      #14, D0             ; command for trap call to display message
000015AC  4E4F                     642              TRAP        #15                 ; trap call
000015AE                           643              
000015AE  43F9 00002640            644              LEA         space, A1           ; create spaces
000015B4  103C 000E                645              MOVE.B      #14, D0             ; command for trap call to display message
000015B8  4E4F                     646              TRAP        #15                 ; trap call
000015BA                           647          
000015BA  4242                     648              CLR         D2
000015BC  1401                     649              MOVE.B      D1,D2               ; Copy new byte over to D2
000015BE  E642                     650              ASR         #three,D2           ; Shift source register out
000015C0  C47C 0007                651              AND         #seven,D2           ; Set everything to 0 except for the mode
000015C4                           652          
000015C4  4243                     653              CLR         D3
000015C6  1601                     654              MOVE.B      D1,D3
000015C8  C67C 0007                655              AND         #seven,D3
000015CC                           656              
000015CC  4246                     657              CLR         D6
000015CE  1C3C 0001                658              MOVE.B      #1,D6
000015D2  4EB9 00001FD8            659              JSR         printEA
000015D8  4246                     660              CLR         D6
000015DA                           661              
000015DA  43F9 00002647            662              LEA         comma, A1           ; Display comma
000015E0  103C 000E                663              MOVE.B      #14, D0             ; command for trap call to display message
000015E4  4E4F                     664              TRAP        #15                 ; trap call
000015E6                           665          
000015E6  4242                     666              CLR         D2
000015E8  4243                     667              CLR         D3
000015EA  1404                     668              MOVE.B      D4,D2
000015EC  1605                     669              MOVE.B      D5,D3
000015EE                           670              
000015EE                           671  
000015EE                           672              
000015EE  4EB9 00001FD8            673              JSR         printEA
000015F4                           674          
000015F4                           675          
000015F4  43F9 0000263C            676              LEA         newLine, A1           ; Display space
000015FA  103C 000E                677              MOVE.B      #14, D0             ; command for trap call to display message
000015FE  4E4F                     678              TRAP        #15                 ; trap call            
00001600                           679  
00001600                           680  
00001600  6000 FA0A                681              BRA         LOOP                ; go back to the loop
00001604                           682              
00001604                           683  opMOVEAL
00001604                           684  
00001604  43F9 0000266B            685              LEA         MOVEAmatch,A1
0000160A  103C 000E                686              MOVE.B      #14, D0             ; command for trap call to display message
0000160E  4E4F                     687              TRAP        #15                 ; trap call
00001610                           688              
00001610  43F9 000026E0            689              LEA         dispLong,A1
00001616  103C 000E                690              MOVE.B      #14, D0             ; command for trap call to display message
0000161A  4E4F                     691              TRAP        #15                 ; trap call
0000161C                           692              
0000161C                           693  
0000161C  43F9 00002640            694              LEA         space, A1           ; create spaces
00001622  103C 000E                695              MOVE.B      #14, D0             ; command for trap call to display message
00001626  4E4F                     696              TRAP        #15                 ; trap call
00001628                           697              
00001628  4242                     698              CLR         D2
0000162A  1401                     699              MOVE.B      D1,D2               ; Copy new byte over to D2
0000162C  E642                     700              ASR         #three,D2           ; Shift source register out
0000162E  C47C 0007                701              AND         #seven,D2           ; Set everything to 0 except for the mode
00001632                           702          
00001632  4243                     703              CLR         D3
00001634  1601                     704              MOVE.B      D1,D3
00001636  C67C 0007                705              AND         #seven,D3
0000163A                           706              
0000163A  4241                     707              CLR         D1                  ; Clear D1
0000163C                           708              
0000163C                           709              
0000163C  4EB9 00001FD8            710              JSR         printEA
00001642                           711              
00001642  43F9 00002647            712              LEA         comma, A1           ; Display comma
00001648  103C 000E                713              MOVE.B      #14, D0             ; command for trap call to display message
0000164C  4E4F                     714              TRAP        #15                 ; trap call
0000164E                           715  
0000164E  4242                     716              CLR         D2
00001650  4243                     717              CLR         D3
00001652  1404                     718              MOVE.B      D4,D2
00001654  1605                     719              MOVE.B      D5,D3
00001656                           720          
00001656  4EB9 00001FD8            721              JSR         printEA
0000165C                           722          
0000165C                           723          
0000165C  43F9 0000263C            724              LEA         newLine, A1           ; Display space
00001662  103C 000E                725              MOVE.B      #14, D0             ; command for trap call to display message
00001666  4E4F                     726              TRAP        #15                 ; trap call            
00001668                           727  
00001668                           728  
00001668  6000 F9A2                729              BRA         LOOP                ; go back to the loop
0000166C                           730  
0000166C                           731  opMOVEW
0000166C                           732          
0000166C  4245                     733              CLR         D5                  ; Clear D5
0000166E  1A01                     734              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001670  E245                     735              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001672  CA7C 0007                736              AND         #seven,D5
00001676                           737          
00001676  4244                     738              CLR         D4                  ; Clear out D4
00001678  1801                     739              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000167A  C87C 0001                740              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000167E                           741          
0000167E  4241                     742              CLR          D1
00001680  4242                     743              CLR          D2
00001682  1218                     744              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001684  1401                     745              MOVE.B      D1,D2
00001686  EC42                     746              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001688  D842                     747              ADD         D2,D4               ; Adds the remaining bits to D4
0000168A                           748          
0000168A  B87C 0001                749              CMP         #one,D4             ; Check if it is MOVEA
0000168E  6700 006A                750              BEQ         opMOVEAW            ; If it is, branch off
00001692                           751              
00001692  43F9 00002666            752              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001698  103C 000E                753              MOVE.B      #14, D0             ; command for trap call to display message
0000169C  4E4F                     754              TRAP        #15                 ; trap call  
0000169E                           755              
0000169E  43F9 000026DD            756              LEA         dispWord,A1
000016A4  103C 000E                757              MOVE.B      #14, D0             ; command for trap call to display message
000016A8  4E4F                     758              TRAP        #15                 ; trap call
000016AA                           759              
000016AA  43F9 00002640            760              LEA         space, A1           ; create spaces
000016B0  103C 000E                761              MOVE.B      #14, D0             ; command for trap call to display message
000016B4  4E4F                     762              TRAP        #15                 ; trap call
000016B6                           763          
000016B6  4242                     764              CLR         D2
000016B8  1401                     765              MOVE.B      D1,D2               ; Copy new byte over to D2
000016BA  E642                     766              ASR         #three,D2           ; Shift source register out
000016BC  C47C 0007                767              AND         #seven,D2           ; Set everything to 0 except for the mode
000016C0                           768          
000016C0  4243                     769              CLR         D3
000016C2  1601                     770              MOVE.B      D1,D3
000016C4  C67C 0007                771              AND         #seven,D3
000016C8                           772              
000016C8  4241                     773              CLR         D1                  ; Clear D1
000016CA                           774              
000016CA  4EB9 00001FD8            775              JSR         printEA
000016D0                           776              
000016D0  43F9 00002647            777              LEA         comma, A1           ; Display comma
000016D6  103C 000E                778              MOVE.B      #14, D0             ; command for trap call to display message
000016DA  4E4F                     779              TRAP        #15                 ; trap call
000016DC                           780          
000016DC  4242                     781              CLR         D2
000016DE  4243                     782              CLR         D3
000016E0  1404                     783              MOVE.B      D4,D2
000016E2  1605                     784              MOVE.B      D5,D3
000016E4                           785              
000016E4                           786  
000016E4                           787              
000016E4  4EB9 00001FD8            788              JSR         printEA
000016EA                           789          
000016EA                           790          
000016EA  43F9 0000263C            791              LEA         newLine, A1           ; Display space
000016F0  103C 000E                792              MOVE.B      #14, D0             ; command for trap call to display message
000016F4  4E4F                     793              TRAP        #15                 ; trap call            
000016F6                           794  
000016F6                           795  
000016F6  6000 F914                796              BRA         LOOP                ; go back to the loop
000016FA                           797  opMOVEAW  
000016FA  43F9 0000266B            798              LEA         MOVEAmatch,A1
00001700  103C 000E                799              MOVE.B      #14, D0             ; command for trap call to display message
00001704  4E4F                     800              TRAP        #15                 ; trap call
00001706                           801              
00001706  43F9 000026DD            802              LEA         dispWord,A1
0000170C  103C 000E                803              MOVE.B      #14, D0             ; command for trap call to display message
00001710  4E4F                     804              TRAP        #15                 ; trap call
00001712                           805              
00001712                           806  
00001712  43F9 00002640            807              LEA         space, A1           ; create spaces
00001718  103C 000E                808              MOVE.B      #14, D0             ; command for trap call to display message
0000171C  4E4F                     809              TRAP        #15                 ; trap call
0000171E                           810              
0000171E  4242                     811              CLR         D2
00001720  1401                     812              MOVE.B      D1,D2               ; Copy new byte over to D2
00001722  E642                     813              ASR         #three,D2           ; Shift source register out
00001724  C47C 0007                814              AND         #seven,D2           ; Set everything to 0 except for the mode
00001728                           815          
00001728  4243                     816              CLR         D3
0000172A  1601                     817              MOVE.B      D1,D3
0000172C  C67C 0007                818              AND         #seven,D3
00001730                           819              
00001730  4241                     820              CLR         D1                  ; Clear D1
00001732                           821              
00001732                           822              
00001732  4EB9 00001FD8            823              JSR         printEA
00001738                           824              
00001738  43F9 00002647            825              LEA         comma, A1           ; Display comma
0000173E  103C 000E                826              MOVE.B      #14, D0             ; command for trap call to display message
00001742  4E4F                     827              TRAP        #15                 ; trap call
00001744                           828  
00001744  4242                     829              CLR         D2
00001746  4243                     830              CLR         D3
00001748  1404                     831              MOVE.B      D4,D2
0000174A  1605                     832              MOVE.B      D5,D3
0000174C                           833          
0000174C  4EB9 00001FD8            834              JSR         printEA
00001752                           835          
00001752                           836          
00001752  43F9 0000263C            837              LEA         newLine, A1           ; Display space
00001758  103C 000E                838              MOVE.B      #14, D0             ; command for trap call to display message
0000175C  4E4F                     839              TRAP        #15                 ; trap call            
0000175E                           840  
0000175E                           841  
0000175E  6000 F8AC                842              BRA         LOOP                ; go back to the loop
00001762                           843  
00001762                           844  opNEG   
00001762  43F9 00002671            845              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001768  103C 000E                846              MOVE.B      #14, D0             ; command for trap call to display message
0000176C  4E4F                     847              TRAP        #15                 ; trap call
0000176E                           848          
0000176E                           849          
0000176E  1218                     850              MOVE.B      (A0)+, D1
00001770  1401                     851              MOVE.B      D1,D2               ; copy data over
00001772  EC42                     852              ASR         #six,D2
00001774                           853              
00001774  B47C 0000                854              CMP         #zero,D2
00001778  6700 0016                855              BEQ         opNEGB
0000177C  B47C 0001                856              CMP         #one,D2
00001780  6700 008E                857              BEQ         opNEGW
00001784  B47C 0002                858              CMP         #two,D2
00001788  6700 0046                859              BEQ         opNEGL
0000178C  6000 0E94                860              BRA         invalid
00001790                           861  opNEGB
00001790                           862  
00001790  43F9 000026DA            863              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001796  103C 000E                864              MOVE.B      #14, D0             ; command for trap call to display message
0000179A  4E4F                     865              TRAP        #15                 ; trap call
0000179C                           866          
0000179C  43F9 00002640            867              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000017A2  103C 000E                868              MOVE.B      #14, D0             ; command for trap call to display message
000017A6  4E4F                     869              TRAP        #15                 ; trap call
000017A8                           870          
000017A8  4242                     871              CLR         D2                  ; Clear Data register 2
000017AA  3401                     872              MOVE        D1,D2               ; Move byte into D2
000017AC  E642                     873              ASR         #three,D2           ; Shift mode into place and moves mode into place
000017AE  C47C 0007                874              AND         #seven,D2           ; Stores mode
000017B2                           875              
000017B2  4243                     876              CLR         D3
000017B4  3601                     877              MOVE        D1,D3
000017B6  C67C 0007                878              AND         #seven,D3
000017BA                           879          
000017BA  4EB9 00001FD8            880              JSR         printEA
000017C0                           881                  
000017C0  43F9 0000263C            882              LEA         newLine, A1           ; Display space
000017C6  103C 000E                883              MOVE.B      #14, D0             ; command for trap call to display message
000017CA  4E4F                     884              TRAP        #15                 ; trap call  
000017CC                           885          
000017CC  6000 F83E                886              BRA         LOOP
000017D0                           887                  
000017D0                           888  
000017D0                           889  opNEGL
000017D0                           890  
000017D0  43F9 000026E0            891              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
000017D6  103C 000E                892              MOVE.B      #14, D0             ; command for trap call to display message
000017DA  4E4F                     893              TRAP        #15                 ; trap call
000017DC                           894  
000017DC  43F9 00002640            895              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000017E2  103C 000E                896              MOVE.B      #14, D0             ; command for trap call to display message
000017E6  4E4F                     897              TRAP        #15                 ; trap call
000017E8                           898                  
000017E8  4242                     899              CLR         D2                  ; Clear Data register 2
000017EA  3401                     900              MOVE        D1,D2               ; Move byte into D2
000017EC  E642                     901              ASR         #three,D2           ; Shift mode into place and moves mode into place
000017EE  C47C 0007                902              AND         #seven,D2           ; Stores mode
000017F2                           903          
000017F2  4243                     904              CLR         D3
000017F4  3601                     905              MOVE        D1,D3
000017F6  C67C 0007                906              AND         #seven,D3
000017FA                           907          
000017FA  4EB9 00001FD8            908              JSR         printEA
00001800                           909                      
00001800  43F9 0000263C            910              LEA         newLine, A1         ; Display space
00001806  103C 000E                911              MOVE.B      #14, D0             ; command for trap call to display message
0000180A  4E4F                     912              TRAP        #15                 ; trap call  
0000180C                           913          
0000180C  6000 F7FE                914              BRA         LOOP
00001810                           915          
00001810                           916  
00001810                           917  opNEGW
00001810                           918  
00001810  43F9 000026DD            919              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001816  103C 000E                920              MOVE.B      #14, D0             ; command for trap call to display message
0000181A  4E4F                     921              TRAP        #15                 ; trap call
0000181C                           922          
0000181C  43F9 00002640            923              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001822  103C 000E                924              MOVE.B      #14, D0             ; command for trap call to display message
00001826  4E4F                     925              TRAP        #15                 ; trap call        
00001828                           926                  
00001828  4242                     927              CLR         D2                  ; Clear Data register 2
0000182A  3401                     928              MOVE        D1,D2               ; Move byte into D2
0000182C  E642                     929              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000182E  C47C 0007                930              AND         #seven,D2           ; Stores mode
00001832                           931          
00001832  4243                     932              CLR         D3
00001834  3601                     933              MOVE        D1,D3
00001836  C67C 0007                934              AND         #seven,D3
0000183A                           935          
0000183A  4EB9 00001FD8            936              JSR         printEA
00001840                           937              
00001840  43F9 0000263C            938              LEA         newLine, A1           ; Display space
00001846  103C 000E                939              MOVE.B      #14, D0             ; command for trap call to display message
0000184A  4E4F                     940              TRAP        #15                 ; trap call  
0000184C                           941          
0000184C  6000 F7BE                942              BRA         LOOP
00001850                           943  
00001850                           944  opRTSJSR
00001850                           945          
00001850  1218                     946              MOVE.B      (A0)+, D1
00001852                           947              
00001852  1401                     948              MOVE.B      D1,D2               ; copy data over
00001854  B47C 0075                949              CMP         #117,D2
00001858  6700 0050                950              BEQ         opRTS
0000185C                           951              
0000185C  EC42                     952              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
0000185E  B47C 0002                953              CMP         #two,D2             ; Checking if it is JSR
00001862  6700 0006                954              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001866                           955  
00001866  6000 0DBA                956              BRA         invalid
0000186A                           957  
0000186A                           958  opJSR
0000186A                           959                        
0000186A  43F9 00002679            960              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001870  103C 000E                961              MOVE.B      #14, D0             ; command for trap call to display message
00001874  4E4F                     962              TRAP        #15                 ; trap call
00001876                           963              
00001876  43F9 00002640            964              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000187C  103C 000E                965              MOVE.B      #14, D0             ; command for trap call to display message
00001880  4E4F                     966              TRAP        #15                 ; trap call
00001882                           967              
00001882  4242                     968              CLR         D2
00001884  4243                     969              CLR         D3
00001886                           970              
00001886  1401                     971              MOVE.B      D1,D2
00001888  E642                     972              ASR         #three,D2
0000188A  C47C 0007                973              AND         #seven,D2
0000188E                           974              
0000188E  1601                     975              MOVE.B      D1,D3
00001890  C67C 0007                976              AND         #seven,D3
00001894                           977              
00001894  4EB9 00001FD8            978              JSR         printEA
0000189A                           979              
0000189A  43F9 0000263C            980              LEA         newLine, A1           ; Display space
000018A0  103C 000E                981              MOVE.B      #14, D0             ; command for trap call to display message
000018A4  4E4F                     982              TRAP        #15                 ; trap call  
000018A6                           983              
000018A6  6000 F764                984              BRA         loop            
000018AA                           985  opRTS
000018AA                           986  
000018AA  43F9 00002675            987              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
000018B0  103C 000E                988              MOVE.B      #14, D0             ; command for trap call to display message
000018B4  4E4F                     989              TRAP        #15                 ; trap call
000018B6                           990              
000018B6  43F9 0000263C            991              LEA         newLine, A1           ; Display space
000018BC  103C 000E                992              MOVE.B      #14, D0             ; command for trap call to display message
000018C0  4E4F                     993              TRAP        #15                 ; trap call 
000018C2                           994              
000018C2  6000 F748                995              BRA         loop
000018C6                           996  
000018C6                           997  opMOVEMLEA
000018C6  4242                     998              CLR         D2                  ; Clear D2
000018C8  1401                     999              MOVE.B      D1,D2               ; Copy byte over
000018CA  C47C 000F               1000              AND         #secNib,D2          ; Check only the second nibble
000018CE  B47C 000C               1001              CMP         #twelve,D2          ; Compare the second nibble to twelve
000018D2  6700 000E               1002              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
000018D6  B47C 0008               1003              CMP         #eight,D2           ; Compare the second nibble to eight
000018DA  6700 0006               1004              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
000018DE  6000 008C               1005              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
000018E2                          1006              
000018E2                          1007  opMOVEM            
000018E2  4246                    1008              CLR         D6                  ; Clearing D4 to store dr field
000018E4  1C01                    1009              MOVE.B      D1,D6               ; Moving byte to find dr field
000018E6  E446                    1010              ASR         #two,D6             ; Moving dr field to readable spot
000018E8  CC7C 0001               1011              AND         #one,D6             ; seting everything except dr to 0
000018EC                          1012  
000018EC  4241                    1013              CLR         D1  
000018EE  1218                    1014              MOVE.B      (A0)+, D1           ; Taking in next byte
000018F0                          1015              
000018F0  4245                    1016              CLR         D5
000018F2  1A01                    1017              MOVE.B      D1,D5               ; Using D6 to check if this is indeed MOVEM
000018F4  EE45                    1018              ASR         #seven,D5
000018F6  CA7C 0001               1019              AND         #one,D5
000018FA  BA7C 0001               1020              CMP         #one,D5             ; This bit should be one if this is MOVEM
000018FE  6600 0D22               1021              BNE         invalid             ; If this is not 1 then this is not moveM
00001902  4245                    1022              CLR         D5
00001904                          1023              
00001904  43F9 0000267D           1024              LEA         MOVEMMatch, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
0000190A  103C 000E               1025              MOVE.B      #14, D0             ; command for trap call to display message
0000190E  4E4F                    1026              TRAP        #15                 ; trap call
00001910                          1027              
00001910  4245                    1028              CLR         D5                  ; Clearing D5 to store size
00001912  1A01                    1029              MOVE.B      D1,D5               ; Moving byte that contains bit for size
00001914  EC45                    1030              ASR         #six,D5            ; Moving size bit to the very right to read
00001916  CA7C 0001               1031              AND         #one,D5             ; Isolating the one bit for size
0000191A                          1032              
0000191A  4242                    1033              CLR         D2                  ; Storing EA mode in D2
0000191C  1401                    1034              MOVE.B      D1,D2
0000191E  E642                    1035              ASR         #three,D2
00001920  C47C 0007               1036              AND         #seven,D2
00001924                          1037              
00001924  4243                    1038              CLR         D3                  ; Storing EA register into D3
00001926  1601                    1039              MOVE.B      D1,D3
00001928  C67C 0007               1040              AND         #seven,D3
0000192C                          1041              
0000192C  4EB9 00001AA0           1042              JSR         MOVEMBRA
00001932                          1043              
00001932  B47C 0003               1044              CMP         #three,D2
00001936  6700 0024               1045              BEQ         skipPrintEA
0000193A                          1046              
0000193A  43F9 00002647           1047              LEA         comma, A1           ; Display comma
00001940  103C 000E               1048              MOVE.B      #14, D0             ; command for trap call to display message
00001944  4E4F                    1049              TRAP        #15                 ; trap call
00001946                          1050              
00001946                          1051  
00001946  4EB9 00001FD8           1052              JSR         printEA
0000194C                          1053              
0000194C  43F9 0000263C           1054              LEA         newline, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001952  103C 000E               1055              MOVE.B      #14, D0             ; command for trap call to display message
00001956  4E4F                    1056              TRAP        #15                 ; trap call            
00001958                          1057  
00001958  6000 F6B2               1058              BRA         loop            
0000195C                          1059  
0000195C                          1060  skipPrintEA 
0000195C                          1061  
0000195C  43F9 0000263C           1062              LEA         newline, A1        
00001962  103C 000E               1063              MOVE.B      #14, D0             ; command for trap call to display message
00001966  4E4F                    1064              TRAP        #15                 ; trap call            
00001968                          1065  
00001968  6000 F6A2               1066              BRA         loop 
0000196C                          1067  opLEA
0000196C  4244                    1068              CLR         D4                  ; Clearing space for source register
0000196E  1801                    1069              MOVE.B      D1,D4               ; Moving byte to isolate register
00001970  E244                    1070              ASR         #one,D4
00001972  C87C 0007               1071              AND         #seven,D4           ; Isolated register
00001976                          1072  
00001976  4245                    1073              CLR         D5                  ; Clearing D5 to check if bits match LEA static bits
00001978  1A01                    1074              MOVE.B      D1,D5
0000197A  CA7C 0001               1075              AND         #one,D5
0000197E  E545                    1076              ASL         #two,D5
00001980                          1077              
00001980  1218                    1078              MOVE.B      (A0)+, D1           ; Taking in next byte
00001982                          1079              
00001982  1C01                    1080              MOVE.B      D1,D6
00001984  EC46                    1081              ASR         #six,D6
00001986  DA46                    1082              ADD         D6,D5
00001988  4246                    1083              CLR         D6
0000198A                          1084  
0000198A  BA7C 0007               1085              CMP         #seven,D5
0000198E  6600 0C92               1086              BNE         invalid   
00001992                          1087              
00001992  43F9 00002683           1088              LEA         LEAmatch, A1        ; we know that the opcode will be LEA, so load A1 to print message
00001998  103C 000E               1089              MOVE.B      #14, D0             ; command for trap call to display message
0000199C  4E4F                    1090              TRAP        #15                 ; trap call            
0000199E                          1091  
0000199E  43F9 00002640           1092              LEA         space, A1         ; we know that the opcode will be MOVEM, so load A1 to print message
000019A4  103C 000E               1093              MOVE.B      #14, D0             ; command for trap call to display message
000019A8  4E4F                    1094              TRAP        #15                 ; trap call            
000019AA                          1095              
000019AA  4242                    1096              CLR         D2
000019AC  1401                    1097              MOVE.B      D1,D2
000019AE  E642                    1098              ASR         #three,D2
000019B0  C47C 0007               1099              AND         #seven,D2
000019B4                          1100              
000019B4  4243                    1101              CLR         D3
000019B6  1601                    1102              MOVE.B      D1,D3
000019B8  C67C 0007               1103              AND         #seven,D3
000019BC                          1104              
000019BC  4EB9 00001FD8           1105              JSR         printEA
000019C2                          1106              
000019C2  43F9 00002647           1107              LEA         comma, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
000019C8  103C 000E               1108              MOVE.B      #14, D0             ; command for trap call to display message
000019CC  4E4F                    1109              TRAP        #15                 ; trap call            
000019CE                          1110              
000019CE                          1111              
000019CE  4243                    1112              CLR         D3
000019D0  1604                    1113              MOVE.B      D4,D3
000019D2  143C 0001               1114              MOVE.B      #one,D2
000019D6                          1115              
000019D6  4EB9 00001FD8           1116              JSR         printEA             ; Prints out source address
000019DC                          1117              
000019DC  43F9 0000263C           1118              LEA         newline, A1         ; Prints new line
000019E2  103C 000E               1119              MOVE.B      #14, D0             ; command for trap call to display message
000019E6  4E4F                    1120              TRAP        #15                 ; trap call
000019E8                          1121  
000019E8  6000 F622               1122              BRA         loop            
000019EC                          1123              
000019EC                          1124              
000019EC                          1125             
000019EC                          1126  
000019EC                          1127  
000019EC                          1128  opSUBQ      
000019EC  43F9 00002687           1129              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
000019F2  103C 000E               1130              MOVE.B      #14, D0             ; command for trap call to display message
000019F6  4E4F                    1131              TRAP        #15                 ; trap call
000019F8                          1132  
000019F8  43F9 0000268C           1133  opBRA       LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
000019FE  103C 000E               1134              MOVE.B      #14, D0             ; command for trap call to display message
00001A02  4E4F                    1135              TRAP        #15                 ; trap call
00001A04  43F9 00002640           1136              LEA         space, A1           ; create spaces
00001A0A  103C 000E               1137              MOVE.B      #14, D0             ; command for trap call to display message
00001A0E  4E4F                    1138              TRAP        #15                 ; trap call
00001A10                          1139  
00001A10  43F9 00002690           1140  opBCS       LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001A16  103C 000E               1141              MOVE.B      #14, D0             ; command for trap call to display message
00001A1A  4E4F                    1142              TRAP        #15                 ; trap call
00001A1C                          1143  
00001A1C  43F9 00002694           1144  opBVC       LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001A22  103C 000E               1145              MOVE.B      #14, D0             ; command for trap call to display message
00001A26  4E4F                    1146              TRAP        #15                 ; trap call
00001A28                          1147  
00001A28  43F9 00002698           1148  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001A2E  103C 000E               1149          MOVE.B      #14, D0             ; command for trap call to display message
00001A32  4E4F                    1150          TRAP        #15                 ; trap call
00001A34                          1151  
00001A34  43F9 0000269C           1152  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001A3A  103C 000E               1153          MOVE.B      #14, D0             ; command for trap call to display message
00001A3E  4E4F                    1154          TRAP        #15                 ; trap call
00001A40                          1155  
00001A40  43F9 000026A8           1156  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001A46  103C 000E               1157          MOVE.B      #14, D0             ; command for trap call to display message
00001A4A  4E4F                    1158          TRAP        #15                 ; trap call
00001A4C                          1159  
00001A4C  43F9 000026B4           1160  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001A52  103C 000E               1161          MOVE.B      #14, D0             ; command for trap call to display message
00001A56  4E4F                    1162          TRAP        #15                 ; trap call
00001A58                          1163  
00001A58  43F9 000026CE           1164  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001A5E  103C 000E               1165          MOVE.B      #14, D0             ; command for trap call to display message
00001A62  4E4F                    1166          TRAP        #15                 ; trap call
00001A64                          1167  
00001A64  43F9 000026CA           1168  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001A6A  103C 000E               1169          MOVE.B      #14, D0             ; command for trap call to display message
00001A6E  4E4F                    1170          TRAP        #15                 ; trap call
00001A70                          1171  
00001A70  43F9 000026C6           1172  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00001A76  103C 000E               1173          MOVE.B      #14, D0             ; command for trap call to display message
00001A7A  4E4F                    1174          TRAP        #15                 ; trap call
00001A7C                          1175  
00001A7C  43F9 000026C2           1176  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001A82  103C 000E               1177          MOVE.B      #14, D0             ; command for trap call to display message
00001A86  4E4F                    1178          TRAP        #15                 ; trap call
00001A88                          1179  
00001A88  43F9 000026D6           1180  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001A8E  103C 000E               1181          MOVE.B      #14, D0             ; command for trap call to display message
00001A92  4E4F                    1182          TRAP        #15                 ; trap call
00001A94                          1183  
00001A94                          1184  opROR   
00001A94  43F9 000026D2           1185          LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001A9A  103C 000E               1186          MOVE.B      #14, D0             ; command for trap call to display message
00001A9E  4E4F                    1187          TRAP        #15                 ; trap call
00001AA0                          1188  
00001AA0                          1189  
00001AA0  48E7 FF7E               1190  MOVEMBRA    MOVEM.L  D0-D7/A1-A6, -(SP)     ; Branches off depending on size bit
00001AA4  BA7C 0000               1191              CMP      #zero,D5
00001AA8  6700 000A               1192              BEQ      MOVEMW
00001AAC  BA7C 0001               1193              CMP      #one, D5
00001AB0  6700 001E               1194              BEQ      MOVEML
00001AB4                          1195              
00001AB4                          1196  MOVEMW     
00001AB4  43F9 000026DD           1197              LEA         dispWord, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001ABA  103C 000E               1198              MOVE.B      #14, D0             ; command for trap call to display message
00001ABE  4E4F                    1199              TRAP        #15                 ; trap call
00001AC0                          1200  
00001AC0  43F9 00002640           1201              LEA         space, A1           ; we know that the opcode will be ROR, so load A1 to print message
00001AC6  103C 000E               1202              MOVE.B      #14, D0             ; command for trap call to display message
00001ACA  4E4F                    1203              TRAP        #15                 ; trap call
00001ACC                          1204              
00001ACC  6000 001E               1205              BRA         CheckDR
00001AD0                          1206  
00001AD0                          1207  MOVEML   
00001AD0  43F9 000026E0           1208              LEA         dispLong, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001AD6  103C 000E               1209              MOVE.B      #14, D0             ; command for trap call to display message
00001ADA  4E4F                    1210              TRAP        #15                 ; trap call
00001ADC                          1211  
00001ADC  43F9 00002640           1212              LEA         space, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001AE2  103C 000E               1213              MOVE.B      #14, D0             ; command for trap call to display message
00001AE6  4E4F                    1214              TRAP        #15                 ; trap call
00001AE8                          1215           
00001AE8                          1216  
00001AE8  6000 0002               1217              BRA         CheckDR
00001AEC                          1218  
00001AEC                          1219  CheckDR     
00001AEC                          1220              
00001AEC                          1221                
00001AEC  3218                    1222              MOVE.W      (A0)+, D1           ; Taking in next word
00001AEE  BC7C 0000               1223              CMP         #zero,D6
00001AF2  6700 0036               1224              BEQ         printRegMem
00001AF6  BC7C 0001               1225              CMP         #one,D6
00001AFA  6700 0006               1226              BEQ         printStack
00001AFE  6000 0B22               1227              BRA         invalid
00001B02                          1228              
00001B02                          1229  printStack 
00001B02  43F9 00002653           1230              LEA         stack,A1
00001B08  103C 000E               1231              MOVE.B      #14, D0             ; command for trap call to display message
00001B0C  4E4F                    1232              TRAP        #15                 ; trap call
00001B0E                          1233  
00001B0E  43F9 0000264F           1234              LEA         inc,A1
00001B14  103C 000E               1235              MOVE.B      #14, D0             ; command for trap call to display message
00001B18  4E4F                    1236              TRAP        #15                 ; trap call
00001B1A                          1237              
00001B1A  43F9 00002647           1238              LEA         comma,A1
00001B20  103C 000E               1239              MOVE.B      #14, D0             ; command for trap call to display message
00001B24  4E4F                    1240              TRAP        #15                 ; trap call
00001B26                          1241              
00001B26                          1242              
00001B26  6000 0002               1243              BRA         printRegMem
00001B2A                          1244             
00001B2A                          1245  printRegMem 
00001B2A  4244                    1246              CLR         D4                  ; Using D4 to store predecrement mode addresses
00001B2C  1801                    1247              MOVE.B      D1,D4               ; Stores bits for D0-D7
00001B2E                          1248              
00001B2E  4245                    1249              CLR         D5
00001B30  1A01                    1250              MOVE.B      D1,D5
00001B32  CA7C 0001               1251              AND         #mask1,D5
00001B36  BA7C 0001               1252              CMP         #mask1,D5
00001B3A  6700 007A               1253              BEQ         DataReg0
00001B3E                          1254              
00001B3E  4245                    1255              CLR         D5
00001B40  1A01                    1256              MOVE.B      D1,D5
00001B42  CA7C 0002               1257              AND         #mask2,D5
00001B46  BA7C 0002               1258              CMP         #mask2,D5
00001B4A  6700 009A               1259              BEQ         DataReg1
00001B4E                          1260  
00001B4E  4245                    1261              CLR         D5
00001B50  1A01                    1262              MOVE.B      D1,D5
00001B52  CA7C 0004               1263              AND         #mask3,D5
00001B56  BA7C 0004               1264              CMP         #mask3,D5
00001B5A  6700 00CA               1265              BEQ         DataReg2            
00001B5E                          1266              
00001B5E  4245                    1267              CLR         D5
00001B60  1A01                    1268              MOVE.B      D1,D5
00001B62  CA7C 0008               1269              AND         #mask4,D5
00001B66  BA7C 0008               1270              CMP         #mask4,D5
00001B6A  6700 00FA               1271              BEQ         DataReg3            
00001B6E                          1272              
00001B6E  4245                    1273              CLR         D5
00001B70  1A01                    1274              MOVE.B      D1,D5
00001B72  CA7C 0010               1275              AND         #mask5,D5
00001B76  BA7C 0010               1276              CMP         #mask5,D5
00001B7A  6700 012A               1277              BEQ         DataReg4
00001B7E                          1278  
00001B7E  4245                    1279              CLR         D5
00001B80  1A01                    1280              MOVE.B      D1,D5
00001B82  CA7C 0020               1281              AND         #mask6,D5
00001B86  BA7C 0020               1282              CMP         #mask6,D5
00001B8A  6700 015A               1283              BEQ         DataReg5
00001B8E                          1284  
00001B8E  4245                    1285              CLR         D5
00001B90  1A01                    1286              MOVE.B      D1,D5
00001B92  CA7C 0040               1287              AND         #mask7,D5
00001B96  BA7C 0040               1288              CMP         #mask7,D5
00001B9A  6700 018A               1289              BEQ         DataReg6
00001B9E                          1290  
00001B9E  4245                    1291              CLR         D5
00001BA0  1A01                    1292              MOVE.B      D1,D5
00001BA2  CA7C 0080               1293              AND         #mask8,D5
00001BA6  BA7C 0080               1294              CMP         #mask8,D5
00001BAA  6700 01BA               1295              BEQ         DataReg7
00001BAE                          1296              
00001BAE  6000 0A72               1297              BRA         invalid
00001BB2  6000 0A6E               1298              BRA         invalid        
00001BB6                          1299              
00001BB6                          1300  DataReg0
00001BB6  43F9 00002700           1301              LEA         dispD0, A1          ; Output string D0
00001BBC  103C 000E               1302              MOVE.B      #14, D0             ; command for trap call to display message
00001BC0  4E4F                    1303              TRAP        #15                 ; trap call
00001BC2                          1304              
00001BC2  4245                    1305              CLR         D5
00001BC4  1A01                    1306              MOVE.B      D1,D5
00001BC6  CA7C 0002               1307              AND         #mask2,D5
00001BCA  BA7C 0002               1308              CMP         #mask2,D5
00001BCE  6700 0006               1309              BEQ         Reg0Cont
00001BD2  6000 01A2               1310              BRA         printMem
00001BD6                          1311  Reg0Cont        
00001BD6  43F9 0000264D           1312              LEA         dec, A1             ; Output -
00001BDC  103C 000E               1313              MOVE.B      #14, D0             ; command for trap call to display message
00001BE0  4E4F                    1314              TRAP        #15                 ; trap call        
00001BE2  6000 0002               1315              BRA         DataReg1
00001BE6                          1316  
00001BE6                          1317  DataReg1
00001BE6  4245                    1318              CLR         D5
00001BE8  1A01                    1319              MOVE.B      D1,D5
00001BEA  CA7C 0005               1320              AND         #maskA,D5
00001BEE  BA7C 0005               1321              CMP         #maskA,D5
00001BF2  6700 0032               1322              BEQ         DataReg2
00001BF6                          1323              
00001BF6  43F9 00002703           1324              LEA         dispD1, A1          ; Output string D0
00001BFC  103C 000E               1325              MOVE.B      #14, D0             ; command for trap call to display message
00001C00  4E4F                    1326              TRAP        #15                 ; trap call
00001C02                          1327              
00001C02  4245                    1328              CLR         D5
00001C04  1A01                    1329              MOVE.B      D1,D5
00001C06  CA7C 0004               1330              AND         #mask3,D5
00001C0A  BA7C 0004               1331              CMP         #mask3,D5
00001C0E  6700 0006               1332              BEQ         Reg1Cont
00001C12  6000 0162               1333              BRA         printMem
00001C16                          1334  Reg1Cont        
00001C16  43F9 0000264D           1335              LEA         dec, A1             ; Output -
00001C1C  103C 000E               1336              MOVE.B      #14, D0             ; command for trap call to display message
00001C20  4E4F                    1337              TRAP        #15                 ; trap call        
00001C22  6000 0002               1338              BRA         DataReg2
00001C26                          1339  
00001C26                          1340  
00001C26                          1341  DataReg2
00001C26  4245                    1342              CLR         D5
00001C28  1A01                    1343              MOVE.B      D1,D5
00001C2A  CA7C 000A               1344              AND         #maskB,D5
00001C2E  BA7C 000A               1345              CMP         #maskB,D5
00001C32  6700 0032               1346              BEQ         DataReg3
00001C36                          1347              
00001C36                          1348              
00001C36  43F9 00002706           1349              LEA         dispD2, A1          ; Output string D0
00001C3C  103C 000E               1350              MOVE.B      #14, D0             ; command for trap call to display message
00001C40  4E4F                    1351              TRAP        #15                 ; trap call
00001C42                          1352              
00001C42  4245                    1353              CLR         D5
00001C44  1A01                    1354              MOVE.B      D1,D5
00001C46  CA7C 0008               1355              AND         #mask4,D5
00001C4A  BA7C 0008               1356              CMP         #mask4,D5
00001C4E  6700 0006               1357              BEQ         Reg2Cont
00001C52  6000 0122               1358              BRA         printMem
00001C56                          1359  Reg2Cont        
00001C56  43F9 0000264D           1360              LEA         dec, A1             ; Output -
00001C5C  103C 000E               1361              MOVE.B      #14, D0             ; command for trap call to display message
00001C60  4E4F                    1362              TRAP        #15                 ; trap call        
00001C62  6000 0002               1363              BRA         DataReg3
00001C66                          1364  
00001C66                          1365  DataReg3
00001C66  4245                    1366              CLR         D5
00001C68  1A01                    1367              MOVE.B      D1,D5
00001C6A  CA7C 0014               1368              AND         #maskC,D5
00001C6E  BA7C 0014               1369              CMP         #maskC,D5
00001C72  6700 0032               1370              BEQ         DataReg4
00001C76                          1371              
00001C76  43F9 00002709           1372              LEA         dispD3, A1          ; Output string D0
00001C7C  103C 000E               1373              MOVE.B      #14, D0             ; command for trap call to display message
00001C80  4E4F                    1374              TRAP        #15                 ; trap call
00001C82                          1375              
00001C82  4245                    1376              CLR         D5
00001C84  1A01                    1377              MOVE.B      D1,D5
00001C86  CA7C 0010               1378              AND         #mask5,D5
00001C8A  BA7C 0010               1379              CMP         #mask5,D5
00001C8E  6700 0006               1380              BEQ         Reg3Cont
00001C92  6000 00E2               1381              BRA         printMem
00001C96                          1382  Reg3Cont        
00001C96  43F9 0000264D           1383              LEA         dec, A1             ; Output -
00001C9C  103C 000E               1384              MOVE.B      #14, D0             ; command for trap call to display message
00001CA0  4E4F                    1385              TRAP        #15                 ; trap call        
00001CA2  6000 0002               1386              BRA         DataReg4
00001CA6                          1387  
00001CA6                          1388  
00001CA6                          1389  DataReg4
00001CA6  4245                    1390              CLR         D5
00001CA8  1A01                    1391              MOVE.B      D1,D5
00001CAA  CA7C 0028               1392              AND         #maskD,D5
00001CAE  BA7C 0028               1393              CMP         #maskD,D5
00001CB2  6700 0032               1394              BEQ         DataReg5
00001CB6                          1395              
00001CB6  43F9 0000270C           1396              LEA         dispD4, A1          ; Output string D0
00001CBC  103C 000E               1397              MOVE.B      #14, D0             ; command for trap call to display message
00001CC0  4E4F                    1398              TRAP        #15                 ; trap call
00001CC2                          1399              
00001CC2  4245                    1400              CLR         D5
00001CC4  1A01                    1401              MOVE.B      D1,D5
00001CC6  CA7C 0020               1402              AND         #mask6,D5
00001CCA  BA7C 0020               1403              CMP         #mask6,D5
00001CCE  6700 0006               1404              BEQ         Reg4Cont
00001CD2  6000 00A2               1405              BRA         printMem
00001CD6                          1406  Reg4Cont        
00001CD6  43F9 0000264D           1407              LEA         dec, A1             ; Output -
00001CDC  103C 000E               1408              MOVE.B      #14, D0             ; command for trap call to display message
00001CE0  4E4F                    1409              TRAP        #15                 ; trap call        
00001CE2  6000 0002               1410              BRA         DataReg5
00001CE6                          1411  
00001CE6                          1412  DataReg5
00001CE6  4245                    1413              CLR         D5
00001CE8  1A01                    1414              MOVE.B      D1,D5
00001CEA  CA7C 0050               1415              AND         #maskE,D5
00001CEE  BA7C 0050               1416              CMP         #maskE,D5
00001CF2  6700 0032               1417              BEQ         DataReg6
00001CF6                          1418              
00001CF6  43F9 0000270F           1419              LEA         dispD5, A1          ; Output string D0
00001CFC  103C 000E               1420              MOVE.B      #14, D0             ; command for trap call to display message
00001D00  4E4F                    1421              TRAP        #15                 ; trap call
00001D02                          1422              
00001D02  4245                    1423              CLR         D5
00001D04  1A01                    1424              MOVE.B      D1,D5
00001D06  CA7C 0040               1425              AND         #mask7,D5
00001D0A  BA7C 0040               1426              CMP         #mask7,D5
00001D0E  6700 0006               1427              BEQ         Reg5Cont
00001D12  6000 0062               1428              BRA         printMem
00001D16                          1429  Reg5Cont        
00001D16  43F9 0000264D           1430              LEA         dec, A1             ; Output -
00001D1C  103C 000E               1431              MOVE.B      #14, D0             ; command for trap call to display message
00001D20  4E4F                    1432              TRAP        #15                 ; trap call        
00001D22  6000 0042               1433              BRA         DataReg7
00001D26                          1434  
00001D26                          1435  DataReg6
00001D26  4245                    1436              CLR         D5
00001D28  1A01                    1437              MOVE.B      D1,D5
00001D2A  CA7C 00A0               1438              AND         #maskF,D5
00001D2E  BA7C 00A0               1439              CMP         #maskF,D5
00001D32  6700 0032               1440              BEQ         DataReg7
00001D36                          1441  
00001D36  43F9 00002712           1442              LEA         dispD6, A1          ; Output string D0
00001D3C  103C 000E               1443              MOVE.B      #14, D0             ; command for trap call to display message
00001D40  4E4F                    1444              TRAP        #15                 ; trap call
00001D42                          1445              
00001D42  4245                    1446              CLR         D5
00001D44  1A01                    1447              MOVE.B      D1,D5
00001D46  CA7C 0080               1448              AND         #mask8,D5
00001D4A  BA7C 0080               1449              CMP         #mask8,D5
00001D4E  6700 0006               1450              BEQ         Reg6Cont
00001D52  6000 0022               1451              BRA         printMem
00001D56                          1452  Reg6Cont        
00001D56  43F9 0000264D           1453              LEA         dec, A1             ; Output -
00001D5C  103C 000E               1454              MOVE.B      #14, D0             ; command for trap call to display message
00001D60  4E4F                    1455              TRAP        #15                 ; trap call        
00001D62  6000 0002               1456              BRA         DataReg7
00001D66                          1457  
00001D66                          1458  DataReg7    
00001D66  43F9 00002715           1459              LEA         dispD7, A1             ; Output -
00001D6C  103C 000E               1460              MOVE.B      #14, D0             ; command for trap call to display message
00001D70  4E4F                    1461              TRAP        #15                 ; trap call        
00001D72  6000 0002               1462              BRA         printMem            
00001D76                          1463  printMem                                    ; Made this function in order to reuse if DR is 1
00001D76  6000 0002               1464              BRA         printMemNow
00001D7A                          1465  printMemNow               
00001D7A  43F9 00002651           1466              LEA         slash, A1           ; Display slash
00001D80  103C 000E               1467              MOVE.B      #14, D0             ; command for trap call to display message
00001D84  4E4F                    1468              TRAP        #15                 ; trap call
00001D86                          1469           
00001D86  4244                    1470              CLR         D4                  ; Using D4 to store predecrement mode addresses
00001D88  3801                    1471              MOVE.W      D1,D4               ; Stores bits for D0-D7
00001D8A  E044                    1472              ASR         #eight,D4
00001D8C                          1473              
00001D8C  4245                    1474              CLR         D5
00001D8E  1A04                    1475              MOVE.B      D4,D5
00001D90  CA7C 0001               1476              AND         #mask1,D5
00001D94  BA7C 0001               1477              CMP         #mask1,D5
00001D98  6700 0072               1478              BEQ         AddrReg0
00001D9C                          1479              
00001D9C  4245                    1480              CLR         D5
00001D9E  1A04                    1481              MOVE.B      D4,D5
00001DA0  CA7C 0002               1482              AND         #mask2,D5
00001DA4  BA7C 0002               1483              CMP         #mask2,D5
00001DA8  6700 0092               1484              BEQ         AddrReg1
00001DAC                          1485  
00001DAC  4245                    1486              CLR         D5
00001DAE  1A04                    1487              MOVE.B      D4,D5
00001DB0  CA7C 0004               1488              AND         #mask3,D5
00001DB4  BA7C 0004               1489              CMP         #mask3,D5
00001DB8  6700 00C2               1490              BEQ         AddrReg2            
00001DBC                          1491              
00001DBC  4245                    1492              CLR         D5
00001DBE  1A04                    1493              MOVE.B      D4,D5
00001DC0  CA7C 0008               1494              AND         #mask4,D5
00001DC4  BA7C 0008               1495              CMP         #mask4,D5
00001DC8  6700 00F2               1496              BEQ         AddrReg3            
00001DCC                          1497              
00001DCC  4245                    1498              CLR         D5
00001DCE  1A04                    1499              MOVE.B      D4,D5
00001DD0  CA7C 0010               1500              AND         #mask5,D5
00001DD4  BA7C 0010               1501              CMP         #mask5,D5
00001DD8  6700 0122               1502              BEQ         AddrReg4
00001DDC                          1503  
00001DDC  4245                    1504              CLR         D5
00001DDE  1A04                    1505              MOVE.B      D4,D5
00001DE0  CA7C 0020               1506              AND         #mask6,D5
00001DE4  BA7C 0020               1507              CMP         #mask6,D5
00001DE8  6700 0152               1508              BEQ         AddrReg5
00001DEC                          1509  
00001DEC  4245                    1510              CLR         D5
00001DEE  1A04                    1511              MOVE.B      D4,D5
00001DF0  CA7C 0040               1512              AND         #mask7,D5
00001DF4  BA7C 0040               1513              CMP         #mask7,D5
00001DF8  6700 0182               1514              BEQ         AddrReg6
00001DFC                          1515  
00001DFC  4245                    1516              CLR         D5
00001DFE  1A04                    1517              MOVE.B      D4,D5
00001E00  CA7C 0080               1518              AND         #mask8,D5
00001E04  BA7C 0080               1519              CMP         #mask8,D5
00001E08  6700 01B2               1520              BEQ         AddrReg7
00001E0C                          1521  AddrReg0
00001E0C  43F9 000026E6           1522              LEA         dispA0, A1          ; Output string D0
00001E12  103C 000E               1523              MOVE.B      #14, D0             ; command for trap call to display message
00001E16  4E4F                    1524              TRAP        #15                 ; trap call
00001E18                          1525              
00001E18  4245                    1526              CLR         D5
00001E1A  1A01                    1527              MOVE.B      D1,D5
00001E1C  CA7C 0002               1528              AND         #mask2,D5
00001E20  BA7C 0002               1529              CMP         #mask2,D5
00001E24  6700 0006               1530              BEQ         Addr0Cont
00001E28  6000 01A2               1531              BRA         endMOVE
00001E2C                          1532  Addr0Cont        
00001E2C  43F9 0000264D           1533              LEA         dec, A1             ; Output -
00001E32  103C 000E               1534              MOVE.B      #14, D0             ; command for trap call to display message
00001E36  4E4F                    1535              TRAP        #15                 ; trap call        
00001E38  6000 0002               1536              BRA         AddrReg1
00001E3C                          1537  
00001E3C                          1538  AddrReg1
00001E3C  4245                    1539              CLR         D5
00001E3E  1A04                    1540              MOVE.B      D4,D5
00001E40  CA7C 0005               1541              AND         #maskA,D5
00001E44  BA7C 0005               1542              CMP         #maskA,D5
00001E48  6700 0032               1543              BEQ         AddrReg2
00001E4C                          1544              
00001E4C  43F9 000026E9           1545              LEA         dispA1, A1          ; Output string D0
00001E52  103C 000E               1546              MOVE.B      #14, D0             ; command for trap call to display message
00001E56  4E4F                    1547              TRAP        #15                 ; trap call
00001E58                          1548              
00001E58  4245                    1549              CLR         D5
00001E5A  1A04                    1550              MOVE.B      D4,D5
00001E5C  CA7C 0004               1551              AND         #mask3,D5
00001E60  BA7C 0004               1552              CMP         #mask3,D5
00001E64  6700 0006               1553              BEQ         Addr1Cont
00001E68  6000 0162               1554              BRA         endMOVE
00001E6C                          1555  Addr1Cont        
00001E6C  43F9 0000264D           1556              LEA         dec, A1             ; Output -
00001E72  103C 000E               1557              MOVE.B      #14, D0             ; command for trap call to display message
00001E76  4E4F                    1558              TRAP        #15                 ; trap call        
00001E78  6000 0002               1559              BRA         AddrReg2
00001E7C                          1560  
00001E7C                          1561  
00001E7C                          1562  AddrReg2
00001E7C  4245                    1563              CLR         D5
00001E7E  1A04                    1564              MOVE.B      D4,D5
00001E80  CA7C 000A               1565              AND         #maskB,D5
00001E84  BA7C 000A               1566              CMP         #maskB,D5
00001E88  6700 0032               1567              BEQ         AddrReg3
00001E8C                          1568              
00001E8C                          1569              
00001E8C  43F9 000026EC           1570              LEA         dispA2, A1          ; Output string D0
00001E92  103C 000E               1571              MOVE.B      #14, D0             ; command for trap call to display message
00001E96  4E4F                    1572              TRAP        #15                 ; trap call
00001E98                          1573              
00001E98  4245                    1574              CLR         D5
00001E9A  1A04                    1575              MOVE.B      D4,D5
00001E9C  CA7C 0008               1576              AND         #mask4,D5
00001EA0  BA7C 0008               1577              CMP         #mask4,D5
00001EA4  6700 0006               1578              BEQ         Addr2Cont
00001EA8  6000 0122               1579              BRA         endMOVE
00001EAC                          1580  Addr2Cont        
00001EAC  43F9 0000264D           1581              LEA         dec, A1             ; Output -
00001EB2  103C 000E               1582              MOVE.B      #14, D0             ; command for trap call to display message
00001EB6  4E4F                    1583              TRAP        #15                 ; trap call        
00001EB8  6000 0002               1584              BRA         AddrReg3
00001EBC                          1585  
00001EBC                          1586  AddrReg3
00001EBC  4245                    1587              CLR         D5
00001EBE  1A04                    1588              MOVE.B      D4,D5
00001EC0  CA7C 0014               1589              AND         #maskC,D5
00001EC4  BA7C 0014               1590              CMP         #maskC,D5
00001EC8  6700 0032               1591              BEQ         AddrReg4
00001ECC                          1592              
00001ECC  43F9 000026EF           1593              LEA         dispA3, A1          ; Output string D0
00001ED2  103C 000E               1594              MOVE.B      #14, D0             ; command for trap call to display message
00001ED6  4E4F                    1595              TRAP        #15                 ; trap call
00001ED8                          1596              
00001ED8  4245                    1597              CLR         D5
00001EDA  1A04                    1598              MOVE.B      D4,D5
00001EDC  CA7C 0010               1599              AND         #mask5,D5
00001EE0  BA7C 0010               1600              CMP         #mask5,D5
00001EE4  6700 0006               1601              BEQ         Addr3Cont
00001EE8  6000 00E2               1602              BRA         endMOVE
00001EEC                          1603  Addr3Cont        
00001EEC  43F9 0000264D           1604              LEA         dec, A1             ; Output -
00001EF2  103C 000E               1605              MOVE.B      #14, D0             ; command for trap call to display message
00001EF6  4E4F                    1606              TRAP        #15                 ; trap call        
00001EF8  6000 0002               1607              BRA         AddrReg4
00001EFC                          1608  
00001EFC                          1609  
00001EFC                          1610  AddrReg4
00001EFC  4245                    1611              CLR         D5
00001EFE  1A04                    1612              MOVE.B      D4,D5
00001F00  CA7C 0028               1613              AND         #maskD,D5
00001F04  BA7C 0028               1614              CMP         #maskD,D5
00001F08  6700 0032               1615              BEQ         AddrReg5
00001F0C                          1616              
00001F0C  43F9 000026F2           1617              LEA         dispA4, A1          ; Output string D0
00001F12  103C 000E               1618              MOVE.B      #14, D0             ; command for trap call to display message
00001F16  4E4F                    1619              TRAP        #15                 ; trap call
00001F18                          1620              
00001F18  4245                    1621              CLR         D5
00001F1A  1A04                    1622              MOVE.B      D4,D5
00001F1C  CA7C 0020               1623              AND         #mask6,D5
00001F20  BA7C 0020               1624              CMP         #mask6,D5
00001F24  6700 0006               1625              BEQ         Addr4Cont
00001F28  6000 00A2               1626              BRA         endMOVE
00001F2C                          1627  Addr4Cont        
00001F2C  43F9 0000264D           1628              LEA         dec, A1             ; Output -
00001F32  103C 000E               1629              MOVE.B      #14, D0             ; command for trap call to display message
00001F36  4E4F                    1630              TRAP        #15                 ; trap call        
00001F38  6000 0002               1631              BRA         AddrReg5
00001F3C                          1632  AddrReg5
00001F3C  4245                    1633              CLR         D5
00001F3E  1A04                    1634              MOVE.B      D4,D5
00001F40  CA7C 0050               1635              AND         #maskE,D5
00001F44  BA7C 0050               1636              CMP         #maskE,D5
00001F48  6700 0032               1637              BEQ         AddrReg6
00001F4C                          1638              
00001F4C  43F9 000026F5           1639              LEA         dispA5, A1          ; Output string D0
00001F52  103C 000E               1640              MOVE.B      #14, D0             ; command for trap call to display message
00001F56  4E4F                    1641              TRAP        #15                 ; trap call
00001F58                          1642              
00001F58  4245                    1643              CLR         D5
00001F5A  1A04                    1644              MOVE.B      D4,D5
00001F5C  CA7C 0040               1645              AND         #mask7,D5
00001F60  BA7C 0040               1646              CMP         #mask7,D5
00001F64  6700 0006               1647              BEQ         Addr5Cont
00001F68  6000 0062               1648              BRA         endMOVE
00001F6C                          1649  Addr5Cont        
00001F6C  43F9 0000264D           1650              LEA         dec, A1             ; Output -
00001F72  103C 000E               1651              MOVE.B      #14, D0             ; command for trap call to display message
00001F76  4E4F                    1652              TRAP        #15                 ; trap call        
00001F78  6000 0042               1653              BRA         AddrReg7
00001F7C                          1654  
00001F7C                          1655  AddrReg6
00001F7C  4245                    1656              CLR         D5
00001F7E  1A04                    1657              MOVE.B      D4,D5
00001F80  CA7C 00A0               1658              AND         #maskF,D5
00001F84  BA7C 00A0               1659              CMP         #maskF,D5
00001F88  6700 0032               1660              BEQ         AddrReg7
00001F8C                          1661  
00001F8C  43F9 000026F8           1662              LEA         dispA6, A1          ; Output string D0
00001F92  103C 000E               1663              MOVE.B      #14, D0             ; command for trap call to display message
00001F96  4E4F                    1664              TRAP        #15                 ; trap call
00001F98                          1665              
00001F98  4245                    1666              CLR         D5
00001F9A  1A04                    1667              MOVE.B      D4,D5
00001F9C  CA7C 0080               1668              AND         #mask8,D5
00001FA0  BA7C 0080               1669              CMP         #mask8,D5
00001FA4  6700 0006               1670              BEQ         Addr6Cont
00001FA8  6000 0022               1671              BRA         endMOVE
00001FAC                          1672  Addr6Cont        
00001FAC  43F9 0000264D           1673              LEA         dec, A1             ; Output -
00001FB2  103C 000E               1674              MOVE.B      #14, D0             ; command for trap call to display message
00001FB6  4E4F                    1675              TRAP        #15                 ; trap call        
00001FB8  6000 0002               1676              BRA         AddrReg7
00001FBC                          1677  
00001FBC                          1678  AddrReg7    
00001FBC  43F9 000026FB           1679              LEA         dispA7, A1          ; Output -
00001FC2  103C 000E               1680              MOVE.B      #14, D0             ; command for trap call to display message
00001FC6  4E4F                    1681              TRAP        #15                 ; trap call        
00001FC8  6000 0002               1682              BRA         endMOVE
00001FCC                          1683  
00001FCC                          1684  
00001FCC                          1685  
00001FCC                          1686  
00001FCC                          1687  endMOVE
00001FCC  4CDF 7EFF               1688              MOVEM.L  (SP)+, D0-D7/A1-A6
00001FD0  4E75                    1689              RTS
00001FD2                          1690  endMove1                                    ; Used if MOVEM has DR is 1
00001FD2  4CDF 7EFF               1691              MOVEM.L  (SP)+, D0-D7/A1-A6
00001FD6  4E75                    1692              RTS
00001FD8                          1693  
00001FD8                          1694  ***********************************************************************************************************
00001FD8                          1695  *
00001FD8                          1696  *                                           EA Print Check
00001FD8                          1697  *
00001FD8                          1698  ***********************************************************************************************************
00001FD8  48E7 FF7E               1699  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00001FDC                          1700  
00001FDC                          1701  
00001FDC  B43C 0000               1702              CMP.B       #zero, D2
00001FE0  6700 002E               1703              BEQ         pDataReg
00001FE4  B43C 0001               1704              CMP.B       #one, D2
00001FE8  6700 00E6               1705              BEQ         pAddrReg
00001FEC  B43C 0002               1706              CMP.B       #two, D2
00001FF0  6700 019E               1707              BEQ         pAddrDir
00001FF4  B43C 0003               1708              CMP.B       #three, D2
00001FF8  6700 02C2               1709              BEQ         pAddrPost
00001FFC  B43C 0004               1710              CMP.B       #four, D2
00002000  6700 0446               1711              BEQ         pAddrDec
00002004  B43C 0007               1712              CMP.B       #seven, D2
00002008  6700 0576               1713              BEQ         pHex
0000200C  6000 0614               1714              BRA         invalid
00002010                          1715  
00002010                          1716  ***********************************************************************************************************
00002010                          1717  * Data Register        
00002010  B63C 0000               1718  pDataReg    CMP.B   #zero,D3
00002014  6700 003A               1719              BEQ     displayD0
00002018  B63C 0001               1720              CMP.B   #one,D3
0000201C  6700 0042               1721              BEQ     displayD1
00002020  B63C 0002               1722              CMP.B   #two,D3
00002024  6700 004A               1723              BEQ     displayD2
00002028  B63C 0003               1724              CMP.B   #three,D3
0000202C  6700 0052               1725              BEQ     displayD3
00002030  B63C 0004               1726              CMP.B   #four,D3
00002034  6700 005A               1727              BEQ     displayD4
00002038  B63C 0005               1728              CMP.B   #five,D3
0000203C  6700 0062               1729              BEQ     displayD5
00002040  B63C 0006               1730              CMP.B   #six,D3
00002044  6700 006A               1731              BEQ     displayD6
00002048  B63C 0007               1732              CMP.B   #seven,D3
0000204C  6700 0072               1733              BEQ     displayD7
00002050                          1734              
00002050  43F9 00002700           1735  displayD0   LEA         dispD0, A1          ; Display space
00002056  103C 000E               1736              MOVE.B      #14, D0             ; command for trap call to display message
0000205A  4E4F                    1737              TRAP        #15                 ; trap call
0000205C  6000 05D4               1738              BRA         endSUB              ; go to the end of the subroutine
00002060                          1739              
00002060  43F9 00002703           1740  displayD1   LEA         dispD1, A1          ; Display space
00002066  103C 000E               1741              MOVE.B      #14, D0             ; command for trap call to display message
0000206A  4E4F                    1742              TRAP        #15                 ; trap call
0000206C  6000 05C4               1743              BRA         endSUB              ; go to the end of the subroutine
00002070                          1744  
00002070  43F9 00002706           1745  displayD2   LEA         dispD2, A1          ; Display space
00002076  103C 000E               1746              MOVE.B      #14, D0             ; command for trap call to display message
0000207A  4E4F                    1747              TRAP        #15                 ; trap call
0000207C  6000 05B4               1748              BRA         endSUB              ; go to the end of the subroutine
00002080                          1749  
00002080  43F9 00002709           1750  displayD3   LEA         dispD3, A1          ; Display space
00002086  103C 000E               1751              MOVE.B      #14, D0             ; command for trap call to display message
0000208A  4E4F                    1752              TRAP        #15                 ; trap call
0000208C  6000 05A4               1753              BRA         endSUB              ; go to the end of the subroutine
00002090                          1754  
00002090  43F9 0000270C           1755  displayD4   LEA         dispD4, A1          ; Display space
00002096  103C 000E               1756              MOVE.B      #14, D0             ; command for trap call to display message
0000209A  4E4F                    1757              TRAP        #15                 ; trap call
0000209C  6000 0594               1758              BRA         endSUB              ; go to the end of the subroutine
000020A0                          1759  
000020A0  43F9 0000270F           1760  displayD5   LEA         dispD5, A1          ; Display space
000020A6  103C 000E               1761              MOVE.B      #14, D0             ; command for trap call to display message
000020AA  4E4F                    1762              TRAP        #15                 ; trap call
000020AC  6000 0584               1763              BRA         endSUB              ; go to the end of the subroutine
000020B0                          1764  
000020B0  43F9 00002712           1765  displayD6   LEA         dispD6, A1          ; Display space
000020B6  103C 000E               1766              MOVE.B      #14, D0             ; command for trap call to display message
000020BA  4E4F                    1767              TRAP        #15                 ; trap call
000020BC  6000 0574               1768              BRA         endSUB              ; go to the end of the subroutine
000020C0                          1769  
000020C0  43F9 00002715           1770  displayD7   LEA         dispD7, A1          ; Display space
000020C6  103C 000E               1771              MOVE.B      #14, D0             ; command for trap call to display message
000020CA  4E4F                    1772              TRAP        #15                 ; trap call
000020CC  6000 0564               1773              BRA         endSUB              ; go to the end of the subroutine
000020D0                          1774  ***********************************************************************************************************
000020D0                          1775  * Address Register
000020D0  B63C 0000               1776  pAddrReg    CMP.B   #zero,D3
000020D4  6700 003A               1777              BEQ     displayA0
000020D8  B63C 0001               1778              CMP.B   #one,D3
000020DC  6700 0042               1779              BEQ     displayA1
000020E0  B63C 0002               1780              CMP.B   #two,D3
000020E4  6700 004A               1781              BEQ     displayA2
000020E8  B63C 0003               1782              CMP.B   #three,D3
000020EC  6700 0052               1783              BEQ     displayA3
000020F0  B63C 0004               1784              CMP.B   #four,D3
000020F4  6700 005A               1785              BEQ     displayA4
000020F8  B63C 0005               1786              CMP.B   #five,D3
000020FC  6700 0062               1787              BEQ     displayA5
00002100  B63C 0006               1788              CMP.B   #six,D3
00002104  6700 006A               1789              BEQ     displayA6
00002108  B63C 0007               1790              CMP.B   #seven,D3
0000210C  6700 0072               1791              BEQ     displayA7
00002110                          1792              
00002110  43F9 000026E6           1793  displayA0   LEA         dispA0, A1          ; Display space
00002116  103C 000E               1794              MOVE.B      #14, D0             ; command for trap call to display message
0000211A  4E4F                    1795              TRAP        #15                 ; trap call
0000211C  6000 0514               1796              BRA         endSUB              ; go to the end of the subroutine
00002120                          1797              
00002120  43F9 000026E9           1798  displayA1   LEA         dispA1, A1          ; Display space
00002126  103C 000E               1799              MOVE.B      #14, D0             ; command for trap call to display message
0000212A  4E4F                    1800              TRAP        #15                 ; trap call
0000212C  6000 0504               1801              BRA         endSUB              ; go to the end of the subroutine
00002130                          1802  
00002130  43F9 000026EC           1803  displayA2   LEA         dispA2, A1          ; Display space
00002136  103C 000E               1804              MOVE.B      #14, D0             ; command for trap call to display message
0000213A  4E4F                    1805              TRAP        #15                 ; trap call
0000213C  6000 04F4               1806              BRA         endSUB              ; go to the end of the subroutine
00002140                          1807  
00002140  43F9 000026EF           1808  displayA3   LEA         dispA3, A1          ; Display space
00002146  103C 000E               1809              MOVE.B      #14, D0             ; command for trap call to display message
0000214A  4E4F                    1810              TRAP        #15                 ; trap call
0000214C  6000 04E4               1811              BRA         endSUB              ; go to the end of the subroutine
00002150                          1812  
00002150  43F9 000026F2           1813  displayA4   LEA         dispA4, A1          ; Display space
00002156  103C 000E               1814              MOVE.B      #14, D0             ; command for trap call to display message
0000215A  4E4F                    1815              TRAP        #15                 ; trap call
0000215C  6000 04D4               1816              BRA         endSUB              ; go to the end of the subroutine
00002160                          1817  
00002160  43F9 000026F5           1818  displayA5   LEA         dispA5, A1          ; Display space
00002166  103C 000E               1819              MOVE.B      #14, D0             ; command for trap call to display message
0000216A  4E4F                    1820              TRAP        #15                 ; trap call
0000216C  6000 04C4               1821              BRA         endSUB              ; go to the end of the subroutine
00002170                          1822  
00002170  43F9 000026F8           1823  displayA6   LEA         dispA6, A1          ; Display space
00002176  103C 000E               1824              MOVE.B      #14, D0             ; command for trap call to display message
0000217A  4E4F                    1825              TRAP        #15                 ; trap call
0000217C  6000 04B4               1826              BRA         endSUB              ; go to the end of the subroutine
00002180                          1827  
00002180  43F9 000026FB           1828  displayA7   LEA         dispA7, A1          ; Display space
00002186  103C 000E               1829              MOVE.B      #14, D0             ; command for trap call to display message
0000218A  4E4F                    1830              TRAP        #15                 ; trap call
0000218C  6000 04A4               1831              BRA         endSUB              ; go to the end of the subroutine
00002190                          1832  
00002190                          1833  ***********************************************************************************************************
00002190                          1834  * Address Register Direct
00002190                          1835  
00002190  43F9 00002649           1836  pAddrDir    LEA         opPer, A1           ; Display space
00002196  103C 000E               1837              MOVE.B      #14, D0             ; command for trap call to display message
0000219A  4E4F                    1838              TRAP        #15                 ; trap call
0000219C                          1839              
0000219C  B63C 0000               1840              CMP.B   #zero,D3
000021A0  6700 003A               1841              BEQ     displayA0A
000021A4  B63C 0001               1842              CMP.B   #one,D3
000021A8  6700 004E               1843              BEQ     displayA1A
000021AC  B63C 0002               1844              CMP.B   #two,D3
000021B0  6700 0062               1845              BEQ     displayA2A
000021B4  B63C 0003               1846              CMP.B   #three,D3
000021B8  6700 0076               1847              BEQ     displayA3A
000021BC  B63C 0004               1848              CMP.B   #four,D3
000021C0  6700 008A               1849              BEQ     displayA4A
000021C4  B63C 0005               1850              CMP.B   #five,D3
000021C8  6700 009E               1851              BEQ     displayA5A
000021CC  B63C 0006               1852              CMP.B   #six,D3
000021D0  6700 00B2               1853              BEQ     displayA6A
000021D4  B63C 0007               1854              CMP.B   #seven,D3
000021D8  6700 00C6               1855              BEQ     displayA7A
000021DC                          1856              
000021DC  43F9 000026E6           1857  displayA0A  LEA         dispA0, A1          ; Display space
000021E2  103C 000E               1858              MOVE.B      #14, D0             ; command for trap call to display message
000021E6  4E4F                    1859              TRAP        #15                 ; trap call
000021E8  43F9 0000264B           1860              LEA         clPer, A1           ; Display space
000021EE  103C 000E               1861              MOVE.B      #14, D0             ; command for trap call to display message
000021F2  4E4F                    1862              TRAP        #15                 ; trap call
000021F4  6000 043C               1863              BRA         endSUB              ; go to the end of the subroutine
000021F8                          1864              
000021F8  43F9 000026E9           1865  displayA1A  LEA         dispA1, A1          ; Display space
000021FE  103C 000E               1866              MOVE.B      #14, D0             ; command for trap call to display message
00002202  4E4F                    1867              TRAP        #15                 ; trap call
00002204  43F9 0000264B           1868              LEA         clPer, A1           ; Display space
0000220A  103C 000E               1869              MOVE.B      #14, D0             ; command for trap call to display message
0000220E  4E4F                    1870              TRAP        #15                 ; trap call
00002210  6000 0420               1871              BRA         endSUB              ; go to the end of the subroutine
00002214                          1872  
00002214  43F9 000026EC           1873  displayA2A  LEA         dispA2, A1          ; Display space
0000221A  103C 000E               1874              MOVE.B      #14, D0             ; command for trap call to display message
0000221E  4E4F                    1875              TRAP        #15                 ; trap call
00002220  43F9 0000264B           1876              LEA         clPer, A1           ; Display space
00002226  103C 000E               1877              MOVE.B      #14, D0             ; command for trap call to display message
0000222A  4E4F                    1878              TRAP        #15                 ; trap call
0000222C  6000 0404               1879              BRA         endSUB              ; go to the end of the subroutine
00002230                          1880  
00002230  43F9 000026EF           1881  displayA3A  LEA         dispA3, A1          ; Display space
00002236  103C 000E               1882              MOVE.B      #14, D0             ; command for trap call to display message
0000223A  4E4F                    1883              TRAP        #15                 ; trap call
0000223C  43F9 0000264B           1884              LEA         clPer, A1           ; Display space
00002242  103C 000E               1885              MOVE.B      #14, D0             ; command for trap call to display message
00002246  4E4F                    1886              TRAP        #15                 ; trap call
00002248  6000 03E8               1887              BRA         endSUB              ; go to the end of the subroutine
0000224C                          1888  
0000224C  43F9 000026F2           1889  displayA4A  LEA         dispA4, A1          ; Display space
00002252  103C 000E               1890              MOVE.B      #14, D0             ; command for trap call to display message
00002256  4E4F                    1891              TRAP        #15                 ; trap call
00002258  43F9 0000264B           1892              LEA         clPer, A1           ; Display space
0000225E  103C 000E               1893              MOVE.B      #14, D0             ; command for trap call to display message
00002262  4E4F                    1894              TRAP        #15                 ; trap call
00002264  6000 03CC               1895              BRA         endSUB              ; go to the end of the subroutine
00002268                          1896  
00002268  43F9 000026F5           1897  displayA5A  LEA         dispA5, A1          ; Display space
0000226E  103C 000E               1898              MOVE.B      #14, D0             ; command for trap call to display message
00002272  4E4F                    1899              TRAP        #15                 ; trap call
00002274  43F9 0000264B           1900              LEA         clPer, A1           ; Display space
0000227A  103C 000E               1901              MOVE.B      #14, D0             ; command for trap call to display message
0000227E  4E4F                    1902              TRAP        #15                 ; trap call
00002280  6000 03B0               1903              BRA         endSUB              ; go to the end of the subroutine
00002284                          1904  
00002284  43F9 000026F8           1905  displayA6A  LEA         dispA6, A1          ; Display space
0000228A  103C 000E               1906              MOVE.B      #14, D0             ; command for trap call to display message
0000228E  4E4F                    1907              TRAP        #15                 ; trap call
00002290  43F9 0000264B           1908              LEA         clPer, A1           ; Display space
00002296  103C 000E               1909              MOVE.B      #14, D0             ; command for trap call to display message
0000229A  4E4F                    1910              TRAP        #15                 ; trap call
0000229C  6000 0394               1911              BRA         endSUB              ; go to the end of the subroutine
000022A0                          1912  
000022A0  43F9 000026FB           1913  displayA7A  LEA         dispA7, A1          ; Display space
000022A6  103C 000E               1914              MOVE.B      #14, D0             ; command for trap call to display message
000022AA  4E4F                    1915              TRAP        #15                 ; trap call
000022AC  43F9 0000264B           1916              LEA         clPer, A1           ; Display space
000022B2  103C 000E               1917              MOVE.B      #14, D0             ; command for trap call to display message
000022B6  4E4F                    1918              TRAP        #15                 ; trap call
000022B8  6000 0378               1919              BRA         endSUB              ; go to the end of the subroutine
000022BC                          1920              
000022BC                          1921  ***********************************************************************************************************
000022BC                          1922  * Addr Postincrement
000022BC                          1923              
000022BC  43F9 00002649           1924  pAddrPost   LEA         opPer, A1           ; Display space
000022C2  103C 000E               1925              MOVE.B      #14, D0             ; command for trap call to display message
000022C6  4E4F                    1926              TRAP        #15                 ; trap call
000022C8                          1927              
000022C8  B63C 0000               1928              CMP.B   #zero,D3
000022CC  6700 003A               1929              BEQ     displayA0P
000022D0  B63C 0001               1930              CMP.B   #one,D3
000022D4  6700 005A               1931              BEQ     displayA1P
000022D8  B63C 0002               1932              CMP.B   #two,D3
000022DC  6700 007A               1933              BEQ     displayA2P
000022E0  B63C 0003               1934              CMP.B   #three,D3
000022E4  6700 009A               1935              BEQ     displayA3P
000022E8  B63C 0004               1936              CMP.B   #four,D3
000022EC  6700 00BA               1937              BEQ     displayA4P
000022F0  B63C 0005               1938              CMP.B   #five,D3
000022F4  6700 00DA               1939              BEQ     displayA5P
000022F8  B63C 0006               1940              CMP.B   #six,D3
000022FC  6700 00FA               1941              BEQ     displayA6P
00002300  B63C 0007               1942              CMP.B   #seven,D3
00002304  6700 011A               1943              BEQ     displayA7P
00002308                          1944              
00002308  43F9 000026E6           1945  displayA0P  LEA         dispA0, A1          ; Display space
0000230E  103C 000E               1946              MOVE.B      #14, D0             ; command for trap call to display message
00002312  4E4F                    1947              TRAP        #15                 ; trap call
00002314  43F9 0000264B           1948              LEA         clPer, A1           ; Display space
0000231A  103C 000E               1949              MOVE.B      #14, D0             ; command for trap call to display message
0000231E  4E4F                    1950              TRAP        #15                 ; trap call
00002320  43F9 0000264F           1951              LEA         inc, A1             ; Display space
00002326  103C 000E               1952              MOVE.B      #14, D0             ; command for trap call to display message
0000232A  4E4F                    1953              TRAP        #15                 ; trap call
0000232C  6000 0304               1954              BRA         endSUB              ; go to the end of the subroutine
00002330                          1955              
00002330  43F9 000026E9           1956  displayA1P  LEA         dispA1, A1          ; Display space
00002336  103C 000E               1957              MOVE.B      #14, D0             ; command for trap call to display message
0000233A  4E4F                    1958              TRAP        #15                 ; trap call
0000233C  43F9 0000264B           1959              LEA         clPer, A1           ; Display space
00002342  103C 000E               1960              MOVE.B      #14, D0             ; command for trap call to display message
00002346  4E4F                    1961              TRAP        #15                 ; trap call
00002348  43F9 0000264F           1962              LEA         inc, A1             ; Display space
0000234E  103C 000E               1963              MOVE.B      #14, D0             ; command for trap call to display message
00002352  4E4F                    1964              TRAP        #15                 ; trap call
00002354  6000 02DC               1965              BRA         endSUB              ; go to the end of the subroutine
00002358                          1966  
00002358  43F9 000026EC           1967  displayA2P  LEA         dispA2, A1          ; Display space
0000235E  103C 000E               1968              MOVE.B      #14, D0             ; command for trap call to display message
00002362  4E4F                    1969              TRAP        #15                 ; trap call
00002364  43F9 0000264B           1970              LEA         clPer, A1           ; Display space
0000236A  103C 000E               1971              MOVE.B      #14, D0             ; command for trap call to display message
0000236E  4E4F                    1972              TRAP        #15                 ; trap call
00002370  43F9 0000264F           1973              LEA         inc, A1             ; Display space
00002376  103C 000E               1974              MOVE.B      #14, D0             ; command for trap call to display message
0000237A  4E4F                    1975              TRAP        #15                 ; trap call
0000237C  6000 02B4               1976              BRA         endSUB              ; go to the end of the subroutine
00002380                          1977  
00002380  43F9 000026EF           1978  displayA3P  LEA         dispA3, A1          ; Display space
00002386  103C 000E               1979              MOVE.B      #14, D0             ; command for trap call to display message
0000238A  4E4F                    1980              TRAP        #15                 ; trap call
0000238C  43F9 0000264B           1981              LEA         clPer, A1           ; Display space
00002392  103C 000E               1982              MOVE.B      #14, D0             ; command for trap call to display message
00002396  4E4F                    1983              TRAP        #15                 ; trap call
00002398  43F9 0000264F           1984              LEA         inc, A1             ; Display space
0000239E  103C 000E               1985              MOVE.B      #14, D0             ; command for trap call to display message
000023A2  4E4F                    1986              TRAP        #15                 ; trap call
000023A4  6000 028C               1987              BRA         endSUB              ; go to the end of the subroutine
000023A8                          1988  
000023A8  43F9 000026F2           1989  displayA4P  LEA         dispA4, A1          ; Display space
000023AE  103C 000E               1990              MOVE.B      #14, D0             ; command for trap call to display message
000023B2  4E4F                    1991              TRAP        #15                 ; trap call
000023B4  43F9 0000264B           1992              LEA         clPer, A1           ; Display space
000023BA  103C 000E               1993              MOVE.B      #14, D0             ; command for trap call to display message
000023BE  4E4F                    1994              TRAP        #15                 ; trap call
000023C0  43F9 0000264F           1995              LEA         inc, A1             ; Display space
000023C6  103C 000E               1996              MOVE.B      #14, D0             ; command for trap call to display message
000023CA  4E4F                    1997              TRAP        #15                 ; trap call
000023CC  6000 0264               1998              BRA         endSUB              ; go to the end of the subroutine
000023D0                          1999  
000023D0  43F9 000026F5           2000  displayA5P  LEA         dispA5, A1          ; Display space
000023D6  103C 000E               2001              MOVE.B      #14, D0             ; command for trap call to display message
000023DA  4E4F                    2002              TRAP        #15                 ; trap call
000023DC  43F9 0000264B           2003              LEA         clPer, A1           ; Display space
000023E2  103C 000E               2004              MOVE.B      #14, D0             ; command for trap call to display message
000023E6  4E4F                    2005              TRAP        #15                 ; trap call
000023E8  43F9 0000264F           2006              LEA         inc, A1             ; Display space
000023EE  103C 000E               2007              MOVE.B      #14, D0             ; command for trap call to display message
000023F2  4E4F                    2008              TRAP        #15                 ; trap call
000023F4  6000 023C               2009              BRA         endSUB              ; go to the end of the subroutine
000023F8                          2010  
000023F8  43F9 000026F8           2011  displayA6P  LEA         dispA6, A1          ; Display space
000023FE  103C 000E               2012              MOVE.B      #14, D0             ; command for trap call to display message
00002402  4E4F                    2013              TRAP        #15                 ; trap call
00002404  43F9 0000264B           2014              LEA         clPer, A1           ; Display space
0000240A  103C 000E               2015              MOVE.B      #14, D0             ; command for trap call to display message
0000240E  4E4F                    2016              TRAP        #15                 ; trap call
00002410  43F9 0000264F           2017              LEA         inc, A1             ; Display space
00002416  103C 000E               2018              MOVE.B      #14, D0             ; command for trap call to display message
0000241A  4E4F                    2019              TRAP        #15                 ; trap call
0000241C  6000 0214               2020              BRA         endSUB              ; go to the end of the subroutine
00002420                          2021  
00002420  43F9 000026FB           2022  displayA7P  LEA         dispA7, A1          ; Display space
00002426  103C 000E               2023              MOVE.B      #14, D0             ; command for trap call to display message
0000242A  4E4F                    2024              TRAP        #15                 ; trap call
0000242C  43F9 0000264B           2025              LEA         clPer, A1           ; Display space
00002432  103C 000E               2026              MOVE.B      #14, D0             ; command for trap call to display message
00002436  4E4F                    2027              TRAP        #15                 ; trap call
00002438  43F9 0000264F           2028              LEA         inc, A1             ; Display space
0000243E  103C 000E               2029              MOVE.B      #14, D0             ; command for trap call to display message
00002442  4E4F                    2030              TRAP        #15                 ; trap call
00002444  6000 01EC               2031              BRA         endSUB              ; go to the end of the subroutine
00002448                          2032  
00002448                          2033  ***********************************************************************************************************
00002448                          2034  * Addr Postdecrement
00002448                          2035  
00002448  43F9 0000264D           2036  pAddrDec    LEA         dec, A1             ; Display space
0000244E  103C 000E               2037              MOVE.B      #14, D0             ; command for trap call to display message
00002452  4E4F                    2038              TRAP        #15                 ; trap call
00002454                          2039              
00002454  43F9 00002649           2040              LEA         opPer, A1           ; Display space
0000245A  103C 000E               2041              MOVE.B      #14, D0             ; command for trap call to display message
0000245E  4E4F                    2042              TRAP        #15                 ; trap call
00002460                          2043              
00002460  B63C 0000               2044              CMP.B   #zero,D3
00002464  6700 003A               2045              BEQ     displayA0D
00002468  B63C 0001               2046              CMP.B   #one,D3
0000246C  6700 004E               2047              BEQ     displayA1D
00002470  B63C 0002               2048              CMP.B   #two,D3
00002474  6700 0062               2049              BEQ     displayA2D
00002478  B63C 0003               2050              CMP.B   #three,D3
0000247C  6700 0076               2051              BEQ     displayA3D
00002480  B63C 0004               2052              CMP.B   #four,D3
00002484  6700 008A               2053              BEQ     displayA4D
00002488  B63C 0005               2054              CMP.B   #five,D3
0000248C  6700 009E               2055              BEQ     displayA5D
00002490  B63C 0006               2056              CMP.B   #six,D3
00002494  6700 00B2               2057              BEQ     displayA6D
00002498  B63C 0007               2058              CMP.B   #seven,D3
0000249C  6700 00C6               2059              BEQ     displayA7D
000024A0                          2060              
000024A0  43F9 000026E6           2061  displayA0D  LEA         dispA0, A1          ; Display space
000024A6  103C 000E               2062              MOVE.B      #14, D0             ; command for trap call to display message
000024AA  4E4F                    2063              TRAP        #15                 ; trap call
000024AC  43F9 0000264B           2064              LEA         clPer, A1           ; Display space
000024B2  103C 000E               2065              MOVE.B      #14, D0             ; command for trap call to display message
000024B6  4E4F                    2066              TRAP        #15                 ; trap call
000024B8  6000 0178               2067              BRA         endSUB              ; go to the end of the subroutine
000024BC                          2068              
000024BC  43F9 000026E9           2069  displayA1D  LEA         dispA1, A1          ; Display space
000024C2  103C 000E               2070              MOVE.B      #14, D0             ; command for trap call to display message
000024C6  4E4F                    2071              TRAP        #15                 ; trap call
000024C8  43F9 0000264B           2072              LEA         clPer, A1           ; Display space
000024CE  103C 000E               2073              MOVE.B      #14, D0             ; command for trap call to display message
000024D2  4E4F                    2074              TRAP        #15                 ; trap call
000024D4  6000 015C               2075              BRA         endSUB              ; go to the end of the subroutine
000024D8                          2076  
000024D8  43F9 000026EC           2077  displayA2D  LEA         dispA2, A1          ; Display space
000024DE  103C 000E               2078              MOVE.B      #14, D0             ; command for trap call to display message
000024E2  4E4F                    2079              TRAP        #15                 ; trap call
000024E4  43F9 0000264B           2080              LEA         clPer, A1           ; Display space
000024EA  103C 000E               2081              MOVE.B      #14, D0             ; command for trap call to display message
000024EE  4E4F                    2082              TRAP        #15                 ; trap call
000024F0  6000 0140               2083              BRA         endSUB              ; go to the end of the subroutine
000024F4                          2084  
000024F4  43F9 000026EF           2085  displayA3D  LEA         dispA3, A1          ; Display space
000024FA  103C 000E               2086              MOVE.B      #14, D0             ; command for trap call to display message
000024FE  4E4F                    2087              TRAP        #15                 ; trap call
00002500  43F9 0000264B           2088              LEA         clPer, A1           ; Display space
00002506  103C 000E               2089              MOVE.B      #14, D0             ; command for trap call to display message
0000250A  4E4F                    2090              TRAP        #15                 ; trap call
0000250C  6000 0124               2091              BRA         endSUB              ; go to the end of the subroutine
00002510                          2092  
00002510  43F9 000026F2           2093  displayA4D  LEA         dispA4, A1          ; Display space
00002516  103C 000E               2094              MOVE.B      #14, D0             ; command for trap call to display message
0000251A  4E4F                    2095              TRAP        #15                 ; trap call
0000251C  43F9 0000264B           2096              LEA         clPer, A1           ; Display space
00002522  103C 000E               2097              MOVE.B      #14, D0             ; command for trap call to display message
00002526  4E4F                    2098              TRAP        #15                 ; trap call
00002528  6000 0108               2099              BRA         endSUB              ; go to the end of the subroutine
0000252C                          2100  
0000252C  43F9 000026F5           2101  displayA5D  LEA         dispA5, A1          ; Display space
00002532  103C 000E               2102              MOVE.B      #14, D0             ; command for trap call to display message
00002536  4E4F                    2103              TRAP        #15                 ; trap call
00002538  43F9 0000264B           2104              LEA         clPer, A1           ; Display space
0000253E  103C 000E               2105              MOVE.B      #14, D0             ; command for trap call to display message
00002542  4E4F                    2106              TRAP        #15                 ; trap call
00002544  6000 00EC               2107              BRA         endSUB              ; go to the end of the subroutine
00002548                          2108  
00002548  43F9 000026F8           2109  displayA6D  LEA         dispA6, A1          ; Display space
0000254E  103C 000E               2110              MOVE.B      #14, D0             ; command for trap call to display message
00002552  4E4F                    2111              TRAP        #15                 ; trap call
00002554  43F9 0000264B           2112              LEA         clPer, A1           ; Display space
0000255A  103C 000E               2113              MOVE.B      #14, D0             ; command for trap call to display message
0000255E  4E4F                    2114              TRAP        #15                 ; trap call
00002560  6000 00D0               2115              BRA         endSUB              ; go to the end of the subroutine
00002564                          2116  
00002564  43F9 000026FB           2117  displayA7D  LEA         dispA7, A1          ; Display space
0000256A  103C 000E               2118              MOVE.B      #14, D0             ; command for trap call to display message
0000256E  4E4F                    2119              TRAP        #15                 ; trap call
00002570  43F9 0000264B           2120              LEA         clPer, A1           ; Display space
00002576  103C 000E               2121              MOVE.B      #14, D0             ; command for trap call to display message
0000257A  4E4F                    2122              TRAP        #15                 ; trap call
0000257C  6000 00B4               2123              BRA         endSUB              ; go to the end of the subroutine
00002580                          2124  
00002580                          2125  
00002580                          2126  ***********************************************************************************************************
00002580                          2127  * Absolute Address
00002580  B63C 0000               2128  pHex        CMP.B       #zero, D3
00002584  6700 0012               2129              BEQ         AbsShort
00002588  B63C 0001               2130              CMP.B       #one, D3
0000258C  6700 003C               2131              BEQ         AbsLong
00002590  B63C 0004               2132              CMP.B       #four, D3
00002594  6700 0066               2133              BEQ         DispImm
00002598                          2134              
00002598  43F9 00002649           2135  AbsShort    LEA         opPer, A1           ; Display space
0000259E  103C 000E               2136              MOVE.B      #14, D0             ; command for trap call to display message
000025A2  4E4F                    2137              TRAP        #15                 ; trap call
000025A4                          2138              
000025A4  43F9 00002645           2139              LEA         dispHex, A1         ; Display space
000025AA  103C 000E               2140              MOVE.B      #14, D0             ; command for trap call to display message
000025AE  4E4F                    2141              TRAP        #15                 ; trap call
000025B0                          2142              
000025B0  4241                    2143              CLR         D1
000025B2  3218                    2144              MOVE.W      (A0)+, D1
000025B4                          2145              
000025B4  103C 0003               2146              MOVE.B      #3, D0
000025B8  4E4F                    2147              TRAP        #15
000025BA                          2148              
000025BA  43F9 0000264B           2149              LEA         clPer, A1           ; Display space
000025C0  103C 000E               2150              MOVE.B      #14, D0             ; command for trap call to display message
000025C4  4E4F                    2151              TRAP        #15                 ; trap call
000025C6                          2152              
000025C6  6000 006A               2153              BRA         endSub
000025CA                          2154              
000025CA  43F9 00002649           2155  AbsLong     LEA         opPer, A1           ; Display space
000025D0  103C 000E               2156              MOVE.B      #14, D0             ; command for trap call to display message
000025D4  4E4F                    2157              TRAP        #15                 ; trap call
000025D6                          2158              
000025D6  43F9 00002645           2159              LEA         dispHex, A1         ; Display space
000025DC  103C 000E               2160              MOVE.B      #14, D0             ; command for trap call to display message
000025E0  4E4F                    2161              TRAP        #15                 ; trap call
000025E2                          2162              
000025E2  4241                    2163              CLR         D1
000025E4  2218                    2164              MOVE.L      (A0)+, D1
000025E6                          2165              
000025E6  103C 0003               2166              MOVE.B      #3, D0
000025EA  4E4F                    2167              TRAP        #15
000025EC                          2168              
000025EC  43F9 0000264B           2169              LEA         clPer, A1           ; Display space
000025F2  103C 000E               2170              MOVE.B      #14, D0             ; command for trap call to display message
000025F6  4E4F                    2171              TRAP        #15                 ; trap call
000025F8                          2172              
000025F8  6000 0038               2173              BRA         endSub
000025FC                          2174  
000025FC  43F9 00002643           2175  DispImm     LEA         hashTag, A1         ; Display space
00002602  103C 000E               2176              MOVE.B      #14, D0             ; command for trap call to display message
00002606  4E4F                    2177              TRAP        #15                 ; trap call
00002608                          2178              
00002608  4241                    2179              CLR         D1
0000260A  3218                    2180              MOVE.W      (A0)+, D1
0000260C                          2181  
0000260C  43F9 00002645           2182              LEA         dispHex, A1         ; Display space
00002612  103C 000E               2183              MOVE.B      #14, D0             ; command for trap call to display message
00002616  4E4F                    2184              TRAP        #15                 ; trap call
00002618                          2185              
00002618  103C 0003               2186              MOVE.B      #3, D0
0000261C  4E4F                    2187              TRAP        #15
0000261E                          2188  
0000261E  6000 0012               2189              BRA         endSub
00002622                          2190  
00002622                          2191  invalid
00002622                          2192  
00002622  43F9 00002718           2193              LEA         inv, A1         ; Display space
00002628  103C 000E               2194              MOVE.B      #14, D0             ; command for trap call to display message
0000262C  4E4F                    2195              TRAP        #15                 ; trap call
0000262E                          2196              
0000262E  6000 0008               2197              BRA         endProg
00002632                          2198  
00002632                          2199  endSUB
00002632                          2200          
00002632  4CDF 7EFF               2201          MOVEM.L  (SP)+, D0-D7/A1-A6
00002636  4E75                    2202          RTS
00002638                          2203  
00002638                          2204  ***********************************************************************************************************
00002638                          2205  ***********************************************************************************************************
00002638                          2206  ***********************************************************************************************************
00002638                          2207  
00002638                          2208  printInvalid
00002638                          2209  endPROG    
00002638                          2210  
00002638  FFFF FFFF               2211      SIMHALT                             ; halt simulator
0000263C                          2212  
0000263C= 20 0D 0A 00             2213  newLine     DC.B    ' ', CR, LF, 0
00002640= 20 20 00                2214  space       DC.B    '  ', 0
00002643                          2215  
00002643= 23 00                   2216  hashTag     DC.B    '#', 0
00002645= 24 00                   2217  dispHex     DC.B    '$', 0
00002647= 2C 00                   2218  comma       DC.B    ',', 0
00002649                          2219  
00002649= 28 00                   2220  opPer       DC.B    '(', 0
0000264B= 29 00                   2221  clPer       DC.B    ')', 0
0000264D= 2D 00                   2222  dec         DC.B    '-', 0
0000264F= 2B 00                   2223  inc         DC.B    '+', 0
00002651= 2F 00                   2224  slash       DC.B    '/', 0
00002653                          2225  
00002653= 28 53 50 29 00          2226  stack       DC.B    '(SP)', 0
00002658                          2227  
00002658= 4F 52 49 00             2228  ORImatch    DC.B    'ORI', 0
0000265C= 43 4D 50 49 00          2229  CMPImatch   DC.B    'CMPI', 0
00002661= 42 43 4C 52 00          2230  BCLRmatch   DC.B    'BCLR', 0
00002666= 4D 4F 56 45 00          2231  MOVEmatch   DC.B    'MOVE', 0
0000266B= 4D 4F 56 45 41 00       2232  MOVEAmatch  DC.B    'MOVEA', 0
00002671= 4E 45 47 00             2233  NEGmatch    DC.B    'NEG', 0
00002675= 52 54 53 00             2234  RTSmatch    DC.B    'RTS', 0
00002679= 4A 53 52 00             2235  JSRmatch    DC.B    'JSR', 0
0000267D= 4D 4F 56 45 4D 00       2236  MOVEMmatch  DC.B    'MOVEM', 0
00002683= 4C 45 41 00             2237  LEAmatch    DC.B    'LEA', 0
00002687= 53 55 42 51 00          2238  SUBQmatch   DC.B    'SUBQ', 0
0000268C= 42 52 41 00             2239  BRAmatch    DC.B    'BRA', 0
00002690= 42 43 53 00             2240  BCSmatch    DC.B    'BCS', 0
00002694= 42 56 43 00             2241  BVCmatch    DC.B    'BVC', 0
00002698= 42 47 45 00             2242  BGEmatch    DC.B    'BGE', 0
0000269C= 42 4C 54 00             2243  BLTmatch    DC.B    'BLT', 0
000026A0= 44 49 56 53 00          2244  DIVSmatch   DC.B    'DIVS', 0
000026A5= 4F 52 00                2245  ORmatch     DC.B    'OR', 0
000026A8= 53 55 42 00             2246  SUBmatch    DC.B    'SUB', 0
000026AC= 45 4F 52 00             2247  EORmatch    DC.B    'EOR', 0
000026B0= 43 4D 50 00             2248  CMPmatch    DC.B    'CMP', 0
000026B4= 4D 55 4C 53 00          2249  MULSmatch   DC.B    'MULS', 0
000026B9= 41 44 44 00             2250  ADDmatch    DC.B    'ADD', 0
000026BD= 41 44 44 41 00          2251  ADDAmatch   DC.B    'ADDA', 0
000026C2= 4C 53 52 00             2252  LSRmatch    DC.B    'LSR', 0
000026C6= 4C 53 4C 00             2253  LSLmatch    DC.B    'LSL', 0
000026CA= 41 53 52 00             2254  ASRmatch    DC.B    'ASR', 0
000026CE= 41 53 4C 00             2255  ASLmatch    DC.B    'ASL', 0
000026D2= 52 4F 52 00             2256  RORmatch    DC.B    'ROR', 0
000026D6= 52 4F 4C 00             2257  ROLmatch    DC.B    'ROL', 0
000026DA                          2258   
000026DA= 2E 42 00                2259  dispByte    DC.B    '.B', 0
000026DD= 2E 57 00                2260  dispWord    DC.B    '.W', 0
000026E0= 2E 4C 00                2261  dispLong    DC.B    '.L', 0
000026E3                          2262  
000026E3= 41 6E 00                2263  dispAn      DC.B    'An', 0
000026E6= 41 30 00                2264  dispA0      DC.B    'A0', 0
000026E9= 41 31 00                2265  dispA1      DC.B    'A1', 0
000026EC= 41 32 00                2266  dispA2      DC.B    'A2', 0
000026EF= 41 33 00                2267  dispA3      DC.B    'A3', 0
000026F2= 41 34 00                2268  dispA4      DC.B    'A4', 0
000026F5= 41 35 00                2269  dispA5      DC.B    'A5', 0
000026F8= 41 36 00                2270  dispA6      DC.B    'A6', 0
000026FB= 41 37 00                2271  dispA7      DC.B    'A7', 0
000026FE                          2272  
000026FE= 44 00                   2273  dispD       DC.B    'D',  0
00002700= 44 30 00                2274  dispD0      DC.B    'D0', 0
00002703= 44 31 00                2275  dispD1      DC.B    'D1', 0
00002706= 44 32 00                2276  dispD2      DC.B    'D2', 0
00002709= 44 33 00                2277  dispD3      DC.B    'D3', 0
0000270C= 44 34 00                2278  dispD4      DC.B    'D4', 0
0000270F= 44 35 00                2279  dispD5      DC.B    'D5', 0
00002712= 44 36 00                2280  dispD6      DC.B    'D6', 0
00002715= 44 37 00                2281  dispD7      DC.B    'D7', 0  
00002718                          2282  
00002718                          2283  
00002718= 49 6E 76 61 6C 69 ...   2284  inv      DC.B    'Invalid', 0  
00002720                          2285             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             25CA
ABSSHORT            2598
ADDAMATCH           26BD
ADDMATCH            26B9
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ADDR0CONT           1E2C
ADDR1CONT           1E6C
ADDR2CONT           1EAC
ADDR3CONT           1EEC
ADDR4CONT           1F2C
ADDR5CONT           1F6C
ADDR6CONT           1FAC
ADDRREG0            1E0C
ADDRREG1            1E3C
ADDRREG2            1E7C
ADDRREG3            1EBC
ADDRREG4            1EFC
ADDRREG5            1F3C
ADDRREG6            1F7C
ADDRREG7            1FBC
ASLMATCH            26CE
ASRMATCH            26CA
BCLRMATCH           2661
BCSMATCH            2690
BGEMATCH            2698
BLTMATCH            269C
BRAEIGHT            1118
BRAELEVEN           111C
BRAFIVE             10E8
BRAFOUR             10CC
BRAFOURTEEN         1120
BRAMATCH            268C
BRANINE             1118
BRAONE              10C0
BRASIX              10EC
BRATHIRTEEN         1120
BRATHREE            10C8
BRATWELVE           111C
BRATWO              10C4
BRAZERO             1090
BVCMATCH            2694
CHECKDR             1AEC
CLPER               264B
CMPIMATCH           265C
CMPMATCH            26B0
COMMA               2647
CR                  D
DATAREG0            1BB6
DATAREG1            1BE6
DATAREG2            1C26
DATAREG3            1C66
DATAREG4            1CA6
DATAREG5            1CE6
DATAREG6            1D26
DATAREG7            1D66
DEC                 264D
DISPA0              26E6
DISPA1              26E9
DISPA2              26EC
DISPA3              26EF
DISPA4              26F2
DISPA5              26F5
DISPA6              26F8
DISPA7              26FB
DISPAN              26E3
DISPBYTE            26DA
DISPD               26FE
DISPD0              2700
DISPD1              2703
DISPD2              2706
DISPD3              2709
DISPD4              270C
DISPD5              270F
DISPD6              2712
DISPD7              2715
DISPHEX             2645
DISPIMM             25FC
DISPLAYA0           2110
DISPLAYA0A          21DC
DISPLAYA0D          24A0
DISPLAYA0P          2308
DISPLAYA1           2120
DISPLAYA1A          21F8
DISPLAYA1D          24BC
DISPLAYA1P          2330
DISPLAYA2           2130
DISPLAYA2A          2214
DISPLAYA2D          24D8
DISPLAYA2P          2358
DISPLAYA3           2140
DISPLAYA3A          2230
DISPLAYA3D          24F4
DISPLAYA3P          2380
DISPLAYA4           2150
DISPLAYA4A          224C
DISPLAYA4D          2510
DISPLAYA4P          23A8
DISPLAYA5           2160
DISPLAYA5A          2268
DISPLAYA5D          252C
DISPLAYA5P          23D0
DISPLAYA6           2170
DISPLAYA6A          2284
DISPLAYA6D          2548
DISPLAYA6P          23F8
DISPLAYA7           2180
DISPLAYA7A          22A0
DISPLAYA7D          2564
DISPLAYA7P          2420
DISPLAYD0           2050
DISPLAYD1           2060
DISPLAYD2           2070
DISPLAYD3           2080
DISPLAYD4           2090
DISPLAYD5           20A0
DISPLAYD6           20B0
DISPLAYD7           20C0
DISPLONG            26E0
DISPWORD            26DD
DIVSMATCH           26A0
EIGHT               8
ELEVEN              B
ENDMOVE             1FCC
ENDMOVE1            1FD2
ENDPROG             2638
ENDSUB              2632
EORMATCH            26AC
FIFTEEN             F
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             2643
INC                 264F
INV                 2718
INVALID             2622
JSRMATCH            2679
LEAMATCH            2683
LF                  A
LOOP                100C
LSLMATCH            26C6
LSRMATCH            26C2
MASK0               0
MASK1               1
MASK2               2
MASK3               4
MASK4               8
MASK5               10
MASK6               20
MASK7               40
MASK8               80
MASKA               5
MASKB               A
MASKC               14
MASKD               28
MASKE               50
MASKF               A0
MOVEAMATCH          266B
MOVEMATCH           2666
MOVEMBRA            1AA0
MOVEML              1AD0
MOVEMMATCH          267D
MOVEMW              1AB4
MULSMATCH           26B4
NEGMATCH            2671
NEWLINE             263C
NINE                9
ONE                 1
OPASL               1A58
OPASR               1A64
OPBCLR              141A
OPBCS               1A10
OPBGE               1A28
OPBLT               1A34
OPBRA               19F8
OPBVC               1A1C
OPCMPI              12A8
OPCMPIB             12F4
OPCMPIL             13B8
OPCMPIW             1356
OPDYNBCLR           147E
OPJSR               186A
OPLEA               196C
OPLSL               1A70
OPLSR               1A7C
OPMOVEAL            1604
OPMOVEAW            16FA
OPMOVEB             14EC
OPMOVEL             1570
OPMOVEM             18E2
OPMOVEMLEA          18C6
OPMOVEW             166C
OPMULS              1A4C
OPNEG               1762
OPNEGB              1790
OPNEGL              17D0
OPNEGW              1810
OPORI               1154
OPORIB              1182
OPORIL              1246
OPORIW              11E4
OPPER               2649
OPROL               1A88
OPROR               1A94
OPRTS               18AA
OPRTSJSR            1850
OPSUB               1A40
OPSUBQ              19EC
ORIMATCH            2658
ORMATCH             26A5
PADDRDEC            2448
PADDRDIR            2190
PADDRPOST           22BC
PADDRREG            20D0
PDATAREG            2010
PHEX                2580
PRINTEA             1FD8
PRINTINVALID        2638
PRINTMEM            1D76
PRINTMEMNOW         1D7A
PRINTREGMEM         1B2A
PRINTSTACK          1B02
REG0CONT            1BD6
REG1CONT            1C16
REG2CONT            1C56
REG3CONT            1C96
REG4CONT            1CD6
REG5CONT            1D16
REG6CONT            1D56
ROLMATCH            26D6
RORMATCH            26D2
RTSMATCH            2675
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SKIPPRINTEA         195C
SLASH               2651
SPACE               2640
STACK               2653
START               1000
SUBMATCH            26A8
SUBQMATCH           2687
TEST_END            3100
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
