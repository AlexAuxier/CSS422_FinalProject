00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 11/27/2014 12:50:21 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00002000                 10  test_start  EQU     $00002000   ; defined starting address
00000000  =00002009                 11  test_end    EQU     $00002009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00002000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00002009             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 0B50                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 0080                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0078                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 008C                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0088                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00AC                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00A4                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00A0                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 0098                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 0094                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 008C                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                102          AND.B       #secNib, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 00AE                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 01FA                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                108          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 0364                109          BEQ         opBCLR
000010A6  C47C 0001                110          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                111          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 03BC                112          BEQ         opDynBCLR
000010B2  6000 0AB0                113          BRA         printInvalid
000010B6                           114          
000010B6                           115          
000010B6  6000 0422                116  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           117  
000010BA                           118  braTwo  ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BA                           119  
000010BA                           120  braThree ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BA                           121  
000010BA  4242                     122  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010BC  1401                     123          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010BE  C438 000F                124          AND.B       $0F, D2             ; set first nibble to 0
000010C2                           125   
000010C2  B43C 0004                126          CMP.B       #four, D2           ; compare second nibble to 4
000010C6  6700 0436                127          BEQ         opNEG               ; branch to NEG method
000010CA  B43C 000E                128          CMP.B       #fourteen, D2       ; compare second nibble to E
000010CE  6700 043A                129          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010D2  6000 0436                130          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010D6                           131  
000010D6  6000 0432                132  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010DA                           133  
000010DA  4242                     134  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010DC  1401                     135          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010DE  C438 000F                136          AND.B       $0F, D2             ; set first nibble to 0
000010E2                           137   
000010E2  B43C 0000                138          CMP.B       #zero, D2           ; compare second nibble to 0
000010E6  6700 042E                139          BEQ         opBRA               ; branch to BRA method
000010EA  B43C 0005                140          CMP.B       #five, D2           ; compare second nibble to 5
000010EE  6700 043E                141          BEQ         opBCS               ; branch to BCS method
000010F2  B43C 0008                142          CMP.B       #eight, D2          ; compare second nibble to 8
000010F6  6700 0442                143          BEQ         opBVC               ; branch to BCS method
000010FA  B43C 000C                144          CMP.B       #twelve, D2         ; compare second nibble to 12
000010FE  6700 0446                145          BEQ         opBGE               ; branch to BGE method
00001102  6000 044E                146          BRA         opBLT               ; otherwise, branch to BLT method
00001106                           147  
00001106                           148  braEight    ; there are two opCodes available DIVS, or OR
00001106                           149  
00001106  6000 0456                150  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000110A                           151  
0000110A                           152  braEleven   ; there are two opCodes available EOR, or CMP
0000110A                           153  
0000110A  6000 045E                154  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
0000110E                           155    
0000110E                           156  braThirteen ; there are two opCodes available ADD, or ADDA
0000110E                           157  
0000110E  4242                     158  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
00001110  1401                     159              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001112  C438 000F                160              AND.B       $0F, D2             ; set first nibble to 0
00001116                           161   
00001116  B43C 0000                162              CMP.B       #zero, D2           ; compare second nibble to 0
0000111A  6700 0466                163              BEQ         opASR               ; branch to ASR method
0000111E  B43C 0001                164              CMP.B       #one, D2            ; compare second nibble to 1
00001122  6700 0452                165              BEQ         opASL               ; branch to ASL method
00001126  B43C 0002                166              CMP.B       #two, D2            ; compare second nibble to 2
0000112A  6700 046E                167              BEQ         opLSR               ; branch to LSR method
0000112E  B43C 0003                168              CMP.B       #three, D2          ; compare second nibble to 3
00001132  6700 045A                169              BEQ         opLSL               ; branch to LSL method
00001136  B43C 0006                170              CMP.B       #six, D2            ; compare second nibble to 6
0000113A  6700 0476                171              BEQ         opROR               ; branch to ROR method
0000113E  6000 0466                172              BRA         opROL               ; otherwise, branch to ROL method
00001142                           173  
00001142  43F9 00001B7D            174  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
00001148  103C 000E                175          MOVE.B      #14, D0             ; command for trap call to display message
0000114C  4E4F                     176          TRAP        #15                 ; trap call
0000114E                           177          
0000114E  1218                     178          MOVE.B      (A0)+, D1
00001150  1401                     179          MOVE.B      D1,D2               ; copy data over
00001152  EC42                     180          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001154  B43C 0000                181          CMP.B       #zero,D2
00001158  6700 0016                182          BEQ         opORIB
0000115C  B43C 0001                183          CMP.B       #one,D2
00001160  6700 0070                184          BEQ         opORIW
00001164  B43C 0002                185          CMP.B       #two,D2
00001168  6700 00CA                186          BEQ         opORIL
0000116C                           187          
0000116C  6000 09F6                188          BRA         printInvalid
00001170                           189          
00001170  43F9 00001BFF            190  opORIB  LEA         dispByte, A1        ; Display byte
00001176  103C 000E                191          MOVE.B      #14, D0             ; command for trap call to display message
0000117A  4E4F                     192          TRAP        #15                 ; trap call
0000117C                           193          
0000117C  43F9 00001B6C            194          LEA         space, A1           ; Display space
00001182  103C 000E                195          MOVE.B      #14, D0             ; command for trap call to display message
00001186  4E4F                     196          TRAP        #15                 ; trap call
00001188                           197          
00001188  4242                     198          CLR         D2
0000118A  1401                     199          MOVE.B      D1,D2
0000118C  E642                     200          ASR         #three,D2
0000118E  C47C 0007                201          AND         #seven,D2
00001192  4243                     202          CLR         D3        
00001194  1601                     203          MOVE.B      D1,D3
00001196  C67C 0007                204          AND         #seven,D3
0000119A                           205          
0000119A  4241                     206          CLR         D1
0000119C  3218                     207          MOVE.W      (A0)+, D1
0000119E                           208          
0000119E  43F9 00001B6F            209          LEA         hashTag, A1           ; Display space
000011A4  103C 000E                210          MOVE.B      #14, D0             ; command for trap call to display message
000011A8  4E4F                     211          TRAP        #15                 ; trap call
000011AA                           212          
000011AA  103C 0003                213          MOVE.B      #3, D0
000011AE  4E4F                     214          TRAP        #15
000011B0                           215          
000011B0  43F9 00001B73            216          LEA         comma, A1           ; Display space
000011B6  103C 000E                217          MOVE.B      #14, D0             ; command for trap call to display message
000011BA  4E4F                     218          TRAP        #15                 ; trap call
000011BC                           219          
000011BC  4EB9 000015BE            220          JSR         printEA
000011C2                           221          
000011C2  43F9 00001B68            222          LEA         newLine, A1           ; Display space
000011C8  103C 000E                223          MOVE.B      #14, D0             ; command for trap call to display message
000011CC  4E4F                     224          TRAP        #15                 ; trap call
000011CE                           225          
000011CE  6000 FE3C                226          BRA         LOOP
000011D2                           227          
000011D2                           228          
000011D2  43F9 00001C02            229  opORIW  LEA         dispWord, A1        ; Display byte
000011D8  103C 000E                230          MOVE.B      #14, D0             ; command for trap call to display message
000011DC  4E4F                     231          TRAP        #15                 ; trap call
000011DE                           232          
000011DE  43F9 00001B6C            233          LEA         space, A1           ; Display space
000011E4  103C 000E                234          MOVE.B      #14, D0             ; command for trap call to display message
000011E8  4E4F                     235          TRAP        #15                 ; trap call
000011EA                           236          
000011EA  4242                     237          CLR         D2
000011EC  1401                     238          MOVE.B      D1,D2
000011EE  E642                     239          ASR         #three,D2
000011F0  C47C 0007                240          AND         #seven,D2
000011F4  4243                     241          CLR         D3        
000011F6  1601                     242          MOVE.B      D1,D3
000011F8  C67C 0007                243          AND         #seven,D3
000011FC                           244          
000011FC  4241                     245          CLR         D1
000011FE  3218                     246          MOVE.W      (A0)+, D1
00001200                           247          
00001200  43F9 00001B6F            248          LEA         hashTag, A1           ; Display space
00001206  103C 000E                249          MOVE.B      #14, D0             ; command for trap call to display message
0000120A  4E4F                     250          TRAP        #15                 ; trap call
0000120C                           251          
0000120C  103C 0003                252          MOVE.B      #3, D0
00001210  4E4F                     253          TRAP        #15
00001212                           254          
00001212  43F9 00001B73            255          LEA         comma, A1           ; Display space
00001218  103C 000E                256          MOVE.B      #14, D0             ; command for trap call to display message
0000121C  4E4F                     257          TRAP        #15                 ; trap call
0000121E                           258          
0000121E  4EB9 000015BE            259          JSR         printEA
00001224                           260          
00001224  43F9 00001B68            261          LEA         newLine, A1           ; Display space
0000122A  103C 000E                262          MOVE.B      #14, D0             ; command for trap call to display message
0000122E  4E4F                     263          TRAP        #15                 ; trap call
00001230                           264          
00001230  6000 FDDA                265          BRA         LOOP
00001234                           266       
00001234  43F9 00001C05            267  opORIL  LEA         dispLong, A1        ; Display byte
0000123A  103C 000E                268          MOVE.B      #14, D0             ; command for trap call to display message
0000123E  4E4F                     269          TRAP        #15                 ; trap call
00001240                           270          
00001240  43F9 00001B6C            271          LEA         space, A1           ; Display space
00001246  103C 000E                272          MOVE.B      #14, D0             ; command for trap call to display message
0000124A  4E4F                     273          TRAP        #15                 ; trap call
0000124C                           274          
0000124C  4242                     275          CLR         D2
0000124E  1401                     276          MOVE.B      D1,D2
00001250  E642                     277          ASR         #three,D2
00001252  C47C 0007                278          AND         #seven,D2
00001256  4243                     279          CLR         D3        
00001258  1601                     280          MOVE.B      D1,D3
0000125A  C67C 0007                281          AND         #seven,D3
0000125E                           282          
0000125E  4241                     283          CLR         D1
00001260  2218                     284          MOVE.L      (A0)+, D1
00001262                           285          
00001262  43F9 00001B6F            286          LEA         hashTag, A1           ; Display space
00001268  103C 000E                287          MOVE.B      #14, D0             ; command for trap call to display message
0000126C  4E4F                     288          TRAP        #15                 ; trap call
0000126E                           289          
0000126E  103C 0003                290          MOVE.B      #3, D0
00001272  4E4F                     291          TRAP        #15
00001274                           292          
00001274  43F9 00001B73            293          LEA         comma, A1           ; Display space
0000127A  103C 000E                294          MOVE.B      #14, D0             ; command for trap call to display message
0000127E  4E4F                     295          TRAP        #15                 ; trap call
00001280                           296          
00001280  4EB9 000015BE            297          JSR         printEA
00001286                           298          
00001286  43F9 00001B68            299          LEA         newLine, A1           ; Display space
0000128C  103C 000E                300          MOVE.B      #14, D0             ; command for trap call to display message
00001290  4E4F                     301          TRAP        #15                 ; trap call
00001292                           302          
00001292  6000 FD78                303          BRA         LOOP
00001296                           304           
00001296  43F9 00001B81            305  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000129C  103C 000E                306          MOVE.B      #14, D0             ; command for trap call to display message
000012A0  4E4F                     307          TRAP        #15                 ; trap call
000012A2                           308                  
000012A2  1218                     309          MOVE.B      (A0)+, D1
000012A4  1401                     310          MOVE.B      D1,D2               ; copy data over
000012A6  EC42                     311          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000012A8  B43C 0000                312          CMP.B       #zero,D2
000012AC  6700 0034                313          BEQ         opCMPIB
000012B0  B43C 0001                314          CMP.B       #one,D2
000012B4  6700 008E                315          BEQ         opCMPIW
000012B8  B43C 0002                316          CMP.B       #two,D2
000012BC  6700 00E8                317          BEQ         opCMPIL
000012C0                           318          
000012C0  1401                     319          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000012C2  E542                     320          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
000012C4  1802                     321          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
000012C6  4242                     322          CLR         D2                  ; Clear out data register
000012C8  1404                     323          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
000012CA  EA42                     324          ASR         #five,D2            ; Shift the register out to get just the mode
000012CC  1802                     325          MOVE.B      D2,D4               ; Store mode into D4
000012CE  4242                     326          CLR         D2
000012D0                           327          
000012D0  1401                     328          MOVE.B      D1,D2               ; Getting the EA register
000012D2  EB42                     329          ASL         #five,D2
000012D4  1A02                     330          MOVE.B      D2,D5               ; Move just the register into D5
000012D6  4242                     331          CLR         D2                  ; Clearing D2 to put data back
000012D8  1405                     332          MOVE.B      D5,D2               ; Putting back the register
000012DA  EA42                     333          ASR         #five,D2            ; Shifting bits in order to read the register
000012DC  1A02                     334          MOVE.B      D2,D5               ; Store register into D5
000012DE                           335          
000012DE  6000 FD2C                336          BRA         LOOP                ; go back to the loop
000012E2                           337  
000012E2  43F9 00001BFF            338  opCMPIB LEA         dispByte, A1        ; Display byte
000012E8  103C 000E                339          MOVE.B      #14, D0             ; command for trap call to display message
000012EC  4E4F                     340          TRAP        #15                 ; trap call
000012EE                           341          
000012EE  43F9 00001B6C            342          LEA         space, A1           ; Display space
000012F4  103C 000E                343          MOVE.B      #14, D0             ; command for trap call to display message
000012F8  4E4F                     344          TRAP        #15                 ; trap call
000012FA                           345          
000012FA  4242                     346          CLR         D2
000012FC  1401                     347          MOVE.B      D1,D2
000012FE  E642                     348          ASR         #three,D2
00001300  C47C 0007                349          AND         #seven,D2
00001304  4243                     350          CLR         D3        
00001306  1601                     351          MOVE.B      D1,D3
00001308  C67C 0007                352          AND         #seven,D3
0000130C                           353          
0000130C  4241                     354          CLR         D1
0000130E  3218                     355          MOVE.W      (A0)+, D1
00001310                           356          
00001310  43F9 00001B6F            357          LEA         hashTag, A1           ; Display space
00001316  103C 000E                358          MOVE.B      #14, D0             ; command for trap call to display message
0000131A  4E4F                     359          TRAP        #15                 ; trap call
0000131C                           360          
0000131C  103C 0003                361          MOVE.B      #3, D0
00001320  4E4F                     362          TRAP        #15
00001322                           363          
00001322  43F9 00001B73            364          LEA         comma, A1           ; Display space
00001328  103C 000E                365          MOVE.B      #14, D0             ; command for trap call to display message
0000132C  4E4F                     366          TRAP        #15                 ; trap call
0000132E                           367          
0000132E  4EB9 000015BE            368          JSR         printEA
00001334                           369          
00001334  43F9 00001B68            370          LEA         newLine, A1           ; Display space
0000133A  103C 000E                371          MOVE.B      #14, D0             ; command for trap call to display message
0000133E  4E4F                     372          TRAP        #15                 ; trap call
00001340                           373  
00001340  6000 FCCA                374          BRA         LOOP
00001344                           375  
00001344  43F9 00001C02            376  opCMPIW LEA         dispWord, A1        ; Display byte
0000134A  103C 000E                377          MOVE.B      #14, D0             ; command for trap call to display message
0000134E  4E4F                     378          TRAP        #15                 ; trap call
00001350                           379          
00001350  43F9 00001B6C            380          LEA         space, A1           ; Display space
00001356  103C 000E                381          MOVE.B      #14, D0             ; command for trap call to display message
0000135A  4E4F                     382          TRAP        #15                 ; trap call
0000135C                           383          
0000135C  4242                     384          CLR         D2
0000135E  1401                     385          MOVE.B      D1,D2
00001360  E642                     386          ASR         #three,D2
00001362  C47C 0007                387          AND         #seven,D2
00001366  4243                     388          CLR         D3        
00001368  1601                     389          MOVE.B      D1,D3
0000136A  C67C 0007                390          AND         #seven,D3
0000136E                           391          
0000136E  4241                     392          CLR         D1
00001370  3218                     393          MOVE.W      (A0)+, D1
00001372                           394          
00001372  43F9 00001B6F            395          LEA         hashTag, A1           ; Display space
00001378  103C 000E                396          MOVE.B      #14, D0             ; command for trap call to display message
0000137C  4E4F                     397          TRAP        #15                 ; trap call
0000137E                           398          
0000137E  103C 0003                399          MOVE.B      #3, D0
00001382  4E4F                     400          TRAP        #15
00001384                           401          
00001384  43F9 00001B73            402          LEA         comma, A1           ; Display space
0000138A  103C 000E                403          MOVE.B      #14, D0             ; command for trap call to display message
0000138E  4E4F                     404          TRAP        #15                 ; trap call
00001390                           405          
00001390  4EB9 000015BE            406          JSR         printEA
00001396                           407          
00001396  43F9 00001B68            408          LEA         newLine, A1           ; Display space
0000139C  103C 000E                409          MOVE.B      #14, D0             ; command for trap call to display message
000013A0  4E4F                     410          TRAP        #15                 ; trap call
000013A2  6000 FC68                411          BRA         LOOP
000013A6                           412  
000013A6  43F9 00001C05            413  opCMPIL LEA         dispLong, A1        ; Display byte
000013AC  103C 000E                414          MOVE.B      #14, D0             ; command for trap call to display message
000013B0  4E4F                     415          TRAP        #15                 ; trap call
000013B2                           416          
000013B2  43F9 00001B6C            417          LEA         space, A1           ; Display space
000013B8  103C 000E                418          MOVE.B      #14, D0             ; command for trap call to display message
000013BC  4E4F                     419          TRAP        #15                 ; trap call
000013BE                           420          
000013BE  4242                     421          CLR         D2
000013C0  1401                     422          MOVE.B      D1,D2
000013C2  E642                     423          ASR         #three,D2
000013C4  C47C 0007                424          AND         #seven,D2
000013C8  4243                     425          CLR         D3        
000013CA  1601                     426          MOVE.B      D1,D3
000013CC  C67C 0007                427          AND         #seven,D3
000013D0                           428          
000013D0  4241                     429          CLR         D1
000013D2  3218                     430          MOVE.W      (A0)+, D1
000013D4                           431          
000013D4  43F9 00001B6F            432          LEA         hashTag, A1           ; Display space
000013DA  103C 000E                433          MOVE.B      #14, D0             ; command for trap call to display message
000013DE  4E4F                     434          TRAP        #15                 ; trap call
000013E0                           435          
000013E0  103C 0003                436          MOVE.B      #3, D0
000013E4  4E4F                     437          TRAP        #15
000013E6                           438          
000013E6  43F9 00001B73            439          LEA         comma, A1           ; Display space
000013EC  103C 000E                440          MOVE.B      #14, D0             ; command for trap call to display message
000013F0  4E4F                     441          TRAP        #15                 ; trap call
000013F2                           442          
000013F2  4EB9 000015BE            443          JSR         printEA
000013F8                           444          
000013F8  43F9 00001B68            445          LEA         newLine, A1           ; Display space
000013FE  103C 000E                446          MOVE.B      #14, D0             ; command for trap call to display message
00001402  4E4F                     447          TRAP        #15                 ; trap call
00001404                           448          
00001404  6000 FC06                449          BRA         LOOP
00001408                           450  
00001408  43F9 00001B86            451  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000140E  103C 000E                452                  MOVE.B      #14, D0             ; command for trap call to display message
00001412  4E4F                     453                  TRAP        #15                 ; trap call
00001414                           454  
00001414  43F9 00001B6C            455                  LEA         space, A1           ; Display space
0000141A  103C 000E                456                  MOVE.B      #14, D0             ; command for trap call to display message
0000141E  4E4F                     457                  TRAP        #15                 ; trap call
00001420                           458                  
00001420  4242                     459                  CLR         D2
00001422  1218                     460                  MOVE.B      (A0)+, D1
00001424  1401                     461                  MOVE.B      D1,D2               ; copy data over
00001426  E642                     462                  ASR         #three,D2           ; Shift to the right to remove register
00001428  C47C 0007                463                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
0000142C                           464                  
0000142C  4243                     465                  CLR         D3                  ; Clear D3 so we can move D1 in
0000142E  1601                     466                  MOVE.B      D1,D3               ; Move othr byte in
00001430  C67C 0007                467                  AND         #seven,D3           ; Set everything besides register to 0
00001434                           468                  
00001434  4241                     469                  CLR         D1
00001436  3218                     470                  MOVE.W      (A0)+, D1
00001438                           471                 
00001438                           472                  
00001438  43F9 00001B6F            473                  LEA         hashTag, A1           ; Display space
0000143E  103C 000E                474                  MOVE.B      #14, D0             ; command for trap call to display message
00001442  4E4F                     475                  TRAP        #15                 ; trap call
00001444                           476          
00001444  103C 0003                477                  MOVE.B      #3, D0
00001448  4E4F                     478                  TRAP        #15
0000144A                           479          
0000144A  43F9 00001B73            480                  LEA         comma, A1           ; Display space
00001450  103C 000E                481                  MOVE.B      #14, D0             ; command for trap call to display message
00001454  4E4F                     482                  TRAP        #15                 ; trap call
00001456                           483                  
00001456  4EB9 000015BE            484                  JSR         printEA
0000145C                           485          
0000145C  43F9 00001B68            486                  LEA         newLine, A1           ; Display space
00001462  103C 000E                487                  MOVE.B      #14, D0             ; command for trap call to display message
00001466  4E4F                     488                  TRAP        #15                 ; trap call
00001468                           489                  
00001468                           490                  
00001468  6000 FBA2                491                  BRA         LOOP                
0000146C                           492          
0000146C                           493  opDynBCLR       
0000146C  4241                     494                  CLR         D1
0000146E  1218                     495                  MOVE.B      (A0)+,D1            ; Copy second byte in
00001470  1601                     496                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
00001472  E243                     497                  ASR         #one,D3             ; Shift register over to the end
00001474  C67C 0007                498                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
00001478                           499                  
00001478  1401                     500                  MOVE.B      D1,D2
0000147A  EC42                     501                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
0000147C  B47C 0002                502                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
00001480  6600 06E2                503                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
00001484                           504  
00001484                           505                  
00001484  43F9 00001B86            506                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
0000148A  103C 000E                507                  MOVE.B      #14, D0             ; command for trap call to display message
0000148E  4E4F                     508                  TRAP        #15                 ; trap call  
00001490                           509                  
00001490  43F9 00001B6C            510                  LEA         space, A1           ; Display space
00001496  103C 000E                511                  MOVE.B      #14, D0             ; command for trap call to display message
0000149A  4E4F                     512                  TRAP        #15                 ; trap call
0000149C                           513                  
0000149C  143C 0000                514                  MOVE.B      #zero,D2                
000014A0  4EB9 000015BE            515                  JSR         printEA
000014A6                           516                  
000014A6  43F9 00001B73            517                  LEA         comma, A1           ; Display space
000014AC  103C 000E                518                  MOVE.B      #14, D0             ; command for trap call to display message
000014B0  4E4F                     519                  TRAP        #15                 ; trap call
000014B2                           520                  
000014B2  4242                     521                  CLR         D2
000014B4  1401                     522                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000014B6  E642                     523                  ASR         #three,D2           ; Remove/shift the register out
000014B8  C47C 0007                524                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000014BC                           525                  
000014BC  4243                     526                  CLR         D3                  ; Clearing D3 to avoid mashing data
000014BE  1601                     527                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000014C0  C67C 0007                528                  AND         #seven,D3           ; Change all bits except for register bits to 0
000014C4                           529                  
000014C4                           530  
000014C4  4EB9 000015BE            531                  JSR         printEA
000014CA                           532          
000014CA  43F9 00001B68            533                  LEA         newLine, A1           ; Display space
000014D0  103C 000E                534                  MOVE.B      #14, D0             ; command for trap call to display message
000014D4  4E4F                     535                  TRAP        #15                 ; trap call            
000014D6                           536  
000014D6                           537  
000014D6  6000 FB34                538                  BRA         LOOP                ; go back to the loop
000014DA                           539   
000014DA  43F9 00001B8B            540  opMOVEB LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
000014E0  103C 000E                541          MOVE.B      #14, D0             ; command for trap call to display message
000014E4  4E4F                     542          TRAP        #15                 ; trap call
000014E6  43F9 00001BFF            543          LEA         dispByte, A1        ; display byte
000014EC  103C 000E                544          MOVE.B      #14, D0             ; command for trap call to display message
000014F0  4E4F                     545          TRAP        #15                 ; trap call
000014F2  43F9 00001B6C            546          LEA         space, A1           ; create spaces
000014F8  103C 000E                547          MOVE.B      #14, D0             ; command for trap call to display message
000014FC  4E4F                     548          TRAP        #15                 ; trap call
000014FE                           549  
000014FE  43F9 00001B96            550  opNEG   LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001504  103C 000E                551          MOVE.B      #14, D0             ; command for trap call to display message
00001508  4E4F                     552          TRAP        #15                 ; trap call
0000150A                           553  
0000150A                           554  opRTSJSR
0000150A                           555  
0000150A                           556  opMOVEMLEA
0000150A                           557  
0000150A  43F9 00001BAC            558  opSUBQ  LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
00001510  103C 000E                559          MOVE.B      #14, D0             ; command for trap call to display message
00001514  4E4F                     560          TRAP        #15                 ; trap call
00001516                           561  
00001516  43F9 00001BB1            562  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
0000151C  103C 000E                563          MOVE.B      #14, D0             ; command for trap call to display message
00001520  4E4F                     564          TRAP        #15                 ; trap call
00001522  43F9 00001B6C            565          LEA         space, A1           ; create spaces
00001528  103C 000E                566          MOVE.B      #14, D0             ; command for trap call to display message
0000152C  4E4F                     567          TRAP        #15                 ; trap call
0000152E                           568  
0000152E  43F9 00001BB5            569  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001534  103C 000E                570          MOVE.B      #14, D0             ; command for trap call to display message
00001538  4E4F                     571          TRAP        #15                 ; trap call
0000153A                           572  
0000153A  43F9 00001BB9            573  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001540  103C 000E                574          MOVE.B      #14, D0             ; command for trap call to display message
00001544  4E4F                     575          TRAP        #15                 ; trap call
00001546                           576  
00001546  43F9 00001BBD            577  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
0000154C  103C 000E                578          MOVE.B      #14, D0             ; command for trap call to display message
00001550  4E4F                     579          TRAP        #15                 ; trap call
00001552                           580  
00001552  43F9 00001BC1            581  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001558  103C 000E                582          MOVE.B      #14, D0             ; command for trap call to display message
0000155C  4E4F                     583          TRAP        #15                 ; trap call
0000155E                           584  
0000155E  43F9 00001BCD            585  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001564  103C 000E                586          MOVE.B      #14, D0             ; command for trap call to display message
00001568  4E4F                     587          TRAP        #15                 ; trap call
0000156A                           588  
0000156A  43F9 00001BD9            589  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001570  103C 000E                590          MOVE.B      #14, D0             ; command for trap call to display message
00001574  4E4F                     591          TRAP        #15                 ; trap call
00001576                           592  
00001576  43F9 00001BF3            593  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000157C  103C 000E                594          MOVE.B      #14, D0             ; command for trap call to display message
00001580  4E4F                     595          TRAP        #15                 ; trap call
00001582                           596  
00001582  43F9 00001BEF            597  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001588  103C 000E                598          MOVE.B      #14, D0             ; command for trap call to display message
0000158C  4E4F                     599          TRAP        #15                 ; trap call
0000158E                           600  
0000158E  43F9 00001BEB            601  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00001594  103C 000E                602          MOVE.B      #14, D0             ; command for trap call to display message
00001598  4E4F                     603          TRAP        #15                 ; trap call
0000159A                           604  
0000159A  43F9 00001BE7            605  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
000015A0  103C 000E                606          MOVE.B      #14, D0             ; command for trap call to display message
000015A4  4E4F                     607          TRAP        #15                 ; trap call
000015A6                           608  
000015A6  43F9 00001BFB            609  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
000015AC  103C 000E                610          MOVE.B      #14, D0             ; command for trap call to display message
000015B0  4E4F                     611          TRAP        #15                 ; trap call
000015B2                           612  
000015B2  43F9 00001BF7            613  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
000015B8  103C 000E                614          MOVE.B      #14, D0             ; command for trap call to display message
000015BC  4E4F                     615          TRAP        #15                 ; trap call
000015BE                           616  
000015BE                           617  
000015BE                           618  ***********************************************************************************************************
000015BE                           619  *
000015BE                           620  *                                           EA Print Check
000015BE                           621  *
000015BE                           622  ***********************************************************************************************************
000015BE  48E7 FFFE                623  printEA     MOVEM.L  D0-D7/A0-A6, -(SP)
000015C2                           624  
000015C2  B43C 0000                625              CMP.B       #zero, D2
000015C6  6700 0026                626              BEQ         pDataReg
000015CA  B43C 0001                627              CMP.B       #one, D2
000015CE  6700 00DE                628              BEQ         pAddrReg
000015D2  B43C 0002                629              CMP.B       #two, D2
000015D6  6700 0196                630              BEQ         pAddrDir
000015DA  B43C 0003                631              CMP.B       #three, D2
000015DE  6700 02BA                632              BEQ         pAddrPost
000015E2  B43C 0004                633              CMP.B       #four, D2
000015E6  6700 043E                634              BEQ         pAddrDec
000015EA  6000 0572                635              BRA         invalid
000015EE                           636  
000015EE                           637  ***********************************************************************************************************
000015EE                           638  * Data Register        
000015EE  B63C 0000                639  pDataReg    CMP.B   #zero,D3
000015F2  6700 003A                640              BEQ     displayD0
000015F6  B63C 0001                641              CMP.B   #one,D3
000015FA  6700 0042                642              BEQ     displayD1
000015FE  B63C 0002                643              CMP.B   #two,D3
00001602  6700 004A                644              BEQ     displayD2
00001606  B63C 0003                645              CMP.B   #three,D3
0000160A  6700 0052                646              BEQ     displayD3
0000160E  B63C 0004                647              CMP.B   #four,D3
00001612  6700 005A                648              BEQ     displayD4
00001616  B63C 0005                649              CMP.B   #five,D3
0000161A  6700 0062                650              BEQ     displayD5
0000161E  B63C 0006                651              CMP.B   #six,D3
00001622  6700 006A                652              BEQ     displayD6
00001626  B63C 0007                653              CMP.B   #seven,D3
0000162A  6700 0072                654              BEQ     displayD7
0000162E                           655              
0000162E  43F9 00001C22            656  displayD0   LEA         dispD0, A1          ; Display space
00001634  103C 000E                657              MOVE.B      #14, D0             ; command for trap call to display message
00001638  4E4F                     658              TRAP        #15                 ; trap call
0000163A  6000 0522                659              BRA         endSUB              ; go to the end of the subroutine
0000163E                           660              
0000163E  43F9 00001C25            661  displayD1   LEA         dispD1, A1          ; Display space
00001644  103C 000E                662              MOVE.B      #14, D0             ; command for trap call to display message
00001648  4E4F                     663              TRAP        #15                 ; trap call
0000164A  6000 0512                664              BRA         endSUB              ; go to the end of the subroutine
0000164E                           665  
0000164E  43F9 00001C28            666  displayD2   LEA         dispD2, A1          ; Display space
00001654  103C 000E                667              MOVE.B      #14, D0             ; command for trap call to display message
00001658  4E4F                     668              TRAP        #15                 ; trap call
0000165A  6000 0502                669              BRA         endSUB              ; go to the end of the subroutine
0000165E                           670  
0000165E  43F9 00001C2B            671  displayD3   LEA         dispD3, A1          ; Display space
00001664  103C 000E                672              MOVE.B      #14, D0             ; command for trap call to display message
00001668  4E4F                     673              TRAP        #15                 ; trap call
0000166A  6000 04F2                674              BRA         endSUB              ; go to the end of the subroutine
0000166E                           675  
0000166E  43F9 00001C2E            676  displayD4   LEA         dispD4, A1          ; Display space
00001674  103C 000E                677              MOVE.B      #14, D0             ; command for trap call to display message
00001678  4E4F                     678              TRAP        #15                 ; trap call
0000167A  6000 04E2                679              BRA         endSUB              ; go to the end of the subroutine
0000167E                           680  
0000167E  43F9 00001C31            681  displayD5   LEA         dispD5, A1          ; Display space
00001684  103C 000E                682              MOVE.B      #14, D0             ; command for trap call to display message
00001688  4E4F                     683              TRAP        #15                 ; trap call
0000168A  6000 04D2                684              BRA         endSUB              ; go to the end of the subroutine
0000168E                           685  
0000168E  43F9 00001C34            686  displayD6   LEA         dispD6, A1          ; Display space
00001694  103C 000E                687              MOVE.B      #14, D0             ; command for trap call to display message
00001698  4E4F                     688              TRAP        #15                 ; trap call
0000169A  6000 04C2                689              BRA         endSUB              ; go to the end of the subroutine
0000169E                           690  
0000169E  43F9 00001C37            691  displayD7   LEA         dispD7, A1          ; Display space
000016A4  103C 000E                692              MOVE.B      #14, D0             ; command for trap call to display message
000016A8  4E4F                     693              TRAP        #15                 ; trap call
000016AA  6000 04B2                694              BRA         endSUB              ; go to the end of the subroutine
000016AE                           695  ***********************************************************************************************************
000016AE                           696  * Address Register
000016AE  B63C 0000                697  pAddrReg    CMP.B   #zero,D3
000016B2  6700 003A                698              BEQ     displayA0
000016B6  B63C 0001                699              CMP.B   #one,D3
000016BA  6700 0042                700              BEQ     displayA1
000016BE  B63C 0002                701              CMP.B   #two,D3
000016C2  6700 004A                702              BEQ     displayA2
000016C6  B63C 0003                703              CMP.B   #three,D3
000016CA  6700 0052                704              BEQ     displayA3
000016CE  B63C 0004                705              CMP.B   #four,D3
000016D2  6700 005A                706              BEQ     displayA4
000016D6  B63C 0005                707              CMP.B   #five,D3
000016DA  6700 0062                708              BEQ     displayA5
000016DE  B63C 0006                709              CMP.B   #six,D3
000016E2  6700 006A                710              BEQ     displayA6
000016E6  B63C 0007                711              CMP.B   #seven,D3
000016EA  6700 0072                712              BEQ     displayA7
000016EE                           713              
000016EE  43F9 00001C08            714  displayA0   LEA         dispA0, A1          ; Display space
000016F4  103C 000E                715              MOVE.B      #14, D0             ; command for trap call to display message
000016F8  4E4F                     716              TRAP        #15                 ; trap call
000016FA  6000 0462                717              BRA         endSUB              ; go to the end of the subroutine
000016FE                           718              
000016FE  43F9 00001C0B            719  displayA1   LEA         dispA1, A1          ; Display space
00001704  103C 000E                720              MOVE.B      #14, D0             ; command for trap call to display message
00001708  4E4F                     721              TRAP        #15                 ; trap call
0000170A  6000 0452                722              BRA         endSUB              ; go to the end of the subroutine
0000170E                           723  
0000170E  43F9 00001C0E            724  displayA2   LEA         dispA2, A1          ; Display space
00001714  103C 000E                725              MOVE.B      #14, D0             ; command for trap call to display message
00001718  4E4F                     726              TRAP        #15                 ; trap call
0000171A  6000 0442                727              BRA         endSUB              ; go to the end of the subroutine
0000171E                           728  
0000171E  43F9 00001C11            729  displayA3   LEA         dispA3, A1          ; Display space
00001724  103C 000E                730              MOVE.B      #14, D0             ; command for trap call to display message
00001728  4E4F                     731              TRAP        #15                 ; trap call
0000172A  6000 0432                732              BRA         endSUB              ; go to the end of the subroutine
0000172E                           733  
0000172E  43F9 00001C14            734  displayA4   LEA         dispA4, A1          ; Display space
00001734  103C 000E                735              MOVE.B      #14, D0             ; command for trap call to display message
00001738  4E4F                     736              TRAP        #15                 ; trap call
0000173A  6000 0422                737              BRA         endSUB              ; go to the end of the subroutine
0000173E                           738  
0000173E  43F9 00001C17            739  displayA5   LEA         dispA5, A1          ; Display space
00001744  103C 000E                740              MOVE.B      #14, D0             ; command for trap call to display message
00001748  4E4F                     741              TRAP        #15                 ; trap call
0000174A  6000 0412                742              BRA         endSUB              ; go to the end of the subroutine
0000174E                           743  
0000174E  43F9 00001C1A            744  displayA6   LEA         dispA6, A1          ; Display space
00001754  103C 000E                745              MOVE.B      #14, D0             ; command for trap call to display message
00001758  4E4F                     746              TRAP        #15                 ; trap call
0000175A  6000 0402                747              BRA         endSUB              ; go to the end of the subroutine
0000175E                           748  
0000175E  43F9 00001C1D            749  displayA7   LEA         dispA7, A1          ; Display space
00001764  103C 000E                750              MOVE.B      #14, D0             ; command for trap call to display message
00001768  4E4F                     751              TRAP        #15                 ; trap call
0000176A  6000 03F2                752              BRA         endSUB              ; go to the end of the subroutine
0000176E                           753  
0000176E                           754  ***********************************************************************************************************
0000176E                           755  * Address Register Direct
0000176E                           756  
0000176E  43F9 00001B75            757  pAddrDir    LEA         opPer, A1           ; Display space
00001774  103C 000E                758              MOVE.B      #14, D0             ; command for trap call to display message
00001778  4E4F                     759              TRAP        #15                 ; trap call
0000177A                           760              
0000177A  B63C 0000                761              CMP.B   #zero,D3
0000177E  6700 003A                762              BEQ     displayA0A
00001782  B63C 0001                763              CMP.B   #one,D3
00001786  6700 004E                764              BEQ     displayA1A
0000178A  B63C 0002                765              CMP.B   #two,D3
0000178E  6700 0062                766              BEQ     displayA2A
00001792  B63C 0003                767              CMP.B   #three,D3
00001796  6700 0076                768              BEQ     displayA3A
0000179A  B63C 0004                769              CMP.B   #four,D3
0000179E  6700 008A                770              BEQ     displayA4A
000017A2  B63C 0005                771              CMP.B   #five,D3
000017A6  6700 009E                772              BEQ     displayA5A
000017AA  B63C 0006                773              CMP.B   #six,D3
000017AE  6700 00B2                774              BEQ     displayA6A
000017B2  B63C 0007                775              CMP.B   #seven,D3
000017B6  6700 00C6                776              BEQ     displayA7A
000017BA                           777              
000017BA  43F9 00001C08            778  displayA0A  LEA         dispA0, A1          ; Display space
000017C0  103C 000E                779              MOVE.B      #14, D0             ; command for trap call to display message
000017C4  4E4F                     780              TRAP        #15                 ; trap call
000017C6  43F9 00001B77            781              LEA         clPer, A1           ; Display space
000017CC  103C 000E                782              MOVE.B      #14, D0             ; command for trap call to display message
000017D0  4E4F                     783              TRAP        #15                 ; trap call
000017D2  6000 038A                784              BRA         endSUB              ; go to the end of the subroutine
000017D6                           785              
000017D6  43F9 00001C0B            786  displayA1A  LEA         dispA1, A1          ; Display space
000017DC  103C 000E                787              MOVE.B      #14, D0             ; command for trap call to display message
000017E0  4E4F                     788              TRAP        #15                 ; trap call
000017E2  43F9 00001B77            789              LEA         clPer, A1           ; Display space
000017E8  103C 000E                790              MOVE.B      #14, D0             ; command for trap call to display message
000017EC  4E4F                     791              TRAP        #15                 ; trap call
000017EE  6000 036E                792              BRA         endSUB              ; go to the end of the subroutine
000017F2                           793  
000017F2  43F9 00001C0E            794  displayA2A  LEA         dispA2, A1          ; Display space
000017F8  103C 000E                795              MOVE.B      #14, D0             ; command for trap call to display message
000017FC  4E4F                     796              TRAP        #15                 ; trap call
000017FE  43F9 00001B77            797              LEA         clPer, A1           ; Display space
00001804  103C 000E                798              MOVE.B      #14, D0             ; command for trap call to display message
00001808  4E4F                     799              TRAP        #15                 ; trap call
0000180A  6000 0352                800              BRA         endSUB              ; go to the end of the subroutine
0000180E                           801  
0000180E  43F9 00001C11            802  displayA3A  LEA         dispA3, A1          ; Display space
00001814  103C 000E                803              MOVE.B      #14, D0             ; command for trap call to display message
00001818  4E4F                     804              TRAP        #15                 ; trap call
0000181A  43F9 00001B77            805              LEA         clPer, A1           ; Display space
00001820  103C 000E                806              MOVE.B      #14, D0             ; command for trap call to display message
00001824  4E4F                     807              TRAP        #15                 ; trap call
00001826  6000 0336                808              BRA         endSUB              ; go to the end of the subroutine
0000182A                           809  
0000182A  43F9 00001C14            810  displayA4A  LEA         dispA4, A1          ; Display space
00001830  103C 000E                811              MOVE.B      #14, D0             ; command for trap call to display message
00001834  4E4F                     812              TRAP        #15                 ; trap call
00001836  43F9 00001B77            813              LEA         clPer, A1           ; Display space
0000183C  103C 000E                814              MOVE.B      #14, D0             ; command for trap call to display message
00001840  4E4F                     815              TRAP        #15                 ; trap call
00001842  6000 031A                816              BRA         endSUB              ; go to the end of the subroutine
00001846                           817  
00001846  43F9 00001C17            818  displayA5A  LEA         dispA5, A1          ; Display space
0000184C  103C 000E                819              MOVE.B      #14, D0             ; command for trap call to display message
00001850  4E4F                     820              TRAP        #15                 ; trap call
00001852  43F9 00001B77            821              LEA         clPer, A1           ; Display space
00001858  103C 000E                822              MOVE.B      #14, D0             ; command for trap call to display message
0000185C  4E4F                     823              TRAP        #15                 ; trap call
0000185E  6000 02FE                824              BRA         endSUB              ; go to the end of the subroutine
00001862                           825  
00001862  43F9 00001C1A            826  displayA6A  LEA         dispA6, A1          ; Display space
00001868  103C 000E                827              MOVE.B      #14, D0             ; command for trap call to display message
0000186C  4E4F                     828              TRAP        #15                 ; trap call
0000186E  43F9 00001B77            829              LEA         clPer, A1           ; Display space
00001874  103C 000E                830              MOVE.B      #14, D0             ; command for trap call to display message
00001878  4E4F                     831              TRAP        #15                 ; trap call
0000187A  6000 02E2                832              BRA         endSUB              ; go to the end of the subroutine
0000187E                           833  
0000187E  43F9 00001C1D            834  displayA7A  LEA         dispA7, A1          ; Display space
00001884  103C 000E                835              MOVE.B      #14, D0             ; command for trap call to display message
00001888  4E4F                     836              TRAP        #15                 ; trap call
0000188A  43F9 00001B77            837              LEA         clPer, A1           ; Display space
00001890  103C 000E                838              MOVE.B      #14, D0             ; command for trap call to display message
00001894  4E4F                     839              TRAP        #15                 ; trap call
00001896  6000 02C6                840              BRA         endSUB              ; go to the end of the subroutine
0000189A                           841              
0000189A                           842  ***********************************************************************************************************
0000189A                           843  * Addr Postincrement
0000189A                           844              
0000189A  43F9 00001B75            845  pAddrPost   LEA         opPer, A1           ; Display space
000018A0  103C 000E                846              MOVE.B      #14, D0             ; command for trap call to display message
000018A4  4E4F                     847              TRAP        #15                 ; trap call
000018A6                           848              
000018A6  B63C 0000                849              CMP.B   #zero,D3
000018AA  6700 003A                850              BEQ     displayA0P
000018AE  B63C 0001                851              CMP.B   #one,D3
000018B2  6700 005A                852              BEQ     displayA1P
000018B6  B63C 0002                853              CMP.B   #two,D3
000018BA  6700 007A                854              BEQ     displayA2P
000018BE  B63C 0003                855              CMP.B   #three,D3
000018C2  6700 009A                856              BEQ     displayA3P
000018C6  B63C 0004                857              CMP.B   #four,D3
000018CA  6700 00BA                858              BEQ     displayA4P
000018CE  B63C 0005                859              CMP.B   #five,D3
000018D2  6700 00DA                860              BEQ     displayA5P
000018D6  B63C 0006                861              CMP.B   #six,D3
000018DA  6700 00FA                862              BEQ     displayA6P
000018DE  B63C 0007                863              CMP.B   #seven,D3
000018E2  6700 011A                864              BEQ     displayA7P
000018E6                           865              
000018E6  43F9 00001C08            866  displayA0P  LEA         dispA0, A1          ; Display space
000018EC  103C 000E                867              MOVE.B      #14, D0             ; command for trap call to display message
000018F0  4E4F                     868              TRAP        #15                 ; trap call
000018F2  43F9 00001B77            869              LEA         clPer, A1           ; Display space
000018F8  103C 000E                870              MOVE.B      #14, D0             ; command for trap call to display message
000018FC  4E4F                     871              TRAP        #15                 ; trap call
000018FE  43F9 00001B7B            872              LEA         inc, A1             ; Display space
00001904  103C 000E                873              MOVE.B      #14, D0             ; command for trap call to display message
00001908  4E4F                     874              TRAP        #15                 ; trap call
0000190A  6000 0252                875              BRA         endSUB              ; go to the end of the subroutine
0000190E                           876              
0000190E  43F9 00001C0B            877  displayA1P  LEA         dispA1, A1          ; Display space
00001914  103C 000E                878              MOVE.B      #14, D0             ; command for trap call to display message
00001918  4E4F                     879              TRAP        #15                 ; trap call
0000191A  43F9 00001B77            880              LEA         clPer, A1           ; Display space
00001920  103C 000E                881              MOVE.B      #14, D0             ; command for trap call to display message
00001924  4E4F                     882              TRAP        #15                 ; trap call
00001926  43F9 00001B7B            883              LEA         inc, A1             ; Display space
0000192C  103C 000E                884              MOVE.B      #14, D0             ; command for trap call to display message
00001930  4E4F                     885              TRAP        #15                 ; trap call
00001932  6000 022A                886              BRA         endSUB              ; go to the end of the subroutine
00001936                           887  
00001936  43F9 00001C0E            888  displayA2P  LEA         dispA2, A1          ; Display space
0000193C  103C 000E                889              MOVE.B      #14, D0             ; command for trap call to display message
00001940  4E4F                     890              TRAP        #15                 ; trap call
00001942  43F9 00001B77            891              LEA         clPer, A1           ; Display space
00001948  103C 000E                892              MOVE.B      #14, D0             ; command for trap call to display message
0000194C  4E4F                     893              TRAP        #15                 ; trap call
0000194E  43F9 00001B7B            894              LEA         inc, A1             ; Display space
00001954  103C 000E                895              MOVE.B      #14, D0             ; command for trap call to display message
00001958  4E4F                     896              TRAP        #15                 ; trap call
0000195A  6000 0202                897              BRA         endSUB              ; go to the end of the subroutine
0000195E                           898  
0000195E  43F9 00001C11            899  displayA3P  LEA         dispA3, A1          ; Display space
00001964  103C 000E                900              MOVE.B      #14, D0             ; command for trap call to display message
00001968  4E4F                     901              TRAP        #15                 ; trap call
0000196A  43F9 00001B77            902              LEA         clPer, A1           ; Display space
00001970  103C 000E                903              MOVE.B      #14, D0             ; command for trap call to display message
00001974  4E4F                     904              TRAP        #15                 ; trap call
00001976  43F9 00001B7B            905              LEA         inc, A1             ; Display space
0000197C  103C 000E                906              MOVE.B      #14, D0             ; command for trap call to display message
00001980  4E4F                     907              TRAP        #15                 ; trap call
00001982  6000 01DA                908              BRA         endSUB              ; go to the end of the subroutine
00001986                           909  
00001986  43F9 00001C14            910  displayA4P  LEA         dispA4, A1          ; Display space
0000198C  103C 000E                911              MOVE.B      #14, D0             ; command for trap call to display message
00001990  4E4F                     912              TRAP        #15                 ; trap call
00001992  43F9 00001B77            913              LEA         clPer, A1           ; Display space
00001998  103C 000E                914              MOVE.B      #14, D0             ; command for trap call to display message
0000199C  4E4F                     915              TRAP        #15                 ; trap call
0000199E  43F9 00001B7B            916              LEA         inc, A1             ; Display space
000019A4  103C 000E                917              MOVE.B      #14, D0             ; command for trap call to display message
000019A8  4E4F                     918              TRAP        #15                 ; trap call
000019AA  6000 01B2                919              BRA         endSUB              ; go to the end of the subroutine
000019AE                           920  
000019AE  43F9 00001C17            921  displayA5P  LEA         dispA5, A1          ; Display space
000019B4  103C 000E                922              MOVE.B      #14, D0             ; command for trap call to display message
000019B8  4E4F                     923              TRAP        #15                 ; trap call
000019BA  43F9 00001B77            924              LEA         clPer, A1           ; Display space
000019C0  103C 000E                925              MOVE.B      #14, D0             ; command for trap call to display message
000019C4  4E4F                     926              TRAP        #15                 ; trap call
000019C6  43F9 00001B7B            927              LEA         inc, A1             ; Display space
000019CC  103C 000E                928              MOVE.B      #14, D0             ; command for trap call to display message
000019D0  4E4F                     929              TRAP        #15                 ; trap call
000019D2  6000 018A                930              BRA         endSUB              ; go to the end of the subroutine
000019D6                           931  
000019D6  43F9 00001C1A            932  displayA6P  LEA         dispA6, A1          ; Display space
000019DC  103C 000E                933              MOVE.B      #14, D0             ; command for trap call to display message
000019E0  4E4F                     934              TRAP        #15                 ; trap call
000019E2  43F9 00001B77            935              LEA         clPer, A1           ; Display space
000019E8  103C 000E                936              MOVE.B      #14, D0             ; command for trap call to display message
000019EC  4E4F                     937              TRAP        #15                 ; trap call
000019EE  43F9 00001B7B            938              LEA         inc, A1             ; Display space
000019F4  103C 000E                939              MOVE.B      #14, D0             ; command for trap call to display message
000019F8  4E4F                     940              TRAP        #15                 ; trap call
000019FA  6000 0162                941              BRA         endSUB              ; go to the end of the subroutine
000019FE                           942  
000019FE  43F9 00001C1D            943  displayA7P  LEA         dispA7, A1          ; Display space
00001A04  103C 000E                944              MOVE.B      #14, D0             ; command for trap call to display message
00001A08  4E4F                     945              TRAP        #15                 ; trap call
00001A0A  43F9 00001B77            946              LEA         clPer, A1           ; Display space
00001A10  103C 000E                947              MOVE.B      #14, D0             ; command for trap call to display message
00001A14  4E4F                     948              TRAP        #15                 ; trap call
00001A16  43F9 00001B7B            949              LEA         inc, A1             ; Display space
00001A1C  103C 000E                950              MOVE.B      #14, D0             ; command for trap call to display message
00001A20  4E4F                     951              TRAP        #15                 ; trap call
00001A22  6000 013A                952              BRA         endSUB              ; go to the end of the subroutine
00001A26                           953  
00001A26                           954  ***********************************************************************************************************
00001A26                           955  * Addr Postdecrement
00001A26                           956  
00001A26  43F9 00001B79            957  pAddrDec    LEA         dec, A1             ; Display space
00001A2C  103C 000E                958              MOVE.B      #14, D0             ; command for trap call to display message
00001A30  4E4F                     959              TRAP        #15                 ; trap call
00001A32                           960              
00001A32  43F9 00001B75            961              LEA         opPer, A1           ; Display space
00001A38  103C 000E                962              MOVE.B      #14, D0             ; command for trap call to display message
00001A3C  4E4F                     963              TRAP        #15                 ; trap call
00001A3E                           964              
00001A3E  B63C 0000                965              CMP.B   #zero,D3
00001A42  6700 003A                966              BEQ     displayA0D
00001A46  B63C 0001                967              CMP.B   #one,D3
00001A4A  6700 004E                968              BEQ     displayA1D
00001A4E  B63C 0002                969              CMP.B   #two,D3
00001A52  6700 0062                970              BEQ     displayA2D
00001A56  B63C 0003                971              CMP.B   #three,D3
00001A5A  6700 0076                972              BEQ     displayA3D
00001A5E  B63C 0004                973              CMP.B   #four,D3
00001A62  6700 008A                974              BEQ     displayA4D
00001A66  B63C 0005                975              CMP.B   #five,D3
00001A6A  6700 009E                976              BEQ     displayA5D
00001A6E  B63C 0006                977              CMP.B   #six,D3
00001A72  6700 00B2                978              BEQ     displayA6D
00001A76  B63C 0007                979              CMP.B   #seven,D3
00001A7A  6700 00C6                980              BEQ     displayA7D
00001A7E                           981              
00001A7E  43F9 00001C08            982  displayA0D  LEA         dispA0, A1          ; Display space
00001A84  103C 000E                983              MOVE.B      #14, D0             ; command for trap call to display message
00001A88  4E4F                     984              TRAP        #15                 ; trap call
00001A8A  43F9 00001B77            985              LEA         clPer, A1           ; Display space
00001A90  103C 000E                986              MOVE.B      #14, D0             ; command for trap call to display message
00001A94  4E4F                     987              TRAP        #15                 ; trap call
00001A96  6000 00C6                988              BRA         endSUB              ; go to the end of the subroutine
00001A9A                           989              
00001A9A  43F9 00001C0B            990  displayA1D  LEA         dispA1, A1          ; Display space
00001AA0  103C 000E                991              MOVE.B      #14, D0             ; command for trap call to display message
00001AA4  4E4F                     992              TRAP        #15                 ; trap call
00001AA6  43F9 00001B77            993              LEA         clPer, A1           ; Display space
00001AAC  103C 000E                994              MOVE.B      #14, D0             ; command for trap call to display message
00001AB0  4E4F                     995              TRAP        #15                 ; trap call
00001AB2  6000 00AA                996              BRA         endSUB              ; go to the end of the subroutine
00001AB6                           997  
00001AB6  43F9 00001C0E            998  displayA2D  LEA         dispA2, A1          ; Display space
00001ABC  103C 000E                999              MOVE.B      #14, D0             ; command for trap call to display message
00001AC0  4E4F                    1000              TRAP        #15                 ; trap call
00001AC2  43F9 00001B77           1001              LEA         clPer, A1           ; Display space
00001AC8  103C 000E               1002              MOVE.B      #14, D0             ; command for trap call to display message
00001ACC  4E4F                    1003              TRAP        #15                 ; trap call
00001ACE  6000 008E               1004              BRA         endSUB              ; go to the end of the subroutine
00001AD2                          1005  
00001AD2  43F9 00001C11           1006  displayA3D  LEA         dispA3, A1          ; Display space
00001AD8  103C 000E               1007              MOVE.B      #14, D0             ; command for trap call to display message
00001ADC  4E4F                    1008              TRAP        #15                 ; trap call
00001ADE  43F9 00001B77           1009              LEA         clPer, A1           ; Display space
00001AE4  103C 000E               1010              MOVE.B      #14, D0             ; command for trap call to display message
00001AE8  4E4F                    1011              TRAP        #15                 ; trap call
00001AEA  6000 0072               1012              BRA         endSUB              ; go to the end of the subroutine
00001AEE                          1013  
00001AEE  43F9 00001C14           1014  displayA4D  LEA         dispA4, A1          ; Display space
00001AF4  103C 000E               1015              MOVE.B      #14, D0             ; command for trap call to display message
00001AF8  4E4F                    1016              TRAP        #15                 ; trap call
00001AFA  43F9 00001B77           1017              LEA         clPer, A1           ; Display space
00001B00  103C 000E               1018              MOVE.B      #14, D0             ; command for trap call to display message
00001B04  4E4F                    1019              TRAP        #15                 ; trap call
00001B06  6000 0056               1020              BRA         endSUB              ; go to the end of the subroutine
00001B0A                          1021  
00001B0A  43F9 00001C17           1022  displayA5D  LEA         dispA5, A1          ; Display space
00001B10  103C 000E               1023              MOVE.B      #14, D0             ; command for trap call to display message
00001B14  4E4F                    1024              TRAP        #15                 ; trap call
00001B16  43F9 00001B77           1025              LEA         clPer, A1           ; Display space
00001B1C  103C 000E               1026              MOVE.B      #14, D0             ; command for trap call to display message
00001B20  4E4F                    1027              TRAP        #15                 ; trap call
00001B22  6000 003A               1028              BRA         endSUB              ; go to the end of the subroutine
00001B26                          1029  
00001B26  43F9 00001C1A           1030  displayA6D  LEA         dispA6, A1          ; Display space
00001B2C  103C 000E               1031              MOVE.B      #14, D0             ; command for trap call to display message
00001B30  4E4F                    1032              TRAP        #15                 ; trap call
00001B32  43F9 00001B77           1033              LEA         clPer, A1           ; Display space
00001B38  103C 000E               1034              MOVE.B      #14, D0             ; command for trap call to display message
00001B3C  4E4F                    1035              TRAP        #15                 ; trap call
00001B3E  6000 001E               1036              BRA         endSUB              ; go to the end of the subroutine
00001B42                          1037  
00001B42  43F9 00001C1D           1038  displayA7D  LEA         dispA7, A1          ; Display space
00001B48  103C 000E               1039              MOVE.B      #14, D0             ; command for trap call to display message
00001B4C  4E4F                    1040              TRAP        #15                 ; trap call
00001B4E  43F9 00001B77           1041              LEA         clPer, A1           ; Display space
00001B54  103C 000E               1042              MOVE.B      #14, D0             ; command for trap call to display message
00001B58  4E4F                    1043              TRAP        #15                 ; trap call
00001B5A  6000 0002               1044              BRA         endSUB              ; go to the end of the subroutine
00001B5E                          1045  
00001B5E                          1046  
00001B5E                          1047  invalid
00001B5E                          1048  
00001B5E                          1049  endSUB
00001B5E                          1050          
00001B5E  4CDF 7FFF               1051          MOVEM.L  (SP)+, D0-D7/A0-A6
00001B62  4E75                    1052          RTS
00001B64                          1053  
00001B64                          1054  ***********************************************************************************************************
00001B64                          1055  ***********************************************************************************************************
00001B64                          1056  ***********************************************************************************************************
00001B64                          1057  
00001B64                          1058  printInvalid
00001B64                          1059  endPROG    
00001B64                          1060  
00001B64  FFFF FFFF               1061      SIMHALT                             ; halt simulator
00001B68                          1062  
00001B68= 20 0D 0A 00             1063  newLine     DC.B    ' ', CR, LF, 0
00001B6C= 20 20 00                1064  space       DC.B    '  ', 0
00001B6F                          1065  
00001B6F= 23 00                   1066  hashTag     DC.B    '#', 0
00001B71= 24 00                   1067  dispHex     DC.B    '$', 0
00001B73= 2C 00                   1068  comma       DC.B    ',', 0
00001B75                          1069  
00001B75= 28 00                   1070  opPer       DC.B    '(', 0
00001B77= 29 00                   1071  clPer       DC.B    ')', 0
00001B79= 2D 00                   1072  dec         DC.B    '-', 0
00001B7B= 2B 00                   1073  inc         DC.B    '+', 0
00001B7D                          1074  
00001B7D= 4F 52 49 00             1075  ORImatch    DC.B    'ORI', 0
00001B81= 43 4D 50 49 00          1076  CMPImatch   DC.B    'CMPI', 0
00001B86= 42 43 4C 52 00          1077  BCLRmatch   DC.B    'BCLR', 0
00001B8B= 4D 4F 56 45 00          1078  MOVEmatch   DC.B    'MOVE', 0
00001B90= 4D 4F 56 45 41 00       1079  MOVEAmatch  DC.B    'MOVEA', 0
00001B96= 4E 45 47 00             1080  NEGmatch    DC.B    'NEG', 0
00001B9A= 52 54 53 00             1081  RTSmatch    DC.B    'RTS', 0
00001B9E= 4A 53 52 00             1082  JSRmatch    DC.B    'JSR', 0
00001BA2= 4D 4F 56 45 4D 00       1083  MOVEMmatch  DC.B    'MOVEM', 0
00001BA8= 4C 45 41 00             1084  LEAmatch    DC.B    'LEA', 0
00001BAC= 53 55 42 51 00          1085  SUBQmatch   DC.B    'SUBQ', 0
00001BB1= 42 52 41 00             1086  BRAmatch    DC.B    'BRA', 0
00001BB5= 42 43 53 00             1087  BCSmatch    DC.B    'BCS', 0
00001BB9= 42 56 43 00             1088  BVCmatch    DC.B    'BVC', 0
00001BBD= 42 47 45 00             1089  BGEmatch    DC.B    'BGE', 0
00001BC1= 42 4C 54 00             1090  BLTmatch    DC.B    'BLT', 0
00001BC5= 44 49 56 53 00          1091  DIVSmatch   DC.B    'DIVS', 0
00001BCA= 4F 52 00                1092  ORmatch     DC.B    'OR', 0
00001BCD= 53 55 42 00             1093  SUBmatch    DC.B    'SUB', 0
00001BD1= 45 4F 52 00             1094  EORmatch    DC.B    'EOR', 0
00001BD5= 43 4D 50 00             1095  CMPmatch    DC.B    'CMP', 0
00001BD9= 4D 55 4C 53 00          1096  MULSmatch   DC.B    'MULS', 0
00001BDE= 41 44 44 00             1097  ADDmatch    DC.B    'ADD', 0
00001BE2= 41 44 44 41 00          1098  ADDAmatch   DC.B    'ADDA', 0
00001BE7= 4C 53 52 00             1099  LSRmatch    DC.B    'LSR', 0
00001BEB= 4C 53 4C 00             1100  LSLmatch    DC.B    'LSL', 0
00001BEF= 41 53 52 00             1101  ASRmatch    DC.B    'ASR', 0
00001BF3= 41 53 4C 00             1102  ASLmatch    DC.B    'ASL', 0
00001BF7= 52 4F 52 00             1103  RORmatch    DC.B    'ROR', 0
00001BFB= 52 4F 4C 00             1104  ROLmatch    DC.B    'ROL', 0
00001BFF                          1105   
00001BFF= 2E 42 00                1106  dispByte    DC.B    '.B', 0
00001C02= 2E 57 00                1107  dispWord    DC.B    '.W', 0
00001C05= 2E 4C 00                1108  dispLong    DC.B    '.L', 0
00001C08                          1109  
00001C08= 41 30 00                1110  dispA0      DC.B    'A0', 0
00001C0B= 41 31 00                1111  dispA1      DC.B    'A1', 0
00001C0E= 41 32 00                1112  dispA2      DC.B    'A2', 0
00001C11= 41 33 00                1113  dispA3      DC.B    'A3', 0
00001C14= 41 34 00                1114  dispA4      DC.B    'A4', 0
00001C17= 41 35 00                1115  dispA5      DC.B    'A5', 0
00001C1A= 41 36 00                1116  dispA6      DC.B    'A6', 0
00001C1D= 41 37 00                1117  dispA7      DC.B    'A7', 0
00001C20                          1118  
00001C20= 44 00                   1119  dispD       DC.B    'D',0
00001C22= 44 30 00                1120  dispD0      DC.B    'D0', 0
00001C25= 44 31 00                1121  dispD1      DC.B    'D1', 0
00001C28= 44 32 00                1122  dispD2      DC.B    'D2', 0
00001C2B= 44 33 00                1123  dispD3      DC.B    'D3', 0
00001C2E= 44 34 00                1124  dispD4      DC.B    'D4', 0
00001C31= 44 35 00                1125  dispD5      DC.B    'D5', 0
00001C34= 44 36 00                1126  dispD6      DC.B    'D6', 0
00001C37= 44 37 00                1127  dispD7      DC.B    'D7', 0  
00001C3A                          1128             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAMATCH           1BE2
ADDMATCH            1BDE
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            1BF3
ASRMATCH            1BEF
BCLRMATCH           1B86
BCSMATCH            1BB5
BGEMATCH            1BBD
BLTMATCH            1BC1
BRAEIGHT            1106
BRAELEVEN           110A
BRAFIVE             10D6
BRAFOUR             10BA
BRAFOURTEEN         110E
BRAMATCH            1BB1
BRANINE             1106
BRAONE              10B6
BRASIX              10DA
BRATHIRTEEN         110E
BRATHREE            10BA
BRATWELVE           110A
BRATWO              10BA
BRAZERO             1086
BVCMATCH            1BB9
CLPER               1B77
CMPIMATCH           1B81
CMPMATCH            1BD5
COMMA               1B73
CR                  D
DEC                 1B79
DISPA0              1C08
DISPA1              1C0B
DISPA2              1C0E
DISPA3              1C11
DISPA4              1C14
DISPA5              1C17
DISPA6              1C1A
DISPA7              1C1D
DISPBYTE            1BFF
DISPD               1C20
DISPD0              1C22
DISPD1              1C25
DISPD2              1C28
DISPD3              1C2B
DISPD4              1C2E
DISPD5              1C31
DISPD6              1C34
DISPD7              1C37
DISPHEX             1B71
DISPLAYA0           16EE
DISPLAYA0A          17BA
DISPLAYA0D          1A7E
DISPLAYA0P          18E6
DISPLAYA1           16FE
DISPLAYA1A          17D6
DISPLAYA1D          1A9A
DISPLAYA1P          190E
DISPLAYA2           170E
DISPLAYA2A          17F2
DISPLAYA2D          1AB6
DISPLAYA2P          1936
DISPLAYA3           171E
DISPLAYA3A          180E
DISPLAYA3D          1AD2
DISPLAYA3P          195E
DISPLAYA4           172E
DISPLAYA4A          182A
DISPLAYA4D          1AEE
DISPLAYA4P          1986
DISPLAYA5           173E
DISPLAYA5A          1846
DISPLAYA5D          1B0A
DISPLAYA5P          19AE
DISPLAYA6           174E
DISPLAYA6A          1862
DISPLAYA6D          1B26
DISPLAYA6P          19D6
DISPLAYA7           175E
DISPLAYA7A          187E
DISPLAYA7D          1B42
DISPLAYA7P          19FE
DISPLAYD0           162E
DISPLAYD1           163E
DISPLAYD2           164E
DISPLAYD3           165E
DISPLAYD4           166E
DISPLAYD5           167E
DISPLAYD6           168E
DISPLAYD7           169E
DISPLONG            1C05
DISPWORD            1C02
DIVSMATCH           1BC5
EIGHT               8
ELEVEN              B
ENDPROG             1B64
ENDSUB              1B5E
EORMATCH            1BD1
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             1B6F
INC                 1B7B
INVALID             1B5E
JSRMATCH            1B9E
LEAMATCH            1BA8
LF                  A
LOOP                100C
LSLMATCH            1BEB
LSRMATCH            1BE7
MOVEAMATCH          1B90
MOVEMATCH           1B8B
MOVEMMATCH          1BA2
MULSMATCH           1BD9
NEGMATCH            1B96
NEWLINE             1B68
NINE                9
ONE                 1
OPASL               1576
OPASR               1582
OPBCLR              1408
OPBCS               152E
OPBGE               1546
OPBLT               1552
OPBRA               1516
OPBVC               153A
OPCMPI              1296
OPCMPIB             12E2
OPCMPIL             13A6
OPCMPIW             1344
OPDYNBCLR           146C
OPLSL               158E
OPLSR               159A
OPMOVEB             14DA
OPMOVEMLEA          150A
OPMULS              156A
OPNEG               14FE
OPORI               1142
OPORIB              1170
OPORIL              1234
OPORIW              11D2
OPPER               1B75
OPROL               15A6
OPROR               15B2
OPRTSJSR            150A
OPSUB               155E
OPSUBQ              150A
ORIMATCH            1B7D
ORMATCH             1BCA
PADDRDEC            1A26
PADDRDIR            176E
PADDRPOST           189A
PADDRREG            16AE
PDATAREG            15EE
PRINTEA             15BE
PRINTINVALID        1B64
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
ROLMATCH            1BFB
RORMATCH            1BF7
RTSMATCH            1B9A
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               1B6C
START               1000
SUBMATCH            1BCD
SUBQMATCH           1BAC
TEST_END            2009
TEST_START          2000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
