00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 2014-12-07 16:30:29

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Motorola 68k Disassembler
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =00003009                 11  test_end    EQU     $00003009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00003000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00003009             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 1492                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 0084                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0080                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 0094                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0090                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00B4                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00C6                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00C2                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00D4                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 00D0                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 00C8                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                102          AND.B       #secNib, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 051E                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 066A                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                108          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 07D4                109          BEQ         opBCLR
000010A6  C47C 0001                110          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                111          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 082C                112          BEQ         opDynBCLR
000010B2  6000 13F2                113          BRA         printInvalid
000010B6                           114          
000010B6                           115          
000010B6  6000 0892                116  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           117  
000010BA  6000 0912                118  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BE                           119  
000010BE                           120  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BE                           121  
000010BE  6000 0A08                122          BRA         opMOVEW
000010C2                           123  
000010C2  4242                     124  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010C4  1401                     125          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010C6  C43C 000F                126          AND.B       #secNib, D2             ; set first nibble to 0
000010CA                           127   
000010CA  B43C 0004                128          CMP.B       #four, D2           ; compare second nibble to 4
000010CE  6700 0AF2                129          BEQ         opNEG               ; branch to NEG method
000010D2  B43C 000E                130          CMP.B       #fourteen, D2       ; compare second nibble to E
000010D6  6700 0BD8                131          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010DA  6000 0C4A                132          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010DE                           133  
000010DE  6000 0C7A                134  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010E2                           135  
000010E2  4242                     136  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010E4  1401                     137          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010E6  C43C 000F                138          AND.B       #$0F, D2             ; set first nibble to 0
000010EA                           139   
000010EA  B43C 0000                140          CMP.B       #zero, D2           ; compare second nibble to 0
000010EE  6700 0C76                141          BEQ         opBRA               ; branch to BRA method
000010F2  B43C 0005                142          CMP.B       #five, D2           ; compare second nibble to 5
000010F6  6700 0CA6                143          BEQ         opBCS               ; branch to BCS method
000010FA  B43C 0008                144          CMP.B       #eight, D2          ; compare second nibble to 8
000010FE  6700 0CAA                145          BEQ         opBVC               ; branch to BCS method
00001102  B43C 000C                146          CMP.B       #twelve, D2         ; compare second nibble to 12
00001106  6700 0CAE                147          BEQ         opBGE               ; branch to BGE method
0000110A  6000 0CB6                148          BRA         opBLT               ; otherwise, branch to BLT method
0000110E                           149  
0000110E                           150  braEight                                ; there are two opCodes available DIVS, or OR
0000110E  4242                     151              CLR     D2
00001110  E141                     152              ASL     #8,D1
00001112  1218                     153              MOVE.B  (A0)+,D1
00001114  3401                     154              MOVE.W  D1,D2
00001116  EC42                     155              ASR     #six,D2
00001118  C47C 0007                156              AND     #$07,D2
0000111C  B43C 0007                157              CMP.B   #seven,D2
00001120  6700 01B4                158              BEQ     opDIVS              ; If bits 8 - 6 are equal to 7, we have DIVS
00001124  6000 005E                159              BRA     opOR                ; else opcode is OR
00001128                           160  
00001128  6000 0CA4                161  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000112C                           162  
0000112C                           163  braEleven                               ; there are two opCodes available EOR, or CMP
0000112C  4242                     164              CLR     D2
0000112E  E141                     165              ASL     #8,D1
00001130  1218                     166              MOVE.B  (A0)+,D1
00001132  3401                     167              MOVE.W  D1,D2
00001134  EC42                     168              ASR     #six,D2
00001136  C47C 0007                169              AND     #$07,D2
0000113A  B43C 0003                170              CMP.B   #three,D2
0000113E  6D00 0332                171              BLT     opCMP               ; If opmode bits are less than 3, we have CMP
00001142  6000 01F0                172              BRA     opEOR               ; Else its EOR
00001146                           173              
00001146                           174  
00001146  6000 0CBA                175  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
0000114A                           176    
0000114A                           177  braThirteen ; there are two opCodes available ADD, or ADDA
0000114A                           178  
0000114A  4242                     179  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
0000114C  1401                     180              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000114E  C438 000F                181              AND.B       $0F, D2             ; set first nibble to 0
00001152                           182   
00001152  B43C 0000                183              CMP.B       #zero, D2           ; compare second nibble to 0
00001156  6700 0CC2                184              BEQ         opASR               ; branch to ASR method
0000115A  B43C 0001                185              CMP.B       #one, D2            ; compare second nibble to 1
0000115E  6700 0CAE                186              BEQ         opASL               ; branch to ASL method
00001162  B43C 0002                187              CMP.B       #two, D2            ; compare second nibble to 2
00001166  6700 0CCA                188              BEQ         opLSR               ; branch to LSR method
0000116A  B43C 0003                189              CMP.B       #three, D2          ; compare second nibble to 3
0000116E  6700 0CB6                190              BEQ         opLSL               ; branch to LSL method
00001172  B43C 0006                191              CMP.B       #six, D2            ; compare second nibble to 6
00001176  6700 0CD2                192              BEQ         opROR               ; branch to ROR method
0000117A  6000 0CC2                193              BRA         opROL               ; otherwise, branch to ROL method
0000117E                           194              
0000117E                           195  
0000117E                           196  
0000117E                           197  ***********************************************************************************************************
0000117E                           198  *
0000117E                           199  *               BCC OPCODE
0000117E                           200  *
0000117E                           201  ***********************************************************************************************************
0000117E                           202          
0000117E  4242                     203  opBCC       CLR     D2
00001180                           204              ; Determine Condition (4 bits)
00001180                           205              ; Determine Displacement AFTER condition (8 bits)
00001180  6000 FE8A                206              BRA     LOOP
00001184                           207              
00001184                           208              
00001184                           209  ***********************************************************************************************************
00001184                           210  *
00001184                           211  *               OR OPCODE
00001184                           212  *
00001184                           213  ***********************************************************************************************************
00001184                           214  
00001184  43F9 0000250C            215  opOR        LEA         ORmatch,A1
0000118A  103C 000E                216              MOVE.B      #14,D0
0000118E  4E4F                     217              TRAP        #15
00001190                           218              
00001190  4242                     219              CLR         D2
00001192                           220              ; These are for EA to Dn direction
00001192  B43C 0000                221              CMP.B       #zero,D2
00001196  6700 002A                222              BEQ         opORB               ; Byte in opmode
0000119A  B43C 0001                223              CMP.B       #one,D2
0000119E  6700 007C                224              BEQ         opORW               ; Word in opmode
000011A2  B43C 0002                225              CMP.B       #two,D2
000011A6  6700 00D0                226              BEQ         opORL               ; Long in opmode
000011AA                           227              
000011AA                           228              ; These are for Dn to EA direction
000011AA  B43C 0004                229              CMP.B       #four,D2
000011AE  6700 0012                230              BEQ         opORB               ; Byte in opmode
000011B2  B43C 0005                231              CMP.B       #five,D2
000011B6  6700 0064                232              BEQ         opORW               ; Word in opmode
000011BA  B43C 0006                233              CMP.B       #six,D2
000011BE  6700 00B8                234              BEQ         opORL               ; Long in opmode
000011C2                           235              
000011C2  43F9 00002541            236  opORB       LEA         dispByte,A1
000011C8  103C 000E                237              MOVE.B      #14,D0
000011CC  4E4F                     238              TRAP        #15
000011CE                           239              
000011CE  43F9 000024AE            240              LEA         space, A1           ; Display space
000011D4  103C 000E                241              MOVE.B      #14, D0             ; command for trap call to display message
000011D8  4E4F                     242              TRAP        #15                 ; trap call
000011DA                           243              
000011DA                           244  
000011DA  1401                     245              MOVE.B      D1,D2
000011DC  E642                     246              ASR         #3,D2
000011DE  C47C 0007                247              AND         #$07,D2
000011E2  1601                     248              MOVE.B      D1,D3
000011E4  C67C 0007                249              AND         #$07,D3
000011E8  4EB9 00001E56            250              JSR         printEA         ; Determines the "left" operand register
000011EE                           251              
000011EE  43F9 000024B5            252              LEA         comma, A1           ; Display space
000011F4  103C 000E                253              MOVE.B      #14, D0             ; command for trap call to display message
000011F8  4E4F                     254              TRAP        #15                 ; trap call
000011FA                           255              
000011FA  4242                     256              CLR         D2
000011FC  3601                     257              MOVE.W      D1,D3
000011FE  E043                     258              ASR         #eight,D3
00001200  E243                     259              ASR         #one,D3
00001202  C67C 0007                260              AND         #$07,D3
00001206  4EB9 00001E56            261              JSR         printEA
0000120C                           262              
0000120C  43F9 000024AA            263              LEA         newLine,A1
00001212  103C 000E                264              MOVE.B      #14,D0
00001216  4E4F                     265              TRAP        #15
00001218                           266              
00001218  6000 FDF2                267              BRA         LOOP
0000121C                           268              
0000121C                           269              
0000121C  43F9 00002544            270  opORW       LEA         dispWord,A1
00001222  103C 000E                271              MOVE.B      #14,D0
00001226  4E4F                     272              TRAP        #15
00001228                           273              
00001228  43F9 000024AE            274              LEA         space, A1           ; Display space
0000122E  103C 000E                275              MOVE.B      #14, D0             ; command for trap call to display message
00001232  4E4F                     276              TRAP        #15                 ; trap call
00001234                           277              
00001234  4242                     278              CLR         D2
00001236  1401                     279              MOVE.B      D1,D2
00001238  E642                     280              ASR         #3,D2
0000123A  C47C 0007                281              AND         #$07,D2
0000123E  1601                     282              MOVE.B      D1,D3
00001240  C67C 0007                283              AND         #$07,D3
00001244  4EB9 00001E56            284              JSR         printEA         ; Determines the "left" operand register
0000124A                           285              
0000124A  43F9 000024B5            286              LEA         comma, A1           ; Display space
00001250  103C 000E                287              MOVE.B      #14, D0             ; command for trap call to display message
00001254  4E4F                     288              TRAP        #15                 ; trap call
00001256                           289              
00001256  4242                     290              CLR         D2
00001258  3601                     291              MOVE.W      D1,D3
0000125A  E043                     292              ASR         #eight,D3
0000125C  E243                     293              ASR         #one,D3
0000125E  C67C 0007                294              AND         #$07,D3
00001262  4EB9 00001E56            295              JSR         printEA
00001268                           296              
00001268  43F9 000024AA            297              LEA         newLine,A1
0000126E  103C 000E                298              MOVE.B      #14,D0
00001272  4E4F                     299              TRAP        #15
00001274                           300              
00001274  6000 FD96                301              BRA         LOOP
00001278                           302              
00001278  43F9 00002547            303  opORL       LEA         dispLong,A1
0000127E  103C 000E                304              MOVE.B      #14,D0
00001282  4E4F                     305              TRAP        #15
00001284                           306              
00001284  43F9 000024AE            307              LEA         space, A1           ; Display space
0000128A  103C 000E                308              MOVE.B      #14, D0             ; command for trap call to display message
0000128E  4E4F                     309              TRAP        #15                 ; trap call
00001290                           310              
00001290  1401                     311              MOVE.B      D1,D2
00001292  E642                     312              ASR         #3,D2
00001294  C47C 0007                313              AND         #$07,D2
00001298  1601                     314              MOVE.B      D1,D3
0000129A  C67C 0007                315              AND         #$07,D3
0000129E  4EB9 00001E56            316              JSR         printEA         ; Determines the "left" operand register
000012A4                           317              
000012A4  43F9 000024B5            318              LEA         comma, A1           ; Display space
000012AA  103C 000E                319              MOVE.B      #14, D0             ; command for trap call to display message
000012AE  4E4F                     320              TRAP        #15                 ; trap call
000012B0                           321              
000012B0  4242                     322              CLR         D2
000012B2  3601                     323              MOVE.W      D1,D3
000012B4  E043                     324              ASR         #eight,D3
000012B6  E243                     325              ASR         #one,D3
000012B8  C67C 0007                326              AND         #$07,D3
000012BC  4EB9 00001E56            327              JSR         printEA
000012C2                           328              
000012C2  43F9 000024AA            329              LEA         newLine,A1
000012C8  103C 000E                330              MOVE.B      #14,D0
000012CC  4E4F                     331              TRAP        #15
000012CE                           332              
000012CE  6000 FD3C                333              BRA         LOOP            ; trap call
000012D2                           334              
000012D2  6000 FD38                335              BRA         LOOP
000012D6                           336              
000012D6                           337  ***********************************************************************************************************
000012D6                           338  *
000012D6                           339  *               DIVS OPCODE
000012D6                           340  *
000012D6                           341  ***********************************************************************************************************
000012D6                           342  
000012D6  43F9 00002507            343  opDIVS      LEA     DIVSmatch,A1
000012DC  103C 000E                344              MOVE.B  #14,D0
000012E0  4E4F                     345              TRAP    #15
000012E2                           346              
000012E2  43F9 000024AE            347              LEA         space, A1           ; Display space
000012E8  103C 000E                348              MOVE.B      #14, D0             ; command for trap call to display message
000012EC  4E4F                     349              TRAP        #15                 ; trap call
000012EE                           350              
000012EE  1401                     351              MOVE.B      D1,D2
000012F0  E642                     352              ASR         #3,D2
000012F2  C47C 0007                353              AND         #$07,D2
000012F6  1601                     354              MOVE.B      D1,D3
000012F8  C67C 0007                355              AND         #$07,D3
000012FC  4EB9 00001E56            356              JSR         printEA
00001302                           357              
00001302  43F9 000024B5            358              LEA         comma, A1           ; Display space
00001308  103C 000E                359              MOVE.B      #14, D0             ; command for trap call to display message
0000130C  4E4F                     360              TRAP        #15                 ; trap call
0000130E                           361              
0000130E  4242                     362              CLR         D2
00001310  3601                     363              MOVE.W      D1,D3
00001312  E043                     364              ASR         #eight,D3
00001314  E243                     365              ASR         #one,D3
00001316  C67C 0007                366              AND         #$07,D3
0000131A  4EB9 00001E56            367              JSR         printEA
00001320                           368              
00001320  43F9 000024AA            369              LEA         newLine,A1
00001326  103C 000E                370              MOVE.B      #14,D0
0000132A  4E4F                     371              TRAP        #15
0000132C                           372              
0000132C  6000 FCDE                373              BRA         LOOP
00001330                           374      
00001330  6000 FCDA                375              BRA     LOOP
00001334                           376              
00001334                           377  **********************************************************************************************************
00001334                           378  *
00001334                           379  *               EOR OPCODE
00001334                           380  *
00001334                           381  ***********************************************************************************************************
00001334                           382  
00001334  43F9 00002513            383  opEOR       LEA         EORmatch,A1
0000133A  103C 000E                384              MOVE.B      #14,D0
0000133E  4E4F                     385              TRAP        #15
00001340                           386              
00001340  4242                     387              CLR         D2
00001342                           388              
00001342  1401                     389              MOVE.B      D1,D2
00001344  EE42                     390              ASR         #seven,D2           ; Move bits 7 places over to find opmode
00001346  C47C 0007                391              AND         #$07,D2
0000134A  B43C 0005                392              CMP.B       #five,D2
0000134E  6D00 0012                393              BLT         opEORB              ; Byte in opmode
00001352  B43C 0005                394              CMP.B       #five,D2
00001356  6700 0064                395              BEQ         opEORW              ; Word in opmode
0000135A  B43C 0005                396              CMP.B       #five,D2
0000135E  6E00 00B8                397              BGT         opEORL              ; Long in opmode
00001362                           398              
00001362  43F9 00002541            399  opEORB      LEA         dispByte,A1
00001368  103C 000E                400              MOVE.B      #14,D0
0000136C  4E4F                     401              TRAP        #15
0000136E                           402              
0000136E  43F9 000024AE            403              LEA         space, A1           ; Display space
00001374  103C 000E                404              MOVE.B      #14, D0             ; command for trap call to display message
00001378  4E4F                     405              TRAP        #15                 ; trap call
0000137A                           406              
0000137A                           407  
0000137A  1401                     408              MOVE.B      D1,D2
0000137C  E642                     409              ASR         #3,D2
0000137E  C47C 0007                410              AND         #$07,D2
00001382  1601                     411              MOVE.B      D1,D3
00001384  C67C 0007                412              AND         #$07,D3
00001388  4EB9 00001E56            413              JSR         printEA         ; Determines the "left" operand register
0000138E                           414              
0000138E  43F9 000024B5            415              LEA         comma, A1           ; Display space
00001394  103C 000E                416              MOVE.B      #14, D0             ; command for trap call to display message
00001398  4E4F                     417              TRAP        #15                 ; trap call
0000139A                           418              
0000139A  4242                     419              CLR         D2
0000139C  3601                     420              MOVE.W      D1,D3
0000139E  E043                     421              ASR         #eight,D3
000013A0  E243                     422              ASR         #one,D3
000013A2  C67C 0007                423              AND         #$07,D3
000013A6  4EB9 00001E56            424              JSR         printEA
000013AC                           425              
000013AC  43F9 000024AA            426              LEA         newLine,A1
000013B2  103C 000E                427              MOVE.B      #14,D0
000013B6  4E4F                     428              TRAP        #15
000013B8                           429              
000013B8  6000 FC52                430              BRA         LOOP
000013BC                           431              
000013BC                           432              
000013BC  43F9 00002544            433  opEORW      LEA         dispWord,A1
000013C2  103C 000E                434              MOVE.B      #14,D0
000013C6  4E4F                     435              TRAP        #15
000013C8                           436              
000013C8  43F9 000024AE            437              LEA         space, A1           ; Display space
000013CE  103C 000E                438              MOVE.B      #14, D0             ; command for trap call to display message
000013D2  4E4F                     439              TRAP        #15                 ; trap call
000013D4                           440              
000013D4  4242                     441              CLR         D2
000013D6  1401                     442              MOVE.B      D1,D2
000013D8  E642                     443              ASR         #3,D2
000013DA  C47C 0007                444              AND         #$07,D2
000013DE  1601                     445              MOVE.B      D1,D3
000013E0  C67C 0007                446              AND         #$07,D3
000013E4  4EB9 00001E56            447              JSR         printEA         ; Determines the "left" operand register
000013EA                           448              
000013EA  43F9 000024B5            449              LEA         comma, A1           ; Display space
000013F0  103C 000E                450              MOVE.B      #14, D0             ; command for trap call to display message
000013F4  4E4F                     451              TRAP        #15                 ; trap call
000013F6                           452              
000013F6  4242                     453              CLR         D2
000013F8  3601                     454              MOVE.W      D1,D3
000013FA  E043                     455              ASR         #eight,D3
000013FC  E243                     456              ASR         #one,D3
000013FE  C67C 0007                457              AND         #$07,D3
00001402  4EB9 00001E56            458              JSR         printEA
00001408                           459              
00001408  43F9 000024AA            460              LEA         newLine,A1
0000140E  103C 000E                461              MOVE.B      #14,D0
00001412  4E4F                     462              TRAP        #15
00001414                           463              
00001414  6000 FBF6                464              BRA         LOOP
00001418                           465              
00001418  43F9 00002547            466  opEORL      LEA         dispLong,A1
0000141E  103C 000E                467              MOVE.B      #14,D0
00001422  4E4F                     468              TRAP        #15
00001424                           469              
00001424  43F9 000024AE            470              LEA         space, A1           ; Display space
0000142A  103C 000E                471              MOVE.B      #14, D0             ; command for trap call to display message
0000142E  4E4F                     472              TRAP        #15                 ; trap call
00001430                           473              
00001430  1401                     474              MOVE.B      D1,D2
00001432  E642                     475              ASR         #3,D2
00001434  C47C 0007                476              AND         #$07,D2
00001438  1601                     477              MOVE.B      D1,D3
0000143A  C67C 0007                478              AND         #$07,D3
0000143E  4EB9 00001E56            479              JSR         printEA         ; Determines the "left" operand register
00001444                           480              
00001444  43F9 000024B5            481              LEA         comma, A1           ; Display space
0000144A  103C 000E                482              MOVE.B      #14, D0             ; command for trap call to display message
0000144E  4E4F                     483              TRAP        #15                 ; trap call
00001450                           484              
00001450  4242                     485              CLR         D2
00001452  3601                     486              MOVE.W      D1,D3
00001454  E043                     487              ASR         #eight,D3
00001456  E243                     488              ASR         #one,D3
00001458  C67C 0007                489              AND         #$07,D3
0000145C  4EB9 00001E56            490              JSR         printEA
00001462                           491              
00001462  43F9 000024AA            492              LEA         newLine,A1
00001468  103C 000E                493              MOVE.B      #14,D0
0000146C  4E4F                     494              TRAP        #15
0000146E                           495              
0000146E  6000 FB9C                496              BRA         LOOP            ; trap call
00001472                           497              
00001472                           498  
00001472                           499  ***********************************************************************************************************
00001472                           500  *
00001472                           501  *               CMP OPCODE
00001472                           502  *
00001472                           503  ***********************************************************************************************************
00001472                           504  
00001472  43F9 00002517            505  opCMP       LEA         CMPmatch,A1
00001478  103C 000E                506              MOVE.B      #14,D0
0000147C  4E4F                     507              TRAP        #15
0000147E                           508              
0000147E  4242                     509              CLR         D2
00001480                           510              
00001480  1401                     511              MOVE.B      D1,D2
00001482  EC42                     512              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001484  C47C 0007                513              AND         #$07,D2
00001488  B43C 0000                514              CMP.B       #zero,D2
0000148C  6700 0016                515              BEQ         opCMPB              ; Byte in opmode
00001490  B43C 0001                516              CMP.B       #one,D2
00001494  6700 0068                517              BEQ         opCMPW              ; Word in opmode
00001498  B43C 0002                518              CMP.B       #two,D2
0000149C  6700 00BA                519              BEQ         opCMPL              ; Long in opmode
000014A0                           520              
000014A0  6000 1004                521              BRA         printInvalid        ; Incorrect input
000014A4                           522  
000014A4  43F9 00002541            523  opCMPB      LEA         dispByte,A1
000014AA  103C 000E                524              MOVE.B      #14,D0
000014AE  4E4F                     525              TRAP        #15
000014B0                           526              
000014B0  43F9 000024AE            527              LEA         space, A1           ; Display space
000014B6  103C 000E                528              MOVE.B      #14, D0             ; command for trap call to display message
000014BA  4E4F                     529              TRAP        #15                 ; trap call
000014BC                           530              
000014BC  1401                     531              MOVE.B      D1,D2
000014BE  E642                     532              ASR         #3,D2
000014C0  C47C 0007                533              AND         #$07,D2
000014C4  1601                     534              MOVE.B      D1,D3
000014C6  C67C 0007                535              AND         #$07,D3
000014CA  4EB9 00001E56            536              JSR         printEA         ; Determines the "left" operand register
000014D0                           537              
000014D0  43F9 000024B5            538              LEA         comma, A1           ; Display space
000014D6  103C 000E                539              MOVE.B      #14, D0             ; command for trap call to display message
000014DA  4E4F                     540              TRAP        #15                 ; trap call
000014DC                           541              
000014DC  4242                     542              CLR         D2
000014DE  3601                     543              MOVE.W      D1,D3
000014E0  E043                     544              ASR         #eight,D3
000014E2  E243                     545              ASR         #one,D3
000014E4  C67C 0007                546              AND         #$07,D3
000014E8  4EB9 00001E56            547              JSR         printEA
000014EE                           548              
000014EE  43F9 000024AA            549              LEA         newLine,A1
000014F4  103C 000E                550              MOVE.B      #14,D0
000014F8  4E4F                     551              TRAP        #15
000014FA                           552              
000014FA  6000 FB10                553              BRA         LOOP
000014FE                           554              
000014FE  43F9 00002544            555  opCMPW      LEA         dispWord,A1
00001504  103C 000E                556              MOVE.B      #14,D0
00001508  4E4F                     557              TRAP        #15
0000150A                           558              
0000150A  43F9 000024AE            559              LEA         space, A1           ; Display space
00001510  103C 000E                560              MOVE.B      #14, D0             ; command for trap call to display message
00001514  4E4F                     561              TRAP        #15                 ; trap call
00001516                           562              
00001516  1401                     563              MOVE.B      D1,D2
00001518  E642                     564              ASR         #3,D2
0000151A  C47C 0007                565              AND         #$07,D2
0000151E  1601                     566              MOVE.B      D1,D3
00001520  C67C 0007                567              AND         #$07,D3
00001524  4EB9 00001E56            568              JSR         printEA         ; Determines the "left" operand register
0000152A                           569              
0000152A  43F9 000024B5            570              LEA         comma, A1           ; Display space
00001530  103C 000E                571              MOVE.B      #14, D0             ; command for trap call to display message
00001534  4E4F                     572              TRAP        #15                 ; trap call
00001536                           573              
00001536  4242                     574              CLR         D2
00001538  3601                     575              MOVE.W      D1,D3
0000153A  E043                     576              ASR         #eight,D3
0000153C  E243                     577              ASR         #one,D3
0000153E  C67C 0007                578              AND         #$07,D3
00001542  4EB9 00001E56            579              JSR         printEA
00001548                           580              
00001548  43F9 000024AA            581              LEA         newLine,A1
0000154E  103C 000E                582              MOVE.B      #14,D0
00001552  4E4F                     583              TRAP        #15
00001554                           584              
00001554  6000 FAB6                585              BRA         LOOP
00001558                           586  
00001558  43F9 00002547            587  opCMPL      LEA         dispLong,A1
0000155E  103C 000E                588              MOVE.B      #14,D0
00001562  4E4F                     589              TRAP        #15
00001564                           590              
00001564  43F9 000024AE            591              LEA         space, A1           ; Display space
0000156A  103C 000E                592              MOVE.B      #14, D0             ; command for trap call to display message
0000156E  4E4F                     593              TRAP        #15                 ; trap call
00001570                           594              
00001570  1401                     595              MOVE.B      D1,D2
00001572  E642                     596              ASR         #3,D2
00001574  C47C 0007                597              AND         #$07,D2
00001578  1601                     598              MOVE.B      D1,D3
0000157A  C67C 0007                599              AND         #$07,D3
0000157E  4EB9 00001E56            600              JSR         printEA         ; Determines the "left" operand register
00001584                           601              
00001584  43F9 000024B5            602              LEA         comma, A1           ; Display space
0000158A  103C 000E                603              MOVE.B      #14, D0             ; command for trap call to display message
0000158E  4E4F                     604              TRAP        #15                 ; trap call
00001590                           605              
00001590  4242                     606              CLR         D2
00001592  3601                     607              MOVE.W      D1,D3
00001594  E043                     608              ASR         #eight,D3
00001596  E243                     609              ASR         #one,D3
00001598  C67C 0007                610              AND         #$07,D3
0000159C  4EB9 00001E56            611              JSR         printEA
000015A2                           612              
000015A2  43F9 000024AA            613              LEA         newLine,A1
000015A8  103C 000E                614              MOVE.B      #14,D0
000015AC  4E4F                     615              TRAP        #15
000015AE                           616              
000015AE  6000 FA5C                617              BRA         LOOP
000015B2                           618              
000015B2                           619  ***********************************************************************************************************
000015B2                           620  *
000015B2                           621  *               ORI OPCODE
000015B2                           622  *
000015B2                           623  ***********************************************************************************************************
000015B2                           624  
000015B2  43F9 000024BF            625  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
000015B8  103C 000E                626          MOVE.B      #14, D0             ; command for trap call to display message
000015BC  4E4F                     627          TRAP        #15                 ; trap call
000015BE                           628          
000015BE  1218                     629          MOVE.B      (A0)+, D1
000015C0  1401                     630          MOVE.B      D1,D2               ; copy data over
000015C2  EC42                     631          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000015C4  B43C 0000                632          CMP.B       #zero,D2
000015C8  6700 0016                633          BEQ         opORIB
000015CC  B43C 0001                634          CMP.B       #one,D2
000015D0  6700 0070                635          BEQ         opORIW
000015D4  B43C 0002                636          CMP.B       #two,D2
000015D8  6700 00CA                637          BEQ         opORIL
000015DC                           638          
000015DC  6000 0EC8                639          BRA         printInvalid
000015E0                           640          
000015E0  43F9 00002541            641  opORIB  LEA         dispByte, A1        ; Display byte
000015E6  103C 000E                642          MOVE.B      #14, D0             ; command for trap call to display message
000015EA  4E4F                     643          TRAP        #15                 ; trap call
000015EC                           644          
000015EC  43F9 000024AE            645          LEA         space, A1           ; Display space
000015F2  103C 000E                646          MOVE.B      #14, D0             ; command for trap call to display message
000015F6  4E4F                     647          TRAP        #15                 ; trap call
000015F8                           648          
000015F8  4242                     649          CLR         D2
000015FA  1401                     650          MOVE.B      D1,D2
000015FC  E642                     651          ASR         #three,D2
000015FE  C47C 0007                652          AND         #seven,D2
00001602  4243                     653          CLR         D3        
00001604  1601                     654          MOVE.B      D1,D3
00001606  C67C 0007                655          AND         #seven,D3
0000160A                           656          
0000160A  4241                     657          CLR         D1
0000160C  3218                     658          MOVE.W      (A0)+, D1
0000160E                           659          
0000160E  43F9 000024B1            660          LEA         hashTag, A1           ; Display space
00001614  103C 000E                661          MOVE.B      #14, D0             ; command for trap call to display message
00001618  4E4F                     662          TRAP        #15                 ; trap call
0000161A                           663          
0000161A  103C 0003                664          MOVE.B      #3, D0
0000161E  4E4F                     665          TRAP        #15
00001620                           666          
00001620  43F9 000024B5            667          LEA         comma, A1           ; Display space
00001626  103C 000E                668          MOVE.B      #14, D0             ; command for trap call to display message
0000162A  4E4F                     669          TRAP        #15                 ; trap call
0000162C                           670          
0000162C  4EB9 00001E56            671          JSR         printEA
00001632                           672          
00001632  43F9 000024AA            673          LEA         newLine, A1           ; Display space
00001638  103C 000E                674          MOVE.B      #14, D0             ; command for trap call to display message
0000163C  4E4F                     675          TRAP        #15                 ; trap call
0000163E                           676          
0000163E  6000 F9CC                677          BRA         LOOP
00001642                           678          
00001642                           679          
00001642  43F9 00002544            680  opORIW  LEA         dispWord, A1        ; Display byte
00001648  103C 000E                681          MOVE.B      #14, D0             ; command for trap call to display message
0000164C  4E4F                     682          TRAP        #15                 ; trap call
0000164E                           683          
0000164E  43F9 000024AE            684          LEA         space, A1           ; Display space
00001654  103C 000E                685          MOVE.B      #14, D0             ; command for trap call to display message
00001658  4E4F                     686          TRAP        #15                 ; trap call
0000165A                           687          
0000165A  4242                     688          CLR         D2
0000165C  1401                     689          MOVE.B      D1,D2
0000165E  E642                     690          ASR         #three,D2
00001660  C47C 0007                691          AND         #seven,D2
00001664  4243                     692          CLR         D3        
00001666  1601                     693          MOVE.B      D1,D3
00001668  C67C 0007                694          AND         #seven,D3
0000166C                           695          
0000166C  4241                     696          CLR         D1
0000166E  3218                     697          MOVE.W      (A0)+, D1
00001670                           698          
00001670  43F9 000024B1            699          LEA         hashTag, A1           ; Display space
00001676  103C 000E                700          MOVE.B      #14, D0             ; command for trap call to display message
0000167A  4E4F                     701          TRAP        #15                 ; trap call
0000167C                           702          
0000167C  103C 0003                703          MOVE.B      #3, D0
00001680  4E4F                     704          TRAP        #15
00001682                           705          
00001682  43F9 000024B5            706          LEA         comma, A1           ; Display space
00001688  103C 000E                707          MOVE.B      #14, D0             ; command for trap call to display message
0000168C  4E4F                     708          TRAP        #15                 ; trap call
0000168E                           709          
0000168E  4EB9 00001E56            710          JSR         printEA
00001694                           711          
00001694  43F9 000024AA            712          LEA         newLine, A1           ; Display space
0000169A  103C 000E                713          MOVE.B      #14, D0             ; command for trap call to display message
0000169E  4E4F                     714          TRAP        #15                 ; trap call
000016A0                           715          
000016A0  6000 F96A                716          BRA         LOOP
000016A4                           717       
000016A4  43F9 00002547            718  opORIL  LEA         dispLong, A1        ; Display byte
000016AA  103C 000E                719          MOVE.B      #14, D0             ; command for trap call to display message
000016AE  4E4F                     720          TRAP        #15                 ; trap call
000016B0                           721          
000016B0  43F9 000024AE            722          LEA         space, A1           ; Display space
000016B6  103C 000E                723          MOVE.B      #14, D0             ; command for trap call to display message
000016BA  4E4F                     724          TRAP        #15                 ; trap call
000016BC                           725          
000016BC  4242                     726          CLR         D2
000016BE  1401                     727          MOVE.B      D1,D2
000016C0  E642                     728          ASR         #three,D2
000016C2  C47C 0007                729          AND         #seven,D2
000016C6  4243                     730          CLR         D3        
000016C8  1601                     731          MOVE.B      D1,D3
000016CA  C67C 0007                732          AND         #seven,D3
000016CE                           733          
000016CE  4241                     734          CLR         D1
000016D0  2218                     735          MOVE.L      (A0)+, D1
000016D2                           736          
000016D2  43F9 000024B1            737          LEA         hashTag, A1           ; Display space
000016D8  103C 000E                738          MOVE.B      #14, D0             ; command for trap call to display message
000016DC  4E4F                     739          TRAP        #15                 ; trap call
000016DE                           740          
000016DE  103C 0003                741          MOVE.B      #3, D0
000016E2  4E4F                     742          TRAP        #15
000016E4                           743          
000016E4  43F9 000024B5            744          LEA         comma, A1           ; Display space
000016EA  103C 000E                745          MOVE.B      #14, D0             ; command for trap call to display message
000016EE  4E4F                     746          TRAP        #15                 ; trap call
000016F0                           747          
000016F0  4EB9 00001E56            748          JSR         printEA
000016F6                           749          
000016F6  43F9 000024AA            750          LEA         newLine, A1           ; Display space
000016FC  103C 000E                751          MOVE.B      #14, D0             ; command for trap call to display message
00001700  4E4F                     752          TRAP        #15                 ; trap call
00001702                           753          
00001702  6000 F908                754          BRA         LOOP
00001706                           755           
00001706  43F9 000024C3            756  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000170C  103C 000E                757          MOVE.B      #14, D0             ; command for trap call to display message
00001710  4E4F                     758          TRAP        #15                 ; trap call
00001712                           759                  
00001712  1218                     760          MOVE.B      (A0)+, D1
00001714  1401                     761          MOVE.B      D1,D2               ; copy data over
00001716  EC42                     762          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001718  B43C 0000                763          CMP.B       #zero,D2
0000171C  6700 0034                764          BEQ         opCMPIB
00001720  B43C 0001                765          CMP.B       #one,D2
00001724  6700 008E                766          BEQ         opCMPIW
00001728  B43C 0002                767          CMP.B       #two,D2
0000172C  6700 00E8                768          BEQ         opCMPIL
00001730                           769          
00001730  1401                     770          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
00001732  E542                     771          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
00001734  1802                     772          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
00001736  4242                     773          CLR         D2                  ; Clear out data register
00001738  1404                     774          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
0000173A  EA42                     775          ASR         #five,D2            ; Shift the register out to get just the mode
0000173C  1802                     776          MOVE.B      D2,D4               ; Store mode into D4
0000173E  4242                     777          CLR         D2
00001740                           778          
00001740  1401                     779          MOVE.B      D1,D2               ; Getting the EA register
00001742  EB42                     780          ASL         #five,D2
00001744  1A02                     781          MOVE.B      D2,D5               ; Move just the register into D5
00001746  4242                     782          CLR         D2                  ; Clearing D2 to put data back
00001748  1405                     783          MOVE.B      D5,D2               ; Putting back the register
0000174A  EA42                     784          ASR         #five,D2            ; Shifting bits in order to read the register
0000174C  1A02                     785          MOVE.B      D2,D5               ; Store register into D5
0000174E                           786          
0000174E  6000 F8BC                787          BRA         LOOP                ; go back to the loop
00001752                           788  
00001752  43F9 00002541            789  opCMPIB LEA         dispByte, A1        ; Display byte
00001758  103C 000E                790          MOVE.B      #14, D0             ; command for trap call to display message
0000175C  4E4F                     791          TRAP        #15                 ; trap call
0000175E                           792          
0000175E  43F9 000024AE            793          LEA         space, A1           ; Display space
00001764  103C 000E                794          MOVE.B      #14, D0             ; command for trap call to display message
00001768  4E4F                     795          TRAP        #15                 ; trap call
0000176A                           796          
0000176A  4242                     797          CLR         D2
0000176C  1401                     798          MOVE.B      D1,D2
0000176E  E642                     799          ASR         #three,D2
00001770  C47C 0007                800          AND         #seven,D2
00001774  4243                     801          CLR         D3        
00001776  1601                     802          MOVE.B      D1,D3
00001778  C67C 0007                803          AND         #seven,D3
0000177C                           804          
0000177C  4241                     805          CLR         D1
0000177E  3218                     806          MOVE.W      (A0)+, D1
00001780                           807          
00001780  43F9 000024B1            808          LEA         hashTag, A1           ; Display space
00001786  103C 000E                809          MOVE.B      #14, D0             ; command for trap call to display message
0000178A  4E4F                     810          TRAP        #15                 ; trap call
0000178C                           811          
0000178C  103C 0003                812          MOVE.B      #3, D0
00001790  4E4F                     813          TRAP        #15
00001792                           814          
00001792  43F9 000024B5            815          LEA         comma, A1           ; Display space
00001798  103C 000E                816          MOVE.B      #14, D0             ; command for trap call to display message
0000179C  4E4F                     817          TRAP        #15                 ; trap call
0000179E                           818          
0000179E  4EB9 00001E56            819          JSR         printEA
000017A4                           820          
000017A4  43F9 000024AA            821          LEA         newLine, A1           ; Display space
000017AA  103C 000E                822          MOVE.B      #14, D0             ; command for trap call to display message
000017AE  4E4F                     823          TRAP        #15                 ; trap call
000017B0                           824  
000017B0  6000 F85A                825          BRA         LOOP
000017B4                           826  
000017B4  43F9 00002544            827  opCMPIW LEA         dispWord, A1        ; Display byte
000017BA  103C 000E                828          MOVE.B      #14, D0             ; command for trap call to display message
000017BE  4E4F                     829          TRAP        #15                 ; trap call
000017C0                           830          
000017C0  43F9 000024AE            831          LEA         space, A1           ; Display space
000017C6  103C 000E                832          MOVE.B      #14, D0             ; command for trap call to display message
000017CA  4E4F                     833          TRAP        #15                 ; trap call
000017CC                           834          
000017CC  4242                     835          CLR         D2
000017CE  1401                     836          MOVE.B      D1,D2
000017D0  E642                     837          ASR         #three,D2
000017D2  C47C 0007                838          AND         #seven,D2
000017D6  4243                     839          CLR         D3        
000017D8  1601                     840          MOVE.B      D1,D3
000017DA  C67C 0007                841          AND         #seven,D3
000017DE                           842          
000017DE  4241                     843          CLR         D1
000017E0  3218                     844          MOVE.W      (A0)+, D1
000017E2                           845          
000017E2  43F9 000024B1            846          LEA         hashTag, A1           ; Display space
000017E8  103C 000E                847          MOVE.B      #14, D0             ; command for trap call to display message
000017EC  4E4F                     848          TRAP        #15                 ; trap call
000017EE                           849          
000017EE  103C 0003                850          MOVE.B      #3, D0
000017F2  4E4F                     851          TRAP        #15
000017F4                           852          
000017F4  43F9 000024B5            853          LEA         comma, A1           ; Display space
000017FA  103C 000E                854          MOVE.B      #14, D0             ; command for trap call to display message
000017FE  4E4F                     855          TRAP        #15                 ; trap call
00001800                           856          
00001800  4EB9 00001E56            857          JSR         printEA
00001806                           858          
00001806  43F9 000024AA            859          LEA         newLine, A1           ; Display space
0000180C  103C 000E                860          MOVE.B      #14, D0             ; command for trap call to display message
00001810  4E4F                     861          TRAP        #15                 ; trap call
00001812  6000 F7F8                862          BRA         LOOP
00001816                           863  
00001816  43F9 00002547            864  opCMPIL LEA         dispLong, A1        ; Display byte
0000181C  103C 000E                865          MOVE.B      #14, D0             ; command for trap call to display message
00001820  4E4F                     866          TRAP        #15                 ; trap call
00001822                           867          
00001822  43F9 000024AE            868          LEA         space, A1           ; Display space
00001828  103C 000E                869          MOVE.B      #14, D0             ; command for trap call to display message
0000182C  4E4F                     870          TRAP        #15                 ; trap call
0000182E                           871          
0000182E  4242                     872          CLR         D2
00001830  1401                     873          MOVE.B      D1,D2
00001832  E642                     874          ASR         #three,D2
00001834  C47C 0007                875          AND         #seven,D2
00001838  4243                     876          CLR         D3        
0000183A  1601                     877          MOVE.B      D1,D3
0000183C  C67C 0007                878          AND         #seven,D3
00001840                           879          
00001840  4241                     880          CLR         D1
00001842  3218                     881          MOVE.W      (A0)+, D1
00001844                           882          
00001844  43F9 000024B1            883          LEA         hashTag, A1           ; Display space
0000184A  103C 000E                884          MOVE.B      #14, D0             ; command for trap call to display message
0000184E  4E4F                     885          TRAP        #15                 ; trap call
00001850                           886          
00001850  103C 0003                887          MOVE.B      #3, D0
00001854  4E4F                     888          TRAP        #15
00001856                           889          
00001856  43F9 000024B5            890          LEA         comma, A1           ; Display space
0000185C  103C 000E                891          MOVE.B      #14, D0             ; command for trap call to display message
00001860  4E4F                     892          TRAP        #15                 ; trap call
00001862                           893          
00001862  4EB9 00001E56            894          JSR         printEA
00001868                           895          
00001868  43F9 000024AA            896          LEA         newLine, A1           ; Display space
0000186E  103C 000E                897          MOVE.B      #14, D0             ; command for trap call to display message
00001872  4E4F                     898          TRAP        #15                 ; trap call
00001874                           899          
00001874  6000 F796                900          BRA         LOOP
00001878                           901  
00001878  43F9 000024C8            902  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000187E  103C 000E                903                  MOVE.B      #14, D0             ; command for trap call to display message
00001882  4E4F                     904                  TRAP        #15                 ; trap call
00001884                           905  
00001884  43F9 000024AE            906                  LEA         space, A1           ; Display space
0000188A  103C 000E                907                  MOVE.B      #14, D0             ; command for trap call to display message
0000188E  4E4F                     908                  TRAP        #15                 ; trap call
00001890                           909                  
00001890  4242                     910                  CLR         D2
00001892  1218                     911                  MOVE.B      (A0)+, D1
00001894  1401                     912                  MOVE.B      D1,D2               ; copy data over
00001896  E642                     913                  ASR         #three,D2           ; Shift to the right to remove register
00001898  C47C 0007                914                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
0000189C                           915                  
0000189C  4243                     916                  CLR         D3                  ; Clear D3 so we can move D1 in
0000189E  1601                     917                  MOVE.B      D1,D3               ; Move othr byte in
000018A0  C67C 0007                918                  AND         #seven,D3           ; Set everything besides register to 0
000018A4                           919                  
000018A4  4241                     920                  CLR         D1
000018A6  3218                     921                  MOVE.W      (A0)+, D1
000018A8                           922                 
000018A8                           923                  
000018A8  43F9 000024B1            924                  LEA         hashTag, A1           ; Display space
000018AE  103C 000E                925                  MOVE.B      #14, D0             ; command for trap call to display message
000018B2  4E4F                     926                  TRAP        #15                 ; trap call
000018B4                           927          
000018B4  103C 0003                928                  MOVE.B      #3, D0
000018B8  4E4F                     929                  TRAP        #15
000018BA                           930          
000018BA  43F9 000024B5            931                  LEA         comma, A1           ; Display space
000018C0  103C 000E                932                  MOVE.B      #14, D0             ; command for trap call to display message
000018C4  4E4F                     933                  TRAP        #15                 ; trap call
000018C6                           934                  
000018C6  4EB9 00001E56            935                  JSR         printEA
000018CC                           936          
000018CC  43F9 000024AA            937                  LEA         newLine, A1           ; Display space
000018D2  103C 000E                938                  MOVE.B      #14, D0             ; command for trap call to display message
000018D6  4E4F                     939                  TRAP        #15                 ; trap call
000018D8                           940                  
000018D8                           941                  
000018D8  6000 F732                942                  BRA         LOOP                
000018DC                           943          
000018DC                           944  opDynBCLR       
000018DC  4241                     945                  CLR         D1
000018DE  1218                     946                  MOVE.B      (A0)+,D1            ; Copy second byte in
000018E0  1601                     947                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
000018E2  E243                     948                  ASR         #one,D3             ; Shift register over to the end
000018E4  C67C 0007                949                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
000018E8                           950                  
000018E8  1401                     951                  MOVE.B      D1,D2
000018EA  EC42                     952                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
000018EC  B47C 0002                953                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
000018F0  6600 0BB4                954                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
000018F4                           955  
000018F4                           956                  
000018F4  43F9 000024C8            957                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
000018FA  103C 000E                958                  MOVE.B      #14, D0             ; command for trap call to display message
000018FE  4E4F                     959                  TRAP        #15                 ; trap call  
00001900                           960                  
00001900  43F9 000024AE            961                  LEA         space, A1           ; Display space
00001906  103C 000E                962                  MOVE.B      #14, D0             ; command for trap call to display message
0000190A  4E4F                     963                  TRAP        #15                 ; trap call
0000190C                           964                  
0000190C  143C 0000                965                  MOVE.B      #zero,D2                
00001910  4EB9 00001E56            966                  JSR         printEA
00001916                           967                  
00001916  43F9 000024B5            968                  LEA         comma, A1           ; Display space
0000191C  103C 000E                969                  MOVE.B      #14, D0             ; command for trap call to display message
00001920  4E4F                     970                  TRAP        #15                 ; trap call
00001922                           971                  
00001922  4242                     972                  CLR         D2
00001924  1401                     973                  MOVE.B      D1,D2               ; Using D2 to store EA mode
00001926  E642                     974                  ASR         #three,D2           ; Remove/shift the register out
00001928  C47C 0007                975                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
0000192C                           976                  
0000192C  4243                     977                  CLR         D3                  ; Clearing D3 to avoid mashing data
0000192E  1601                     978                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
00001930  C67C 0007                979                  AND         #seven,D3           ; Change all bits except for register bits to 0
00001934                           980                  
00001934                           981  
00001934  4EB9 00001E56            982                  JSR         printEA
0000193A                           983          
0000193A  43F9 000024AA            984                  LEA         newLine, A1           ; Display space
00001940  103C 000E                985                  MOVE.B      #14, D0             ; command for trap call to display message
00001944  4E4F                     986                  TRAP        #15                 ; trap call            
00001946                           987  
00001946                           988  
00001946  6000 F6C4                989                  BRA         LOOP                ; go back to the loop
0000194A                           990   
0000194A                           991  opMOVEB 
0000194A  43F9 000024CD            992          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
00001950  103C 000E                993          MOVE.B      #14, D0             ; command for trap call to display message
00001954  4E4F                     994          TRAP        #15                 ; trap call
00001956  43F9 00002541            995          LEA         dispByte, A1        ; display byte
0000195C  103C 000E                996          MOVE.B      #14, D0             ; command for trap call to display message
00001960  4E4F                     997          TRAP        #15                 ; trap call
00001962  43F9 000024AE            998          LEA         space, A1           ; create spaces
00001968  103C 000E                999          MOVE.B      #14, D0             ; command for trap call to display message
0000196C  4E4F                    1000          TRAP        #15                 ; trap call
0000196E                          1001          
0000196E                          1002          
0000196E  4245                    1003          CLR         D5                  ; Clear D5
00001970  1A01                    1004          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001972  E245                    1005          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001974  CA7C 0007               1006          AND         #seven,D5
00001978                          1007          
00001978  4244                    1008          CLR         D4                  ; Clear out D4
0000197A  1801                    1009          MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000197C  C87C 0001               1010          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001980                          1011          
00001980  4241                    1012          CLR          D1
00001982  4242                    1013          CLR          D2
00001984  1218                    1014          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001986  1401                    1015          MOVE.B      D1,D2
00001988  EC42                    1016          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000198A  D842                    1017          ADD         D2,D4               ; Adds the remaining bits to D4
0000198C                          1018          
0000198C  4242                    1019          CLR         D2
0000198E  1401                    1020          MOVE.B      D1,D2               ; Copy new byte over to D2
00001990  E642                    1021          ASR         #three,D2           ; Shift source register out
00001992  C47C 0007               1022          AND         #seven,D2           ; Set everything to 0 except for the mode
00001996                          1023          
00001996  4243                    1024          CLR         D3
00001998  1601                    1025          MOVE.B      D1,D3
0000199A  C67C 0007               1026          AND         #seven,D3
0000199E                          1027          
0000199E  4EB9 00001E56           1028          JSR         printEA
000019A4                          1029          
000019A4  43F9 000024B5           1030          LEA         comma, A1           ; Display space
000019AA  103C 000E               1031          MOVE.B      #14, D0             ; command for trap call to display message
000019AE  4E4F                    1032          TRAP        #15                 ; trap call
000019B0                          1033          
000019B0  4242                    1034          CLR         D2
000019B2  4243                    1035          CLR         D3
000019B4  1404                    1036          MOVE.B      D4,D2
000019B6  1605                    1037          MOVE.B      D5,D3
000019B8                          1038          
000019B8  4EB9 00001E56           1039          JSR         printEA
000019BE                          1040          
000019BE                          1041          
000019BE  43F9 000024AA           1042          LEA         newLine, A1           ; Display space
000019C4  103C 000E               1043          MOVE.B      #14, D0             ; command for trap call to display message
000019C8  4E4F                    1044          TRAP        #15                 ; trap call            
000019CA                          1045  
000019CA                          1046  
000019CA  6000 F640               1047          BRA         LOOP                ; go back to the loop
000019CE                          1048          
000019CE                          1049  opMOVEL     
000019CE                          1050          
000019CE  4245                    1051              CLR         D5                  ; Clear D5
000019D0  1A01                    1052              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
000019D2  E245                    1053              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
000019D4  CA7C 0007               1054              AND         #seven,D5
000019D8                          1055          
000019D8  4244                    1056              CLR         D4                  ; Clear out D4
000019DA  1801                    1057              MOVE.B      D1,D4               ; Copy byte over to store destination mode
000019DC  C87C 0001               1058              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
000019E0                          1059          
000019E0  4241                    1060              CLR          D1
000019E2  4242                    1061              CLR          D2
000019E4  1218                    1062              MOVE.B      (A0)+,D1            ; Copy byte into D1
000019E6  1401                    1063              MOVE.B      D1,D2
000019E8  EC42                    1064              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000019EA  D842                    1065              ADD         D2,D4               ; Adds the remaining bits to D4
000019EC                          1066          
000019EC  B87C 0001               1067              CMP         #one,D4             ; Check if it is MOVEA
000019F0  6700 006C               1068              BEQ         opMOVEAL            ; If it is, branch off
000019F4                          1069              
000019F4  43F9 000024CD           1070              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000019FA  103C 000E               1071              MOVE.B      #14, D0             ; command for trap call to display message
000019FE  4E4F                    1072              TRAP        #15                 ; trap call  
00001A00                          1073              
00001A00                          1074              
00001A00  43F9 00002547           1075              LEA         dispLong,A1
00001A06  103C 000E               1076              MOVE.B      #14, D0             ; command for trap call to display message
00001A0A  4E4F                    1077              TRAP        #15                 ; trap call
00001A0C                          1078              
00001A0C  43F9 000024AE           1079              LEA         space, A1           ; create spaces
00001A12  103C 000E               1080              MOVE.B      #14, D0             ; command for trap call to display message
00001A16  4E4F                    1081              TRAP        #15                 ; trap call
00001A18                          1082          
00001A18  4242                    1083              CLR         D2
00001A1A  1401                    1084              MOVE.B      D1,D2               ; Copy new byte over to D2
00001A1C  E642                    1085              ASR         #three,D2           ; Shift source register out
00001A1E  C47C 0007               1086              AND         #seven,D2           ; Set everything to 0 except for the mode
00001A22                          1087          
00001A22  4243                    1088              CLR         D3
00001A24  1601                    1089              MOVE.B      D1,D3
00001A26  C67C 0007               1090              AND         #seven,D3
00001A2A                          1091              
00001A2A  4241                    1092              CLR         D1                  ; Clear D1
00001A2C  2218                    1093              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
00001A2E                          1094              
00001A2E  4EB9 00001E56           1095              JSR         printEA
00001A34                          1096              
00001A34  43F9 000024B5           1097              LEA         comma, A1           ; Display comma
00001A3A  103C 000E               1098              MOVE.B      #14, D0             ; command for trap call to display message
00001A3E  4E4F                    1099              TRAP        #15                 ; trap call
00001A40                          1100          
00001A40  4242                    1101              CLR         D2
00001A42  4243                    1102              CLR         D3
00001A44  1404                    1103              MOVE.B      D4,D2
00001A46  1605                    1104              MOVE.B      D5,D3
00001A48                          1105              
00001A48                          1106  
00001A48                          1107              
00001A48  4EB9 00001E56           1108              JSR         printEA
00001A4E                          1109          
00001A4E                          1110          
00001A4E  43F9 000024AA           1111              LEA         newLine, A1           ; Display space
00001A54  103C 000E               1112              MOVE.B      #14, D0             ; command for trap call to display message
00001A58  4E4F                    1113              TRAP        #15                 ; trap call            
00001A5A                          1114  
00001A5A                          1115  
00001A5A  6000 F5B0               1116              BRA         LOOP                ; go back to the loop
00001A5E                          1117              
00001A5E                          1118  opMOVEAL
00001A5E                          1119  
00001A5E  43F9 000024D2           1120              LEA         MOVEAmatch,A1
00001A64  103C 000E               1121              MOVE.B      #14, D0             ; command for trap call to display message
00001A68  4E4F                    1122              TRAP        #15                 ; trap call
00001A6A                          1123              
00001A6A  43F9 00002547           1124              LEA         dispLong,A1
00001A70  103C 000E               1125              MOVE.B      #14, D0             ; command for trap call to display message
00001A74  4E4F                    1126              TRAP        #15                 ; trap call
00001A76                          1127              
00001A76                          1128  
00001A76  43F9 000024AE           1129              LEA         space, A1           ; create spaces
00001A7C  103C 000E               1130              MOVE.B      #14, D0             ; command for trap call to display message
00001A80  4E4F                    1131              TRAP        #15                 ; trap call
00001A82                          1132              
00001A82  4242                    1133              CLR         D2
00001A84  1401                    1134              MOVE.B      D1,D2               ; Copy new byte over to D2
00001A86  E642                    1135              ASR         #three,D2           ; Shift source register out
00001A88  C47C 0007               1136              AND         #seven,D2           ; Set everything to 0 except for the mode
00001A8C                          1137          
00001A8C  4243                    1138              CLR         D3
00001A8E  1601                    1139              MOVE.B      D1,D3
00001A90  C67C 0007               1140              AND         #seven,D3
00001A94                          1141              
00001A94  4241                    1142              CLR         D1                  ; Clear D1
00001A96  3218                    1143              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001A98                          1144              
00001A98                          1145              
00001A98  4EB9 00001E56           1146              JSR         printEA
00001A9E                          1147              
00001A9E  43F9 000024B5           1148              LEA         comma, A1           ; Display comma
00001AA4  103C 000E               1149              MOVE.B      #14, D0             ; command for trap call to display message
00001AA8  4E4F                    1150              TRAP        #15                 ; trap call
00001AAA                          1151  
00001AAA  4242                    1152              CLR         D2
00001AAC  4243                    1153              CLR         D3
00001AAE  1404                    1154              MOVE.B      D4,D2
00001AB0  1605                    1155              MOVE.B      D5,D3
00001AB2                          1156          
00001AB2  4EB9 00001E56           1157              JSR         printEA
00001AB8                          1158          
00001AB8                          1159          
00001AB8  43F9 000024AA           1160              LEA         newLine, A1           ; Display space
00001ABE  103C 000E               1161              MOVE.B      #14, D0             ; command for trap call to display message
00001AC2  4E4F                    1162              TRAP        #15                 ; trap call            
00001AC4                          1163  
00001AC4                          1164  
00001AC4  6000 F546               1165              BRA         LOOP                ; go back to the loop
00001AC8                          1166  
00001AC8                          1167  opMOVEW
00001AC8                          1168          
00001AC8  4245                    1169              CLR         D5                  ; Clear D5
00001ACA  1A01                    1170              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001ACC  E245                    1171              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001ACE  CA7C 0007               1172              AND         #seven,D5
00001AD2                          1173          
00001AD2  4244                    1174              CLR         D4                  ; Clear out D4
00001AD4  1801                    1175              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001AD6  C87C 0001               1176              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001ADA                          1177          
00001ADA  4241                    1178              CLR          D1
00001ADC  4242                    1179              CLR          D2
00001ADE  1218                    1180              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001AE0  1401                    1181              MOVE.B      D1,D2
00001AE2  EC42                    1182              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001AE4  D842                    1183              ADD         D2,D4               ; Adds the remaining bits to D4
00001AE6                          1184          
00001AE6  B87C 0001               1185              CMP         #one,D4             ; Check if it is MOVEA
00001AEA  6700 006C               1186              BEQ         opMOVEAW            ; If it is, branch off
00001AEE                          1187              
00001AEE  43F9 000024CD           1188              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001AF4  103C 000E               1189              MOVE.B      #14, D0             ; command for trap call to display message
00001AF8  4E4F                    1190              TRAP        #15                 ; trap call  
00001AFA                          1191              
00001AFA  43F9 00002544           1192              LEA         dispWord,A1
00001B00  103C 000E               1193              MOVE.B      #14, D0             ; command for trap call to display message
00001B04  4E4F                    1194              TRAP        #15                 ; trap call
00001B06                          1195              
00001B06  43F9 000024AE           1196              LEA         space, A1           ; create spaces
00001B0C  103C 000E               1197              MOVE.B      #14, D0             ; command for trap call to display message
00001B10  4E4F                    1198              TRAP        #15                 ; trap call
00001B12                          1199          
00001B12  4242                    1200              CLR         D2
00001B14  1401                    1201              MOVE.B      D1,D2               ; Copy new byte over to D2
00001B16  E642                    1202              ASR         #three,D2           ; Shift source register out
00001B18  C47C 0007               1203              AND         #seven,D2           ; Set everything to 0 except for the mode
00001B1C                          1204          
00001B1C  4243                    1205              CLR         D3
00001B1E  1601                    1206              MOVE.B      D1,D3
00001B20  C67C 0007               1207              AND         #seven,D3
00001B24                          1208              
00001B24  4241                    1209              CLR         D1                  ; Clear D1
00001B26  3218                    1210              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001B28                          1211              
00001B28  4EB9 00001E56           1212              JSR         printEA
00001B2E                          1213              
00001B2E  43F9 000024B5           1214              LEA         comma, A1           ; Display comma
00001B34  103C 000E               1215              MOVE.B      #14, D0             ; command for trap call to display message
00001B38  4E4F                    1216              TRAP        #15                 ; trap call
00001B3A                          1217          
00001B3A  4242                    1218              CLR         D2
00001B3C  4243                    1219              CLR         D3
00001B3E  1404                    1220              MOVE.B      D4,D2
00001B40  1605                    1221              MOVE.B      D5,D3
00001B42                          1222              
00001B42                          1223  
00001B42                          1224              
00001B42  4EB9 00001E56           1225              JSR         printEA
00001B48                          1226          
00001B48                          1227          
00001B48  43F9 000024AA           1228              LEA         newLine, A1           ; Display space
00001B4E  103C 000E               1229              MOVE.B      #14, D0             ; command for trap call to display message
00001B52  4E4F                    1230              TRAP        #15                 ; trap call            
00001B54                          1231  
00001B54                          1232  
00001B54  6000 F4B6               1233              BRA         LOOP                ; go back to the loop
00001B58                          1234  opMOVEAW  
00001B58  43F9 000024D2           1235              LEA         MOVEAmatch,A1
00001B5E  103C 000E               1236              MOVE.B      #14, D0             ; command for trap call to display message
00001B62  4E4F                    1237              TRAP        #15                 ; trap call
00001B64                          1238              
00001B64  43F9 00002544           1239              LEA         dispWord,A1
00001B6A  103C 000E               1240              MOVE.B      #14, D0             ; command for trap call to display message
00001B6E  4E4F                    1241              TRAP        #15                 ; trap call
00001B70                          1242              
00001B70                          1243  
00001B70  43F9 000024AE           1244              LEA         space, A1           ; create spaces
00001B76  103C 000E               1245              MOVE.B      #14, D0             ; command for trap call to display message
00001B7A  4E4F                    1246              TRAP        #15                 ; trap call
00001B7C                          1247              
00001B7C  4242                    1248              CLR         D2
00001B7E  1401                    1249              MOVE.B      D1,D2               ; Copy new byte over to D2
00001B80  E642                    1250              ASR         #three,D2           ; Shift source register out
00001B82  C47C 0007               1251              AND         #seven,D2           ; Set everything to 0 except for the mode
00001B86                          1252          
00001B86  4243                    1253              CLR         D3
00001B88  1601                    1254              MOVE.B      D1,D3
00001B8A  C67C 0007               1255              AND         #seven,D3
00001B8E                          1256              
00001B8E  4241                    1257              CLR         D1                  ; Clear D1
00001B90  3218                    1258              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001B92                          1259              
00001B92                          1260              
00001B92  4EB9 00001E56           1261              JSR         printEA
00001B98                          1262              
00001B98  43F9 000024B5           1263              LEA         comma, A1           ; Display comma
00001B9E  103C 000E               1264              MOVE.B      #14, D0             ; command for trap call to display message
00001BA2  4E4F                    1265              TRAP        #15                 ; trap call
00001BA4                          1266  
00001BA4  4242                    1267              CLR         D2
00001BA6  4243                    1268              CLR         D3
00001BA8  1404                    1269              MOVE.B      D4,D2
00001BAA  1605                    1270              MOVE.B      D5,D3
00001BAC                          1271          
00001BAC  4EB9 00001E56           1272              JSR         printEA
00001BB2                          1273          
00001BB2                          1274          
00001BB2  43F9 000024AA           1275              LEA         newLine, A1           ; Display space
00001BB8  103C 000E               1276              MOVE.B      #14, D0             ; command for trap call to display message
00001BBC  4E4F                    1277              TRAP        #15                 ; trap call            
00001BBE                          1278  
00001BBE                          1279  
00001BBE  6000 F44C               1280              BRA         LOOP                ; go back to the loop
00001BC2                          1281  
00001BC2                          1282  opNEG   
00001BC2  43F9 000024D8           1283              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001BC8  103C 000E               1284              MOVE.B      #14, D0             ; command for trap call to display message
00001BCC  4E4F                    1285              TRAP        #15                 ; trap call
00001BCE                          1286          
00001BCE                          1287          
00001BCE  1218                    1288              MOVE.B      (A0)+, D1
00001BD0  1401                    1289              MOVE.B      D1,D2               ; copy data over
00001BD2  EC42                    1290              ASR         #six,D2
00001BD4                          1291              
00001BD4  B47C 0000               1292              CMP         #zero,D2
00001BD8  6700 0016               1293              BEQ         opNEGB
00001BDC  B47C 0001               1294              CMP         #one,D2
00001BE0  6700 004E               1295              BEQ         opNEGL
00001BE4  B47C 0002               1296              CMP         #two,D2
00001BE8  6700 0086               1297              BEQ         opNEGW
00001BEC  6000 08B2               1298              BRA         INVALID
00001BF0                          1299  opNEGB
00001BF0                          1300  
00001BF0  43F9 00002541           1301              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001BF6  103C 000E               1302              MOVE.B      #14, D0             ; command for trap call to display message
00001BFA  4E4F                    1303              TRAP        #15                 ; trap call
00001BFC                          1304          
00001BFC  43F9 000024AE           1305              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001C02  103C 000E               1306              MOVE.B      #14, D0             ; command for trap call to display message
00001C06  4E4F                    1307              TRAP        #15                 ; trap call
00001C08                          1308          
00001C08  4242                    1309              CLR         D2                  ; Clear Data register 2
00001C0A  3401                    1310              MOVE        D1,D2               ; Move byte into D2
00001C0C  E642                    1311              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001C0E  C47C 0007               1312              AND         #seven,D2           ; Stores mode
00001C12                          1313              
00001C12  4243                    1314              CLR         D3
00001C14  3601                    1315              MOVE        D1,D3
00001C16  C67C 0007               1316              AND         #seven,D3
00001C1A                          1317          
00001C1A  4EB9 00001E56           1318              JSR         printEA
00001C20                          1319                  
00001C20  43F9 000024AA           1320              LEA         newLine, A1           ; Display space
00001C26  103C 000E               1321              MOVE.B      #14, D0             ; command for trap call to display message
00001C2A  4E4F                    1322              TRAP        #15                 ; trap call  
00001C2C                          1323          
00001C2C  6000 F3DE               1324              BRA         LOOP
00001C30                          1325                  
00001C30                          1326  
00001C30                          1327  opNEGL
00001C30                          1328  
00001C30  43F9 00002547           1329              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001C36  103C 000E               1330              MOVE.B      #14, D0             ; command for trap call to display message
00001C3A  4E4F                    1331              TRAP        #15                 ; trap call
00001C3C                          1332  
00001C3C  43F9 000024AE           1333              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001C42  103C 000E               1334              MOVE.B      #14, D0             ; command for trap call to display message
00001C46  4E4F                    1335              TRAP        #15                 ; trap call
00001C48                          1336                  
00001C48  4242                    1337              CLR         D2                  ; Clear Data register 2
00001C4A  3401                    1338              MOVE        D1,D2               ; Move byte into D2
00001C4C  E642                    1339              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001C4E  C47C 0007               1340              AND         #seven,D2           ; Stores mode
00001C52                          1341          
00001C52  4243                    1342              CLR         D3
00001C54  3601                    1343              MOVE        D1,D3
00001C56  C67C 0007               1344              AND         #seven,D3
00001C5A                          1345          
00001C5A  4EB9 00001E56           1346              JSR         printEA
00001C60                          1347                      
00001C60  43F9 000024AA           1348              LEA         newLine, A1         ; Display space
00001C66  103C 000E               1349              MOVE.B      #14, D0             ; command for trap call to display message
00001C6A  4E4F                    1350              TRAP        #15                 ; trap call  
00001C6C                          1351          
00001C6C  6000 F39E               1352              BRA         LOOP
00001C70                          1353          
00001C70                          1354  
00001C70                          1355  opNEGW
00001C70                          1356  
00001C70  43F9 00002544           1357              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001C76  103C 000E               1358              MOVE.B      #14, D0             ; command for trap call to display message
00001C7A  4E4F                    1359              TRAP        #15                 ; trap call
00001C7C                          1360          
00001C7C  43F9 000024AE           1361              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001C82  103C 000E               1362              MOVE.B      #14, D0             ; command for trap call to display message
00001C86  4E4F                    1363              TRAP        #15                 ; trap call        
00001C88                          1364                  
00001C88  4242                    1365              CLR         D2                  ; Clear Data register 2
00001C8A  3401                    1366              MOVE        D1,D2               ; Move byte into D2
00001C8C  E642                    1367              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001C8E  C47C 0007               1368              AND         #seven,D2           ; Stores mode
00001C92                          1369          
00001C92  4243                    1370              CLR         D3
00001C94  3601                    1371              MOVE        D1,D3
00001C96  C67C 0007               1372              AND         #seven,D3
00001C9A                          1373          
00001C9A  4EB9 00001E56           1374              JSR         printEA
00001CA0                          1375              
00001CA0  43F9 000024AA           1376              LEA         newLine, A1           ; Display space
00001CA6  103C 000E               1377              MOVE.B      #14, D0             ; command for trap call to display message
00001CAA  4E4F                    1378              TRAP        #15                 ; trap call  
00001CAC                          1379          
00001CAC  6000 F35E               1380              BRA         LOOP
00001CB0                          1381  
00001CB0                          1382  opRTSJSR
00001CB0                          1383          
00001CB0  1218                    1384              MOVE.B      (A0)+, D1
00001CB2                          1385              
00001CB2  1401                    1386              MOVE.B      D1,D2               ; copy data over
00001CB4  B47C 0075               1387              CMP         #117,D2
00001CB8  6700 0050               1388              BEQ         opRTS
00001CBC                          1389              
00001CBC  EC42                    1390              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
00001CBE  B47C 0002               1391              CMP         #two,D2             ; Checking if it is JSR
00001CC2  6700 0006               1392              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001CC6                          1393  
00001CC6  6000 07D8               1394              BRA         invalid
00001CCA                          1395  
00001CCA                          1396  opJSR
00001CCA                          1397                        
00001CCA  43F9 000024E0           1398              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001CD0  103C 000E               1399              MOVE.B      #14, D0             ; command for trap call to display message
00001CD4  4E4F                    1400              TRAP        #15                 ; trap call
00001CD6                          1401              
00001CD6  43F9 000024AE           1402              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001CDC  103C 000E               1403              MOVE.B      #14, D0             ; command for trap call to display message
00001CE0  4E4F                    1404              TRAP        #15                 ; trap call
00001CE2                          1405              
00001CE2  4242                    1406              CLR         D2
00001CE4  4243                    1407              CLR         D3
00001CE6                          1408              
00001CE6  1401                    1409              MOVE.B      D1,D2
00001CE8  E642                    1410              ASR         #three,D2
00001CEA  C47C 0007               1411              AND         #seven,D2
00001CEE                          1412              
00001CEE  1601                    1413              MOVE.B      D1,D3
00001CF0  C67C 0007               1414              AND         #seven,D3
00001CF4                          1415              
00001CF4  4EB9 00001E56           1416              JSR         printEA
00001CFA                          1417              
00001CFA  43F9 000024AA           1418              LEA         newLine, A1           ; Display space
00001D00  103C 000E               1419              MOVE.B      #14, D0             ; command for trap call to display message
00001D04  4E4F                    1420              TRAP        #15                 ; trap call  
00001D06                          1421              
00001D06  6000 F304               1422              BRA         loop            
00001D0A                          1423  opRTS
00001D0A                          1424  
00001D0A  43F9 000024DC           1425              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
00001D10  103C 000E               1426              MOVE.B      #14, D0             ; command for trap call to display message
00001D14  4E4F                    1427              TRAP        #15                 ; trap call
00001D16                          1428              
00001D16  43F9 000024AA           1429              LEA         newLine, A1           ; Display space
00001D1C  103C 000E               1430              MOVE.B      #14, D0             ; command for trap call to display message
00001D20  4E4F                    1431              TRAP        #15                 ; trap call 
00001D22                          1432              
00001D22  6000 F2E8               1433              BRA         loop
00001D26                          1434  
00001D26                          1435  opMOVEMLEA
00001D26  4242                    1436              CLR         D2                  ; Clear D2
00001D28  1401                    1437              MOVE.B      D1,D2               ; Copy byte over
00001D2A  C47C 000F               1438              AND         #secNib,D2          ; Check only the second nibble
00001D2E  B47C 000C               1439              CMP         #twelve,D2          ; Compare the second nibble to twelve
00001D32  6700 000E               1440              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
00001D36  B47C 0008               1441              CMP         #eight,D2           ; Compare the second nibble to eight
00001D3A  6700 0006               1442              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
00001D3E  6000 001A               1443              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
00001D42                          1444              
00001D42                          1445  opMOVEM
00001D42                          1446  
00001D42  43F9 000024DC           1447              LEA         RTSMatch, A1       ; we know that the opcode will be MOVEM, so load A1 to print message
00001D48  103C 000E               1448              MOVE.B      #14, D0             ; command for trap call to display message
00001D4C  4E4F                    1449              TRAP        #15                 ; trap call
00001D4E                          1450              
00001D4E  4244                    1451              CLR         D4                  ; Clearing D4 to store dr field
00001D50  1801                    1452              MOVE.B      D1,D4               ; Moving byte to find dr field
00001D52  E444                    1453              ASR         #two,D4             ; Moving dr field to readable spot
00001D54  C87C 0001               1454              AND         #one,D4             ; seting everything except dr to 0
00001D58                          1455              
00001D58  1218                    1456              MOVE.B      (A0)+, D1
00001D5A                          1457              
00001D5A                          1458  
00001D5A                          1459  opLEA
00001D5A                          1460  
00001D5A                          1461  ***********************************************************************************************************
00001D5A                          1462  *
00001D5A                          1463  *               SUBQ OPCODE
00001D5A                          1464  *
00001D5A                          1465  ***********************************************************************************************************
00001D5A                          1466  
00001D5A                          1467  opSUBQ      
00001D5A  43F9 000024EE           1468              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
00001D60  103C 000E               1469              MOVE.B      #14, D0             ; command for trap call to display message
00001D64  4E4F                    1470              TRAP        #15                 ; trap call
00001D66                          1471  
00001D66                          1472  ***********************************************************************************************************
00001D66                          1473  *
00001D66                          1474  *               BRA OPCODE
00001D66                          1475  *
00001D66                          1476  ***********************************************************************************************************
00001D66                          1477              
00001D66  43F9 000024F3           1478  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001D6C  103C 000E               1479          MOVE.B      #14, D0             ; command for trap call to display message
00001D70  4E4F                    1480          TRAP        #15                 ; trap call
00001D72                          1481          
00001D72  4242                    1482          CLR         D2
00001D74  4243                    1483          CLR         D3      
00001D76                          1484  
00001D76  43F9 000024AE           1485          LEA         space,A1
00001D7C  103C 000E               1486          MOVE.B      #14,D0
00001D80  4E4F                    1487          TRAP        #15
00001D82                          1488          
00001D82  143C 0007               1489          MOVE.B      #seven,D2
00001D86  1218                    1490          MOVE.B      (A0)+,D1
00001D88  4EB9 00001E56           1491          JSR         printEA
00001D8E                          1492          
00001D8E  43F9 000024AA           1493          LEA         newLine, A1           ; create new line
00001D94  103C 000E               1494          MOVE.B      #14, D0             ; command for trap call to display message
00001D98  4E4F                    1495          TRAP        #15                 ; trap call
00001D9A                          1496  
00001D9A  6000 F270               1497          BRA         LOOP
00001D9E                          1498          
00001D9E                          1499          
00001D9E  43F9 000024F7           1500  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001DA4  103C 000E               1501          MOVE.B      #14, D0             ; command for trap call to display message
00001DA8  4E4F                    1502          TRAP        #15                 ; trap call
00001DAA                          1503  
00001DAA  43F9 000024FB           1504  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001DB0  103C 000E               1505          MOVE.B      #14, D0             ; command for trap call to display message
00001DB4  4E4F                    1506          TRAP        #15                 ; trap call
00001DB6                          1507  
00001DB6  43F9 000024FF           1508  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001DBC  103C 000E               1509          MOVE.B      #14, D0             ; command for trap call to display message
00001DC0  4E4F                    1510          TRAP        #15                 ; trap call
00001DC2                          1511  
00001DC2  43F9 00002503           1512  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001DC8  103C 000E               1513          MOVE.B      #14, D0             ; command for trap call to display message
00001DCC  4E4F                    1514          TRAP        #15                 ; trap call
00001DCE                          1515  
00001DCE                          1516  ***********************************************************************************************************
00001DCE                          1517  *
00001DCE                          1518  *               SUB OPCODE
00001DCE                          1519  *
00001DCE                          1520  ***********************************************************************************************************
00001DCE                          1521  
00001DCE  43F9 0000250F           1522  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001DD4  103C 000E               1523          MOVE.B      #14, D0             ; command for trap call to display message
00001DD8  4E4F                    1524          TRAP        #15                 ; trap call
00001DDA                          1525          
00001DDA                          1526          
00001DDA                          1527          
00001DDA  43F9 000024AE           1528          LEA         space,A1
00001DE0  103C 000E               1529          MOVE.B      #14,D0
00001DE4  4E4F                    1530          TRAP        #15
00001DE6                          1531          
00001DE6  1218                    1532          MOVE.B      (A0)+,D1
00001DE8  1401                    1533          MOVE.B      D1,D2
00001DEA  E842                    1534          ASR         #4,D2
00001DEC                          1535          
00001DEC  4EB9 00001E56           1536          JSR         printEA
00001DF2                          1537          
00001DF2  43F9 000024AA           1538          LEA         newLine,A1
00001DF8  103C 000E               1539          MOVE.B      #14,D0
00001DFC  4E4F                    1540          TRAP        #15
00001DFE                          1541          
00001DFE  6000 F20C               1542          BRA         LOOP
00001E02                          1543          
00001E02                          1544          
00001E02                          1545          
00001E02  43F9 0000251B           1546  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001E08  103C 000E               1547          MOVE.B      #14, D0             ; command for trap call to display message
00001E0C  4E4F                    1548          TRAP        #15                 ; trap call
00001E0E                          1549  
00001E0E  43F9 00002535           1550  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001E14  103C 000E               1551          MOVE.B      #14, D0             ; command for trap call to display message
00001E18  4E4F                    1552          TRAP        #15                 ; trap call
00001E1A                          1553  
00001E1A  43F9 00002531           1554  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001E20  103C 000E               1555          MOVE.B      #14, D0             ; command for trap call to display message
00001E24  4E4F                    1556          TRAP        #15                 ; trap call
00001E26                          1557  
00001E26  43F9 0000252D           1558  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
00001E2C  103C 000E               1559          MOVE.B      #14, D0             ; command for trap call to display message
00001E30  4E4F                    1560          TRAP        #15                 ; trap call
00001E32                          1561  
00001E32  43F9 00002529           1562  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001E38  103C 000E               1563          MOVE.B      #14, D0             ; command for trap call to display message
00001E3C  4E4F                    1564          TRAP        #15                 ; trap call
00001E3E                          1565  
00001E3E  43F9 0000253D           1566  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001E44  103C 000E               1567          MOVE.B      #14, D0             ; command for trap call to display message
00001E48  4E4F                    1568          TRAP        #15                 ; trap call
00001E4A                          1569  
00001E4A  43F9 00002539           1570  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001E50  103C 000E               1571          MOVE.B      #14, D0             ; command for trap call to display message
00001E54  4E4F                    1572          TRAP        #15                 ; trap call
00001E56                          1573  
00001E56                          1574  
00001E56                          1575          
00001E56                          1576  ***********************************************************************************************************
00001E56                          1577  *
00001E56                          1578  *                                           EA Print Check
00001E56                          1579  *
00001E56                          1580  ***********************************************************************************************************
00001E56  48E7 FF7E               1581  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00001E5A                          1582  
00001E5A  B43C 0000               1583              CMP.B       #zero, D2
00001E5E  6700 002E               1584              BEQ         pDataReg
00001E62  B43C 0001               1585              CMP.B       #one, D2
00001E66  6700 00E6               1586              BEQ         pAddrReg
00001E6A  B43C 0002               1587              CMP.B       #two, D2
00001E6E  6700 019E               1588              BEQ         pAddrDir
00001E72  B43C 0003               1589              CMP.B       #three, D2
00001E76  6700 02C2               1590              BEQ         pAddrPost
00001E7A  B43C 0004               1591              CMP.B       #four, D2
00001E7E  6700 0446               1592              BEQ         pAddrDec
00001E82  B43C 0007               1593              CMP.B       #seven, D2
00001E86  6700 0576               1594              BEQ         pHex
00001E8A  6000 0614               1595              BRA         invalid
00001E8E                          1596  
00001E8E                          1597  ***********************************************************************************************************
00001E8E                          1598  * Data Register        
00001E8E  B63C 0000               1599  pDataReg    CMP.B   #zero,D3
00001E92  6700 003A               1600              BEQ     displayD0
00001E96  B63C 0001               1601              CMP.B   #one,D3
00001E9A  6700 0042               1602              BEQ     displayD1
00001E9E  B63C 0002               1603              CMP.B   #two,D3
00001EA2  6700 004A               1604              BEQ     displayD2
00001EA6  B63C 0003               1605              CMP.B   #three,D3
00001EAA  6700 0052               1606              BEQ     displayD3
00001EAE  B63C 0004               1607              CMP.B   #four,D3
00001EB2  6700 005A               1608              BEQ     displayD4
00001EB6  B63C 0005               1609              CMP.B   #five,D3
00001EBA  6700 0062               1610              BEQ     displayD5
00001EBE  B63C 0006               1611              CMP.B   #six,D3
00001EC2  6700 006A               1612              BEQ     displayD6
00001EC6  B63C 0007               1613              CMP.B   #seven,D3
00001ECA  6700 0072               1614              BEQ     displayD7
00001ECE                          1615              
00001ECE  43F9 00002564           1616  displayD0   LEA         dispD0, A1          ; Display space
00001ED4  103C 000E               1617              MOVE.B      #14, D0             ; command for trap call to display message
00001ED8  4E4F                    1618              TRAP        #15                 ; trap call
00001EDA  6000 05C4               1619              BRA         endSUB              ; go to the end of the subroutine
00001EDE                          1620              
00001EDE  43F9 00002567           1621  displayD1   LEA         dispD1, A1          ; Display space
00001EE4  103C 000E               1622              MOVE.B      #14, D0             ; command for trap call to display message
00001EE8  4E4F                    1623              TRAP        #15                 ; trap call
00001EEA  6000 05B4               1624              BRA         endSUB              ; go to the end of the subroutine
00001EEE                          1625  
00001EEE  43F9 0000256A           1626  displayD2   LEA         dispD2, A1          ; Display space
00001EF4  103C 000E               1627              MOVE.B      #14, D0             ; command for trap call to display message
00001EF8  4E4F                    1628              TRAP        #15                 ; trap call
00001EFA  6000 05A4               1629              BRA         endSUB              ; go to the end of the subroutine
00001EFE                          1630  
00001EFE  43F9 0000256D           1631  displayD3   LEA         dispD3, A1          ; Display space
00001F04  103C 000E               1632              MOVE.B      #14, D0             ; command for trap call to display message
00001F08  4E4F                    1633              TRAP        #15                 ; trap call
00001F0A  6000 0594               1634              BRA         endSUB              ; go to the end of the subroutine
00001F0E                          1635  
00001F0E  43F9 00002570           1636  displayD4   LEA         dispD4, A1          ; Display space
00001F14  103C 000E               1637              MOVE.B      #14, D0             ; command for trap call to display message
00001F18  4E4F                    1638              TRAP        #15                 ; trap call
00001F1A  6000 0584               1639              BRA         endSUB              ; go to the end of the subroutine
00001F1E                          1640  
00001F1E  43F9 00002573           1641  displayD5   LEA         dispD5, A1          ; Display space
00001F24  103C 000E               1642              MOVE.B      #14, D0             ; command for trap call to display message
00001F28  4E4F                    1643              TRAP        #15                 ; trap call
00001F2A  6000 0574               1644              BRA         endSUB              ; go to the end of the subroutine
00001F2E                          1645  
00001F2E  43F9 00002576           1646  displayD6   LEA         dispD6, A1          ; Display space
00001F34  103C 000E               1647              MOVE.B      #14, D0             ; command for trap call to display message
00001F38  4E4F                    1648              TRAP        #15                 ; trap call
00001F3A  6000 0564               1649              BRA         endSUB              ; go to the end of the subroutine
00001F3E                          1650  
00001F3E  43F9 00002579           1651  displayD7   LEA         dispD7, A1          ; Display space
00001F44  103C 000E               1652              MOVE.B      #14, D0             ; command for trap call to display message
00001F48  4E4F                    1653              TRAP        #15                 ; trap call
00001F4A  6000 0554               1654              BRA         endSUB              ; go to the end of the subroutine
00001F4E                          1655  ***********************************************************************************************************
00001F4E                          1656  * Address Register
00001F4E  B63C 0000               1657  pAddrReg    CMP.B   #zero,D3
00001F52  6700 003A               1658              BEQ     displayA0
00001F56  B63C 0001               1659              CMP.B   #one,D3
00001F5A  6700 0042               1660              BEQ     displayA1
00001F5E  B63C 0002               1661              CMP.B   #two,D3
00001F62  6700 004A               1662              BEQ     displayA2
00001F66  B63C 0003               1663              CMP.B   #three,D3
00001F6A  6700 0052               1664              BEQ     displayA3
00001F6E  B63C 0004               1665              CMP.B   #four,D3
00001F72  6700 005A               1666              BEQ     displayA4
00001F76  B63C 0005               1667              CMP.B   #five,D3
00001F7A  6700 0062               1668              BEQ     displayA5
00001F7E  B63C 0006               1669              CMP.B   #six,D3
00001F82  6700 006A               1670              BEQ     displayA6
00001F86  B63C 0007               1671              CMP.B   #seven,D3
00001F8A  6700 0072               1672              BEQ     displayA7
00001F8E                          1673              
00001F8E  43F9 0000254A           1674  displayA0   LEA         dispA0, A1          ; Display space
00001F94  103C 000E               1675              MOVE.B      #14, D0             ; command for trap call to display message
00001F98  4E4F                    1676              TRAP        #15                 ; trap call
00001F9A  6000 0504               1677              BRA         endSUB              ; go to the end of the subroutine
00001F9E                          1678              
00001F9E  43F9 0000254D           1679  displayA1   LEA         dispA1, A1          ; Display space
00001FA4  103C 000E               1680              MOVE.B      #14, D0             ; command for trap call to display message
00001FA8  4E4F                    1681              TRAP        #15                 ; trap call
00001FAA  6000 04F4               1682              BRA         endSUB              ; go to the end of the subroutine
00001FAE                          1683  
00001FAE  43F9 00002550           1684  displayA2   LEA         dispA2, A1          ; Display space
00001FB4  103C 000E               1685              MOVE.B      #14, D0             ; command for trap call to display message
00001FB8  4E4F                    1686              TRAP        #15                 ; trap call
00001FBA  6000 04E4               1687              BRA         endSUB              ; go to the end of the subroutine
00001FBE                          1688  
00001FBE  43F9 00002553           1689  displayA3   LEA         dispA3, A1          ; Display space
00001FC4  103C 000E               1690              MOVE.B      #14, D0             ; command for trap call to display message
00001FC8  4E4F                    1691              TRAP        #15                 ; trap call
00001FCA  6000 04D4               1692              BRA         endSUB              ; go to the end of the subroutine
00001FCE                          1693  
00001FCE  43F9 00002556           1694  displayA4   LEA         dispA4, A1          ; Display space
00001FD4  103C 000E               1695              MOVE.B      #14, D0             ; command for trap call to display message
00001FD8  4E4F                    1696              TRAP        #15                 ; trap call
00001FDA  6000 04C4               1697              BRA         endSUB              ; go to the end of the subroutine
00001FDE                          1698  
00001FDE  43F9 00002559           1699  displayA5   LEA         dispA5, A1          ; Display space
00001FE4  103C 000E               1700              MOVE.B      #14, D0             ; command for trap call to display message
00001FE8  4E4F                    1701              TRAP        #15                 ; trap call
00001FEA  6000 04B4               1702              BRA         endSUB              ; go to the end of the subroutine
00001FEE                          1703  
00001FEE  43F9 0000255C           1704  displayA6   LEA         dispA6, A1          ; Display space
00001FF4  103C 000E               1705              MOVE.B      #14, D0             ; command for trap call to display message
00001FF8  4E4F                    1706              TRAP        #15                 ; trap call
00001FFA  6000 04A4               1707              BRA         endSUB              ; go to the end of the subroutine
00001FFE                          1708  
00001FFE  43F9 0000255F           1709  displayA7   LEA         dispA7, A1          ; Display space
00002004  103C 000E               1710              MOVE.B      #14, D0             ; command for trap call to display message
00002008  4E4F                    1711              TRAP        #15                 ; trap call
0000200A  6000 0494               1712              BRA         endSUB              ; go to the end of the subroutine
0000200E                          1713  
0000200E                          1714  ***********************************************************************************************************
0000200E                          1715  * Address Register Direct
0000200E                          1716  
0000200E  43F9 000024B7           1717  pAddrDir    LEA         opPer, A1           ; Display space
00002014  103C 000E               1718              MOVE.B      #14, D0             ; command for trap call to display message
00002018  4E4F                    1719              TRAP        #15                 ; trap call
0000201A                          1720              
0000201A  B63C 0000               1721              CMP.B   #zero,D3
0000201E  6700 003A               1722              BEQ     displayA0A
00002022  B63C 0001               1723              CMP.B   #one,D3
00002026  6700 004E               1724              BEQ     displayA1A
0000202A  B63C 0002               1725              CMP.B   #two,D3
0000202E  6700 0062               1726              BEQ     displayA2A
00002032  B63C 0003               1727              CMP.B   #three,D3
00002036  6700 0076               1728              BEQ     displayA3A
0000203A  B63C 0004               1729              CMP.B   #four,D3
0000203E  6700 008A               1730              BEQ     displayA4A
00002042  B63C 0005               1731              CMP.B   #five,D3
00002046  6700 009E               1732              BEQ     displayA5A
0000204A  B63C 0006               1733              CMP.B   #six,D3
0000204E  6700 00B2               1734              BEQ     displayA6A
00002052  B63C 0007               1735              CMP.B   #seven,D3
00002056  6700 00C6               1736              BEQ     displayA7A
0000205A                          1737              
0000205A  43F9 0000254A           1738  displayA0A  LEA         dispA0, A1          ; Display space
00002060  103C 000E               1739              MOVE.B      #14, D0             ; command for trap call to display message
00002064  4E4F                    1740              TRAP        #15                 ; trap call
00002066  43F9 000024B9           1741              LEA         clPer, A1           ; Display space
0000206C  103C 000E               1742              MOVE.B      #14, D0             ; command for trap call to display message
00002070  4E4F                    1743              TRAP        #15                 ; trap call
00002072  6000 042C               1744              BRA         endSUB              ; go to the end of the subroutine
00002076                          1745              
00002076  43F9 0000254D           1746  displayA1A  LEA         dispA1, A1          ; Display space
0000207C  103C 000E               1747              MOVE.B      #14, D0             ; command for trap call to display message
00002080  4E4F                    1748              TRAP        #15                 ; trap call
00002082  43F9 000024B9           1749              LEA         clPer, A1           ; Display space
00002088  103C 000E               1750              MOVE.B      #14, D0             ; command for trap call to display message
0000208C  4E4F                    1751              TRAP        #15                 ; trap call
0000208E  6000 0410               1752              BRA         endSUB              ; go to the end of the subroutine
00002092                          1753  
00002092  43F9 00002550           1754  displayA2A  LEA         dispA2, A1          ; Display space
00002098  103C 000E               1755              MOVE.B      #14, D0             ; command for trap call to display message
0000209C  4E4F                    1756              TRAP        #15                 ; trap call
0000209E  43F9 000024B9           1757              LEA         clPer, A1           ; Display space
000020A4  103C 000E               1758              MOVE.B      #14, D0             ; command for trap call to display message
000020A8  4E4F                    1759              TRAP        #15                 ; trap call
000020AA  6000 03F4               1760              BRA         endSUB              ; go to the end of the subroutine
000020AE                          1761  
000020AE  43F9 00002553           1762  displayA3A  LEA         dispA3, A1          ; Display space
000020B4  103C 000E               1763              MOVE.B      #14, D0             ; command for trap call to display message
000020B8  4E4F                    1764              TRAP        #15                 ; trap call
000020BA  43F9 000024B9           1765              LEA         clPer, A1           ; Display space
000020C0  103C 000E               1766              MOVE.B      #14, D0             ; command for trap call to display message
000020C4  4E4F                    1767              TRAP        #15                 ; trap call
000020C6  6000 03D8               1768              BRA         endSUB              ; go to the end of the subroutine
000020CA                          1769  
000020CA  43F9 00002556           1770  displayA4A  LEA         dispA4, A1          ; Display space
000020D0  103C 000E               1771              MOVE.B      #14, D0             ; command for trap call to display message
000020D4  4E4F                    1772              TRAP        #15                 ; trap call
000020D6  43F9 000024B9           1773              LEA         clPer, A1           ; Display space
000020DC  103C 000E               1774              MOVE.B      #14, D0             ; command for trap call to display message
000020E0  4E4F                    1775              TRAP        #15                 ; trap call
000020E2  6000 03BC               1776              BRA         endSUB              ; go to the end of the subroutine
000020E6                          1777  
000020E6  43F9 00002559           1778  displayA5A  LEA         dispA5, A1          ; Display space
000020EC  103C 000E               1779              MOVE.B      #14, D0             ; command for trap call to display message
000020F0  4E4F                    1780              TRAP        #15                 ; trap call
000020F2  43F9 000024B9           1781              LEA         clPer, A1           ; Display space
000020F8  103C 000E               1782              MOVE.B      #14, D0             ; command for trap call to display message
000020FC  4E4F                    1783              TRAP        #15                 ; trap call
000020FE  6000 03A0               1784              BRA         endSUB              ; go to the end of the subroutine
00002102                          1785  
00002102  43F9 0000255C           1786  displayA6A  LEA         dispA6, A1          ; Display space
00002108  103C 000E               1787              MOVE.B      #14, D0             ; command for trap call to display message
0000210C  4E4F                    1788              TRAP        #15                 ; trap call
0000210E  43F9 000024B9           1789              LEA         clPer, A1           ; Display space
00002114  103C 000E               1790              MOVE.B      #14, D0             ; command for trap call to display message
00002118  4E4F                    1791              TRAP        #15                 ; trap call
0000211A  6000 0384               1792              BRA         endSUB              ; go to the end of the subroutine
0000211E                          1793  
0000211E  43F9 0000255F           1794  displayA7A  LEA         dispA7, A1          ; Display space
00002124  103C 000E               1795              MOVE.B      #14, D0             ; command for trap call to display message
00002128  4E4F                    1796              TRAP        #15                 ; trap call
0000212A  43F9 000024B9           1797              LEA         clPer, A1           ; Display space
00002130  103C 000E               1798              MOVE.B      #14, D0             ; command for trap call to display message
00002134  4E4F                    1799              TRAP        #15                 ; trap call
00002136  6000 0368               1800              BRA         endSUB              ; go to the end of the subroutine
0000213A                          1801              
0000213A                          1802  ***********************************************************************************************************
0000213A                          1803  * Addr Postincrement
0000213A                          1804              
0000213A  43F9 000024B7           1805  pAddrPost   LEA         opPer, A1           ; Display space
00002140  103C 000E               1806              MOVE.B      #14, D0             ; command for trap call to display message
00002144  4E4F                    1807              TRAP        #15                 ; trap call
00002146                          1808              
00002146  B63C 0000               1809              CMP.B   #zero,D3
0000214A  6700 003A               1810              BEQ     displayA0P
0000214E  B63C 0001               1811              CMP.B   #one,D3
00002152  6700 005A               1812              BEQ     displayA1P
00002156  B63C 0002               1813              CMP.B   #two,D3
0000215A  6700 007A               1814              BEQ     displayA2P
0000215E  B63C 0003               1815              CMP.B   #three,D3
00002162  6700 009A               1816              BEQ     displayA3P
00002166  B63C 0004               1817              CMP.B   #four,D3
0000216A  6700 00BA               1818              BEQ     displayA4P
0000216E  B63C 0005               1819              CMP.B   #five,D3
00002172  6700 00DA               1820              BEQ     displayA5P
00002176  B63C 0006               1821              CMP.B   #six,D3
0000217A  6700 00FA               1822              BEQ     displayA6P
0000217E  B63C 0007               1823              CMP.B   #seven,D3
00002182  6700 011A               1824              BEQ     displayA7P
00002186                          1825              
00002186  43F9 0000254A           1826  displayA0P  LEA         dispA0, A1          ; Display space
0000218C  103C 000E               1827              MOVE.B      #14, D0             ; command for trap call to display message
00002190  4E4F                    1828              TRAP        #15                 ; trap call
00002192  43F9 000024B9           1829              LEA         clPer, A1           ; Display space
00002198  103C 000E               1830              MOVE.B      #14, D0             ; command for trap call to display message
0000219C  4E4F                    1831              TRAP        #15                 ; trap call
0000219E  43F9 000024BD           1832              LEA         inc, A1             ; Display space
000021A4  103C 000E               1833              MOVE.B      #14, D0             ; command for trap call to display message
000021A8  4E4F                    1834              TRAP        #15                 ; trap call
000021AA  6000 02F4               1835              BRA         endSUB              ; go to the end of the subroutine
000021AE                          1836              
000021AE  43F9 0000254D           1837  displayA1P  LEA         dispA1, A1          ; Display space
000021B4  103C 000E               1838              MOVE.B      #14, D0             ; command for trap call to display message
000021B8  4E4F                    1839              TRAP        #15                 ; trap call
000021BA  43F9 000024B9           1840              LEA         clPer, A1           ; Display space
000021C0  103C 000E               1841              MOVE.B      #14, D0             ; command for trap call to display message
000021C4  4E4F                    1842              TRAP        #15                 ; trap call
000021C6  43F9 000024BD           1843              LEA         inc, A1             ; Display space
000021CC  103C 000E               1844              MOVE.B      #14, D0             ; command for trap call to display message
000021D0  4E4F                    1845              TRAP        #15                 ; trap call
000021D2  6000 02CC               1846              BRA         endSUB              ; go to the end of the subroutine
000021D6                          1847  
000021D6  43F9 00002550           1848  displayA2P  LEA         dispA2, A1          ; Display space
000021DC  103C 000E               1849              MOVE.B      #14, D0             ; command for trap call to display message
000021E0  4E4F                    1850              TRAP        #15                 ; trap call
000021E2  43F9 000024B9           1851              LEA         clPer, A1           ; Display space
000021E8  103C 000E               1852              MOVE.B      #14, D0             ; command for trap call to display message
000021EC  4E4F                    1853              TRAP        #15                 ; trap call
000021EE  43F9 000024BD           1854              LEA         inc, A1             ; Display space
000021F4  103C 000E               1855              MOVE.B      #14, D0             ; command for trap call to display message
000021F8  4E4F                    1856              TRAP        #15                 ; trap call
000021FA  6000 02A4               1857              BRA         endSUB              ; go to the end of the subroutine
000021FE                          1858  
000021FE  43F9 00002553           1859  displayA3P  LEA         dispA3, A1          ; Display space
00002204  103C 000E               1860              MOVE.B      #14, D0             ; command for trap call to display message
00002208  4E4F                    1861              TRAP        #15                 ; trap call
0000220A  43F9 000024B9           1862              LEA         clPer, A1           ; Display space
00002210  103C 000E               1863              MOVE.B      #14, D0             ; command for trap call to display message
00002214  4E4F                    1864              TRAP        #15                 ; trap call
00002216  43F9 000024BD           1865              LEA         inc, A1             ; Display space
0000221C  103C 000E               1866              MOVE.B      #14, D0             ; command for trap call to display message
00002220  4E4F                    1867              TRAP        #15                 ; trap call
00002222  6000 027C               1868              BRA         endSUB              ; go to the end of the subroutine
00002226                          1869  
00002226  43F9 00002556           1870  displayA4P  LEA         dispA4, A1          ; Display space
0000222C  103C 000E               1871              MOVE.B      #14, D0             ; command for trap call to display message
00002230  4E4F                    1872              TRAP        #15                 ; trap call
00002232  43F9 000024B9           1873              LEA         clPer, A1           ; Display space
00002238  103C 000E               1874              MOVE.B      #14, D0             ; command for trap call to display message
0000223C  4E4F                    1875              TRAP        #15                 ; trap call
0000223E  43F9 000024BD           1876              LEA         inc, A1             ; Display space
00002244  103C 000E               1877              MOVE.B      #14, D0             ; command for trap call to display message
00002248  4E4F                    1878              TRAP        #15                 ; trap call
0000224A  6000 0254               1879              BRA         endSUB              ; go to the end of the subroutine
0000224E                          1880  
0000224E  43F9 00002559           1881  displayA5P  LEA         dispA5, A1          ; Display space
00002254  103C 000E               1882              MOVE.B      #14, D0             ; command for trap call to display message
00002258  4E4F                    1883              TRAP        #15                 ; trap call
0000225A  43F9 000024B9           1884              LEA         clPer, A1           ; Display space
00002260  103C 000E               1885              MOVE.B      #14, D0             ; command for trap call to display message
00002264  4E4F                    1886              TRAP        #15                 ; trap call
00002266  43F9 000024BD           1887              LEA         inc, A1             ; Display space
0000226C  103C 000E               1888              MOVE.B      #14, D0             ; command for trap call to display message
00002270  4E4F                    1889              TRAP        #15                 ; trap call
00002272  6000 022C               1890              BRA         endSUB              ; go to the end of the subroutine
00002276                          1891  
00002276  43F9 0000255C           1892  displayA6P  LEA         dispA6, A1          ; Display space
0000227C  103C 000E               1893              MOVE.B      #14, D0             ; command for trap call to display message
00002280  4E4F                    1894              TRAP        #15                 ; trap call
00002282  43F9 000024B9           1895              LEA         clPer, A1           ; Display space
00002288  103C 000E               1896              MOVE.B      #14, D0             ; command for trap call to display message
0000228C  4E4F                    1897              TRAP        #15                 ; trap call
0000228E  43F9 000024BD           1898              LEA         inc, A1             ; Display space
00002294  103C 000E               1899              MOVE.B      #14, D0             ; command for trap call to display message
00002298  4E4F                    1900              TRAP        #15                 ; trap call
0000229A  6000 0204               1901              BRA         endSUB              ; go to the end of the subroutine
0000229E                          1902  
0000229E  43F9 0000255F           1903  displayA7P  LEA         dispA7, A1          ; Display space
000022A4  103C 000E               1904              MOVE.B      #14, D0             ; command for trap call to display message
000022A8  4E4F                    1905              TRAP        #15                 ; trap call
000022AA  43F9 000024B9           1906              LEA         clPer, A1           ; Display space
000022B0  103C 000E               1907              MOVE.B      #14, D0             ; command for trap call to display message
000022B4  4E4F                    1908              TRAP        #15                 ; trap call
000022B6  43F9 000024BD           1909              LEA         inc, A1             ; Display space
000022BC  103C 000E               1910              MOVE.B      #14, D0             ; command for trap call to display message
000022C0  4E4F                    1911              TRAP        #15                 ; trap call
000022C2  6000 01DC               1912              BRA         endSUB              ; go to the end of the subroutine
000022C6                          1913  
000022C6                          1914  ***********************************************************************************************************
000022C6                          1915  * Addr Postdecrement
000022C6                          1916  
000022C6  43F9 000024BB           1917  pAddrDec    LEA         dec, A1             ; Display space
000022CC  103C 000E               1918              MOVE.B      #14, D0             ; command for trap call to display message
000022D0  4E4F                    1919              TRAP        #15                 ; trap call
000022D2                          1920              
000022D2  43F9 000024B7           1921              LEA         opPer, A1           ; Display space
000022D8  103C 000E               1922              MOVE.B      #14, D0             ; command for trap call to display message
000022DC  4E4F                    1923              TRAP        #15                 ; trap call
000022DE                          1924              
000022DE  B63C 0000               1925              CMP.B   #zero,D3
000022E2  6700 003A               1926              BEQ     displayA0D
000022E6  B63C 0001               1927              CMP.B   #one,D3
000022EA  6700 004E               1928              BEQ     displayA1D
000022EE  B63C 0002               1929              CMP.B   #two,D3
000022F2  6700 0062               1930              BEQ     displayA2D
000022F6  B63C 0003               1931              CMP.B   #three,D3
000022FA  6700 0076               1932              BEQ     displayA3D
000022FE  B63C 0004               1933              CMP.B   #four,D3
00002302  6700 008A               1934              BEQ     displayA4D
00002306  B63C 0005               1935              CMP.B   #five,D3
0000230A  6700 009E               1936              BEQ     displayA5D
0000230E  B63C 0006               1937              CMP.B   #six,D3
00002312  6700 00B2               1938              BEQ     displayA6D
00002316  B63C 0007               1939              CMP.B   #seven,D3
0000231A  6700 00C6               1940              BEQ     displayA7D
0000231E                          1941              
0000231E  43F9 0000254A           1942  displayA0D  LEA         dispA0, A1          ; Display space
00002324  103C 000E               1943              MOVE.B      #14, D0             ; command for trap call to display message
00002328  4E4F                    1944              TRAP        #15                 ; trap call
0000232A  43F9 000024B9           1945              LEA         clPer, A1           ; Display space
00002330  103C 000E               1946              MOVE.B      #14, D0             ; command for trap call to display message
00002334  4E4F                    1947              TRAP        #15                 ; trap call
00002336  6000 0168               1948              BRA         endSUB              ; go to the end of the subroutine
0000233A                          1949              
0000233A  43F9 0000254D           1950  displayA1D  LEA         dispA1, A1          ; Display space
00002340  103C 000E               1951              MOVE.B      #14, D0             ; command for trap call to display message
00002344  4E4F                    1952              TRAP        #15                 ; trap call
00002346  43F9 000024B9           1953              LEA         clPer, A1           ; Display space
0000234C  103C 000E               1954              MOVE.B      #14, D0             ; command for trap call to display message
00002350  4E4F                    1955              TRAP        #15                 ; trap call
00002352  6000 014C               1956              BRA         endSUB              ; go to the end of the subroutine
00002356                          1957  
00002356  43F9 00002550           1958  displayA2D  LEA         dispA2, A1          ; Display space
0000235C  103C 000E               1959              MOVE.B      #14, D0             ; command for trap call to display message
00002360  4E4F                    1960              TRAP        #15                 ; trap call
00002362  43F9 000024B9           1961              LEA         clPer, A1           ; Display space
00002368  103C 000E               1962              MOVE.B      #14, D0             ; command for trap call to display message
0000236C  4E4F                    1963              TRAP        #15                 ; trap call
0000236E  6000 0130               1964              BRA         endSUB              ; go to the end of the subroutine
00002372                          1965  
00002372  43F9 00002553           1966  displayA3D  LEA         dispA3, A1          ; Display space
00002378  103C 000E               1967              MOVE.B      #14, D0             ; command for trap call to display message
0000237C  4E4F                    1968              TRAP        #15                 ; trap call
0000237E  43F9 000024B9           1969              LEA         clPer, A1           ; Display space
00002384  103C 000E               1970              MOVE.B      #14, D0             ; command for trap call to display message
00002388  4E4F                    1971              TRAP        #15                 ; trap call
0000238A  6000 0114               1972              BRA         endSUB              ; go to the end of the subroutine
0000238E                          1973  
0000238E  43F9 00002556           1974  displayA4D  LEA         dispA4, A1          ; Display space
00002394  103C 000E               1975              MOVE.B      #14, D0             ; command for trap call to display message
00002398  4E4F                    1976              TRAP        #15                 ; trap call
0000239A  43F9 000024B9           1977              LEA         clPer, A1           ; Display space
000023A0  103C 000E               1978              MOVE.B      #14, D0             ; command for trap call to display message
000023A4  4E4F                    1979              TRAP        #15                 ; trap call
000023A6  6000 00F8               1980              BRA         endSUB              ; go to the end of the subroutine
000023AA                          1981  
000023AA  43F9 00002559           1982  displayA5D  LEA         dispA5, A1          ; Display space
000023B0  103C 000E               1983              MOVE.B      #14, D0             ; command for trap call to display message
000023B4  4E4F                    1984              TRAP        #15                 ; trap call
000023B6  43F9 000024B9           1985              LEA         clPer, A1           ; Display space
000023BC  103C 000E               1986              MOVE.B      #14, D0             ; command for trap call to display message
000023C0  4E4F                    1987              TRAP        #15                 ; trap call
000023C2  6000 00DC               1988              BRA         endSUB              ; go to the end of the subroutine
000023C6                          1989  
000023C6  43F9 0000255C           1990  displayA6D  LEA         dispA6, A1          ; Display space
000023CC  103C 000E               1991              MOVE.B      #14, D0             ; command for trap call to display message
000023D0  4E4F                    1992              TRAP        #15                 ; trap call
000023D2  43F9 000024B9           1993              LEA         clPer, A1           ; Display space
000023D8  103C 000E               1994              MOVE.B      #14, D0             ; command for trap call to display message
000023DC  4E4F                    1995              TRAP        #15                 ; trap call
000023DE  6000 00C0               1996              BRA         endSUB              ; go to the end of the subroutine
000023E2                          1997  
000023E2  43F9 0000255F           1998  displayA7D  LEA         dispA7, A1          ; Display space
000023E8  103C 000E               1999              MOVE.B      #14, D0             ; command for trap call to display message
000023EC  4E4F                    2000              TRAP        #15                 ; trap call
000023EE  43F9 000024B9           2001              LEA         clPer, A1           ; Display space
000023F4  103C 000E               2002              MOVE.B      #14, D0             ; command for trap call to display message
000023F8  4E4F                    2003              TRAP        #15                 ; trap call
000023FA  6000 00A4               2004              BRA         endSUB              ; go to the end of the subroutine
000023FE                          2005  
000023FE                          2006  
000023FE                          2007  ***********************************************************************************************************
000023FE                          2008  * Absolute Address
000023FE  B63C 0000               2009  pHex        CMP.B       #zero, D3
00002402  6700 0012               2010              BEQ         AbsShort
00002406  B63C 0001               2011              CMP.B       #one, D3
0000240A  6700 003C               2012              BEQ         AbsLong
0000240E  B63C 0004               2013              CMP.B       #four, D3
00002412  6700 0066               2014              BEQ         DispImm
00002416                          2015              
00002416  43F9 000024B7           2016  AbsShort    LEA         opPer, A1           ; Display space
0000241C  103C 000E               2017              MOVE.B      #14, D0             ; command for trap call to display message
00002420  4E4F                    2018              TRAP        #15                 ; trap call
00002422                          2019              
00002422  43F9 000024B3           2020              LEA         dispHex, A1         ; Display space
00002428  103C 000E               2021              MOVE.B      #14, D0             ; command for trap call to display message
0000242C  4E4F                    2022              TRAP        #15                 ; trap call
0000242E                          2023              
0000242E  4241                    2024              CLR         D1
00002430  3218                    2025              MOVE.W      (A0)+, D1
00002432                          2026              
00002432  103C 0003               2027              MOVE.B      #3, D0
00002436  4E4F                    2028              TRAP        #15
00002438                          2029              
00002438  43F9 000024B9           2030              LEA         clPer, A1           ; Display space
0000243E  103C 000E               2031              MOVE.B      #14, D0             ; command for trap call to display message
00002442  4E4F                    2032              TRAP        #15                 ; trap call
00002444                          2033              
00002444  6000 005A               2034              BRA         endSub
00002448                          2035              
00002448  43F9 000024B7           2036  AbsLong     LEA         opPer, A1           ; Display space
0000244E  103C 000E               2037              MOVE.B      #14, D0             ; command for trap call to display message
00002452  4E4F                    2038              TRAP        #15                 ; trap call
00002454                          2039              
00002454  43F9 000024B3           2040              LEA         dispHex, A1         ; Display space
0000245A  103C 000E               2041              MOVE.B      #14, D0             ; command for trap call to display message
0000245E  4E4F                    2042              TRAP        #15                 ; trap call
00002460                          2043              
00002460  4241                    2044              CLR         D1
00002462  2218                    2045              MOVE.L      (A0)+, D1
00002464                          2046              
00002464  103C 0003               2047              MOVE.B      #3, D0
00002468  4E4F                    2048              TRAP        #15
0000246A                          2049              
0000246A  43F9 000024B9           2050              LEA         clPer, A1           ; Display space
00002470  103C 000E               2051              MOVE.B      #14, D0             ; command for trap call to display message
00002474  4E4F                    2052              TRAP        #15                 ; trap call
00002476                          2053              
00002476  6000 0028               2054              BRA         endSub
0000247A                          2055  
0000247A  43F9 000024B1           2056  DispImm     LEA         hashTag, A1         ; Display space
00002480  103C 000E               2057              MOVE.B      #14, D0             ; command for trap call to display message
00002484  4E4F                    2058              TRAP        #15                 ; trap call
00002486                          2059              
00002486  4241                    2060              CLR         D1
00002488  3218                    2061              MOVE.W      (A0)+, D1
0000248A                          2062  
0000248A  43F9 000024B3           2063              LEA         dispHex, A1         ; Display space
00002490  103C 000E               2064              MOVE.B      #14, D0             ; command for trap call to display message
00002494  4E4F                    2065              TRAP        #15                 ; trap call
00002496                          2066              
00002496  103C 0003               2067              MOVE.B      #3, D0
0000249A  4E4F                    2068              TRAP        #15
0000249C                          2069  
0000249C  6000 0002               2070              BRA         endSub
000024A0                          2071  
000024A0                          2072  invalid
000024A0                          2073  
000024A0                          2074  endSUB
000024A0                          2075          
000024A0  4CDF 7EFF               2076          MOVEM.L  (SP)+, D0-D7/A1-A6
000024A4  4E75                    2077          RTS
000024A6                          2078  
000024A6                          2079  ***********************************************************************************************************
000024A6                          2080  ***********************************************************************************************************
000024A6                          2081  ***********************************************************************************************************
000024A6                          2082  
000024A6                          2083  printInvalid
000024A6                          2084  endPROG    
000024A6                          2085  
000024A6  FFFF FFFF               2086      SIMHALT                             ; halt simulator
000024AA                          2087  
000024AA= 20 0D 0A 00             2088  newLine     DC.B    ' ', CR, LF, 0
000024AE= 20 20 00                2089  space       DC.B    '  ', 0
000024B1                          2090  
000024B1= 23 00                   2091  hashTag     DC.B    '#', 0
000024B3= 24 00                   2092  dispHex     DC.B    '$', 0
000024B5= 2C 00                   2093  comma       DC.B    ',', 0
000024B7                          2094  
000024B7= 28 00                   2095  opPer       DC.B    '(', 0
000024B9= 29 00                   2096  clPer       DC.B    ')', 0
000024BB= 2D 00                   2097  dec         DC.B    '-', 0
000024BD= 2B 00                   2098  inc         DC.B    '+', 0
000024BF                          2099  
000024BF= 4F 52 49 00             2100  ORImatch    DC.B    'ORI', 0
000024C3= 43 4D 50 49 00          2101  CMPImatch   DC.B    'CMPI', 0
000024C8= 42 43 4C 52 00          2102  BCLRmatch   DC.B    'BCLR', 0
000024CD= 4D 4F 56 45 00          2103  MOVEmatch   DC.B    'MOVE', 0
000024D2= 4D 4F 56 45 41 00       2104  MOVEAmatch  DC.B    'MOVEA', 0
000024D8= 4E 45 47 00             2105  NEGmatch    DC.B    'NEG', 0
000024DC= 52 54 53 00             2106  RTSmatch    DC.B    'RTS', 0
000024E0= 4A 53 52 00             2107  JSRmatch    DC.B    'JSR', 0
000024E4= 4D 4F 56 45 4D 00       2108  MOVEMmatch  DC.B    'MOVEM', 0
000024EA= 4C 45 41 00             2109  LEAmatch    DC.B    'LEA', 0
000024EE= 53 55 42 51 00          2110  SUBQmatch   DC.B    'SUBQ', 0
000024F3= 42 52 41 00             2111  BRAmatch    DC.B    'BRA', 0
000024F7= 42 43 53 00             2112  BCSmatch    DC.B    'BCS', 0
000024FB= 42 56 43 00             2113  BVCmatch    DC.B    'BVC', 0
000024FF= 42 47 45 00             2114  BGEmatch    DC.B    'BGE', 0
00002503= 42 4C 54 00             2115  BLTmatch    DC.B    'BLT', 0
00002507= 44 49 56 53 00          2116  DIVSmatch   DC.B    'DIVS', 0
0000250C= 4F 52 00                2117  ORmatch     DC.B    'OR', 0
0000250F= 53 55 42 00             2118  SUBmatch    DC.B    'SUB', 0
00002513= 45 4F 52 00             2119  EORmatch    DC.B    'EOR', 0
00002517= 43 4D 50 00             2120  CMPmatch    DC.B    'CMP', 0
0000251B= 4D 55 4C 53 00          2121  MULSmatch   DC.B    'MULS', 0
00002520= 41 44 44 00             2122  ADDmatch    DC.B    'ADD', 0
00002524= 41 44 44 41 00          2123  ADDAmatch   DC.B    'ADDA', 0
00002529= 4C 53 52 00             2124  LSRmatch    DC.B    'LSR', 0
0000252D= 4C 53 4C 00             2125  LSLmatch    DC.B    'LSL', 0
00002531= 41 53 52 00             2126  ASRmatch    DC.B    'ASR', 0
00002535= 41 53 4C 00             2127  ASLmatch    DC.B    'ASL', 0
00002539= 52 4F 52 00             2128  RORmatch    DC.B    'ROR', 0
0000253D= 52 4F 4C 00             2129  ROLmatch    DC.B    'ROL', 0
00002541                          2130   
00002541= 2E 42 00                2131  dispByte    DC.B    '.B', 0
00002544= 2E 57 00                2132  dispWord    DC.B    '.W', 0
00002547= 2E 4C 00                2133  dispLong    DC.B    '.L', 0
0000254A                          2134  
0000254A= 41 30 00                2135  dispA0      DC.B    'A0', 0
0000254D= 41 31 00                2136  dispA1      DC.B    'A1', 0
00002550= 41 32 00                2137  dispA2      DC.B    'A2', 0
00002553= 41 33 00                2138  dispA3      DC.B    'A3', 0
00002556= 41 34 00                2139  dispA4      DC.B    'A4', 0
00002559= 41 35 00                2140  dispA5      DC.B    'A5', 0
0000255C= 41 36 00                2141  dispA6      DC.B    'A6', 0
0000255F= 41 37 00                2142  dispA7      DC.B    'A7', 0
00002562                          2143  
00002562= 44 00                   2144  dispD       DC.B    'D',0
00002564= 44 30 00                2145  dispD0      DC.B    'D0', 0
00002567= 44 31 00                2146  dispD1      DC.B    'D1', 0
0000256A= 44 32 00                2147  dispD2      DC.B    'D2', 0
0000256D= 44 33 00                2148  dispD3      DC.B    'D3', 0
00002570= 44 34 00                2149  dispD4      DC.B    'D4', 0
00002573= 44 35 00                2150  dispD5      DC.B    'D5', 0
00002576= 44 36 00                2151  dispD6      DC.B    'D6', 0
00002579= 44 37 00                2152  dispD7      DC.B    'D7', 0  
0000257C                          2153             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             2448
ABSSHORT            2416
ADDAMATCH           2524
ADDMATCH            2520
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            2535
ASRMATCH            2531
BCLRMATCH           24C8
BCSMATCH            24F7
BGEMATCH            24FF
BLTMATCH            2503
BRAEIGHT            110E
BRAELEVEN           112C
BRAFIVE             10DE
BRAFOUR             10C2
BRAFOURTEEN         114A
BRAMATCH            24F3
BRANINE             1128
BRAONE              10B6
BRASIX              10E2
BRATHIRTEEN         114A
BRATHREE            10BE
BRATWELVE           1146
BRATWO              10BA
BRAZERO             1086
BVCMATCH            24FB
CLPER               24B9
CMPIMATCH           24C3
CMPMATCH            2517
COMMA               24B5
CR                  D
DEC                 24BB
DISPA0              254A
DISPA1              254D
DISPA2              2550
DISPA3              2553
DISPA4              2556
DISPA5              2559
DISPA6              255C
DISPA7              255F
DISPBYTE            2541
DISPD               2562
DISPD0              2564
DISPD1              2567
DISPD2              256A
DISPD3              256D
DISPD4              2570
DISPD5              2573
DISPD6              2576
DISPD7              2579
DISPHEX             24B3
DISPIMM             247A
DISPLAYA0           1F8E
DISPLAYA0A          205A
DISPLAYA0D          231E
DISPLAYA0P          2186
DISPLAYA1           1F9E
DISPLAYA1A          2076
DISPLAYA1D          233A
DISPLAYA1P          21AE
DISPLAYA2           1FAE
DISPLAYA2A          2092
DISPLAYA2D          2356
DISPLAYA2P          21D6
DISPLAYA3           1FBE
DISPLAYA3A          20AE
DISPLAYA3D          2372
DISPLAYA3P          21FE
DISPLAYA4           1FCE
DISPLAYA4A          20CA
DISPLAYA4D          238E
DISPLAYA4P          2226
DISPLAYA5           1FDE
DISPLAYA5A          20E6
DISPLAYA5D          23AA
DISPLAYA5P          224E
DISPLAYA6           1FEE
DISPLAYA6A          2102
DISPLAYA6D          23C6
DISPLAYA6P          2276
DISPLAYA7           1FFE
DISPLAYA7A          211E
DISPLAYA7D          23E2
DISPLAYA7P          229E
DISPLAYD0           1ECE
DISPLAYD1           1EDE
DISPLAYD2           1EEE
DISPLAYD3           1EFE
DISPLAYD4           1F0E
DISPLAYD5           1F1E
DISPLAYD6           1F2E
DISPLAYD7           1F3E
DISPLONG            2547
DISPWORD            2544
DIVSMATCH           2507
EIGHT               8
ELEVEN              B
ENDPROG             24A6
ENDSUB              24A0
EORMATCH            2513
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             24B1
INC                 24BD
INVALID             24A0
JSRMATCH            24E0
LEAMATCH            24EA
LF                  A
LOOP                100C
LSLMATCH            252D
LSRMATCH            2529
MOVEAMATCH          24D2
MOVEMATCH           24CD
MOVEMMATCH          24E4
MULSMATCH           251B
NEGMATCH            24D8
NEWLINE             24AA
NINE                9
ONE                 1
OPASL               1E0E
OPASR               1E1A
OPBCC               117E
OPBCLR              1878
OPBCS               1D9E
OPBGE               1DB6
OPBLT               1DC2
OPBRA               1D66
OPBVC               1DAA
OPCMP               1472
OPCMPB              14A4
OPCMPI              1706
OPCMPIB             1752
OPCMPIL             1816
OPCMPIW             17B4
OPCMPL              1558
OPCMPW              14FE
OPDIVS              12D6
OPDYNBCLR           18DC
OPEOR               1334
OPEORB              1362
OPEORL              1418
OPEORW              13BC
OPJSR               1CCA
OPLEA               1D5A
OPLSL               1E26
OPLSR               1E32
OPMOVEAL            1A5E
OPMOVEAW            1B58
OPMOVEB             194A
OPMOVEL             19CE
OPMOVEM             1D42
OPMOVEMLEA          1D26
OPMOVEW             1AC8
OPMULS              1E02
OPNEG               1BC2
OPNEGB              1BF0
OPNEGL              1C30
OPNEGW              1C70
OPOR                1184
OPORB               11C2
OPORI               15B2
OPORIB              15E0
OPORIL              16A4
OPORIW              1642
OPORL               1278
OPORW               121C
OPPER               24B7
OPROL               1E3E
OPROR               1E4A
OPRTS               1D0A
OPRTSJSR            1CB0
OPSUB               1DCE
OPSUBQ              1D5A
ORIMATCH            24BF
ORMATCH             250C
PADDRDEC            22C6
PADDRDIR            200E
PADDRPOST           213A
PADDRREG            1F4E
PDATAREG            1E8E
PHEX                23FE
PRINTEA             1E56
PRINTINVALID        24A6
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
ROLMATCH            253D
RORMATCH            2539
RTSMATCH            24DC
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               24AE
START               1000
SUBMATCH            250F
SUBQMATCH           24EE
TEST_END            3009
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
