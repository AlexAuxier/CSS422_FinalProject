00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 12/5/2014 4:12:58 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00002000                 10  test_start  EQU     $00002000   ; defined starting address
00000000  =00002009                 11  test_end    EQU     $00002009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =00000000                 55  mask0       EQU     %00000000
00000000  =00000001                 56  mask1       EQU     %00000001
00000000  =00000002                 57  mask2       EQU     %00000010
00000000  =00000004                 58  mask3       EQU     %00000100
00000000  =00000008                 59  mask4       EQU     %00001000
00000000  =00000010                 60  mask5       EQU     %00010000
00000000  =00000020                 61  mask6       EQU     %00100000
00000000  =00000040                 62  mask7       EQU     %01000000
00000000  =00000080                 63  mask8       EQU     %10000000
00000000                            64  
00000000  =00000005                 65  maskA       EQU     %00000101
00000000  =0000000A                 66  maskB       EQU     %00001010
00000000  =00000014                 67  maskC       EQU     %00010100
00000000  =00000028                 68  maskD       EQU     %00101000
00000000  =00000050                 69  maskE       EQU     %01010000
00000000  =000000A0                 70  maskF       EQU     %10100000
00000000                            71  
00000000                            72  
00000000  =000000F0                 73  firstNib    EQU     $F0
00000000  =0000000F                 74  secNib      EQU     $0F
00000000                            75               
00001000                            76              ORG    $1000
00001000                            77  START:                                  ; first instruction of program
00001000                            78        
00001000  207C 00002000             79          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00002009             80          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            81            
0000100C  4241                      82  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      83          CLR         D2                  ; clear out D2
00001010  B1CA                      84          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 152E                 85          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      86          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      87          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      88          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            89          
0000101C  B43C 0000                 90          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 91          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 92          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 93          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 94          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 95          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 96          CMP.B       #three, D2          ; compare with 3
00001038  6700 0084                 97          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 98          CMP.B       #four, D2           ; compare with 4
00001040  6700 0080                 99          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                100          CMP.B       #five, D2           ; compare with 5
00001048  6700 0094                101          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                102          CMP.B       #six, D2            ; compare with 6
00001050  6700 0090                103          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                104          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00B4                105          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                106          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00AC                107          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                108          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00A8                109          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                110          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00A0                111          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                112          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 009C                113          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                114          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 0094                115          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                     116          BRA         loop
00001086                           117  
00001086  4242                     118  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     119          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                120          AND.B       #secNib, D2             ; set first nibble to 0
0000108E                           121   
0000108E  B43C 0000                122          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 00B6                123          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                124          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 0202                125          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                126          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 036C                127          BEQ         opBCLR
000010A6  C47C 0001                128          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                129          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 03C4                130          BEQ         opDynBCLR
000010B2  6000 148E                131          BRA         printInvalid
000010B6                           132          
000010B6                           133          
000010B6  6000 042A                134  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           135  
000010BA  6000 04AA                136  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BE                           137  
000010BE                           138  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BE                           139  
000010BE  6000 05A0                140          BRA         opMOVEW
000010C2                           141  
000010C2  4242                     142  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010C4  1401                     143          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010C6  C43C 000F                144          AND.B       #secNib, D2             ; set first nibble to 0
000010CA                           145   
000010CA  B43C 0004                146          CMP.B       #four, D2           ; compare second nibble to 4
000010CE  6700 068A                147          BEQ         opNEG               ; branch to NEG method
000010D2  B43C 000E                148          CMP.B       #fourteen, D2       ; compare second nibble to E
000010D6  6700 0770                149          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010DA  6000 07E2                150          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010DE                           151  
000010DE  6000 084A                152  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010E2                           153  
000010E2  4242                     154  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010E4  1401                     155          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010E6  C438 000F                156          AND.B       $0F, D2             ; set first nibble to 0
000010EA                           157   
000010EA  B43C 0000                158          CMP.B       #zero, D2           ; compare second nibble to 0
000010EE  6700 0846                159          BEQ         opBRA               ; branch to BRA method
000010F2  B43C 0005                160          CMP.B       #five, D2           ; compare second nibble to 5
000010F6  6700 0856                161          BEQ         opBCS               ; branch to BCS method
000010FA  B43C 0008                162          CMP.B       #eight, D2          ; compare second nibble to 8
000010FE  6700 085A                163          BEQ         opBVC               ; branch to BCS method
00001102  B43C 000C                164          CMP.B       #twelve, D2         ; compare second nibble to 12
00001106  6700 085E                165          BEQ         opBGE               ; branch to BGE method
0000110A  6000 0866                166          BRA         opBLT               ; otherwise, branch to BLT method
0000110E                           167  
0000110E                           168  braEight    ; there are two opCodes available DIVS, or OR
0000110E                           169  
0000110E  6000 086E                170  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
00001112                           171  
00001112                           172  braEleven   ; there are two opCodes available EOR, or CMP
00001112                           173  
00001112  6000 0876                174  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
00001116                           175    
00001116                           176  braThirteen ; there are two opCodes available ADD, or ADDA
00001116                           177  
00001116  4242                     178  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
00001118  1401                     179              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000111A  C438 000F                180              AND.B       $0F, D2             ; set first nibble to 0
0000111E                           181   
0000111E  B43C 0000                182              CMP.B       #zero, D2           ; compare second nibble to 0
00001122  6700 087E                183              BEQ         opASR               ; branch to ASR method
00001126  B43C 0001                184              CMP.B       #one, D2            ; compare second nibble to 1
0000112A  6700 086A                185              BEQ         opASL               ; branch to ASL method
0000112E  B43C 0002                186              CMP.B       #two, D2            ; compare second nibble to 2
00001132  6700 0886                187              BEQ         opLSR               ; branch to LSR method
00001136  B43C 0003                188              CMP.B       #three, D2          ; compare second nibble to 3
0000113A  6700 0872                189              BEQ         opLSL               ; branch to LSL method
0000113E  B43C 0006                190              CMP.B       #six, D2            ; compare second nibble to 6
00001142  6700 088E                191              BEQ         opROR               ; branch to ROR method
00001146  6000 087E                192              BRA         opROL               ; otherwise, branch to ROL method
0000114A                           193  
0000114A  43F9 0000255D            194  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
00001150  103C 000E                195          MOVE.B      #14, D0             ; command for trap call to display message
00001154  4E4F                     196          TRAP        #15                 ; trap call
00001156                           197          
00001156  1218                     198          MOVE.B      (A0)+, D1
00001158  1401                     199          MOVE.B      D1,D2               ; copy data over
0000115A  EC42                     200          ASR         #6,D2               ; shifts 6 bits over to read just the size        
0000115C  B43C 0000                201          CMP.B       #zero,D2
00001160  6700 0016                202          BEQ         opORIB
00001164  B43C 0001                203          CMP.B       #one,D2
00001168  6700 0070                204          BEQ         opORIW
0000116C  B43C 0002                205          CMP.B       #two,D2
00001170  6700 00CA                206          BEQ         opORIL
00001174                           207          
00001174  6000 13CC                208          BRA         printInvalid
00001178                           209          
00001178  43F9 000025DF            210  opORIB  LEA         dispByte, A1        ; Display byte
0000117E  103C 000E                211          MOVE.B      #14, D0             ; command for trap call to display message
00001182  4E4F                     212          TRAP        #15                 ; trap call
00001184                           213          
00001184  43F9 0000254A            214          LEA         space, A1           ; Display space
0000118A  103C 000E                215          MOVE.B      #14, D0             ; command for trap call to display message
0000118E  4E4F                     216          TRAP        #15                 ; trap call
00001190                           217          
00001190  4242                     218          CLR         D2
00001192  1401                     219          MOVE.B      D1,D2
00001194  E642                     220          ASR         #three,D2
00001196  C47C 0007                221          AND         #seven,D2
0000119A  4243                     222          CLR         D3        
0000119C  1601                     223          MOVE.B      D1,D3
0000119E  C67C 0007                224          AND         #seven,D3
000011A2                           225          
000011A2  4241                     226          CLR         D1
000011A4  3218                     227          MOVE.W      (A0)+, D1
000011A6                           228          
000011A6  43F9 0000254D            229          LEA         hashTag, A1           ; Display space
000011AC  103C 000E                230          MOVE.B      #14, D0             ; command for trap call to display message
000011B0  4E4F                     231          TRAP        #15                 ; trap call
000011B2                           232          
000011B2  103C 0003                233          MOVE.B      #3, D0
000011B6  4E4F                     234          TRAP        #15
000011B8                           235          
000011B8  43F9 00002551            236          LEA         comma, A1           ; Display space
000011BE  103C 000E                237          MOVE.B      #14, D0             ; command for trap call to display message
000011C2  4E4F                     238          TRAP        #15                 ; trap call
000011C4                           239          
000011C4  4EB9 00001EF2            240          JSR         printEA
000011CA                           241          
000011CA  43F9 00002546            242          LEA         newLine, A1           ; Display space
000011D0  103C 000E                243          MOVE.B      #14, D0             ; command for trap call to display message
000011D4  4E4F                     244          TRAP        #15                 ; trap call
000011D6                           245          
000011D6  6000 FE34                246          BRA         LOOP
000011DA                           247          
000011DA                           248          
000011DA  43F9 000025E2            249  opORIW  LEA         dispWord, A1        ; Display byte
000011E0  103C 000E                250          MOVE.B      #14, D0             ; command for trap call to display message
000011E4  4E4F                     251          TRAP        #15                 ; trap call
000011E6                           252          
000011E6  43F9 0000254A            253          LEA         space, A1           ; Display space
000011EC  103C 000E                254          MOVE.B      #14, D0             ; command for trap call to display message
000011F0  4E4F                     255          TRAP        #15                 ; trap call
000011F2                           256          
000011F2  4242                     257          CLR         D2
000011F4  1401                     258          MOVE.B      D1,D2
000011F6  E642                     259          ASR         #three,D2
000011F8  C47C 0007                260          AND         #seven,D2
000011FC  4243                     261          CLR         D3        
000011FE  1601                     262          MOVE.B      D1,D3
00001200  C67C 0007                263          AND         #seven,D3
00001204                           264          
00001204  4241                     265          CLR         D1
00001206  3218                     266          MOVE.W      (A0)+, D1
00001208                           267          
00001208  43F9 0000254D            268          LEA         hashTag, A1           ; Display space
0000120E  103C 000E                269          MOVE.B      #14, D0             ; command for trap call to display message
00001212  4E4F                     270          TRAP        #15                 ; trap call
00001214                           271          
00001214  103C 0003                272          MOVE.B      #3, D0
00001218  4E4F                     273          TRAP        #15
0000121A                           274          
0000121A  43F9 00002551            275          LEA         comma, A1           ; Display space
00001220  103C 000E                276          MOVE.B      #14, D0             ; command for trap call to display message
00001224  4E4F                     277          TRAP        #15                 ; trap call
00001226                           278          
00001226  4EB9 00001EF2            279          JSR         printEA
0000122C                           280          
0000122C  43F9 00002546            281          LEA         newLine, A1           ; Display space
00001232  103C 000E                282          MOVE.B      #14, D0             ; command for trap call to display message
00001236  4E4F                     283          TRAP        #15                 ; trap call
00001238                           284          
00001238  6000 FDD2                285          BRA         LOOP
0000123C                           286       
0000123C  43F9 000025E5            287  opORIL  LEA         dispLong, A1        ; Display byte
00001242  103C 000E                288          MOVE.B      #14, D0             ; command for trap call to display message
00001246  4E4F                     289          TRAP        #15                 ; trap call
00001248                           290          
00001248  43F9 0000254A            291          LEA         space, A1           ; Display space
0000124E  103C 000E                292          MOVE.B      #14, D0             ; command for trap call to display message
00001252  4E4F                     293          TRAP        #15                 ; trap call
00001254                           294          
00001254  4242                     295          CLR         D2
00001256  1401                     296          MOVE.B      D1,D2
00001258  E642                     297          ASR         #three,D2
0000125A  C47C 0007                298          AND         #seven,D2
0000125E  4243                     299          CLR         D3        
00001260  1601                     300          MOVE.B      D1,D3
00001262  C67C 0007                301          AND         #seven,D3
00001266                           302          
00001266  4241                     303          CLR         D1
00001268  2218                     304          MOVE.L      (A0)+, D1
0000126A                           305          
0000126A  43F9 0000254D            306          LEA         hashTag, A1           ; Display space
00001270  103C 000E                307          MOVE.B      #14, D0             ; command for trap call to display message
00001274  4E4F                     308          TRAP        #15                 ; trap call
00001276                           309          
00001276  103C 0003                310          MOVE.B      #3, D0
0000127A  4E4F                     311          TRAP        #15
0000127C                           312          
0000127C  43F9 00002551            313          LEA         comma, A1           ; Display space
00001282  103C 000E                314          MOVE.B      #14, D0             ; command for trap call to display message
00001286  4E4F                     315          TRAP        #15                 ; trap call
00001288                           316          
00001288  4EB9 00001EF2            317          JSR         printEA
0000128E                           318          
0000128E  43F9 00002546            319          LEA         newLine, A1           ; Display space
00001294  103C 000E                320          MOVE.B      #14, D0             ; command for trap call to display message
00001298  4E4F                     321          TRAP        #15                 ; trap call
0000129A                           322          
0000129A  6000 FD70                323          BRA         LOOP
0000129E                           324           
0000129E  43F9 00002561            325  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000012A4  103C 000E                326          MOVE.B      #14, D0             ; command for trap call to display message
000012A8  4E4F                     327          TRAP        #15                 ; trap call
000012AA                           328                  
000012AA  1218                     329          MOVE.B      (A0)+, D1
000012AC  1401                     330          MOVE.B      D1,D2               ; copy data over
000012AE  EC42                     331          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000012B0  B43C 0000                332          CMP.B       #zero,D2
000012B4  6700 0034                333          BEQ         opCMPIB
000012B8  B43C 0001                334          CMP.B       #one,D2
000012BC  6700 008E                335          BEQ         opCMPIW
000012C0  B43C 0002                336          CMP.B       #two,D2
000012C4  6700 00E8                337          BEQ         opCMPIL
000012C8                           338          
000012C8  1401                     339          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000012CA  E542                     340          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
000012CC  1802                     341          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
000012CE  4242                     342          CLR         D2                  ; Clear out data register
000012D0  1404                     343          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
000012D2  EA42                     344          ASR         #five,D2            ; Shift the register out to get just the mode
000012D4  1802                     345          MOVE.B      D2,D4               ; Store mode into D4
000012D6  4242                     346          CLR         D2
000012D8                           347          
000012D8  1401                     348          MOVE.B      D1,D2               ; Getting the EA register
000012DA  EB42                     349          ASL         #five,D2
000012DC  1A02                     350          MOVE.B      D2,D5               ; Move just the register into D5
000012DE  4242                     351          CLR         D2                  ; Clearing D2 to put data back
000012E0  1405                     352          MOVE.B      D5,D2               ; Putting back the register
000012E2  EA42                     353          ASR         #five,D2            ; Shifting bits in order to read the register
000012E4  1A02                     354          MOVE.B      D2,D5               ; Store register into D5
000012E6                           355          
000012E6  6000 FD24                356          BRA         LOOP                ; go back to the loop
000012EA                           357  
000012EA  43F9 000025DF            358  opCMPIB LEA         dispByte, A1        ; Display byte
000012F0  103C 000E                359          MOVE.B      #14, D0             ; command for trap call to display message
000012F4  4E4F                     360          TRAP        #15                 ; trap call
000012F6                           361          
000012F6  43F9 0000254A            362          LEA         space, A1           ; Display space
000012FC  103C 000E                363          MOVE.B      #14, D0             ; command for trap call to display message
00001300  4E4F                     364          TRAP        #15                 ; trap call
00001302                           365          
00001302  4242                     366          CLR         D2
00001304  1401                     367          MOVE.B      D1,D2
00001306  E642                     368          ASR         #three,D2
00001308  C47C 0007                369          AND         #seven,D2
0000130C  4243                     370          CLR         D3        
0000130E  1601                     371          MOVE.B      D1,D3
00001310  C67C 0007                372          AND         #seven,D3
00001314                           373          
00001314  4241                     374          CLR         D1
00001316  3218                     375          MOVE.W      (A0)+, D1
00001318                           376          
00001318  43F9 0000254D            377          LEA         hashTag, A1           ; Display space
0000131E  103C 000E                378          MOVE.B      #14, D0             ; command for trap call to display message
00001322  4E4F                     379          TRAP        #15                 ; trap call
00001324                           380          
00001324  103C 0003                381          MOVE.B      #3, D0
00001328  4E4F                     382          TRAP        #15
0000132A                           383          
0000132A  43F9 00002551            384          LEA         comma, A1           ; Display space
00001330  103C 000E                385          MOVE.B      #14, D0             ; command for trap call to display message
00001334  4E4F                     386          TRAP        #15                 ; trap call
00001336                           387          
00001336  4EB9 00001EF2            388          JSR         printEA
0000133C                           389          
0000133C  43F9 00002546            390          LEA         newLine, A1           ; Display space
00001342  103C 000E                391          MOVE.B      #14, D0             ; command for trap call to display message
00001346  4E4F                     392          TRAP        #15                 ; trap call
00001348                           393  
00001348  6000 FCC2                394          BRA         LOOP
0000134C                           395  
0000134C  43F9 000025E2            396  opCMPIW LEA         dispWord, A1        ; Display byte
00001352  103C 000E                397          MOVE.B      #14, D0             ; command for trap call to display message
00001356  4E4F                     398          TRAP        #15                 ; trap call
00001358                           399          
00001358  43F9 0000254A            400          LEA         space, A1           ; Display space
0000135E  103C 000E                401          MOVE.B      #14, D0             ; command for trap call to display message
00001362  4E4F                     402          TRAP        #15                 ; trap call
00001364                           403          
00001364  4242                     404          CLR         D2
00001366  1401                     405          MOVE.B      D1,D2
00001368  E642                     406          ASR         #three,D2
0000136A  C47C 0007                407          AND         #seven,D2
0000136E  4243                     408          CLR         D3        
00001370  1601                     409          MOVE.B      D1,D3
00001372  C67C 0007                410          AND         #seven,D3
00001376                           411          
00001376  4241                     412          CLR         D1
00001378  3218                     413          MOVE.W      (A0)+, D1
0000137A                           414          
0000137A  43F9 0000254D            415          LEA         hashTag, A1           ; Display space
00001380  103C 000E                416          MOVE.B      #14, D0             ; command for trap call to display message
00001384  4E4F                     417          TRAP        #15                 ; trap call
00001386                           418          
00001386  103C 0003                419          MOVE.B      #3, D0
0000138A  4E4F                     420          TRAP        #15
0000138C                           421          
0000138C  43F9 00002551            422          LEA         comma, A1           ; Display space
00001392  103C 000E                423          MOVE.B      #14, D0             ; command for trap call to display message
00001396  4E4F                     424          TRAP        #15                 ; trap call
00001398                           425          
00001398  4EB9 00001EF2            426          JSR         printEA
0000139E                           427          
0000139E  43F9 00002546            428          LEA         newLine, A1           ; Display space
000013A4  103C 000E                429          MOVE.B      #14, D0             ; command for trap call to display message
000013A8  4E4F                     430          TRAP        #15                 ; trap call
000013AA  6000 FC60                431          BRA         LOOP
000013AE                           432  
000013AE  43F9 000025E5            433  opCMPIL LEA         dispLong, A1        ; Display byte
000013B4  103C 000E                434          MOVE.B      #14, D0             ; command for trap call to display message
000013B8  4E4F                     435          TRAP        #15                 ; trap call
000013BA                           436          
000013BA  43F9 0000254A            437          LEA         space, A1           ; Display space
000013C0  103C 000E                438          MOVE.B      #14, D0             ; command for trap call to display message
000013C4  4E4F                     439          TRAP        #15                 ; trap call
000013C6                           440          
000013C6  4242                     441          CLR         D2
000013C8  1401                     442          MOVE.B      D1,D2
000013CA  E642                     443          ASR         #three,D2
000013CC  C47C 0007                444          AND         #seven,D2
000013D0  4243                     445          CLR         D3        
000013D2  1601                     446          MOVE.B      D1,D3
000013D4  C67C 0007                447          AND         #seven,D3
000013D8                           448          
000013D8  4241                     449          CLR         D1
000013DA  3218                     450          MOVE.W      (A0)+, D1
000013DC                           451          
000013DC  43F9 0000254D            452          LEA         hashTag, A1           ; Display space
000013E2  103C 000E                453          MOVE.B      #14, D0             ; command for trap call to display message
000013E6  4E4F                     454          TRAP        #15                 ; trap call
000013E8                           455          
000013E8  103C 0003                456          MOVE.B      #3, D0
000013EC  4E4F                     457          TRAP        #15
000013EE                           458          
000013EE  43F9 00002551            459          LEA         comma, A1           ; Display space
000013F4  103C 000E                460          MOVE.B      #14, D0             ; command for trap call to display message
000013F8  4E4F                     461          TRAP        #15                 ; trap call
000013FA                           462          
000013FA  4EB9 00001EF2            463          JSR         printEA
00001400                           464          
00001400  43F9 00002546            465          LEA         newLine, A1           ; Display space
00001406  103C 000E                466          MOVE.B      #14, D0             ; command for trap call to display message
0000140A  4E4F                     467          TRAP        #15                 ; trap call
0000140C                           468          
0000140C  6000 FBFE                469          BRA         LOOP
00001410                           470  
00001410  43F9 00002566            471  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001416  103C 000E                472                  MOVE.B      #14, D0             ; command for trap call to display message
0000141A  4E4F                     473                  TRAP        #15                 ; trap call
0000141C                           474  
0000141C  43F9 0000254A            475                  LEA         space, A1           ; Display space
00001422  103C 000E                476                  MOVE.B      #14, D0             ; command for trap call to display message
00001426  4E4F                     477                  TRAP        #15                 ; trap call
00001428                           478                  
00001428  4242                     479                  CLR         D2
0000142A  1218                     480                  MOVE.B      (A0)+, D1
0000142C  1401                     481                  MOVE.B      D1,D2               ; copy data over
0000142E  E642                     482                  ASR         #three,D2           ; Shift to the right to remove register
00001430  C47C 0007                483                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
00001434                           484                  
00001434  4243                     485                  CLR         D3                  ; Clear D3 so we can move D1 in
00001436  1601                     486                  MOVE.B      D1,D3               ; Move othr byte in
00001438  C67C 0007                487                  AND         #seven,D3           ; Set everything besides register to 0
0000143C                           488                  
0000143C  4241                     489                  CLR         D1
0000143E  3218                     490                  MOVE.W      (A0)+, D1
00001440                           491                 
00001440                           492                  
00001440  43F9 0000254D            493                  LEA         hashTag, A1           ; Display space
00001446  103C 000E                494                  MOVE.B      #14, D0             ; command for trap call to display message
0000144A  4E4F                     495                  TRAP        #15                 ; trap call
0000144C                           496          
0000144C  103C 0003                497                  MOVE.B      #3, D0
00001450  4E4F                     498                  TRAP        #15
00001452                           499          
00001452  43F9 00002551            500                  LEA         comma, A1           ; Display space
00001458  103C 000E                501                  MOVE.B      #14, D0             ; command for trap call to display message
0000145C  4E4F                     502                  TRAP        #15                 ; trap call
0000145E                           503                  
0000145E  4EB9 00001EF2            504                  JSR         printEA
00001464                           505          
00001464  43F9 00002546            506                  LEA         newLine, A1           ; Display space
0000146A  103C 000E                507                  MOVE.B      #14, D0             ; command for trap call to display message
0000146E  4E4F                     508                  TRAP        #15                 ; trap call
00001470                           509                  
00001470                           510                  
00001470  6000 FB9A                511                  BRA         LOOP                
00001474                           512          
00001474                           513  opDynBCLR       
00001474  4241                     514                  CLR         D1
00001476  1218                     515                  MOVE.B      (A0)+,D1            ; Copy second byte in
00001478  1601                     516                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
0000147A  E243                     517                  ASR         #one,D3             ; Shift register over to the end
0000147C  C67C 0007                518                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
00001480                           519                  
00001480  1401                     520                  MOVE.B      D1,D2
00001482  EC42                     521                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
00001484  B47C 0002                522                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
00001488  6600 10B8                523                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
0000148C                           524  
0000148C                           525                  
0000148C  43F9 00002566            526                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
00001492  103C 000E                527                  MOVE.B      #14, D0             ; command for trap call to display message
00001496  4E4F                     528                  TRAP        #15                 ; trap call  
00001498                           529                  
00001498  43F9 0000254A            530                  LEA         space, A1           ; Display space
0000149E  103C 000E                531                  MOVE.B      #14, D0             ; command for trap call to display message
000014A2  4E4F                     532                  TRAP        #15                 ; trap call
000014A4                           533                  
000014A4  143C 0000                534                  MOVE.B      #zero,D2                
000014A8  4EB9 00001EF2            535                  JSR         printEA
000014AE                           536                  
000014AE  43F9 00002551            537                  LEA         comma, A1           ; Display space
000014B4  103C 000E                538                  MOVE.B      #14, D0             ; command for trap call to display message
000014B8  4E4F                     539                  TRAP        #15                 ; trap call
000014BA                           540                  
000014BA  4242                     541                  CLR         D2
000014BC  1401                     542                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000014BE  E642                     543                  ASR         #three,D2           ; Remove/shift the register out
000014C0  C47C 0007                544                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000014C4                           545                  
000014C4  4243                     546                  CLR         D3                  ; Clearing D3 to avoid mashing data
000014C6  1601                     547                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000014C8  C67C 0007                548                  AND         #seven,D3           ; Change all bits except for register bits to 0
000014CC                           549                  
000014CC                           550  
000014CC  4EB9 00001EF2            551                  JSR         printEA
000014D2                           552          
000014D2  43F9 00002546            553                  LEA         newLine, A1           ; Display space
000014D8  103C 000E                554                  MOVE.B      #14, D0             ; command for trap call to display message
000014DC  4E4F                     555                  TRAP        #15                 ; trap call            
000014DE                           556  
000014DE                           557  
000014DE  6000 FB2C                558                  BRA         LOOP                ; go back to the loop
000014E2                           559   
000014E2                           560  opMOVEB 
000014E2  43F9 0000256B            561          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
000014E8  103C 000E                562          MOVE.B      #14, D0             ; command for trap call to display message
000014EC  4E4F                     563          TRAP        #15                 ; trap call
000014EE  43F9 000025DF            564          LEA         dispByte, A1        ; display byte
000014F4  103C 000E                565          MOVE.B      #14, D0             ; command for trap call to display message
000014F8  4E4F                     566          TRAP        #15                 ; trap call
000014FA  43F9 0000254A            567          LEA         space, A1           ; create spaces
00001500  103C 000E                568          MOVE.B      #14, D0             ; command for trap call to display message
00001504  4E4F                     569          TRAP        #15                 ; trap call
00001506                           570          
00001506                           571          
00001506  4245                     572          CLR         D5                  ; Clear D5
00001508  1A01                     573          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000150A  E245                     574          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
0000150C  CA7C 0007                575          AND         #seven,D5
00001510                           576          
00001510  4244                     577          CLR         D4                  ; Clear out D4
00001512  1801                     578          MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001514  C87C 0001                579          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001518                           580          
00001518  4241                     581          CLR          D1
0000151A  4242                     582          CLR          D2
0000151C  1218                     583          MOVE.B      (A0)+,D1            ; Copy byte into D1
0000151E  1401                     584          MOVE.B      D1,D2
00001520  EC42                     585          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001522  D842                     586          ADD         D2,D4               ; Adds the remaining bits to D4
00001524                           587          
00001524  4242                     588          CLR         D2
00001526  1401                     589          MOVE.B      D1,D2               ; Copy new byte over to D2
00001528  E642                     590          ASR         #three,D2           ; Shift source register out
0000152A  C47C 0007                591          AND         #seven,D2           ; Set everything to 0 except for the mode
0000152E                           592          
0000152E  4243                     593          CLR         D3
00001530  1601                     594          MOVE.B      D1,D3
00001532  C67C 0007                595          AND         #seven,D3
00001536                           596          
00001536  4EB9 00001EF2            597          JSR         printEA
0000153C                           598          
0000153C  43F9 00002551            599          LEA         comma, A1           ; Display space
00001542  103C 000E                600          MOVE.B      #14, D0             ; command for trap call to display message
00001546  4E4F                     601          TRAP        #15                 ; trap call
00001548                           602          
00001548  4242                     603          CLR         D2
0000154A  4243                     604          CLR         D3
0000154C  1404                     605          MOVE.B      D4,D2
0000154E  1605                     606          MOVE.B      D5,D3
00001550                           607          
00001550  4EB9 00001EF2            608          JSR         printEA
00001556                           609          
00001556                           610          
00001556  43F9 00002546            611          LEA         newLine, A1           ; Display space
0000155C  103C 000E                612          MOVE.B      #14, D0             ; command for trap call to display message
00001560  4E4F                     613          TRAP        #15                 ; trap call            
00001562                           614  
00001562                           615  
00001562  6000 FAA8                616          BRA         LOOP                ; go back to the loop
00001566                           617          
00001566                           618  opMOVEL     
00001566                           619          
00001566  4245                     620              CLR         D5                  ; Clear D5
00001568  1A01                     621              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000156A  E245                     622              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
0000156C  CA7C 0007                623              AND         #seven,D5
00001570                           624          
00001570  4244                     625              CLR         D4                  ; Clear out D4
00001572  1801                     626              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001574  C87C 0001                627              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001578                           628          
00001578  4241                     629              CLR          D1
0000157A  4242                     630              CLR          D2
0000157C  1218                     631              MOVE.B      (A0)+,D1            ; Copy byte into D1
0000157E  1401                     632              MOVE.B      D1,D2
00001580  EC42                     633              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001582  D842                     634              ADD         D2,D4               ; Adds the remaining bits to D4
00001584                           635          
00001584  B87C 0001                636              CMP         #one,D4             ; Check if it is MOVEA
00001588  6700 006C                637              BEQ         opMOVEAL            ; If it is, branch off
0000158C                           638              
0000158C  43F9 0000256B            639              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001592  103C 000E                640              MOVE.B      #14, D0             ; command for trap call to display message
00001596  4E4F                     641              TRAP        #15                 ; trap call  
00001598                           642              
00001598                           643              
00001598  43F9 000025E5            644              LEA         dispLong,A1
0000159E  103C 000E                645              MOVE.B      #14, D0             ; command for trap call to display message
000015A2  4E4F                     646              TRAP        #15                 ; trap call
000015A4                           647              
000015A4  43F9 0000254A            648              LEA         space, A1           ; create spaces
000015AA  103C 000E                649              MOVE.B      #14, D0             ; command for trap call to display message
000015AE  4E4F                     650              TRAP        #15                 ; trap call
000015B0                           651          
000015B0  4242                     652              CLR         D2
000015B2  1401                     653              MOVE.B      D1,D2               ; Copy new byte over to D2
000015B4  E642                     654              ASR         #three,D2           ; Shift source register out
000015B6  C47C 0007                655              AND         #seven,D2           ; Set everything to 0 except for the mode
000015BA                           656          
000015BA  4243                     657              CLR         D3
000015BC  1601                     658              MOVE.B      D1,D3
000015BE  C67C 0007                659              AND         #seven,D3
000015C2                           660              
000015C2  4241                     661              CLR         D1                  ; Clear D1
000015C4  2218                     662              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
000015C6                           663              
000015C6  4EB9 00001EF2            664              JSR         printEA
000015CC                           665              
000015CC  43F9 00002551            666              LEA         comma, A1           ; Display comma
000015D2  103C 000E                667              MOVE.B      #14, D0             ; command for trap call to display message
000015D6  4E4F                     668              TRAP        #15                 ; trap call
000015D8                           669          
000015D8  4242                     670              CLR         D2
000015DA  4243                     671              CLR         D3
000015DC  1404                     672              MOVE.B      D4,D2
000015DE  1605                     673              MOVE.B      D5,D3
000015E0                           674              
000015E0                           675  
000015E0                           676              
000015E0  4EB9 00001EF2            677              JSR         printEA
000015E6                           678          
000015E6                           679          
000015E6  43F9 00002546            680              LEA         newLine, A1           ; Display space
000015EC  103C 000E                681              MOVE.B      #14, D0             ; command for trap call to display message
000015F0  4E4F                     682              TRAP        #15                 ; trap call            
000015F2                           683  
000015F2                           684  
000015F2  6000 FA18                685              BRA         LOOP                ; go back to the loop
000015F6                           686              
000015F6                           687  opMOVEAL
000015F6                           688  
000015F6  43F9 00002570            689              LEA         MOVEAmatch,A1
000015FC  103C 000E                690              MOVE.B      #14, D0             ; command for trap call to display message
00001600  4E4F                     691              TRAP        #15                 ; trap call
00001602                           692              
00001602  43F9 000025E5            693              LEA         dispLong,A1
00001608  103C 000E                694              MOVE.B      #14, D0             ; command for trap call to display message
0000160C  4E4F                     695              TRAP        #15                 ; trap call
0000160E                           696              
0000160E                           697  
0000160E  43F9 0000254A            698              LEA         space, A1           ; create spaces
00001614  103C 000E                699              MOVE.B      #14, D0             ; command for trap call to display message
00001618  4E4F                     700              TRAP        #15                 ; trap call
0000161A                           701              
0000161A  4242                     702              CLR         D2
0000161C  1401                     703              MOVE.B      D1,D2               ; Copy new byte over to D2
0000161E  E642                     704              ASR         #three,D2           ; Shift source register out
00001620  C47C 0007                705              AND         #seven,D2           ; Set everything to 0 except for the mode
00001624                           706          
00001624  4243                     707              CLR         D3
00001626  1601                     708              MOVE.B      D1,D3
00001628  C67C 0007                709              AND         #seven,D3
0000162C                           710              
0000162C  4241                     711              CLR         D1                  ; Clear D1
0000162E  3218                     712              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001630                           713              
00001630                           714              
00001630  4EB9 00001EF2            715              JSR         printEA
00001636                           716              
00001636  43F9 00002551            717              LEA         comma, A1           ; Display comma
0000163C  103C 000E                718              MOVE.B      #14, D0             ; command for trap call to display message
00001640  4E4F                     719              TRAP        #15                 ; trap call
00001642                           720  
00001642  4242                     721              CLR         D2
00001644  4243                     722              CLR         D3
00001646  1404                     723              MOVE.B      D4,D2
00001648  1605                     724              MOVE.B      D5,D3
0000164A                           725          
0000164A  4EB9 00001EF2            726              JSR         printEA
00001650                           727          
00001650                           728          
00001650  43F9 00002546            729              LEA         newLine, A1           ; Display space
00001656  103C 000E                730              MOVE.B      #14, D0             ; command for trap call to display message
0000165A  4E4F                     731              TRAP        #15                 ; trap call            
0000165C                           732  
0000165C                           733  
0000165C  6000 F9AE                734              BRA         LOOP                ; go back to the loop
00001660                           735  
00001660                           736  opMOVEW
00001660                           737          
00001660  4245                     738              CLR         D5                  ; Clear D5
00001662  1A01                     739              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001664  E245                     740              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001666  CA7C 0007                741              AND         #seven,D5
0000166A                           742          
0000166A  4244                     743              CLR         D4                  ; Clear out D4
0000166C  1801                     744              MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000166E  C87C 0001                745              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001672                           746          
00001672  4241                     747              CLR          D1
00001674  4242                     748              CLR          D2
00001676  1218                     749              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001678  1401                     750              MOVE.B      D1,D2
0000167A  EC42                     751              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000167C  D842                     752              ADD         D2,D4               ; Adds the remaining bits to D4
0000167E                           753          
0000167E  B87C 0001                754              CMP         #one,D4             ; Check if it is MOVEA
00001682  6700 006C                755              BEQ         opMOVEAW            ; If it is, branch off
00001686                           756              
00001686  43F9 0000256B            757              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
0000168C  103C 000E                758              MOVE.B      #14, D0             ; command for trap call to display message
00001690  4E4F                     759              TRAP        #15                 ; trap call  
00001692                           760              
00001692  43F9 000025E2            761              LEA         dispWord,A1
00001698  103C 000E                762              MOVE.B      #14, D0             ; command for trap call to display message
0000169C  4E4F                     763              TRAP        #15                 ; trap call
0000169E                           764              
0000169E  43F9 0000254A            765              LEA         space, A1           ; create spaces
000016A4  103C 000E                766              MOVE.B      #14, D0             ; command for trap call to display message
000016A8  4E4F                     767              TRAP        #15                 ; trap call
000016AA                           768          
000016AA  4242                     769              CLR         D2
000016AC  1401                     770              MOVE.B      D1,D2               ; Copy new byte over to D2
000016AE  E642                     771              ASR         #three,D2           ; Shift source register out
000016B0  C47C 0007                772              AND         #seven,D2           ; Set everything to 0 except for the mode
000016B4                           773          
000016B4  4243                     774              CLR         D3
000016B6  1601                     775              MOVE.B      D1,D3
000016B8  C67C 0007                776              AND         #seven,D3
000016BC                           777              
000016BC  4241                     778              CLR         D1                  ; Clear D1
000016BE  3218                     779              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
000016C0                           780              
000016C0  4EB9 00001EF2            781              JSR         printEA
000016C6                           782              
000016C6  43F9 00002551            783              LEA         comma, A1           ; Display comma
000016CC  103C 000E                784              MOVE.B      #14, D0             ; command for trap call to display message
000016D0  4E4F                     785              TRAP        #15                 ; trap call
000016D2                           786          
000016D2  4242                     787              CLR         D2
000016D4  4243                     788              CLR         D3
000016D6  1404                     789              MOVE.B      D4,D2
000016D8  1605                     790              MOVE.B      D5,D3
000016DA                           791              
000016DA                           792  
000016DA                           793              
000016DA  4EB9 00001EF2            794              JSR         printEA
000016E0                           795          
000016E0                           796          
000016E0  43F9 00002546            797              LEA         newLine, A1           ; Display space
000016E6  103C 000E                798              MOVE.B      #14, D0             ; command for trap call to display message
000016EA  4E4F                     799              TRAP        #15                 ; trap call            
000016EC                           800  
000016EC                           801  
000016EC  6000 F91E                802              BRA         LOOP                ; go back to the loop
000016F0                           803  opMOVEAW  
000016F0  43F9 00002570            804              LEA         MOVEAmatch,A1
000016F6  103C 000E                805              MOVE.B      #14, D0             ; command for trap call to display message
000016FA  4E4F                     806              TRAP        #15                 ; trap call
000016FC                           807              
000016FC  43F9 000025E2            808              LEA         dispWord,A1
00001702  103C 000E                809              MOVE.B      #14, D0             ; command for trap call to display message
00001706  4E4F                     810              TRAP        #15                 ; trap call
00001708                           811              
00001708                           812  
00001708  43F9 0000254A            813              LEA         space, A1           ; create spaces
0000170E  103C 000E                814              MOVE.B      #14, D0             ; command for trap call to display message
00001712  4E4F                     815              TRAP        #15                 ; trap call
00001714                           816              
00001714  4242                     817              CLR         D2
00001716  1401                     818              MOVE.B      D1,D2               ; Copy new byte over to D2
00001718  E642                     819              ASR         #three,D2           ; Shift source register out
0000171A  C47C 0007                820              AND         #seven,D2           ; Set everything to 0 except for the mode
0000171E                           821          
0000171E  4243                     822              CLR         D3
00001720  1601                     823              MOVE.B      D1,D3
00001722  C67C 0007                824              AND         #seven,D3
00001726                           825              
00001726  4241                     826              CLR         D1                  ; Clear D1
00001728  3218                     827              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
0000172A                           828              
0000172A                           829              
0000172A  4EB9 00001EF2            830              JSR         printEA
00001730                           831              
00001730  43F9 00002551            832              LEA         comma, A1           ; Display comma
00001736  103C 000E                833              MOVE.B      #14, D0             ; command for trap call to display message
0000173A  4E4F                     834              TRAP        #15                 ; trap call
0000173C                           835  
0000173C  4242                     836              CLR         D2
0000173E  4243                     837              CLR         D3
00001740  1404                     838              MOVE.B      D4,D2
00001742  1605                     839              MOVE.B      D5,D3
00001744                           840          
00001744  4EB9 00001EF2            841              JSR         printEA
0000174A                           842          
0000174A                           843          
0000174A  43F9 00002546            844              LEA         newLine, A1           ; Display space
00001750  103C 000E                845              MOVE.B      #14, D0             ; command for trap call to display message
00001754  4E4F                     846              TRAP        #15                 ; trap call            
00001756                           847  
00001756                           848  
00001756  6000 F8B4                849              BRA         LOOP                ; go back to the loop
0000175A                           850  
0000175A                           851  opNEG   
0000175A  43F9 00002576            852              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001760  103C 000E                853              MOVE.B      #14, D0             ; command for trap call to display message
00001764  4E4F                     854              TRAP        #15                 ; trap call
00001766                           855          
00001766                           856          
00001766  1218                     857              MOVE.B      (A0)+, D1
00001768  1401                     858              MOVE.B      D1,D2               ; copy data over
0000176A  EC42                     859              ASR         #six,D2
0000176C                           860              
0000176C  B47C 0000                861              CMP         #zero,D2
00001770  6700 0016                862              BEQ         opNEGB
00001774  B47C 0001                863              CMP         #one,D2
00001778  6700 004E                864              BEQ         opNEGL
0000177C  B47C 0002                865              CMP         #two,D2
00001780  6700 0086                866              BEQ         opNEGW
00001784  6000 0DB6                867              BRA         INVALID
00001788                           868  opNEGB
00001788                           869  
00001788  43F9 000025DF            870              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
0000178E  103C 000E                871              MOVE.B      #14, D0             ; command for trap call to display message
00001792  4E4F                     872              TRAP        #15                 ; trap call
00001794                           873          
00001794  43F9 0000254A            874              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000179A  103C 000E                875              MOVE.B      #14, D0             ; command for trap call to display message
0000179E  4E4F                     876              TRAP        #15                 ; trap call
000017A0                           877          
000017A0  4242                     878              CLR         D2                  ; Clear Data register 2
000017A2  3401                     879              MOVE        D1,D2               ; Move byte into D2
000017A4  E642                     880              ASR         #three,D2           ; Shift mode into place and moves mode into place
000017A6  C47C 0007                881              AND         #seven,D2           ; Stores mode
000017AA                           882              
000017AA  4243                     883              CLR         D3
000017AC  3601                     884              MOVE        D1,D3
000017AE  C67C 0007                885              AND         #seven,D3
000017B2                           886          
000017B2  4EB9 00001EF2            887              JSR         printEA
000017B8                           888                  
000017B8  43F9 00002546            889              LEA         newLine, A1           ; Display space
000017BE  103C 000E                890              MOVE.B      #14, D0             ; command for trap call to display message
000017C2  4E4F                     891              TRAP        #15                 ; trap call  
000017C4                           892          
000017C4  6000 F846                893              BRA         LOOP
000017C8                           894                  
000017C8                           895  
000017C8                           896  opNEGL
000017C8                           897  
000017C8  43F9 000025E5            898              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
000017CE  103C 000E                899              MOVE.B      #14, D0             ; command for trap call to display message
000017D2  4E4F                     900              TRAP        #15                 ; trap call
000017D4                           901  
000017D4  43F9 0000254A            902              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000017DA  103C 000E                903              MOVE.B      #14, D0             ; command for trap call to display message
000017DE  4E4F                     904              TRAP        #15                 ; trap call
000017E0                           905                  
000017E0  4242                     906              CLR         D2                  ; Clear Data register 2
000017E2  3401                     907              MOVE        D1,D2               ; Move byte into D2
000017E4  E642                     908              ASR         #three,D2           ; Shift mode into place and moves mode into place
000017E6  C47C 0007                909              AND         #seven,D2           ; Stores mode
000017EA                           910          
000017EA  4243                     911              CLR         D3
000017EC  3601                     912              MOVE        D1,D3
000017EE  C67C 0007                913              AND         #seven,D3
000017F2                           914          
000017F2  4EB9 00001EF2            915              JSR         printEA
000017F8                           916                      
000017F8  43F9 00002546            917              LEA         newLine, A1         ; Display space
000017FE  103C 000E                918              MOVE.B      #14, D0             ; command for trap call to display message
00001802  4E4F                     919              TRAP        #15                 ; trap call  
00001804                           920          
00001804  6000 F806                921              BRA         LOOP
00001808                           922          
00001808                           923  
00001808                           924  opNEGW
00001808                           925  
00001808  43F9 000025E2            926              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
0000180E  103C 000E                927              MOVE.B      #14, D0             ; command for trap call to display message
00001812  4E4F                     928              TRAP        #15                 ; trap call
00001814                           929          
00001814  43F9 0000254A            930              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000181A  103C 000E                931              MOVE.B      #14, D0             ; command for trap call to display message
0000181E  4E4F                     932              TRAP        #15                 ; trap call        
00001820                           933                  
00001820  4242                     934              CLR         D2                  ; Clear Data register 2
00001822  3401                     935              MOVE        D1,D2               ; Move byte into D2
00001824  E642                     936              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001826  C47C 0007                937              AND         #seven,D2           ; Stores mode
0000182A                           938          
0000182A  4243                     939              CLR         D3
0000182C  3601                     940              MOVE        D1,D3
0000182E  C67C 0007                941              AND         #seven,D3
00001832                           942          
00001832  4EB9 00001EF2            943              JSR         printEA
00001838                           944              
00001838  43F9 00002546            945              LEA         newLine, A1           ; Display space
0000183E  103C 000E                946              MOVE.B      #14, D0             ; command for trap call to display message
00001842  4E4F                     947              TRAP        #15                 ; trap call  
00001844                           948          
00001844  6000 F7C6                949              BRA         LOOP
00001848                           950  
00001848                           951  opRTSJSR
00001848                           952          
00001848  1218                     953              MOVE.B      (A0)+, D1
0000184A                           954              
0000184A  1401                     955              MOVE.B      D1,D2               ; copy data over
0000184C  B47C 0075                956              CMP         #117,D2
00001850  6700 0050                957              BEQ         opRTS
00001854                           958              
00001854  EC42                     959              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
00001856  B47C 0002                960              CMP         #two,D2             ; Checking if it is JSR
0000185A  6700 0006                961              BEQ         opJSR               ; It is equal, so branch off to opJSR
0000185E                           962  
0000185E  6000 0CDC                963              BRA         invalid
00001862                           964  
00001862                           965  opJSR
00001862                           966                        
00001862  43F9 0000257E            967              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001868  103C 000E                968              MOVE.B      #14, D0             ; command for trap call to display message
0000186C  4E4F                     969              TRAP        #15                 ; trap call
0000186E                           970              
0000186E  43F9 0000254A            971              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001874  103C 000E                972              MOVE.B      #14, D0             ; command for trap call to display message
00001878  4E4F                     973              TRAP        #15                 ; trap call
0000187A                           974              
0000187A  4242                     975              CLR         D2
0000187C  4243                     976              CLR         D3
0000187E                           977              
0000187E  1401                     978              MOVE.B      D1,D2
00001880  E642                     979              ASR         #three,D2
00001882  C47C 0007                980              AND         #seven,D2
00001886                           981              
00001886  1601                     982              MOVE.B      D1,D3
00001888  C67C 0007                983              AND         #seven,D3
0000188C                           984              
0000188C  4EB9 00001EF2            985              JSR         printEA
00001892                           986              
00001892  43F9 00002546            987              LEA         newLine, A1           ; Display space
00001898  103C 000E                988              MOVE.B      #14, D0             ; command for trap call to display message
0000189C  4E4F                     989              TRAP        #15                 ; trap call  
0000189E                           990              
0000189E  6000 F76C                991              BRA         loop            
000018A2                           992  opRTS
000018A2                           993  
000018A2  43F9 0000257A            994              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
000018A8  103C 000E                995              MOVE.B      #14, D0             ; command for trap call to display message
000018AC  4E4F                     996              TRAP        #15                 ; trap call
000018AE                           997              
000018AE  43F9 00002546            998              LEA         newLine, A1           ; Display space
000018B4  103C 000E                999              MOVE.B      #14, D0             ; command for trap call to display message
000018B8  4E4F                    1000              TRAP        #15                 ; trap call 
000018BA                          1001              
000018BA  6000 F750               1002              BRA         loop
000018BE                          1003  
000018BE                          1004  opMOVEMLEA
000018BE  4242                    1005              CLR         D2                  ; Clear D2
000018C0  1401                    1006              MOVE.B      D1,D2               ; Copy byte over
000018C2  C47C 000F               1007              AND         #secNib,D2          ; Check only the second nibble
000018C6  B47C 000C               1008              CMP         #twelve,D2          ; Compare the second nibble to twelve
000018CA  6700 000E               1009              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
000018CE  B47C 0008               1010              CMP         #eight,D2           ; Compare the second nibble to eight
000018D2  6700 0006               1011              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
000018D6  6000 0052               1012              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
000018DA                          1013              
000018DA                          1014  opMOVEM            
000018DA  4244                    1015              CLR         D4                  ; Clearing D4 to store dr field
000018DC  1801                    1016              MOVE.B      D1,D4               ; Moving byte to find dr field
000018DE  E444                    1017              ASR         #two,D4             ; Moving dr field to readable spot
000018E0  C87C 0001               1018              AND         #one,D4             ; seting everything except dr to 0
000018E4                          1019  
000018E4  4241                    1020              CLR         D1  
000018E6  1218                    1021              MOVE.B      (A0)+, D1           ; Taking in next byte
000018E8                          1022              
000018E8  4246                    1023              CLR         D6
000018EA  1C01                    1024              MOVE.B      D1,D6               ; Using D6 to check if this is indeed MOVEM
000018EC  EC46                    1025              ASR         #six,D6
000018EE  CC7C 0001               1026              AND         #one,D6
000018F2  BC7C 0001               1027              CMP         #one,D6             ; This bit should be one if this is MOVEM
000018F6  6600 0C44               1028              BNE         invalid             ; If this is not 1 then this is not moveM
000018FA  4246                    1029              CLR         D6
000018FC                          1030              
000018FC  43F9 00002582           1031              LEA         MOVEMMatch, A1        ; we know that the opcode will be MOVEM, so load A1 to print message
00001902  103C 000E               1032              MOVE.B      #14, D0             ; command for trap call to display message
00001906  4E4F                    1033              TRAP        #15                 ; trap call
00001908                          1034              
00001908  4245                    1035              CLR         D5                  ; Clearing D5 to store size
0000190A  1A01                    1036              MOVE.B      D1,D5               ; Moving byte that contains bit for size
0000190C  EA45                    1037              ASR         #five,D5            ; Moving size bit to the very right to read
0000190E  CA7C 0001               1038              AND         #one,D5             ; Isolating the one bit for size
00001912                          1039              
00001912  4242                    1040              CLR         D2                  ; Storing EA mode in D2
00001914  1401                    1041              MOVE.B      D1,D2
00001916  E642                    1042              ASR         #three,D2
00001918  C47C 0007               1043              AND         #seven,D2
0000191C                          1044              
0000191C  4243                    1045              CLR         D3                  ; Storing EA register into D3
0000191E  1601                    1046              MOVE.B      D1,D3
00001920  C67C 0007               1047              AND         #seven,D3
00001924                          1048              
00001924                          1049              
00001924  4EB9 000019DE           1050              JSR         MOVEMLIST
0000192A                          1051  
0000192A                          1052  opLEA
0000192A                          1053              
0000192A                          1054  
0000192A                          1055  
0000192A                          1056  opSUBQ      
0000192A  43F9 0000258C           1057              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
00001930  103C 000E               1058              MOVE.B      #14, D0             ; command for trap call to display message
00001934  4E4F                    1059              TRAP        #15                 ; trap call
00001936                          1060  
00001936  43F9 00002591           1061  opBRA       LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
0000193C  103C 000E               1062              MOVE.B      #14, D0             ; command for trap call to display message
00001940  4E4F                    1063              TRAP        #15                 ; trap call
00001942  43F9 0000254A           1064              LEA         space, A1           ; create spaces
00001948  103C 000E               1065              MOVE.B      #14, D0             ; command for trap call to display message
0000194C  4E4F                    1066              TRAP        #15                 ; trap call
0000194E                          1067  
0000194E  43F9 00002595           1068  opBCS       LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001954  103C 000E               1069              MOVE.B      #14, D0             ; command for trap call to display message
00001958  4E4F                    1070              TRAP        #15                 ; trap call
0000195A                          1071  
0000195A  43F9 00002599           1072  opBVC       LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001960  103C 000E               1073              MOVE.B      #14, D0             ; command for trap call to display message
00001964  4E4F                    1074              TRAP        #15                 ; trap call
00001966                          1075  
00001966  43F9 0000259D           1076  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
0000196C  103C 000E               1077          MOVE.B      #14, D0             ; command for trap call to display message
00001970  4E4F                    1078          TRAP        #15                 ; trap call
00001972                          1079  
00001972  43F9 000025A1           1080  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001978  103C 000E               1081          MOVE.B      #14, D0             ; command for trap call to display message
0000197C  4E4F                    1082          TRAP        #15                 ; trap call
0000197E                          1083  
0000197E  43F9 000025AD           1084  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001984  103C 000E               1085          MOVE.B      #14, D0             ; command for trap call to display message
00001988  4E4F                    1086          TRAP        #15                 ; trap call
0000198A                          1087  
0000198A  43F9 000025B9           1088  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001990  103C 000E               1089          MOVE.B      #14, D0             ; command for trap call to display message
00001994  4E4F                    1090          TRAP        #15                 ; trap call
00001996                          1091  
00001996  43F9 000025D3           1092  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000199C  103C 000E               1093          MOVE.B      #14, D0             ; command for trap call to display message
000019A0  4E4F                    1094          TRAP        #15                 ; trap call
000019A2                          1095  
000019A2  43F9 000025CF           1096  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000019A8  103C 000E               1097          MOVE.B      #14, D0             ; command for trap call to display message
000019AC  4E4F                    1098          TRAP        #15                 ; trap call
000019AE                          1099  
000019AE  43F9 000025CB           1100  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
000019B4  103C 000E               1101          MOVE.B      #14, D0             ; command for trap call to display message
000019B8  4E4F                    1102          TRAP        #15                 ; trap call
000019BA                          1103  
000019BA  43F9 000025C7           1104  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
000019C0  103C 000E               1105          MOVE.B      #14, D0             ; command for trap call to display message
000019C4  4E4F                    1106          TRAP        #15                 ; trap call
000019C6                          1107  
000019C6  43F9 000025DB           1108  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
000019CC  103C 000E               1109          MOVE.B      #14, D0             ; command for trap call to display message
000019D0  4E4F                    1110          TRAP        #15                 ; trap call
000019D2                          1111  
000019D2                          1112  opROR   
000019D2  43F9 000025D7           1113          LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
000019D8  103C 000E               1114          MOVE.B      #14, D0             ; command for trap call to display message
000019DC  4E4F                    1115          TRAP        #15                 ; trap call
000019DE                          1116  
000019DE                          1117  
000019DE  48E7 FF7E               1118  MOVEMLIST   MOVEM.L  D0-D7/A1-A6, -(SP) 
000019E2  BA7C 0000               1119              CMP      #zero,D5
000019E6  6700 000A               1120              BEQ      MOVEMW
000019EA  BA7C 0001               1121              CMP      #one, D5
000019EE  6700 002E               1122              BEQ      MOVEML
000019F2                          1123              
000019F2                          1124  MOVEMW     
000019F2  43F9 000025E2           1125              LEA         dispWord, A1        ; we know that the opcode will be ROR, so load A1 to print message
000019F8  103C 000E               1126              MOVE.B      #14, D0             ; command for trap call to display message
000019FC  4E4F                    1127              TRAP        #15                 ; trap call
000019FE                          1128  
000019FE  43F9 0000254A           1129              LEA         space, A1           ; we know that the opcode will be ROR, so load A1 to print message
00001A04  103C 000E               1130              MOVE.B      #14, D0             ; command for trap call to display message
00001A08  4E4F                    1131              TRAP        #15                 ; trap call
00001A0A                          1132              
00001A0A  B87C 0000               1133              CMP         #zero,D4
00001A0E  6700 003A               1134              BEQ         printRegMem
00001A12  B87C 0001               1135              CMP         #one,D4
00001A16  6700 04D2               1136              BEQ         printMemReg
00001A1A  6000 0B20               1137              BRA         invalid
00001A1E                          1138  
00001A1E                          1139  MOVEML   
00001A1E  43F9 000025E5           1140              LEA         dispLong, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001A24  103C 000E               1141              MOVE.B      #14, D0             ; command for trap call to display message
00001A28  4E4F                    1142              TRAP        #15                 ; trap call
00001A2A                          1143  
00001A2A  43F9 0000254A           1144              LEA         space, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001A30  103C 000E               1145              MOVE.B      #14, D0             ; command for trap call to display message
00001A34  4E4F                    1146              TRAP        #15                 ; trap call
00001A36                          1147           
00001A36                          1148  
00001A36  B87C 0000               1149              CMP         #zero,D4
00001A3A  6700 000E               1150              BEQ         printRegMem
00001A3E  B87C 0001               1151              CMP         #one,D4
00001A42  6700 04A6               1152              BEQ         printMemReg
00001A46  6000 0AF4               1153              BRA         invalid            
00001A4A                          1154  
00001A4A                          1155  printRegMem 
00001A4A  3218                    1156              MOVE.W      (A0)+, D1           ; Taking in next word           
00001A4C                          1157  
00001A4C  4244                    1158              CLR         D4                  ; Using D4 to store predecrement mode addresses
00001A4E  1801                    1159              MOVE.B      D1,D4               ; Stores bits for D0-D7
00001A50                          1160              
00001A50  4245                    1161              CLR         D5
00001A52  1A01                    1162              MOVE.B      D1,D5
00001A54  CA7C 0001               1163              AND         #mask1,D5
00001A58  BA7C 0001               1164              CMP         #mask1,D5
00001A5C  6700 007A               1165              BEQ         DataReg0
00001A60                          1166              
00001A60  4245                    1167              CLR         D5
00001A62  1A01                    1168              MOVE.B      D1,D5
00001A64  CA7C 0002               1169              AND         #mask2,D5
00001A68  BA7C 0002               1170              CMP         #mask2,D5
00001A6C  6700 009A               1171              BEQ         DataReg1
00001A70                          1172  
00001A70  4245                    1173              CLR         D5
00001A72  1A01                    1174              MOVE.B      D1,D5
00001A74  CA7C 0004               1175              AND         #mask3,D5
00001A78  BA7C 0004               1176              CMP         #mask3,D5
00001A7C  6700 00CA               1177              BEQ         DataReg2            
00001A80                          1178              
00001A80  4245                    1179              CLR         D5
00001A82  1A01                    1180              MOVE.B      D1,D5
00001A84  CA7C 0008               1181              AND         #mask4,D5
00001A88  BA7C 0008               1182              CMP         #mask4,D5
00001A8C  6700 00FA               1183              BEQ         DataReg3            
00001A90                          1184              
00001A90  4245                    1185              CLR         D5
00001A92  1A01                    1186              MOVE.B      D1,D5
00001A94  CA7C 0010               1187              AND         #mask5,D5
00001A98  BA7C 0010               1188              CMP         #mask5,D5
00001A9C  6700 012A               1189              BEQ         DataReg4
00001AA0                          1190  
00001AA0  4245                    1191              CLR         D5
00001AA2  1A01                    1192              MOVE.B      D1,D5
00001AA4  CA7C 0020               1193              AND         #mask6,D5
00001AA8  BA7C 0020               1194              CMP         #mask6,D5
00001AAC  6700 015A               1195              BEQ         DataReg5
00001AB0                          1196  
00001AB0  4245                    1197              CLR         D5
00001AB2  1A01                    1198              MOVE.B      D1,D5
00001AB4  CA7C 0040               1199              AND         #mask7,D5
00001AB8  BA7C 0040               1200              CMP         #mask7,D5
00001ABC  6700 018A               1201              BEQ         DataReg6
00001AC0                          1202  
00001AC0  4245                    1203              CLR         D5
00001AC2  1A01                    1204              MOVE.B      D1,D5
00001AC4  CA7C 0080               1205              AND         #mask8,D5
00001AC8  BA7C 0080               1206              CMP         #mask8,D5
00001ACC  6700 01BA               1207              BEQ         DataReg7
00001AD0                          1208              
00001AD0  6000 0A6A               1209              BRA         invalid
00001AD4  6000 0A66               1210              BRA         invalid        
00001AD8                          1211              
00001AD8                          1212  DataReg0
00001AD8  43F9 00002602           1213              LEA         dispD0, A1          ; Output string D0
00001ADE  103C 000E               1214              MOVE.B      #14, D0             ; command for trap call to display message
00001AE2  4E4F                    1215              TRAP        #15                 ; trap call
00001AE4                          1216              
00001AE4  4245                    1217              CLR         D5
00001AE6  1A01                    1218              MOVE.B      D1,D5
00001AE8  CA7C 0002               1219              AND         #mask2,D5
00001AEC  BA7C 0002               1220              CMP         #mask2,D5
00001AF0  6700 0006               1221              BEQ         Reg0Cont
00001AF4  6000 01A2               1222              BRA         printMem
00001AF8                          1223  Reg0Cont        
00001AF8  43F9 00002557           1224              LEA         dec, A1             ; Output -
00001AFE  103C 000E               1225              MOVE.B      #14, D0             ; command for trap call to display message
00001B02  4E4F                    1226              TRAP        #15                 ; trap call        
00001B04  6000 0002               1227              BRA         DataReg1
00001B08                          1228  
00001B08                          1229  DataReg1
00001B08  4245                    1230              CLR         D5
00001B0A  1A01                    1231              MOVE.B      D1,D5
00001B0C  CA7C 0005               1232              AND         #maskA,D5
00001B10  BA7C 0005               1233              CMP         #maskA,D5
00001B14  6700 0032               1234              BEQ         DataReg2
00001B18                          1235              
00001B18  43F9 00002605           1236              LEA         dispD1, A1          ; Output string D0
00001B1E  103C 000E               1237              MOVE.B      #14, D0             ; command for trap call to display message
00001B22  4E4F                    1238              TRAP        #15                 ; trap call
00001B24                          1239              
00001B24  4245                    1240              CLR         D5
00001B26  1A01                    1241              MOVE.B      D1,D5
00001B28  CA7C 0004               1242              AND         #mask3,D5
00001B2C  BA7C 0004               1243              CMP         #mask3,D5
00001B30  6700 0006               1244              BEQ         Reg1Cont
00001B34  6000 0162               1245              BRA         printMem
00001B38                          1246  Reg1Cont        
00001B38  43F9 00002557           1247              LEA         dec, A1             ; Output -
00001B3E  103C 000E               1248              MOVE.B      #14, D0             ; command for trap call to display message
00001B42  4E4F                    1249              TRAP        #15                 ; trap call        
00001B44  6000 0002               1250              BRA         DataReg2
00001B48                          1251  
00001B48                          1252  
00001B48                          1253  DataReg2
00001B48  4245                    1254              CLR         D5
00001B4A  1A01                    1255              MOVE.B      D1,D5
00001B4C  CA7C 000A               1256              AND         #maskB,D5
00001B50  BA7C 000A               1257              CMP         #maskB,D5
00001B54  6700 0032               1258              BEQ         DataReg3
00001B58                          1259              
00001B58                          1260              
00001B58  43F9 00002608           1261              LEA         dispD2, A1          ; Output string D0
00001B5E  103C 000E               1262              MOVE.B      #14, D0             ; command for trap call to display message
00001B62  4E4F                    1263              TRAP        #15                 ; trap call
00001B64                          1264              
00001B64  4245                    1265              CLR         D5
00001B66  1A01                    1266              MOVE.B      D1,D5
00001B68  CA7C 0008               1267              AND         #mask4,D5
00001B6C  BA7C 0008               1268              CMP         #mask4,D5
00001B70  6700 0006               1269              BEQ         Reg2Cont
00001B74  6000 0122               1270              BRA         printMem
00001B78                          1271  Reg2Cont        
00001B78  43F9 00002557           1272              LEA         dec, A1             ; Output -
00001B7E  103C 000E               1273              MOVE.B      #14, D0             ; command for trap call to display message
00001B82  4E4F                    1274              TRAP        #15                 ; trap call        
00001B84  6000 0002               1275              BRA         DataReg3
00001B88                          1276  
00001B88                          1277  DataReg3
00001B88  4245                    1278              CLR         D5
00001B8A  1A01                    1279              MOVE.B      D1,D5
00001B8C  CA7C 0014               1280              AND         #maskC,D5
00001B90  BA7C 0014               1281              CMP         #maskC,D5
00001B94  6700 0032               1282              BEQ         DataReg4
00001B98                          1283              
00001B98  43F9 0000260B           1284              LEA         dispD3, A1          ; Output string D0
00001B9E  103C 000E               1285              MOVE.B      #14, D0             ; command for trap call to display message
00001BA2  4E4F                    1286              TRAP        #15                 ; trap call
00001BA4                          1287              
00001BA4  4245                    1288              CLR         D5
00001BA6  1A01                    1289              MOVE.B      D1,D5
00001BA8  CA7C 0010               1290              AND         #mask5,D5
00001BAC  BA7C 0010               1291              CMP         #mask5,D5
00001BB0  6700 0006               1292              BEQ         Reg3Cont
00001BB4  6000 00E2               1293              BRA         printMem
00001BB8                          1294  Reg3Cont        
00001BB8  43F9 00002557           1295              LEA         dec, A1             ; Output -
00001BBE  103C 000E               1296              MOVE.B      #14, D0             ; command for trap call to display message
00001BC2  4E4F                    1297              TRAP        #15                 ; trap call        
00001BC4  6000 0002               1298              BRA         DataReg4
00001BC8                          1299  
00001BC8                          1300  
00001BC8                          1301  DataReg4
00001BC8  4245                    1302              CLR         D5
00001BCA  1A01                    1303              MOVE.B      D1,D5
00001BCC  CA7C 0028               1304              AND         #maskD,D5
00001BD0  BA7C 0028               1305              CMP         #maskD,D5
00001BD4  6700 0032               1306              BEQ         DataReg5
00001BD8                          1307              
00001BD8  43F9 0000260E           1308              LEA         dispD4, A1          ; Output string D0
00001BDE  103C 000E               1309              MOVE.B      #14, D0             ; command for trap call to display message
00001BE2  4E4F                    1310              TRAP        #15                 ; trap call
00001BE4                          1311              
00001BE4  4245                    1312              CLR         D5
00001BE6  1A01                    1313              MOVE.B      D1,D5
00001BE8  CA7C 0020               1314              AND         #mask6,D5
00001BEC  BA7C 0020               1315              CMP         #mask6,D5
00001BF0  6700 0006               1316              BEQ         Reg4Cont
00001BF4  6000 00A2               1317              BRA         printMem
00001BF8                          1318  Reg4Cont        
00001BF8  43F9 00002557           1319              LEA         dec, A1             ; Output -
00001BFE  103C 000E               1320              MOVE.B      #14, D0             ; command for trap call to display message
00001C02  4E4F                    1321              TRAP        #15                 ; trap call        
00001C04  6000 0002               1322              BRA         DataReg5
00001C08                          1323  
00001C08                          1324  DataReg5
00001C08  4245                    1325              CLR         D5
00001C0A  1A01                    1326              MOVE.B      D1,D5
00001C0C  CA7C 0050               1327              AND         #maskE,D5
00001C10  BA7C 0050               1328              CMP         #maskE,D5
00001C14  6700 0032               1329              BEQ         DataReg6
00001C18                          1330              
00001C18  43F9 00002611           1331              LEA         dispD5, A1          ; Output string D0
00001C1E  103C 000E               1332              MOVE.B      #14, D0             ; command for trap call to display message
00001C22  4E4F                    1333              TRAP        #15                 ; trap call
00001C24                          1334              
00001C24  4245                    1335              CLR         D5
00001C26  1A01                    1336              MOVE.B      D1,D5
00001C28  CA7C 0040               1337              AND         #mask7,D5
00001C2C  BA7C 0040               1338              CMP         #mask7,D5
00001C30  6700 0006               1339              BEQ         Reg5Cont
00001C34  6000 0062               1340              BRA         printMem
00001C38                          1341  Reg5Cont        
00001C38  43F9 00002557           1342              LEA         dec, A1             ; Output -
00001C3E  103C 000E               1343              MOVE.B      #14, D0             ; command for trap call to display message
00001C42  4E4F                    1344              TRAP        #15                 ; trap call        
00001C44  6000 0042               1345              BRA         DataReg7
00001C48                          1346  
00001C48                          1347  DataReg6
00001C48  4245                    1348              CLR         D5
00001C4A  1A01                    1349              MOVE.B      D1,D5
00001C4C  CA7C 00A0               1350              AND         #maskF,D5
00001C50  BA7C 00A0               1351              CMP         #maskF,D5
00001C54  6700 0032               1352              BEQ         DataReg7
00001C58                          1353  
00001C58  43F9 00002614           1354              LEA         dispD6, A1          ; Output string D0
00001C5E  103C 000E               1355              MOVE.B      #14, D0             ; command for trap call to display message
00001C62  4E4F                    1356              TRAP        #15                 ; trap call
00001C64                          1357              
00001C64  4245                    1358              CLR         D5
00001C66  1A01                    1359              MOVE.B      D1,D5
00001C68  CA7C 0080               1360              AND         #mask8,D5
00001C6C  BA7C 0080               1361              CMP         #mask8,D5
00001C70  6700 0006               1362              BEQ         Reg6Cont
00001C74  6000 0022               1363              BRA         printMem
00001C78                          1364  Reg6Cont        
00001C78  43F9 00002557           1365              LEA         dec, A1             ; Output -
00001C7E  103C 000E               1366              MOVE.B      #14, D0             ; command for trap call to display message
00001C82  4E4F                    1367              TRAP        #15                 ; trap call        
00001C84  6000 0002               1368              BRA         DataReg7
00001C88                          1369  
00001C88                          1370  DataReg7    
00001C88  43F9 00002617           1371              LEA         dispD7, A1             ; Output -
00001C8E  103C 000E               1372              MOVE.B      #14, D0             ; command for trap call to display message
00001C92  4E4F                    1373              TRAP        #15                 ; trap call        
00001C94  6000 0002               1374              BRA         printMem            
00001C98                          1375  printMem               
00001C98  43F9 0000255B           1376              LEA         slash, A1           ; Display slash
00001C9E  103C 000E               1377              MOVE.B      #14, D0             ; command for trap call to display message
00001CA2  4E4F                    1378              TRAP        #15                 ; trap call
00001CA4                          1379           
00001CA4  4244                    1380              CLR         D4                  ; Using D4 to store predecrement mode addresses
00001CA6  3801                    1381              MOVE.W      D1,D4               ; Stores bits for D0-D7
00001CA8  E044                    1382              ASR         #eight,D4
00001CAA                          1383              
00001CAA  4245                    1384              CLR         D5
00001CAC  1A04                    1385              MOVE.B      D4,D5
00001CAE  CA7C 0001               1386              AND         #mask1,D5
00001CB2  BA7C 0001               1387              CMP         #mask1,D5
00001CB6  6700 0072               1388              BEQ         AddrReg0
00001CBA                          1389              
00001CBA  4245                    1390              CLR         D5
00001CBC  1A04                    1391              MOVE.B      D4,D5
00001CBE  CA7C 0002               1392              AND         #mask2,D5
00001CC2  BA7C 0002               1393              CMP         #mask2,D5
00001CC6  6700 0092               1394              BEQ         AddrReg1
00001CCA                          1395  
00001CCA  4245                    1396              CLR         D5
00001CCC  1A04                    1397              MOVE.B      D4,D5
00001CCE  CA7C 0004               1398              AND         #mask3,D5
00001CD2  BA7C 0004               1399              CMP         #mask3,D5
00001CD6  6700 00C2               1400              BEQ         AddrReg2            
00001CDA                          1401              
00001CDA  4245                    1402              CLR         D5
00001CDC  1A04                    1403              MOVE.B      D4,D5
00001CDE  CA7C 0008               1404              AND         #mask4,D5
00001CE2  BA7C 0008               1405              CMP         #mask4,D5
00001CE6  6700 00F2               1406              BEQ         AddrReg3            
00001CEA                          1407              
00001CEA  4245                    1408              CLR         D5
00001CEC  1A04                    1409              MOVE.B      D4,D5
00001CEE  CA7C 0010               1410              AND         #mask5,D5
00001CF2  BA7C 0010               1411              CMP         #mask5,D5
00001CF6  6700 0122               1412              BEQ         AddrReg4
00001CFA                          1413  
00001CFA  4245                    1414              CLR         D5
00001CFC  1A04                    1415              MOVE.B      D4,D5
00001CFE  CA7C 0020               1416              AND         #mask6,D5
00001D02  BA7C 0020               1417              CMP         #mask6,D5
00001D06  6700 0152               1418              BEQ         AddrReg5
00001D0A                          1419  
00001D0A  4245                    1420              CLR         D5
00001D0C  1A04                    1421              MOVE.B      D4,D5
00001D0E  CA7C 0040               1422              AND         #mask7,D5
00001D12  BA7C 0040               1423              CMP         #mask7,D5
00001D16  6700 0182               1424              BEQ         AddrReg6
00001D1A                          1425  
00001D1A  4245                    1426              CLR         D5
00001D1C  1A04                    1427              MOVE.B      D4,D5
00001D1E  CA7C 0080               1428              AND         #mask8,D5
00001D22  BA7C 0080               1429              CMP         #mask8,D5
00001D26  6700 01B2               1430              BEQ         AddrReg7
00001D2A                          1431  AddrReg0
00001D2A  43F9 000025E8           1432              LEA         dispA0, A1          ; Output string D0
00001D30  103C 000E               1433              MOVE.B      #14, D0             ; command for trap call to display message
00001D34  4E4F                    1434              TRAP        #15                 ; trap call
00001D36                          1435              
00001D36  4245                    1436              CLR         D5
00001D38  1A01                    1437              MOVE.B      D1,D5
00001D3A  CA7C 0002               1438              AND         #mask2,D5
00001D3E  BA7C 0002               1439              CMP         #mask2,D5
00001D42  6700 FDB4               1440              BEQ         Reg0Cont
00001D46  6000 01A4               1441              BRA         endMOVE
00001D4A                          1442  Addr0Cont        
00001D4A  43F9 00002557           1443              LEA         dec, A1             ; Output -
00001D50  103C 000E               1444              MOVE.B      #14, D0             ; command for trap call to display message
00001D54  4E4F                    1445              TRAP        #15                 ; trap call        
00001D56  6000 0002               1446              BRA         AddrReg1
00001D5A                          1447  
00001D5A                          1448  AddrReg1
00001D5A  4245                    1449              CLR         D5
00001D5C  1A04                    1450              MOVE.B      D4,D5
00001D5E  CA7C 0005               1451              AND         #maskA,D5
00001D62  BA7C 0005               1452              CMP         #maskA,D5
00001D66  6700 0032               1453              BEQ         AddrReg2
00001D6A                          1454              
00001D6A  43F9 000025EB           1455              LEA         dispA1, A1          ; Output string D0
00001D70  103C 000E               1456              MOVE.B      #14, D0             ; command for trap call to display message
00001D74  4E4F                    1457              TRAP        #15                 ; trap call
00001D76                          1458              
00001D76  4245                    1459              CLR         D5
00001D78  1A04                    1460              MOVE.B      D4,D5
00001D7A  CA7C 0004               1461              AND         #mask3,D5
00001D7E  BA7C 0004               1462              CMP         #mask3,D5
00001D82  6700 0006               1463              BEQ         Addr1Cont
00001D86  6000 0164               1464              BRA         endMOVE
00001D8A                          1465  Addr1Cont        
00001D8A  43F9 00002557           1466              LEA         dec, A1             ; Output -
00001D90  103C 000E               1467              MOVE.B      #14, D0             ; command for trap call to display message
00001D94  4E4F                    1468              TRAP        #15                 ; trap call        
00001D96  6000 0002               1469              BRA         AddrReg2
00001D9A                          1470  
00001D9A                          1471  
00001D9A                          1472  AddrReg2
00001D9A  4245                    1473              CLR         D5
00001D9C  1A04                    1474              MOVE.B      D4,D5
00001D9E  CA7C 000A               1475              AND         #maskB,D5
00001DA2  BA7C 000A               1476              CMP         #maskB,D5
00001DA6  6700 0032               1477              BEQ         AddrReg3
00001DAA                          1478              
00001DAA                          1479              
00001DAA  43F9 000025EE           1480              LEA         dispA2, A1          ; Output string D0
00001DB0  103C 000E               1481              MOVE.B      #14, D0             ; command for trap call to display message
00001DB4  4E4F                    1482              TRAP        #15                 ; trap call
00001DB6                          1483              
00001DB6  4245                    1484              CLR         D5
00001DB8  1A04                    1485              MOVE.B      D4,D5
00001DBA  CA7C 0008               1486              AND         #mask4,D5
00001DBE  BA7C 0008               1487              CMP         #mask4,D5
00001DC2  6700 0006               1488              BEQ         Addr2Cont
00001DC6  6000 0124               1489              BRA         endMOVE
00001DCA                          1490  Addr2Cont        
00001DCA  43F9 00002557           1491              LEA         dec, A1             ; Output -
00001DD0  103C 000E               1492              MOVE.B      #14, D0             ; command for trap call to display message
00001DD4  4E4F                    1493              TRAP        #15                 ; trap call        
00001DD6  6000 0002               1494              BRA         AddrReg3
00001DDA                          1495  
00001DDA                          1496  AddrReg3
00001DDA  4245                    1497              CLR         D5
00001DDC  1A04                    1498              MOVE.B      D4,D5
00001DDE  CA7C 0014               1499              AND         #maskC,D5
00001DE2  BA7C 0014               1500              CMP         #maskC,D5
00001DE6  6700 0032               1501              BEQ         AddrReg4
00001DEA                          1502              
00001DEA  43F9 000025F1           1503              LEA         dispA3, A1          ; Output string D0
00001DF0  103C 000E               1504              MOVE.B      #14, D0             ; command for trap call to display message
00001DF4  4E4F                    1505              TRAP        #15                 ; trap call
00001DF6                          1506              
00001DF6  4245                    1507              CLR         D5
00001DF8  1A04                    1508              MOVE.B      D4,D5
00001DFA  CA7C 0010               1509              AND         #mask5,D5
00001DFE  BA7C 0010               1510              CMP         #mask5,D5
00001E02  6700 0006               1511              BEQ         Addr3Cont
00001E06  6000 00E4               1512              BRA         endMOVE
00001E0A                          1513  Addr3Cont        
00001E0A  43F9 00002557           1514              LEA         dec, A1             ; Output -
00001E10  103C 000E               1515              MOVE.B      #14, D0             ; command for trap call to display message
00001E14  4E4F                    1516              TRAP        #15                 ; trap call        
00001E16  6000 0002               1517              BRA         AddrReg4
00001E1A                          1518  
00001E1A                          1519  
00001E1A                          1520  AddrReg4
00001E1A  4245                    1521              CLR         D5
00001E1C  1A04                    1522              MOVE.B      D4,D5
00001E1E  CA7C 0028               1523              AND         #maskD,D5
00001E22  BA7C 0028               1524              CMP         #maskD,D5
00001E26  6700 0032               1525              BEQ         AddrReg5
00001E2A                          1526              
00001E2A  43F9 000025F4           1527              LEA         dispA4, A1          ; Output string D0
00001E30  103C 000E               1528              MOVE.B      #14, D0             ; command for trap call to display message
00001E34  4E4F                    1529              TRAP        #15                 ; trap call
00001E36                          1530              
00001E36  4245                    1531              CLR         D5
00001E38  1A04                    1532              MOVE.B      D4,D5
00001E3A  CA7C 0020               1533              AND         #mask6,D5
00001E3E  BA7C 0020               1534              CMP         #mask6,D5
00001E42  6700 0006               1535              BEQ         Addr4Cont
00001E46  6000 00A4               1536              BRA         endMOVE
00001E4A                          1537  Addr4Cont        
00001E4A  43F9 00002557           1538              LEA         dec, A1             ; Output -
00001E50  103C 000E               1539              MOVE.B      #14, D0             ; command for trap call to display message
00001E54  4E4F                    1540              TRAP        #15                 ; trap call        
00001E56  6000 0002               1541              BRA         AddrReg5
00001E5A                          1542  AddrReg5
00001E5A  4245                    1543              CLR         D5
00001E5C  1A04                    1544              MOVE.B      D4,D5
00001E5E  CA7C 0050               1545              AND         #maskE,D5
00001E62  BA7C 0050               1546              CMP         #maskE,D5
00001E66  6700 0032               1547              BEQ         AddrReg6
00001E6A                          1548              
00001E6A  43F9 000025F7           1549              LEA         dispA5, A1          ; Output string D0
00001E70  103C 000E               1550              MOVE.B      #14, D0             ; command for trap call to display message
00001E74  4E4F                    1551              TRAP        #15                 ; trap call
00001E76                          1552              
00001E76  4245                    1553              CLR         D5
00001E78  1A04                    1554              MOVE.B      D4,D5
00001E7A  CA7C 0040               1555              AND         #mask7,D5
00001E7E  BA7C 0040               1556              CMP         #mask7,D5
00001E82  6700 0006               1557              BEQ         Addr5Cont
00001E86  6000 0064               1558              BRA         endMOVE
00001E8A                          1559  Addr5Cont        
00001E8A  43F9 00002557           1560              LEA         dec, A1             ; Output -
00001E90  103C 000E               1561              MOVE.B      #14, D0             ; command for trap call to display message
00001E94  4E4F                    1562              TRAP        #15                 ; trap call        
00001E96  6000 0042               1563              BRA         AddrReg7
00001E9A                          1564  
00001E9A                          1565  AddrReg6
00001E9A  4245                    1566              CLR         D5
00001E9C  1A04                    1567              MOVE.B      D4,D5
00001E9E  CA7C 00A0               1568              AND         #maskF,D5
00001EA2  BA7C 00A0               1569              CMP         #maskF,D5
00001EA6  6700 0032               1570              BEQ         AddrReg7
00001EAA                          1571  
00001EAA  43F9 000025FA           1572              LEA         dispA6, A1          ; Output string D0
00001EB0  103C 000E               1573              MOVE.B      #14, D0             ; command for trap call to display message
00001EB4  4E4F                    1574              TRAP        #15                 ; trap call
00001EB6                          1575              
00001EB6  4245                    1576              CLR         D5
00001EB8  1A04                    1577              MOVE.B      D4,D5
00001EBA  CA7C 0080               1578              AND         #mask8,D5
00001EBE  BA7C 0080               1579              CMP         #mask8,D5
00001EC2  6700 0006               1580              BEQ         Addr6Cont
00001EC6  6000 0024               1581              BRA         endMOVE
00001ECA                          1582  Addr6Cont        
00001ECA  43F9 00002557           1583              LEA         dec, A1             ; Output -
00001ED0  103C 000E               1584              MOVE.B      #14, D0             ; command for trap call to display message
00001ED4  4E4F                    1585              TRAP        #15                 ; trap call        
00001ED6  6000 0002               1586              BRA         AddrReg7
00001EDA                          1587  
00001EDA                          1588  AddrReg7    
00001EDA  43F9 000025FD           1589              LEA         dispA7, A1          ; Output -
00001EE0  103C 000E               1590              MOVE.B      #14, D0             ; command for trap call to display message
00001EE4  4E4F                    1591              TRAP        #15                 ; trap call        
00001EE6  6000 0004               1592              BRA         endMOVE
00001EEA                          1593  
00001EEA                          1594  
00001EEA                          1595  
00001EEA                          1596  printMemReg             
00001EEA  3218                    1597              MOVE.W      (A0)+, D1           ; Taking in next word
00001EEC                          1598  endMOVE
00001EEC  4CDF 7EFF               1599          MOVEM.L  (SP)+, D0-D7/A1-A6
00001EF0  4E75                    1600          RTS
00001EF2                          1601  
00001EF2                          1602  
00001EF2                          1603  ***********************************************************************************************************
00001EF2                          1604  *
00001EF2                          1605  *                                           EA Print Check
00001EF2                          1606  *
00001EF2                          1607  ***********************************************************************************************************
00001EF2  48E7 FF7E               1608  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00001EF6                          1609  
00001EF6  B43C 0000               1610              CMP.B       #zero, D2
00001EFA  6700 002E               1611              BEQ         pDataReg
00001EFE  B43C 0001               1612              CMP.B       #one, D2
00001F02  6700 00E6               1613              BEQ         pAddrReg
00001F06  B43C 0002               1614              CMP.B       #two, D2
00001F0A  6700 019E               1615              BEQ         pAddrDir
00001F0E  B43C 0003               1616              CMP.B       #three, D2
00001F12  6700 02C2               1617              BEQ         pAddrPost
00001F16  B43C 0004               1618              CMP.B       #four, D2
00001F1A  6700 0446               1619              BEQ         pAddrDec
00001F1E  B43C 0007               1620              CMP.B       #seven, D2
00001F22  6700 0576               1621              BEQ         pHex
00001F26  6000 0614               1622              BRA         invalid
00001F2A                          1623  
00001F2A                          1624  ***********************************************************************************************************
00001F2A                          1625  * Data Register        
00001F2A  B63C 0000               1626  pDataReg    CMP.B   #zero,D3
00001F2E  6700 003A               1627              BEQ     displayD0
00001F32  B63C 0001               1628              CMP.B   #one,D3
00001F36  6700 0042               1629              BEQ     displayD1
00001F3A  B63C 0002               1630              CMP.B   #two,D3
00001F3E  6700 004A               1631              BEQ     displayD2
00001F42  B63C 0003               1632              CMP.B   #three,D3
00001F46  6700 0052               1633              BEQ     displayD3
00001F4A  B63C 0004               1634              CMP.B   #four,D3
00001F4E  6700 005A               1635              BEQ     displayD4
00001F52  B63C 0005               1636              CMP.B   #five,D3
00001F56  6700 0062               1637              BEQ     displayD5
00001F5A  B63C 0006               1638              CMP.B   #six,D3
00001F5E  6700 006A               1639              BEQ     displayD6
00001F62  B63C 0007               1640              CMP.B   #seven,D3
00001F66  6700 0072               1641              BEQ     displayD7
00001F6A                          1642              
00001F6A  43F9 00002602           1643  displayD0   LEA         dispD0, A1          ; Display space
00001F70  103C 000E               1644              MOVE.B      #14, D0             ; command for trap call to display message
00001F74  4E4F                    1645              TRAP        #15                 ; trap call
00001F76  6000 05C4               1646              BRA         endSUB              ; go to the end of the subroutine
00001F7A                          1647              
00001F7A  43F9 00002605           1648  displayD1   LEA         dispD1, A1          ; Display space
00001F80  103C 000E               1649              MOVE.B      #14, D0             ; command for trap call to display message
00001F84  4E4F                    1650              TRAP        #15                 ; trap call
00001F86  6000 05B4               1651              BRA         endSUB              ; go to the end of the subroutine
00001F8A                          1652  
00001F8A  43F9 00002608           1653  displayD2   LEA         dispD2, A1          ; Display space
00001F90  103C 000E               1654              MOVE.B      #14, D0             ; command for trap call to display message
00001F94  4E4F                    1655              TRAP        #15                 ; trap call
00001F96  6000 05A4               1656              BRA         endSUB              ; go to the end of the subroutine
00001F9A                          1657  
00001F9A  43F9 0000260B           1658  displayD3   LEA         dispD3, A1          ; Display space
00001FA0  103C 000E               1659              MOVE.B      #14, D0             ; command for trap call to display message
00001FA4  4E4F                    1660              TRAP        #15                 ; trap call
00001FA6  6000 0594               1661              BRA         endSUB              ; go to the end of the subroutine
00001FAA                          1662  
00001FAA  43F9 0000260E           1663  displayD4   LEA         dispD4, A1          ; Display space
00001FB0  103C 000E               1664              MOVE.B      #14, D0             ; command for trap call to display message
00001FB4  4E4F                    1665              TRAP        #15                 ; trap call
00001FB6  6000 0584               1666              BRA         endSUB              ; go to the end of the subroutine
00001FBA                          1667  
00001FBA  43F9 00002611           1668  displayD5   LEA         dispD5, A1          ; Display space
00001FC0  103C 000E               1669              MOVE.B      #14, D0             ; command for trap call to display message
00001FC4  4E4F                    1670              TRAP        #15                 ; trap call
00001FC6  6000 0574               1671              BRA         endSUB              ; go to the end of the subroutine
00001FCA                          1672  
00001FCA  43F9 00002614           1673  displayD6   LEA         dispD6, A1          ; Display space
00001FD0  103C 000E               1674              MOVE.B      #14, D0             ; command for trap call to display message
00001FD4  4E4F                    1675              TRAP        #15                 ; trap call
00001FD6  6000 0564               1676              BRA         endSUB              ; go to the end of the subroutine
00001FDA                          1677  
00001FDA  43F9 00002617           1678  displayD7   LEA         dispD7, A1          ; Display space
00001FE0  103C 000E               1679              MOVE.B      #14, D0             ; command for trap call to display message
00001FE4  4E4F                    1680              TRAP        #15                 ; trap call
00001FE6  6000 0554               1681              BRA         endSUB              ; go to the end of the subroutine
00001FEA                          1682  ***********************************************************************************************************
00001FEA                          1683  * Address Register
00001FEA  B63C 0000               1684  pAddrReg    CMP.B   #zero,D3
00001FEE  6700 003A               1685              BEQ     displayA0
00001FF2  B63C 0001               1686              CMP.B   #one,D3
00001FF6  6700 0042               1687              BEQ     displayA1
00001FFA  B63C 0002               1688              CMP.B   #two,D3
00001FFE  6700 004A               1689              BEQ     displayA2
00002002  B63C 0003               1690              CMP.B   #three,D3
00002006  6700 0052               1691              BEQ     displayA3
0000200A  B63C 0004               1692              CMP.B   #four,D3
0000200E  6700 005A               1693              BEQ     displayA4
00002012  B63C 0005               1694              CMP.B   #five,D3
00002016  6700 0062               1695              BEQ     displayA5
0000201A  B63C 0006               1696              CMP.B   #six,D3
0000201E  6700 006A               1697              BEQ     displayA6
00002022  B63C 0007               1698              CMP.B   #seven,D3
00002026  6700 0072               1699              BEQ     displayA7
0000202A                          1700              
0000202A  43F9 000025E8           1701  displayA0   LEA         dispA0, A1          ; Display space
00002030  103C 000E               1702              MOVE.B      #14, D0             ; command for trap call to display message
00002034  4E4F                    1703              TRAP        #15                 ; trap call
00002036  6000 0504               1704              BRA         endSUB              ; go to the end of the subroutine
0000203A                          1705              
0000203A  43F9 000025EB           1706  displayA1   LEA         dispA1, A1          ; Display space
00002040  103C 000E               1707              MOVE.B      #14, D0             ; command for trap call to display message
00002044  4E4F                    1708              TRAP        #15                 ; trap call
00002046  6000 04F4               1709              BRA         endSUB              ; go to the end of the subroutine
0000204A                          1710  
0000204A  43F9 000025EE           1711  displayA2   LEA         dispA2, A1          ; Display space
00002050  103C 000E               1712              MOVE.B      #14, D0             ; command for trap call to display message
00002054  4E4F                    1713              TRAP        #15                 ; trap call
00002056  6000 04E4               1714              BRA         endSUB              ; go to the end of the subroutine
0000205A                          1715  
0000205A  43F9 000025F1           1716  displayA3   LEA         dispA3, A1          ; Display space
00002060  103C 000E               1717              MOVE.B      #14, D0             ; command for trap call to display message
00002064  4E4F                    1718              TRAP        #15                 ; trap call
00002066  6000 04D4               1719              BRA         endSUB              ; go to the end of the subroutine
0000206A                          1720  
0000206A  43F9 000025F4           1721  displayA4   LEA         dispA4, A1          ; Display space
00002070  103C 000E               1722              MOVE.B      #14, D0             ; command for trap call to display message
00002074  4E4F                    1723              TRAP        #15                 ; trap call
00002076  6000 04C4               1724              BRA         endSUB              ; go to the end of the subroutine
0000207A                          1725  
0000207A  43F9 000025F7           1726  displayA5   LEA         dispA5, A1          ; Display space
00002080  103C 000E               1727              MOVE.B      #14, D0             ; command for trap call to display message
00002084  4E4F                    1728              TRAP        #15                 ; trap call
00002086  6000 04B4               1729              BRA         endSUB              ; go to the end of the subroutine
0000208A                          1730  
0000208A  43F9 000025FA           1731  displayA6   LEA         dispA6, A1          ; Display space
00002090  103C 000E               1732              MOVE.B      #14, D0             ; command for trap call to display message
00002094  4E4F                    1733              TRAP        #15                 ; trap call
00002096  6000 04A4               1734              BRA         endSUB              ; go to the end of the subroutine
0000209A                          1735  
0000209A  43F9 000025FD           1736  displayA7   LEA         dispA7, A1          ; Display space
000020A0  103C 000E               1737              MOVE.B      #14, D0             ; command for trap call to display message
000020A4  4E4F                    1738              TRAP        #15                 ; trap call
000020A6  6000 0494               1739              BRA         endSUB              ; go to the end of the subroutine
000020AA                          1740  
000020AA                          1741  ***********************************************************************************************************
000020AA                          1742  * Address Register Direct
000020AA                          1743  
000020AA  43F9 00002553           1744  pAddrDir    LEA         opPer, A1           ; Display space
000020B0  103C 000E               1745              MOVE.B      #14, D0             ; command for trap call to display message
000020B4  4E4F                    1746              TRAP        #15                 ; trap call
000020B6                          1747              
000020B6  B63C 0000               1748              CMP.B   #zero,D3
000020BA  6700 003A               1749              BEQ     displayA0A
000020BE  B63C 0001               1750              CMP.B   #one,D3
000020C2  6700 004E               1751              BEQ     displayA1A
000020C6  B63C 0002               1752              CMP.B   #two,D3
000020CA  6700 0062               1753              BEQ     displayA2A
000020CE  B63C 0003               1754              CMP.B   #three,D3
000020D2  6700 0076               1755              BEQ     displayA3A
000020D6  B63C 0004               1756              CMP.B   #four,D3
000020DA  6700 008A               1757              BEQ     displayA4A
000020DE  B63C 0005               1758              CMP.B   #five,D3
000020E2  6700 009E               1759              BEQ     displayA5A
000020E6  B63C 0006               1760              CMP.B   #six,D3
000020EA  6700 00B2               1761              BEQ     displayA6A
000020EE  B63C 0007               1762              CMP.B   #seven,D3
000020F2  6700 00C6               1763              BEQ     displayA7A
000020F6                          1764              
000020F6  43F9 000025E8           1765  displayA0A  LEA         dispA0, A1          ; Display space
000020FC  103C 000E               1766              MOVE.B      #14, D0             ; command for trap call to display message
00002100  4E4F                    1767              TRAP        #15                 ; trap call
00002102  43F9 00002555           1768              LEA         clPer, A1           ; Display space
00002108  103C 000E               1769              MOVE.B      #14, D0             ; command for trap call to display message
0000210C  4E4F                    1770              TRAP        #15                 ; trap call
0000210E  6000 042C               1771              BRA         endSUB              ; go to the end of the subroutine
00002112                          1772              
00002112  43F9 000025EB           1773  displayA1A  LEA         dispA1, A1          ; Display space
00002118  103C 000E               1774              MOVE.B      #14, D0             ; command for trap call to display message
0000211C  4E4F                    1775              TRAP        #15                 ; trap call
0000211E  43F9 00002555           1776              LEA         clPer, A1           ; Display space
00002124  103C 000E               1777              MOVE.B      #14, D0             ; command for trap call to display message
00002128  4E4F                    1778              TRAP        #15                 ; trap call
0000212A  6000 0410               1779              BRA         endSUB              ; go to the end of the subroutine
0000212E                          1780  
0000212E  43F9 000025EE           1781  displayA2A  LEA         dispA2, A1          ; Display space
00002134  103C 000E               1782              MOVE.B      #14, D0             ; command for trap call to display message
00002138  4E4F                    1783              TRAP        #15                 ; trap call
0000213A  43F9 00002555           1784              LEA         clPer, A1           ; Display space
00002140  103C 000E               1785              MOVE.B      #14, D0             ; command for trap call to display message
00002144  4E4F                    1786              TRAP        #15                 ; trap call
00002146  6000 03F4               1787              BRA         endSUB              ; go to the end of the subroutine
0000214A                          1788  
0000214A  43F9 000025F1           1789  displayA3A  LEA         dispA3, A1          ; Display space
00002150  103C 000E               1790              MOVE.B      #14, D0             ; command for trap call to display message
00002154  4E4F                    1791              TRAP        #15                 ; trap call
00002156  43F9 00002555           1792              LEA         clPer, A1           ; Display space
0000215C  103C 000E               1793              MOVE.B      #14, D0             ; command for trap call to display message
00002160  4E4F                    1794              TRAP        #15                 ; trap call
00002162  6000 03D8               1795              BRA         endSUB              ; go to the end of the subroutine
00002166                          1796  
00002166  43F9 000025F4           1797  displayA4A  LEA         dispA4, A1          ; Display space
0000216C  103C 000E               1798              MOVE.B      #14, D0             ; command for trap call to display message
00002170  4E4F                    1799              TRAP        #15                 ; trap call
00002172  43F9 00002555           1800              LEA         clPer, A1           ; Display space
00002178  103C 000E               1801              MOVE.B      #14, D0             ; command for trap call to display message
0000217C  4E4F                    1802              TRAP        #15                 ; trap call
0000217E  6000 03BC               1803              BRA         endSUB              ; go to the end of the subroutine
00002182                          1804  
00002182  43F9 000025F7           1805  displayA5A  LEA         dispA5, A1          ; Display space
00002188  103C 000E               1806              MOVE.B      #14, D0             ; command for trap call to display message
0000218C  4E4F                    1807              TRAP        #15                 ; trap call
0000218E  43F9 00002555           1808              LEA         clPer, A1           ; Display space
00002194  103C 000E               1809              MOVE.B      #14, D0             ; command for trap call to display message
00002198  4E4F                    1810              TRAP        #15                 ; trap call
0000219A  6000 03A0               1811              BRA         endSUB              ; go to the end of the subroutine
0000219E                          1812  
0000219E  43F9 000025FA           1813  displayA6A  LEA         dispA6, A1          ; Display space
000021A4  103C 000E               1814              MOVE.B      #14, D0             ; command for trap call to display message
000021A8  4E4F                    1815              TRAP        #15                 ; trap call
000021AA  43F9 00002555           1816              LEA         clPer, A1           ; Display space
000021B0  103C 000E               1817              MOVE.B      #14, D0             ; command for trap call to display message
000021B4  4E4F                    1818              TRAP        #15                 ; trap call
000021B6  6000 0384               1819              BRA         endSUB              ; go to the end of the subroutine
000021BA                          1820  
000021BA  43F9 000025FD           1821  displayA7A  LEA         dispA7, A1          ; Display space
000021C0  103C 000E               1822              MOVE.B      #14, D0             ; command for trap call to display message
000021C4  4E4F                    1823              TRAP        #15                 ; trap call
000021C6  43F9 00002555           1824              LEA         clPer, A1           ; Display space
000021CC  103C 000E               1825              MOVE.B      #14, D0             ; command for trap call to display message
000021D0  4E4F                    1826              TRAP        #15                 ; trap call
000021D2  6000 0368               1827              BRA         endSUB              ; go to the end of the subroutine
000021D6                          1828              
000021D6                          1829  ***********************************************************************************************************
000021D6                          1830  * Addr Postincrement
000021D6                          1831              
000021D6  43F9 00002553           1832  pAddrPost   LEA         opPer, A1           ; Display space
000021DC  103C 000E               1833              MOVE.B      #14, D0             ; command for trap call to display message
000021E0  4E4F                    1834              TRAP        #15                 ; trap call
000021E2                          1835              
000021E2  B63C 0000               1836              CMP.B   #zero,D3
000021E6  6700 003A               1837              BEQ     displayA0P
000021EA  B63C 0001               1838              CMP.B   #one,D3
000021EE  6700 005A               1839              BEQ     displayA1P
000021F2  B63C 0002               1840              CMP.B   #two,D3
000021F6  6700 007A               1841              BEQ     displayA2P
000021FA  B63C 0003               1842              CMP.B   #three,D3
000021FE  6700 009A               1843              BEQ     displayA3P
00002202  B63C 0004               1844              CMP.B   #four,D3
00002206  6700 00BA               1845              BEQ     displayA4P
0000220A  B63C 0005               1846              CMP.B   #five,D3
0000220E  6700 00DA               1847              BEQ     displayA5P
00002212  B63C 0006               1848              CMP.B   #six,D3
00002216  6700 00FA               1849              BEQ     displayA6P
0000221A  B63C 0007               1850              CMP.B   #seven,D3
0000221E  6700 011A               1851              BEQ     displayA7P
00002222                          1852              
00002222  43F9 000025E8           1853  displayA0P  LEA         dispA0, A1          ; Display space
00002228  103C 000E               1854              MOVE.B      #14, D0             ; command for trap call to display message
0000222C  4E4F                    1855              TRAP        #15                 ; trap call
0000222E  43F9 00002555           1856              LEA         clPer, A1           ; Display space
00002234  103C 000E               1857              MOVE.B      #14, D0             ; command for trap call to display message
00002238  4E4F                    1858              TRAP        #15                 ; trap call
0000223A  43F9 00002559           1859              LEA         inc, A1             ; Display space
00002240  103C 000E               1860              MOVE.B      #14, D0             ; command for trap call to display message
00002244  4E4F                    1861              TRAP        #15                 ; trap call
00002246  6000 02F4               1862              BRA         endSUB              ; go to the end of the subroutine
0000224A                          1863              
0000224A  43F9 000025EB           1864  displayA1P  LEA         dispA1, A1          ; Display space
00002250  103C 000E               1865              MOVE.B      #14, D0             ; command for trap call to display message
00002254  4E4F                    1866              TRAP        #15                 ; trap call
00002256  43F9 00002555           1867              LEA         clPer, A1           ; Display space
0000225C  103C 000E               1868              MOVE.B      #14, D0             ; command for trap call to display message
00002260  4E4F                    1869              TRAP        #15                 ; trap call
00002262  43F9 00002559           1870              LEA         inc, A1             ; Display space
00002268  103C 000E               1871              MOVE.B      #14, D0             ; command for trap call to display message
0000226C  4E4F                    1872              TRAP        #15                 ; trap call
0000226E  6000 02CC               1873              BRA         endSUB              ; go to the end of the subroutine
00002272                          1874  
00002272  43F9 000025EE           1875  displayA2P  LEA         dispA2, A1          ; Display space
00002278  103C 000E               1876              MOVE.B      #14, D0             ; command for trap call to display message
0000227C  4E4F                    1877              TRAP        #15                 ; trap call
0000227E  43F9 00002555           1878              LEA         clPer, A1           ; Display space
00002284  103C 000E               1879              MOVE.B      #14, D0             ; command for trap call to display message
00002288  4E4F                    1880              TRAP        #15                 ; trap call
0000228A  43F9 00002559           1881              LEA         inc, A1             ; Display space
00002290  103C 000E               1882              MOVE.B      #14, D0             ; command for trap call to display message
00002294  4E4F                    1883              TRAP        #15                 ; trap call
00002296  6000 02A4               1884              BRA         endSUB              ; go to the end of the subroutine
0000229A                          1885  
0000229A  43F9 000025F1           1886  displayA3P  LEA         dispA3, A1          ; Display space
000022A0  103C 000E               1887              MOVE.B      #14, D0             ; command for trap call to display message
000022A4  4E4F                    1888              TRAP        #15                 ; trap call
000022A6  43F9 00002555           1889              LEA         clPer, A1           ; Display space
000022AC  103C 000E               1890              MOVE.B      #14, D0             ; command for trap call to display message
000022B0  4E4F                    1891              TRAP        #15                 ; trap call
000022B2  43F9 00002559           1892              LEA         inc, A1             ; Display space
000022B8  103C 000E               1893              MOVE.B      #14, D0             ; command for trap call to display message
000022BC  4E4F                    1894              TRAP        #15                 ; trap call
000022BE  6000 027C               1895              BRA         endSUB              ; go to the end of the subroutine
000022C2                          1896  
000022C2  43F9 000025F4           1897  displayA4P  LEA         dispA4, A1          ; Display space
000022C8  103C 000E               1898              MOVE.B      #14, D0             ; command for trap call to display message
000022CC  4E4F                    1899              TRAP        #15                 ; trap call
000022CE  43F9 00002555           1900              LEA         clPer, A1           ; Display space
000022D4  103C 000E               1901              MOVE.B      #14, D0             ; command for trap call to display message
000022D8  4E4F                    1902              TRAP        #15                 ; trap call
000022DA  43F9 00002559           1903              LEA         inc, A1             ; Display space
000022E0  103C 000E               1904              MOVE.B      #14, D0             ; command for trap call to display message
000022E4  4E4F                    1905              TRAP        #15                 ; trap call
000022E6  6000 0254               1906              BRA         endSUB              ; go to the end of the subroutine
000022EA                          1907  
000022EA  43F9 000025F7           1908  displayA5P  LEA         dispA5, A1          ; Display space
000022F0  103C 000E               1909              MOVE.B      #14, D0             ; command for trap call to display message
000022F4  4E4F                    1910              TRAP        #15                 ; trap call
000022F6  43F9 00002555           1911              LEA         clPer, A1           ; Display space
000022FC  103C 000E               1912              MOVE.B      #14, D0             ; command for trap call to display message
00002300  4E4F                    1913              TRAP        #15                 ; trap call
00002302  43F9 00002559           1914              LEA         inc, A1             ; Display space
00002308  103C 000E               1915              MOVE.B      #14, D0             ; command for trap call to display message
0000230C  4E4F                    1916              TRAP        #15                 ; trap call
0000230E  6000 022C               1917              BRA         endSUB              ; go to the end of the subroutine
00002312                          1918  
00002312  43F9 000025FA           1919  displayA6P  LEA         dispA6, A1          ; Display space
00002318  103C 000E               1920              MOVE.B      #14, D0             ; command for trap call to display message
0000231C  4E4F                    1921              TRAP        #15                 ; trap call
0000231E  43F9 00002555           1922              LEA         clPer, A1           ; Display space
00002324  103C 000E               1923              MOVE.B      #14, D0             ; command for trap call to display message
00002328  4E4F                    1924              TRAP        #15                 ; trap call
0000232A  43F9 00002559           1925              LEA         inc, A1             ; Display space
00002330  103C 000E               1926              MOVE.B      #14, D0             ; command for trap call to display message
00002334  4E4F                    1927              TRAP        #15                 ; trap call
00002336  6000 0204               1928              BRA         endSUB              ; go to the end of the subroutine
0000233A                          1929  
0000233A  43F9 000025FD           1930  displayA7P  LEA         dispA7, A1          ; Display space
00002340  103C 000E               1931              MOVE.B      #14, D0             ; command for trap call to display message
00002344  4E4F                    1932              TRAP        #15                 ; trap call
00002346  43F9 00002555           1933              LEA         clPer, A1           ; Display space
0000234C  103C 000E               1934              MOVE.B      #14, D0             ; command for trap call to display message
00002350  4E4F                    1935              TRAP        #15                 ; trap call
00002352  43F9 00002559           1936              LEA         inc, A1             ; Display space
00002358  103C 000E               1937              MOVE.B      #14, D0             ; command for trap call to display message
0000235C  4E4F                    1938              TRAP        #15                 ; trap call
0000235E  6000 01DC               1939              BRA         endSUB              ; go to the end of the subroutine
00002362                          1940  
00002362                          1941  ***********************************************************************************************************
00002362                          1942  * Addr Postdecrement
00002362                          1943  
00002362  43F9 00002557           1944  pAddrDec    LEA         dec, A1             ; Display space
00002368  103C 000E               1945              MOVE.B      #14, D0             ; command for trap call to display message
0000236C  4E4F                    1946              TRAP        #15                 ; trap call
0000236E                          1947              
0000236E  43F9 00002553           1948              LEA         opPer, A1           ; Display space
00002374  103C 000E               1949              MOVE.B      #14, D0             ; command for trap call to display message
00002378  4E4F                    1950              TRAP        #15                 ; trap call
0000237A                          1951              
0000237A  B63C 0000               1952              CMP.B   #zero,D3
0000237E  6700 003A               1953              BEQ     displayA0D
00002382  B63C 0001               1954              CMP.B   #one,D3
00002386  6700 004E               1955              BEQ     displayA1D
0000238A  B63C 0002               1956              CMP.B   #two,D3
0000238E  6700 0062               1957              BEQ     displayA2D
00002392  B63C 0003               1958              CMP.B   #three,D3
00002396  6700 0076               1959              BEQ     displayA3D
0000239A  B63C 0004               1960              CMP.B   #four,D3
0000239E  6700 008A               1961              BEQ     displayA4D
000023A2  B63C 0005               1962              CMP.B   #five,D3
000023A6  6700 009E               1963              BEQ     displayA5D
000023AA  B63C 0006               1964              CMP.B   #six,D3
000023AE  6700 00B2               1965              BEQ     displayA6D
000023B2  B63C 0007               1966              CMP.B   #seven,D3
000023B6  6700 00C6               1967              BEQ     displayA7D
000023BA                          1968              
000023BA  43F9 000025E8           1969  displayA0D  LEA         dispA0, A1          ; Display space
000023C0  103C 000E               1970              MOVE.B      #14, D0             ; command for trap call to display message
000023C4  4E4F                    1971              TRAP        #15                 ; trap call
000023C6  43F9 00002555           1972              LEA         clPer, A1           ; Display space
000023CC  103C 000E               1973              MOVE.B      #14, D0             ; command for trap call to display message
000023D0  4E4F                    1974              TRAP        #15                 ; trap call
000023D2  6000 0168               1975              BRA         endSUB              ; go to the end of the subroutine
000023D6                          1976              
000023D6  43F9 000025EB           1977  displayA1D  LEA         dispA1, A1          ; Display space
000023DC  103C 000E               1978              MOVE.B      #14, D0             ; command for trap call to display message
000023E0  4E4F                    1979              TRAP        #15                 ; trap call
000023E2  43F9 00002555           1980              LEA         clPer, A1           ; Display space
000023E8  103C 000E               1981              MOVE.B      #14, D0             ; command for trap call to display message
000023EC  4E4F                    1982              TRAP        #15                 ; trap call
000023EE  6000 014C               1983              BRA         endSUB              ; go to the end of the subroutine
000023F2                          1984  
000023F2  43F9 000025EE           1985  displayA2D  LEA         dispA2, A1          ; Display space
000023F8  103C 000E               1986              MOVE.B      #14, D0             ; command for trap call to display message
000023FC  4E4F                    1987              TRAP        #15                 ; trap call
000023FE  43F9 00002555           1988              LEA         clPer, A1           ; Display space
00002404  103C 000E               1989              MOVE.B      #14, D0             ; command for trap call to display message
00002408  4E4F                    1990              TRAP        #15                 ; trap call
0000240A  6000 0130               1991              BRA         endSUB              ; go to the end of the subroutine
0000240E                          1992  
0000240E  43F9 000025F1           1993  displayA3D  LEA         dispA3, A1          ; Display space
00002414  103C 000E               1994              MOVE.B      #14, D0             ; command for trap call to display message
00002418  4E4F                    1995              TRAP        #15                 ; trap call
0000241A  43F9 00002555           1996              LEA         clPer, A1           ; Display space
00002420  103C 000E               1997              MOVE.B      #14, D0             ; command for trap call to display message
00002424  4E4F                    1998              TRAP        #15                 ; trap call
00002426  6000 0114               1999              BRA         endSUB              ; go to the end of the subroutine
0000242A                          2000  
0000242A  43F9 000025F4           2001  displayA4D  LEA         dispA4, A1          ; Display space
00002430  103C 000E               2002              MOVE.B      #14, D0             ; command for trap call to display message
00002434  4E4F                    2003              TRAP        #15                 ; trap call
00002436  43F9 00002555           2004              LEA         clPer, A1           ; Display space
0000243C  103C 000E               2005              MOVE.B      #14, D0             ; command for trap call to display message
00002440  4E4F                    2006              TRAP        #15                 ; trap call
00002442  6000 00F8               2007              BRA         endSUB              ; go to the end of the subroutine
00002446                          2008  
00002446  43F9 000025F7           2009  displayA5D  LEA         dispA5, A1          ; Display space
0000244C  103C 000E               2010              MOVE.B      #14, D0             ; command for trap call to display message
00002450  4E4F                    2011              TRAP        #15                 ; trap call
00002452  43F9 00002555           2012              LEA         clPer, A1           ; Display space
00002458  103C 000E               2013              MOVE.B      #14, D0             ; command for trap call to display message
0000245C  4E4F                    2014              TRAP        #15                 ; trap call
0000245E  6000 00DC               2015              BRA         endSUB              ; go to the end of the subroutine
00002462                          2016  
00002462  43F9 000025FA           2017  displayA6D  LEA         dispA6, A1          ; Display space
00002468  103C 000E               2018              MOVE.B      #14, D0             ; command for trap call to display message
0000246C  4E4F                    2019              TRAP        #15                 ; trap call
0000246E  43F9 00002555           2020              LEA         clPer, A1           ; Display space
00002474  103C 000E               2021              MOVE.B      #14, D0             ; command for trap call to display message
00002478  4E4F                    2022              TRAP        #15                 ; trap call
0000247A  6000 00C0               2023              BRA         endSUB              ; go to the end of the subroutine
0000247E                          2024  
0000247E  43F9 000025FD           2025  displayA7D  LEA         dispA7, A1          ; Display space
00002484  103C 000E               2026              MOVE.B      #14, D0             ; command for trap call to display message
00002488  4E4F                    2027              TRAP        #15                 ; trap call
0000248A  43F9 00002555           2028              LEA         clPer, A1           ; Display space
00002490  103C 000E               2029              MOVE.B      #14, D0             ; command for trap call to display message
00002494  4E4F                    2030              TRAP        #15                 ; trap call
00002496  6000 00A4               2031              BRA         endSUB              ; go to the end of the subroutine
0000249A                          2032  
0000249A                          2033  
0000249A                          2034  ***********************************************************************************************************
0000249A                          2035  * Absolute Address
0000249A  B63C 0000               2036  pHex        CMP.B       #zero, D3
0000249E  6700 0012               2037              BEQ         AbsShort
000024A2  B63C 0001               2038              CMP.B       #one, D3
000024A6  6700 003C               2039              BEQ         AbsLong
000024AA  B63C 0004               2040              CMP.B       #four, D3
000024AE  6700 0066               2041              BEQ         DispImm
000024B2                          2042              
000024B2  43F9 00002553           2043  AbsShort    LEA         opPer, A1           ; Display space
000024B8  103C 000E               2044              MOVE.B      #14, D0             ; command for trap call to display message
000024BC  4E4F                    2045              TRAP        #15                 ; trap call
000024BE                          2046              
000024BE  43F9 0000254F           2047              LEA         dispHex, A1         ; Display space
000024C4  103C 000E               2048              MOVE.B      #14, D0             ; command for trap call to display message
000024C8  4E4F                    2049              TRAP        #15                 ; trap call
000024CA                          2050              
000024CA  4241                    2051              CLR         D1
000024CC  3218                    2052              MOVE.W      (A0)+, D1
000024CE                          2053              
000024CE  103C 0003               2054              MOVE.B      #3, D0
000024D2  4E4F                    2055              TRAP        #15
000024D4                          2056              
000024D4  43F9 00002555           2057              LEA         clPer, A1           ; Display space
000024DA  103C 000E               2058              MOVE.B      #14, D0             ; command for trap call to display message
000024DE  4E4F                    2059              TRAP        #15                 ; trap call
000024E0                          2060              
000024E0  6000 005A               2061              BRA         endSub
000024E4                          2062              
000024E4  43F9 00002553           2063  AbsLong     LEA         opPer, A1           ; Display space
000024EA  103C 000E               2064              MOVE.B      #14, D0             ; command for trap call to display message
000024EE  4E4F                    2065              TRAP        #15                 ; trap call
000024F0                          2066              
000024F0  43F9 0000254F           2067              LEA         dispHex, A1         ; Display space
000024F6  103C 000E               2068              MOVE.B      #14, D0             ; command for trap call to display message
000024FA  4E4F                    2069              TRAP        #15                 ; trap call
000024FC                          2070              
000024FC  4241                    2071              CLR         D1
000024FE  2218                    2072              MOVE.L      (A0)+, D1
00002500                          2073              
00002500  103C 0003               2074              MOVE.B      #3, D0
00002504  4E4F                    2075              TRAP        #15
00002506                          2076              
00002506  43F9 00002555           2077              LEA         clPer, A1           ; Display space
0000250C  103C 000E               2078              MOVE.B      #14, D0             ; command for trap call to display message
00002510  4E4F                    2079              TRAP        #15                 ; trap call
00002512                          2080              
00002512  6000 0028               2081              BRA         endSub
00002516                          2082  
00002516  43F9 0000254D           2083  DispImm     LEA         hashTag, A1         ; Display space
0000251C  103C 000E               2084              MOVE.B      #14, D0             ; command for trap call to display message
00002520  4E4F                    2085              TRAP        #15                 ; trap call
00002522                          2086              
00002522  4241                    2087              CLR         D1
00002524  3218                    2088              MOVE.W      (A0)+, D1
00002526                          2089  
00002526  43F9 0000254F           2090              LEA         dispHex, A1         ; Display space
0000252C  103C 000E               2091              MOVE.B      #14, D0             ; command for trap call to display message
00002530  4E4F                    2092              TRAP        #15                 ; trap call
00002532                          2093              
00002532  103C 0003               2094              MOVE.B      #3, D0
00002536  4E4F                    2095              TRAP        #15
00002538                          2096  
00002538  6000 0002               2097              BRA         endSub
0000253C                          2098  
0000253C                          2099  invalid
0000253C                          2100  
0000253C                          2101  endSUB
0000253C                          2102          
0000253C  4CDF 7EFF               2103          MOVEM.L  (SP)+, D0-D7/A1-A6
00002540  4E75                    2104          RTS
00002542                          2105  
00002542                          2106  ***********************************************************************************************************
00002542                          2107  ***********************************************************************************************************
00002542                          2108  ***********************************************************************************************************
00002542                          2109  
00002542                          2110  printInvalid
00002542                          2111  endPROG    
00002542                          2112  
00002542  FFFF FFFF               2113      SIMHALT                             ; halt simulator
00002546                          2114  
00002546= 20 0D 0A 00             2115  newLine     DC.B    ' ', CR, LF, 0
0000254A= 20 20 00                2116  space       DC.B    '  ', 0
0000254D                          2117  
0000254D= 23 00                   2118  hashTag     DC.B    '#', 0
0000254F= 24 00                   2119  dispHex     DC.B    '$', 0
00002551= 2C 00                   2120  comma       DC.B    ',', 0
00002553                          2121  
00002553= 28 00                   2122  opPer       DC.B    '(', 0
00002555= 29 00                   2123  clPer       DC.B    ')', 0
00002557= 2D 00                   2124  dec         DC.B    '-', 0
00002559= 2B 00                   2125  inc         DC.B    '+', 0
0000255B= 2F 00                   2126  slash       DC.B    '/', 0
0000255D                          2127  
0000255D= 4F 52 49 00             2128  ORImatch    DC.B    'ORI', 0
00002561= 43 4D 50 49 00          2129  CMPImatch   DC.B    'CMPI', 0
00002566= 42 43 4C 52 00          2130  BCLRmatch   DC.B    'BCLR', 0
0000256B= 4D 4F 56 45 00          2131  MOVEmatch   DC.B    'MOVE', 0
00002570= 4D 4F 56 45 41 00       2132  MOVEAmatch  DC.B    'MOVEA', 0
00002576= 4E 45 47 00             2133  NEGmatch    DC.B    'NEG', 0
0000257A= 52 54 53 00             2134  RTSmatch    DC.B    'RTS', 0
0000257E= 4A 53 52 00             2135  JSRmatch    DC.B    'JSR', 0
00002582= 4D 4F 56 45 4D 00       2136  MOVEMmatch  DC.B    'MOVEM', 0
00002588= 4C 45 41 00             2137  LEAmatch    DC.B    'LEA', 0
0000258C= 53 55 42 51 00          2138  SUBQmatch   DC.B    'SUBQ', 0
00002591= 42 52 41 00             2139  BRAmatch    DC.B    'BRA', 0
00002595= 42 43 53 00             2140  BCSmatch    DC.B    'BCS', 0
00002599= 42 56 43 00             2141  BVCmatch    DC.B    'BVC', 0
0000259D= 42 47 45 00             2142  BGEmatch    DC.B    'BGE', 0
000025A1= 42 4C 54 00             2143  BLTmatch    DC.B    'BLT', 0
000025A5= 44 49 56 53 00          2144  DIVSmatch   DC.B    'DIVS', 0
000025AA= 4F 52 00                2145  ORmatch     DC.B    'OR', 0
000025AD= 53 55 42 00             2146  SUBmatch    DC.B    'SUB', 0
000025B1= 45 4F 52 00             2147  EORmatch    DC.B    'EOR', 0
000025B5= 43 4D 50 00             2148  CMPmatch    DC.B    'CMP', 0
000025B9= 4D 55 4C 53 00          2149  MULSmatch   DC.B    'MULS', 0
000025BE= 41 44 44 00             2150  ADDmatch    DC.B    'ADD', 0
000025C2= 41 44 44 41 00          2151  ADDAmatch   DC.B    'ADDA', 0
000025C7= 4C 53 52 00             2152  LSRmatch    DC.B    'LSR', 0
000025CB= 4C 53 4C 00             2153  LSLmatch    DC.B    'LSL', 0
000025CF= 41 53 52 00             2154  ASRmatch    DC.B    'ASR', 0
000025D3= 41 53 4C 00             2155  ASLmatch    DC.B    'ASL', 0
000025D7= 52 4F 52 00             2156  RORmatch    DC.B    'ROR', 0
000025DB= 52 4F 4C 00             2157  ROLmatch    DC.B    'ROL', 0
000025DF                          2158   
000025DF= 2E 42 00                2159  dispByte    DC.B    '.B', 0
000025E2= 2E 57 00                2160  dispWord    DC.B    '.W', 0
000025E5= 2E 4C 00                2161  dispLong    DC.B    '.L', 0
000025E8                          2162  
000025E8= 41 30 00                2163  dispA0      DC.B    'A0', 0
000025EB= 41 31 00                2164  dispA1      DC.B    'A1', 0
000025EE= 41 32 00                2165  dispA2      DC.B    'A2', 0
000025F1= 41 33 00                2166  dispA3      DC.B    'A3', 0
000025F4= 41 34 00                2167  dispA4      DC.B    'A4', 0
000025F7= 41 35 00                2168  dispA5      DC.B    'A5', 0
000025FA= 41 36 00                2169  dispA6      DC.B    'A6', 0
000025FD= 41 37 00                2170  dispA7      DC.B    'A7', 0
00002600                          2171  
00002600= 44 00                   2172  dispD       DC.B    'D',  0
00002602= 44 30 00                2173  dispD0      DC.B    'D0', 0
00002605= 44 31 00                2174  dispD1      DC.B    'D1', 0
00002608= 44 32 00                2175  dispD2      DC.B    'D2', 0
0000260B= 44 33 00                2176  dispD3      DC.B    'D3', 0
0000260E= 44 34 00                2177  dispD4      DC.B    'D4', 0
00002611= 44 35 00                2178  dispD5      DC.B    'D5', 0
00002614= 44 36 00                2179  dispD6      DC.B    'D6', 0
00002617= 44 37 00                2180  dispD7      DC.B    'D7', 0  
0000261A                          2181             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             24E4
ABSSHORT            24B2
ADDAMATCH           25C2
ADDMATCH            25BE
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ADDR0CONT           1D4A
ADDR1CONT           1D8A
ADDR2CONT           1DCA
ADDR3CONT           1E0A
ADDR4CONT           1E4A
ADDR5CONT           1E8A
ADDR6CONT           1ECA
ADDRREG0            1D2A
ADDRREG1            1D5A
ADDRREG2            1D9A
ADDRREG3            1DDA
ADDRREG4            1E1A
ADDRREG5            1E5A
ADDRREG6            1E9A
ADDRREG7            1EDA
ASLMATCH            25D3
ASRMATCH            25CF
BCLRMATCH           2566
BCSMATCH            2595
BGEMATCH            259D
BLTMATCH            25A1
BRAEIGHT            110E
BRAELEVEN           1112
BRAFIVE             10DE
BRAFOUR             10C2
BRAFOURTEEN         1116
BRAMATCH            2591
BRANINE             110E
BRAONE              10B6
BRASIX              10E2
BRATHIRTEEN         1116
BRATHREE            10BE
BRATWELVE           1112
BRATWO              10BA
BRAZERO             1086
BVCMATCH            2599
CLPER               2555
CMPIMATCH           2561
CMPMATCH            25B5
COMMA               2551
CR                  D
DATAREG0            1AD8
DATAREG1            1B08
DATAREG2            1B48
DATAREG3            1B88
DATAREG4            1BC8
DATAREG5            1C08
DATAREG6            1C48
DATAREG7            1C88
DEC                 2557
DISPA0              25E8
DISPA1              25EB
DISPA2              25EE
DISPA3              25F1
DISPA4              25F4
DISPA5              25F7
DISPA6              25FA
DISPA7              25FD
DISPBYTE            25DF
DISPD               2600
DISPD0              2602
DISPD1              2605
DISPD2              2608
DISPD3              260B
DISPD4              260E
DISPD5              2611
DISPD6              2614
DISPD7              2617
DISPHEX             254F
DISPIMM             2516
DISPLAYA0           202A
DISPLAYA0A          20F6
DISPLAYA0D          23BA
DISPLAYA0P          2222
DISPLAYA1           203A
DISPLAYA1A          2112
DISPLAYA1D          23D6
DISPLAYA1P          224A
DISPLAYA2           204A
DISPLAYA2A          212E
DISPLAYA2D          23F2
DISPLAYA2P          2272
DISPLAYA3           205A
DISPLAYA3A          214A
DISPLAYA3D          240E
DISPLAYA3P          229A
DISPLAYA4           206A
DISPLAYA4A          2166
DISPLAYA4D          242A
DISPLAYA4P          22C2
DISPLAYA5           207A
DISPLAYA5A          2182
DISPLAYA5D          2446
DISPLAYA5P          22EA
DISPLAYA6           208A
DISPLAYA6A          219E
DISPLAYA6D          2462
DISPLAYA6P          2312
DISPLAYA7           209A
DISPLAYA7A          21BA
DISPLAYA7D          247E
DISPLAYA7P          233A
DISPLAYD0           1F6A
DISPLAYD1           1F7A
DISPLAYD2           1F8A
DISPLAYD3           1F9A
DISPLAYD4           1FAA
DISPLAYD5           1FBA
DISPLAYD6           1FCA
DISPLAYD7           1FDA
DISPLONG            25E5
DISPWORD            25E2
DIVSMATCH           25A5
EIGHT               8
ELEVEN              B
ENDMOVE             1EEC
ENDPROG             2542
ENDSUB              253C
EORMATCH            25B1
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             254D
INC                 2559
INVALID             253C
JSRMATCH            257E
LEAMATCH            2588
LF                  A
LOOP                100C
LSLMATCH            25CB
LSRMATCH            25C7
MASK0               0
MASK1               1
MASK2               2
MASK3               4
MASK4               8
MASK5               10
MASK6               20
MASK7               40
MASK8               80
MASKA               5
MASKB               A
MASKC               14
MASKD               28
MASKE               50
MASKF               A0
MOVEAMATCH          2570
MOVEMATCH           256B
MOVEML              1A1E
MOVEMLIST           19DE
MOVEMMATCH          2582
MOVEMW              19F2
MULSMATCH           25B9
NEGMATCH            2576
NEWLINE             2546
NINE                9
ONE                 1
OPASL               1996
OPASR               19A2
OPBCLR              1410
OPBCS               194E
OPBGE               1966
OPBLT               1972
OPBRA               1936
OPBVC               195A
OPCMPI              129E
OPCMPIB             12EA
OPCMPIL             13AE
OPCMPIW             134C
OPDYNBCLR           1474
OPJSR               1862
OPLEA               192A
OPLSL               19AE
OPLSR               19BA
OPMOVEAL            15F6
OPMOVEAW            16F0
OPMOVEB             14E2
OPMOVEL             1566
OPMOVEM             18DA
OPMOVEMLEA          18BE
OPMOVEW             1660
OPMULS              198A
OPNEG               175A
OPNEGB              1788
OPNEGL              17C8
OPNEGW              1808
OPORI               114A
OPORIB              1178
OPORIL              123C
OPORIW              11DA
OPPER               2553
OPROL               19C6
OPROR               19D2
OPRTS               18A2
OPRTSJSR            1848
OPSUB               197E
OPSUBQ              192A
ORIMATCH            255D
ORMATCH             25AA
PADDRDEC            2362
PADDRDIR            20AA
PADDRPOST           21D6
PADDRREG            1FEA
PDATAREG            1F2A
PHEX                249A
PRINTEA             1EF2
PRINTINVALID        2542
PRINTMEM            1C98
PRINTMEMREG         1EEA
PRINTREGMEM         1A4A
REG0                0
REG0CONT            1AF8
REG1                1
REG1CONT            1B38
REG2                2
REG2CONT            1B78
REG3                3
REG3CONT            1BB8
REG4                4
REG4CONT            1BF8
REG5                5
REG5CONT            1C38
REG6                6
REG6CONT            1C78
REG7                7
ROLMATCH            25DB
RORMATCH            25D7
RTSMATCH            257A
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SLASH               255B
SPACE               254A
START               1000
SUBMATCH            25AD
SUBQMATCH           258C
TEST_END            2009
TEST_START          2000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
