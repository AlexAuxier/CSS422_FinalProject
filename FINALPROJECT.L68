00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 12/4/2014 12:23:53 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =00003009                 11  test_end    EQU     $00003009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00003000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00003009             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 195A                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 0080                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0078                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 008C                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0088                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00AC                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00A4                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00A0                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 0098                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 0094                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 00DE                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                102          AND.B       #secNib, D2         ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 013C                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 0288                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                108          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 03F2                109          BEQ         opBCLR
000010A6  C47C 0001                110          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                111          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 044A                112          BEQ         opDynBCLR
000010B2  6000 18BA                113          BRA         printInvalid
000010B6                           114          
000010B6                           115          
000010B6  6000 04B0                116  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           117  
000010BA                           118  braTwo  ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BA                           119  
000010BA                           120  braThree ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BA                           121  
000010BA  4242                     122  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010BC  1401                     123          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010BE  C438 000F                124          AND.B       $0F, D2             ; set first nibble to 0
000010C2                           125   
000010C2  B43C 0004                126          CMP.B       #four, D2           ; compare second nibble to 4
000010C6  6700 0524                127          BEQ         opNEG               ; branch to NEG method
000010CA  B43C 000E                128          CMP.B       #fourteen, D2       ; compare second nibble to E
000010CE  6700 0528                129          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010D2  6000 0524                130          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010D6                           131  
000010D6  6000 0520                132  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010DA                           133  
000010DA  4242                     134  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010DC  1401                     135          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010DE  C438 000F                136          AND.B       $0F, D2             ; set first nibble to 0
000010E2                           137   
000010E2  B43C 0000                138          CMP.B       #zero, D2           ; compare second nibble to 0
000010E6  6700 051C                139          BEQ         opBRA               ; branch to BRA method
000010EA  B43C 0005                140          CMP.B       #five, D2           ; compare second nibble to 5
000010EE  6700 052C                141          BEQ         opBCS               ; branch to BCS method
000010F2  B43C 0008                142          CMP.B       #eight, D2          ; compare second nibble to 8
000010F6  6700 0530                143          BEQ         opBVC               ; branch to BCS method
000010FA  B43C 000C                144          CMP.B       #twelve, D2         ; compare second nibble to 12
000010FE  6700 0534                145          BEQ         opBGE               ; branch to BGE method
00001102  6000 053C                146          BRA         opBLT               ; otherwise, branch to BLT method
00001106                           147  
00001106                           148  braEight    ; there are two opCodes available DIVS, or OR
00001106                           149  
00001106  6000 0544                150  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000110A                           151  
0000110A                           152  braEleven   ; there are two opCodes available EOR, or CMP
0000110A                           153  
0000110A  6000 054C                154  braTwelve   BRA         opMULS              ; we know that there is only one opcode that is MULS    
0000110E                           155    
0000110E  E141                     156  braThirteen ASL         #eight, D1          ; we need the whole word to compare between add and adda, so move over the current byte 
00001110  1218                     157              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
00001112                           158              
00001112  4242                     159              CLR         D2                  ; clear D2
00001114  3401                     160              MOVE.W      D1, D2              ; copy opcode to D2
00001116  EC42                     161              ASR         #six, D2            ; shift the bits right to get size and type
00001118  C47C 0007                162              AND         #seven,D2           ; clear out all but first 3 bits
0000111C                           163              
0000111C  B43C 0000                164              CMP.B       #zero,D2            ; compare 0 to D2
00001120  6700 059A                165              BEQ         opADDB              ; we know its ADDB
00001124  B43C 0001                166              CMP.B       #one, D2            ; compare 1 to D2
00001128  6700 05FE                167              BEQ         opADDW              ; we know its ADDW
0000112C  B43C 0002                168              CMP.B       #two, D2            ; compare 2 to D2
00001130  6700 0662                169              BEQ         opADDL              ; we know its ADDL
00001134  B43C 0003                170              CMP.B       #three, D2          ; compare 3 to D2
00001138  6700 06C6                171              BEQ         opADDAW             ; we know its ADDAW
0000113C  B43C 0004                172              CMP.B       #four, D2           ; compare 4 to D2
00001140  6700 057A                173              BEQ         opADDB              ; we know its ADDB
00001144  B43C 0005                174              CMP.B       #five, D2           ; compare 5 to D2
00001148  6700 05DE                175              BEQ         opADDW              ; we know its ADDW
0000114C  B43C 0006                176              CMP.B       #six, D2            ; compare 6 to D2
00001150  6700 0642                177              BEQ         opADDL              ; we know its ADDL
00001154  B43C 0007                178              CMP.B       #seven, D2          ; compare 7 to D2
00001158  6700 0716                179              BEQ         opADDAL             ; we know its ADDAL
0000115C  6000 1810                180              BRA         printInvalid        ; invalid opcode
00001160                           181               
00001160  E141                     182  braFourteen ASL.W       #eight,D1           ; we need the whole word to compare between add and adda, so move over the current byte
00001162  1218                     183              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
00001164                           184              
00001164  4242                     185              CLR         D2                  ; clear D2
00001166  3401                     186              MOVE.W      D1, D2              ; copy opcode to D2
00001168  EC82                     187              ASR.L       #six, D2            ; shift the bits right to get size
0000116A                           188          
0000116A  B43C 0003                189              CMP.B       #three, D2          ; if the size is three, we are shifting memory
0000116E  6700 0006                190              BEQ         memShifts           ; go to memory shift
00001172  6000 0040                191              BRA         regShifts           ; else go to register shift
00001176                           192  
00001176  4242                     193  memShifts   CLR         D2             
00001178  3401                     194              MOVE.W      D1, D2              ; clear out D2 and copy D1 back in
0000117A  E082                     195              ASR.L       #eight,D2           ; move to get first byte back
0000117C  C47C 000F                196              AND         #secNib, D2         ; set first nibble to 0
00001180                           197   
00001180  B43C 0000                198              CMP.B       #zero, D2           ; compare second nibble to 0
00001184  6700 07A6                199              BEQ         opASR               ; branch to ASR method
00001188  B43C 0001                200              CMP.B       #one, D2            ; compare second nibble to 1
0000118C  6700 0752                201              BEQ         opASL               ; branch to ASL method
00001190  B43C 0002                202              CMP.B       #two, D2            ; compare second nibble to 2
00001194  6700 082E                203              BEQ         opLSR               ; branch to LSR method
00001198  B43C 0003                204              CMP.B       #three, D2          ; compare second nibble to 3
0000119C  6700 07DA                205              BEQ         opLSL               ; branch to LSL method
000011A0  B43C 0006                206              CMP.B       #six, D2            ; compare second nibble to 6
000011A4  6700 08B6                207              BEQ         opROR               ; branch to ROR method
000011A8  B43C 0007                208              CMP.B       #seven, D2          ; compare second nibble to 7
000011AC  6700 0862                209              BEQ         opROL               ; branch to ROL method
000011B0  6000 17BC                210              BRA         printInvalid        ; otherwise, invalid
000011B4                           211              
000011B4  B43C 0000                212  regShifts   CMP.B       #zero, D2           ; if size is 0, we are shifting a byte
000011B8  6700 08EE                213              BEQ         memSB               ; branch to register shift byte
000011BC  B43C 0001                214              CMP.B       #one, D2            ; if size is 1, we are shifting a word
000011C0  6700 0B70                215              BEQ         memSW               ; branch to register shift word
000011C4  B43C 0002                216              CMP.B       #two, D2            ; if size is 1, we are shifting a long
000011C8  6700 0DF2                217              BEQ         memSL               ; branch to register shift long
000011CC  6000 17A0                218              BRA         printInvalid        ; otherwise, invalid
000011D0                           219  
000011D0  43F9 00002987            220  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
000011D6  103C 000E                221          MOVE.B      #14, D0             ; command for trap call to display message
000011DA  4E4F                     222          TRAP        #15                 ; trap call
000011DC                           223          
000011DC  1218                     224          MOVE.B      (A0)+, D1           ; move next byte over
000011DE  1401                     225          MOVE.B      D1,D2               ; copy data over
000011E0  EC42                     226          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000011E2  B43C 0000                227          CMP.B       #zero,D2            ; if size is 0, we are shifting a byte
000011E6  6700 0016                228          BEQ         opORIB             
000011EA  B43C 0001                229          CMP.B       #one,D2             ; if size is 0, we are shifting a byte
000011EE  6700 0070                230          BEQ         opORIW
000011F2  B43C 0002                231          CMP.B       #two,D2             ; if size is 0, we are shifting a byte
000011F6  6700 00CA                232          BEQ         opORIL
000011FA  6000 1772                233          BRA         printInvalid        ; otherwise, invalid
000011FE                           234          
000011FE  43F9 00002A09            235  opORIB  LEA         dispByte, A1        ; Display byte
00001204  103C 000E                236          MOVE.B      #14, D0             ; command for trap call to display message
00001208  4E4F                     237          TRAP        #15                 ; trap call
0000120A                           238          
0000120A  43F9 00002976            239          LEA         space, A1           ; Display space
00001210  103C 000E                240          MOVE.B      #14, D0             ; command for trap call to display message
00001214  4E4F                     241          TRAP        #15                 ; trap call
00001216                           242          
00001216  4242                     243          CLR         D2
00001218  1401                     244          MOVE.B      D1,D2
0000121A  E642                     245          ASR         #three,D2
0000121C  C47C 0007                246          AND         #seven,D2
00001220  4243                     247          CLR         D3        
00001222  1601                     248          MOVE.B      D1,D3
00001224  C67C 0007                249          AND         #seven,D3
00001228                           250          
00001228  4241                     251          CLR         D1
0000122A  3218                     252          MOVE.W      (A0)+, D1
0000122C                           253          
0000122C  43F9 00002979            254          LEA         hashTag, A1         ; Display immediate sign
00001232  103C 000E                255          MOVE.B      #14, D0             ; command for trap call to display message
00001236  4E4F                     256          TRAP        #15                 ; trap call
00001238                           257          
00001238  103C 0003                258          MOVE.B      #3, D0
0000123C  4E4F                     259          TRAP        #15
0000123E                           260          
0000123E  43F9 0000297D            261          LEA         comma, A1           ; Display comma
00001244  103C 000E                262          MOVE.B      #14, D0             ; command for trap call to display message
00001248  4E4F                     263          TRAP        #15                 ; trap call
0000124A                           264          
0000124A  4EB9 0000231E            265          JSR         printEA
00001250                           266          
00001250  43F9 00002972            267          LEA         newLine, A1         ; nextline
00001256  103C 000E                268          MOVE.B      #14, D0             ; command for trap call to display message
0000125A  4E4F                     269          TRAP        #15                 ; trap call
0000125C                           270          
0000125C  6000 FDAE                271          BRA         LOOP
00001260                           272          
00001260                           273          
00001260  43F9 00002A0C            274  opORIW  LEA         dispWord, A1        ; Display byte
00001266  103C 000E                275          MOVE.B      #14, D0             ; command for trap call to display message
0000126A  4E4F                     276          TRAP        #15                 ; trap call
0000126C                           277          
0000126C  43F9 00002976            278          LEA         space, A1           ; Display space
00001272  103C 000E                279          MOVE.B      #14, D0             ; command for trap call to display message
00001276  4E4F                     280          TRAP        #15                 ; trap call
00001278                           281          
00001278  4242                     282          CLR         D2
0000127A  1401                     283          MOVE.B      D1,D2
0000127C  E642                     284          ASR         #three,D2
0000127E  C47C 0007                285          AND         #seven,D2
00001282  4243                     286          CLR         D3        
00001284  1601                     287          MOVE.B      D1,D3
00001286  C67C 0007                288          AND         #seven,D3
0000128A                           289          
0000128A  4241                     290          CLR         D1
0000128C  3218                     291          MOVE.W      (A0)+, D1
0000128E                           292          
0000128E  43F9 00002979            293          LEA         hashTag, A1           ; Display space
00001294  103C 000E                294          MOVE.B      #14, D0             ; command for trap call to display message
00001298  4E4F                     295          TRAP        #15                 ; trap call
0000129A                           296          
0000129A  103C 0003                297          MOVE.B      #3, D0
0000129E  4E4F                     298          TRAP        #15
000012A0                           299          
000012A0  43F9 0000297D            300          LEA         comma, A1           ; Display space
000012A6  103C 000E                301          MOVE.B      #14, D0             ; command for trap call to display message
000012AA  4E4F                     302          TRAP        #15                 ; trap call
000012AC                           303          
000012AC  4EB9 0000231E            304          JSR         printEA
000012B2                           305          
000012B2  43F9 00002972            306          LEA         newLine, A1           ; Display space
000012B8  103C 000E                307          MOVE.B      #14, D0             ; command for trap call to display message
000012BC  4E4F                     308          TRAP        #15                 ; trap call
000012BE                           309          
000012BE  6000 FD4C                310          BRA         LOOP
000012C2                           311       
000012C2  43F9 00002A0F            312  opORIL  LEA         dispLong, A1        ; Display byte
000012C8  103C 000E                313          MOVE.B      #14, D0             ; command for trap call to display message
000012CC  4E4F                     314          TRAP        #15                 ; trap call
000012CE                           315          
000012CE  43F9 00002976            316          LEA         space, A1           ; Display space
000012D4  103C 000E                317          MOVE.B      #14, D0             ; command for trap call to display message
000012D8  4E4F                     318          TRAP        #15                 ; trap call
000012DA                           319          
000012DA  4242                     320          CLR         D2
000012DC  1401                     321          MOVE.B      D1,D2
000012DE  E642                     322          ASR         #three,D2
000012E0  C47C 0007                323          AND         #seven,D2
000012E4  4243                     324          CLR         D3        
000012E6  1601                     325          MOVE.B      D1,D3
000012E8  C67C 0007                326          AND         #seven,D3
000012EC                           327          
000012EC  4241                     328          CLR         D1
000012EE  2218                     329          MOVE.L      (A0)+, D1
000012F0                           330          
000012F0  43F9 00002979            331          LEA         hashTag, A1           ; Display space
000012F6  103C 000E                332          MOVE.B      #14, D0             ; command for trap call to display message
000012FA  4E4F                     333          TRAP        #15                 ; trap call
000012FC                           334          
000012FC  103C 0003                335          MOVE.B      #3, D0
00001300  4E4F                     336          TRAP        #15
00001302                           337          
00001302  43F9 0000297D            338          LEA         comma, A1           ; Display space
00001308  103C 000E                339          MOVE.B      #14, D0             ; command for trap call to display message
0000130C  4E4F                     340          TRAP        #15                 ; trap call
0000130E                           341          
0000130E  4EB9 0000231E            342          JSR         printEA
00001314                           343          
00001314  43F9 00002972            344          LEA         newLine, A1           ; Display space
0000131A  103C 000E                345          MOVE.B      #14, D0             ; command for trap call to display message
0000131E  4E4F                     346          TRAP        #15                 ; trap call
00001320                           347          
00001320  6000 FCEA                348          BRA         LOOP
00001324                           349           
00001324  43F9 0000298B            350  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000132A  103C 000E                351          MOVE.B      #14, D0             ; command for trap call to display message
0000132E  4E4F                     352          TRAP        #15                 ; trap call
00001330                           353                  
00001330  1218                     354          MOVE.B      (A0)+, D1
00001332  1401                     355          MOVE.B      D1,D2               ; copy data over
00001334  EC42                     356          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001336  B43C 0000                357          CMP.B       #zero,D2
0000133A  6700 0034                358          BEQ         opCMPIB
0000133E  B43C 0001                359          CMP.B       #one,D2
00001342  6700 008E                360          BEQ         opCMPIW
00001346  B43C 0002                361          CMP.B       #two,D2
0000134A  6700 00E8                362          BEQ         opCMPIL
0000134E                           363          
0000134E  1401                     364          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
00001350  E542                     365          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
00001352  1802                     366          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
00001354  4242                     367          CLR         D2                  ; Clear out data register
00001356  1404                     368          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
00001358  EA42                     369          ASR         #five,D2            ; Shift the register out to get just the mode
0000135A  1802                     370          MOVE.B      D2,D4               ; Store mode into D4
0000135C  4242                     371          CLR         D2
0000135E                           372          
0000135E  1401                     373          MOVE.B      D1,D2               ; Getting the EA register
00001360  EB42                     374          ASL         #five,D2
00001362  1A02                     375          MOVE.B      D2,D5               ; Move just the register into D5
00001364  4242                     376          CLR         D2                  ; Clearing D2 to put data back
00001366  1405                     377          MOVE.B      D5,D2               ; Putting back the register
00001368  EA42                     378          ASR         #five,D2            ; Shifting bits in order to read the register
0000136A  1A02                     379          MOVE.B      D2,D5               ; Store register into D5
0000136C                           380          
0000136C  6000 FC9E                381          BRA         LOOP                ; go back to the loop
00001370                           382  
00001370  43F9 00002A09            383  opCMPIB LEA         dispByte, A1        ; Display byte
00001376  103C 000E                384          MOVE.B      #14, D0             ; command for trap call to display message
0000137A  4E4F                     385          TRAP        #15                 ; trap call
0000137C                           386          
0000137C  43F9 00002976            387          LEA         space, A1           ; Display space
00001382  103C 000E                388          MOVE.B      #14, D0             ; command for trap call to display message
00001386  4E4F                     389          TRAP        #15                 ; trap call
00001388                           390          
00001388  4242                     391          CLR         D2
0000138A  1401                     392          MOVE.B      D1,D2
0000138C  E642                     393          ASR         #three,D2
0000138E  C47C 0007                394          AND         #seven,D2
00001392  4243                     395          CLR         D3        
00001394  1601                     396          MOVE.B      D1,D3
00001396  C67C 0007                397          AND         #seven,D3
0000139A                           398          
0000139A  4241                     399          CLR         D1
0000139C  3218                     400          MOVE.W      (A0)+, D1
0000139E                           401          
0000139E  43F9 00002979            402          LEA         hashTag, A1           ; Display space
000013A4  103C 000E                403          MOVE.B      #14, D0             ; command for trap call to display message
000013A8  4E4F                     404          TRAP        #15                 ; trap call
000013AA                           405          
000013AA  103C 0003                406          MOVE.B      #3, D0
000013AE  4E4F                     407          TRAP        #15
000013B0                           408          
000013B0  43F9 0000297D            409          LEA         comma, A1           ; Display space
000013B6  103C 000E                410          MOVE.B      #14, D0             ; command for trap call to display message
000013BA  4E4F                     411          TRAP        #15                 ; trap call
000013BC                           412          
000013BC  4EB9 0000231E            413          JSR         printEA
000013C2                           414          
000013C2  43F9 00002972            415          LEA         newLine, A1           ; Display space
000013C8  103C 000E                416          MOVE.B      #14, D0             ; command for trap call to display message
000013CC  4E4F                     417          TRAP        #15                 ; trap call
000013CE                           418  
000013CE  6000 FC3C                419          BRA         LOOP
000013D2                           420  
000013D2  43F9 00002A0C            421  opCMPIW LEA         dispWord, A1        ; Display byte
000013D8  103C 000E                422          MOVE.B      #14, D0             ; command for trap call to display message
000013DC  4E4F                     423          TRAP        #15                 ; trap call
000013DE                           424          
000013DE  43F9 00002976            425          LEA         space, A1           ; Display space
000013E4  103C 000E                426          MOVE.B      #14, D0             ; command for trap call to display message
000013E8  4E4F                     427          TRAP        #15                 ; trap call
000013EA                           428          
000013EA  4242                     429          CLR         D2
000013EC  1401                     430          MOVE.B      D1,D2
000013EE  E642                     431          ASR         #three,D2
000013F0  C47C 0007                432          AND         #seven,D2
000013F4  4243                     433          CLR         D3        
000013F6  1601                     434          MOVE.B      D1,D3
000013F8  C67C 0007                435          AND         #seven,D3
000013FC                           436          
000013FC  4241                     437          CLR         D1
000013FE  3218                     438          MOVE.W      (A0)+, D1
00001400                           439          
00001400  43F9 00002979            440          LEA         hashTag, A1           ; Display space
00001406  103C 000E                441          MOVE.B      #14, D0             ; command for trap call to display message
0000140A  4E4F                     442          TRAP        #15                 ; trap call
0000140C                           443          
0000140C  103C 0003                444          MOVE.B      #3, D0
00001410  4E4F                     445          TRAP        #15
00001412                           446          
00001412  43F9 0000297D            447          LEA         comma, A1           ; Display space
00001418  103C 000E                448          MOVE.B      #14, D0             ; command for trap call to display message
0000141C  4E4F                     449          TRAP        #15                 ; trap call
0000141E                           450          
0000141E  4EB9 0000231E            451          JSR         printEA
00001424                           452          
00001424  43F9 00002972            453          LEA         newLine, A1           ; Display space
0000142A  103C 000E                454          MOVE.B      #14, D0             ; command for trap call to display message
0000142E  4E4F                     455          TRAP        #15                 ; trap call
00001430  6000 FBDA                456          BRA         LOOP
00001434                           457  
00001434  43F9 00002A0F            458  opCMPIL LEA         dispLong, A1        ; Display byte
0000143A  103C 000E                459          MOVE.B      #14, D0             ; command for trap call to display message
0000143E  4E4F                     460          TRAP        #15                 ; trap call
00001440                           461          
00001440  43F9 00002976            462          LEA         space, A1           ; Display space
00001446  103C 000E                463          MOVE.B      #14, D0             ; command for trap call to display message
0000144A  4E4F                     464          TRAP        #15                 ; trap call
0000144C                           465          
0000144C  4242                     466          CLR         D2
0000144E  1401                     467          MOVE.B      D1,D2
00001450  E642                     468          ASR         #three,D2
00001452  C47C 0007                469          AND         #seven,D2
00001456  4243                     470          CLR         D3        
00001458  1601                     471          MOVE.B      D1,D3
0000145A  C67C 0007                472          AND         #seven,D3
0000145E                           473          
0000145E  4241                     474          CLR         D1
00001460  3218                     475          MOVE.W      (A0)+, D1
00001462                           476          
00001462  43F9 00002979            477          LEA         hashTag, A1           ; Display space
00001468  103C 000E                478          MOVE.B      #14, D0             ; command for trap call to display message
0000146C  4E4F                     479          TRAP        #15                 ; trap call
0000146E                           480          
0000146E  103C 0003                481          MOVE.B      #3, D0
00001472  4E4F                     482          TRAP        #15
00001474                           483          
00001474  43F9 0000297D            484          LEA         comma, A1           ; Display space
0000147A  103C 000E                485          MOVE.B      #14, D0             ; command for trap call to display message
0000147E  4E4F                     486          TRAP        #15                 ; trap call
00001480                           487          
00001480  4EB9 0000231E            488          JSR         printEA
00001486                           489          
00001486  43F9 00002972            490          LEA         newLine, A1           ; Display space
0000148C  103C 000E                491          MOVE.B      #14, D0             ; command for trap call to display message
00001490  4E4F                     492          TRAP        #15                 ; trap call
00001492                           493          
00001492  6000 FB78                494          BRA         LOOP
00001496                           495  
00001496  43F9 00002990            496  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000149C  103C 000E                497                  MOVE.B      #14, D0             ; command for trap call to display message
000014A0  4E4F                     498                  TRAP        #15                 ; trap call
000014A2                           499  
000014A2  43F9 00002976            500                  LEA         space, A1           ; Display space
000014A8  103C 000E                501                  MOVE.B      #14, D0             ; command for trap call to display message
000014AC  4E4F                     502                  TRAP        #15                 ; trap call
000014AE                           503                  
000014AE  4242                     504                  CLR         D2
000014B0  1218                     505                  MOVE.B      (A0)+, D1
000014B2  1401                     506                  MOVE.B      D1,D2               ; copy data over
000014B4  E642                     507                  ASR         #three,D2           ; Shift to the right to remove register
000014B6  C47C 0007                508                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
000014BA                           509                  
000014BA  4243                     510                  CLR         D3                  ; Clear D3 so we can move D1 in
000014BC  1601                     511                  MOVE.B      D1,D3               ; Move othr byte in
000014BE  C67C 0007                512                  AND         #seven,D3           ; Set everything besides register to 0
000014C2                           513                  
000014C2  4241                     514                  CLR         D1
000014C4  3218                     515                  MOVE.W      (A0)+, D1
000014C6                           516                 
000014C6                           517                  
000014C6  43F9 00002979            518                  LEA         hashTag, A1           ; Display space
000014CC  103C 000E                519                  MOVE.B      #14, D0             ; command for trap call to display message
000014D0  4E4F                     520                  TRAP        #15                 ; trap call
000014D2                           521          
000014D2  103C 0003                522                  MOVE.B      #3, D0
000014D6  4E4F                     523                  TRAP        #15
000014D8                           524          
000014D8  43F9 0000297D            525                  LEA         comma, A1           ; Display space
000014DE  103C 000E                526                  MOVE.B      #14, D0             ; command for trap call to display message
000014E2  4E4F                     527                  TRAP        #15                 ; trap call
000014E4                           528                  
000014E4  4EB9 0000231E            529                  JSR         printEA
000014EA                           530          
000014EA  43F9 00002972            531                  LEA         newLine, A1           ; Display space
000014F0  103C 000E                532                  MOVE.B      #14, D0             ; command for trap call to display message
000014F4  4E4F                     533                  TRAP        #15                 ; trap call
000014F6                           534                  
000014F6                           535                  
000014F6  6000 FB14                536                  BRA         LOOP                
000014FA                           537          
000014FA                           538  opDynBCLR       
000014FA  4241                     539                  CLR         D1
000014FC  1218                     540                  MOVE.B      (A0)+,D1            ; Copy second byte in
000014FE  1601                     541                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
00001500  E243                     542                  ASR         #one,D3             ; Shift register over to the end
00001502  C67C 0007                543                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
00001506                           544                  
00001506  1401                     545                  MOVE.B      D1,D2
00001508  EC42                     546                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
0000150A  B47C 0002                547                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
0000150E  6600 145E                548                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
00001512                           549  
00001512                           550                  
00001512  43F9 00002990            551                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
00001518  103C 000E                552                  MOVE.B      #14, D0             ; command for trap call to display message
0000151C  4E4F                     553                  TRAP        #15                 ; trap call  
0000151E                           554                  
0000151E  43F9 00002976            555                  LEA         space, A1           ; Display space
00001524  103C 000E                556                  MOVE.B      #14, D0             ; command for trap call to display message
00001528  4E4F                     557                  TRAP        #15                 ; trap call
0000152A                           558                  
0000152A  143C 0000                559                  MOVE.B      #zero,D2                
0000152E  4EB9 0000231E            560                  JSR         printEA
00001534                           561                  
00001534  43F9 0000297D            562                  LEA         comma, A1           ; Display space
0000153A  103C 000E                563                  MOVE.B      #14, D0             ; command for trap call to display message
0000153E  4E4F                     564                  TRAP        #15                 ; trap call
00001540                           565                  
00001540  4242                     566                  CLR         D2
00001542  1401                     567                  MOVE.B      D1,D2               ; Using D2 to store EA mode
00001544  E642                     568                  ASR         #three,D2           ; Remove/shift the register out
00001546  C47C 0007                569                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
0000154A                           570                  
0000154A  4243                     571                  CLR         D3                  ; Clearing D3 to avoid mashing data
0000154C  1601                     572                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
0000154E  C67C 0007                573                  AND         #seven,D3           ; Change all bits except for register bits to 0
00001552                           574                  
00001552                           575  
00001552  4EB9 0000231E            576                  JSR         printEA
00001558                           577          
00001558  43F9 00002972            578                  LEA         newLine, A1           ; Display space
0000155E  103C 000E                579                  MOVE.B      #14, D0             ; command for trap call to display message
00001562  4E4F                     580                  TRAP        #15                 ; trap call            
00001564                           581  
00001564                           582  
00001564  6000 FAA6                583                  BRA         LOOP                ; go back to the loop
00001568                           584   
00001568  43F9 00002995            585  opMOVEB LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
0000156E  103C 000E                586          MOVE.B      #14, D0             ; command for trap call to display message
00001572  4E4F                     587          TRAP        #15                 ; trap call
00001574  43F9 00002A09            588          LEA         dispByte, A1        ; display byte
0000157A  103C 000E                589          MOVE.B      #14, D0             ; command for trap call to display message
0000157E  4E4F                     590          TRAP        #15                 ; trap call
00001580  43F9 00002976            591          LEA         space, A1           ; create spaces
00001586  103C 000E                592          MOVE.B      #14, D0             ; command for trap call to display message
0000158A  4E4F                     593          TRAP        #15                 ; trap call
0000158C                           594          
0000158C                           595          
0000158C  4245                     596          CLR         D5                  ; Clear D5
0000158E  1A01                     597          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001590  E245                     598          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001592  CA7C 0007                599          AND         #seven,D5
00001596                           600          
00001596  4244                     601          CLR         D4                  ; Clear out D4
00001598  1801                     602          MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000159A  C87C 0001                603          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000159E                           604          
0000159E  4241                     605          CLR          D1
000015A0  4242                     606          CLR          D2
000015A2  1218                     607          MOVE.B      (A0)+,D1            ; Copy byte into D1
000015A4  1401                     608          MOVE.B      D1,D2
000015A6  EC42                     609          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000015A8  D842                     610          ADD         D2,D4               ; Adds the remaining bits to D4
000015AA                           611          
000015AA  4242                     612          CLR         D2
000015AC  1401                     613          MOVE.B      D1,D2               ; Copy new byte over to D2
000015AE  E642                     614          ASR         #three,D2           ; Shift source register out
000015B0  C47C 0007                615          AND         #seven,D2           ; Set everything to 0 except for the mode
000015B4                           616          
000015B4  4243                     617          CLR         D3
000015B6  1601                     618          MOVE.B      D1,D3
000015B8  C67C 0007                619          AND         #seven,D3
000015BC                           620          
000015BC  4EB9 0000231E            621          JSR         printEA
000015C2                           622          
000015C2  43F9 0000297D            623          LEA         comma, A1           ; Display space
000015C8  103C 000E                624          MOVE.B      #14, D0             ; command for trap call to display message
000015CC  4E4F                     625          TRAP        #15                 ; trap call
000015CE                           626          
000015CE  4242                     627          CLR         D2
000015D0  4243                     628          CLR         D3
000015D2  1404                     629          MOVE.B      D4,D2
000015D4  1605                     630          MOVE.B      D5,D3
000015D6                           631          
000015D6  4EB9 0000231E            632          JSR         printEA
000015DC                           633          
000015DC                           634          
000015DC  43F9 00002972            635          LEA         newLine, A1           ; Display space
000015E2  103C 000E                636          MOVE.B      #14, D0             ; command for trap call to display message
000015E6  4E4F                     637          TRAP        #15                 ; trap call            
000015E8                           638  
000015E8                           639  
000015E8  6000 FA22                640          BRA         LOOP                ; go back to the loop
000015EC                           641          
000015EC                           642  
000015EC  43F9 000029A0            643  opNEG   LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
000015F2  103C 000E                644          MOVE.B      #14, D0             ; command for trap call to display message
000015F6  4E4F                     645          TRAP        #15                 ; trap call
000015F8                           646  
000015F8                           647  opRTSJSR
000015F8                           648  
000015F8                           649  opMOVEMLEA
000015F8                           650  
000015F8  43F9 000029B6            651  opSUBQ  LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
000015FE  103C 000E                652          MOVE.B      #14, D0             ; command for trap call to display message
00001602  4E4F                     653          TRAP        #15                 ; trap call
00001604                           654  
00001604  43F9 000029BB            655  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
0000160A  103C 000E                656          MOVE.B      #14, D0             ; command for trap call to display message
0000160E  4E4F                     657          TRAP        #15                 ; trap call
00001610  43F9 00002976            658          LEA         space, A1           ; create spaces
00001616  103C 000E                659          MOVE.B      #14, D0             ; command for trap call to display message
0000161A  4E4F                     660          TRAP        #15                 ; trap call
0000161C                           661  
0000161C  43F9 000029BF            662  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001622  103C 000E                663          MOVE.B      #14, D0             ; command for trap call to display message
00001626  4E4F                     664          TRAP        #15                 ; trap call
00001628                           665  
00001628  43F9 000029C3            666  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
0000162E  103C 000E                667          MOVE.B      #14, D0             ; command for trap call to display message
00001632  4E4F                     668          TRAP        #15                 ; trap call
00001634                           669  
00001634  43F9 000029C7            670  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
0000163A  103C 000E                671          MOVE.B      #14, D0             ; command for trap call to display message
0000163E  4E4F                     672          TRAP        #15                 ; trap call
00001640                           673  
00001640  43F9 000029CB            674  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001646  103C 000E                675          MOVE.B      #14, D0             ; command for trap call to display message
0000164A  4E4F                     676          TRAP        #15                 ; trap call
0000164C                           677  
0000164C  43F9 000029D7            678  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001652  103C 000E                679          MOVE.B      #14, D0             ; command for trap call to display message
00001656  4E4F                     680          TRAP        #15                 ; trap call
00001658                           681  
00001658  43F9 000029E3            682  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
0000165E  103C 000E                683          MOVE.B      #14, D0             ; command for trap call to display message
00001662  4E4F                     684          TRAP        #15                 ; trap call
00001664  43F9 00002976            685          LEA         space, A1           ; create spaces
0000166A  103C 000E                686          MOVE.B      #14, D0             ; command for trap call to display message
0000166E  4E4F                     687          TRAP        #15                 ; trap call
00001670                           688          
00001670  E141                     689          ASL         #eight, D1
00001672  1218                     690          MOVE.B      (A0)+, D1
00001674                           691          
00001674  4242                     692          CLR         D2
00001676  4243                     693          CLR         D3
00001678  1401                     694          MOVE.B      D1, D2
0000167A  E642                     695          ASR         #three, D2
0000167C  C47C 0007                696          AND         #seven, D2
00001680  1601                     697          MOVE.B      D1, D3
00001682  C67C 0007                698          AND         #seven, D3
00001686                           699          
00001686  4EB9 0000231E            700          JSR         printEA
0000168C                           701          
0000168C  43F9 0000297D            702          LEA         comma, A1           ; create comma
00001692  103C 000E                703          MOVE.B      #14, D0             ; command for trap call to display message
00001696  4E4F                     704          TRAP        #15                 ; trap call
00001698                           705  
00001698  4242                     706          CLR         D2
0000169A  4243                     707          CLR         D3
0000169C  3601                     708          MOVE.W      D1, D3
0000169E  E043                     709          ASR         #eight, D3
000016A0  E243                     710          ASR         #one, D3
000016A2  C67C 0007                711          AND         #seven, D3
000016A6                           712  
000016A6  4EB9 0000231E            713          JSR         printEA
000016AC                           714          
000016AC  43F9 00002972            715          LEA         newLine, A1           ; create new line
000016B2  103C 000E                716          MOVE.B      #14, D0             ; command for trap call to display message
000016B6  4E4F                     717          TRAP        #15                 ; trap call
000016B8                           718          
000016B8  6000 F952                719          BRA         LOOP
000016BC                           720          
000016BC  43F9 000029E8            721  opADDB  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
000016C2  103C 000E                722          MOVE.B      #14, D0             ; command for trap call to display message
000016C6  4E4F                     723          TRAP        #15                 ; trap call
000016C8                           724          
000016C8  43F9 00002A09            725          LEA         dispByte, A1        ; display byte
000016CE  103C 000E                726          MOVE.B      #14, D0             ; command for trap call to display message
000016D2  4E4F                     727          TRAP        #15                 ; trap call
000016D4  43F9 00002976            728          LEA         space, A1           ; create spaces
000016DA  103C 000E                729          MOVE.B      #14, D0             ; command for trap call to display message
000016DE  4E4F                     730          TRAP        #15                 ; trap call
000016E0                           731          
000016E0  4242                     732          CLR         D2
000016E2  4243                     733          CLR         D3
000016E4  1401                     734          MOVE.B      D1, D2
000016E6  E642                     735          ASR         #three, D2
000016E8  C47C 0007                736          AND         #seven, D2
000016EC  1601                     737          MOVE.B      D1, D3
000016EE  C67C 0007                738          AND         #seven, D3
000016F2                           739          
000016F2  4EB9 0000231E            740          JSR         printEA
000016F8                           741          
000016F8  43F9 0000297D            742          LEA         comma, A1           ; create comma
000016FE  103C 000E                743          MOVE.B      #14, D0             ; command for trap call to display message
00001702  4E4F                     744          TRAP        #15                 ; trap call
00001704                           745  
00001704  4242                     746          CLR         D2
00001706  4243                     747          CLR         D3
00001708  3601                     748          MOVE.W      D1, D3
0000170A  E043                     749          ASR         #eight, D3
0000170C  E243                     750          ASR         #one, D3
0000170E  C67C 0007                751          AND         #seven, D3
00001712                           752  
00001712  4EB9 0000231E            753          JSR         printEA
00001718                           754          
00001718  43F9 00002972            755          LEA         newLine, A1           ; create new line
0000171E  103C 000E                756          MOVE.B      #14, D0             ; command for trap call to display message
00001722  4E4F                     757          TRAP        #15                 ; trap call
00001724                           758          
00001724  6000 F8E6                759          BRA         LOOP
00001728                           760          
00001728  43F9 000029E8            761  opADDW  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
0000172E  103C 000E                762          MOVE.B      #14, D0             ; command for trap call to display message
00001732  4E4F                     763          TRAP        #15                 ; trap call
00001734                           764  
00001734  43F9 00002A0C            765          LEA         dispWord, A1        ; display word
0000173A  103C 000E                766          MOVE.B      #14, D0             ; command for trap call to display message
0000173E  4E4F                     767          TRAP        #15                 ; trap call
00001740  43F9 00002976            768          LEA         space, A1           ; create spaces
00001746  103C 000E                769          MOVE.B      #14, D0             ; command for trap call to display message
0000174A  4E4F                     770          TRAP        #15                 ; trap call
0000174C                           771          
0000174C  4242                     772          CLR         D2
0000174E  4243                     773          CLR         D3
00001750  1401                     774          MOVE.B      D1, D2
00001752  E642                     775          ASR         #three, D2
00001754  C47C 0007                776          AND         #seven, D2
00001758  1601                     777          MOVE.B      D1, D3
0000175A  C67C 0007                778          AND         #seven, D3
0000175E                           779          
0000175E  4EB9 0000231E            780          JSR         printEA
00001764                           781          
00001764  43F9 0000297D            782          LEA         comma, A1           ; create comma
0000176A  103C 000E                783          MOVE.B      #14, D0             ; command for trap call to display message
0000176E  4E4F                     784          TRAP        #15                 ; trap call
00001770                           785  
00001770  4242                     786          CLR         D2
00001772  4243                     787          CLR         D3
00001774  3601                     788          MOVE.W      D1, D3
00001776  E043                     789          ASR         #eight, D3
00001778  E243                     790          ASR         #one, D3
0000177A  C67C 0007                791          AND         #seven, D3
0000177E                           792  
0000177E  4EB9 0000231E            793          JSR         printEA
00001784                           794          
00001784  43F9 00002972            795          LEA         newLine, A1           ; create new line
0000178A  103C 000E                796          MOVE.B      #14, D0             ; command for trap call to display message
0000178E  4E4F                     797          TRAP        #15                 ; trap call
00001790                           798          
00001790  6000 F87A                799          BRA         LOOP
00001794                           800          
00001794  43F9 000029E8            801  opADDL  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
0000179A  103C 000E                802          MOVE.B      #14, D0             ; command for trap call to display message
0000179E  4E4F                     803          TRAP        #15                 ; trap call
000017A0                           804          
000017A0  43F9 00002A0F            805          LEA         dispLong, A1        ; display long
000017A6  103C 000E                806          MOVE.B      #14, D0             ; command for trap call to display message
000017AA  4E4F                     807          TRAP        #15                 ; trap call
000017AC  43F9 00002976            808          LEA         space, A1           ; create spaces
000017B2  103C 000E                809          MOVE.B      #14, D0             ; command for trap call to display message
000017B6  4E4F                     810          TRAP        #15                 ; trap call
000017B8                           811          
000017B8  4242                     812          CLR         D2
000017BA  4243                     813          CLR         D3
000017BC  1401                     814          MOVE.B      D1, D2
000017BE  E642                     815          ASR         #three, D2
000017C0  C47C 0007                816          AND         #seven, D2
000017C4  1601                     817          MOVE.B      D1, D3
000017C6  C67C 0007                818          AND         #seven, D3
000017CA                           819          
000017CA  4EB9 0000231E            820          JSR         printEA
000017D0                           821          
000017D0  43F9 0000297D            822          LEA         comma, A1           ; create comma
000017D6  103C 000E                823          MOVE.B      #14, D0             ; command for trap call to display message
000017DA  4E4F                     824          TRAP        #15                 ; trap call
000017DC                           825  
000017DC  4242                     826          CLR         D2
000017DE  4243                     827          CLR         D3
000017E0  3601                     828          MOVE.W      D1, D3
000017E2  E043                     829          ASR         #eight, D3
000017E4  E243                     830          ASR         #one, D3
000017E6  C67C 0007                831          AND         #seven, D3
000017EA                           832  
000017EA  4EB9 0000231E            833          JSR         printEA
000017F0                           834          
000017F0  43F9 00002972            835          LEA         newLine, A1           ; create new line
000017F6  103C 000E                836          MOVE.B      #14, D0             ; command for trap call to display message
000017FA  4E4F                     837          TRAP        #15                 ; trap call
000017FC                           838          
000017FC  6000 F80E                839          BRA         LOOP
00001800                           840  
00001800  43F9 000029EC            841  opADDAW LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001806  103C 000E                842          MOVE.B      #14, D0             ; command for trap call to display message
0000180A  4E4F                     843          TRAP        #15                 ; trap call
0000180C                           844          
0000180C  43F9 00002A0C            845          LEA         dispWord, A1        ; display word
00001812  103C 000E                846          MOVE.B      #14, D0             ; command for trap call to display message
00001816  4E4F                     847          TRAP        #15                 ; trap call
00001818  43F9 00002976            848          LEA         space, A1           ; create spaces
0000181E  103C 000E                849          MOVE.B      #14, D0             ; command for trap call to display message
00001822  4E4F                     850          TRAP        #15                 ; trap call
00001824                           851          
00001824  4242                     852          CLR         D2
00001826  4243                     853          CLR         D3
00001828  1401                     854          MOVE.B      D1, D2
0000182A  E642                     855          ASR         #three, D2
0000182C  C47C 0007                856          AND         #seven, D2
00001830  1601                     857          MOVE.B      D1, D3
00001832  C67C 0007                858          AND         #seven, D3
00001836                           859          
00001836  4EB9 0000231E            860          JSR         printEA
0000183C                           861          
0000183C  43F9 0000297D            862          LEA         comma, A1           ; create comma
00001842  103C 000E                863          MOVE.B      #14, D0             ; command for trap call to display message
00001846  4E4F                     864          TRAP        #15                 ; trap call
00001848                           865  
00001848  4242                     866          CLR         D2
0000184A  4243                     867          CLR         D3
0000184C  143C 0001                868          MOVE.B      #one, D2
00001850  3601                     869          MOVE.W      D1, D3
00001852  E043                     870          ASR         #eight, D3
00001854  E243                     871          ASR         #one, D3
00001856  C67C 0007                872          AND         #seven, D3
0000185A                           873  
0000185A  4EB9 0000231E            874          JSR         printEA
00001860                           875          
00001860  43F9 00002972            876          LEA         newLine, A1           ; create new line
00001866  103C 000E                877          MOVE.B      #14, D0             ; command for trap call to display message
0000186A  4E4F                     878          TRAP        #15                 ; trap call
0000186C                           879          
0000186C  6000 F79E                880          BRA         LOOP
00001870                           881  
00001870  43F9 000029EC            882  opADDAL LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001876  103C 000E                883          MOVE.B      #14, D0             ; command for trap call to display message
0000187A  4E4F                     884          TRAP        #15                 ; trap call
0000187C                           885  
0000187C  43F9 00002A0F            886          LEA         dispLong, A1        ; display long
00001882  103C 000E                887          MOVE.B      #14, D0             ; command for trap call to display message
00001886  4E4F                     888          TRAP        #15                 ; trap call
00001888  43F9 00002976            889          LEA         space, A1           ; create spaces
0000188E  103C 000E                890          MOVE.B      #14, D0             ; command for trap call to display message
00001892  4E4F                     891          TRAP        #15                 ; trap call
00001894                           892          
00001894  4242                     893          CLR         D2
00001896  4243                     894          CLR         D3
00001898  1401                     895          MOVE.B      D1, D2
0000189A  E642                     896          ASR         #three, D2
0000189C  C47C 0007                897          AND         #seven, D2
000018A0  1601                     898          MOVE.B      D1, D3
000018A2  C67C 0007                899          AND         #seven, D3
000018A6                           900          
000018A6  4EB9 0000231E            901          JSR         printEA
000018AC                           902          
000018AC  43F9 0000297D            903          LEA         comma, A1           ; create comma
000018B2  103C 000E                904          MOVE.B      #14, D0             ; command for trap call to display message
000018B6  4E4F                     905          TRAP        #15                 ; trap call
000018B8                           906  
000018B8  4242                     907          CLR         D2
000018BA  4243                     908          CLR         D3
000018BC  143C 0001                909          MOVE.B      #one, D2
000018C0  3601                     910          MOVE.W      D1, D3
000018C2  E043                     911          ASR         #eight, D3
000018C4  E243                     912          ASR         #one, D3
000018C6  C67C 0007                913          AND         #seven, D3
000018CA                           914  
000018CA  4EB9 0000231E            915          JSR         printEA
000018D0                           916          
000018D0  43F9 00002972            917          LEA         newLine, A1           ; create new line
000018D6  103C 000E                918          MOVE.B      #14, D0             ; command for trap call to display message
000018DA  4E4F                     919          TRAP        #15                 ; trap call
000018DC                           920          
000018DC  6000 F72E                921          BRA         LOOP
000018E0                           922          
000018E0  43F9 000029FD            923  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000018E6  103C 000E                924          MOVE.B      #14, D0             ; command for trap call to display message
000018EA  4E4F                     925          TRAP        #15                 ; trap call
000018EC                           926          
000018EC  43F9 00002A0C            927          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000018F2  103C 000E                928          MOVE.B      #14, D0             ; command for trap call to display message
000018F6  4E4F                     929          TRAP        #15                 ; trap call
000018F8                           930          
000018F8  43F9 00002976            931          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
000018FE  103C 000E                932          MOVE.B      #14, D0             ; command for trap call to display message
00001902  4E4F                     933          TRAP        #15                 ; trap call
00001904                           934          
00001904  4242                     935          CLR         D2
00001906  4243                     936          CLR         D3
00001908  1401                     937          MOVE.B      D1,D2
0000190A  1601                     938          MOVE.B      D1,D3
0000190C                           939          
0000190C  E602                     940          ASR.B       #three, D2
0000190E  C47C 0007                941          AND         #seven, D2
00001912  C67C 0007                942          AND         #seven, D3        
00001916                           943          
00001916  4EB9 0000231E            944          JSR         printEA
0000191C                           945          
0000191C  43F9 00002972            946          LEA         newLine, A1           ; Display space
00001922  103C 000E                947          MOVE.B      #14, D0             ; command for trap call to display message
00001926  4E4F                     948          TRAP        #15                 ; trap call
00001928                           949          
00001928  6000 F6E2                950          BRA         LOOP
0000192C                           951  
0000192C  43F9 000029F9            952  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001932  103C 000E                953          MOVE.B      #14, D0             ; command for trap call to display message
00001936  4E4F                     954          TRAP        #15                 ; trap call
00001938                           955          
00001938  43F9 00002A0C            956          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000193E  103C 000E                957          MOVE.B      #14, D0             ; command for trap call to display message
00001942  4E4F                     958          TRAP        #15                 ; trap call
00001944                           959          
00001944  43F9 00002976            960          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000194A  103C 000E                961          MOVE.B      #14, D0             ; command for trap call to display message
0000194E  4E4F                     962          TRAP        #15                 ; trap call
00001950                           963          
00001950  4242                     964          CLR         D2
00001952  4243                     965          CLR         D3
00001954  1401                     966          MOVE.B      D1,D2
00001956  1601                     967          MOVE.B      D1,D3
00001958                           968          
00001958  E602                     969          ASR.B       #three, D2
0000195A  C47C 0007                970          AND         #seven, D2
0000195E  C67C 0007                971          AND         #seven, D3        
00001962                           972          
00001962  4EB9 0000231E            973          JSR         printEA
00001968                           974          
00001968  43F9 00002972            975          LEA         newLine, A1           ; Display space
0000196E  103C 000E                976          MOVE.B      #14, D0             ; command for trap call to display message
00001972  4E4F                     977          TRAP        #15                 ; trap call
00001974                           978          
00001974  6000 F696                979          BRA         LOOP
00001978                           980  
00001978  43F9 000029F5            981  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
0000197E  103C 000E                982          MOVE.B      #14, D0             ; command for trap call to display message
00001982  4E4F                     983          TRAP        #15                 ; trap call
00001984                           984          
00001984  43F9 00002A0C            985          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000198A  103C 000E                986          MOVE.B      #14, D0             ; command for trap call to display message
0000198E  4E4F                     987          TRAP        #15                 ; trap call
00001990                           988          
00001990  43F9 00002976            989          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001996  103C 000E                990          MOVE.B      #14, D0             ; command for trap call to display message
0000199A  4E4F                     991          TRAP        #15                 ; trap call
0000199C                           992          
0000199C  4242                     993          CLR         D2
0000199E  4243                     994          CLR         D3
000019A0  1401                     995          MOVE.B      D1,D2
000019A2  1601                     996          MOVE.B      D1,D3
000019A4                           997          
000019A4  E602                     998          ASR.B       #three, D2
000019A6  C47C 0007                999          AND         #seven, D2
000019AA  C67C 0007               1000          AND         #seven, D3        
000019AE                          1001          
000019AE  4EB9 0000231E           1002          JSR         printEA
000019B4                          1003          
000019B4  43F9 00002972           1004          LEA         newLine, A1           ; Display space
000019BA  103C 000E               1005          MOVE.B      #14, D0             ; command for trap call to display message
000019BE  4E4F                    1006          TRAP        #15                 ; trap call
000019C0                          1007          
000019C0  6000 F64A               1008          BRA         LOOP
000019C4                          1009  
000019C4  43F9 000029F1           1010  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
000019CA  103C 000E               1011          MOVE.B      #14, D0             ; command for trap call to display message
000019CE  4E4F                    1012          TRAP        #15                 ; trap call
000019D0                          1013          
000019D0  43F9 00002A0C           1014          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000019D6  103C 000E               1015          MOVE.B      #14, D0             ; command for trap call to display message
000019DA  4E4F                    1016          TRAP        #15                 ; trap call
000019DC                          1017          
000019DC  43F9 00002976           1018          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
000019E2  103C 000E               1019          MOVE.B      #14, D0             ; command for trap call to display message
000019E6  4E4F                    1020          TRAP        #15                 ; trap call
000019E8                          1021          
000019E8  4242                    1022          CLR         D2
000019EA  4243                    1023          CLR         D3
000019EC  1401                    1024          MOVE.B      D1,D2
000019EE  1601                    1025          MOVE.B      D1,D3
000019F0                          1026          
000019F0  E602                    1027          ASR.B       #three, D2
000019F2  C47C 0007               1028          AND         #seven, D2
000019F6  C67C 0007               1029          AND         #seven, D3        
000019FA                          1030          
000019FA  4EB9 0000231E           1031          JSR         printEA
00001A00                          1032          
00001A00  43F9 00002972           1033          LEA         newLine, A1           ; Display space
00001A06  103C 000E               1034          MOVE.B      #14, D0             ; command for trap call to display message
00001A0A  4E4F                    1035          TRAP        #15                 ; trap call
00001A0C                          1036          
00001A0C  6000 F5FE               1037          BRA         LOOP
00001A10                          1038  
00001A10  43F9 00002A05           1039  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001A16  103C 000E               1040          MOVE.B      #14, D0             ; command for trap call to display message
00001A1A  4E4F                    1041          TRAP        #15                 ; trap call
00001A1C                          1042          
00001A1C  43F9 00002A0C           1043          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001A22  103C 000E               1044          MOVE.B      #14, D0             ; command for trap call to display message
00001A26  4E4F                    1045          TRAP        #15                 ; trap call
00001A28                          1046          
00001A28  43F9 00002976           1047          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001A2E  103C 000E               1048          MOVE.B      #14, D0             ; command for trap call to display message
00001A32  4E4F                    1049          TRAP        #15                 ; trap call
00001A34                          1050          
00001A34  4242                    1051          CLR         D2
00001A36  4243                    1052          CLR         D3
00001A38  1401                    1053          MOVE.B      D1,D2
00001A3A  1601                    1054          MOVE.B      D1,D3
00001A3C                          1055          
00001A3C  E602                    1056          ASR.B       #three, D2
00001A3E  C47C 0007               1057          AND         #seven, D2
00001A42  C67C 0007               1058          AND         #seven, D3        
00001A46                          1059          
00001A46  4EB9 0000231E           1060          JSR         printEA
00001A4C                          1061          
00001A4C  43F9 00002972           1062          LEA         newLine, A1           ; Display space
00001A52  103C 000E               1063          MOVE.B      #14, D0             ; command for trap call to display message
00001A56  4E4F                    1064          TRAP        #15                 ; trap call
00001A58                          1065          
00001A58  6000 F5B2               1066          BRA         LOOP
00001A5C                          1067  
00001A5C  43F9 00002A01           1068  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001A62  103C 000E               1069          MOVE.B      #14, D0             ; command for trap call to display message
00001A66  4E4F                    1070          TRAP        #15                 ; trap call
00001A68                          1071          
00001A68  43F9 00002A0C           1072          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001A6E  103C 000E               1073          MOVE.B      #14, D0             ; command for trap call to display message
00001A72  4E4F                    1074          TRAP        #15                 ; trap call
00001A74                          1075          
00001A74  43F9 00002976           1076          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001A7A  103C 000E               1077          MOVE.B      #14, D0             ; command for trap call to display message
00001A7E  4E4F                    1078          TRAP        #15                 ; trap call
00001A80                          1079          
00001A80  4242                    1080          CLR         D2
00001A82  4243                    1081          CLR         D3
00001A84  1401                    1082          MOVE.B      D1,D2
00001A86  1601                    1083          MOVE.B      D1,D3
00001A88                          1084          
00001A88  E602                    1085          ASR.B       #three, D2
00001A8A  C47C 0007               1086          AND         #seven, D2
00001A8E  C67C 0007               1087          AND         #seven, D3        
00001A92                          1088          
00001A92  4EB9 0000231E           1089          JSR         printEA
00001A98                          1090          
00001A98  43F9 00002972           1091          LEA         newLine, A1           ; Display space
00001A9E  103C 000E               1092          MOVE.B      #14, D0             ; command for trap call to display message
00001AA2  4E4F                    1093          TRAP        #15                 ; trap call
00001AA4                          1094          
00001AA4  6000 F566               1095          BRA         LOOP
00001AA8                          1096          
00001AA8  4242                    1097  memSB   CLR         D2
00001AAA  1401                    1098          MOVE.B      D1,D2
00001AAC  E642                    1099          ASR         #three, D2
00001AAE                          1100          
00001AAE  C47C 0007               1101          AND         #$07, D2
00001AB2                          1102          
00001AB2  B43C 0000               1103          CMP.B       #zero, D2
00001AB6  6700 002E               1104          BEQ         opASBI
00001ABA  B43C 0004               1105          CMP.B       #four, D2
00001ABE  6700 0088               1106          BEQ         opASBR
00001AC2  B43C 0001               1107          CMP.B       #one, D2
00001AC6  6700 00E2               1108          BEQ         opLSBI
00001ACA  B43C 0005               1109          CMP.B       #five, D2
00001ACE  6700 013C               1110          BEQ         opLSBR
00001AD2  B43C 0003               1111          CMP.B       #three, D2
00001AD6  6700 0196               1112          BEQ         opROBI
00001ADA  B43C 0007               1113          CMP.B       #seven, D2
00001ADE  6700 01F0               1114          BEQ         opROBR
00001AE2  6000 0E8A               1115          BRA         printInvalid
00001AE6                          1116          
00001AE6  4242                    1117  opASBI  CLR         D2
00001AE8  3401                    1118          MOVE.W      D1, D2
00001AEA  E042                    1119          ASR         #eight, D2
00001AEC  C47C 0001               1120          AND         #$01, D2
00001AF0                          1121      
00001AF0  B43C 0000               1122          CMP.B       #zero, D2
00001AF4  6700 000E               1123          BEQ         opASRBI
00001AF8  B43C 0001               1124          CMP.B       #one, D2
00001AFC  6700 0028               1125          BEQ         opASLBI
00001B00  6000 0E6C               1126          BRA         printInvalid
00001B04                          1127          
00001B04  43F9 000029F9           1128  opASRBI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001B0A  103C 000E               1129          MOVE.B      #14, D0             ; command for trap call to display message
00001B0E  4E4F                    1130          TRAP        #15                 ; trap call
00001B10                          1131  
00001B10  43F9 00002A09           1132          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001B16  103C 000E               1133          MOVE.B      #14, D0             ; command for trap call to display message
00001B1A  4E4F                    1134          TRAP        #15                 ; trap call
00001B1C                          1135          
00001B1C  4EB9 00002246           1136          JSR         PrntImm
00001B22                          1137          
00001B22  6000 F4E8               1138          BRA         LOOP
00001B26                          1139  
00001B26  43F9 000029FD           1140  opASLBI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001B2C  103C 000E               1141          MOVE.B      #14, D0             ; command for trap call to display message
00001B30  4E4F                    1142          TRAP        #15                 ; trap call
00001B32                          1143  
00001B32  43F9 00002A09           1144          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001B38  103C 000E               1145          MOVE.B      #14, D0             ; command for trap call to display message
00001B3C  4E4F                    1146          TRAP        #15                 ; trap call
00001B3E                          1147          
00001B3E  4EB9 00002246           1148          JSR         PrntImm
00001B44                          1149          
00001B44  6000 F4C6               1150          BRA         LOOP
00001B48                          1151  
00001B48  4242                    1152  opASBR  CLR         D2
00001B4A  3401                    1153          MOVE.W      D1, D2
00001B4C  E042                    1154          ASR         #eight, D2
00001B4E  C47C 0001               1155          AND         #$01, D2
00001B52                          1156      
00001B52  B43C 0000               1157          CMP.B       #zero, D2
00001B56  6700 000E               1158          BEQ         opASRBR
00001B5A  B43C 0001               1159          CMP.B       #one, D2
00001B5E  6700 0028               1160          BEQ         opASLBR
00001B62  6000 0E0A               1161          BRA         printInvalid 
00001B66                          1162          
00001B66  43F9 000029F9           1163  opASRBR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001B6C  103C 000E               1164          MOVE.B      #14, D0             ; command for trap call to display message
00001B70  4E4F                    1165          TRAP        #15                 ; trap call
00001B72                          1166  
00001B72  43F9 00002A09           1167          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001B78  103C 000E               1168          MOVE.B      #14, D0             ; command for trap call to display message
00001B7C  4E4F                    1169          TRAP        #15                 ; trap call
00001B7E                          1170          
00001B7E  4EB9 000022A2           1171          JSR         PrntReg
00001B84                          1172          
00001B84  6000 F486               1173          BRA         LOOP
00001B88                          1174  
00001B88  43F9 000029FD           1175  opASLBR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001B8E  103C 000E               1176          MOVE.B      #14, D0             ; command for trap call to display message
00001B92  4E4F                    1177          TRAP        #15                 ; trap call
00001B94                          1178  
00001B94  43F9 00002A09           1179          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001B9A  103C 000E               1180          MOVE.B      #14, D0             ; command for trap call to display message
00001B9E  4E4F                    1181          TRAP        #15                 ; trap call
00001BA0                          1182          
00001BA0  4EB9 000022A2           1183          JSR         PrntReg
00001BA6                          1184          
00001BA6  6000 F464               1185          BRA         LOOP
00001BAA                          1186  
00001BAA  4242                    1187  opLSBI  CLR         D2
00001BAC  3401                    1188          MOVE.W      D1, D2
00001BAE  E042                    1189          ASR         #eight, D2
00001BB0  C47C 0001               1190          AND         #$01, D2
00001BB4                          1191      
00001BB4  B43C 0000               1192          CMP.B       #zero, D2
00001BB8  6700 000E               1193          BEQ         opLSRBI
00001BBC  B43C 0001               1194          CMP.B       #one, D2
00001BC0  6700 0028               1195          BEQ         opLSLBI
00001BC4  6000 0DA8               1196          BRA         printInvalid 
00001BC8                          1197          
00001BC8  43F9 000029F1           1198  opLSRBI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001BCE  103C 000E               1199          MOVE.B      #14, D0             ; command for trap call to display message
00001BD2  4E4F                    1200          TRAP        #15                 ; trap call
00001BD4                          1201  
00001BD4  43F9 00002A09           1202          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001BDA  103C 000E               1203          MOVE.B      #14, D0             ; command for trap call to display message
00001BDE  4E4F                    1204          TRAP        #15                 ; trap call
00001BE0                          1205          
00001BE0  4EB9 00002246           1206          JSR         PrntImm
00001BE6                          1207          
00001BE6  6000 F424               1208          BRA         LOOP
00001BEA                          1209  
00001BEA                          1210  
00001BEA  43F9 000029F5           1211  opLSLBI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001BF0  103C 000E               1212          MOVE.B      #14, D0             ; command for trap call to display message
00001BF4  4E4F                    1213          TRAP        #15                 ; trap call
00001BF6                          1214  
00001BF6  43F9 00002A09           1215          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001BFC  103C 000E               1216          MOVE.B      #14, D0             ; command for trap call to display message
00001C00  4E4F                    1217          TRAP        #15                 ; trap call
00001C02                          1218          
00001C02  4EB9 00002246           1219          JSR         PrntImm
00001C08                          1220          
00001C08  6000 F402               1221          BRA         LOOP
00001C0C                          1222  
00001C0C                          1223  
00001C0C  4242                    1224  opLSBR  CLR         D2
00001C0E  3401                    1225          MOVE.W      D1, D2
00001C10  E042                    1226          ASR         #eight, D2
00001C12  C47C 0001               1227          AND         #$01, D2
00001C16                          1228      
00001C16  B43C 0000               1229          CMP.B       #zero, D2
00001C1A  6700 000E               1230          BEQ         opLSRBR
00001C1E  B43C 0001               1231          CMP.B       #one, D2
00001C22  6700 0028               1232          BEQ         opLSLBR
00001C26  6000 0D46               1233          BRA         printInvalid 
00001C2A                          1234          
00001C2A  43F9 000029F1           1235  opLSRBR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001C30  103C 000E               1236          MOVE.B      #14, D0             ; command for trap call to display message
00001C34  4E4F                    1237          TRAP        #15                 ; trap call
00001C36                          1238  
00001C36  43F9 00002A09           1239          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001C3C  103C 000E               1240          MOVE.B      #14, D0             ; command for trap call to display message
00001C40  4E4F                    1241          TRAP        #15                 ; trap call
00001C42                          1242          
00001C42  4EB9 000022A2           1243          JSR         PrntReg
00001C48                          1244          
00001C48  6000 F3C2               1245          BRA         LOOP
00001C4C                          1246          
00001C4C  43F9 000029F5           1247  opLSLBR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001C52  103C 000E               1248          MOVE.B      #14, D0             ; command for trap call to display message
00001C56  4E4F                    1249          TRAP        #15                 ; trap call
00001C58                          1250  
00001C58  43F9 00002A09           1251          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001C5E  103C 000E               1252          MOVE.B      #14, D0             ; command for trap call to display message
00001C62  4E4F                    1253          TRAP        #15                 ; trap call
00001C64                          1254          
00001C64  4EB9 000022A2           1255          JSR         PrntReg
00001C6A                          1256          
00001C6A  6000 F3A0               1257          BRA         LOOP
00001C6E                          1258  
00001C6E                          1259  
00001C6E                          1260  
00001C6E  4242                    1261  opROBI  CLR         D2
00001C70  3401                    1262          MOVE.W      D1, D2
00001C72  E042                    1263          ASR         #eight, D2
00001C74  C47C 0001               1264          AND         #$01, D2
00001C78                          1265      
00001C78  B43C 0000               1266          CMP.B       #zero, D2
00001C7C  6700 000E               1267          BEQ         opRORBI
00001C80  B43C 0001               1268          CMP.B       #one, D2
00001C84  6700 0028               1269          BEQ         opROLBI
00001C88  6000 0CE4               1270          BRA         printInvalid 
00001C8C                          1271          
00001C8C  43F9 00002A01           1272  opRORBI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001C92  103C 000E               1273          MOVE.B      #14, D0             ; command for trap call to display message
00001C96  4E4F                    1274          TRAP        #15                 ; trap call
00001C98                          1275  
00001C98  43F9 00002A09           1276          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001C9E  103C 000E               1277          MOVE.B      #14, D0             ; command for trap call to display message
00001CA2  4E4F                    1278          TRAP        #15                 ; trap call
00001CA4                          1279          
00001CA4  4EB9 00002246           1280          JSR         PrntImm
00001CAA                          1281          
00001CAA  6000 F360               1282          BRA         LOOP
00001CAE                          1283  
00001CAE  43F9 00002A05           1284  opROLBI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001CB4  103C 000E               1285          MOVE.B      #14, D0             ; command for trap call to display message
00001CB8  4E4F                    1286          TRAP        #15                 ; trap call
00001CBA                          1287  
00001CBA  43F9 00002A09           1288          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001CC0  103C 000E               1289          MOVE.B      #14, D0             ; command for trap call to display message
00001CC4  4E4F                    1290          TRAP        #15                 ; trap call
00001CC6                          1291          
00001CC6  4EB9 00002246           1292          JSR         PrntImm
00001CCC                          1293          
00001CCC  6000 F33E               1294          BRA         LOOP
00001CD0                          1295  
00001CD0  4242                    1296  opROBR  CLR         D2
00001CD2  3401                    1297          MOVE.W      D1, D2
00001CD4  E042                    1298          ASR         #eight, D2
00001CD6  C47C 0001               1299          AND         #$01, D2
00001CDA                          1300      
00001CDA  B43C 0000               1301          CMP.B       #zero, D2
00001CDE  6700 000E               1302          BEQ         opRORBR
00001CE2  B43C 0001               1303          CMP.B       #one, D2
00001CE6  6700 0028               1304          BEQ         opROLBR
00001CEA  6000 0C82               1305          BRA         printInvalid     
00001CEE                          1306          
00001CEE  43F9 00002A01           1307  opRORBR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001CF4  103C 000E               1308          MOVE.B      #14, D0             ; command for trap call to display message
00001CF8  4E4F                    1309          TRAP        #15                 ; trap call
00001CFA                          1310  
00001CFA  43F9 00002A09           1311          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001D00  103C 000E               1312          MOVE.B      #14, D0             ; command for trap call to display message
00001D04  4E4F                    1313          TRAP        #15                 ; trap call
00001D06                          1314          
00001D06  4EB9 000022A2           1315          JSR         PrntReg
00001D0C                          1316          
00001D0C  6000 F2FE               1317          BRA         LOOP
00001D10                          1318  
00001D10  43F9 00002A05           1319  opROLBR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001D16  103C 000E               1320          MOVE.B      #14, D0             ; command for trap call to display message
00001D1A  4E4F                    1321          TRAP        #15                 ; trap call
00001D1C                          1322  
00001D1C  43F9 00002A09           1323          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001D22  103C 000E               1324          MOVE.B      #14, D0             ; command for trap call to display message
00001D26  4E4F                    1325          TRAP        #15                 ; trap call
00001D28                          1326          
00001D28  4EB9 000022A2           1327          JSR         PrntReg
00001D2E                          1328          
00001D2E  6000 F2DC               1329          BRA         LOOP       
00001D32                          1330  
00001D32  4242                    1331  memSW   CLR         D2
00001D34  1401                    1332          MOVE.B      D1,D2
00001D36  E642                    1333          ASR         #three, D2
00001D38                          1334          
00001D38  C47C 0007               1335          AND         #$07, D2
00001D3C                          1336          
00001D3C  B43C 0000               1337          CMP.B       #zero, D2
00001D40  6700 002E               1338          BEQ         opASWI
00001D44  B43C 0004               1339          CMP.B       #four, D2
00001D48  6700 0088               1340          BEQ         opASWR
00001D4C  B43C 0001               1341          CMP.B       #one, D2
00001D50  6700 00E2               1342          BEQ         opLSWI
00001D54  B43C 0005               1343          CMP.B       #five, D2
00001D58  6700 013C               1344          BEQ         opLSWR
00001D5C  B43C 0003               1345          CMP.B       #three, D2
00001D60  6700 0196               1346          BEQ         opROWI
00001D64  B43C 0007               1347          CMP.B       #seven, D2
00001D68  6700 01F0               1348          BEQ         opROWR
00001D6C  6000 0C00               1349          BRA         printInvalid
00001D70                          1350          
00001D70  4242                    1351  opASWI  CLR         D2
00001D72  3401                    1352          MOVE.W      D1, D2
00001D74  E042                    1353          ASR         #eight, D2
00001D76  C47C 0001               1354          AND         #$01, D2
00001D7A                          1355      
00001D7A  B43C 0000               1356          CMP.B       #zero, D2
00001D7E  6700 000E               1357          BEQ         opASRWI
00001D82  B43C 0001               1358          CMP.B       #one, D2
00001D86  6700 0028               1359          BEQ         opASLWI
00001D8A  6000 0BE2               1360          BRA         printInvalid
00001D8E                          1361          
00001D8E  43F9 000029F9           1362  opASRWI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001D94  103C 000E               1363          MOVE.B      #14, D0             ; command for trap call to display message
00001D98  4E4F                    1364          TRAP        #15                 ; trap call
00001D9A                          1365  
00001D9A  43F9 00002A0C           1366          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001DA0  103C 000E               1367          MOVE.B      #14, D0             ; command for trap call to display message
00001DA4  4E4F                    1368          TRAP        #15                 ; trap call
00001DA6                          1369          
00001DA6  4EB9 00002246           1370          JSR         PrntImm
00001DAC                          1371          
00001DAC  6000 F25E               1372          BRA         LOOP
00001DB0                          1373  
00001DB0  43F9 000029FD           1374  opASLWI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001DB6  103C 000E               1375          MOVE.B      #14, D0             ; command for trap call to display message
00001DBA  4E4F                    1376          TRAP        #15                 ; trap call
00001DBC                          1377  
00001DBC  43F9 00002A0C           1378          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001DC2  103C 000E               1379          MOVE.B      #14, D0             ; command for trap call to display message
00001DC6  4E4F                    1380          TRAP        #15                 ; trap call
00001DC8                          1381          
00001DC8  4EB9 00002246           1382          JSR         PrntImm
00001DCE                          1383          
00001DCE  6000 F23C               1384          BRA         LOOP
00001DD2                          1385  
00001DD2  4242                    1386  opASWR  CLR         D2
00001DD4  3401                    1387          MOVE.W      D1, D2
00001DD6  E042                    1388          ASR         #eight, D2
00001DD8  C47C 0001               1389          AND         #$01, D2
00001DDC                          1390      
00001DDC  B43C 0000               1391          CMP.B       #zero, D2
00001DE0  6700 000E               1392          BEQ         opASRWR
00001DE4  B43C 0001               1393          CMP.B       #one, D2
00001DE8  6700 0028               1394          BEQ         opASLWR
00001DEC  6000 0B80               1395          BRA         printInvalid 
00001DF0                          1396          
00001DF0  43F9 000029F9           1397  opASRWR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001DF6  103C 000E               1398          MOVE.B      #14, D0             ; command for trap call to display message
00001DFA  4E4F                    1399          TRAP        #15                 ; trap call
00001DFC                          1400  
00001DFC  43F9 00002A0C           1401          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001E02  103C 000E               1402          MOVE.B      #14, D0             ; command for trap call to display message
00001E06  4E4F                    1403          TRAP        #15                 ; trap call
00001E08                          1404          
00001E08  4EB9 000022A2           1405          JSR         PrntReg
00001E0E                          1406          
00001E0E  6000 F1FC               1407          BRA         LOOP
00001E12                          1408  
00001E12  43F9 000029FD           1409  opASLWR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001E18  103C 000E               1410          MOVE.B      #14, D0             ; command for trap call to display message
00001E1C  4E4F                    1411          TRAP        #15                 ; trap call
00001E1E                          1412  
00001E1E  43F9 00002A0C           1413          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001E24  103C 000E               1414          MOVE.B      #14, D0             ; command for trap call to display message
00001E28  4E4F                    1415          TRAP        #15                 ; trap call
00001E2A                          1416          
00001E2A  4EB9 000022A2           1417          JSR         PrntReg
00001E30                          1418          
00001E30  6000 F1DA               1419          BRA         LOOP
00001E34                          1420  
00001E34  4242                    1421  opLSWI  CLR         D2
00001E36  3401                    1422          MOVE.W      D1, D2
00001E38  E042                    1423          ASR         #eight, D2
00001E3A  C47C 0001               1424          AND         #$01, D2
00001E3E                          1425      
00001E3E  B43C 0000               1426          CMP.B       #zero, D2
00001E42  6700 000E               1427          BEQ         opLSRWI
00001E46  B43C 0001               1428          CMP.B       #one, D2
00001E4A  6700 0028               1429          BEQ         opLSLWI
00001E4E  6000 0B1E               1430          BRA         printInvalid 
00001E52                          1431          
00001E52  43F9 000029F1           1432  opLSRWI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001E58  103C 000E               1433          MOVE.B      #14, D0             ; command for trap call to display message
00001E5C  4E4F                    1434          TRAP        #15                 ; trap call
00001E5E                          1435  
00001E5E  43F9 00002A0C           1436          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001E64  103C 000E               1437          MOVE.B      #14, D0             ; command for trap call to display message
00001E68  4E4F                    1438          TRAP        #15                 ; trap call
00001E6A                          1439          
00001E6A  4EB9 00002246           1440          JSR         PrntImm
00001E70                          1441          
00001E70  6000 F19A               1442          BRA         LOOP
00001E74                          1443  
00001E74                          1444  
00001E74  43F9 000029F5           1445  opLSLWI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001E7A  103C 000E               1446          MOVE.B      #14, D0             ; command for trap call to display message
00001E7E  4E4F                    1447          TRAP        #15                 ; trap call
00001E80                          1448  
00001E80  43F9 00002A0C           1449          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001E86  103C 000E               1450          MOVE.B      #14, D0             ; command for trap call to display message
00001E8A  4E4F                    1451          TRAP        #15                 ; trap call
00001E8C                          1452          
00001E8C  4EB9 00002246           1453          JSR         PrntImm
00001E92                          1454          
00001E92  6000 F178               1455          BRA         LOOP
00001E96                          1456  
00001E96                          1457  
00001E96  4242                    1458  opLSWR  CLR         D2
00001E98  3401                    1459          MOVE.W      D1, D2
00001E9A  E042                    1460          ASR         #eight, D2
00001E9C  C47C 0001               1461          AND         #$01, D2
00001EA0                          1462      
00001EA0  B43C 0000               1463          CMP.B       #zero, D2
00001EA4  6700 000E               1464          BEQ         opLSRWR
00001EA8  B43C 0001               1465          CMP.B       #one, D2
00001EAC  6700 0028               1466          BEQ         opLSLWR
00001EB0  6000 0ABC               1467          BRA         printInvalid 
00001EB4                          1468          
00001EB4  43F9 000029F1           1469  opLSRWR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001EBA  103C 000E               1470          MOVE.B      #14, D0             ; command for trap call to display message
00001EBE  4E4F                    1471          TRAP        #15                 ; trap call
00001EC0                          1472  
00001EC0  43F9 00002A0C           1473          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001EC6  103C 000E               1474          MOVE.B      #14, D0             ; command for trap call to display message
00001ECA  4E4F                    1475          TRAP        #15                 ; trap call
00001ECC                          1476          
00001ECC  4EB9 000022A2           1477          JSR         PrntReg
00001ED2                          1478          
00001ED2  6000 F138               1479          BRA         LOOP
00001ED6                          1480          
00001ED6  43F9 000029F5           1481  opLSLWR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001EDC  103C 000E               1482          MOVE.B      #14, D0             ; command for trap call to display message
00001EE0  4E4F                    1483          TRAP        #15                 ; trap call
00001EE2                          1484  
00001EE2  43F9 00002A0C           1485          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001EE8  103C 000E               1486          MOVE.B      #14, D0             ; command for trap call to display message
00001EEC  4E4F                    1487          TRAP        #15                 ; trap call
00001EEE                          1488          
00001EEE  4EB9 000022A2           1489          JSR         PrntReg
00001EF4                          1490          
00001EF4  6000 F116               1491          BRA         LOOP
00001EF8                          1492  
00001EF8                          1493  
00001EF8                          1494  
00001EF8  4242                    1495  opROWI  CLR         D2
00001EFA  3401                    1496          MOVE.W      D1, D2
00001EFC  E042                    1497          ASR         #eight, D2
00001EFE  C47C 0001               1498          AND         #$01, D2
00001F02                          1499      
00001F02  B43C 0000               1500          CMP.B       #zero, D2
00001F06  6700 000E               1501          BEQ         opRORWI
00001F0A  B43C 0001               1502          CMP.B       #one, D2
00001F0E  6700 0028               1503          BEQ         opROLWI
00001F12  6000 0A5A               1504          BRA         printInvalid 
00001F16                          1505          
00001F16  43F9 00002A01           1506  opRORWI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F1C  103C 000E               1507          MOVE.B      #14, D0             ; command for trap call to display message
00001F20  4E4F                    1508          TRAP        #15                 ; trap call
00001F22                          1509  
00001F22  43F9 00002A0C           1510          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F28  103C 000E               1511          MOVE.B      #14, D0             ; command for trap call to display message
00001F2C  4E4F                    1512          TRAP        #15                 ; trap call
00001F2E                          1513          
00001F2E  4EB9 00002246           1514          JSR         PrntImm
00001F34                          1515          
00001F34  6000 F0D6               1516          BRA         LOOP
00001F38                          1517  
00001F38  43F9 00002A05           1518  opROLWI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F3E  103C 000E               1519          MOVE.B      #14, D0             ; command for trap call to display message
00001F42  4E4F                    1520          TRAP        #15                 ; trap call
00001F44                          1521  
00001F44  43F9 00002A0C           1522          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F4A  103C 000E               1523          MOVE.B      #14, D0             ; command for trap call to display message
00001F4E  4E4F                    1524          TRAP        #15                 ; trap call
00001F50                          1525          
00001F50  4EB9 00002246           1526          JSR         PrntImm
00001F56                          1527          
00001F56  6000 F0B4               1528          BRA         LOOP
00001F5A                          1529  
00001F5A  4242                    1530  opROWR  CLR         D2
00001F5C  3401                    1531          MOVE.W      D1, D2
00001F5E  E042                    1532          ASR         #eight, D2
00001F60  C47C 0001               1533          AND         #$01, D2
00001F64                          1534      
00001F64  B43C 0000               1535          CMP.B       #zero, D2
00001F68  6700 000E               1536          BEQ         opRORWR
00001F6C  B43C 0001               1537          CMP.B       #one, D2
00001F70  6700 0028               1538          BEQ         opROLWR
00001F74  6000 09F8               1539          BRA         printInvalid     
00001F78                          1540          
00001F78  43F9 00002A01           1541  opRORWR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F7E  103C 000E               1542          MOVE.B      #14, D0             ; command for trap call to display message
00001F82  4E4F                    1543          TRAP        #15                 ; trap call
00001F84                          1544  
00001F84  43F9 00002A0C           1545          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F8A  103C 000E               1546          MOVE.B      #14, D0             ; command for trap call to display message
00001F8E  4E4F                    1547          TRAP        #15                 ; trap call
00001F90                          1548          
00001F90  4EB9 000022A2           1549          JSR         PrntReg
00001F96                          1550          
00001F96  6000 F074               1551          BRA         LOOP
00001F9A                          1552  
00001F9A  43F9 00002A05           1553  opROLWR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001FA0  103C 000E               1554          MOVE.B      #14, D0             ; command for trap call to display message
00001FA4  4E4F                    1555          TRAP        #15                 ; trap call
00001FA6                          1556  
00001FA6  43F9 00002A0C           1557          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001FAC  103C 000E               1558          MOVE.B      #14, D0             ; command for trap call to display message
00001FB0  4E4F                    1559          TRAP        #15                 ; trap call
00001FB2                          1560          
00001FB2  4EB9 000022A2           1561          JSR         PrntReg
00001FB8                          1562          
00001FB8  6000 F052               1563          BRA         LOOP
00001FBC                          1564  
00001FBC  4242                    1565  memSL   CLR         D2
00001FBE  1401                    1566          MOVE.B      D1,D2
00001FC0  E642                    1567          ASR         #three, D2
00001FC2                          1568          
00001FC2  C47C 0007               1569          AND         #$07, D2
00001FC6                          1570          
00001FC6  B43C 0000               1571          CMP.B       #zero, D2
00001FCA  6700 002E               1572          BEQ         opASLI
00001FCE  B43C 0004               1573          CMP.B       #four, D2
00001FD2  6700 0088               1574          BEQ         opASLR
00001FD6  B43C 0001               1575          CMP.B       #one, D2
00001FDA  6700 00E2               1576          BEQ         opLSLI
00001FDE  B43C 0005               1577          CMP.B       #five, D2
00001FE2  6700 013C               1578          BEQ         opLSLR
00001FE6  B43C 0003               1579          CMP.B       #three, D2
00001FEA  6700 0196               1580          BEQ         opROLI
00001FEE  B43C 0007               1581          CMP.B       #seven, D2
00001FF2  6700 01F0               1582          BEQ         opROLR
00001FF6  6000 0976               1583          BRA         printInvalid
00001FFA                          1584          
00001FFA  4242                    1585  opASLI  CLR         D2
00001FFC  3401                    1586          MOVE.W      D1, D2
00001FFE  E042                    1587          ASR         #eight, D2
00002000  C47C 0001               1588          AND         #$01, D2
00002004                          1589      
00002004  B43C 0000               1590          CMP.B       #zero, D2
00002008  6700 000E               1591          BEQ         opASRLI
0000200C  B43C 0001               1592          CMP.B       #one, D2
00002010  6700 0028               1593          BEQ         opASLLI
00002014  6000 0958               1594          BRA         printInvalid
00002018                          1595          
00002018  43F9 000029F9           1596  opASRLI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000201E  103C 000E               1597          MOVE.B      #14, D0             ; command for trap call to display message
00002022  4E4F                    1598          TRAP        #15                 ; trap call
00002024                          1599  
00002024  43F9 00002A0F           1600          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000202A  103C 000E               1601          MOVE.B      #14, D0             ; command for trap call to display message
0000202E  4E4F                    1602          TRAP        #15                 ; trap call
00002030                          1603          
00002030  4EB9 00002246           1604          JSR         PrntImm
00002036                          1605          
00002036  6000 EFD4               1606          BRA         LOOP
0000203A                          1607  
0000203A  43F9 000029FD           1608  opASLLI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002040  103C 000E               1609          MOVE.B      #14, D0             ; command for trap call to display message
00002044  4E4F                    1610          TRAP        #15                 ; trap call
00002046                          1611  
00002046  43F9 00002A0F           1612          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000204C  103C 000E               1613          MOVE.B      #14, D0             ; command for trap call to display message
00002050  4E4F                    1614          TRAP        #15                 ; trap call
00002052                          1615          
00002052  4EB9 00002246           1616          JSR         PrntImm
00002058                          1617          
00002058  6000 EFB2               1618          BRA         LOOP
0000205C                          1619  
0000205C  4242                    1620  opASLR  CLR         D2
0000205E  3401                    1621          MOVE.W      D1, D2
00002060  E042                    1622          ASR         #eight, D2
00002062  C47C 0001               1623          AND         #$01, D2
00002066                          1624      
00002066  B43C 0000               1625          CMP.B       #zero, D2
0000206A  6700 000E               1626          BEQ         opASRLR
0000206E  B43C 0001               1627          CMP.B       #one, D2
00002072  6700 0028               1628          BEQ         opASLLR
00002076  6000 08F6               1629          BRA         printInvalid 
0000207A                          1630          
0000207A  43F9 000029F9           1631  opASRLR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002080  103C 000E               1632          MOVE.B      #14, D0             ; command for trap call to display message
00002084  4E4F                    1633          TRAP        #15                 ; trap call
00002086                          1634  
00002086  43F9 00002A0F           1635          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000208C  103C 000E               1636          MOVE.B      #14, D0             ; command for trap call to display message
00002090  4E4F                    1637          TRAP        #15                 ; trap call
00002092                          1638          
00002092  4EB9 000022A2           1639          JSR         PrntReg
00002098                          1640          
00002098  6000 EF72               1641          BRA         LOOP
0000209C                          1642  
0000209C  43F9 000029FD           1643  opASLLR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000020A2  103C 000E               1644          MOVE.B      #14, D0             ; command for trap call to display message
000020A6  4E4F                    1645          TRAP        #15                 ; trap call
000020A8                          1646  
000020A8  43F9 00002A0F           1647          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
000020AE  103C 000E               1648          MOVE.B      #14, D0             ; command for trap call to display message
000020B2  4E4F                    1649          TRAP        #15                 ; trap call
000020B4                          1650          
000020B4  4EB9 000022A2           1651          JSR         PrntReg
000020BA                          1652          
000020BA  6000 EF50               1653          BRA         LOOP
000020BE                          1654  
000020BE  4242                    1655  opLSLI  CLR         D2
000020C0  3401                    1656          MOVE.W      D1, D2
000020C2  E042                    1657          ASR         #eight, D2
000020C4  C47C 0001               1658          AND         #$01, D2
000020C8                          1659      
000020C8  B43C 0000               1660          CMP.B       #zero, D2
000020CC  6700 000E               1661          BEQ         opLSRLI
000020D0  B43C 0001               1662          CMP.B       #one, D2
000020D4  6700 0028               1663          BEQ         opLSLLI
000020D8  6000 0894               1664          BRA         printInvalid 
000020DC                          1665          
000020DC  43F9 000029F1           1666  opLSRLI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000020E2  103C 000E               1667          MOVE.B      #14, D0             ; command for trap call to display message
000020E6  4E4F                    1668          TRAP        #15                 ; trap call
000020E8                          1669  
000020E8  43F9 00002A0F           1670          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
000020EE  103C 000E               1671          MOVE.B      #14, D0             ; command for trap call to display message
000020F2  4E4F                    1672          TRAP        #15                 ; trap call
000020F4                          1673          
000020F4  4EB9 00002246           1674          JSR         PrntImm
000020FA                          1675          
000020FA  6000 EF10               1676          BRA         LOOP
000020FE                          1677  
000020FE                          1678  
000020FE  43F9 000029F5           1679  opLSLLI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002104  103C 000E               1680          MOVE.B      #14, D0             ; command for trap call to display message
00002108  4E4F                    1681          TRAP        #15                 ; trap call
0000210A                          1682  
0000210A  43F9 00002A0F           1683          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002110  103C 000E               1684          MOVE.B      #14, D0             ; command for trap call to display message
00002114  4E4F                    1685          TRAP        #15                 ; trap call
00002116                          1686          
00002116  4EB9 00002246           1687          JSR         PrntImm
0000211C                          1688          
0000211C  6000 EEEE               1689          BRA         LOOP
00002120                          1690  
00002120                          1691  
00002120  4242                    1692  opLSLR  CLR         D2
00002122  3401                    1693          MOVE.W      D1, D2
00002124  E042                    1694          ASR         #eight, D2
00002126  C47C 0001               1695          AND         #$01, D2
0000212A                          1696      
0000212A  B43C 0000               1697          CMP.B       #zero, D2
0000212E  6700 000E               1698          BEQ         opLSRLR
00002132  B43C 0001               1699          CMP.B       #one, D2
00002136  6700 0028               1700          BEQ         opLSLLR
0000213A  6000 0832               1701          BRA         printInvalid 
0000213E                          1702          
0000213E  43F9 000029F1           1703  opLSRLR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002144  103C 000E               1704          MOVE.B      #14, D0             ; command for trap call to display message
00002148  4E4F                    1705          TRAP        #15                 ; trap call
0000214A                          1706  
0000214A  43F9 00002A0F           1707          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002150  103C 000E               1708          MOVE.B      #14, D0             ; command for trap call to display message
00002154  4E4F                    1709          TRAP        #15                 ; trap call
00002156                          1710          
00002156  4EB9 000022A2           1711          JSR         PrntReg
0000215C                          1712          
0000215C  6000 EEAE               1713          BRA         LOOP
00002160                          1714          
00002160  43F9 000029F5           1715  opLSLLR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002166  103C 000E               1716          MOVE.B      #14, D0             ; command for trap call to display message
0000216A  4E4F                    1717          TRAP        #15                 ; trap call
0000216C                          1718  
0000216C  43F9 00002A0F           1719          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002172  103C 000E               1720          MOVE.B      #14, D0             ; command for trap call to display message
00002176  4E4F                    1721          TRAP        #15                 ; trap call
00002178                          1722          
00002178  4EB9 000022A2           1723          JSR         PrntReg
0000217E                          1724          
0000217E  6000 EE8C               1725          BRA         LOOP
00002182                          1726  
00002182                          1727  
00002182                          1728  
00002182  4242                    1729  opROLI  CLR         D2
00002184  3401                    1730          MOVE.W      D1, D2
00002186  E042                    1731          ASR         #eight, D2
00002188  C47C 0001               1732          AND         #$01, D2
0000218C                          1733      
0000218C  B43C 0000               1734          CMP.B       #zero, D2
00002190  6700 000E               1735          BEQ         opRORLI
00002194  B43C 0001               1736          CMP.B       #one, D2
00002198  6700 0028               1737          BEQ         opROLLI
0000219C  6000 07D0               1738          BRA         printInvalid 
000021A0                          1739          
000021A0  43F9 00002A01           1740  opRORLI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000021A6  103C 000E               1741          MOVE.B      #14, D0             ; command for trap call to display message
000021AA  4E4F                    1742          TRAP        #15                 ; trap call
000021AC                          1743  
000021AC  43F9 00002A0F           1744          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
000021B2  103C 000E               1745          MOVE.B      #14, D0             ; command for trap call to display message
000021B6  4E4F                    1746          TRAP        #15                 ; trap call
000021B8                          1747          
000021B8  4EB9 00002246           1748          JSR         PrntImm
000021BE                          1749          
000021BE  6000 EE4C               1750          BRA         LOOP
000021C2                          1751  
000021C2  43F9 00002A05           1752  opROLLI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000021C8  103C 000E               1753          MOVE.B      #14, D0             ; command for trap call to display message
000021CC  4E4F                    1754          TRAP        #15                 ; trap call
000021CE                          1755  
000021CE  43F9 00002A0F           1756          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
000021D4  103C 000E               1757          MOVE.B      #14, D0             ; command for trap call to display message
000021D8  4E4F                    1758          TRAP        #15                 ; trap call
000021DA                          1759          
000021DA  4EB9 00002246           1760          JSR         PrntImm
000021E0                          1761          
000021E0  6000 EE2A               1762          BRA         LOOP
000021E4                          1763  
000021E4  4242                    1764  opROLR  CLR         D2
000021E6  3401                    1765          MOVE.W      D1, D2
000021E8  E042                    1766          ASR         #eight, D2
000021EA  C47C 0001               1767          AND         #$01, D2
000021EE                          1768      
000021EE  B43C 0000               1769          CMP.B       #zero, D2
000021F2  6700 000E               1770          BEQ         opRORLR
000021F6  B43C 0001               1771          CMP.B       #one, D2
000021FA  6700 0028               1772          BEQ         opROLLR
000021FE  6000 076E               1773          BRA         printInvalid     
00002202                          1774          
00002202  43F9 00002A01           1775  opRORLR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002208  103C 000E               1776          MOVE.B      #14, D0             ; command for trap call to display message
0000220C  4E4F                    1777          TRAP        #15                 ; trap call
0000220E                          1778  
0000220E  43F9 00002A0F           1779          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002214  103C 000E               1780          MOVE.B      #14, D0             ; command for trap call to display message
00002218  4E4F                    1781          TRAP        #15                 ; trap call
0000221A                          1782          
0000221A  4EB9 000022A2           1783          JSR         PrntReg
00002220                          1784          
00002220  6000 EDEA               1785          BRA         LOOP
00002224                          1786  
00002224  43F9 00002A05           1787  opROLLR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000222A  103C 000E               1788          MOVE.B      #14, D0             ; command for trap call to display message
0000222E  4E4F                    1789          TRAP        #15                 ; trap call
00002230                          1790  
00002230  43F9 00002A0F           1791          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002236  103C 000E               1792          MOVE.B      #14, D0             ; command for trap call to display message
0000223A  4E4F                    1793          TRAP        #15                 ; trap call
0000223C                          1794          
0000223C  4EB9 000022A2           1795          JSR         PrntReg
00002242                          1796          
00002242  6000 EDC8               1797          BRA         LOOP
00002246                          1798          
00002246  48E7 FF7E               1799  PrntImm MOVEM.L D0-D7/A1-A6, -(SP)
0000224A                          1800          
0000224A  43F9 00002976           1801          LEA         space, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002250  103C 000E               1802          MOVE.B      #14, D0             ; command for trap call to display message
00002254  4E4F                    1803          TRAP        #15                 ; trap call
00002256                          1804          
00002256  43F9 00002979           1805          LEA         hashTag, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000225C  103C 000E               1806          MOVE.B      #14, D0             ; command for trap call to display message
00002260  4E4F                    1807          TRAP        #15                 ; trap call
00002262                          1808          
00002262  4242                    1809          CLR         D2
00002264  3401                    1810          MOVE.W      D1, D2
00002266  E042                    1811          ASR         #eight, D2
00002268  E242                    1812          ASR         #one, D2
0000226A  C47C 0007               1813          AND         #$07, D2
0000226E                          1814          
0000226E  4EB9 000022F4           1815          JSR         MemShiftImm
00002274                          1816          
00002274  43F9 0000297D           1817          LEA         comma, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000227A  103C 000E               1818          MOVE.B      #14, D0             ; command for trap call to display message
0000227E  4E4F                    1819          TRAP        #15                 ; trap call
00002280                          1820          
00002280  4242                    1821          CLR         D2
00002282  4243                    1822          CLR         D3
00002284  1601                    1823          MOVE.B      D1,D3
00002286  C67C 0007               1824          AND         #$07, D3
0000228A                          1825          
0000228A  4EB9 0000231E           1826          JSR         printEA
00002290                          1827          
00002290  43F9 00002972           1828          LEA         newLine, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002296  103C 000E               1829          MOVE.B      #14, D0             ; command for trap call to display message
0000229A  4E4F                    1830          TRAP        #15                 ; trap call
0000229C                          1831          
0000229C  4CDF 7EFF               1832          MOVEM.L  (SP)+, D0-D7/A1-A6
000022A0  4E75                    1833          RTS
000022A2                          1834          
000022A2  48E7 FF7E               1835  PrntReg MOVEM.L D0-D7/A1-A6, -(SP)
000022A6                          1836          
000022A6  43F9 00002976           1837          LEA         space, A1           ; display space
000022AC  103C 000E               1838          MOVE.B      #14, D0             ; command for trap call to display message
000022B0  4E4F                    1839          TRAP        #15                 ; trap call
000022B2                          1840          
000022B2  4242                    1841          CLR         D2
000022B4  4243                    1842          CLR         D3
000022B6  3601                    1843          MOVE.W      D1, D3
000022B8  E043                    1844          ASR         #eight, D3
000022BA  E243                    1845          ASR         #one, D3
000022BC  C67C 0007               1846          AND         #$07, D3
000022C0                          1847          
000022C0  4EB9 0000231E           1848          JSR         printEA
000022C6                          1849          
000022C6  43F9 0000297D           1850          LEA         comma, A1           ; display comma
000022CC  103C 000E               1851          MOVE.B      #14, D0             ; command for trap call to display message
000022D0  4E4F                    1852          TRAP        #15                 ; trap call
000022D2                          1853          
000022D2  4242                    1854          CLR         D2
000022D4  4243                    1855          CLR         D3
000022D6  1601                    1856          MOVE.B      D1,D3
000022D8  C67C 0007               1857          AND         #$07, D3
000022DC                          1858          
000022DC  4EB9 0000231E           1859          JSR         printEA
000022E2                          1860          
000022E2  43F9 00002972           1861          LEA         newLine, A1         ; newline
000022E8  103C 000E               1862          MOVE.B      #14, D0             ; command for trap call to display message
000022EC  4E4F                    1863          TRAP        #15                 ; trap call
000022EE                          1864          
000022EE  4CDF 7EFF               1865          MOVEM.L  (SP)+, D0-D7/A1-A6
000022F2  4E75                    1866          RTS
000022F4                          1867  * The following subroutine is used to display the number between 1-8 for the bit vount for the shift/rotate opcode
000022F4                          1868  * It displays it by storing the appropriate number in D1 and running trap task 3.        
000022F4  48E7 FF7E               1869  MemShiftImm     MOVEM.L D0-D7/A1-A6, -(SP)      ;caller saved data
000022F8  4241                    1870                  CLR     D1
000022FA                          1871                  
000022FA  1202                    1872                  MOVE.B  D2, D1
000022FC  B23C 0000               1873                  CMP.B   #zero, D1
00002300  6700 000C               1874                  BEQ     displayEight
00002304                          1875                  
00002304  103C 0003               1876                  MOVE.B  #3, D0
00002308  4E4F                    1877                  TRAP    #15
0000230A  6000 000C               1878                  BRA     endSubroutine
0000230E                          1879                  
0000230E  123C 0008               1880  displayEight    MOVE.B  #$08, D1
00002312  103C 0003               1881                  MOVE.B  #3, D0
00002316  4E4F                    1882                  TRAP    #15                
00002318                          1883  endSubroutine
00002318  4CDF 7EFF               1884                  MOVEM.L  (SP)+, D0-D7/A1-A6     ; recall data
0000231C  4E75                    1885                  RTS                             ; Return to main routine
0000231E                          1886          
0000231E                          1887  
0000231E                          1888  ***********************************************************************************************************
0000231E                          1889  *
0000231E                          1890  *                                           EA Print Check
0000231E                          1891  *
0000231E                          1892  ***********************************************************************************************************
0000231E  48E7 FF7E               1893  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00002322                          1894  
00002322  B43C 0000               1895              CMP.B       #zero, D2
00002326  6700 002E               1896              BEQ         pDataReg
0000232A  B43C 0001               1897              CMP.B       #one, D2
0000232E  6700 00E6               1898              BEQ         pAddrReg
00002332  B43C 0002               1899              CMP.B       #two, D2
00002336  6700 019E               1900              BEQ         pAddrDir
0000233A  B43C 0003               1901              CMP.B       #three, D2
0000233E  6700 02C2               1902              BEQ         pAddrPost
00002342  B43C 0004               1903              CMP.B       #four, D2
00002346  6700 0446               1904              BEQ         pAddrDec
0000234A  B43C 0007               1905              CMP.B       #seven, D2
0000234E  6700 0576               1906              BEQ         pHex
00002352  6000 0614               1907              BRA         invalid
00002356                          1908  
00002356                          1909  ***********************************************************************************************************
00002356                          1910  * Data Register        
00002356  B63C 0000               1911  pDataReg    CMP.B   #zero,D3
0000235A  6700 003A               1912              BEQ     displayD0
0000235E  B63C 0001               1913              CMP.B   #one,D3
00002362  6700 0042               1914              BEQ     displayD1
00002366  B63C 0002               1915              CMP.B   #two,D3
0000236A  6700 004A               1916              BEQ     displayD2
0000236E  B63C 0003               1917              CMP.B   #three,D3
00002372  6700 0052               1918              BEQ     displayD3
00002376  B63C 0004               1919              CMP.B   #four,D3
0000237A  6700 005A               1920              BEQ     displayD4
0000237E  B63C 0005               1921              CMP.B   #five,D3
00002382  6700 0062               1922              BEQ     displayD5
00002386  B63C 0006               1923              CMP.B   #six,D3
0000238A  6700 006A               1924              BEQ     displayD6
0000238E  B63C 0007               1925              CMP.B   #seven,D3
00002392  6700 0072               1926              BEQ     displayD7
00002396                          1927              
00002396  43F9 00002A2C           1928  displayD0   LEA         dispD0, A1          ; Display space
0000239C  103C 000E               1929              MOVE.B      #14, D0             ; command for trap call to display message
000023A0  4E4F                    1930              TRAP        #15                 ; trap call
000023A2  6000 05C4               1931              BRA         endSUB              ; go to the end of the subroutine
000023A6                          1932              
000023A6  43F9 00002A2F           1933  displayD1   LEA         dispD1, A1          ; Display space
000023AC  103C 000E               1934              MOVE.B      #14, D0             ; command for trap call to display message
000023B0  4E4F                    1935              TRAP        #15                 ; trap call
000023B2  6000 05B4               1936              BRA         endSUB              ; go to the end of the subroutine
000023B6                          1937  
000023B6  43F9 00002A32           1938  displayD2   LEA         dispD2, A1          ; Display space
000023BC  103C 000E               1939              MOVE.B      #14, D0             ; command for trap call to display message
000023C0  4E4F                    1940              TRAP        #15                 ; trap call
000023C2  6000 05A4               1941              BRA         endSUB              ; go to the end of the subroutine
000023C6                          1942  
000023C6  43F9 00002A35           1943  displayD3   LEA         dispD3, A1          ; Display space
000023CC  103C 000E               1944              MOVE.B      #14, D0             ; command for trap call to display message
000023D0  4E4F                    1945              TRAP        #15                 ; trap call
000023D2  6000 0594               1946              BRA         endSUB              ; go to the end of the subroutine
000023D6                          1947  
000023D6  43F9 00002A38           1948  displayD4   LEA         dispD4, A1          ; Display space
000023DC  103C 000E               1949              MOVE.B      #14, D0             ; command for trap call to display message
000023E0  4E4F                    1950              TRAP        #15                 ; trap call
000023E2  6000 0584               1951              BRA         endSUB              ; go to the end of the subroutine
000023E6                          1952  
000023E6  43F9 00002A3B           1953  displayD5   LEA         dispD5, A1          ; Display space
000023EC  103C 000E               1954              MOVE.B      #14, D0             ; command for trap call to display message
000023F0  4E4F                    1955              TRAP        #15                 ; trap call
000023F2  6000 0574               1956              BRA         endSUB              ; go to the end of the subroutine
000023F6                          1957  
000023F6  43F9 00002A3E           1958  displayD6   LEA         dispD6, A1          ; Display space
000023FC  103C 000E               1959              MOVE.B      #14, D0             ; command for trap call to display message
00002400  4E4F                    1960              TRAP        #15                 ; trap call
00002402  6000 0564               1961              BRA         endSUB              ; go to the end of the subroutine
00002406                          1962  
00002406  43F9 00002A41           1963  displayD7   LEA         dispD7, A1          ; Display space
0000240C  103C 000E               1964              MOVE.B      #14, D0             ; command for trap call to display message
00002410  4E4F                    1965              TRAP        #15                 ; trap call
00002412  6000 0554               1966              BRA         endSUB              ; go to the end of the subroutine
00002416                          1967  ***********************************************************************************************************
00002416                          1968  * Address Register
00002416  B63C 0000               1969  pAddrReg    CMP.B   #zero,D3
0000241A  6700 003A               1970              BEQ     displayA0
0000241E  B63C 0001               1971              CMP.B   #one,D3
00002422  6700 0042               1972              BEQ     displayA1
00002426  B63C 0002               1973              CMP.B   #two,D3
0000242A  6700 004A               1974              BEQ     displayA2
0000242E  B63C 0003               1975              CMP.B   #three,D3
00002432  6700 0052               1976              BEQ     displayA3
00002436  B63C 0004               1977              CMP.B   #four,D3
0000243A  6700 005A               1978              BEQ     displayA4
0000243E  B63C 0005               1979              CMP.B   #five,D3
00002442  6700 0062               1980              BEQ     displayA5
00002446  B63C 0006               1981              CMP.B   #six,D3
0000244A  6700 006A               1982              BEQ     displayA6
0000244E  B63C 0007               1983              CMP.B   #seven,D3
00002452  6700 0072               1984              BEQ     displayA7
00002456                          1985              
00002456  43F9 00002A12           1986  displayA0   LEA         dispA0, A1          ; Display space
0000245C  103C 000E               1987              MOVE.B      #14, D0             ; command for trap call to display message
00002460  4E4F                    1988              TRAP        #15                 ; trap call
00002462  6000 0504               1989              BRA         endSUB              ; go to the end of the subroutine
00002466                          1990              
00002466  43F9 00002A15           1991  displayA1   LEA         dispA1, A1          ; Display space
0000246C  103C 000E               1992              MOVE.B      #14, D0             ; command for trap call to display message
00002470  4E4F                    1993              TRAP        #15                 ; trap call
00002472  6000 04F4               1994              BRA         endSUB              ; go to the end of the subroutine
00002476                          1995  
00002476  43F9 00002A18           1996  displayA2   LEA         dispA2, A1          ; Display space
0000247C  103C 000E               1997              MOVE.B      #14, D0             ; command for trap call to display message
00002480  4E4F                    1998              TRAP        #15                 ; trap call
00002482  6000 04E4               1999              BRA         endSUB              ; go to the end of the subroutine
00002486                          2000  
00002486  43F9 00002A1B           2001  displayA3   LEA         dispA3, A1          ; Display space
0000248C  103C 000E               2002              MOVE.B      #14, D0             ; command for trap call to display message
00002490  4E4F                    2003              TRAP        #15                 ; trap call
00002492  6000 04D4               2004              BRA         endSUB              ; go to the end of the subroutine
00002496                          2005  
00002496  43F9 00002A1E           2006  displayA4   LEA         dispA4, A1          ; Display space
0000249C  103C 000E               2007              MOVE.B      #14, D0             ; command for trap call to display message
000024A0  4E4F                    2008              TRAP        #15                 ; trap call
000024A2  6000 04C4               2009              BRA         endSUB              ; go to the end of the subroutine
000024A6                          2010  
000024A6  43F9 00002A21           2011  displayA5   LEA         dispA5, A1          ; Display space
000024AC  103C 000E               2012              MOVE.B      #14, D0             ; command for trap call to display message
000024B0  4E4F                    2013              TRAP        #15                 ; trap call
000024B2  6000 04B4               2014              BRA         endSUB              ; go to the end of the subroutine
000024B6                          2015  
000024B6  43F9 00002A24           2016  displayA6   LEA         dispA6, A1          ; Display space
000024BC  103C 000E               2017              MOVE.B      #14, D0             ; command for trap call to display message
000024C0  4E4F                    2018              TRAP        #15                 ; trap call
000024C2  6000 04A4               2019              BRA         endSUB              ; go to the end of the subroutine
000024C6                          2020  
000024C6  43F9 00002A27           2021  displayA7   LEA         dispA7, A1          ; Display space
000024CC  103C 000E               2022              MOVE.B      #14, D0             ; command for trap call to display message
000024D0  4E4F                    2023              TRAP        #15                 ; trap call
000024D2  6000 0494               2024              BRA         endSUB              ; go to the end of the subroutine
000024D6                          2025  
000024D6                          2026  ***********************************************************************************************************
000024D6                          2027  * Address Register Direct
000024D6                          2028  
000024D6  43F9 0000297F           2029  pAddrDir    LEA         opPer, A1           ; Display space
000024DC  103C 000E               2030              MOVE.B      #14, D0             ; command for trap call to display message
000024E0  4E4F                    2031              TRAP        #15                 ; trap call
000024E2                          2032              
000024E2  B63C 0000               2033              CMP.B   #zero,D3
000024E6  6700 003A               2034              BEQ     displayA0A
000024EA  B63C 0001               2035              CMP.B   #one,D3
000024EE  6700 004E               2036              BEQ     displayA1A
000024F2  B63C 0002               2037              CMP.B   #two,D3
000024F6  6700 0062               2038              BEQ     displayA2A
000024FA  B63C 0003               2039              CMP.B   #three,D3
000024FE  6700 0076               2040              BEQ     displayA3A
00002502  B63C 0004               2041              CMP.B   #four,D3
00002506  6700 008A               2042              BEQ     displayA4A
0000250A  B63C 0005               2043              CMP.B   #five,D3
0000250E  6700 009E               2044              BEQ     displayA5A
00002512  B63C 0006               2045              CMP.B   #six,D3
00002516  6700 00B2               2046              BEQ     displayA6A
0000251A  B63C 0007               2047              CMP.B   #seven,D3
0000251E  6700 00C6               2048              BEQ     displayA7A
00002522                          2049              
00002522  43F9 00002A12           2050  displayA0A  LEA         dispA0, A1          ; Display space
00002528  103C 000E               2051              MOVE.B      #14, D0             ; command for trap call to display message
0000252C  4E4F                    2052              TRAP        #15                 ; trap call
0000252E  43F9 00002981           2053              LEA         clPer, A1           ; Display space
00002534  103C 000E               2054              MOVE.B      #14, D0             ; command for trap call to display message
00002538  4E4F                    2055              TRAP        #15                 ; trap call
0000253A  6000 042C               2056              BRA         endSUB              ; go to the end of the subroutine
0000253E                          2057              
0000253E  43F9 00002A15           2058  displayA1A  LEA         dispA1, A1          ; Display space
00002544  103C 000E               2059              MOVE.B      #14, D0             ; command for trap call to display message
00002548  4E4F                    2060              TRAP        #15                 ; trap call
0000254A  43F9 00002981           2061              LEA         clPer, A1           ; Display space
00002550  103C 000E               2062              MOVE.B      #14, D0             ; command for trap call to display message
00002554  4E4F                    2063              TRAP        #15                 ; trap call
00002556  6000 0410               2064              BRA         endSUB              ; go to the end of the subroutine
0000255A                          2065  
0000255A  43F9 00002A18           2066  displayA2A  LEA         dispA2, A1          ; Display space
00002560  103C 000E               2067              MOVE.B      #14, D0             ; command for trap call to display message
00002564  4E4F                    2068              TRAP        #15                 ; trap call
00002566  43F9 00002981           2069              LEA         clPer, A1           ; Display space
0000256C  103C 000E               2070              MOVE.B      #14, D0             ; command for trap call to display message
00002570  4E4F                    2071              TRAP        #15                 ; trap call
00002572  6000 03F4               2072              BRA         endSUB              ; go to the end of the subroutine
00002576                          2073  
00002576  43F9 00002A1B           2074  displayA3A  LEA         dispA3, A1          ; Display space
0000257C  103C 000E               2075              MOVE.B      #14, D0             ; command for trap call to display message
00002580  4E4F                    2076              TRAP        #15                 ; trap call
00002582  43F9 00002981           2077              LEA         clPer, A1           ; Display space
00002588  103C 000E               2078              MOVE.B      #14, D0             ; command for trap call to display message
0000258C  4E4F                    2079              TRAP        #15                 ; trap call
0000258E  6000 03D8               2080              BRA         endSUB              ; go to the end of the subroutine
00002592                          2081  
00002592  43F9 00002A1E           2082  displayA4A  LEA         dispA4, A1          ; Display space
00002598  103C 000E               2083              MOVE.B      #14, D0             ; command for trap call to display message
0000259C  4E4F                    2084              TRAP        #15                 ; trap call
0000259E  43F9 00002981           2085              LEA         clPer, A1           ; Display space
000025A4  103C 000E               2086              MOVE.B      #14, D0             ; command for trap call to display message
000025A8  4E4F                    2087              TRAP        #15                 ; trap call
000025AA  6000 03BC               2088              BRA         endSUB              ; go to the end of the subroutine
000025AE                          2089  
000025AE  43F9 00002A21           2090  displayA5A  LEA         dispA5, A1          ; Display space
000025B4  103C 000E               2091              MOVE.B      #14, D0             ; command for trap call to display message
000025B8  4E4F                    2092              TRAP        #15                 ; trap call
000025BA  43F9 00002981           2093              LEA         clPer, A1           ; Display space
000025C0  103C 000E               2094              MOVE.B      #14, D0             ; command for trap call to display message
000025C4  4E4F                    2095              TRAP        #15                 ; trap call
000025C6  6000 03A0               2096              BRA         endSUB              ; go to the end of the subroutine
000025CA                          2097  
000025CA  43F9 00002A24           2098  displayA6A  LEA         dispA6, A1          ; Display space
000025D0  103C 000E               2099              MOVE.B      #14, D0             ; command for trap call to display message
000025D4  4E4F                    2100              TRAP        #15                 ; trap call
000025D6  43F9 00002981           2101              LEA         clPer, A1           ; Display space
000025DC  103C 000E               2102              MOVE.B      #14, D0             ; command for trap call to display message
000025E0  4E4F                    2103              TRAP        #15                 ; trap call
000025E2  6000 0384               2104              BRA         endSUB              ; go to the end of the subroutine
000025E6                          2105  
000025E6  43F9 00002A27           2106  displayA7A  LEA         dispA7, A1          ; Display space
000025EC  103C 000E               2107              MOVE.B      #14, D0             ; command for trap call to display message
000025F0  4E4F                    2108              TRAP        #15                 ; trap call
000025F2  43F9 00002981           2109              LEA         clPer, A1           ; Display space
000025F8  103C 000E               2110              MOVE.B      #14, D0             ; command for trap call to display message
000025FC  4E4F                    2111              TRAP        #15                 ; trap call
000025FE  6000 0368               2112              BRA         endSUB              ; go to the end of the subroutine
00002602                          2113              
00002602                          2114  ***********************************************************************************************************
00002602                          2115  * Addr Postincrement
00002602                          2116              
00002602  43F9 0000297F           2117  pAddrPost   LEA         opPer, A1           ; Display space
00002608  103C 000E               2118              MOVE.B      #14, D0             ; command for trap call to display message
0000260C  4E4F                    2119              TRAP        #15                 ; trap call
0000260E                          2120              
0000260E  B63C 0000               2121              CMP.B   #zero,D3
00002612  6700 003A               2122              BEQ     displayA0P
00002616  B63C 0001               2123              CMP.B   #one,D3
0000261A  6700 005A               2124              BEQ     displayA1P
0000261E  B63C 0002               2125              CMP.B   #two,D3
00002622  6700 007A               2126              BEQ     displayA2P
00002626  B63C 0003               2127              CMP.B   #three,D3
0000262A  6700 009A               2128              BEQ     displayA3P
0000262E  B63C 0004               2129              CMP.B   #four,D3
00002632  6700 00BA               2130              BEQ     displayA4P
00002636  B63C 0005               2131              CMP.B   #five,D3
0000263A  6700 00DA               2132              BEQ     displayA5P
0000263E  B63C 0006               2133              CMP.B   #six,D3
00002642  6700 00FA               2134              BEQ     displayA6P
00002646  B63C 0007               2135              CMP.B   #seven,D3
0000264A  6700 011A               2136              BEQ     displayA7P
0000264E                          2137              
0000264E  43F9 00002A12           2138  displayA0P  LEA         dispA0, A1          ; Display space
00002654  103C 000E               2139              MOVE.B      #14, D0             ; command for trap call to display message
00002658  4E4F                    2140              TRAP        #15                 ; trap call
0000265A  43F9 00002981           2141              LEA         clPer, A1           ; Display space
00002660  103C 000E               2142              MOVE.B      #14, D0             ; command for trap call to display message
00002664  4E4F                    2143              TRAP        #15                 ; trap call
00002666  43F9 00002985           2144              LEA         inc, A1             ; Display space
0000266C  103C 000E               2145              MOVE.B      #14, D0             ; command for trap call to display message
00002670  4E4F                    2146              TRAP        #15                 ; trap call
00002672  6000 02F4               2147              BRA         endSUB              ; go to the end of the subroutine
00002676                          2148              
00002676  43F9 00002A15           2149  displayA1P  LEA         dispA1, A1          ; Display space
0000267C  103C 000E               2150              MOVE.B      #14, D0             ; command for trap call to display message
00002680  4E4F                    2151              TRAP        #15                 ; trap call
00002682  43F9 00002981           2152              LEA         clPer, A1           ; Display space
00002688  103C 000E               2153              MOVE.B      #14, D0             ; command for trap call to display message
0000268C  4E4F                    2154              TRAP        #15                 ; trap call
0000268E  43F9 00002985           2155              LEA         inc, A1             ; Display space
00002694  103C 000E               2156              MOVE.B      #14, D0             ; command for trap call to display message
00002698  4E4F                    2157              TRAP        #15                 ; trap call
0000269A  6000 02CC               2158              BRA         endSUB              ; go to the end of the subroutine
0000269E                          2159  
0000269E  43F9 00002A18           2160  displayA2P  LEA         dispA2, A1          ; Display space
000026A4  103C 000E               2161              MOVE.B      #14, D0             ; command for trap call to display message
000026A8  4E4F                    2162              TRAP        #15                 ; trap call
000026AA  43F9 00002981           2163              LEA         clPer, A1           ; Display space
000026B0  103C 000E               2164              MOVE.B      #14, D0             ; command for trap call to display message
000026B4  4E4F                    2165              TRAP        #15                 ; trap call
000026B6  43F9 00002985           2166              LEA         inc, A1             ; Display space
000026BC  103C 000E               2167              MOVE.B      #14, D0             ; command for trap call to display message
000026C0  4E4F                    2168              TRAP        #15                 ; trap call
000026C2  6000 02A4               2169              BRA         endSUB              ; go to the end of the subroutine
000026C6                          2170  
000026C6  43F9 00002A1B           2171  displayA3P  LEA         dispA3, A1          ; Display space
000026CC  103C 000E               2172              MOVE.B      #14, D0             ; command for trap call to display message
000026D0  4E4F                    2173              TRAP        #15                 ; trap call
000026D2  43F9 00002981           2174              LEA         clPer, A1           ; Display space
000026D8  103C 000E               2175              MOVE.B      #14, D0             ; command for trap call to display message
000026DC  4E4F                    2176              TRAP        #15                 ; trap call
000026DE  43F9 00002985           2177              LEA         inc, A1             ; Display space
000026E4  103C 000E               2178              MOVE.B      #14, D0             ; command for trap call to display message
000026E8  4E4F                    2179              TRAP        #15                 ; trap call
000026EA  6000 027C               2180              BRA         endSUB              ; go to the end of the subroutine
000026EE                          2181  
000026EE  43F9 00002A1E           2182  displayA4P  LEA         dispA4, A1          ; Display space
000026F4  103C 000E               2183              MOVE.B      #14, D0             ; command for trap call to display message
000026F8  4E4F                    2184              TRAP        #15                 ; trap call
000026FA  43F9 00002981           2185              LEA         clPer, A1           ; Display space
00002700  103C 000E               2186              MOVE.B      #14, D0             ; command for trap call to display message
00002704  4E4F                    2187              TRAP        #15                 ; trap call
00002706  43F9 00002985           2188              LEA         inc, A1             ; Display space
0000270C  103C 000E               2189              MOVE.B      #14, D0             ; command for trap call to display message
00002710  4E4F                    2190              TRAP        #15                 ; trap call
00002712  6000 0254               2191              BRA         endSUB              ; go to the end of the subroutine
00002716                          2192  
00002716  43F9 00002A21           2193  displayA5P  LEA         dispA5, A1          ; Display space
0000271C  103C 000E               2194              MOVE.B      #14, D0             ; command for trap call to display message
00002720  4E4F                    2195              TRAP        #15                 ; trap call
00002722  43F9 00002981           2196              LEA         clPer, A1           ; Display space
00002728  103C 000E               2197              MOVE.B      #14, D0             ; command for trap call to display message
0000272C  4E4F                    2198              TRAP        #15                 ; trap call
0000272E  43F9 00002985           2199              LEA         inc, A1             ; Display space
00002734  103C 000E               2200              MOVE.B      #14, D0             ; command for trap call to display message
00002738  4E4F                    2201              TRAP        #15                 ; trap call
0000273A  6000 022C               2202              BRA         endSUB              ; go to the end of the subroutine
0000273E                          2203  
0000273E  43F9 00002A24           2204  displayA6P  LEA         dispA6, A1          ; Display space
00002744  103C 000E               2205              MOVE.B      #14, D0             ; command for trap call to display message
00002748  4E4F                    2206              TRAP        #15                 ; trap call
0000274A  43F9 00002981           2207              LEA         clPer, A1           ; Display space
00002750  103C 000E               2208              MOVE.B      #14, D0             ; command for trap call to display message
00002754  4E4F                    2209              TRAP        #15                 ; trap call
00002756  43F9 00002985           2210              LEA         inc, A1             ; Display space
0000275C  103C 000E               2211              MOVE.B      #14, D0             ; command for trap call to display message
00002760  4E4F                    2212              TRAP        #15                 ; trap call
00002762  6000 0204               2213              BRA         endSUB              ; go to the end of the subroutine
00002766                          2214  
00002766  43F9 00002A27           2215  displayA7P  LEA         dispA7, A1          ; Display space
0000276C  103C 000E               2216              MOVE.B      #14, D0             ; command for trap call to display message
00002770  4E4F                    2217              TRAP        #15                 ; trap call
00002772  43F9 00002981           2218              LEA         clPer, A1           ; Display space
00002778  103C 000E               2219              MOVE.B      #14, D0             ; command for trap call to display message
0000277C  4E4F                    2220              TRAP        #15                 ; trap call
0000277E  43F9 00002985           2221              LEA         inc, A1             ; Display space
00002784  103C 000E               2222              MOVE.B      #14, D0             ; command for trap call to display message
00002788  4E4F                    2223              TRAP        #15                 ; trap call
0000278A  6000 01DC               2224              BRA         endSUB              ; go to the end of the subroutine
0000278E                          2225  
0000278E                          2226  ***********************************************************************************************************
0000278E                          2227  * Addr Postdecrement
0000278E                          2228  
0000278E  43F9 00002983           2229  pAddrDec    LEA         dec, A1             ; Display space
00002794  103C 000E               2230              MOVE.B      #14, D0             ; command for trap call to display message
00002798  4E4F                    2231              TRAP        #15                 ; trap call
0000279A                          2232              
0000279A  43F9 0000297F           2233              LEA         opPer, A1           ; Display space
000027A0  103C 000E               2234              MOVE.B      #14, D0             ; command for trap call to display message
000027A4  4E4F                    2235              TRAP        #15                 ; trap call
000027A6                          2236              
000027A6  B63C 0000               2237              CMP.B   #zero,D3
000027AA  6700 003A               2238              BEQ     displayA0D
000027AE  B63C 0001               2239              CMP.B   #one,D3
000027B2  6700 004E               2240              BEQ     displayA1D
000027B6  B63C 0002               2241              CMP.B   #two,D3
000027BA  6700 0062               2242              BEQ     displayA2D
000027BE  B63C 0003               2243              CMP.B   #three,D3
000027C2  6700 0076               2244              BEQ     displayA3D
000027C6  B63C 0004               2245              CMP.B   #four,D3
000027CA  6700 008A               2246              BEQ     displayA4D
000027CE  B63C 0005               2247              CMP.B   #five,D3
000027D2  6700 009E               2248              BEQ     displayA5D
000027D6  B63C 0006               2249              CMP.B   #six,D3
000027DA  6700 00B2               2250              BEQ     displayA6D
000027DE  B63C 0007               2251              CMP.B   #seven,D3
000027E2  6700 00C6               2252              BEQ     displayA7D
000027E6                          2253              
000027E6  43F9 00002A12           2254  displayA0D  LEA         dispA0, A1          ; Display space
000027EC  103C 000E               2255              MOVE.B      #14, D0             ; command for trap call to display message
000027F0  4E4F                    2256              TRAP        #15                 ; trap call
000027F2  43F9 00002981           2257              LEA         clPer, A1           ; Display space
000027F8  103C 000E               2258              MOVE.B      #14, D0             ; command for trap call to display message
000027FC  4E4F                    2259              TRAP        #15                 ; trap call
000027FE  6000 0168               2260              BRA         endSUB              ; go to the end of the subroutine
00002802                          2261              
00002802  43F9 00002A15           2262  displayA1D  LEA         dispA1, A1          ; Display space
00002808  103C 000E               2263              MOVE.B      #14, D0             ; command for trap call to display message
0000280C  4E4F                    2264              TRAP        #15                 ; trap call
0000280E  43F9 00002981           2265              LEA         clPer, A1           ; Display space
00002814  103C 000E               2266              MOVE.B      #14, D0             ; command for trap call to display message
00002818  4E4F                    2267              TRAP        #15                 ; trap call
0000281A  6000 014C               2268              BRA         endSUB              ; go to the end of the subroutine
0000281E                          2269  
0000281E  43F9 00002A18           2270  displayA2D  LEA         dispA2, A1          ; Display space
00002824  103C 000E               2271              MOVE.B      #14, D0             ; command for trap call to display message
00002828  4E4F                    2272              TRAP        #15                 ; trap call
0000282A  43F9 00002981           2273              LEA         clPer, A1           ; Display space
00002830  103C 000E               2274              MOVE.B      #14, D0             ; command for trap call to display message
00002834  4E4F                    2275              TRAP        #15                 ; trap call
00002836  6000 0130               2276              BRA         endSUB              ; go to the end of the subroutine
0000283A                          2277  
0000283A  43F9 00002A1B           2278  displayA3D  LEA         dispA3, A1          ; Display space
00002840  103C 000E               2279              MOVE.B      #14, D0             ; command for trap call to display message
00002844  4E4F                    2280              TRAP        #15                 ; trap call
00002846  43F9 00002981           2281              LEA         clPer, A1           ; Display space
0000284C  103C 000E               2282              MOVE.B      #14, D0             ; command for trap call to display message
00002850  4E4F                    2283              TRAP        #15                 ; trap call
00002852  6000 0114               2284              BRA         endSUB              ; go to the end of the subroutine
00002856                          2285  
00002856  43F9 00002A1E           2286  displayA4D  LEA         dispA4, A1          ; Display space
0000285C  103C 000E               2287              MOVE.B      #14, D0             ; command for trap call to display message
00002860  4E4F                    2288              TRAP        #15                 ; trap call
00002862  43F9 00002981           2289              LEA         clPer, A1           ; Display space
00002868  103C 000E               2290              MOVE.B      #14, D0             ; command for trap call to display message
0000286C  4E4F                    2291              TRAP        #15                 ; trap call
0000286E  6000 00F8               2292              BRA         endSUB              ; go to the end of the subroutine
00002872                          2293  
00002872  43F9 00002A21           2294  displayA5D  LEA         dispA5, A1          ; Display space
00002878  103C 000E               2295              MOVE.B      #14, D0             ; command for trap call to display message
0000287C  4E4F                    2296              TRAP        #15                 ; trap call
0000287E  43F9 00002981           2297              LEA         clPer, A1           ; Display space
00002884  103C 000E               2298              MOVE.B      #14, D0             ; command for trap call to display message
00002888  4E4F                    2299              TRAP        #15                 ; trap call
0000288A  6000 00DC               2300              BRA         endSUB              ; go to the end of the subroutine
0000288E                          2301  
0000288E  43F9 00002A24           2302  displayA6D  LEA         dispA6, A1          ; Display space
00002894  103C 000E               2303              MOVE.B      #14, D0             ; command for trap call to display message
00002898  4E4F                    2304              TRAP        #15                 ; trap call
0000289A  43F9 00002981           2305              LEA         clPer, A1           ; Display space
000028A0  103C 000E               2306              MOVE.B      #14, D0             ; command for trap call to display message
000028A4  4E4F                    2307              TRAP        #15                 ; trap call
000028A6  6000 00C0               2308              BRA         endSUB              ; go to the end of the subroutine
000028AA                          2309  
000028AA  43F9 00002A27           2310  displayA7D  LEA         dispA7, A1          ; Display space
000028B0  103C 000E               2311              MOVE.B      #14, D0             ; command for trap call to display message
000028B4  4E4F                    2312              TRAP        #15                 ; trap call
000028B6  43F9 00002981           2313              LEA         clPer, A1           ; Display space
000028BC  103C 000E               2314              MOVE.B      #14, D0             ; command for trap call to display message
000028C0  4E4F                    2315              TRAP        #15                 ; trap call
000028C2  6000 00A4               2316              BRA         endSUB              ; go to the end of the subroutine
000028C6                          2317  ***********************************************************************************************************
000028C6                          2318  * Display Hex
000028C6                          2319  
000028C6  B63C 0000               2320  pHex        CMP.B       #zero, D3
000028CA  6700 0012               2321              BEQ         AbsShort
000028CE  B63C 0001               2322              CMP.B       #one, D3
000028D2  6700 003C               2323              BEQ         AbsLong
000028D6  B63C 0004               2324              CMP.B       #four, D3
000028DA  6700 0066               2325              BEQ         DispImm
000028DE                          2326              
000028DE  43F9 0000297F           2327  AbsShort    LEA         opPer, A1           ; Display space
000028E4  103C 000E               2328              MOVE.B      #14, D0             ; command for trap call to display message
000028E8  4E4F                    2329              TRAP        #15                 ; trap call
000028EA                          2330              
000028EA  43F9 0000297B           2331              LEA         dispHex, A1         ; Display space
000028F0  103C 000E               2332              MOVE.B      #14, D0             ; command for trap call to display message
000028F4  4E4F                    2333              TRAP        #15                 ; trap call
000028F6                          2334              
000028F6  4241                    2335              CLR         D1
000028F8  3218                    2336              MOVE.W      (A0)+, D1
000028FA                          2337              
000028FA  103C 0003               2338              MOVE.B      #3, D0
000028FE  4E4F                    2339              TRAP        #15
00002900                          2340              
00002900  43F9 00002981           2341              LEA         clPer, A1           ; Display space
00002906  103C 000E               2342              MOVE.B      #14, D0             ; command for trap call to display message
0000290A  4E4F                    2343              TRAP        #15                 ; trap call
0000290C                          2344              
0000290C  6000 005A               2345              BRA         endSub
00002910                          2346              
00002910  43F9 0000297F           2347  AbsLong     LEA         opPer, A1           ; Display space
00002916  103C 000E               2348              MOVE.B      #14, D0             ; command for trap call to display message
0000291A  4E4F                    2349              TRAP        #15                 ; trap call
0000291C                          2350              
0000291C  43F9 0000297B           2351              LEA         dispHex, A1         ; Display space
00002922  103C 000E               2352              MOVE.B      #14, D0             ; command for trap call to display message
00002926  4E4F                    2353              TRAP        #15                 ; trap call
00002928                          2354              
00002928  4241                    2355              CLR         D1
0000292A  2218                    2356              MOVE.L      (A0)+, D1
0000292C                          2357              
0000292C  103C 0003               2358              MOVE.B      #3, D0
00002930  4E4F                    2359              TRAP        #15
00002932                          2360              
00002932  43F9 00002981           2361              LEA         clPer, A1           ; Display space
00002938  103C 000E               2362              MOVE.B      #14, D0             ; command for trap call to display message
0000293C  4E4F                    2363              TRAP        #15                 ; trap call
0000293E                          2364              
0000293E  6000 0028               2365              BRA         endSub
00002942                          2366  
00002942  43F9 00002979           2367  DispImm     LEA         hashTag, A1         ; Display space
00002948  103C 000E               2368              MOVE.B      #14, D0             ; command for trap call to display message
0000294C  4E4F                    2369              TRAP        #15                 ; trap call
0000294E                          2370              
0000294E  4241                    2371              CLR         D1
00002950  3218                    2372              MOVE.W      (A0)+, D1
00002952                          2373  
00002952  43F9 0000297B           2374              LEA         dispHex, A1         ; Display space
00002958  103C 000E               2375              MOVE.B      #14, D0             ; command for trap call to display message
0000295C  4E4F                    2376              TRAP        #15                 ; trap call
0000295E                          2377              
0000295E  103C 0003               2378              MOVE.B      #3, D0
00002962  4E4F                    2379              TRAP        #15
00002964                          2380  
00002964  6000 0002               2381              BRA         endSub
00002968                          2382  invalid
00002968                          2383  
00002968                          2384  endSUB
00002968                          2385          
00002968  4CDF 7EFF               2386              MOVEM.L  (SP)+, D0-D7/A1-A6
0000296C  4E75                    2387              RTS
0000296E                          2388  
0000296E                          2389  ***********************************************************************************************************
0000296E                          2390  ***********************************************************************************************************
0000296E                          2391  ***********************************************************************************************************
0000296E                          2392  
0000296E                          2393  printInvalid
0000296E                          2394  endPROG    
0000296E                          2395  
0000296E  FFFF FFFF               2396      SIMHALT                             ; halt simulator
00002972                          2397  
00002972= 20 0D 0A 00             2398  newLine     DC.B    ' ', CR, LF, 0
00002976= 20 20 00                2399  space       DC.B    '  ', 0
00002979                          2400  
00002979= 23 00                   2401  hashTag     DC.B    '#', 0
0000297B= 24 00                   2402  dispHex     DC.B    '$', 0
0000297D= 2C 00                   2403  comma       DC.B    ',', 0
0000297F                          2404  
0000297F= 28 00                   2405  opPer       DC.B    '(', 0
00002981= 29 00                   2406  clPer       DC.B    ')', 0
00002983= 2D 00                   2407  dec         DC.B    '-', 0
00002985= 2B 00                   2408  inc         DC.B    '+', 0
00002987                          2409  
00002987= 4F 52 49 00             2410  ORImatch    DC.B    'ORI', 0
0000298B= 43 4D 50 49 00          2411  CMPImatch   DC.B    'CMPI', 0
00002990= 42 43 4C 52 00          2412  BCLRmatch   DC.B    'BCLR', 0
00002995= 4D 4F 56 45 00          2413  MOVEmatch   DC.B    'MOVE', 0
0000299A= 4D 4F 56 45 41 00       2414  MOVEAmatch  DC.B    'MOVEA', 0
000029A0= 4E 45 47 00             2415  NEGmatch    DC.B    'NEG', 0
000029A4= 52 54 53 00             2416  RTSmatch    DC.B    'RTS', 0
000029A8= 4A 53 52 00             2417  JSRmatch    DC.B    'JSR', 0
000029AC= 4D 4F 56 45 4D 00       2418  MOVEMmatch  DC.B    'MOVEM', 0
000029B2= 4C 45 41 00             2419  LEAmatch    DC.B    'LEA', 0
000029B6= 53 55 42 51 00          2420  SUBQmatch   DC.B    'SUBQ', 0
000029BB= 42 52 41 00             2421  BRAmatch    DC.B    'BRA', 0
000029BF= 42 43 53 00             2422  BCSmatch    DC.B    'BCS', 0
000029C3= 42 56 43 00             2423  BVCmatch    DC.B    'BVC', 0
000029C7= 42 47 45 00             2424  BGEmatch    DC.B    'BGE', 0
000029CB= 42 4C 54 00             2425  BLTmatch    DC.B    'BLT', 0
000029CF= 44 49 56 53 00          2426  DIVSmatch   DC.B    'DIVS', 0
000029D4= 4F 52 00                2427  ORmatch     DC.B    'OR', 0
000029D7= 53 55 42 00             2428  SUBmatch    DC.B    'SUB', 0
000029DB= 45 4F 52 00             2429  EORmatch    DC.B    'EOR', 0
000029DF= 43 4D 50 00             2430  CMPmatch    DC.B    'CMP', 0
000029E3= 4D 55 4C 53 00          2431  MULSmatch   DC.B    'MULS', 0
000029E8= 41 44 44 00             2432  ADDmatch    DC.B    'ADD', 0
000029EC= 41 44 44 41 00          2433  ADDAmatch   DC.B    'ADDA', 0
000029F1= 4C 53 52 00             2434  LSRmatch    DC.B    'LSR', 0
000029F5= 4C 53 4C 00             2435  LSLmatch    DC.B    'LSL', 0
000029F9= 41 53 52 00             2436  ASRmatch    DC.B    'ASR', 0
000029FD= 41 53 4C 00             2437  ASLmatch    DC.B    'ASL', 0
00002A01= 52 4F 52 00             2438  RORmatch    DC.B    'ROR', 0
00002A05= 52 4F 4C 00             2439  ROLmatch    DC.B    'ROL', 0
00002A09                          2440   
00002A09= 2E 42 00                2441  dispByte    DC.B    '.B', 0
00002A0C= 2E 57 00                2442  dispWord    DC.B    '.W', 0
00002A0F= 2E 4C 00                2443  dispLong    DC.B    '.L', 0
00002A12                          2444  
00002A12= 41 30 00                2445  dispA0      DC.B    'A0', 0
00002A15= 41 31 00                2446  dispA1      DC.B    'A1', 0
00002A18= 41 32 00                2447  dispA2      DC.B    'A2', 0
00002A1B= 41 33 00                2448  dispA3      DC.B    'A3', 0
00002A1E= 41 34 00                2449  dispA4      DC.B    'A4', 0
00002A21= 41 35 00                2450  dispA5      DC.B    'A5', 0
00002A24= 41 36 00                2451  dispA6      DC.B    'A6', 0
00002A27= 41 37 00                2452  dispA7      DC.B    'A7', 0
00002A2A                          2453  
00002A2A= 44 00                   2454  dispD       DC.B    'D',0
00002A2C= 44 30 00                2455  dispD0      DC.B    'D0', 0
00002A2F= 44 31 00                2456  dispD1      DC.B    'D1', 0
00002A32= 44 32 00                2457  dispD2      DC.B    'D2', 0
00002A35= 44 33 00                2458  dispD3      DC.B    'D3', 0
00002A38= 44 34 00                2459  dispD4      DC.B    'D4', 0
00002A3B= 44 35 00                2460  dispD5      DC.B    'D5', 0
00002A3E= 44 36 00                2461  dispD6      DC.B    'D6', 0
00002A41= 44 37 00                2462  dispD7      DC.B    'D7', 0 
00002A44                          2463   
00002A44                          2464             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             2910
ABSSHORT            28DE
ADDAMATCH           29EC
ADDMATCH            29E8
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            29FD
ASRMATCH            29F9
BCLRMATCH           2990
BCSMATCH            29BF
BGEMATCH            29C7
BLTMATCH            29CB
BRAEIGHT            1106
BRAELEVEN           110A
BRAFIVE             10D6
BRAFOUR             10BA
BRAFOURTEEN         1160
BRAMATCH            29BB
BRANINE             1106
BRAONE              10B6
BRASIX              10DA
BRATHIRTEEN         110E
BRATHREE            10BA
BRATWELVE           110A
BRATWO              10BA
BRAZERO             1086
BVCMATCH            29C3
CLPER               2981
CMPIMATCH           298B
CMPMATCH            29DF
COMMA               297D
CR                  D
DEC                 2983
DISPA0              2A12
DISPA1              2A15
DISPA2              2A18
DISPA3              2A1B
DISPA4              2A1E
DISPA5              2A21
DISPA6              2A24
DISPA7              2A27
DISPBYTE            2A09
DISPD               2A2A
DISPD0              2A2C
DISPD1              2A2F
DISPD2              2A32
DISPD3              2A35
DISPD4              2A38
DISPD5              2A3B
DISPD6              2A3E
DISPD7              2A41
DISPHEX             297B
DISPIMM             2942
DISPLAYA0           2456
DISPLAYA0A          2522
DISPLAYA0D          27E6
DISPLAYA0P          264E
DISPLAYA1           2466
DISPLAYA1A          253E
DISPLAYA1D          2802
DISPLAYA1P          2676
DISPLAYA2           2476
DISPLAYA2A          255A
DISPLAYA2D          281E
DISPLAYA2P          269E
DISPLAYA3           2486
DISPLAYA3A          2576
DISPLAYA3D          283A
DISPLAYA3P          26C6
DISPLAYA4           2496
DISPLAYA4A          2592
DISPLAYA4D          2856
DISPLAYA4P          26EE
DISPLAYA5           24A6
DISPLAYA5A          25AE
DISPLAYA5D          2872
DISPLAYA5P          2716
DISPLAYA6           24B6
DISPLAYA6A          25CA
DISPLAYA6D          288E
DISPLAYA6P          273E
DISPLAYA7           24C6
DISPLAYA7A          25E6
DISPLAYA7D          28AA
DISPLAYA7P          2766
DISPLAYD0           2396
DISPLAYD1           23A6
DISPLAYD2           23B6
DISPLAYD3           23C6
DISPLAYD4           23D6
DISPLAYD5           23E6
DISPLAYD6           23F6
DISPLAYD7           2406
DISPLAYEIGHT        230E
DISPLONG            2A0F
DISPWORD            2A0C
DIVSMATCH           29CF
EIGHT               8
ELEVEN              B
ENDPROG             296E
ENDSUB              2968
ENDSUBROUTINE       2318
EORMATCH            29DB
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             2979
INC                 2985
INVALID             2968
JSRMATCH            29A8
LEAMATCH            29B2
LF                  A
LOOP                100C
LSLMATCH            29F5
LSRMATCH            29F1
MEMSB               1AA8
MEMSHIFTIMM         22F4
MEMSHIFTS           1176
MEMSL               1FBC
MEMSW               1D32
MOVEAMATCH          299A
MOVEMATCH           2995
MOVEMMATCH          29AC
MULSMATCH           29E3
NEGMATCH            29A0
NEWLINE             2972
NINE                9
ONE                 1
OPADDAL             1870
OPADDAW             1800
OPADDB              16BC
OPADDL              1794
OPADDW              1728
OPASBI              1AE6
OPASBR              1B48
OPASL               18E0
OPASLBI             1B26
OPASLBR             1B88
OPASLI              1FFA
OPASLLI             203A
OPASLLR             209C
OPASLR              205C
OPASLWI             1DB0
OPASLWR             1E12
OPASR               192C
OPASRBI             1B04
OPASRBR             1B66
OPASRLI             2018
OPASRLR             207A
OPASRWI             1D8E
OPASRWR             1DF0
OPASWI              1D70
OPASWR              1DD2
OPBCLR              1496
OPBCS               161C
OPBGE               1634
OPBLT               1640
OPBRA               1604
OPBVC               1628
OPCMPI              1324
OPCMPIB             1370
OPCMPIL             1434
OPCMPIW             13D2
OPDYNBCLR           14FA
OPLSBI              1BAA
OPLSBR              1C0C
OPLSL               1978
OPLSLBI             1BEA
OPLSLBR             1C4C
OPLSLI              20BE
OPLSLLI             20FE
OPLSLLR             2160
OPLSLR              2120
OPLSLWI             1E74
OPLSLWR             1ED6
OPLSR               19C4
OPLSRBI             1BC8
OPLSRBR             1C2A
OPLSRLI             20DC
OPLSRLR             213E
OPLSRWI             1E52
OPLSRWR             1EB4
OPLSWI              1E34
OPLSWR              1E96
OPMOVEB             1568
OPMOVEMLEA          15F8
OPMULS              1658
OPNEG               15EC
OPORI               11D0
OPORIB              11FE
OPORIL              12C2
OPORIW              1260
OPPER               297F
OPROBI              1C6E
OPROBR              1CD0
OPROL               1A10
OPROLBI             1CAE
OPROLBR             1D10
OPROLI              2182
OPROLLI             21C2
OPROLLR             2224
OPROLR              21E4
OPROLWI             1F38
OPROLWR             1F9A
OPROR               1A5C
OPRORBI             1C8C
OPRORBR             1CEE
OPRORLI             21A0
OPRORLR             2202
OPRORWI             1F16
OPRORWR             1F78
OPROWI              1EF8
OPROWR              1F5A
OPRTSJSR            15F8
OPSUB               164C
OPSUBQ              15F8
ORIMATCH            2987
ORMATCH             29D4
PADDRDEC            278E
PADDRDIR            24D6
PADDRPOST           2602
PADDRREG            2416
PDATAREG            2356
PHEX                28C6
PRINTEA             231E
PRINTINVALID        296E
PRNTIMM             2246
PRNTREG             22A2
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
REGSHIFTS           11B4
ROLMATCH            2A05
RORMATCH            2A01
RTSMATCH            29A4
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               2976
START               1000
SUBMATCH            29D7
SUBQMATCH           29B6
TEST_END            3009
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
