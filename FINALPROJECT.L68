00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 2014-12-09 21:29:53

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Motorola 68k Disassembler
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =00003009                 11  test_end    EQU     $00003009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00003000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00003009             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 1754                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 0084                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0080                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 0094                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0090                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00B4                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00C6                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00C2                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00D4                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 00D0                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 00C8                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                102          AND.B       #secNib, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 052E                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 067A                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                108          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 07E4                109          BEQ         opBCLR
000010A6  C47C 0001                110          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                111          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 083C                112          BEQ         opDynBCLR
000010B2  6000 16B4                113          BRA         printInvalid
000010B6                           114          
000010B6                           115          
000010B6  6000 08A2                116  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           117  
000010BA  6000 0922                118  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BE                           119  
000010BE                           120  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BE                           121  
000010BE  6000 0A18                122          BRA         opMOVEW
000010C2                           123  
000010C2  4242                     124  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010C4  1401                     125          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010C6  C43C 000F                126          AND.B       #secNib, D2             ; set first nibble to 0
000010CA                           127   
000010CA  B43C 0004                128          CMP.B       #four, D2           ; compare second nibble to 4
000010CE  6700 0B02                129          BEQ         opNEG               ; branch to NEG method
000010D2  B43C 000E                130          CMP.B       #fourteen, D2       ; compare second nibble to E
000010D6  6700 0BE8                131          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010DA  6000 0C5A                132          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010DE                           133  
000010DE  6000 0C8A                134  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010E2                           135  
000010E2  4242                     136  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010E4  1401                     137          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010E6  C43C 000F                138          AND.B       #$0F, D2             ; set first nibble to 0
000010EA                           139   
000010EA  B43C 0000                140          CMP.B       #zero, D2           ; compare second nibble to 0
000010EE  6700 0CF0                141          BEQ         opBRA               ; branch to BRA method
000010F2  B43C 0005                142          CMP.B       #five, D2           ; compare second nibble to 5
000010F6  6700 0D20                143          BEQ         opBCS               ; branch to BCS method
000010FA  B43C 0008                144          CMP.B       #eight, D2          ; compare second nibble to 8
000010FE  6700 0D4C                145          BEQ         opBVC               ; branch to BCS method
00001102  B43C 000C                146          CMP.B       #twelve, D2         ; compare second nibble to 12
00001106  6700 0D78                147          BEQ         opBGE               ; branch to BGE method
0000110A  6000 0DA8                148          BRA         opBLT               ; otherwise, branch to BLT method
0000110E                           149  
0000110E                           150  braEight                                ; there are two opCodes available DIVS, or OR
0000110E  4242                     151              CLR     D2
00001110  E141                     152              ASL     #8,D1
00001112  1218                     153              MOVE.B  (A0)+,D1
00001114  3401                     154              MOVE.W  D1,D2
00001116  EC42                     155              ASR     #six,D2
00001118  C47C 0007                156              AND     #$07,D2
0000111C  B43C 0007                157              CMP.B   #seven,D2
00001120  6700 01B4                158              BEQ     opDIVS              ; If bits 8 - 6 are equal to 7, we have DIVS
00001124  6000 005E                159              BRA     opOR                ; else opcode is OR
00001128                           160  
00001128  6000 0DBE                161  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000112C                           162  
0000112C                           163  braEleven                               ; there are two opCodes available EOR, or CMP
0000112C  4242                     164              CLR     D2
0000112E  E141                     165              ASL     #8,D1
00001130  1218                     166              MOVE.B  (A0)+,D1
00001132  3401                     167              MOVE.W  D1,D2
00001134  EC42                     168              ASR     #six,D2
00001136  C47C 0007                169              AND     #$07,D2
0000113A  B43C 0003                170              CMP.B   #three,D2
0000113E  6D00 0342                171              BLT     opCMP               ; If opmode bits are less than 3, we have CMP
00001142  6000 01F0                172              BRA     opEOR               ; Else its EOR
00001146                           173              
00001146                           174  
00001146  6000 0EF8                175  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
0000114A                           176    
0000114A                           177  braThirteen ; there are two opCodes available ADD, or ADDA
0000114A                           178  
0000114A  4242                     179  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
0000114C  1401                     180              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000114E  C438 000F                181              AND.B       $0F, D2             ; set first nibble to 0
00001152                           182   
00001152  B43C 0000                183              CMP.B       #zero, D2           ; compare second nibble to 0
00001156  6700 0F00                184              BEQ         opASR               ; branch to ASR method
0000115A  B43C 0001                185              CMP.B       #one, D2            ; compare second nibble to 1
0000115E  6700 0EEC                186              BEQ         opASL               ; branch to ASL method
00001162  B43C 0002                187              CMP.B       #two, D2            ; compare second nibble to 2
00001166  6700 0F08                188              BEQ         opLSR               ; branch to LSR method
0000116A  B43C 0003                189              CMP.B       #three, D2          ; compare second nibble to 3
0000116E  6700 0EF4                190              BEQ         opLSL               ; branch to LSL method
00001172  B43C 0006                191              CMP.B       #six, D2            ; compare second nibble to 6
00001176  6700 0F10                192              BEQ         opROR               ; branch to ROR method
0000117A  6000 0F00                193              BRA         opROL               ; otherwise, branch to ROL method
0000117E                           194              
0000117E                           195  
0000117E                           196  
0000117E                           197  ***********************************************************************************************************
0000117E                           198  *
0000117E                           199  *               BCC OPCODE
0000117E                           200  *
0000117E                           201  ***********************************************************************************************************
0000117E                           202          
0000117E  4242                     203  opBCC       CLR     D2
00001180                           204              ; Determine Condition (4 bits)
00001180                           205              ; Determine Displacement AFTER condition (8 bits)
00001180  6000 FE8A                206              BRA     LOOP
00001184                           207              
00001184                           208              
00001184                           209  ***********************************************************************************************************
00001184                           210  *
00001184                           211  *               OR OPCODE
00001184                           212  *
00001184                           213  ***********************************************************************************************************
00001184                           214  
00001184  43F9 000027CE            215  opOR        LEA         ORmatch,A1
0000118A  103C 000E                216              MOVE.B      #14,D0
0000118E  4E4F                     217              TRAP        #15
00001190                           218              
00001190  4242                     219              CLR         D2
00001192                           220              ; These are for EA to Dn direction
00001192  B43C 0000                221              CMP.B       #zero,D2
00001196  6700 002A                222              BEQ         opORB               ; Byte in opmode
0000119A  B43C 0001                223              CMP.B       #one,D2
0000119E  6700 007C                224              BEQ         opORW               ; Word in opmode
000011A2  B43C 0002                225              CMP.B       #two,D2
000011A6  6700 00D0                226              BEQ         opORL               ; Long in opmode
000011AA                           227              
000011AA                           228              ; These are for Dn to EA direction
000011AA  B43C 0004                229              CMP.B       #four,D2
000011AE  6700 0012                230              BEQ         opORB               ; Byte in opmode
000011B2  B43C 0005                231              CMP.B       #five,D2
000011B6  6700 0064                232              BEQ         opORW               ; Word in opmode
000011BA  B43C 0006                233              CMP.B       #six,D2
000011BE  6700 00B8                234              BEQ         opORL               ; Long in opmode
000011C2                           235              
000011C2  43F9 00002803            236  opORB       LEA         dispByte,A1
000011C8  103C 000E                237              MOVE.B      #14,D0
000011CC  4E4F                     238              TRAP        #15
000011CE                           239              
000011CE  43F9 00002770            240              LEA         space, A1           ; Display space
000011D4  103C 000E                241              MOVE.B      #14, D0             ; command for trap call to display message
000011D8  4E4F                     242              TRAP        #15                 ; trap call
000011DA                           243              
000011DA                           244  
000011DA  1401                     245              MOVE.B      D1,D2
000011DC  E642                     246              ASR         #3,D2
000011DE  C47C 0007                247              AND         #$07,D2
000011E2  1601                     248              MOVE.B      D1,D3
000011E4  C67C 0007                249              AND         #$07,D3
000011E8  4EB9 00002094            250              JSR         printEA         ; Determines the "left" operand register
000011EE                           251              
000011EE  43F9 00002777            252              LEA         comma, A1           ; Display space
000011F4  103C 000E                253              MOVE.B      #14, D0             ; command for trap call to display message
000011F8  4E4F                     254              TRAP        #15                 ; trap call
000011FA                           255              
000011FA  4242                     256              CLR         D2
000011FC  3601                     257              MOVE.W      D1,D3
000011FE  E043                     258              ASR         #eight,D3
00001200  E243                     259              ASR         #one,D3
00001202  C67C 0007                260              AND         #$07,D3
00001206  4EB9 00002094            261              JSR         printEA
0000120C                           262              
0000120C  43F9 0000276C            263              LEA         newLine,A1
00001212  103C 000E                264              MOVE.B      #14,D0
00001216  4E4F                     265              TRAP        #15
00001218                           266              
00001218  6000 FDF2                267              BRA         LOOP
0000121C                           268              
0000121C                           269              
0000121C  43F9 00002806            270  opORW       LEA         dispWord,A1
00001222  103C 000E                271              MOVE.B      #14,D0
00001226  4E4F                     272              TRAP        #15
00001228                           273              
00001228  43F9 00002770            274              LEA         space, A1           ; Display space
0000122E  103C 000E                275              MOVE.B      #14, D0             ; command for trap call to display message
00001232  4E4F                     276              TRAP        #15                 ; trap call
00001234                           277              
00001234  4242                     278              CLR         D2
00001236  1401                     279              MOVE.B      D1,D2
00001238  E642                     280              ASR         #3,D2
0000123A  C47C 0007                281              AND         #$07,D2
0000123E  1601                     282              MOVE.B      D1,D3
00001240  C67C 0007                283              AND         #$07,D3
00001244  4EB9 00002094            284              JSR         printEA         ; Determines the "left" operand register
0000124A                           285              
0000124A  43F9 00002777            286              LEA         comma, A1           ; Display space
00001250  103C 000E                287              MOVE.B      #14, D0             ; command for trap call to display message
00001254  4E4F                     288              TRAP        #15                 ; trap call
00001256                           289              
00001256  4242                     290              CLR         D2
00001258  3601                     291              MOVE.W      D1,D3
0000125A  E043                     292              ASR         #eight,D3
0000125C  E243                     293              ASR         #one,D3
0000125E  C67C 0007                294              AND         #$07,D3
00001262  4EB9 00002094            295              JSR         printEA
00001268                           296              
00001268  43F9 0000276C            297              LEA         newLine,A1
0000126E  103C 000E                298              MOVE.B      #14,D0
00001272  4E4F                     299              TRAP        #15
00001274                           300              
00001274  6000 FD96                301              BRA         LOOP
00001278                           302              
00001278  43F9 00002809            303  opORL       LEA         dispLong,A1
0000127E  103C 000E                304              MOVE.B      #14,D0
00001282  4E4F                     305              TRAP        #15
00001284                           306              
00001284  43F9 00002770            307              LEA         space, A1           ; Display space
0000128A  103C 000E                308              MOVE.B      #14, D0             ; command for trap call to display message
0000128E  4E4F                     309              TRAP        #15                 ; trap call
00001290                           310              
00001290  1401                     311              MOVE.B      D1,D2
00001292  E642                     312              ASR         #3,D2
00001294  C47C 0007                313              AND         #$07,D2
00001298  1601                     314              MOVE.B      D1,D3
0000129A  C67C 0007                315              AND         #$07,D3
0000129E  4EB9 00002094            316              JSR         printEA         ; Determines the "left" operand register
000012A4                           317              
000012A4  43F9 00002777            318              LEA         comma, A1           ; Display space
000012AA  103C 000E                319              MOVE.B      #14, D0             ; command for trap call to display message
000012AE  4E4F                     320              TRAP        #15                 ; trap call
000012B0                           321              
000012B0  4242                     322              CLR         D2
000012B2  3601                     323              MOVE.W      D1,D3
000012B4  E043                     324              ASR         #eight,D3
000012B6  E243                     325              ASR         #one,D3
000012B8  C67C 0007                326              AND         #$07,D3
000012BC  4EB9 00002094            327              JSR         printEA
000012C2                           328              
000012C2  43F9 0000276C            329              LEA         newLine,A1
000012C8  103C 000E                330              MOVE.B      #14,D0
000012CC  4E4F                     331              TRAP        #15
000012CE                           332              
000012CE  6000 FD3C                333              BRA         LOOP            ; trap call
000012D2                           334              
000012D2  6000 FD38                335              BRA         LOOP            ; DOUBLE CHECK THIS AGAIN AFTER MORE TESTING ALEX
000012D6                           336              
000012D6                           337  ***********************************************************************************************************
000012D6                           338  *
000012D6                           339  *               DIVS OPCODE
000012D6                           340  *
000012D6                           341  ***********************************************************************************************************
000012D6                           342  
000012D6  43F9 000027C9            343  opDIVS      LEA     DIVSmatch,A1
000012DC  103C 000E                344              MOVE.B  #14,D0
000012E0  4E4F                     345              TRAP    #15
000012E2                           346              
000012E2  43F9 00002770            347              LEA         space, A1           ; Display space
000012E8  103C 000E                348              MOVE.B      #14, D0             ; command for trap call to display message
000012EC  4E4F                     349              TRAP        #15                 ; trap call
000012EE                           350              
000012EE  1401                     351              MOVE.B      D1,D2
000012F0  E642                     352              ASR         #3,D2
000012F2  C47C 0007                353              AND         #$07,D2
000012F6  1601                     354              MOVE.B      D1,D3
000012F8  C67C 0007                355              AND         #$07,D3
000012FC  4EB9 00002094            356              JSR         printEA
00001302                           357              
00001302  43F9 00002777            358              LEA         comma, A1           ; Display space
00001308  103C 000E                359              MOVE.B      #14, D0             ; command for trap call to display message
0000130C  4E4F                     360              TRAP        #15                 ; trap call
0000130E                           361              
0000130E  4242                     362              CLR         D2
00001310  3601                     363              MOVE.W      D1,D3
00001312  E043                     364              ASR         #eight,D3
00001314  E243                     365              ASR         #one,D3
00001316  C67C 0007                366              AND         #$07,D3
0000131A  4EB9 00002094            367              JSR         printEA
00001320                           368              
00001320  43F9 0000276C            369              LEA         newLine,A1
00001326  103C 000E                370              MOVE.B      #14,D0
0000132A  4E4F                     371              TRAP        #15
0000132C                           372              
0000132C  6000 FCDE                373              BRA         LOOP
00001330                           374      
00001330  6000 FCDA                375              BRA     LOOP
00001334                           376              
00001334                           377  **********************************************************************************************************
00001334                           378  *
00001334                           379  *               EOR OPCODE
00001334                           380  *
00001334                           381  ***********************************************************************************************************
00001334                           382  
00001334  43F9 000027D5            383  opEOR       LEA         EORmatch,A1
0000133A  103C 000E                384              MOVE.B      #14,D0
0000133E  4E4F                     385              TRAP        #15
00001340                           386              
00001340  4242                     387              CLR         D2
00001342                           388              
00001342  1401                     389              MOVE.B      D1,D2
00001344  EE42                     390              ASR         #seven,D2           ; Move bits 7 places over to find opmode
00001346  C47C 0007                391              AND         #$07,D2
0000134A  B43C 0005                392              CMP.B       #five,D2
0000134E  6D00 0012                393              BLT         opEORB              ; Byte in opmode
00001352  B43C 0005                394              CMP.B       #five,D2
00001356  6700 006A                395              BEQ         opEORW              ; Word in opmode
0000135A  B43C 0005                396              CMP.B       #five,D2
0000135E  6E00 00C2                397              BGT         opEORL              ; Long in opmode
00001362                           398              
00001362  43F9 00002803            399  opEORB      LEA         dispByte,A1
00001368  103C 000E                400              MOVE.B      #14,D0
0000136C  4E4F                     401              TRAP        #15
0000136E                           402              
0000136E  43F9 00002770            403              LEA         space, A1           ; Display space
00001374  103C 000E                404              MOVE.B      #14, D0             ; command for trap call to display message
00001378  4E4F                     405              TRAP        #15                 ; trap call
0000137A                           406              
0000137A  4242                     407              CLR         D2
0000137C  4243                     408              CLR         D3
0000137E  3601                     409              MOVE.W      D1,D3
00001380  E043                     410              ASR         #eight,D3
00001382  E243                     411              ASR         #one,D3
00001384  C67C 0007                412              AND         #$07,D3
00001388  4EB9 00002094            413              JSR         printEA
0000138E                           414              
0000138E  43F9 00002777            415              LEA         comma, A1           ; Display space
00001394  103C 000E                416              MOVE.B      #14, D0             ; command for trap call to display message
00001398  4E4F                     417              TRAP        #15                 ; trap call
0000139A                           418              
0000139A  4242                     419              CLR         D2
0000139C  4243                     420              CLR         D3
0000139E  1401                     421              MOVE.B      D1,D2
000013A0  E642                     422              ASR         #three,D2
000013A2  C47C 0007                423              AND         #seven,D2
000013A6  1601                     424              MOVE.B      D1,D3
000013A8  C67C 0007                425              AND         #$07,D3
000013AC  4EB9 00002094            426              JSR         printEA         ; Determines the "left" operand register
000013B2                           427              
000013B2  43F9 0000276C            428              LEA         newLine,A1
000013B8  103C 000E                429              MOVE.B      #14,D0
000013BC  4E4F                     430              TRAP        #15
000013BE                           431              
000013BE  6000 FC4C                432              BRA         LOOP
000013C2                           433              
000013C2                           434              
000013C2  43F9 00002806            435  opEORW      LEA         dispWord,A1
000013C8  103C 000E                436              MOVE.B      #14,D0
000013CC  4E4F                     437              TRAP        #15
000013CE                           438              
000013CE  43F9 00002770            439              LEA         space, A1           ; Display space
000013D4  103C 000E                440              MOVE.B      #14, D0             ; command for trap call to display message
000013D8  4E4F                     441              TRAP        #15                 ; trap call
000013DA                           442              
000013DA  4242                     443              CLR         D2
000013DC  4243                     444              CLR         D3
000013DE  3601                     445              MOVE.W      D1,D3
000013E0  E043                     446              ASR         #eight,D3
000013E2  E243                     447              ASR         #one,D3
000013E4  C67C 0007                448              AND         #$07,D3
000013E8  4EB9 00002094            449              JSR         printEA
000013EE                           450              
000013EE  43F9 00002777            451              LEA         comma, A1           ; Display space
000013F4  103C 000E                452              MOVE.B      #14, D0             ; command for trap call to display message
000013F8  4E4F                     453              TRAP        #15                 ; trap call
000013FA                           454              
000013FA  4242                     455              CLR         D2
000013FC  4243                     456              CLR         D3
000013FE  1401                     457              MOVE.B      D1,D2
00001400  E642                     458              ASR         #three,D2
00001402  C47C 0007                459              AND         #seven,D2
00001406  1601                     460              MOVE.B      D1,D3
00001408  C67C 0007                461              AND         #$07,D3
0000140C  4EB9 00002094            462              JSR         printEA         ; Determines the "left" operand register
00001412                           463              
00001412  43F9 0000276C            464              LEA         newLine,A1
00001418  103C 000E                465              MOVE.B      #14,D0
0000141C  4E4F                     466              TRAP        #15
0000141E                           467              
0000141E  6000 FBEC                468              BRA         LOOP
00001422                           469              
00001422  43F9 00002809            470  opEORL      LEA         dispLong,A1
00001428  103C 000E                471              MOVE.B      #14,D0
0000142C  4E4F                     472              TRAP        #15
0000142E                           473              
0000142E  43F9 00002770            474              LEA         space, A1           ; Display space
00001434  103C 000E                475              MOVE.B      #14, D0             ; command for trap call to display message
00001438  4E4F                     476              TRAP        #15                 ; trap call
0000143A                           477              
0000143A  4242                     478              CLR         D2
0000143C  4243                     479              CLR         D3
0000143E  3601                     480              MOVE.W      D1,D3
00001440  E043                     481              ASR         #eight,D3
00001442  E243                     482              ASR         #one,D3
00001444  C67C 0007                483              AND         #$07,D3
00001448  4EB9 00002094            484              JSR         printEA
0000144E                           485              
0000144E  43F9 00002777            486              LEA         comma, A1           ; Display space
00001454  103C 000E                487              MOVE.B      #14, D0             ; command for trap call to display message
00001458  4E4F                     488              TRAP        #15                 ; trap call
0000145A                           489              
0000145A  4242                     490              CLR         D2
0000145C  4243                     491              CLR         D3
0000145E  1401                     492              MOVE.B      D1,D2
00001460  E642                     493              ASR         #three,D2
00001462  C47C 0007                494              AND         #seven,D2
00001466  1601                     495              MOVE.B      D1,D3
00001468  C67C 0007                496              AND         #$07,D3
0000146C  4EB9 00002094            497              JSR         printEA         ; Determines the "left" operand register
00001472                           498              
00001472  43F9 0000276C            499              LEA         newLine,A1
00001478  103C 000E                500              MOVE.B      #14,D0
0000147C  4E4F                     501              TRAP        #15
0000147E                           502              
0000147E  6000 FB8C                503              BRA         LOOP            ; trap call
00001482                           504              
00001482                           505  
00001482                           506  ***********************************************************************************************************
00001482                           507  *
00001482                           508  *               CMP OPCODE
00001482                           509  *
00001482                           510  ***********************************************************************************************************
00001482                           511  
00001482  43F9 000027D9            512  opCMP       LEA         CMPmatch,A1
00001488  103C 000E                513              MOVE.B      #14,D0
0000148C  4E4F                     514              TRAP        #15
0000148E                           515              
0000148E  4242                     516              CLR         D2
00001490                           517              
00001490  1401                     518              MOVE.B      D1,D2
00001492  EC42                     519              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001494  C47C 0007                520              AND         #$07,D2
00001498  B43C 0000                521              CMP.B       #zero,D2
0000149C  6700 0016                522              BEQ         opCMPB              ; Byte in opmode
000014A0  B43C 0001                523              CMP.B       #one,D2
000014A4  6700 0068                524              BEQ         opCMPW              ; Word in opmode
000014A8  B43C 0002                525              CMP.B       #two,D2
000014AC  6700 00BA                526              BEQ         opCMPL              ; Long in opmode
000014B0                           527              
000014B0  6000 12B6                528              BRA         printInvalid        ; Incorrect input
000014B4                           529  
000014B4  43F9 00002803            530  opCMPB      LEA         dispByte,A1
000014BA  103C 000E                531              MOVE.B      #14,D0
000014BE  4E4F                     532              TRAP        #15
000014C0                           533              
000014C0  43F9 00002770            534              LEA         space, A1           ; Display space
000014C6  103C 000E                535              MOVE.B      #14, D0             ; command for trap call to display message
000014CA  4E4F                     536              TRAP        #15                 ; trap call
000014CC                           537              
000014CC  1401                     538              MOVE.B      D1,D2
000014CE  E642                     539              ASR         #3,D2
000014D0  C47C 0007                540              AND         #$07,D2
000014D4  1601                     541              MOVE.B      D1,D3
000014D6  C67C 0007                542              AND         #$07,D3
000014DA  4EB9 00002094            543              JSR         printEA         ; Determines the "left" operand register
000014E0                           544              
000014E0  43F9 00002777            545              LEA         comma, A1           ; Display space
000014E6  103C 000E                546              MOVE.B      #14, D0             ; command for trap call to display message
000014EA  4E4F                     547              TRAP        #15                 ; trap call
000014EC                           548              
000014EC  4242                     549              CLR         D2
000014EE  3601                     550              MOVE.W      D1,D3
000014F0  E043                     551              ASR         #eight,D3
000014F2  E243                     552              ASR         #one,D3
000014F4  C67C 0007                553              AND         #$07,D3
000014F8  4EB9 00002094            554              JSR         printEA
000014FE                           555              
000014FE  43F9 0000276C            556              LEA         newLine,A1
00001504  103C 000E                557              MOVE.B      #14,D0
00001508  4E4F                     558              TRAP        #15
0000150A                           559              
0000150A  6000 FB00                560              BRA         LOOP
0000150E                           561              
0000150E  43F9 00002806            562  opCMPW      LEA         dispWord,A1
00001514  103C 000E                563              MOVE.B      #14,D0
00001518  4E4F                     564              TRAP        #15
0000151A                           565              
0000151A  43F9 00002770            566              LEA         space, A1           ; Display space
00001520  103C 000E                567              MOVE.B      #14, D0             ; command for trap call to display message
00001524  4E4F                     568              TRAP        #15                 ; trap call
00001526                           569              
00001526  1401                     570              MOVE.B      D1,D2
00001528  E642                     571              ASR         #3,D2
0000152A  C47C 0007                572              AND         #$07,D2
0000152E  1601                     573              MOVE.B      D1,D3
00001530  C67C 0007                574              AND         #$07,D3
00001534  4EB9 00002094            575              JSR         printEA         ; Determines the "left" operand register
0000153A                           576              
0000153A  43F9 00002777            577              LEA         comma, A1           ; Display space
00001540  103C 000E                578              MOVE.B      #14, D0             ; command for trap call to display message
00001544  4E4F                     579              TRAP        #15                 ; trap call
00001546                           580              
00001546  4242                     581              CLR         D2
00001548  3601                     582              MOVE.W      D1,D3
0000154A  E043                     583              ASR         #eight,D3
0000154C  E243                     584              ASR         #one,D3
0000154E  C67C 0007                585              AND         #$07,D3
00001552  4EB9 00002094            586              JSR         printEA
00001558                           587              
00001558  43F9 0000276C            588              LEA         newLine,A1
0000155E  103C 000E                589              MOVE.B      #14,D0
00001562  4E4F                     590              TRAP        #15
00001564                           591              
00001564  6000 FAA6                592              BRA         LOOP
00001568                           593  
00001568  43F9 00002809            594  opCMPL      LEA         dispLong,A1
0000156E  103C 000E                595              MOVE.B      #14,D0
00001572  4E4F                     596              TRAP        #15
00001574                           597              
00001574  43F9 00002770            598              LEA         space, A1           ; Display space
0000157A  103C 000E                599              MOVE.B      #14, D0             ; command for trap call to display message
0000157E  4E4F                     600              TRAP        #15                 ; trap call
00001580                           601              
00001580  1401                     602              MOVE.B      D1,D2
00001582  E642                     603              ASR         #3,D2
00001584  C47C 0007                604              AND         #$07,D2
00001588  1601                     605              MOVE.B      D1,D3
0000158A  C67C 0007                606              AND         #$07,D3
0000158E  4EB9 00002094            607              JSR         printEA         ; Determines the "left" operand register
00001594                           608              
00001594  43F9 00002777            609              LEA         comma, A1           ; Display space
0000159A  103C 000E                610              MOVE.B      #14, D0             ; command for trap call to display message
0000159E  4E4F                     611              TRAP        #15                 ; trap call
000015A0                           612              
000015A0  4242                     613              CLR         D2
000015A2  3601                     614              MOVE.W      D1,D3
000015A4  E043                     615              ASR         #eight,D3
000015A6  E243                     616              ASR         #one,D3
000015A8  C67C 0007                617              AND         #$07,D3
000015AC  4EB9 00002094            618              JSR         printEA
000015B2                           619              
000015B2  43F9 0000276C            620              LEA         newLine,A1
000015B8  103C 000E                621              MOVE.B      #14,D0
000015BC  4E4F                     622              TRAP        #15
000015BE                           623              
000015BE  6000 FA4C                624              BRA         LOOP
000015C2                           625              
000015C2                           626  ***********************************************************************************************************
000015C2                           627  *
000015C2                           628  *               ORI OPCODE
000015C2                           629  *
000015C2                           630  ***********************************************************************************************************
000015C2                           631  
000015C2  43F9 00002781            632  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
000015C8  103C 000E                633          MOVE.B      #14, D0             ; command for trap call to display message
000015CC  4E4F                     634          TRAP        #15                 ; trap call
000015CE                           635          
000015CE  1218                     636          MOVE.B      (A0)+, D1
000015D0  1401                     637          MOVE.B      D1,D2               ; copy data over
000015D2  EC42                     638          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000015D4  B43C 0000                639          CMP.B       #zero,D2
000015D8  6700 0016                640          BEQ         opORIB
000015DC  B43C 0001                641          CMP.B       #one,D2
000015E0  6700 0070                642          BEQ         opORIW
000015E4  B43C 0002                643          CMP.B       #two,D2
000015E8  6700 00CA                644          BEQ         opORIL
000015EC                           645          
000015EC  6000 117A                646          BRA         printInvalid
000015F0                           647          
000015F0  43F9 00002803            648  opORIB  LEA         dispByte, A1        ; Display byte
000015F6  103C 000E                649          MOVE.B      #14, D0             ; command for trap call to display message
000015FA  4E4F                     650          TRAP        #15                 ; trap call
000015FC                           651          
000015FC  43F9 00002770            652          LEA         space, A1           ; Display space
00001602  103C 000E                653          MOVE.B      #14, D0             ; command for trap call to display message
00001606  4E4F                     654          TRAP        #15                 ; trap call
00001608                           655          
00001608  4242                     656          CLR         D2
0000160A  1401                     657          MOVE.B      D1,D2
0000160C  E642                     658          ASR         #three,D2
0000160E  C47C 0007                659          AND         #seven,D2
00001612  4243                     660          CLR         D3        
00001614  1601                     661          MOVE.B      D1,D3
00001616  C67C 0007                662          AND         #seven,D3
0000161A                           663          
0000161A  4241                     664          CLR         D1
0000161C  3218                     665          MOVE.W      (A0)+, D1
0000161E                           666          
0000161E  43F9 00002773            667          LEA         hashTag, A1           ; Display space
00001624  103C 000E                668          MOVE.B      #14, D0             ; command for trap call to display message
00001628  4E4F                     669          TRAP        #15                 ; trap call
0000162A                           670          
0000162A  103C 0003                671          MOVE.B      #3, D0
0000162E  4E4F                     672          TRAP        #15
00001630                           673          
00001630  43F9 00002777            674          LEA         comma, A1           ; Display space
00001636  103C 000E                675          MOVE.B      #14, D0             ; command for trap call to display message
0000163A  4E4F                     676          TRAP        #15                 ; trap call
0000163C                           677          
0000163C  4EB9 00002094            678          JSR         printEA
00001642                           679          
00001642  43F9 0000276C            680          LEA         newLine, A1           ; Display space
00001648  103C 000E                681          MOVE.B      #14, D0             ; command for trap call to display message
0000164C  4E4F                     682          TRAP        #15                 ; trap call
0000164E                           683          
0000164E  6000 F9BC                684          BRA         LOOP
00001652                           685          
00001652                           686          
00001652  43F9 00002806            687  opORIW  LEA         dispWord, A1        ; Display byte
00001658  103C 000E                688          MOVE.B      #14, D0             ; command for trap call to display message
0000165C  4E4F                     689          TRAP        #15                 ; trap call
0000165E                           690          
0000165E  43F9 00002770            691          LEA         space, A1           ; Display space
00001664  103C 000E                692          MOVE.B      #14, D0             ; command for trap call to display message
00001668  4E4F                     693          TRAP        #15                 ; trap call
0000166A                           694          
0000166A  4242                     695          CLR         D2
0000166C  1401                     696          MOVE.B      D1,D2
0000166E  E642                     697          ASR         #three,D2
00001670  C47C 0007                698          AND         #seven,D2
00001674  4243                     699          CLR         D3        
00001676  1601                     700          MOVE.B      D1,D3
00001678  C67C 0007                701          AND         #seven,D3
0000167C                           702          
0000167C  4241                     703          CLR         D1
0000167E  3218                     704          MOVE.W      (A0)+, D1
00001680                           705          
00001680  43F9 00002773            706          LEA         hashTag, A1           ; Display space
00001686  103C 000E                707          MOVE.B      #14, D0             ; command for trap call to display message
0000168A  4E4F                     708          TRAP        #15                 ; trap call
0000168C                           709          
0000168C  103C 0003                710          MOVE.B      #3, D0
00001690  4E4F                     711          TRAP        #15
00001692                           712          
00001692  43F9 00002777            713          LEA         comma, A1           ; Display space
00001698  103C 000E                714          MOVE.B      #14, D0             ; command for trap call to display message
0000169C  4E4F                     715          TRAP        #15                 ; trap call
0000169E                           716          
0000169E  4EB9 00002094            717          JSR         printEA
000016A4                           718          
000016A4  43F9 0000276C            719          LEA         newLine, A1           ; Display space
000016AA  103C 000E                720          MOVE.B      #14, D0             ; command for trap call to display message
000016AE  4E4F                     721          TRAP        #15                 ; trap call
000016B0                           722          
000016B0  6000 F95A                723          BRA         LOOP
000016B4                           724       
000016B4  43F9 00002809            725  opORIL  LEA         dispLong, A1        ; Display byte
000016BA  103C 000E                726          MOVE.B      #14, D0             ; command for trap call to display message
000016BE  4E4F                     727          TRAP        #15                 ; trap call
000016C0                           728          
000016C0  43F9 00002770            729          LEA         space, A1           ; Display space
000016C6  103C 000E                730          MOVE.B      #14, D0             ; command for trap call to display message
000016CA  4E4F                     731          TRAP        #15                 ; trap call
000016CC                           732          
000016CC  4242                     733          CLR         D2
000016CE  1401                     734          MOVE.B      D1,D2
000016D0  E642                     735          ASR         #three,D2
000016D2  C47C 0007                736          AND         #seven,D2
000016D6  4243                     737          CLR         D3        
000016D8  1601                     738          MOVE.B      D1,D3
000016DA  C67C 0007                739          AND         #seven,D3
000016DE                           740          
000016DE  4241                     741          CLR         D1
000016E0  2218                     742          MOVE.L      (A0)+, D1
000016E2                           743          
000016E2  43F9 00002773            744          LEA         hashTag, A1           ; Display space
000016E8  103C 000E                745          MOVE.B      #14, D0             ; command for trap call to display message
000016EC  4E4F                     746          TRAP        #15                 ; trap call
000016EE                           747          
000016EE  103C 0003                748          MOVE.B      #3, D0
000016F2  4E4F                     749          TRAP        #15
000016F4                           750          
000016F4  43F9 00002777            751          LEA         comma, A1           ; Display space
000016FA  103C 000E                752          MOVE.B      #14, D0             ; command for trap call to display message
000016FE  4E4F                     753          TRAP        #15                 ; trap call
00001700                           754          
00001700  4EB9 00002094            755          JSR         printEA
00001706                           756          
00001706  43F9 0000276C            757          LEA         newLine, A1           ; Display space
0000170C  103C 000E                758          MOVE.B      #14, D0             ; command for trap call to display message
00001710  4E4F                     759          TRAP        #15                 ; trap call
00001712                           760          
00001712  6000 F8F8                761          BRA         LOOP
00001716                           762           
00001716  43F9 00002785            763  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000171C  103C 000E                764          MOVE.B      #14, D0             ; command for trap call to display message
00001720  4E4F                     765          TRAP        #15                 ; trap call
00001722                           766                  
00001722  1218                     767          MOVE.B      (A0)+, D1
00001724  1401                     768          MOVE.B      D1,D2               ; copy data over
00001726  EC42                     769          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001728  B43C 0000                770          CMP.B       #zero,D2
0000172C  6700 0034                771          BEQ         opCMPIB
00001730  B43C 0001                772          CMP.B       #one,D2
00001734  6700 008E                773          BEQ         opCMPIW
00001738  B43C 0002                774          CMP.B       #two,D2
0000173C  6700 00E8                775          BEQ         opCMPIL
00001740                           776          
00001740  1401                     777          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
00001742  E542                     778          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
00001744  1802                     779          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
00001746  4242                     780          CLR         D2                  ; Clear out data register
00001748  1404                     781          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
0000174A  EA42                     782          ASR         #five,D2            ; Shift the register out to get just the mode
0000174C  1802                     783          MOVE.B      D2,D4               ; Store mode into D4
0000174E  4242                     784          CLR         D2
00001750                           785          
00001750  1401                     786          MOVE.B      D1,D2               ; Getting the EA register
00001752  EB42                     787          ASL         #five,D2
00001754  1A02                     788          MOVE.B      D2,D5               ; Move just the register into D5
00001756  4242                     789          CLR         D2                  ; Clearing D2 to put data back
00001758  1405                     790          MOVE.B      D5,D2               ; Putting back the register
0000175A  EA42                     791          ASR         #five,D2            ; Shifting bits in order to read the register
0000175C  1A02                     792          MOVE.B      D2,D5               ; Store register into D5
0000175E                           793          
0000175E  6000 F8AC                794          BRA         LOOP                ; go back to the loop
00001762                           795  
00001762  43F9 00002803            796  opCMPIB LEA         dispByte, A1        ; Display byte
00001768  103C 000E                797          MOVE.B      #14, D0             ; command for trap call to display message
0000176C  4E4F                     798          TRAP        #15                 ; trap call
0000176E                           799          
0000176E  43F9 00002770            800          LEA         space, A1           ; Display space
00001774  103C 000E                801          MOVE.B      #14, D0             ; command for trap call to display message
00001778  4E4F                     802          TRAP        #15                 ; trap call
0000177A                           803          
0000177A  4242                     804          CLR         D2
0000177C  1401                     805          MOVE.B      D1,D2
0000177E  E642                     806          ASR         #three,D2
00001780  C47C 0007                807          AND         #seven,D2
00001784  4243                     808          CLR         D3        
00001786  1601                     809          MOVE.B      D1,D3
00001788  C67C 0007                810          AND         #seven,D3
0000178C                           811          
0000178C  4241                     812          CLR         D1
0000178E  3218                     813          MOVE.W      (A0)+, D1
00001790                           814          
00001790  43F9 00002773            815          LEA         hashTag, A1           ; Display space
00001796  103C 000E                816          MOVE.B      #14, D0             ; command for trap call to display message
0000179A  4E4F                     817          TRAP        #15                 ; trap call
0000179C                           818          
0000179C  103C 0003                819          MOVE.B      #3, D0
000017A0  4E4F                     820          TRAP        #15
000017A2                           821          
000017A2  43F9 00002777            822          LEA         comma, A1           ; Display space
000017A8  103C 000E                823          MOVE.B      #14, D0             ; command for trap call to display message
000017AC  4E4F                     824          TRAP        #15                 ; trap call
000017AE                           825          
000017AE  4EB9 00002094            826          JSR         printEA
000017B4                           827          
000017B4  43F9 0000276C            828          LEA         newLine, A1           ; Display space
000017BA  103C 000E                829          MOVE.B      #14, D0             ; command for trap call to display message
000017BE  4E4F                     830          TRAP        #15                 ; trap call
000017C0                           831  
000017C0  6000 F84A                832          BRA         LOOP
000017C4                           833  
000017C4  43F9 00002806            834  opCMPIW LEA         dispWord, A1        ; Display byte
000017CA  103C 000E                835          MOVE.B      #14, D0             ; command for trap call to display message
000017CE  4E4F                     836          TRAP        #15                 ; trap call
000017D0                           837          
000017D0  43F9 00002770            838          LEA         space, A1           ; Display space
000017D6  103C 000E                839          MOVE.B      #14, D0             ; command for trap call to display message
000017DA  4E4F                     840          TRAP        #15                 ; trap call
000017DC                           841          
000017DC  4242                     842          CLR         D2
000017DE  1401                     843          MOVE.B      D1,D2
000017E0  E642                     844          ASR         #three,D2
000017E2  C47C 0007                845          AND         #seven,D2
000017E6  4243                     846          CLR         D3        
000017E8  1601                     847          MOVE.B      D1,D3
000017EA  C67C 0007                848          AND         #seven,D3
000017EE                           849          
000017EE  4241                     850          CLR         D1
000017F0  3218                     851          MOVE.W      (A0)+, D1
000017F2                           852          
000017F2  43F9 00002773            853          LEA         hashTag, A1           ; Display space
000017F8  103C 000E                854          MOVE.B      #14, D0             ; command for trap call to display message
000017FC  4E4F                     855          TRAP        #15                 ; trap call
000017FE                           856          
000017FE  103C 0003                857          MOVE.B      #3, D0
00001802  4E4F                     858          TRAP        #15
00001804                           859          
00001804  43F9 00002777            860          LEA         comma, A1           ; Display space
0000180A  103C 000E                861          MOVE.B      #14, D0             ; command for trap call to display message
0000180E  4E4F                     862          TRAP        #15                 ; trap call
00001810                           863          
00001810  4EB9 00002094            864          JSR         printEA
00001816                           865          
00001816  43F9 0000276C            866          LEA         newLine, A1           ; Display space
0000181C  103C 000E                867          MOVE.B      #14, D0             ; command for trap call to display message
00001820  4E4F                     868          TRAP        #15                 ; trap call
00001822  6000 F7E8                869          BRA         LOOP
00001826                           870  
00001826  43F9 00002809            871  opCMPIL LEA         dispLong, A1        ; Display byte
0000182C  103C 000E                872          MOVE.B      #14, D0             ; command for trap call to display message
00001830  4E4F                     873          TRAP        #15                 ; trap call
00001832                           874          
00001832  43F9 00002770            875          LEA         space, A1           ; Display space
00001838  103C 000E                876          MOVE.B      #14, D0             ; command for trap call to display message
0000183C  4E4F                     877          TRAP        #15                 ; trap call
0000183E                           878          
0000183E  4242                     879          CLR         D2
00001840  1401                     880          MOVE.B      D1,D2
00001842  E642                     881          ASR         #three,D2
00001844  C47C 0007                882          AND         #seven,D2
00001848  4243                     883          CLR         D3        
0000184A  1601                     884          MOVE.B      D1,D3
0000184C  C67C 0007                885          AND         #seven,D3
00001850                           886          
00001850  4241                     887          CLR         D1
00001852  3218                     888          MOVE.W      (A0)+, D1
00001854                           889          
00001854  43F9 00002773            890          LEA         hashTag, A1           ; Display space
0000185A  103C 000E                891          MOVE.B      #14, D0             ; command for trap call to display message
0000185E  4E4F                     892          TRAP        #15                 ; trap call
00001860                           893          
00001860  103C 0003                894          MOVE.B      #3, D0
00001864  4E4F                     895          TRAP        #15
00001866                           896          
00001866  43F9 00002777            897          LEA         comma, A1           ; Display space
0000186C  103C 000E                898          MOVE.B      #14, D0             ; command for trap call to display message
00001870  4E4F                     899          TRAP        #15                 ; trap call
00001872                           900          
00001872  4EB9 00002094            901          JSR         printEA
00001878                           902          
00001878  43F9 0000276C            903          LEA         newLine, A1           ; Display space
0000187E  103C 000E                904          MOVE.B      #14, D0             ; command for trap call to display message
00001882  4E4F                     905          TRAP        #15                 ; trap call
00001884                           906          
00001884  6000 F786                907          BRA         LOOP
00001888                           908  
00001888  43F9 0000278A            909  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000188E  103C 000E                910                  MOVE.B      #14, D0             ; command for trap call to display message
00001892  4E4F                     911                  TRAP        #15                 ; trap call
00001894                           912  
00001894  43F9 00002770            913                  LEA         space, A1           ; Display space
0000189A  103C 000E                914                  MOVE.B      #14, D0             ; command for trap call to display message
0000189E  4E4F                     915                  TRAP        #15                 ; trap call
000018A0                           916                  
000018A0  4242                     917                  CLR         D2
000018A2  1218                     918                  MOVE.B      (A0)+, D1
000018A4  1401                     919                  MOVE.B      D1,D2               ; copy data over
000018A6  E642                     920                  ASR         #three,D2           ; Shift to the right to remove register
000018A8  C47C 0007                921                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
000018AC                           922                  
000018AC  4243                     923                  CLR         D3                  ; Clear D3 so we can move D1 in
000018AE  1601                     924                  MOVE.B      D1,D3               ; Move othr byte in
000018B0  C67C 0007                925                  AND         #seven,D3           ; Set everything besides register to 0
000018B4                           926                  
000018B4  4241                     927                  CLR         D1
000018B6  3218                     928                  MOVE.W      (A0)+, D1
000018B8                           929                 
000018B8                           930                  
000018B8  43F9 00002773            931                  LEA         hashTag, A1           ; Display space
000018BE  103C 000E                932                  MOVE.B      #14, D0             ; command for trap call to display message
000018C2  4E4F                     933                  TRAP        #15                 ; trap call
000018C4                           934          
000018C4  103C 0003                935                  MOVE.B      #3, D0
000018C8  4E4F                     936                  TRAP        #15
000018CA                           937          
000018CA  43F9 00002777            938                  LEA         comma, A1           ; Display space
000018D0  103C 000E                939                  MOVE.B      #14, D0             ; command for trap call to display message
000018D4  4E4F                     940                  TRAP        #15                 ; trap call
000018D6                           941                  
000018D6  4EB9 00002094            942                  JSR         printEA
000018DC                           943          
000018DC  43F9 0000276C            944                  LEA         newLine, A1           ; Display space
000018E2  103C 000E                945                  MOVE.B      #14, D0             ; command for trap call to display message
000018E6  4E4F                     946                  TRAP        #15                 ; trap call
000018E8                           947                  
000018E8                           948                  
000018E8  6000 F722                949                  BRA         LOOP                
000018EC                           950          
000018EC                           951  opDynBCLR       
000018EC  4241                     952                  CLR         D1
000018EE  1218                     953                  MOVE.B      (A0)+,D1            ; Copy second byte in
000018F0  1601                     954                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
000018F2  E243                     955                  ASR         #one,D3             ; Shift register over to the end
000018F4  C67C 0007                956                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
000018F8                           957                  
000018F8  1401                     958                  MOVE.B      D1,D2
000018FA  EC42                     959                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
000018FC  B47C 0002                960                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
00001900  6600 0E66                961                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
00001904                           962  
00001904                           963                  
00001904  43F9 0000278A            964                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
0000190A  103C 000E                965                  MOVE.B      #14, D0             ; command for trap call to display message
0000190E  4E4F                     966                  TRAP        #15                 ; trap call  
00001910                           967                  
00001910  43F9 00002770            968                  LEA         space, A1           ; Display space
00001916  103C 000E                969                  MOVE.B      #14, D0             ; command for trap call to display message
0000191A  4E4F                     970                  TRAP        #15                 ; trap call
0000191C                           971                  
0000191C  143C 0000                972                  MOVE.B      #zero,D2                
00001920  4EB9 00002094            973                  JSR         printEA
00001926                           974                  
00001926  43F9 00002777            975                  LEA         comma, A1           ; Display space
0000192C  103C 000E                976                  MOVE.B      #14, D0             ; command for trap call to display message
00001930  4E4F                     977                  TRAP        #15                 ; trap call
00001932                           978                  
00001932  4242                     979                  CLR         D2
00001934  1401                     980                  MOVE.B      D1,D2               ; Using D2 to store EA mode
00001936  E642                     981                  ASR         #three,D2           ; Remove/shift the register out
00001938  C47C 0007                982                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
0000193C                           983                  
0000193C  4243                     984                  CLR         D3                  ; Clearing D3 to avoid mashing data
0000193E  1601                     985                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
00001940  C67C 0007                986                  AND         #seven,D3           ; Change all bits except for register bits to 0
00001944                           987                  
00001944                           988  
00001944  4EB9 00002094            989                  JSR         printEA
0000194A                           990          
0000194A  43F9 0000276C            991                  LEA         newLine, A1           ; Display space
00001950  103C 000E                992                  MOVE.B      #14, D0             ; command for trap call to display message
00001954  4E4F                     993                  TRAP        #15                 ; trap call            
00001956                           994  
00001956                           995  
00001956  6000 F6B4                996                  BRA         LOOP                ; go back to the loop
0000195A                           997   
0000195A                           998  opMOVEB 
0000195A  43F9 0000278F            999          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
00001960  103C 000E               1000          MOVE.B      #14, D0             ; command for trap call to display message
00001964  4E4F                    1001          TRAP        #15                 ; trap call
00001966  43F9 00002803           1002          LEA         dispByte, A1        ; display byte
0000196C  103C 000E               1003          MOVE.B      #14, D0             ; command for trap call to display message
00001970  4E4F                    1004          TRAP        #15                 ; trap call
00001972  43F9 00002770           1005          LEA         space, A1           ; create spaces
00001978  103C 000E               1006          MOVE.B      #14, D0             ; command for trap call to display message
0000197C  4E4F                    1007          TRAP        #15                 ; trap call
0000197E                          1008          
0000197E                          1009          
0000197E  4245                    1010          CLR         D5                  ; Clear D5
00001980  1A01                    1011          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001982  E245                    1012          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001984  CA7C 0007               1013          AND         #seven,D5
00001988                          1014          
00001988  4244                    1015          CLR         D4                  ; Clear out D4
0000198A  1801                    1016          MOVE.B      D1,D4               ; Copy byte over to store destination mode
0000198C  C87C 0001               1017          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001990                          1018          
00001990  4241                    1019          CLR          D1
00001992  4242                    1020          CLR          D2
00001994  1218                    1021          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001996  1401                    1022          MOVE.B      D1,D2
00001998  EC42                    1023          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000199A  D842                    1024          ADD         D2,D4               ; Adds the remaining bits to D4
0000199C                          1025          
0000199C  4242                    1026          CLR         D2
0000199E  1401                    1027          MOVE.B      D1,D2               ; Copy new byte over to D2
000019A0  E642                    1028          ASR         #three,D2           ; Shift source register out
000019A2  C47C 0007               1029          AND         #seven,D2           ; Set everything to 0 except for the mode
000019A6                          1030          
000019A6  4243                    1031          CLR         D3
000019A8  1601                    1032          MOVE.B      D1,D3
000019AA  C67C 0007               1033          AND         #seven,D3
000019AE                          1034          
000019AE  4EB9 00002094           1035          JSR         printEA
000019B4                          1036          
000019B4  43F9 00002777           1037          LEA         comma, A1           ; Display space
000019BA  103C 000E               1038          MOVE.B      #14, D0             ; command for trap call to display message
000019BE  4E4F                    1039          TRAP        #15                 ; trap call
000019C0                          1040          
000019C0  4242                    1041          CLR         D2
000019C2  4243                    1042          CLR         D3
000019C4  1404                    1043          MOVE.B      D4,D2
000019C6  1605                    1044          MOVE.B      D5,D3
000019C8                          1045          
000019C8  4EB9 00002094           1046          JSR         printEA
000019CE                          1047          
000019CE                          1048          
000019CE  43F9 0000276C           1049          LEA         newLine, A1           ; Display space
000019D4  103C 000E               1050          MOVE.B      #14, D0             ; command for trap call to display message
000019D8  4E4F                    1051          TRAP        #15                 ; trap call            
000019DA                          1052  
000019DA                          1053  
000019DA  6000 F630               1054          BRA         LOOP                ; go back to the loop
000019DE                          1055          
000019DE                          1056  opMOVEL     
000019DE                          1057          
000019DE  4245                    1058              CLR         D5                  ; Clear D5
000019E0  1A01                    1059              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
000019E2  E245                    1060              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
000019E4  CA7C 0007               1061              AND         #seven,D5
000019E8                          1062          
000019E8  4244                    1063              CLR         D4                  ; Clear out D4
000019EA  1801                    1064              MOVE.B      D1,D4               ; Copy byte over to store destination mode
000019EC  C87C 0001               1065              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
000019F0                          1066          
000019F0  4241                    1067              CLR          D1
000019F2  4242                    1068              CLR          D2
000019F4  1218                    1069              MOVE.B      (A0)+,D1            ; Copy byte into D1
000019F6  1401                    1070              MOVE.B      D1,D2
000019F8  EC42                    1071              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000019FA  D842                    1072              ADD         D2,D4               ; Adds the remaining bits to D4
000019FC                          1073          
000019FC  B87C 0001               1074              CMP         #one,D4             ; Check if it is MOVEA
00001A00  6700 006C               1075              BEQ         opMOVEAL            ; If it is, branch off
00001A04                          1076              
00001A04  43F9 0000278F           1077              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001A0A  103C 000E               1078              MOVE.B      #14, D0             ; command for trap call to display message
00001A0E  4E4F                    1079              TRAP        #15                 ; trap call  
00001A10                          1080              
00001A10                          1081              
00001A10  43F9 00002809           1082              LEA         dispLong,A1
00001A16  103C 000E               1083              MOVE.B      #14, D0             ; command for trap call to display message
00001A1A  4E4F                    1084              TRAP        #15                 ; trap call
00001A1C                          1085              
00001A1C  43F9 00002770           1086              LEA         space, A1           ; create spaces
00001A22  103C 000E               1087              MOVE.B      #14, D0             ; command for trap call to display message
00001A26  4E4F                    1088              TRAP        #15                 ; trap call
00001A28                          1089          
00001A28  4242                    1090              CLR         D2
00001A2A  1401                    1091              MOVE.B      D1,D2               ; Copy new byte over to D2
00001A2C  E642                    1092              ASR         #three,D2           ; Shift source register out
00001A2E  C47C 0007               1093              AND         #seven,D2           ; Set everything to 0 except for the mode
00001A32                          1094          
00001A32  4243                    1095              CLR         D3
00001A34  1601                    1096              MOVE.B      D1,D3
00001A36  C67C 0007               1097              AND         #seven,D3
00001A3A                          1098              
00001A3A  4241                    1099              CLR         D1                  ; Clear D1
00001A3C  2218                    1100              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
00001A3E                          1101              
00001A3E  4EB9 00002094           1102              JSR         printEA
00001A44                          1103              
00001A44  43F9 00002777           1104              LEA         comma, A1           ; Display comma
00001A4A  103C 000E               1105              MOVE.B      #14, D0             ; command for trap call to display message
00001A4E  4E4F                    1106              TRAP        #15                 ; trap call
00001A50                          1107          
00001A50  4242                    1108              CLR         D2
00001A52  4243                    1109              CLR         D3
00001A54  1404                    1110              MOVE.B      D4,D2
00001A56  1605                    1111              MOVE.B      D5,D3
00001A58                          1112              
00001A58                          1113  
00001A58                          1114              
00001A58  4EB9 00002094           1115              JSR         printEA
00001A5E                          1116          
00001A5E                          1117          
00001A5E  43F9 0000276C           1118              LEA         newLine, A1           ; Display space
00001A64  103C 000E               1119              MOVE.B      #14, D0             ; command for trap call to display message
00001A68  4E4F                    1120              TRAP        #15                 ; trap call            
00001A6A                          1121  
00001A6A                          1122  
00001A6A  6000 F5A0               1123              BRA         LOOP                ; go back to the loop
00001A6E                          1124              
00001A6E                          1125  opMOVEAL
00001A6E                          1126  
00001A6E  43F9 00002794           1127              LEA         MOVEAmatch,A1
00001A74  103C 000E               1128              MOVE.B      #14, D0             ; command for trap call to display message
00001A78  4E4F                    1129              TRAP        #15                 ; trap call
00001A7A                          1130              
00001A7A  43F9 00002809           1131              LEA         dispLong,A1
00001A80  103C 000E               1132              MOVE.B      #14, D0             ; command for trap call to display message
00001A84  4E4F                    1133              TRAP        #15                 ; trap call
00001A86                          1134              
00001A86                          1135  
00001A86  43F9 00002770           1136              LEA         space, A1           ; create spaces
00001A8C  103C 000E               1137              MOVE.B      #14, D0             ; command for trap call to display message
00001A90  4E4F                    1138              TRAP        #15                 ; trap call
00001A92                          1139              
00001A92  4242                    1140              CLR         D2
00001A94  1401                    1141              MOVE.B      D1,D2               ; Copy new byte over to D2
00001A96  E642                    1142              ASR         #three,D2           ; Shift source register out
00001A98  C47C 0007               1143              AND         #seven,D2           ; Set everything to 0 except for the mode
00001A9C                          1144          
00001A9C  4243                    1145              CLR         D3
00001A9E  1601                    1146              MOVE.B      D1,D3
00001AA0  C67C 0007               1147              AND         #seven,D3
00001AA4                          1148              
00001AA4  4241                    1149              CLR         D1                  ; Clear D1
00001AA6  3218                    1150              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001AA8                          1151              
00001AA8                          1152              
00001AA8  4EB9 00002094           1153              JSR         printEA
00001AAE                          1154              
00001AAE  43F9 00002777           1155              LEA         comma, A1           ; Display comma
00001AB4  103C 000E               1156              MOVE.B      #14, D0             ; command for trap call to display message
00001AB8  4E4F                    1157              TRAP        #15                 ; trap call
00001ABA                          1158  
00001ABA  4242                    1159              CLR         D2
00001ABC  4243                    1160              CLR         D3
00001ABE  1404                    1161              MOVE.B      D4,D2
00001AC0  1605                    1162              MOVE.B      D5,D3
00001AC2                          1163          
00001AC2  4EB9 00002094           1164              JSR         printEA
00001AC8                          1165          
00001AC8                          1166          
00001AC8  43F9 0000276C           1167              LEA         newLine, A1           ; Display space
00001ACE  103C 000E               1168              MOVE.B      #14, D0             ; command for trap call to display message
00001AD2  4E4F                    1169              TRAP        #15                 ; trap call            
00001AD4                          1170  
00001AD4                          1171  
00001AD4  6000 F536               1172              BRA         LOOP                ; go back to the loop
00001AD8                          1173  
00001AD8                          1174  opMOVEW
00001AD8                          1175          
00001AD8  4245                    1176              CLR         D5                  ; Clear D5
00001ADA  1A01                    1177              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001ADC  E245                    1178              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001ADE  CA7C 0007               1179              AND         #seven,D5
00001AE2                          1180          
00001AE2  4244                    1181              CLR         D4                  ; Clear out D4
00001AE4  1801                    1182              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001AE6  C87C 0001               1183              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001AEA                          1184          
00001AEA  4241                    1185              CLR          D1
00001AEC  4242                    1186              CLR          D2
00001AEE  1218                    1187              MOVE.B      (A0)+,D1            ; Copy byte into D1
00001AF0  1401                    1188              MOVE.B      D1,D2
00001AF2  EC42                    1189              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001AF4  D842                    1190              ADD         D2,D4               ; Adds the remaining bits to D4
00001AF6                          1191          
00001AF6  B87C 0001               1192              CMP         #one,D4             ; Check if it is MOVEA
00001AFA  6700 006C               1193              BEQ         opMOVEAW            ; If it is, branch off
00001AFE                          1194              
00001AFE  43F9 0000278F           1195              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
00001B04  103C 000E               1196              MOVE.B      #14, D0             ; command for trap call to display message
00001B08  4E4F                    1197              TRAP        #15                 ; trap call  
00001B0A                          1198              
00001B0A  43F9 00002806           1199              LEA         dispWord,A1
00001B10  103C 000E               1200              MOVE.B      #14, D0             ; command for trap call to display message
00001B14  4E4F                    1201              TRAP        #15                 ; trap call
00001B16                          1202              
00001B16  43F9 00002770           1203              LEA         space, A1           ; create spaces
00001B1C  103C 000E               1204              MOVE.B      #14, D0             ; command for trap call to display message
00001B20  4E4F                    1205              TRAP        #15                 ; trap call
00001B22                          1206          
00001B22  4242                    1207              CLR         D2
00001B24  1401                    1208              MOVE.B      D1,D2               ; Copy new byte over to D2
00001B26  E642                    1209              ASR         #three,D2           ; Shift source register out
00001B28  C47C 0007               1210              AND         #seven,D2           ; Set everything to 0 except for the mode
00001B2C                          1211          
00001B2C  4243                    1212              CLR         D3
00001B2E  1601                    1213              MOVE.B      D1,D3
00001B30  C67C 0007               1214              AND         #seven,D3
00001B34                          1215              
00001B34  4241                    1216              CLR         D1                  ; Clear D1
00001B36  3218                    1217              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001B38                          1218              
00001B38  4EB9 00002094           1219              JSR         printEA
00001B3E                          1220              
00001B3E  43F9 00002777           1221              LEA         comma, A1           ; Display comma
00001B44  103C 000E               1222              MOVE.B      #14, D0             ; command for trap call to display message
00001B48  4E4F                    1223              TRAP        #15                 ; trap call
00001B4A                          1224          
00001B4A  4242                    1225              CLR         D2
00001B4C  4243                    1226              CLR         D3
00001B4E  1404                    1227              MOVE.B      D4,D2
00001B50  1605                    1228              MOVE.B      D5,D3
00001B52                          1229              
00001B52                          1230  
00001B52                          1231              
00001B52  4EB9 00002094           1232              JSR         printEA
00001B58                          1233          
00001B58                          1234          
00001B58  43F9 0000276C           1235              LEA         newLine, A1           ; Display space
00001B5E  103C 000E               1236              MOVE.B      #14, D0             ; command for trap call to display message
00001B62  4E4F                    1237              TRAP        #15                 ; trap call            
00001B64                          1238  
00001B64                          1239  
00001B64  6000 F4A6               1240              BRA         LOOP                ; go back to the loop
00001B68                          1241  opMOVEAW  
00001B68  43F9 00002794           1242              LEA         MOVEAmatch,A1
00001B6E  103C 000E               1243              MOVE.B      #14, D0             ; command for trap call to display message
00001B72  4E4F                    1244              TRAP        #15                 ; trap call
00001B74                          1245              
00001B74  43F9 00002806           1246              LEA         dispWord,A1
00001B7A  103C 000E               1247              MOVE.B      #14, D0             ; command for trap call to display message
00001B7E  4E4F                    1248              TRAP        #15                 ; trap call
00001B80                          1249              
00001B80                          1250  
00001B80  43F9 00002770           1251              LEA         space, A1           ; create spaces
00001B86  103C 000E               1252              MOVE.B      #14, D0             ; command for trap call to display message
00001B8A  4E4F                    1253              TRAP        #15                 ; trap call
00001B8C                          1254              
00001B8C  4242                    1255              CLR         D2
00001B8E  1401                    1256              MOVE.B      D1,D2               ; Copy new byte over to D2
00001B90  E642                    1257              ASR         #three,D2           ; Shift source register out
00001B92  C47C 0007               1258              AND         #seven,D2           ; Set everything to 0 except for the mode
00001B96                          1259          
00001B96  4243                    1260              CLR         D3
00001B98  1601                    1261              MOVE.B      D1,D3
00001B9A  C67C 0007               1262              AND         #seven,D3
00001B9E                          1263              
00001B9E  4241                    1264              CLR         D1                  ; Clear D1
00001BA0  3218                    1265              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001BA2                          1266              
00001BA2                          1267              
00001BA2  4EB9 00002094           1268              JSR         printEA
00001BA8                          1269              
00001BA8  43F9 00002777           1270              LEA         comma, A1           ; Display comma
00001BAE  103C 000E               1271              MOVE.B      #14, D0             ; command for trap call to display message
00001BB2  4E4F                    1272              TRAP        #15                 ; trap call
00001BB4                          1273  
00001BB4  4242                    1274              CLR         D2
00001BB6  4243                    1275              CLR         D3
00001BB8  1404                    1276              MOVE.B      D4,D2
00001BBA  1605                    1277              MOVE.B      D5,D3
00001BBC                          1278          
00001BBC  4EB9 00002094           1279              JSR         printEA
00001BC2                          1280          
00001BC2                          1281          
00001BC2  43F9 0000276C           1282              LEA         newLine, A1           ; Display space
00001BC8  103C 000E               1283              MOVE.B      #14, D0             ; command for trap call to display message
00001BCC  4E4F                    1284              TRAP        #15                 ; trap call            
00001BCE                          1285  
00001BCE                          1286  
00001BCE  6000 F43C               1287              BRA         LOOP                ; go back to the loop
00001BD2                          1288  
00001BD2                          1289  opNEG   
00001BD2  43F9 0000279A           1290              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001BD8  103C 000E               1291              MOVE.B      #14, D0             ; command for trap call to display message
00001BDC  4E4F                    1292              TRAP        #15                 ; trap call
00001BDE                          1293          
00001BDE                          1294          
00001BDE  1218                    1295              MOVE.B      (A0)+, D1
00001BE0  1401                    1296              MOVE.B      D1,D2               ; copy data over
00001BE2  EC42                    1297              ASR         #six,D2
00001BE4                          1298              
00001BE4  B47C 0000               1299              CMP         #zero,D2
00001BE8  6700 0016               1300              BEQ         opNEGB
00001BEC  B47C 0001               1301              CMP         #one,D2
00001BF0  6700 004E               1302              BEQ         opNEGL
00001BF4  B47C 0002               1303              CMP         #two,D2
00001BF8  6700 0086               1304              BEQ         opNEGW
00001BFC  6000 0AE0               1305              BRA         INVALID
00001C00                          1306  opNEGB
00001C00                          1307  
00001C00  43F9 00002803           1308              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001C06  103C 000E               1309              MOVE.B      #14, D0             ; command for trap call to display message
00001C0A  4E4F                    1310              TRAP        #15                 ; trap call
00001C0C                          1311          
00001C0C  43F9 00002770           1312              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001C12  103C 000E               1313              MOVE.B      #14, D0             ; command for trap call to display message
00001C16  4E4F                    1314              TRAP        #15                 ; trap call
00001C18                          1315          
00001C18  4242                    1316              CLR         D2                  ; Clear Data register 2
00001C1A  3401                    1317              MOVE        D1,D2               ; Move byte into D2
00001C1C  E642                    1318              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001C1E  C47C 0007               1319              AND         #seven,D2           ; Stores mode
00001C22                          1320              
00001C22  4243                    1321              CLR         D3
00001C24  3601                    1322              MOVE        D1,D3
00001C26  C67C 0007               1323              AND         #seven,D3
00001C2A                          1324          
00001C2A  4EB9 00002094           1325              JSR         printEA
00001C30                          1326                  
00001C30  43F9 0000276C           1327              LEA         newLine, A1           ; Display space
00001C36  103C 000E               1328              MOVE.B      #14, D0             ; command for trap call to display message
00001C3A  4E4F                    1329              TRAP        #15                 ; trap call  
00001C3C                          1330          
00001C3C  6000 F3CE               1331              BRA         LOOP
00001C40                          1332                  
00001C40                          1333  
00001C40                          1334  opNEGL
00001C40                          1335  
00001C40  43F9 00002809           1336              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001C46  103C 000E               1337              MOVE.B      #14, D0             ; command for trap call to display message
00001C4A  4E4F                    1338              TRAP        #15                 ; trap call
00001C4C                          1339  
00001C4C  43F9 00002770           1340              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001C52  103C 000E               1341              MOVE.B      #14, D0             ; command for trap call to display message
00001C56  4E4F                    1342              TRAP        #15                 ; trap call
00001C58                          1343                  
00001C58  4242                    1344              CLR         D2                  ; Clear Data register 2
00001C5A  3401                    1345              MOVE        D1,D2               ; Move byte into D2
00001C5C  E642                    1346              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001C5E  C47C 0007               1347              AND         #seven,D2           ; Stores mode
00001C62                          1348          
00001C62  4243                    1349              CLR         D3
00001C64  3601                    1350              MOVE        D1,D3
00001C66  C67C 0007               1351              AND         #seven,D3
00001C6A                          1352          
00001C6A  4EB9 00002094           1353              JSR         printEA
00001C70                          1354                      
00001C70  43F9 0000276C           1355              LEA         newLine, A1         ; Display space
00001C76  103C 000E               1356              MOVE.B      #14, D0             ; command for trap call to display message
00001C7A  4E4F                    1357              TRAP        #15                 ; trap call  
00001C7C                          1358          
00001C7C  6000 F38E               1359              BRA         LOOP
00001C80                          1360          
00001C80                          1361  
00001C80                          1362  opNEGW
00001C80                          1363  
00001C80  43F9 00002806           1364              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001C86  103C 000E               1365              MOVE.B      #14, D0             ; command for trap call to display message
00001C8A  4E4F                    1366              TRAP        #15                 ; trap call
00001C8C                          1367          
00001C8C  43F9 00002770           1368              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001C92  103C 000E               1369              MOVE.B      #14, D0             ; command for trap call to display message
00001C96  4E4F                    1370              TRAP        #15                 ; trap call        
00001C98                          1371                  
00001C98  4242                    1372              CLR         D2                  ; Clear Data register 2
00001C9A  3401                    1373              MOVE        D1,D2               ; Move byte into D2
00001C9C  E642                    1374              ASR         #three,D2           ; Shift mode into place and moves mode into place
00001C9E  C47C 0007               1375              AND         #seven,D2           ; Stores mode
00001CA2                          1376          
00001CA2  4243                    1377              CLR         D3
00001CA4  3601                    1378              MOVE        D1,D3
00001CA6  C67C 0007               1379              AND         #seven,D3
00001CAA                          1380          
00001CAA  4EB9 00002094           1381              JSR         printEA
00001CB0                          1382              
00001CB0  43F9 0000276C           1383              LEA         newLine, A1           ; Display space
00001CB6  103C 000E               1384              MOVE.B      #14, D0             ; command for trap call to display message
00001CBA  4E4F                    1385              TRAP        #15                 ; trap call  
00001CBC                          1386          
00001CBC  6000 F34E               1387              BRA         LOOP
00001CC0                          1388  
00001CC0                          1389  opRTSJSR
00001CC0                          1390          
00001CC0  1218                    1391              MOVE.B      (A0)+, D1
00001CC2                          1392              
00001CC2  1401                    1393              MOVE.B      D1,D2               ; copy data over
00001CC4  B47C 0075               1394              CMP         #117,D2
00001CC8  6700 0050               1395              BEQ         opRTS
00001CCC                          1396              
00001CCC  EC42                    1397              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
00001CCE  B47C 0002               1398              CMP         #two,D2             ; Checking if it is JSR
00001CD2  6700 0006               1399              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001CD6                          1400  
00001CD6  6000 0A06               1401              BRA         invalid
00001CDA                          1402  
00001CDA                          1403  opJSR
00001CDA                          1404                        
00001CDA  43F9 000027A2           1405              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
00001CE0  103C 000E               1406              MOVE.B      #14, D0             ; command for trap call to display message
00001CE4  4E4F                    1407              TRAP        #15                 ; trap call
00001CE6                          1408              
00001CE6  43F9 00002770           1409              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001CEC  103C 000E               1410              MOVE.B      #14, D0             ; command for trap call to display message
00001CF0  4E4F                    1411              TRAP        #15                 ; trap call
00001CF2                          1412              
00001CF2  4242                    1413              CLR         D2
00001CF4  4243                    1414              CLR         D3
00001CF6                          1415              
00001CF6  1401                    1416              MOVE.B      D1,D2
00001CF8  E642                    1417              ASR         #three,D2
00001CFA  C47C 0007               1418              AND         #seven,D2
00001CFE                          1419              
00001CFE  1601                    1420              MOVE.B      D1,D3
00001D00  C67C 0007               1421              AND         #seven,D3
00001D04                          1422              
00001D04  4EB9 00002094           1423              JSR         printEA
00001D0A                          1424              
00001D0A  43F9 0000276C           1425              LEA         newLine, A1           ; Display space
00001D10  103C 000E               1426              MOVE.B      #14, D0             ; command for trap call to display message
00001D14  4E4F                    1427              TRAP        #15                 ; trap call  
00001D16                          1428              
00001D16  6000 F2F4               1429              BRA         loop            
00001D1A                          1430  opRTS
00001D1A                          1431  
00001D1A  43F9 0000279E           1432              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
00001D20  103C 000E               1433              MOVE.B      #14, D0             ; command for trap call to display message
00001D24  4E4F                    1434              TRAP        #15                 ; trap call
00001D26                          1435              
00001D26  43F9 0000276C           1436              LEA         newLine, A1           ; Display space
00001D2C  103C 000E               1437              MOVE.B      #14, D0             ; command for trap call to display message
00001D30  4E4F                    1438              TRAP        #15                 ; trap call 
00001D32                          1439              
00001D32  6000 F2D8               1440              BRA         loop
00001D36                          1441  
00001D36                          1442  opMOVEMLEA
00001D36  4242                    1443              CLR         D2                  ; Clear D2
00001D38  1401                    1444              MOVE.B      D1,D2               ; Copy byte over
00001D3A  C47C 000F               1445              AND         #secNib,D2          ; Check only the second nibble
00001D3E  B47C 000C               1446              CMP         #twelve,D2          ; Compare the second nibble to twelve
00001D42  6700 000E               1447              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
00001D46  B47C 0008               1448              CMP         #eight,D2           ; Compare the second nibble to eight
00001D4A  6700 0006               1449              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
00001D4E  6000 001A               1450              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
00001D52                          1451              
00001D52                          1452  opMOVEM
00001D52                          1453  
00001D52  43F9 0000279E           1454              LEA         RTSMatch, A1       ; we know that the opcode will be MOVEM, so load A1 to print message
00001D58  103C 000E               1455              MOVE.B      #14, D0             ; command for trap call to display message
00001D5C  4E4F                    1456              TRAP        #15                 ; trap call
00001D5E                          1457              
00001D5E  4244                    1458              CLR         D4                  ; Clearing D4 to store dr field
00001D60  1801                    1459              MOVE.B      D1,D4               ; Moving byte to find dr field
00001D62  E444                    1460              ASR         #two,D4             ; Moving dr field to readable spot
00001D64  C87C 0001               1461              AND         #one,D4             ; seting everything except dr to 0
00001D68                          1462              
00001D68  1218                    1463              MOVE.B      (A0)+, D1
00001D6A                          1464              
00001D6A                          1465  
00001D6A                          1466  opLEA
00001D6A                          1467  
00001D6A                          1468  ***********************************************************************************************************
00001D6A                          1469  *
00001D6A                          1470  *               SUBQ OPCODE
00001D6A                          1471  *
00001D6A                          1472  ***********************************************************************************************************
00001D6A                          1473  
00001D6A                          1474  opSUBQ      
00001D6A  43F9 000027B0           1475              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
00001D70  103C 000E               1476              MOVE.B      #14, D0             ; command for trap call to display message
00001D74  4E4F                    1477              TRAP        #15                 ; trap call
00001D76                          1478              
00001D76  1401                    1479              MOVE.B      D1,D2
00001D78  EE42                    1480              ASR         #seven,D2           ; Move bits 7 places over to find size
00001D7A  C47C 0007               1481              AND         #$07,D2
00001D7E                          1482              
00001D7E                          1483              ; Find size bits
00001D7E  B43C 0000               1484              CMP.B       #zero,D2
00001D82  6700 0012               1485              BEQ         opSUBQB             ; Byte in size
00001D86  B43C 0001               1486              CMP.B       #one,D2
00001D8A  6700 0028               1487              BEQ         opSUBQW             ; Word in size
00001D8E  B43C 0002               1488              CMP.B       #two,D2
00001D92  6700 0030               1489              BEQ         opSUBQL             ; Long in size
00001D96                          1490              
00001D96                          1491              
00001D96  43F9 00002803           1492  opSUBQB     LEA         dispByte,A1
00001D9C  103C 000E               1493              MOVE.B      #14,D0
00001DA0  4E4F                    1494              TRAP        #15 
00001DA2                          1495              
00001DA2                          1496              ; Find Immediate Data
00001DA2  4242                    1497              CLR         D2
00001DA4  1401                    1498              MOVE.B      D1,D2
00001DA6  E042                    1499              ASR         #eight,D2
00001DA8  E242                    1500              ASR         #one,D2
00001DAA  4EB9 000026E4           1501              JSR         PrntImm
00001DB0                          1502              
00001DB0  6000 F25A               1503              BRA         LOOP
00001DB4                          1504              
00001DB4  43F9 00002806           1505  opSUBQW     LEA         dispWord,A1
00001DBA  103C 000E               1506              MOVE.B      #14,D0
00001DBE  4E4F                    1507              TRAP        #15
00001DC0                          1508              
00001DC0  6000 F24A               1509              BRA         LOOP
00001DC4                          1510              
00001DC4  43F9 00002809           1511  opSUBQL     LEA         dispLong,A1
00001DCA  103C 000E               1512              MOVE.B      #14,D0
00001DCE  4E4F                    1513              TRAP        #15
00001DD0                          1514              
00001DD0  4246                    1515              CLR         D6
00001DD2  1C3C 0001               1516              MOVE.B      #1,D6
00001DD6                          1517              
00001DD6  4EB9 000026E4           1518              JSR         PrntImm         
00001DDC                          1519              
00001DDC  6000 F22E               1520              BRA         LOOP            ; trap call
00001DE0                          1521  
00001DE0                          1522  ***********************************************************************************************************
00001DE0                          1523  *
00001DE0                          1524  *               BRA OPCODE
00001DE0                          1525  *
00001DE0                          1526  ***********************************************************************************************************
00001DE0                          1527              
00001DE0  43F9 000027B5           1528  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001DE6  103C 000E               1529          MOVE.B      #14, D0             ; command for trap call to display message
00001DEA  4E4F                    1530          TRAP        #15                 ; trap call
00001DEC                          1531          
00001DEC  4242                    1532          CLR         D2
00001DEE  4243                    1533          CLR         D3      
00001DF0                          1534  
00001DF0  43F9 00002770           1535          LEA         space,A1
00001DF6  103C 000E               1536          MOVE.B      #14,D0
00001DFA  4E4F                    1537          TRAP        #15
00001DFC                          1538          
00001DFC  143C 0007               1539          MOVE.B      #seven,D2
00001E00  1218                    1540          MOVE.B      (A0)+,D1
00001E02  4EB9 00002094           1541          JSR         printEA
00001E08                          1542          
00001E08  43F9 0000276C           1543          LEA         newLine, A1           ; create new line
00001E0E  103C 000E               1544          MOVE.B      #14, D0             ; command for trap call to display message
00001E12  4E4F                    1545          TRAP        #15                 ; trap call
00001E14                          1546  
00001E14  6000 F1F6               1547          BRA         LOOP
00001E18                          1548          
00001E18                          1549          
00001E18  43F9 000027B9           1550  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001E1E  103C 000E               1551          MOVE.B      #14, D0             ; command for trap call to display message
00001E22  4E4F                    1552          TRAP        #15                 ; trap call
00001E24                          1553          
00001E24  4242                    1554          CLR         D2
00001E26  4243                    1555          CLR         D3      
00001E28                          1556  
00001E28  43F9 00002770           1557          LEA         space,A1
00001E2E  103C 000E               1558          MOVE.B      #14,D0
00001E32  4E4F                    1559          TRAP        #15
00001E34                          1560          
00001E34  143C 0007               1561          MOVE.B      #seven,D2
00001E38  1218                    1562          MOVE.B      (A0)+,D1
00001E3A  4EB9 00002094           1563          JSR         printEA
00001E40                          1564          
00001E40  43F9 0000276C           1565          LEA         newLine, A1           ; create new line
00001E46  103C 000E               1566          MOVE.B      #14, D0             ; command for trap call to display message
00001E4A  4E4F                    1567          TRAP        #15                 ; trap call
00001E4C                          1568  
00001E4C  43F9 000027BD           1569  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001E52  103C 000E               1570          MOVE.B      #14, D0             ; command for trap call to display message
00001E56  4E4F                    1571          TRAP        #15                 ; trap call
00001E58                          1572          
00001E58  4242                    1573          CLR         D2
00001E5A  4243                    1574          CLR         D3      
00001E5C                          1575  
00001E5C  43F9 00002770           1576          LEA         space,A1
00001E62  103C 000E               1577          MOVE.B      #14,D0
00001E66  4E4F                    1578          TRAP        #15
00001E68                          1579          
00001E68  143C 0007               1580          MOVE.B      #seven,D2
00001E6C  1218                    1581          MOVE.B      (A0)+,D1
00001E6E  4EB9 00002094           1582          JSR         printEA
00001E74                          1583          
00001E74  43F9 0000276C           1584          LEA         newLine, A1           ; create new line
00001E7A  103C 000E               1585          MOVE.B      #14, D0             ; command for trap call to display message
00001E7E  4E4F                    1586          TRAP        #15                 ; trap call
00001E80                          1587  
00001E80  43F9 000027C1           1588  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001E86  103C 000E               1589          MOVE.B      #14, D0             ; command for trap call to display message
00001E8A  4E4F                    1590          TRAP        #15                 ; trap call
00001E8C                          1591          
00001E8C  4242                    1592          CLR         D2
00001E8E  4243                    1593          CLR         D3      
00001E90                          1594  
00001E90  43F9 00002770           1595          LEA         space,A1
00001E96  103C 000E               1596          MOVE.B      #14,D0
00001E9A  4E4F                    1597          TRAP        #15
00001E9C                          1598          
00001E9C  143C 0007               1599          MOVE.B      #seven,D2
00001EA0  1218                    1600          MOVE.B      (A0)+,D1
00001EA2  4EB9 00002094           1601          JSR         printEA
00001EA8                          1602          
00001EA8  43F9 0000276C           1603          LEA         newLine, A1           ; create new line
00001EAE  103C 000E               1604          MOVE.B      #14, D0             ; command for trap call to display message
00001EB2  4E4F                    1605          TRAP        #15                 ; trap call
00001EB4                          1606  
00001EB4  43F9 000027C5           1607  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001EBA  103C 000E               1608          MOVE.B      #14, D0             ; command for trap call to display message
00001EBE  4E4F                    1609          TRAP        #15                 ; trap call
00001EC0                          1610          
00001EC0  4242                    1611          CLR         D2
00001EC2  4243                    1612          CLR         D3      
00001EC4                          1613  
00001EC4  43F9 00002770           1614          LEA         space,A1
00001ECA  103C 000E               1615          MOVE.B      #14,D0
00001ECE  4E4F                    1616          TRAP        #15
00001ED0                          1617          
00001ED0  143C 0007               1618          MOVE.B      #seven,D2
00001ED4  1218                    1619          MOVE.B      (A0)+,D1
00001ED6  4EB9 00002094           1620          JSR         printEA
00001EDC                          1621          
00001EDC  43F9 0000276C           1622          LEA         newLine, A1           ; create new line
00001EE2  103C 000E               1623          MOVE.B      #14, D0             ; command for trap call to display message
00001EE6  4E4F                    1624          TRAP        #15                 ; trap call
00001EE8                          1625  
00001EE8                          1626  ***********************************************************************************************************
00001EE8                          1627  *
00001EE8                          1628  *               SUB OPCODE
00001EE8                          1629  *
00001EE8                          1630  ***********************************************************************************************************
00001EE8                          1631  
00001EE8  43F9 000027D1           1632  opSUB       LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001EEE  103C 000E               1633              MOVE.B      #14, D0             ; command for trap call to display message
00001EF2  4E4F                    1634              TRAP        #15                 ; trap call
00001EF4                          1635          
00001EF4                          1636          
00001EF4  E141                    1637              ASL         #eight,D1
00001EF6  1218                    1638              MOVE.B      (A0)+,D1
00001EF8  4242                    1639              CLR         D2
00001EFA                          1640              
00001EFA  3401                    1641              MOVE.W      D1,D2
00001EFC  EC42                    1642              ASR         #six,D2         ; Move bits 7 places over to find opmode
00001EFE  C47C 0007               1643              AND         #seven,D2
00001F02                          1644              
00001F02                          1645              ; These are for DN - EA
00001F02  B43C 0000               1646              CMP.B       #zero,D2
00001F06  6700 002A               1647              BEQ         opSUBB              ; Byte in opmode
00001F0A  B43C 0001               1648              CMP.B       #one,D2
00001F0E  6700 007C               1649              BEQ         opSUBW              ; Word in opmode
00001F12  B43C 0002               1650              CMP.B       #two,D2
00001F16  6700 00CE               1651              BEQ         opSUBL              ; Long in opmode
00001F1A                          1652              
00001F1A                          1653              ; These are for EA - DN
00001F1A  B43C 0004               1654              CMP.B       #four,D2
00001F1E  6700 0012               1655              BEQ         opSUBB              ; Byte in opmode
00001F22  B43C 0005               1656              CMP.B       #five,D2
00001F26  6700 0064               1657              BEQ         opSUBW              ; Word in opmode
00001F2A  B43C 0006               1658              CMP.B       #six,D2
00001F2E  6700 00B6               1659              BEQ         opSUBL              ; Long in opmode
00001F32                          1660              
00001F32  43F9 00002803           1661  opSUBB      LEA         dispByte,A1
00001F38  103C 000E               1662              MOVE.B      #14,D0
00001F3C  4E4F                    1663              TRAP        #15
00001F3E                          1664              
00001F3E  43F9 00002770           1665              LEA         space, A1           ; Display space
00001F44  103C 000E               1666              MOVE.B      #14, D0             ; command for trap call to display message
00001F48  4E4F                    1667              TRAP        #15                 ; trap call         
00001F4A                          1668              
00001F4A  1401                    1669              MOVE.B      D1,D2
00001F4C  E642                    1670              ASR         #3,D2
00001F4E  C47C 0007               1671              AND         #$07,D2
00001F52  3601                    1672              MOVE.W      D1,D3
00001F54  C67C 0007               1673              AND         #$07,D3
00001F58  4EB9 00002094           1674              JSR         printEA         ; Determines the "left" operand register
00001F5E                          1675              
00001F5E  43F9 00002777           1676              LEA         comma, A1           ; Display space
00001F64  103C 000E               1677              MOVE.B      #14, D0             ; command for trap call to display message
00001F68  4E4F                    1678              TRAP        #15                 ; trap call
00001F6A                          1679              
00001F6A  4242                    1680              CLR         D2
00001F6C  3601                    1681              MOVE.W      D1,D3
00001F6E  E043                    1682              ASR         #eight,D3
00001F70  E243                    1683              ASR         #one,D3
00001F72  C67C 0007               1684              AND         #$07,D3
00001F76  4EB9 00002094           1685              JSR         printEA
00001F7C                          1686              
00001F7C  43F9 0000276C           1687              LEA         newLine,A1
00001F82  103C 000E               1688              MOVE.B      #14,D0
00001F86  4E4F                    1689              TRAP        #15
00001F88                          1690              
00001F88  6000 F082               1691              BRA         LOOP
00001F8C                          1692              
00001F8C                          1693              
00001F8C  43F9 00002806           1694  opSUBW      LEA         dispWord,A1
00001F92  103C 000E               1695              MOVE.B      #14,D0
00001F96  4E4F                    1696              TRAP        #15
00001F98                          1697              
00001F98  43F9 00002770           1698              LEA         space, A1           ; Display space
00001F9E  103C 000E               1699              MOVE.B      #14, D0             ; command for trap call to display message
00001FA2  4E4F                    1700              TRAP        #15                 ; trap call         
00001FA4                          1701              
00001FA4  1401                    1702              MOVE.B      D1,D2
00001FA6  E642                    1703              ASR         #3,D2
00001FA8  C47C 0007               1704              AND         #$07,D2
00001FAC  3601                    1705              MOVE.W      D1,D3
00001FAE  C67C 0007               1706              AND         #$07,D3
00001FB2  4EB9 00002094           1707              JSR         printEA         ; Determines the "left" operand register
00001FB8                          1708              
00001FB8  43F9 00002777           1709              LEA         comma, A1           ; Display space
00001FBE  103C 000E               1710              MOVE.B      #14, D0             ; command for trap call to display message
00001FC2  4E4F                    1711              TRAP        #15                 ; trap call
00001FC4                          1712              
00001FC4  4242                    1713              CLR         D2
00001FC6  3601                    1714              MOVE.W      D1,D3
00001FC8  E043                    1715              ASR         #eight,D3
00001FCA  E243                    1716              ASR         #one,D3
00001FCC  C67C 0007               1717              AND         #$07,D3
00001FD0  4EB9 00002094           1718              JSR         printEA
00001FD6                          1719              
00001FD6  43F9 0000276C           1720              LEA         newLine,A1
00001FDC  103C 000E               1721              MOVE.B      #14,D0
00001FE0  4E4F                    1722              TRAP        #15
00001FE2                          1723              
00001FE2  6000 F028               1724              BRA         LOOP
00001FE6                          1725              
00001FE6  43F9 00002809           1726  opSUBL      LEA         dispLong,A1
00001FEC  103C 000E               1727              MOVE.B      #14,D0
00001FF0  4E4F                    1728              TRAP        #15
00001FF2                          1729              
00001FF2  43F9 00002770           1730              LEA         space, A1           ; Display space
00001FF8  103C 000E               1731              MOVE.B      #14, D0             ; command for trap call to display message
00001FFC  4E4F                    1732              TRAP        #15                 ; trap call         
00001FFE                          1733              
00001FFE  1401                    1734              MOVE.B      D1,D2
00002000  E642                    1735              ASR         #3,D2
00002002  C47C 0007               1736              AND         #$07,D2
00002006  3601                    1737              MOVE.W      D1,D3
00002008  C67C 0007               1738              AND         #$07,D3
0000200C  4EB9 00002094           1739              JSR         printEA         ; Determines the "left" operand register
00002012                          1740              
00002012  43F9 00002777           1741              LEA         comma, A1           ; Display space
00002018  103C 000E               1742              MOVE.B      #14, D0             ; command for trap call to display message
0000201C  4E4F                    1743              TRAP        #15                 ; trap call
0000201E                          1744              
0000201E  4242                    1745              CLR         D2
00002020  3601                    1746              MOVE.W      D1,D3
00002022  E043                    1747              ASR         #eight,D3
00002024  E243                    1748              ASR         #one,D3
00002026  C67C 0007               1749              AND         #$07,D3
0000202A  4EB9 00002094           1750              JSR         printEA
00002030                          1751              
00002030  43F9 0000276C           1752              LEA         newLine,A1
00002036  103C 000E               1753              MOVE.B      #14,D0
0000203A  4E4F                    1754              TRAP        #15
0000203C                          1755              
0000203C  6000 EFCE               1756              BRA         LOOP
00002040                          1757          
00002040                          1758          
00002040  43F9 000027DD           1759  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00002046  103C 000E               1760          MOVE.B      #14, D0             ; command for trap call to display message
0000204A  4E4F                    1761          TRAP        #15                 ; trap call
0000204C                          1762  
0000204C  43F9 000027F7           1763  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002052  103C 000E               1764          MOVE.B      #14, D0             ; command for trap call to display message
00002056  4E4F                    1765          TRAP        #15                 ; trap call
00002058                          1766  
00002058  43F9 000027F3           1767  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000205E  103C 000E               1768          MOVE.B      #14, D0             ; command for trap call to display message
00002062  4E4F                    1769          TRAP        #15                 ; trap call
00002064                          1770  
00002064  43F9 000027EF           1771  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
0000206A  103C 000E               1772          MOVE.B      #14, D0             ; command for trap call to display message
0000206E  4E4F                    1773          TRAP        #15                 ; trap call
00002070                          1774  
00002070  43F9 000027EB           1775  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00002076  103C 000E               1776          MOVE.B      #14, D0             ; command for trap call to display message
0000207A  4E4F                    1777          TRAP        #15                 ; trap call
0000207C                          1778  
0000207C  43F9 000027FF           1779  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00002082  103C 000E               1780          MOVE.B      #14, D0             ; command for trap call to display message
00002086  4E4F                    1781          TRAP        #15                 ; trap call
00002088                          1782  
00002088  43F9 000027FB           1783  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
0000208E  103C 000E               1784          MOVE.B      #14, D0             ; command for trap call to display message
00002092  4E4F                    1785          TRAP        #15                 ; trap call
00002094                          1786  
00002094                          1787  
00002094                          1788          
00002094                          1789  ***********************************************************************************************************
00002094                          1790  *
00002094                          1791  *                                           EA Print Check
00002094                          1792  *
00002094                          1793  ***********************************************************************************************************
00002094  48E7 FF7E               1794  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00002098                          1795  
00002098  B43C 0000               1796              CMP.B       #zero, D2
0000209C  6700 002E               1797              BEQ         pDataReg
000020A0  B43C 0001               1798              CMP.B       #one, D2
000020A4  6700 00E6               1799              BEQ         pAddrReg
000020A8  B43C 0002               1800              CMP.B       #two, D2
000020AC  6700 019E               1801              BEQ         pAddrDir
000020B0  B43C 0003               1802              CMP.B       #three, D2
000020B4  6700 02C2               1803              BEQ         pAddrPost
000020B8  B43C 0004               1804              CMP.B       #four, D2
000020BC  6700 0446               1805              BEQ         pAddrDec
000020C0  B43C 0007               1806              CMP.B       #seven, D2
000020C4  6700 0576               1807              BEQ         pHex
000020C8  6000 0614               1808              BRA         invalid
000020CC                          1809  
000020CC                          1810  ***********************************************************************************************************
000020CC                          1811  * Data Register        
000020CC  B63C 0000               1812  pDataReg    CMP.B   #zero,D3
000020D0  6700 003A               1813              BEQ     displayD0
000020D4  B63C 0001               1814              CMP.B   #one,D3
000020D8  6700 0042               1815              BEQ     displayD1
000020DC  B63C 0002               1816              CMP.B   #two,D3
000020E0  6700 004A               1817              BEQ     displayD2
000020E4  B63C 0003               1818              CMP.B   #three,D3
000020E8  6700 0052               1819              BEQ     displayD3
000020EC  B63C 0004               1820              CMP.B   #four,D3
000020F0  6700 005A               1821              BEQ     displayD4
000020F4  B63C 0005               1822              CMP.B   #five,D3
000020F8  6700 0062               1823              BEQ     displayD5
000020FC  B63C 0006               1824              CMP.B   #six,D3
00002100  6700 006A               1825              BEQ     displayD6
00002104  B63C 0007               1826              CMP.B   #seven,D3
00002108  6700 0072               1827              BEQ     displayD7
0000210C                          1828              
0000210C  43F9 00002826           1829  displayD0   LEA         dispD0, A1          ; Display space
00002112  103C 000E               1830              MOVE.B      #14, D0             ; command for trap call to display message
00002116  4E4F                    1831              TRAP        #15                 ; trap call
00002118  6000 05C4               1832              BRA         endSUB              ; go to the end of the subroutine
0000211C                          1833              
0000211C  43F9 00002829           1834  displayD1   LEA         dispD1, A1          ; Display space
00002122  103C 000E               1835              MOVE.B      #14, D0             ; command for trap call to display message
00002126  4E4F                    1836              TRAP        #15                 ; trap call
00002128  6000 05B4               1837              BRA         endSUB              ; go to the end of the subroutine
0000212C                          1838  
0000212C  43F9 0000282C           1839  displayD2   LEA         dispD2, A1          ; Display space
00002132  103C 000E               1840              MOVE.B      #14, D0             ; command for trap call to display message
00002136  4E4F                    1841              TRAP        #15                 ; trap call
00002138  6000 05A4               1842              BRA         endSUB              ; go to the end of the subroutine
0000213C                          1843  
0000213C  43F9 0000282F           1844  displayD3   LEA         dispD3, A1          ; Display space
00002142  103C 000E               1845              MOVE.B      #14, D0             ; command for trap call to display message
00002146  4E4F                    1846              TRAP        #15                 ; trap call
00002148  6000 0594               1847              BRA         endSUB              ; go to the end of the subroutine
0000214C                          1848  
0000214C  43F9 00002832           1849  displayD4   LEA         dispD4, A1          ; Display space
00002152  103C 000E               1850              MOVE.B      #14, D0             ; command for trap call to display message
00002156  4E4F                    1851              TRAP        #15                 ; trap call
00002158  6000 0584               1852              BRA         endSUB              ; go to the end of the subroutine
0000215C                          1853  
0000215C  43F9 00002835           1854  displayD5   LEA         dispD5, A1          ; Display space
00002162  103C 000E               1855              MOVE.B      #14, D0             ; command for trap call to display message
00002166  4E4F                    1856              TRAP        #15                 ; trap call
00002168  6000 0574               1857              BRA         endSUB              ; go to the end of the subroutine
0000216C                          1858  
0000216C  43F9 00002838           1859  displayD6   LEA         dispD6, A1          ; Display space
00002172  103C 000E               1860              MOVE.B      #14, D0             ; command for trap call to display message
00002176  4E4F                    1861              TRAP        #15                 ; trap call
00002178  6000 0564               1862              BRA         endSUB              ; go to the end of the subroutine
0000217C                          1863  
0000217C  43F9 0000283B           1864  displayD7   LEA         dispD7, A1          ; Display space
00002182  103C 000E               1865              MOVE.B      #14, D0             ; command for trap call to display message
00002186  4E4F                    1866              TRAP        #15                 ; trap call
00002188  6000 0554               1867              BRA         endSUB              ; go to the end of the subroutine
0000218C                          1868  ***********************************************************************************************************
0000218C                          1869  * Address Register
0000218C  B63C 0000               1870  pAddrReg    CMP.B   #zero,D3
00002190  6700 003A               1871              BEQ     displayA0
00002194  B63C 0001               1872              CMP.B   #one,D3
00002198  6700 0042               1873              BEQ     displayA1
0000219C  B63C 0002               1874              CMP.B   #two,D3
000021A0  6700 004A               1875              BEQ     displayA2
000021A4  B63C 0003               1876              CMP.B   #three,D3
000021A8  6700 0052               1877              BEQ     displayA3
000021AC  B63C 0004               1878              CMP.B   #four,D3
000021B0  6700 005A               1879              BEQ     displayA4
000021B4  B63C 0005               1880              CMP.B   #five,D3
000021B8  6700 0062               1881              BEQ     displayA5
000021BC  B63C 0006               1882              CMP.B   #six,D3
000021C0  6700 006A               1883              BEQ     displayA6
000021C4  B63C 0007               1884              CMP.B   #seven,D3
000021C8  6700 0072               1885              BEQ     displayA7
000021CC                          1886              
000021CC  43F9 0000280C           1887  displayA0   LEA         dispA0, A1          ; Display space
000021D2  103C 000E               1888              MOVE.B      #14, D0             ; command for trap call to display message
000021D6  4E4F                    1889              TRAP        #15                 ; trap call
000021D8  6000 0504               1890              BRA         endSUB              ; go to the end of the subroutine
000021DC                          1891              
000021DC  43F9 0000280F           1892  displayA1   LEA         dispA1, A1          ; Display space
000021E2  103C 000E               1893              MOVE.B      #14, D0             ; command for trap call to display message
000021E6  4E4F                    1894              TRAP        #15                 ; trap call
000021E8  6000 04F4               1895              BRA         endSUB              ; go to the end of the subroutine
000021EC                          1896  
000021EC  43F9 00002812           1897  displayA2   LEA         dispA2, A1          ; Display space
000021F2  103C 000E               1898              MOVE.B      #14, D0             ; command for trap call to display message
000021F6  4E4F                    1899              TRAP        #15                 ; trap call
000021F8  6000 04E4               1900              BRA         endSUB              ; go to the end of the subroutine
000021FC                          1901  
000021FC  43F9 00002815           1902  displayA3   LEA         dispA3, A1          ; Display space
00002202  103C 000E               1903              MOVE.B      #14, D0             ; command for trap call to display message
00002206  4E4F                    1904              TRAP        #15                 ; trap call
00002208  6000 04D4               1905              BRA         endSUB              ; go to the end of the subroutine
0000220C                          1906  
0000220C  43F9 00002818           1907  displayA4   LEA         dispA4, A1          ; Display space
00002212  103C 000E               1908              MOVE.B      #14, D0             ; command for trap call to display message
00002216  4E4F                    1909              TRAP        #15                 ; trap call
00002218  6000 04C4               1910              BRA         endSUB              ; go to the end of the subroutine
0000221C                          1911  
0000221C  43F9 0000281B           1912  displayA5   LEA         dispA5, A1          ; Display space
00002222  103C 000E               1913              MOVE.B      #14, D0             ; command for trap call to display message
00002226  4E4F                    1914              TRAP        #15                 ; trap call
00002228  6000 04B4               1915              BRA         endSUB              ; go to the end of the subroutine
0000222C                          1916  
0000222C  43F9 0000281E           1917  displayA6   LEA         dispA6, A1          ; Display space
00002232  103C 000E               1918              MOVE.B      #14, D0             ; command for trap call to display message
00002236  4E4F                    1919              TRAP        #15                 ; trap call
00002238  6000 04A4               1920              BRA         endSUB              ; go to the end of the subroutine
0000223C                          1921  
0000223C  43F9 00002821           1922  displayA7   LEA         dispA7, A1          ; Display space
00002242  103C 000E               1923              MOVE.B      #14, D0             ; command for trap call to display message
00002246  4E4F                    1924              TRAP        #15                 ; trap call
00002248  6000 0494               1925              BRA         endSUB              ; go to the end of the subroutine
0000224C                          1926  
0000224C                          1927  ***********************************************************************************************************
0000224C                          1928  * Address Register Direct
0000224C                          1929  
0000224C  43F9 00002779           1930  pAddrDir    LEA         opPer, A1           ; Display space
00002252  103C 000E               1931              MOVE.B      #14, D0             ; command for trap call to display message
00002256  4E4F                    1932              TRAP        #15                 ; trap call
00002258                          1933              
00002258  B63C 0000               1934              CMP.B   #zero,D3
0000225C  6700 003A               1935              BEQ     displayA0A
00002260  B63C 0001               1936              CMP.B   #one,D3
00002264  6700 004E               1937              BEQ     displayA1A
00002268  B63C 0002               1938              CMP.B   #two,D3
0000226C  6700 0062               1939              BEQ     displayA2A
00002270  B63C 0003               1940              CMP.B   #three,D3
00002274  6700 0076               1941              BEQ     displayA3A
00002278  B63C 0004               1942              CMP.B   #four,D3
0000227C  6700 008A               1943              BEQ     displayA4A
00002280  B63C 0005               1944              CMP.B   #five,D3
00002284  6700 009E               1945              BEQ     displayA5A
00002288  B63C 0006               1946              CMP.B   #six,D3
0000228C  6700 00B2               1947              BEQ     displayA6A
00002290  B63C 0007               1948              CMP.B   #seven,D3
00002294  6700 00C6               1949              BEQ     displayA7A
00002298                          1950              
00002298  43F9 0000280C           1951  displayA0A  LEA         dispA0, A1          ; Display space
0000229E  103C 000E               1952              MOVE.B      #14, D0             ; command for trap call to display message
000022A2  4E4F                    1953              TRAP        #15                 ; trap call
000022A4  43F9 0000277B           1954              LEA         clPer, A1           ; Display space
000022AA  103C 000E               1955              MOVE.B      #14, D0             ; command for trap call to display message
000022AE  4E4F                    1956              TRAP        #15                 ; trap call
000022B0  6000 042C               1957              BRA         endSUB              ; go to the end of the subroutine
000022B4                          1958              
000022B4  43F9 0000280F           1959  displayA1A  LEA         dispA1, A1          ; Display space
000022BA  103C 000E               1960              MOVE.B      #14, D0             ; command for trap call to display message
000022BE  4E4F                    1961              TRAP        #15                 ; trap call
000022C0  43F9 0000277B           1962              LEA         clPer, A1           ; Display space
000022C6  103C 000E               1963              MOVE.B      #14, D0             ; command for trap call to display message
000022CA  4E4F                    1964              TRAP        #15                 ; trap call
000022CC  6000 0410               1965              BRA         endSUB              ; go to the end of the subroutine
000022D0                          1966  
000022D0  43F9 00002812           1967  displayA2A  LEA         dispA2, A1          ; Display space
000022D6  103C 000E               1968              MOVE.B      #14, D0             ; command for trap call to display message
000022DA  4E4F                    1969              TRAP        #15                 ; trap call
000022DC  43F9 0000277B           1970              LEA         clPer, A1           ; Display space
000022E2  103C 000E               1971              MOVE.B      #14, D0             ; command for trap call to display message
000022E6  4E4F                    1972              TRAP        #15                 ; trap call
000022E8  6000 03F4               1973              BRA         endSUB              ; go to the end of the subroutine
000022EC                          1974  
000022EC  43F9 00002815           1975  displayA3A  LEA         dispA3, A1          ; Display space
000022F2  103C 000E               1976              MOVE.B      #14, D0             ; command for trap call to display message
000022F6  4E4F                    1977              TRAP        #15                 ; trap call
000022F8  43F9 0000277B           1978              LEA         clPer, A1           ; Display space
000022FE  103C 000E               1979              MOVE.B      #14, D0             ; command for trap call to display message
00002302  4E4F                    1980              TRAP        #15                 ; trap call
00002304  6000 03D8               1981              BRA         endSUB              ; go to the end of the subroutine
00002308                          1982  
00002308  43F9 00002818           1983  displayA4A  LEA         dispA4, A1          ; Display space
0000230E  103C 000E               1984              MOVE.B      #14, D0             ; command for trap call to display message
00002312  4E4F                    1985              TRAP        #15                 ; trap call
00002314  43F9 0000277B           1986              LEA         clPer, A1           ; Display space
0000231A  103C 000E               1987              MOVE.B      #14, D0             ; command for trap call to display message
0000231E  4E4F                    1988              TRAP        #15                 ; trap call
00002320  6000 03BC               1989              BRA         endSUB              ; go to the end of the subroutine
00002324                          1990  
00002324  43F9 0000281B           1991  displayA5A  LEA         dispA5, A1          ; Display space
0000232A  103C 000E               1992              MOVE.B      #14, D0             ; command for trap call to display message
0000232E  4E4F                    1993              TRAP        #15                 ; trap call
00002330  43F9 0000277B           1994              LEA         clPer, A1           ; Display space
00002336  103C 000E               1995              MOVE.B      #14, D0             ; command for trap call to display message
0000233A  4E4F                    1996              TRAP        #15                 ; trap call
0000233C  6000 03A0               1997              BRA         endSUB              ; go to the end of the subroutine
00002340                          1998  
00002340  43F9 0000281E           1999  displayA6A  LEA         dispA6, A1          ; Display space
00002346  103C 000E               2000              MOVE.B      #14, D0             ; command for trap call to display message
0000234A  4E4F                    2001              TRAP        #15                 ; trap call
0000234C  43F9 0000277B           2002              LEA         clPer, A1           ; Display space
00002352  103C 000E               2003              MOVE.B      #14, D0             ; command for trap call to display message
00002356  4E4F                    2004              TRAP        #15                 ; trap call
00002358  6000 0384               2005              BRA         endSUB              ; go to the end of the subroutine
0000235C                          2006  
0000235C  43F9 00002821           2007  displayA7A  LEA         dispA7, A1          ; Display space
00002362  103C 000E               2008              MOVE.B      #14, D0             ; command for trap call to display message
00002366  4E4F                    2009              TRAP        #15                 ; trap call
00002368  43F9 0000277B           2010              LEA         clPer, A1           ; Display space
0000236E  103C 000E               2011              MOVE.B      #14, D0             ; command for trap call to display message
00002372  4E4F                    2012              TRAP        #15                 ; trap call
00002374  6000 0368               2013              BRA         endSUB              ; go to the end of the subroutine
00002378                          2014              
00002378                          2015  ***********************************************************************************************************
00002378                          2016  * Addr Postincrement
00002378                          2017              
00002378  43F9 00002779           2018  pAddrPost   LEA         opPer, A1           ; Display space
0000237E  103C 000E               2019              MOVE.B      #14, D0             ; command for trap call to display message
00002382  4E4F                    2020              TRAP        #15                 ; trap call
00002384                          2021              
00002384  B63C 0000               2022              CMP.B   #zero,D3
00002388  6700 003A               2023              BEQ     displayA0P
0000238C  B63C 0001               2024              CMP.B   #one,D3
00002390  6700 005A               2025              BEQ     displayA1P
00002394  B63C 0002               2026              CMP.B   #two,D3
00002398  6700 007A               2027              BEQ     displayA2P
0000239C  B63C 0003               2028              CMP.B   #three,D3
000023A0  6700 009A               2029              BEQ     displayA3P
000023A4  B63C 0004               2030              CMP.B   #four,D3
000023A8  6700 00BA               2031              BEQ     displayA4P
000023AC  B63C 0005               2032              CMP.B   #five,D3
000023B0  6700 00DA               2033              BEQ     displayA5P
000023B4  B63C 0006               2034              CMP.B   #six,D3
000023B8  6700 00FA               2035              BEQ     displayA6P
000023BC  B63C 0007               2036              CMP.B   #seven,D3
000023C0  6700 011A               2037              BEQ     displayA7P
000023C4                          2038              
000023C4  43F9 0000280C           2039  displayA0P  LEA         dispA0, A1          ; Display space
000023CA  103C 000E               2040              MOVE.B      #14, D0             ; command for trap call to display message
000023CE  4E4F                    2041              TRAP        #15                 ; trap call
000023D0  43F9 0000277B           2042              LEA         clPer, A1           ; Display space
000023D6  103C 000E               2043              MOVE.B      #14, D0             ; command for trap call to display message
000023DA  4E4F                    2044              TRAP        #15                 ; trap call
000023DC  43F9 0000277F           2045              LEA         inc, A1             ; Display space
000023E2  103C 000E               2046              MOVE.B      #14, D0             ; command for trap call to display message
000023E6  4E4F                    2047              TRAP        #15                 ; trap call
000023E8  6000 02F4               2048              BRA         endSUB              ; go to the end of the subroutine
000023EC                          2049              
000023EC  43F9 0000280F           2050  displayA1P  LEA         dispA1, A1          ; Display space
000023F2  103C 000E               2051              MOVE.B      #14, D0             ; command for trap call to display message
000023F6  4E4F                    2052              TRAP        #15                 ; trap call
000023F8  43F9 0000277B           2053              LEA         clPer, A1           ; Display space
000023FE  103C 000E               2054              MOVE.B      #14, D0             ; command for trap call to display message
00002402  4E4F                    2055              TRAP        #15                 ; trap call
00002404  43F9 0000277F           2056              LEA         inc, A1             ; Display space
0000240A  103C 000E               2057              MOVE.B      #14, D0             ; command for trap call to display message
0000240E  4E4F                    2058              TRAP        #15                 ; trap call
00002410  6000 02CC               2059              BRA         endSUB              ; go to the end of the subroutine
00002414                          2060  
00002414  43F9 00002812           2061  displayA2P  LEA         dispA2, A1          ; Display space
0000241A  103C 000E               2062              MOVE.B      #14, D0             ; command for trap call to display message
0000241E  4E4F                    2063              TRAP        #15                 ; trap call
00002420  43F9 0000277B           2064              LEA         clPer, A1           ; Display space
00002426  103C 000E               2065              MOVE.B      #14, D0             ; command for trap call to display message
0000242A  4E4F                    2066              TRAP        #15                 ; trap call
0000242C  43F9 0000277F           2067              LEA         inc, A1             ; Display space
00002432  103C 000E               2068              MOVE.B      #14, D0             ; command for trap call to display message
00002436  4E4F                    2069              TRAP        #15                 ; trap call
00002438  6000 02A4               2070              BRA         endSUB              ; go to the end of the subroutine
0000243C                          2071  
0000243C  43F9 00002815           2072  displayA3P  LEA         dispA3, A1          ; Display space
00002442  103C 000E               2073              MOVE.B      #14, D0             ; command for trap call to display message
00002446  4E4F                    2074              TRAP        #15                 ; trap call
00002448  43F9 0000277B           2075              LEA         clPer, A1           ; Display space
0000244E  103C 000E               2076              MOVE.B      #14, D0             ; command for trap call to display message
00002452  4E4F                    2077              TRAP        #15                 ; trap call
00002454  43F9 0000277F           2078              LEA         inc, A1             ; Display space
0000245A  103C 000E               2079              MOVE.B      #14, D0             ; command for trap call to display message
0000245E  4E4F                    2080              TRAP        #15                 ; trap call
00002460  6000 027C               2081              BRA         endSUB              ; go to the end of the subroutine
00002464                          2082  
00002464  43F9 00002818           2083  displayA4P  LEA         dispA4, A1          ; Display space
0000246A  103C 000E               2084              MOVE.B      #14, D0             ; command for trap call to display message
0000246E  4E4F                    2085              TRAP        #15                 ; trap call
00002470  43F9 0000277B           2086              LEA         clPer, A1           ; Display space
00002476  103C 000E               2087              MOVE.B      #14, D0             ; command for trap call to display message
0000247A  4E4F                    2088              TRAP        #15                 ; trap call
0000247C  43F9 0000277F           2089              LEA         inc, A1             ; Display space
00002482  103C 000E               2090              MOVE.B      #14, D0             ; command for trap call to display message
00002486  4E4F                    2091              TRAP        #15                 ; trap call
00002488  6000 0254               2092              BRA         endSUB              ; go to the end of the subroutine
0000248C                          2093  
0000248C  43F9 0000281B           2094  displayA5P  LEA         dispA5, A1          ; Display space
00002492  103C 000E               2095              MOVE.B      #14, D0             ; command for trap call to display message
00002496  4E4F                    2096              TRAP        #15                 ; trap call
00002498  43F9 0000277B           2097              LEA         clPer, A1           ; Display space
0000249E  103C 000E               2098              MOVE.B      #14, D0             ; command for trap call to display message
000024A2  4E4F                    2099              TRAP        #15                 ; trap call
000024A4  43F9 0000277F           2100              LEA         inc, A1             ; Display space
000024AA  103C 000E               2101              MOVE.B      #14, D0             ; command for trap call to display message
000024AE  4E4F                    2102              TRAP        #15                 ; trap call
000024B0  6000 022C               2103              BRA         endSUB              ; go to the end of the subroutine
000024B4                          2104  
000024B4  43F9 0000281E           2105  displayA6P  LEA         dispA6, A1          ; Display space
000024BA  103C 000E               2106              MOVE.B      #14, D0             ; command for trap call to display message
000024BE  4E4F                    2107              TRAP        #15                 ; trap call
000024C0  43F9 0000277B           2108              LEA         clPer, A1           ; Display space
000024C6  103C 000E               2109              MOVE.B      #14, D0             ; command for trap call to display message
000024CA  4E4F                    2110              TRAP        #15                 ; trap call
000024CC  43F9 0000277F           2111              LEA         inc, A1             ; Display space
000024D2  103C 000E               2112              MOVE.B      #14, D0             ; command for trap call to display message
000024D6  4E4F                    2113              TRAP        #15                 ; trap call
000024D8  6000 0204               2114              BRA         endSUB              ; go to the end of the subroutine
000024DC                          2115  
000024DC  43F9 00002821           2116  displayA7P  LEA         dispA7, A1          ; Display space
000024E2  103C 000E               2117              MOVE.B      #14, D0             ; command for trap call to display message
000024E6  4E4F                    2118              TRAP        #15                 ; trap call
000024E8  43F9 0000277B           2119              LEA         clPer, A1           ; Display space
000024EE  103C 000E               2120              MOVE.B      #14, D0             ; command for trap call to display message
000024F2  4E4F                    2121              TRAP        #15                 ; trap call
000024F4  43F9 0000277F           2122              LEA         inc, A1             ; Display space
000024FA  103C 000E               2123              MOVE.B      #14, D0             ; command for trap call to display message
000024FE  4E4F                    2124              TRAP        #15                 ; trap call
00002500  6000 01DC               2125              BRA         endSUB              ; go to the end of the subroutine
00002504                          2126  
00002504                          2127  ***********************************************************************************************************
00002504                          2128  * Addr Postdecrement
00002504                          2129  
00002504  43F9 0000277D           2130  pAddrDec    LEA         dec, A1             ; Display space
0000250A  103C 000E               2131              MOVE.B      #14, D0             ; command for trap call to display message
0000250E  4E4F                    2132              TRAP        #15                 ; trap call
00002510                          2133              
00002510  43F9 00002779           2134              LEA         opPer, A1           ; Display space
00002516  103C 000E               2135              MOVE.B      #14, D0             ; command for trap call to display message
0000251A  4E4F                    2136              TRAP        #15                 ; trap call
0000251C                          2137              
0000251C  B63C 0000               2138              CMP.B   #zero,D3
00002520  6700 003A               2139              BEQ     displayA0D
00002524  B63C 0001               2140              CMP.B   #one,D3
00002528  6700 004E               2141              BEQ     displayA1D
0000252C  B63C 0002               2142              CMP.B   #two,D3
00002530  6700 0062               2143              BEQ     displayA2D
00002534  B63C 0003               2144              CMP.B   #three,D3
00002538  6700 0076               2145              BEQ     displayA3D
0000253C  B63C 0004               2146              CMP.B   #four,D3
00002540  6700 008A               2147              BEQ     displayA4D
00002544  B63C 0005               2148              CMP.B   #five,D3
00002548  6700 009E               2149              BEQ     displayA5D
0000254C  B63C 0006               2150              CMP.B   #six,D3
00002550  6700 00B2               2151              BEQ     displayA6D
00002554  B63C 0007               2152              CMP.B   #seven,D3
00002558  6700 00C6               2153              BEQ     displayA7D
0000255C                          2154              
0000255C  43F9 0000280C           2155  displayA0D  LEA         dispA0, A1          ; Display space
00002562  103C 000E               2156              MOVE.B      #14, D0             ; command for trap call to display message
00002566  4E4F                    2157              TRAP        #15                 ; trap call
00002568  43F9 0000277B           2158              LEA         clPer, A1           ; Display space
0000256E  103C 000E               2159              MOVE.B      #14, D0             ; command for trap call to display message
00002572  4E4F                    2160              TRAP        #15                 ; trap call
00002574  6000 0168               2161              BRA         endSUB              ; go to the end of the subroutine
00002578                          2162              
00002578  43F9 0000280F           2163  displayA1D  LEA         dispA1, A1          ; Display space
0000257E  103C 000E               2164              MOVE.B      #14, D0             ; command for trap call to display message
00002582  4E4F                    2165              TRAP        #15                 ; trap call
00002584  43F9 0000277B           2166              LEA         clPer, A1           ; Display space
0000258A  103C 000E               2167              MOVE.B      #14, D0             ; command for trap call to display message
0000258E  4E4F                    2168              TRAP        #15                 ; trap call
00002590  6000 014C               2169              BRA         endSUB              ; go to the end of the subroutine
00002594                          2170  
00002594  43F9 00002812           2171  displayA2D  LEA         dispA2, A1          ; Display space
0000259A  103C 000E               2172              MOVE.B      #14, D0             ; command for trap call to display message
0000259E  4E4F                    2173              TRAP        #15                 ; trap call
000025A0  43F9 0000277B           2174              LEA         clPer, A1           ; Display space
000025A6  103C 000E               2175              MOVE.B      #14, D0             ; command for trap call to display message
000025AA  4E4F                    2176              TRAP        #15                 ; trap call
000025AC  6000 0130               2177              BRA         endSUB              ; go to the end of the subroutine
000025B0                          2178  
000025B0  43F9 00002815           2179  displayA3D  LEA         dispA3, A1          ; Display space
000025B6  103C 000E               2180              MOVE.B      #14, D0             ; command for trap call to display message
000025BA  4E4F                    2181              TRAP        #15                 ; trap call
000025BC  43F9 0000277B           2182              LEA         clPer, A1           ; Display space
000025C2  103C 000E               2183              MOVE.B      #14, D0             ; command for trap call to display message
000025C6  4E4F                    2184              TRAP        #15                 ; trap call
000025C8  6000 0114               2185              BRA         endSUB              ; go to the end of the subroutine
000025CC                          2186  
000025CC  43F9 00002818           2187  displayA4D  LEA         dispA4, A1          ; Display space
000025D2  103C 000E               2188              MOVE.B      #14, D0             ; command for trap call to display message
000025D6  4E4F                    2189              TRAP        #15                 ; trap call
000025D8  43F9 0000277B           2190              LEA         clPer, A1           ; Display space
000025DE  103C 000E               2191              MOVE.B      #14, D0             ; command for trap call to display message
000025E2  4E4F                    2192              TRAP        #15                 ; trap call
000025E4  6000 00F8               2193              BRA         endSUB              ; go to the end of the subroutine
000025E8                          2194  
000025E8  43F9 0000281B           2195  displayA5D  LEA         dispA5, A1          ; Display space
000025EE  103C 000E               2196              MOVE.B      #14, D0             ; command for trap call to display message
000025F2  4E4F                    2197              TRAP        #15                 ; trap call
000025F4  43F9 0000277B           2198              LEA         clPer, A1           ; Display space
000025FA  103C 000E               2199              MOVE.B      #14, D0             ; command for trap call to display message
000025FE  4E4F                    2200              TRAP        #15                 ; trap call
00002600  6000 00DC               2201              BRA         endSUB              ; go to the end of the subroutine
00002604                          2202  
00002604  43F9 0000281E           2203  displayA6D  LEA         dispA6, A1          ; Display space
0000260A  103C 000E               2204              MOVE.B      #14, D0             ; command for trap call to display message
0000260E  4E4F                    2205              TRAP        #15                 ; trap call
00002610  43F9 0000277B           2206              LEA         clPer, A1           ; Display space
00002616  103C 000E               2207              MOVE.B      #14, D0             ; command for trap call to display message
0000261A  4E4F                    2208              TRAP        #15                 ; trap call
0000261C  6000 00C0               2209              BRA         endSUB              ; go to the end of the subroutine
00002620                          2210  
00002620  43F9 00002821           2211  displayA7D  LEA         dispA7, A1          ; Display space
00002626  103C 000E               2212              MOVE.B      #14, D0             ; command for trap call to display message
0000262A  4E4F                    2213              TRAP        #15                 ; trap call
0000262C  43F9 0000277B           2214              LEA         clPer, A1           ; Display space
00002632  103C 000E               2215              MOVE.B      #14, D0             ; command for trap call to display message
00002636  4E4F                    2216              TRAP        #15                 ; trap call
00002638  6000 00A4               2217              BRA         endSUB              ; go to the end of the subroutine
0000263C                          2218  
0000263C                          2219  
0000263C                          2220  ***********************************************************************************************************
0000263C                          2221  * Absolute Address
0000263C  B63C 0000               2222  pHex        CMP.B       #zero, D3
00002640  6700 0012               2223              BEQ         AbsShort
00002644  B63C 0001               2224              CMP.B       #one, D3
00002648  6700 003C               2225              BEQ         AbsLong
0000264C  B63C 0004               2226              CMP.B       #four, D3
00002650  6700 0066               2227              BEQ         DispImm
00002654                          2228              
00002654  43F9 00002779           2229  AbsShort    LEA         opPer, A1           ; Display space
0000265A  103C 000E               2230              MOVE.B      #14, D0             ; command for trap call to display message
0000265E  4E4F                    2231              TRAP        #15                 ; trap call
00002660                          2232              
00002660  43F9 00002775           2233              LEA         dispHex, A1         ; Display space
00002666  103C 000E               2234              MOVE.B      #14, D0             ; command for trap call to display message
0000266A  4E4F                    2235              TRAP        #15                 ; trap call
0000266C                          2236              
0000266C  4241                    2237              CLR         D1
0000266E  3218                    2238              MOVE.W      (A0)+, D1
00002670                          2239              
00002670  103C 0003               2240              MOVE.B      #3, D0
00002674  4E4F                    2241              TRAP        #15
00002676                          2242              
00002676  43F9 0000277B           2243              LEA         clPer, A1           ; Display space
0000267C  103C 000E               2244              MOVE.B      #14, D0             ; command for trap call to display message
00002680  4E4F                    2245              TRAP        #15                 ; trap call
00002682                          2246              
00002682  6000 005A               2247              BRA         endSub
00002686                          2248              
00002686  43F9 00002779           2249  AbsLong     LEA         opPer, A1           ; Display space
0000268C  103C 000E               2250              MOVE.B      #14, D0             ; command for trap call to display message
00002690  4E4F                    2251              TRAP        #15                 ; trap call
00002692                          2252              
00002692  43F9 00002775           2253              LEA         dispHex, A1         ; Display space
00002698  103C 000E               2254              MOVE.B      #14, D0             ; command for trap call to display message
0000269C  4E4F                    2255              TRAP        #15                 ; trap call
0000269E                          2256              
0000269E  4241                    2257              CLR         D1
000026A0  2218                    2258              MOVE.L      (A0)+, D1
000026A2                          2259              
000026A2  103C 0003               2260              MOVE.B      #3, D0
000026A6  4E4F                    2261              TRAP        #15
000026A8                          2262              
000026A8  43F9 0000277B           2263              LEA         clPer, A1           ; Display space
000026AE  103C 000E               2264              MOVE.B      #14, D0             ; command for trap call to display message
000026B2  4E4F                    2265              TRAP        #15                 ; trap call
000026B4                          2266              
000026B4  6000 0028               2267              BRA         endSub
000026B8                          2268  
000026B8  43F9 00002773           2269  DispImm     LEA         hashTag, A1         ; Display space
000026BE  103C 000E               2270              MOVE.B      #14, D0             ; command for trap call to display message
000026C2  4E4F                    2271              TRAP        #15                 ; trap call
000026C4                          2272              
000026C4  4241                    2273              CLR         D1
000026C6  3218                    2274              MOVE.W      (A0)+, D1
000026C8                          2275  
000026C8  43F9 00002775           2276              LEA         dispHex, A1         ; Display space
000026CE  103C 000E               2277              MOVE.B      #14, D0             ; command for trap call to display message
000026D2  4E4F                    2278              TRAP        #15                 ; trap call
000026D4                          2279              
000026D4  103C 0003               2280              MOVE.B      #3, D0
000026D8  4E4F                    2281              TRAP        #15
000026DA                          2282  
000026DA  6000 0002               2283              BRA         endSub
000026DE                          2284  
000026DE                          2285  invalid
000026DE                          2286  
000026DE                          2287  endSUB
000026DE                          2288          
000026DE  4CDF 7EFF               2289          MOVEM.L  (SP)+, D0-D7/A1-A6
000026E2  4E75                    2290          RTS
000026E4                          2291          
000026E4                          2292  
000026E4                          2293  
000026E4                          2294          
000026E4  48E7 FF7E               2295  PrntImm MOVEM.L D0-D7/A1-A6, -(SP)
000026E8                          2296          
000026E8  43F9 00002770           2297          LEA         space, A1        ; we know that the opcode will be ASR, so load A1 to print message
000026EE  103C 000E               2298          MOVE.B      #14, D0             ; command for trap call to display message
000026F2  4E4F                    2299          TRAP        #15                 ; trap call
000026F4                          2300          
000026F4  43F9 00002773           2301          LEA         hashTag, A1        ; we know that the opcode will be ASR, so load A1 to print message
000026FA  103C 000E               2302          MOVE.B      #14, D0             ; command for trap call to display message
000026FE  4E4F                    2303          TRAP        #15                 ; trap call
00002700                          2304          
00002700  4242                    2305          CLR         D2
00002702  3401                    2306          MOVE.W      D1, D2
00002704  E042                    2307          ASR         #eight, D2
00002706  E242                    2308          ASR         #one, D2
00002708  C47C 0007               2309          AND         #$07, D2
0000270C                          2310          
0000270C  4EB9 0000273E           2311          JSR         MemShiftImm
00002712                          2312          
00002712  43F9 00002777           2313          LEA         comma, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002718  103C 000E               2314          MOVE.B      #14, D0             ; command for trap call to display message
0000271C  4E4F                    2315          TRAP        #15                 ; trap call
0000271E                          2316          
0000271E  4242                    2317          CLR         D2
00002720  4243                    2318          CLR         D3
00002722  1601                    2319          MOVE.B      D1,D3
00002724  C67C 0007               2320          AND         #$07, D3
00002728                          2321          
00002728  4EB8 2094               2322          JSR         printEA
0000272C                          2323          
0000272C  43F9 0000276C           2324          LEA         newLine, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002732  103C 000E               2325          MOVE.B      #14, D0             ; command for trap call to display message
00002736  4E4F                    2326          TRAP        #15                 ; trap call
00002738                          2327          
00002738  4CDF 7EFF               2328          MOVEM.L  (SP)+, D0-D7/A1-A6
0000273C  4E75                    2329          RTS
0000273E                          2330          
0000273E                          2331          
0000273E  48E7 FF7E               2332  MemShiftImm     MOVEM.L D0-D7/A1-A6, -(SP)      ;caller saved data
00002742  4241                    2333                  CLR     D1
00002744                          2334                  
00002744  1202                    2335                  MOVE.B  D2, D1
00002746  B23C 0000               2336                  CMP.B   #zero, D1
0000274A  6700 000C               2337                  BEQ     displayEight
0000274E                          2338                  
0000274E  103C 0003               2339                  MOVE.B  #3, D0
00002752  4E4F                    2340                  TRAP    #15
00002754  6000 000C               2341                  BRA     endSubroutine
00002758                          2342                  
00002758  123C 0008               2343  displayEight    MOVE.B  #$08, D1
0000275C  103C 0003               2344                  MOVE.B  #3, D0
00002760  4E4F                    2345                  TRAP    #15                
00002762                          2346  endSubroutine
00002762  4CDF 7EFF               2347                  MOVEM.L  (SP)+, D0-D7/A1-A6     ; recall data
00002766  4E75                    2348                  RTS                             ; Return to main routine‏
00002768                          2349  
00002768                          2350  ***********************************************************************************************************
00002768                          2351  ***********************************************************************************************************
00002768                          2352  ***********************************************************************************************************
00002768                          2353  
00002768                          2354  printInvalid
00002768                          2355  endPROG    
00002768                          2356  
00002768  FFFF FFFF               2357      SIMHALT                             ; halt simulator
0000276C                          2358  
0000276C= 20 0D 0A 00             2359  newLine     DC.B    ' ', CR, LF, 0
00002770= 20 20 00                2360  space       DC.B    '  ', 0
00002773                          2361  
00002773= 23 00                   2362  hashTag     DC.B    '#', 0
00002775= 24 00                   2363  dispHex     DC.B    '$', 0
00002777= 2C 00                   2364  comma       DC.B    ',', 0
00002779                          2365  
00002779= 28 00                   2366  opPer       DC.B    '(', 0
0000277B= 29 00                   2367  clPer       DC.B    ')', 0
0000277D= 2D 00                   2368  dec         DC.B    '-', 0
0000277F= 2B 00                   2369  inc         DC.B    '+', 0
00002781                          2370  
00002781= 4F 52 49 00             2371  ORImatch    DC.B    'ORI', 0
00002785= 43 4D 50 49 00          2372  CMPImatch   DC.B    'CMPI', 0
0000278A= 42 43 4C 52 00          2373  BCLRmatch   DC.B    'BCLR', 0
0000278F= 4D 4F 56 45 00          2374  MOVEmatch   DC.B    'MOVE', 0
00002794= 4D 4F 56 45 41 00       2375  MOVEAmatch  DC.B    'MOVEA', 0
0000279A= 4E 45 47 00             2376  NEGmatch    DC.B    'NEG', 0
0000279E= 52 54 53 00             2377  RTSmatch    DC.B    'RTS', 0
000027A2= 4A 53 52 00             2378  JSRmatch    DC.B    'JSR', 0
000027A6= 4D 4F 56 45 4D 00       2379  MOVEMmatch  DC.B    'MOVEM', 0
000027AC= 4C 45 41 00             2380  LEAmatch    DC.B    'LEA', 0
000027B0= 53 55 42 51 00          2381  SUBQmatch   DC.B    'SUBQ', 0
000027B5= 42 52 41 00             2382  BRAmatch    DC.B    'BRA', 0
000027B9= 42 43 53 00             2383  BCSmatch    DC.B    'BCS', 0
000027BD= 42 56 43 00             2384  BVCmatch    DC.B    'BVC', 0
000027C1= 42 47 45 00             2385  BGEmatch    DC.B    'BGE', 0
000027C5= 42 4C 54 00             2386  BLTmatch    DC.B    'BLT', 0
000027C9= 44 49 56 53 00          2387  DIVSmatch   DC.B    'DIVS', 0
000027CE= 4F 52 00                2388  ORmatch     DC.B    'OR', 0
000027D1= 53 55 42 00             2389  SUBmatch    DC.B    'SUB', 0
000027D5= 45 4F 52 00             2390  EORmatch    DC.B    'EOR', 0
000027D9= 43 4D 50 00             2391  CMPmatch    DC.B    'CMP', 0
000027DD= 4D 55 4C 53 00          2392  MULSmatch   DC.B    'MULS', 0
000027E2= 41 44 44 00             2393  ADDmatch    DC.B    'ADD', 0
000027E6= 41 44 44 41 00          2394  ADDAmatch   DC.B    'ADDA', 0
000027EB= 4C 53 52 00             2395  LSRmatch    DC.B    'LSR', 0
000027EF= 4C 53 4C 00             2396  LSLmatch    DC.B    'LSL', 0
000027F3= 41 53 52 00             2397  ASRmatch    DC.B    'ASR', 0
000027F7= 41 53 4C 00             2398  ASLmatch    DC.B    'ASL', 0
000027FB= 52 4F 52 00             2399  RORmatch    DC.B    'ROR', 0
000027FF= 52 4F 4C 00             2400  ROLmatch    DC.B    'ROL', 0
00002803                          2401   
00002803= 2E 42 00                2402  dispByte    DC.B    '.B', 0
00002806= 2E 57 00                2403  dispWord    DC.B    '.W', 0
00002809= 2E 4C 00                2404  dispLong    DC.B    '.L', 0
0000280C                          2405  
0000280C= 41 30 00                2406  dispA0      DC.B    'A0', 0
0000280F= 41 31 00                2407  dispA1      DC.B    'A1', 0
00002812= 41 32 00                2408  dispA2      DC.B    'A2', 0
00002815= 41 33 00                2409  dispA3      DC.B    'A3', 0
00002818= 41 34 00                2410  dispA4      DC.B    'A4', 0
0000281B= 41 35 00                2411  dispA5      DC.B    'A5', 0
0000281E= 41 36 00                2412  dispA6      DC.B    'A6', 0
00002821= 41 37 00                2413  dispA7      DC.B    'A7', 0
00002824                          2414  
00002824= 44 00                   2415  dispD       DC.B    'D',0
00002826= 44 30 00                2416  dispD0      DC.B    'D0', 0
00002829= 44 31 00                2417  dispD1      DC.B    'D1', 0
0000282C= 44 32 00                2418  dispD2      DC.B    'D2', 0
0000282F= 44 33 00                2419  dispD3      DC.B    'D3', 0
00002832= 44 34 00                2420  dispD4      DC.B    'D4', 0
00002835= 44 35 00                2421  dispD5      DC.B    'D5', 0
00002838= 44 36 00                2422  dispD6      DC.B    'D6', 0
0000283B= 44 37 00                2423  dispD7      DC.B    'D7', 0  
0000283E                          2424             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             2686
ABSSHORT            2654
ADDAMATCH           27E6
ADDMATCH            27E2
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            27F7
ASRMATCH            27F3
BCLRMATCH           278A
BCSMATCH            27B9
BGEMATCH            27C1
BLTMATCH            27C5
BRAEIGHT            110E
BRAELEVEN           112C
BRAFIVE             10DE
BRAFOUR             10C2
BRAFOURTEEN         114A
BRAMATCH            27B5
BRANINE             1128
BRAONE              10B6
BRASIX              10E2
BRATHIRTEEN         114A
BRATHREE            10BE
BRATWELVE           1146
BRATWO              10BA
BRAZERO             1086
BVCMATCH            27BD
CLPER               277B
CMPIMATCH           2785
CMPMATCH            27D9
COMMA               2777
CR                  D
DEC                 277D
DISPA0              280C
DISPA1              280F
DISPA2              2812
DISPA3              2815
DISPA4              2818
DISPA5              281B
DISPA6              281E
DISPA7              2821
DISPBYTE            2803
DISPD               2824
DISPD0              2826
DISPD1              2829
DISPD2              282C
DISPD3              282F
DISPD4              2832
DISPD5              2835
DISPD6              2838
DISPD7              283B
DISPHEX             2775
DISPIMM             26B8
DISPLAYA0           21CC
DISPLAYA0A          2298
DISPLAYA0D          255C
DISPLAYA0P          23C4
DISPLAYA1           21DC
DISPLAYA1A          22B4
DISPLAYA1D          2578
DISPLAYA1P          23EC
DISPLAYA2           21EC
DISPLAYA2A          22D0
DISPLAYA2D          2594
DISPLAYA2P          2414
DISPLAYA3           21FC
DISPLAYA3A          22EC
DISPLAYA3D          25B0
DISPLAYA3P          243C
DISPLAYA4           220C
DISPLAYA4A          2308
DISPLAYA4D          25CC
DISPLAYA4P          2464
DISPLAYA5           221C
DISPLAYA5A          2324
DISPLAYA5D          25E8
DISPLAYA5P          248C
DISPLAYA6           222C
DISPLAYA6A          2340
DISPLAYA6D          2604
DISPLAYA6P          24B4
DISPLAYA7           223C
DISPLAYA7A          235C
DISPLAYA7D          2620
DISPLAYA7P          24DC
DISPLAYD0           210C
DISPLAYD1           211C
DISPLAYD2           212C
DISPLAYD3           213C
DISPLAYD4           214C
DISPLAYD5           215C
DISPLAYD6           216C
DISPLAYD7           217C
DISPLAYEIGHT        2758
DISPLONG            2809
DISPWORD            2806
DIVSMATCH           27C9
EIGHT               8
ELEVEN              B
ENDPROG             2768
ENDSUB              26DE
ENDSUBROUTINE       2762
EORMATCH            27D5
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             2773
INC                 277F
INVALID             26DE
JSRMATCH            27A2
LEAMATCH            27AC
LF                  A
LOOP                100C
LSLMATCH            27EF
LSRMATCH            27EB
MEMSHIFTIMM         273E
MOVEAMATCH          2794
MOVEMATCH           278F
MOVEMMATCH          27A6
MULSMATCH           27DD
NEGMATCH            279A
NEWLINE             276C
NINE                9
ONE                 1
OPASL               204C
OPASR               2058
OPBCC               117E
OPBCLR              1888
OPBCS               1E18
OPBGE               1E80
OPBLT               1EB4
OPBRA               1DE0
OPBVC               1E4C
OPCMP               1482
OPCMPB              14B4
OPCMPI              1716
OPCMPIB             1762
OPCMPIL             1826
OPCMPIW             17C4
OPCMPL              1568
OPCMPW              150E
OPDIVS              12D6
OPDYNBCLR           18EC
OPEOR               1334
OPEORB              1362
OPEORL              1422
OPEORW              13C2
OPJSR               1CDA
OPLEA               1D6A
OPLSL               2064
OPLSR               2070
OPMOVEAL            1A6E
OPMOVEAW            1B68
OPMOVEB             195A
OPMOVEL             19DE
OPMOVEM             1D52
OPMOVEMLEA          1D36
OPMOVEW             1AD8
OPMULS              2040
OPNEG               1BD2
OPNEGB              1C00
OPNEGL              1C40
OPNEGW              1C80
OPOR                1184
OPORB               11C2
OPORI               15C2
OPORIB              15F0
OPORIL              16B4
OPORIW              1652
OPORL               1278
OPORW               121C
OPPER               2779
OPROL               207C
OPROR               2088
OPRTS               1D1A
OPRTSJSR            1CC0
OPSUB               1EE8
OPSUBB              1F32
OPSUBL              1FE6
OPSUBQ              1D6A
OPSUBQB             1D96
OPSUBQL             1DC4
OPSUBQW             1DB4
OPSUBW              1F8C
ORIMATCH            2781
ORMATCH             27CE
PADDRDEC            2504
PADDRDIR            224C
PADDRPOST           2378
PADDRREG            218C
PDATAREG            20CC
PHEX                263C
PRINTEA             2094
PRINTINVALID        2768
PRNTIMM             26E4
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
ROLMATCH            27FF
RORMATCH            27FB
RTSMATCH            279E
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               2770
START               1000
SUBMATCH            27D1
SUBQMATCH           27B0
TEST_END            3009
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
