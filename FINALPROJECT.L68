00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 12/6/2014 3:11:38 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9       
00000000  =00000000                 10  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 11  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 12  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 13  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 14  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 15  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 16  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 17  seven       EQU     $07
00000000  =00000008                 18  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 19  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 20  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 21  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 22  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 23  fourteen    EQU     $0E         ; defined hex value 14
00000000                            24  
00000000  =00000000                 25  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 26  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 27  s1L         EQU     %0010       ; long size 1
00000000                            28  
00000000  =00000000                 29  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 30  s2L         EQU     %0001       ; long size 2
00000000                            31  
00000000  =00000001                 32  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 33  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 34  s3L         EQU     %0010       ; long size 3
00000000                            35  
00000000  =00000000                 36  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 37  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 38  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 39  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 40  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 41  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            42  
00000000  =00000000                 43  reg0        EQU     %0000       ; register 0
00000000  =00000001                 44  reg1        EQU     %0001       ; register 1
00000000  =00000002                 45  reg2        EQU     %0010       ; register 2
00000000  =00000003                 46  reg3        EQU     %0011       ; register 3
00000000  =00000004                 47  reg4        EQU     %0100       ; register 4
00000000  =00000005                 48  reg5        EQU     %0101       ; register 5
00000000  =00000006                 49  reg6        EQU     %0110       ; register 6
00000000  =00000007                 50  reg7        EQU     %0111       ; register 7
00000000                            51  
00000000  =000000F0                 52  firstNib    EQU     $F0
00000000  =0000000F                 53  secNib      EQU     $0F
00000000                            54               
00001000                            55              ORG    $1000
00001000                            56  START:                                  ; first instruction of program
00001000                            57        
00001000  43F9 00002B72             58          LEA     startingMessage, A1
00001006  103C 000E                 59          MOVE.B  #14, D0
0000100A  4E4F                      60          TRAP    #15    
0000100C                            61      
0000100C  103C 0002                 62          MOVE.B  #2, D0
00001010  4E4F                      63          TRAP    #15
00001012                            64      
00001012  4EB9 00002A22             65          JSR     Address
00001018  2042                      66          MOVEA.L D2, A0
0000101A                            67          
0000101A  43F9 00002B94             68          LEA     endingMessage, A1
00001020  103C 000E                 69          MOVE.B  #14, D0
00001024  4E4F                      70          TRAP    #15    
00001026                            71      
00001026  103C 0002                 72          MOVE.B  #2, D0
0000102A  4E4F                      73          TRAP    #15
0000102C                            74      
0000102C  4EB9 00002A22             75          JSR     Address
00001032  2442                      76          MOVEA.L D2, A2
00001034                            77          
00001034  43F9 00002BB4             78          LEA     newline, A1
0000103A  103C 000E                 79          MOVE.B  #14, D0
0000103E  4E4F                      80          TRAP    #15 
00001040                            81            
00001040  4241                      82  LOOP    CLR         D1                  ; clear out D1
00001042  4242                      83          CLR         D2                  ; clear out D2
00001044  B1CA                      84          CMPA.L      A2, A0              ; compare starting and ending addresses
00001046  6E00 1B26                 85          BGT         endProg             ; if A0 > A1, we've finished, end program
0000104A  1218                      86          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
0000104C  1401                      87          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000104E  E882                      88          ASR.L       #four, D2           ; get first nibble in D2
00001050                            89          
00001050  B43C 0000                 90          CMP.B       #zero, D2           ; compare with 0
00001054  6700 0064                 91          BEQ         braZero             ; branch out to zero method
00001058  B43C 0001                 92          CMP.B       #one, D2            ; compare with 1
0000105C  6700 008C                 93          BEQ         braOne              ; branch out to one method
00001060  B43C 0002                 94          CMP.B       #two, D2            ; compare with 2    
00001064  6700 0088                 95          BEQ         braTwo              ; branch out to two method
00001068  B43C 0003                 96          CMP.B       #three, D2          ; compare with 3
0000106C  6700 0080                 97          BEQ         braThree            ; branch out to three method
00001070  B43C 0004                 98          CMP.B       #four, D2           ; compare with 4
00001074  6700 0078                 99          BEQ         braFour             ; branch out to four method
00001078  B43C 0005                100          CMP.B       #five, D2           ; compare with 5
0000107C  6700 008C                101          BEQ         braFive             ; branch out to five method
00001080  B43C 0006                102          CMP.B       #six, D2            ; compare with 6
00001084  6700 0088                103          BEQ         braSix              ; branch out to six method
00001088  B43C 0008                104          CMP.B       #eight, D2          ; compare with 8
0000108C  6700 00AC                105          BEQ         braEight            ; branch out to eight method
00001090  B43C 0009                106          CMP.B       #nine, D2           ; compare with 9
00001094  6700 00A4                107          BEQ         braNine             ; branch out to nine method
00001098  B43C 000B                108          CMP.B       #eleven, D2         ; compare with 11
0000109C  6700 00A0                109          BEQ         braEleven           ; branch out to eleven method
000010A0  B43C 000C                110          CMP.B       #twelve, D2         ; compare with 12
000010A4  6700 0098                111          BEQ         braTwelve           ; branch out to twelve method
000010A8  B43C 000D                112          CMP.B       #thirteen, D2       ; compare with 13
000010AC  6700 0094                113          BEQ         braThirteen         ; branch out to thirteen method
000010B0  B43C 000E                114          CMP.B       #fourteen, D2       ; compare with 14
000010B4  6700 00DE                115          BEQ         braFourteen         ; branch out to fourteen method
000010B8  6086                     116          BRA         loop
000010BA                           117  
000010BA  4242                     118  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
000010BC  1401                     119          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010BE  C43C 000F                120          AND.B       #secNib, D2         ; set first nibble to 0
000010C2                           121   
000010C2  B43C 0000                122          CMP.B       #zero, D2           ; compare second nibble to 0
000010C6  6700 0140                123          BEQ         opORI               ; branch to ORI method
000010CA  B43C 000C                124          CMP.B       #twelve, D2         ; compare second nibble to 12
000010CE  6700 028C                125          BEQ         opCMPI              ; branch to CMPI method
000010D2  B43C 0008                126          CMP.B       #eight,D2           ; Test for static BCLR
000010D6  6700 03F6                127          BEQ         opBCLR
000010DA  C47C 0001                128          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010DE  B43C 0001                129          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010E2  6700 044E                130          BEQ         opDynBCLR
000010E6  6000 1A86                131          BRA         printInvalid
000010EA                           132          
000010EA                           133          
000010EA  6000 04B4                134  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010EE                           135  
000010EE                           136  braTwo  ; there are two opCodes available, MOVE.L, or MOVEA.L
000010EE                           137  
000010EE                           138  braThree ; there are two opCodes available, MOVE.W, or MOVEA.W
000010EE                           139  
000010EE  4242                     140  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010F0  1401                     141          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010F2  C438 000F                142          AND.B       $0F, D2             ; set first nibble to 0
000010F6                           143   
000010F6  B43C 0004                144          CMP.B       #four, D2           ; compare second nibble to 4
000010FA  6700 0528                145          BEQ         opNEG               ; branch to NEG method
000010FE  B43C 000E                146          CMP.B       #fourteen, D2       ; compare second nibble to E
00001102  6700 052C                147          BEQ         opRTSJSR            ; branch to JSR or RTS method
00001106  6000 0528                148          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
0000110A                           149  
0000110A  6000 0524                150  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
0000110E                           151  
0000110E  4242                     152  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
00001110  1401                     153          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001112  C438 000F                154          AND.B       $0F, D2             ; set first nibble to 0
00001116                           155   
00001116  B43C 0000                156          CMP.B       #zero, D2           ; compare second nibble to 0
0000111A  6700 0520                157          BEQ         opBRA               ; branch to BRA method
0000111E  B43C 0005                158          CMP.B       #five, D2           ; compare second nibble to 5
00001122  6700 0530                159          BEQ         opBCS               ; branch to BCS method
00001126  B43C 0008                160          CMP.B       #eight, D2          ; compare second nibble to 8
0000112A  6700 0534                161          BEQ         opBVC               ; branch to BCS method
0000112E  B43C 000C                162          CMP.B       #twelve, D2         ; compare second nibble to 12
00001132  6700 0538                163          BEQ         opBGE               ; branch to BGE method
00001136  6000 0540                164          BRA         opBLT               ; otherwise, branch to BLT method
0000113A                           165  
0000113A                           166  braEight    ; there are two opCodes available DIVS, or OR
0000113A                           167  
0000113A  6000 0548                168  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000113E                           169  
0000113E                           170  braEleven   ; there are two opCodes available EOR, or CMP
0000113E                           171  
0000113E  6000 0550                172  braTwelve   BRA         opMULS              ; we know that there is only one opcode that is MULS    
00001142                           173    
00001142  E141                     174  braThirteen ASL         #eight, D1          ; we need the whole word to compare between add and adda, so move over the current byte 
00001144  1218                     175              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
00001146                           176              
00001146  4242                     177              CLR         D2                  ; clear D2
00001148  3401                     178              MOVE.W      D1, D2              ; copy opcode to D2
0000114A  EC42                     179              ASR         #six, D2            ; shift the bits right to get size and type
0000114C  C47C 0007                180              AND         #seven,D2           ; clear out all but first 3 bits
00001150                           181              
00001150  B43C 0000                182              CMP.B       #zero,D2            ; compare 0 to D2
00001154  6700 059E                183              BEQ         opADDB              ; we know its ADDB
00001158  B43C 0001                184              CMP.B       #one, D2            ; compare 1 to D2
0000115C  6700 0602                185              BEQ         opADDW              ; we know its ADDW
00001160  B43C 0002                186              CMP.B       #two, D2            ; compare 2 to D2
00001164  6700 0666                187              BEQ         opADDL              ; we know its ADDL
00001168  B43C 0003                188              CMP.B       #three, D2          ; compare 3 to D2
0000116C  6700 06CA                189              BEQ         opADDAW             ; we know its ADDAW
00001170  B43C 0004                190              CMP.B       #four, D2           ; compare 4 to D2
00001174  6700 057E                191              BEQ         opADDB              ; we know its ADDB
00001178  B43C 0005                192              CMP.B       #five, D2           ; compare 5 to D2
0000117C  6700 05E2                193              BEQ         opADDW              ; we know its ADDW
00001180  B43C 0006                194              CMP.B       #six, D2            ; compare 6 to D2
00001184  6700 0646                195              BEQ         opADDL              ; we know its ADDL
00001188  B43C 0007                196              CMP.B       #seven, D2          ; compare 7 to D2
0000118C  6700 071A                197              BEQ         opADDAL             ; we know its ADDAL
00001190  6000 19DC                198              BRA         printInvalid        ; invalid opcode
00001194                           199               
00001194  E141                     200  braFourteen ASL.W       #eight,D1           ; we need the whole word to compare between add and adda, so move over the current byte
00001196  1218                     201              MOVE.B      (A0)+, D1           ; load the remaining byte to D1
00001198                           202              
00001198  4242                     203              CLR         D2                  ; clear D2
0000119A  3401                     204              MOVE.W      D1, D2              ; copy opcode to D2
0000119C  EC42                     205              ASR         #six, D2            ; shift the bits right to get size
0000119E  C47C 0003                206              AND         #03,D2
000011A2                           207          
000011A2  B43C 0003                208              CMP.B       #three, D2          ; if the size is three, we are shifting memory
000011A6  6700 0006                209              BEQ         memShifts           ; go to memory shift
000011AA  6000 0040                210              BRA         regShifts           ; else go to register shift
000011AE                           211  
000011AE  4242                     212  memShifts   CLR         D2             
000011B0  3401                     213              MOVE.W      D1, D2              ; clear out D2 and copy D1 back in
000011B2  E082                     214              ASR.L       #eight,D2           ; move to get first byte back
000011B4  C47C 000F                215              AND         #secNib, D2         ; set first nibble to 0
000011B8                           216   
000011B8  B43C 0000                217              CMP.B       #zero, D2           ; compare second nibble to 0
000011BC  6700 07A6                218              BEQ         opASR               ; branch to ASR method
000011C0  B43C 0001                219              CMP.B       #one, D2            ; compare second nibble to 1
000011C4  6700 0752                220              BEQ         opASL               ; branch to ASL method
000011C8  B43C 0002                221              CMP.B       #two, D2            ; compare second nibble to 2
000011CC  6700 082E                222              BEQ         opLSR               ; branch to LSR method
000011D0  B43C 0003                223              CMP.B       #three, D2          ; compare second nibble to 3
000011D4  6700 07DA                224              BEQ         opLSL               ; branch to LSL method
000011D8  B43C 0006                225              CMP.B       #six, D2            ; compare second nibble to 6
000011DC  6700 08B6                226              BEQ         opROR               ; branch to ROR method
000011E0  B43C 0007                227              CMP.B       #seven, D2          ; compare second nibble to 7
000011E4  6700 0862                228              BEQ         opROL               ; branch to ROL method
000011E8  6000 1984                229              BRA         printInvalid        ; otherwise, invalid
000011EC                           230              
000011EC  B43C 0000                231  regShifts   CMP.B       #zero, D2           ; if size is 0, we are shifting a byte
000011F0  6700 08EE                232              BEQ         memSB               ; branch to register shift byte
000011F4  B43C 0001                233              CMP.B       #one, D2            ; if size is 1, we are shifting a word
000011F8  6700 0B70                234              BEQ         memSW               ; branch to register shift word
000011FC  B43C 0002                235              CMP.B       #two, D2            ; if size is 1, we are shifting a long
00001200  6700 0DF2                236              BEQ         memSL               ; branch to register shift long
00001204  6000 1968                237              BRA         printInvalid        ; otherwise, invalid
00001208                           238  
00001208  43F9 00002BC9            239  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
0000120E  103C 000E                240          MOVE.B      #14, D0             ; command for trap call to display message
00001212  4E4F                     241          TRAP        #15                 ; trap call
00001214                           242          
00001214  1218                     243          MOVE.B      (A0)+, D1           ; move next byte over
00001216  1401                     244          MOVE.B      D1,D2               ; copy data over
00001218  EC42                     245          ASR         #6,D2               ; shifts 6 bits over to read just the size        
0000121A  B43C 0000                246          CMP.B       #zero,D2            ; if size is 0, we are shifting a byte
0000121E  6700 0016                247          BEQ         opORIB             
00001222  B43C 0001                248          CMP.B       #one,D2             ; if size is 0, we are shifting a byte
00001226  6700 0070                249          BEQ         opORIW
0000122A  B43C 0002                250          CMP.B       #two,D2             ; if size is 0, we are shifting a byte
0000122E  6700 00CA                251          BEQ         opORIL
00001232  6000 193A                252          BRA         printInvalid        ; otherwise, invalid
00001236                           253          
00001236  43F9 00002C4B            254  opORIB  LEA         dispByte, A1        ; Display byte
0000123C  103C 000E                255          MOVE.B      #14, D0             ; command for trap call to display message
00001240  4E4F                     256          TRAP        #15                 ; trap call
00001242                           257          
00001242  43F9 00002BB8            258          LEA         space, A1           ; Display space
00001248  103C 000E                259          MOVE.B      #14, D0             ; command for trap call to display message
0000124C  4E4F                     260          TRAP        #15                 ; trap call
0000124E                           261          
0000124E  4242                     262          CLR         D2
00001250  1401                     263          MOVE.B      D1,D2
00001252  E642                     264          ASR         #three,D2
00001254  C47C 0007                265          AND         #seven,D2
00001258  4243                     266          CLR         D3        
0000125A  1601                     267          MOVE.B      D1,D3
0000125C  C67C 0007                268          AND         #seven,D3
00001260                           269          
00001260  4241                     270          CLR         D1
00001262  3218                     271          MOVE.W      (A0)+, D1
00001264                           272          
00001264  43F9 00002BBB            273          LEA         hashTag, A1         ; Display immediate sign
0000126A  103C 000E                274          MOVE.B      #14, D0             ; command for trap call to display message
0000126E  4E4F                     275          TRAP        #15                 ; trap call
00001270                           276          
00001270  103C 0003                277          MOVE.B      #3, D0
00001274  4E4F                     278          TRAP        #15
00001276                           279          
00001276  43F9 00002BBF            280          LEA         comma, A1           ; Display comma
0000127C  103C 000E                281          MOVE.B      #14, D0             ; command for trap call to display message
00001280  4E4F                     282          TRAP        #15                 ; trap call
00001282                           283          
00001282  4EB9 00002356            284          JSR         printEA
00001288                           285          
00001288  43F9 00002BB4            286          LEA         newLine, A1         ; nextline
0000128E  103C 000E                287          MOVE.B      #14, D0             ; command for trap call to display message
00001292  4E4F                     288          TRAP        #15                 ; trap call
00001294                           289          
00001294  6000 FDAA                290          BRA         LOOP
00001298                           291          
00001298                           292          
00001298  43F9 00002C4E            293  opORIW  LEA         dispWord, A1        ; Display byte
0000129E  103C 000E                294          MOVE.B      #14, D0             ; command for trap call to display message
000012A2  4E4F                     295          TRAP        #15                 ; trap call
000012A4                           296          
000012A4  43F9 00002BB8            297          LEA         space, A1           ; Display space
000012AA  103C 000E                298          MOVE.B      #14, D0             ; command for trap call to display message
000012AE  4E4F                     299          TRAP        #15                 ; trap call
000012B0                           300          
000012B0  4242                     301          CLR         D2
000012B2  1401                     302          MOVE.B      D1,D2
000012B4  E642                     303          ASR         #three,D2
000012B6  C47C 0007                304          AND         #seven,D2
000012BA  4243                     305          CLR         D3        
000012BC  1601                     306          MOVE.B      D1,D3
000012BE  C67C 0007                307          AND         #seven,D3
000012C2                           308          
000012C2  4241                     309          CLR         D1
000012C4  3218                     310          MOVE.W      (A0)+, D1
000012C6                           311          
000012C6  43F9 00002BBB            312          LEA         hashTag, A1           ; Display space
000012CC  103C 000E                313          MOVE.B      #14, D0             ; command for trap call to display message
000012D0  4E4F                     314          TRAP        #15                 ; trap call
000012D2                           315          
000012D2  103C 0003                316          MOVE.B      #3, D0
000012D6  4E4F                     317          TRAP        #15
000012D8                           318          
000012D8  43F9 00002BBF            319          LEA         comma, A1           ; Display space
000012DE  103C 000E                320          MOVE.B      #14, D0             ; command for trap call to display message
000012E2  4E4F                     321          TRAP        #15                 ; trap call
000012E4                           322          
000012E4  4EB9 00002356            323          JSR         printEA
000012EA                           324          
000012EA  43F9 00002BB4            325          LEA         newLine, A1           ; Display space
000012F0  103C 000E                326          MOVE.B      #14, D0             ; command for trap call to display message
000012F4  4E4F                     327          TRAP        #15                 ; trap call
000012F6                           328          
000012F6  6000 FD48                329          BRA         LOOP
000012FA                           330       
000012FA  43F9 00002C51            331  opORIL  LEA         dispLong, A1        ; Display byte
00001300  103C 000E                332          MOVE.B      #14, D0             ; command for trap call to display message
00001304  4E4F                     333          TRAP        #15                 ; trap call
00001306                           334          
00001306  43F9 00002BB8            335          LEA         space, A1           ; Display space
0000130C  103C 000E                336          MOVE.B      #14, D0             ; command for trap call to display message
00001310  4E4F                     337          TRAP        #15                 ; trap call
00001312                           338          
00001312  4242                     339          CLR         D2
00001314  1401                     340          MOVE.B      D1,D2
00001316  E642                     341          ASR         #three,D2
00001318  C47C 0007                342          AND         #seven,D2
0000131C  4243                     343          CLR         D3        
0000131E  1601                     344          MOVE.B      D1,D3
00001320  C67C 0007                345          AND         #seven,D3
00001324                           346          
00001324  4241                     347          CLR         D1
00001326  2218                     348          MOVE.L      (A0)+, D1
00001328                           349          
00001328  43F9 00002BBB            350          LEA         hashTag, A1           ; Display space
0000132E  103C 000E                351          MOVE.B      #14, D0             ; command for trap call to display message
00001332  4E4F                     352          TRAP        #15                 ; trap call
00001334                           353          
00001334  103C 0003                354          MOVE.B      #3, D0
00001338  4E4F                     355          TRAP        #15
0000133A                           356          
0000133A  43F9 00002BBF            357          LEA         comma, A1           ; Display space
00001340  103C 000E                358          MOVE.B      #14, D0             ; command for trap call to display message
00001344  4E4F                     359          TRAP        #15                 ; trap call
00001346                           360          
00001346  4EB9 00002356            361          JSR         printEA
0000134C                           362          
0000134C  43F9 00002BB4            363          LEA         newLine, A1           ; Display space
00001352  103C 000E                364          MOVE.B      #14, D0             ; command for trap call to display message
00001356  4E4F                     365          TRAP        #15                 ; trap call
00001358                           366          
00001358  6000 FCE6                367          BRA         LOOP
0000135C                           368           
0000135C  43F9 00002BCD            369  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001362  103C 000E                370          MOVE.B      #14, D0             ; command for trap call to display message
00001366  4E4F                     371          TRAP        #15                 ; trap call
00001368                           372                  
00001368  1218                     373          MOVE.B      (A0)+, D1
0000136A  1401                     374          MOVE.B      D1,D2               ; copy data over
0000136C  EC42                     375          ASR         #6,D2               ; shifts 6 bits over to read just the size        
0000136E  B43C 0000                376          CMP.B       #zero,D2
00001372  6700 0034                377          BEQ         opCMPIB
00001376  B43C 0001                378          CMP.B       #one,D2
0000137A  6700 008E                379          BEQ         opCMPIW
0000137E  B43C 0002                380          CMP.B       #two,D2
00001382  6700 00E8                381          BEQ         opCMPIL
00001386                           382          
00001386  1401                     383          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
00001388  E542                     384          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
0000138A  1802                     385          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
0000138C  4242                     386          CLR         D2                  ; Clear out data register
0000138E  1404                     387          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
00001390  EA42                     388          ASR         #five,D2            ; Shift the register out to get just the mode
00001392  1802                     389          MOVE.B      D2,D4               ; Store mode into D4
00001394  4242                     390          CLR         D2
00001396                           391          
00001396  1401                     392          MOVE.B      D1,D2               ; Getting the EA register
00001398  EB42                     393          ASL         #five,D2
0000139A  1A02                     394          MOVE.B      D2,D5               ; Move just the register into D5
0000139C  4242                     395          CLR         D2                  ; Clearing D2 to put data back
0000139E  1405                     396          MOVE.B      D5,D2               ; Putting back the register
000013A0  EA42                     397          ASR         #five,D2            ; Shifting bits in order to read the register
000013A2  1A02                     398          MOVE.B      D2,D5               ; Store register into D5
000013A4                           399          
000013A4  6000 FC9A                400          BRA         LOOP                ; go back to the loop
000013A8                           401  
000013A8  43F9 00002C4B            402  opCMPIB LEA         dispByte, A1        ; Display byte
000013AE  103C 000E                403          MOVE.B      #14, D0             ; command for trap call to display message
000013B2  4E4F                     404          TRAP        #15                 ; trap call
000013B4                           405          
000013B4  43F9 00002BB8            406          LEA         space, A1           ; Display space
000013BA  103C 000E                407          MOVE.B      #14, D0             ; command for trap call to display message
000013BE  4E4F                     408          TRAP        #15                 ; trap call
000013C0                           409          
000013C0  4242                     410          CLR         D2
000013C2  1401                     411          MOVE.B      D1,D2
000013C4  E642                     412          ASR         #three,D2
000013C6  C47C 0007                413          AND         #seven,D2
000013CA  4243                     414          CLR         D3        
000013CC  1601                     415          MOVE.B      D1,D3
000013CE  C67C 0007                416          AND         #seven,D3
000013D2                           417          
000013D2  4241                     418          CLR         D1
000013D4  3218                     419          MOVE.W      (A0)+, D1
000013D6                           420          
000013D6  43F9 00002BBB            421          LEA         hashTag, A1           ; Display space
000013DC  103C 000E                422          MOVE.B      #14, D0             ; command for trap call to display message
000013E0  4E4F                     423          TRAP        #15                 ; trap call
000013E2                           424          
000013E2  103C 0003                425          MOVE.B      #3, D0
000013E6  4E4F                     426          TRAP        #15
000013E8                           427          
000013E8  43F9 00002BBF            428          LEA         comma, A1           ; Display space
000013EE  103C 000E                429          MOVE.B      #14, D0             ; command for trap call to display message
000013F2  4E4F                     430          TRAP        #15                 ; trap call
000013F4                           431          
000013F4  4EB9 00002356            432          JSR         printEA
000013FA                           433          
000013FA  43F9 00002BB4            434          LEA         newLine, A1           ; Display space
00001400  103C 000E                435          MOVE.B      #14, D0             ; command for trap call to display message
00001404  4E4F                     436          TRAP        #15                 ; trap call
00001406                           437  
00001406  6000 FC38                438          BRA         LOOP
0000140A                           439  
0000140A  43F9 00002C4E            440  opCMPIW LEA         dispWord, A1        ; Display byte
00001410  103C 000E                441          MOVE.B      #14, D0             ; command for trap call to display message
00001414  4E4F                     442          TRAP        #15                 ; trap call
00001416                           443          
00001416  43F9 00002BB8            444          LEA         space, A1           ; Display space
0000141C  103C 000E                445          MOVE.B      #14, D0             ; command for trap call to display message
00001420  4E4F                     446          TRAP        #15                 ; trap call
00001422                           447          
00001422  4242                     448          CLR         D2
00001424  1401                     449          MOVE.B      D1,D2
00001426  E642                     450          ASR         #three,D2
00001428  C47C 0007                451          AND         #seven,D2
0000142C  4243                     452          CLR         D3        
0000142E  1601                     453          MOVE.B      D1,D3
00001430  C67C 0007                454          AND         #seven,D3
00001434                           455          
00001434  4241                     456          CLR         D1
00001436  3218                     457          MOVE.W      (A0)+, D1
00001438                           458          
00001438  43F9 00002BBB            459          LEA         hashTag, A1           ; Display space
0000143E  103C 000E                460          MOVE.B      #14, D0             ; command for trap call to display message
00001442  4E4F                     461          TRAP        #15                 ; trap call
00001444                           462          
00001444  103C 0003                463          MOVE.B      #3, D0
00001448  4E4F                     464          TRAP        #15
0000144A                           465          
0000144A  43F9 00002BBF            466          LEA         comma, A1           ; Display space
00001450  103C 000E                467          MOVE.B      #14, D0             ; command for trap call to display message
00001454  4E4F                     468          TRAP        #15                 ; trap call
00001456                           469          
00001456  4EB9 00002356            470          JSR         printEA
0000145C                           471          
0000145C  43F9 00002BB4            472          LEA         newLine, A1           ; Display space
00001462  103C 000E                473          MOVE.B      #14, D0             ; command for trap call to display message
00001466  4E4F                     474          TRAP        #15                 ; trap call
00001468  6000 FBD6                475          BRA         LOOP
0000146C                           476  
0000146C  43F9 00002C51            477  opCMPIL LEA         dispLong, A1        ; Display byte
00001472  103C 000E                478          MOVE.B      #14, D0             ; command for trap call to display message
00001476  4E4F                     479          TRAP        #15                 ; trap call
00001478                           480          
00001478  43F9 00002BB8            481          LEA         space, A1           ; Display space
0000147E  103C 000E                482          MOVE.B      #14, D0             ; command for trap call to display message
00001482  4E4F                     483          TRAP        #15                 ; trap call
00001484                           484          
00001484  4242                     485          CLR         D2
00001486  1401                     486          MOVE.B      D1,D2
00001488  E642                     487          ASR         #three,D2
0000148A  C47C 0007                488          AND         #seven,D2
0000148E  4243                     489          CLR         D3        
00001490  1601                     490          MOVE.B      D1,D3
00001492  C67C 0007                491          AND         #seven,D3
00001496                           492          
00001496  4241                     493          CLR         D1
00001498  3218                     494          MOVE.W      (A0)+, D1
0000149A                           495          
0000149A  43F9 00002BBB            496          LEA         hashTag, A1           ; Display space
000014A0  103C 000E                497          MOVE.B      #14, D0             ; command for trap call to display message
000014A4  4E4F                     498          TRAP        #15                 ; trap call
000014A6                           499          
000014A6  103C 0003                500          MOVE.B      #3, D0
000014AA  4E4F                     501          TRAP        #15
000014AC                           502          
000014AC  43F9 00002BBF            503          LEA         comma, A1           ; Display space
000014B2  103C 000E                504          MOVE.B      #14, D0             ; command for trap call to display message
000014B6  4E4F                     505          TRAP        #15                 ; trap call
000014B8                           506          
000014B8  4EB9 00002356            507          JSR         printEA
000014BE                           508          
000014BE  43F9 00002BB4            509          LEA         newLine, A1           ; Display space
000014C4  103C 000E                510          MOVE.B      #14, D0             ; command for trap call to display message
000014C8  4E4F                     511          TRAP        #15                 ; trap call
000014CA                           512          
000014CA  6000 FB74                513          BRA         LOOP
000014CE                           514  
000014CE  43F9 00002BD2            515  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000014D4  103C 000E                516                  MOVE.B      #14, D0             ; command for trap call to display message
000014D8  4E4F                     517                  TRAP        #15                 ; trap call
000014DA                           518  
000014DA  43F9 00002BB8            519                  LEA         space, A1           ; Display space
000014E0  103C 000E                520                  MOVE.B      #14, D0             ; command for trap call to display message
000014E4  4E4F                     521                  TRAP        #15                 ; trap call
000014E6                           522                  
000014E6  4242                     523                  CLR         D2
000014E8  1218                     524                  MOVE.B      (A0)+, D1
000014EA  1401                     525                  MOVE.B      D1,D2               ; copy data over
000014EC  E642                     526                  ASR         #three,D2           ; Shift to the right to remove register
000014EE  C47C 0007                527                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
000014F2                           528                  
000014F2  4243                     529                  CLR         D3                  ; Clear D3 so we can move D1 in
000014F4  1601                     530                  MOVE.B      D1,D3               ; Move othr byte in
000014F6  C67C 0007                531                  AND         #seven,D3           ; Set everything besides register to 0
000014FA                           532                  
000014FA  4241                     533                  CLR         D1
000014FC  3218                     534                  MOVE.W      (A0)+, D1
000014FE                           535                 
000014FE                           536                  
000014FE  43F9 00002BBB            537                  LEA         hashTag, A1           ; Display space
00001504  103C 000E                538                  MOVE.B      #14, D0             ; command for trap call to display message
00001508  4E4F                     539                  TRAP        #15                 ; trap call
0000150A                           540          
0000150A  103C 0003                541                  MOVE.B      #3, D0
0000150E  4E4F                     542                  TRAP        #15
00001510                           543          
00001510  43F9 00002BBF            544                  LEA         comma, A1           ; Display space
00001516  103C 000E                545                  MOVE.B      #14, D0             ; command for trap call to display message
0000151A  4E4F                     546                  TRAP        #15                 ; trap call
0000151C                           547                  
0000151C  4EB9 00002356            548                  JSR         printEA
00001522                           549          
00001522  43F9 00002BB4            550                  LEA         newLine, A1           ; Display space
00001528  103C 000E                551                  MOVE.B      #14, D0             ; command for trap call to display message
0000152C  4E4F                     552                  TRAP        #15                 ; trap call
0000152E                           553                  
0000152E                           554                  
0000152E  6000 FB10                555                  BRA         LOOP                
00001532                           556          
00001532                           557  opDynBCLR       
00001532  4241                     558                  CLR         D1
00001534  1218                     559                  MOVE.B      (A0)+,D1            ; Copy second byte in
00001536  1601                     560                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
00001538  E243                     561                  ASR         #one,D3             ; Shift register over to the end
0000153A  C67C 0007                562                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
0000153E                           563                  
0000153E  1401                     564                  MOVE.B      D1,D2
00001540  EC42                     565                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
00001542  B47C 0002                566                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
00001546  6600 1626                567                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
0000154A                           568  
0000154A                           569                  
0000154A  43F9 00002BD2            570                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
00001550  103C 000E                571                  MOVE.B      #14, D0             ; command for trap call to display message
00001554  4E4F                     572                  TRAP        #15                 ; trap call  
00001556                           573                  
00001556  43F9 00002BB8            574                  LEA         space, A1           ; Display space
0000155C  103C 000E                575                  MOVE.B      #14, D0             ; command for trap call to display message
00001560  4E4F                     576                  TRAP        #15                 ; trap call
00001562                           577                  
00001562  143C 0000                578                  MOVE.B      #zero,D2                
00001566  4EB9 00002356            579                  JSR         printEA
0000156C                           580                  
0000156C  43F9 00002BBF            581                  LEA         comma, A1           ; Display space
00001572  103C 000E                582                  MOVE.B      #14, D0             ; command for trap call to display message
00001576  4E4F                     583                  TRAP        #15                 ; trap call
00001578                           584                  
00001578  4242                     585                  CLR         D2
0000157A  1401                     586                  MOVE.B      D1,D2               ; Using D2 to store EA mode
0000157C  E642                     587                  ASR         #three,D2           ; Remove/shift the register out
0000157E  C47C 0007                588                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
00001582                           589                  
00001582  4243                     590                  CLR         D3                  ; Clearing D3 to avoid mashing data
00001584  1601                     591                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
00001586  C67C 0007                592                  AND         #seven,D3           ; Change all bits except for register bits to 0
0000158A                           593                  
0000158A                           594  
0000158A  4EB9 00002356            595                  JSR         printEA
00001590                           596          
00001590  43F9 00002BB4            597                  LEA         newLine, A1           ; Display space
00001596  103C 000E                598                  MOVE.B      #14, D0             ; command for trap call to display message
0000159A  4E4F                     599                  TRAP        #15                 ; trap call            
0000159C                           600  
0000159C                           601  
0000159C  6000 FAA2                602                  BRA         LOOP                ; go back to the loop
000015A0                           603   
000015A0  43F9 00002BD7            604  opMOVEB LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
000015A6  103C 000E                605          MOVE.B      #14, D0             ; command for trap call to display message
000015AA  4E4F                     606          TRAP        #15                 ; trap call
000015AC  43F9 00002C4B            607          LEA         dispByte, A1        ; display byte
000015B2  103C 000E                608          MOVE.B      #14, D0             ; command for trap call to display message
000015B6  4E4F                     609          TRAP        #15                 ; trap call
000015B8  43F9 00002BB8            610          LEA         space, A1           ; create spaces
000015BE  103C 000E                611          MOVE.B      #14, D0             ; command for trap call to display message
000015C2  4E4F                     612          TRAP        #15                 ; trap call
000015C4                           613          
000015C4                           614          
000015C4  4245                     615          CLR         D5                  ; Clear D5
000015C6  1A01                     616          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
000015C8  E245                     617          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
000015CA  CA7C 0007                618          AND         #seven,D5
000015CE                           619          
000015CE  4244                     620          CLR         D4                  ; Clear out D4
000015D0  1801                     621          MOVE.B      D1,D4               ; Copy byte over to store destination mode
000015D2  C87C 0001                622          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
000015D6                           623          
000015D6  4241                     624          CLR          D1
000015D8  4242                     625          CLR          D2
000015DA  1218                     626          MOVE.B      (A0)+,D1            ; Copy byte into D1
000015DC  1401                     627          MOVE.B      D1,D2
000015DE  EC42                     628          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000015E0  D842                     629          ADD         D2,D4               ; Adds the remaining bits to D4
000015E2                           630          
000015E2  4242                     631          CLR         D2
000015E4  1401                     632          MOVE.B      D1,D2               ; Copy new byte over to D2
000015E6  E642                     633          ASR         #three,D2           ; Shift source register out
000015E8  C47C 0007                634          AND         #seven,D2           ; Set everything to 0 except for the mode
000015EC                           635          
000015EC  4243                     636          CLR         D3
000015EE  1601                     637          MOVE.B      D1,D3
000015F0  C67C 0007                638          AND         #seven,D3
000015F4                           639          
000015F4  4EB9 00002356            640          JSR         printEA
000015FA                           641          
000015FA  43F9 00002BBF            642          LEA         comma, A1           ; Display space
00001600  103C 000E                643          MOVE.B      #14, D0             ; command for trap call to display message
00001604  4E4F                     644          TRAP        #15                 ; trap call
00001606                           645          
00001606  4242                     646          CLR         D2
00001608  4243                     647          CLR         D3
0000160A  1404                     648          MOVE.B      D4,D2
0000160C  1605                     649          MOVE.B      D5,D3
0000160E                           650          
0000160E  4EB9 00002356            651          JSR         printEA
00001614                           652          
00001614                           653          
00001614  43F9 00002BB4            654          LEA         newLine, A1           ; Display space
0000161A  103C 000E                655          MOVE.B      #14, D0             ; command for trap call to display message
0000161E  4E4F                     656          TRAP        #15                 ; trap call            
00001620                           657  
00001620                           658  
00001620  6000 FA1E                659          BRA         LOOP                ; go back to the loop
00001624                           660          
00001624                           661  
00001624  43F9 00002BE2            662  opNEG   LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
0000162A  103C 000E                663          MOVE.B      #14, D0             ; command for trap call to display message
0000162E  4E4F                     664          TRAP        #15                 ; trap call
00001630                           665  
00001630                           666  opRTSJSR
00001630                           667  
00001630                           668  opMOVEMLEA
00001630                           669  
00001630  43F9 00002BF8            670  opSUBQ  LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
00001636  103C 000E                671          MOVE.B      #14, D0             ; command for trap call to display message
0000163A  4E4F                     672          TRAP        #15                 ; trap call
0000163C                           673  
0000163C  43F9 00002BFD            674  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001642  103C 000E                675          MOVE.B      #14, D0             ; command for trap call to display message
00001646  4E4F                     676          TRAP        #15                 ; trap call
00001648  43F9 00002BB8            677          LEA         space, A1           ; create spaces
0000164E  103C 000E                678          MOVE.B      #14, D0             ; command for trap call to display message
00001652  4E4F                     679          TRAP        #15                 ; trap call
00001654                           680  
00001654  43F9 00002C01            681  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
0000165A  103C 000E                682          MOVE.B      #14, D0             ; command for trap call to display message
0000165E  4E4F                     683          TRAP        #15                 ; trap call
00001660                           684  
00001660  43F9 00002C05            685  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
00001666  103C 000E                686          MOVE.B      #14, D0             ; command for trap call to display message
0000166A  4E4F                     687          TRAP        #15                 ; trap call
0000166C                           688  
0000166C  43F9 00002C09            689  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001672  103C 000E                690          MOVE.B      #14, D0             ; command for trap call to display message
00001676  4E4F                     691          TRAP        #15                 ; trap call
00001678                           692  
00001678  43F9 00002C0D            693  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
0000167E  103C 000E                694          MOVE.B      #14, D0             ; command for trap call to display message
00001682  4E4F                     695          TRAP        #15                 ; trap call
00001684                           696  
00001684  43F9 00002C19            697  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
0000168A  103C 000E                698          MOVE.B      #14, D0             ; command for trap call to display message
0000168E  4E4F                     699          TRAP        #15                 ; trap call
00001690                           700  
00001690  43F9 00002C25            701  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001696  103C 000E                702          MOVE.B      #14, D0             ; command for trap call to display message
0000169A  4E4F                     703          TRAP        #15                 ; trap call
0000169C  43F9 00002BB8            704          LEA         space, A1           ; create spaces
000016A2  103C 000E                705          MOVE.B      #14, D0             ; command for trap call to display message
000016A6  4E4F                     706          TRAP        #15                 ; trap call
000016A8                           707          
000016A8  E141                     708          ASL         #eight, D1
000016AA  1218                     709          MOVE.B      (A0)+, D1
000016AC                           710          
000016AC  4242                     711          CLR         D2
000016AE  4243                     712          CLR         D3
000016B0  1401                     713          MOVE.B      D1, D2
000016B2  E642                     714          ASR         #three, D2
000016B4  C47C 0007                715          AND         #seven, D2
000016B8  1601                     716          MOVE.B      D1, D3
000016BA  C67C 0007                717          AND         #seven, D3
000016BE                           718          
000016BE  4EB9 00002356            719          JSR         printEA
000016C4                           720          
000016C4  43F9 00002BBF            721          LEA         comma, A1           ; create comma
000016CA  103C 000E                722          MOVE.B      #14, D0             ; command for trap call to display message
000016CE  4E4F                     723          TRAP        #15                 ; trap call
000016D0                           724  
000016D0  4242                     725          CLR         D2
000016D2  4243                     726          CLR         D3
000016D4  3601                     727          MOVE.W      D1, D3
000016D6  E043                     728          ASR         #eight, D3
000016D8  E243                     729          ASR         #one, D3
000016DA  C67C 0007                730          AND         #seven, D3
000016DE                           731  
000016DE  4EB9 00002356            732          JSR         printEA
000016E4                           733          
000016E4  43F9 00002BB4            734          LEA         newLine, A1           ; create new line
000016EA  103C 000E                735          MOVE.B      #14, D0             ; command for trap call to display message
000016EE  4E4F                     736          TRAP        #15                 ; trap call
000016F0                           737          
000016F0  6000 F94E                738          BRA         LOOP
000016F4                           739          
000016F4  43F9 00002C2A            740  opADDB  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
000016FA  103C 000E                741          MOVE.B      #14, D0             ; command for trap call to display message
000016FE  4E4F                     742          TRAP        #15                 ; trap call
00001700                           743          
00001700  43F9 00002C4B            744          LEA         dispByte, A1        ; display byte
00001706  103C 000E                745          MOVE.B      #14, D0             ; command for trap call to display message
0000170A  4E4F                     746          TRAP        #15                 ; trap call
0000170C  43F9 00002BB8            747          LEA         space, A1           ; create spaces
00001712  103C 000E                748          MOVE.B      #14, D0             ; command for trap call to display message
00001716  4E4F                     749          TRAP        #15                 ; trap call
00001718                           750          
00001718  4242                     751          CLR         D2
0000171A  4243                     752          CLR         D3
0000171C  1401                     753          MOVE.B      D1, D2
0000171E  E642                     754          ASR         #three, D2
00001720  C47C 0007                755          AND         #seven, D2
00001724  1601                     756          MOVE.B      D1, D3
00001726  C67C 0007                757          AND         #seven, D3
0000172A                           758          
0000172A  4EB9 00002356            759          JSR         printEA
00001730                           760          
00001730  43F9 00002BBF            761          LEA         comma, A1           ; create comma
00001736  103C 000E                762          MOVE.B      #14, D0             ; command for trap call to display message
0000173A  4E4F                     763          TRAP        #15                 ; trap call
0000173C                           764  
0000173C  4242                     765          CLR         D2
0000173E  4243                     766          CLR         D3
00001740  3601                     767          MOVE.W      D1, D3
00001742  E043                     768          ASR         #eight, D3
00001744  E243                     769          ASR         #one, D3
00001746  C67C 0007                770          AND         #seven, D3
0000174A                           771  
0000174A  4EB9 00002356            772          JSR         printEA
00001750                           773          
00001750  43F9 00002BB4            774          LEA         newLine, A1           ; create new line
00001756  103C 000E                775          MOVE.B      #14, D0             ; command for trap call to display message
0000175A  4E4F                     776          TRAP        #15                 ; trap call
0000175C                           777          
0000175C  6000 F8E2                778          BRA         LOOP
00001760                           779          
00001760  43F9 00002C2A            780  opADDW  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
00001766  103C 000E                781          MOVE.B      #14, D0             ; command for trap call to display message
0000176A  4E4F                     782          TRAP        #15                 ; trap call
0000176C                           783  
0000176C  43F9 00002C4E            784          LEA         dispWord, A1        ; display word
00001772  103C 000E                785          MOVE.B      #14, D0             ; command for trap call to display message
00001776  4E4F                     786          TRAP        #15                 ; trap call
00001778  43F9 00002BB8            787          LEA         space, A1           ; create spaces
0000177E  103C 000E                788          MOVE.B      #14, D0             ; command for trap call to display message
00001782  4E4F                     789          TRAP        #15                 ; trap call
00001784                           790          
00001784  4242                     791          CLR         D2
00001786  4243                     792          CLR         D3
00001788  1401                     793          MOVE.B      D1, D2
0000178A  E642                     794          ASR         #three, D2
0000178C  C47C 0007                795          AND         #seven, D2
00001790  1601                     796          MOVE.B      D1, D3
00001792  C67C 0007                797          AND         #seven, D3
00001796                           798          
00001796  4EB9 00002356            799          JSR         printEA
0000179C                           800          
0000179C  43F9 00002BBF            801          LEA         comma, A1           ; create comma
000017A2  103C 000E                802          MOVE.B      #14, D0             ; command for trap call to display message
000017A6  4E4F                     803          TRAP        #15                 ; trap call
000017A8                           804  
000017A8  4242                     805          CLR         D2
000017AA  4243                     806          CLR         D3
000017AC  3601                     807          MOVE.W      D1, D3
000017AE  E043                     808          ASR         #eight, D3
000017B0  E243                     809          ASR         #one, D3
000017B2  C67C 0007                810          AND         #seven, D3
000017B6                           811  
000017B6  4EB9 00002356            812          JSR         printEA
000017BC                           813          
000017BC  43F9 00002BB4            814          LEA         newLine, A1           ; create new line
000017C2  103C 000E                815          MOVE.B      #14, D0             ; command for trap call to display message
000017C6  4E4F                     816          TRAP        #15                 ; trap call
000017C8                           817          
000017C8  6000 F876                818          BRA         LOOP
000017CC                           819          
000017CC  43F9 00002C2A            820  opADDL  LEA         ADDmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
000017D2  103C 000E                821          MOVE.B      #14, D0             ; command for trap call to display message
000017D6  4E4F                     822          TRAP        #15                 ; trap call
000017D8                           823          
000017D8  43F9 00002C51            824          LEA         dispLong, A1        ; display long
000017DE  103C 000E                825          MOVE.B      #14, D0             ; command for trap call to display message
000017E2  4E4F                     826          TRAP        #15                 ; trap call
000017E4  43F9 00002BB8            827          LEA         space, A1           ; create spaces
000017EA  103C 000E                828          MOVE.B      #14, D0             ; command for trap call to display message
000017EE  4E4F                     829          TRAP        #15                 ; trap call
000017F0                           830          
000017F0  4242                     831          CLR         D2
000017F2  4243                     832          CLR         D3
000017F4  1401                     833          MOVE.B      D1, D2
000017F6  E642                     834          ASR         #three, D2
000017F8  C47C 0007                835          AND         #seven, D2
000017FC  1601                     836          MOVE.B      D1, D3
000017FE  C67C 0007                837          AND         #seven, D3
00001802                           838          
00001802  4EB9 00002356            839          JSR         printEA
00001808                           840          
00001808  43F9 00002BBF            841          LEA         comma, A1           ; create comma
0000180E  103C 000E                842          MOVE.B      #14, D0             ; command for trap call to display message
00001812  4E4F                     843          TRAP        #15                 ; trap call
00001814                           844  
00001814  4242                     845          CLR         D2
00001816  4243                     846          CLR         D3
00001818  3601                     847          MOVE.W      D1, D3
0000181A  E043                     848          ASR         #eight, D3
0000181C  E243                     849          ASR         #one, D3
0000181E  C67C 0007                850          AND         #seven, D3
00001822                           851  
00001822  4EB9 00002356            852          JSR         printEA
00001828                           853          
00001828  43F9 00002BB4            854          LEA         newLine, A1           ; create new line
0000182E  103C 000E                855          MOVE.B      #14, D0             ; command for trap call to display message
00001832  4E4F                     856          TRAP        #15                 ; trap call
00001834                           857          
00001834  6000 F80A                858          BRA         LOOP
00001838                           859  
00001838  43F9 00002C2E            860  opADDAW LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
0000183E  103C 000E                861          MOVE.B      #14, D0             ; command for trap call to display message
00001842  4E4F                     862          TRAP        #15                 ; trap call
00001844                           863          
00001844  43F9 00002C4E            864          LEA         dispWord, A1        ; display word
0000184A  103C 000E                865          MOVE.B      #14, D0             ; command for trap call to display message
0000184E  4E4F                     866          TRAP        #15                 ; trap call
00001850  43F9 00002BB8            867          LEA         space, A1           ; create spaces
00001856  103C 000E                868          MOVE.B      #14, D0             ; command for trap call to display message
0000185A  4E4F                     869          TRAP        #15                 ; trap call
0000185C                           870          
0000185C  4242                     871          CLR         D2
0000185E  4243                     872          CLR         D3
00001860  1401                     873          MOVE.B      D1, D2
00001862  E642                     874          ASR         #three, D2
00001864  C47C 0007                875          AND         #seven, D2
00001868  1601                     876          MOVE.B      D1, D3
0000186A  C67C 0007                877          AND         #seven, D3
0000186E                           878          
0000186E  4EB9 00002356            879          JSR         printEA
00001874                           880          
00001874  43F9 00002BBF            881          LEA         comma, A1           ; create comma
0000187A  103C 000E                882          MOVE.B      #14, D0             ; command for trap call to display message
0000187E  4E4F                     883          TRAP        #15                 ; trap call
00001880                           884  
00001880  4242                     885          CLR         D2
00001882  4243                     886          CLR         D3
00001884  143C 0001                887          MOVE.B      #one, D2
00001888  3601                     888          MOVE.W      D1, D3
0000188A  E043                     889          ASR         #eight, D3
0000188C  E243                     890          ASR         #one, D3
0000188E  C67C 0007                891          AND         #seven, D3
00001892                           892  
00001892  4EB9 00002356            893          JSR         printEA
00001898                           894          
00001898  43F9 00002BB4            895          LEA         newLine, A1           ; create new line
0000189E  103C 000E                896          MOVE.B      #14, D0             ; command for trap call to display message
000018A2  4E4F                     897          TRAP        #15                 ; trap call
000018A4                           898          
000018A4  6000 F79A                899          BRA         LOOP
000018A8                           900  
000018A8  43F9 00002C2E            901  opADDAL LEA         ADDAmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
000018AE  103C 000E                902          MOVE.B      #14, D0             ; command for trap call to display message
000018B2  4E4F                     903          TRAP        #15                 ; trap call
000018B4                           904  
000018B4  43F9 00002C51            905          LEA         dispLong, A1        ; display long
000018BA  103C 000E                906          MOVE.B      #14, D0             ; command for trap call to display message
000018BE  4E4F                     907          TRAP        #15                 ; trap call
000018C0  43F9 00002BB8            908          LEA         space, A1           ; create spaces
000018C6  103C 000E                909          MOVE.B      #14, D0             ; command for trap call to display message
000018CA  4E4F                     910          TRAP        #15                 ; trap call
000018CC                           911          
000018CC  4242                     912          CLR         D2
000018CE  4243                     913          CLR         D3
000018D0  1401                     914          MOVE.B      D1, D2
000018D2  E642                     915          ASR         #three, D2
000018D4  C47C 0007                916          AND         #seven, D2
000018D8  1601                     917          MOVE.B      D1, D3
000018DA  C67C 0007                918          AND         #seven, D3
000018DE                           919          
000018DE  4EB9 00002356            920          JSR         printEA
000018E4                           921          
000018E4  43F9 00002BBF            922          LEA         comma, A1           ; create comma
000018EA  103C 000E                923          MOVE.B      #14, D0             ; command for trap call to display message
000018EE  4E4F                     924          TRAP        #15                 ; trap call
000018F0                           925  
000018F0  4242                     926          CLR         D2
000018F2  4243                     927          CLR         D3
000018F4  143C 0001                928          MOVE.B      #one, D2
000018F8  3601                     929          MOVE.W      D1, D3
000018FA  E043                     930          ASR         #eight, D3
000018FC  E243                     931          ASR         #one, D3
000018FE  C67C 0007                932          AND         #seven, D3
00001902                           933  
00001902  4EB9 00002356            934          JSR         printEA
00001908                           935          
00001908  43F9 00002BB4            936          LEA         newLine, A1           ; create new line
0000190E  103C 000E                937          MOVE.B      #14, D0             ; command for trap call to display message
00001912  4E4F                     938          TRAP        #15                 ; trap call
00001914                           939          
00001914  6000 F72A                940          BRA         LOOP
00001918                           941          
00001918  43F9 00002C3F            942  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000191E  103C 000E                943          MOVE.B      #14, D0             ; command for trap call to display message
00001922  4E4F                     944          TRAP        #15                 ; trap call
00001924                           945          
00001924  43F9 00002C4E            946          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000192A  103C 000E                947          MOVE.B      #14, D0             ; command for trap call to display message
0000192E  4E4F                     948          TRAP        #15                 ; trap call
00001930                           949          
00001930  43F9 00002BB8            950          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001936  103C 000E                951          MOVE.B      #14, D0             ; command for trap call to display message
0000193A  4E4F                     952          TRAP        #15                 ; trap call
0000193C                           953          
0000193C  4242                     954          CLR         D2
0000193E  4243                     955          CLR         D3
00001940  1401                     956          MOVE.B      D1,D2
00001942  1601                     957          MOVE.B      D1,D3
00001944                           958          
00001944  E602                     959          ASR.B       #three, D2
00001946  C47C 0007                960          AND         #seven, D2
0000194A  C67C 0007                961          AND         #seven, D3        
0000194E                           962          
0000194E  4EB9 00002356            963          JSR         printEA
00001954                           964          
00001954  43F9 00002BB4            965          LEA         newLine, A1           ; Display space
0000195A  103C 000E                966          MOVE.B      #14, D0             ; command for trap call to display message
0000195E  4E4F                     967          TRAP        #15                 ; trap call
00001960                           968          
00001960  6000 F6DE                969          BRA         LOOP
00001964                           970  
00001964  43F9 00002C3B            971  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000196A  103C 000E                972          MOVE.B      #14, D0             ; command for trap call to display message
0000196E  4E4F                     973          TRAP        #15                 ; trap call
00001970                           974          
00001970  43F9 00002C4E            975          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001976  103C 000E                976          MOVE.B      #14, D0             ; command for trap call to display message
0000197A  4E4F                     977          TRAP        #15                 ; trap call
0000197C                           978          
0000197C  43F9 00002BB8            979          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001982  103C 000E                980          MOVE.B      #14, D0             ; command for trap call to display message
00001986  4E4F                     981          TRAP        #15                 ; trap call
00001988                           982          
00001988  4242                     983          CLR         D2
0000198A  4243                     984          CLR         D3
0000198C  1401                     985          MOVE.B      D1,D2
0000198E  1601                     986          MOVE.B      D1,D3
00001990                           987          
00001990  E602                     988          ASR.B       #three, D2
00001992  C47C 0007                989          AND         #seven, D2
00001996  C67C 0007                990          AND         #seven, D3        
0000199A                           991          
0000199A  4EB9 00002356            992          JSR         printEA
000019A0                           993          
000019A0  43F9 00002BB4            994          LEA         newLine, A1           ; Display space
000019A6  103C 000E                995          MOVE.B      #14, D0             ; command for trap call to display message
000019AA  4E4F                     996          TRAP        #15                 ; trap call
000019AC                           997          
000019AC  6000 F692                998          BRA         LOOP
000019B0                           999  
000019B0  43F9 00002C37           1000  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
000019B6  103C 000E               1001          MOVE.B      #14, D0             ; command for trap call to display message
000019BA  4E4F                    1002          TRAP        #15                 ; trap call
000019BC                          1003          
000019BC  43F9 00002C4E           1004          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
000019C2  103C 000E               1005          MOVE.B      #14, D0             ; command for trap call to display message
000019C6  4E4F                    1006          TRAP        #15                 ; trap call
000019C8                          1007          
000019C8  43F9 00002BB8           1008          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
000019CE  103C 000E               1009          MOVE.B      #14, D0             ; command for trap call to display message
000019D2  4E4F                    1010          TRAP        #15                 ; trap call
000019D4                          1011          
000019D4  4242                    1012          CLR         D2
000019D6  4243                    1013          CLR         D3
000019D8  1401                    1014          MOVE.B      D1,D2
000019DA  1601                    1015          MOVE.B      D1,D3
000019DC                          1016          
000019DC  E602                    1017          ASR.B       #three, D2
000019DE  C47C 0007               1018          AND         #seven, D2
000019E2  C67C 0007               1019          AND         #seven, D3        
000019E6                          1020          
000019E6  4EB9 00002356           1021          JSR         printEA
000019EC                          1022          
000019EC  43F9 00002BB4           1023          LEA         newLine, A1           ; Display space
000019F2  103C 000E               1024          MOVE.B      #14, D0             ; command for trap call to display message
000019F6  4E4F                    1025          TRAP        #15                 ; trap call
000019F8                          1026          
000019F8  6000 F646               1027          BRA         LOOP
000019FC                          1028  
000019FC  43F9 00002C33           1029  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
00001A02  103C 000E               1030          MOVE.B      #14, D0             ; command for trap call to display message
00001A06  4E4F                    1031          TRAP        #15                 ; trap call
00001A08                          1032          
00001A08  43F9 00002C4E           1033          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001A0E  103C 000E               1034          MOVE.B      #14, D0             ; command for trap call to display message
00001A12  4E4F                    1035          TRAP        #15                 ; trap call
00001A14                          1036          
00001A14  43F9 00002BB8           1037          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001A1A  103C 000E               1038          MOVE.B      #14, D0             ; command for trap call to display message
00001A1E  4E4F                    1039          TRAP        #15                 ; trap call
00001A20                          1040          
00001A20  4242                    1041          CLR         D2
00001A22  4243                    1042          CLR         D3
00001A24  1401                    1043          MOVE.B      D1,D2
00001A26  1601                    1044          MOVE.B      D1,D3
00001A28                          1045          
00001A28  E602                    1046          ASR.B       #three, D2
00001A2A  C47C 0007               1047          AND         #seven, D2
00001A2E  C67C 0007               1048          AND         #seven, D3        
00001A32                          1049          
00001A32  4EB9 00002356           1050          JSR         printEA
00001A38                          1051          
00001A38  43F9 00002BB4           1052          LEA         newLine, A1           ; Display space
00001A3E  103C 000E               1053          MOVE.B      #14, D0             ; command for trap call to display message
00001A42  4E4F                    1054          TRAP        #15                 ; trap call
00001A44                          1055          
00001A44  6000 F5FA               1056          BRA         LOOP
00001A48                          1057  
00001A48  43F9 00002C47           1058  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001A4E  103C 000E               1059          MOVE.B      #14, D0             ; command for trap call to display message
00001A52  4E4F                    1060          TRAP        #15                 ; trap call
00001A54                          1061          
00001A54  43F9 00002C4E           1062          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001A5A  103C 000E               1063          MOVE.B      #14, D0             ; command for trap call to display message
00001A5E  4E4F                    1064          TRAP        #15                 ; trap call
00001A60                          1065          
00001A60  43F9 00002BB8           1066          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001A66  103C 000E               1067          MOVE.B      #14, D0             ; command for trap call to display message
00001A6A  4E4F                    1068          TRAP        #15                 ; trap call
00001A6C                          1069          
00001A6C  4242                    1070          CLR         D2
00001A6E  4243                    1071          CLR         D3
00001A70  1401                    1072          MOVE.B      D1,D2
00001A72  1601                    1073          MOVE.B      D1,D3
00001A74                          1074          
00001A74  E602                    1075          ASR.B       #three, D2
00001A76  C47C 0007               1076          AND         #seven, D2
00001A7A  C67C 0007               1077          AND         #seven, D3        
00001A7E                          1078          
00001A7E  4EB9 00002356           1079          JSR         printEA
00001A84                          1080          
00001A84  43F9 00002BB4           1081          LEA         newLine, A1           ; Display space
00001A8A  103C 000E               1082          MOVE.B      #14, D0             ; command for trap call to display message
00001A8E  4E4F                    1083          TRAP        #15                 ; trap call
00001A90                          1084          
00001A90  6000 F5AE               1085          BRA         LOOP
00001A94                          1086  
00001A94  43F9 00002C43           1087  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001A9A  103C 000E               1088          MOVE.B      #14, D0             ; command for trap call to display message
00001A9E  4E4F                    1089          TRAP        #15                 ; trap call
00001AA0                          1090          
00001AA0  43F9 00002C4E           1091          LEA         dispWord, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001AA6  103C 000E               1092          MOVE.B      #14, D0             ; command for trap call to display message
00001AAA  4E4F                    1093          TRAP        #15                 ; trap call
00001AAC                          1094          
00001AAC  43F9 00002BB8           1095          LEA         space, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001AB2  103C 000E               1096          MOVE.B      #14, D0             ; command for trap call to display message
00001AB6  4E4F                    1097          TRAP        #15                 ; trap call
00001AB8                          1098          
00001AB8  4242                    1099          CLR         D2
00001ABA  4243                    1100          CLR         D3
00001ABC  1401                    1101          MOVE.B      D1,D2
00001ABE  1601                    1102          MOVE.B      D1,D3
00001AC0                          1103          
00001AC0  E602                    1104          ASR.B       #three, D2
00001AC2  C47C 0007               1105          AND         #seven, D2
00001AC6  C67C 0007               1106          AND         #seven, D3        
00001ACA                          1107          
00001ACA  4EB9 00002356           1108          JSR         printEA
00001AD0                          1109          
00001AD0  43F9 00002BB4           1110          LEA         newLine, A1           ; Display space
00001AD6  103C 000E               1111          MOVE.B      #14, D0             ; command for trap call to display message
00001ADA  4E4F                    1112          TRAP        #15                 ; trap call
00001ADC                          1113          
00001ADC  6000 F562               1114          BRA         LOOP
00001AE0                          1115          
00001AE0  4242                    1116  memSB   CLR         D2
00001AE2  1401                    1117          MOVE.B      D1,D2
00001AE4  E642                    1118          ASR         #three, D2
00001AE6                          1119          
00001AE6  C47C 0007               1120          AND         #$07, D2
00001AEA                          1121          
00001AEA  B43C 0000               1122          CMP.B       #zero, D2
00001AEE  6700 002E               1123          BEQ         opASBI
00001AF2  B43C 0004               1124          CMP.B       #four, D2
00001AF6  6700 0088               1125          BEQ         opASBR
00001AFA  B43C 0001               1126          CMP.B       #one, D2
00001AFE  6700 00E2               1127          BEQ         opLSBI
00001B02  B43C 0005               1128          CMP.B       #five, D2
00001B06  6700 013C               1129          BEQ         opLSBR
00001B0A  B43C 0003               1130          CMP.B       #three, D2
00001B0E  6700 0196               1131          BEQ         opROBI
00001B12  B43C 0007               1132          CMP.B       #seven, D2
00001B16  6700 01F0               1133          BEQ         opROBR
00001B1A  6000 1052               1134          BRA         printInvalid
00001B1E                          1135          
00001B1E  4242                    1136  opASBI  CLR         D2
00001B20  3401                    1137          MOVE.W      D1, D2
00001B22  E042                    1138          ASR         #eight, D2
00001B24  C47C 0001               1139          AND         #$01, D2
00001B28                          1140      
00001B28  B43C 0000               1141          CMP.B       #zero, D2
00001B2C  6700 000E               1142          BEQ         opASRBI
00001B30  B43C 0001               1143          CMP.B       #one, D2
00001B34  6700 0028               1144          BEQ         opASLBI
00001B38  6000 1034               1145          BRA         printInvalid
00001B3C                          1146          
00001B3C  43F9 00002C3B           1147  opASRBI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001B42  103C 000E               1148          MOVE.B      #14, D0             ; command for trap call to display message
00001B46  4E4F                    1149          TRAP        #15                 ; trap call
00001B48                          1150  
00001B48  43F9 00002C4B           1151          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001B4E  103C 000E               1152          MOVE.B      #14, D0             ; command for trap call to display message
00001B52  4E4F                    1153          TRAP        #15                 ; trap call
00001B54                          1154          
00001B54  4EB9 0000227E           1155          JSR         PrntImm
00001B5A                          1156          
00001B5A  6000 F4E4               1157          BRA         LOOP
00001B5E                          1158  
00001B5E  43F9 00002C3F           1159  opASLBI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001B64  103C 000E               1160          MOVE.B      #14, D0             ; command for trap call to display message
00001B68  4E4F                    1161          TRAP        #15                 ; trap call
00001B6A                          1162  
00001B6A  43F9 00002C4B           1163          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001B70  103C 000E               1164          MOVE.B      #14, D0             ; command for trap call to display message
00001B74  4E4F                    1165          TRAP        #15                 ; trap call
00001B76                          1166          
00001B76  4EB9 0000227E           1167          JSR         PrntImm
00001B7C                          1168          
00001B7C  6000 F4C2               1169          BRA         LOOP
00001B80                          1170  
00001B80  4242                    1171  opASBR  CLR         D2
00001B82  3401                    1172          MOVE.W      D1, D2
00001B84  E042                    1173          ASR         #eight, D2
00001B86  C47C 0001               1174          AND         #$01, D2
00001B8A                          1175      
00001B8A  B43C 0000               1176          CMP.B       #zero, D2
00001B8E  6700 000E               1177          BEQ         opASRBR
00001B92  B43C 0001               1178          CMP.B       #one, D2
00001B96  6700 0028               1179          BEQ         opASLBR
00001B9A  6000 0FD2               1180          BRA         printInvalid 
00001B9E                          1181          
00001B9E  43F9 00002C3B           1182  opASRBR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001BA4  103C 000E               1183          MOVE.B      #14, D0             ; command for trap call to display message
00001BA8  4E4F                    1184          TRAP        #15                 ; trap call
00001BAA                          1185  
00001BAA  43F9 00002C4B           1186          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001BB0  103C 000E               1187          MOVE.B      #14, D0             ; command for trap call to display message
00001BB4  4E4F                    1188          TRAP        #15                 ; trap call
00001BB6                          1189          
00001BB6  4EB9 000022DA           1190          JSR         PrntReg
00001BBC                          1191          
00001BBC  6000 F482               1192          BRA         LOOP
00001BC0                          1193  
00001BC0  43F9 00002C3F           1194  opASLBR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001BC6  103C 000E               1195          MOVE.B      #14, D0             ; command for trap call to display message
00001BCA  4E4F                    1196          TRAP        #15                 ; trap call
00001BCC                          1197  
00001BCC  43F9 00002C4B           1198          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001BD2  103C 000E               1199          MOVE.B      #14, D0             ; command for trap call to display message
00001BD6  4E4F                    1200          TRAP        #15                 ; trap call
00001BD8                          1201          
00001BD8  4EB9 000022DA           1202          JSR         PrntReg
00001BDE                          1203          
00001BDE  6000 F460               1204          BRA         LOOP
00001BE2                          1205  
00001BE2  4242                    1206  opLSBI  CLR         D2
00001BE4  3401                    1207          MOVE.W      D1, D2
00001BE6  E042                    1208          ASR         #eight, D2
00001BE8  C47C 0001               1209          AND         #$01, D2
00001BEC                          1210      
00001BEC  B43C 0000               1211          CMP.B       #zero, D2
00001BF0  6700 000E               1212          BEQ         opLSRBI
00001BF4  B43C 0001               1213          CMP.B       #one, D2
00001BF8  6700 0028               1214          BEQ         opLSLBI
00001BFC  6000 0F70               1215          BRA         printInvalid 
00001C00                          1216          
00001C00  43F9 00002C33           1217  opLSRBI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001C06  103C 000E               1218          MOVE.B      #14, D0             ; command for trap call to display message
00001C0A  4E4F                    1219          TRAP        #15                 ; trap call
00001C0C                          1220  
00001C0C  43F9 00002C4B           1221          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001C12  103C 000E               1222          MOVE.B      #14, D0             ; command for trap call to display message
00001C16  4E4F                    1223          TRAP        #15                 ; trap call
00001C18                          1224          
00001C18  4EB9 0000227E           1225          JSR         PrntImm
00001C1E                          1226          
00001C1E  6000 F420               1227          BRA         LOOP
00001C22                          1228  
00001C22                          1229  
00001C22  43F9 00002C37           1230  opLSLBI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001C28  103C 000E               1231          MOVE.B      #14, D0             ; command for trap call to display message
00001C2C  4E4F                    1232          TRAP        #15                 ; trap call
00001C2E                          1233  
00001C2E  43F9 00002C4B           1234          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001C34  103C 000E               1235          MOVE.B      #14, D0             ; command for trap call to display message
00001C38  4E4F                    1236          TRAP        #15                 ; trap call
00001C3A                          1237          
00001C3A  4EB9 0000227E           1238          JSR         PrntImm
00001C40                          1239          
00001C40  6000 F3FE               1240          BRA         LOOP
00001C44                          1241  
00001C44                          1242  
00001C44  4242                    1243  opLSBR  CLR         D2
00001C46  3401                    1244          MOVE.W      D1, D2
00001C48  E042                    1245          ASR         #eight, D2
00001C4A  C47C 0001               1246          AND         #$01, D2
00001C4E                          1247      
00001C4E  B43C 0000               1248          CMP.B       #zero, D2
00001C52  6700 000E               1249          BEQ         opLSRBR
00001C56  B43C 0001               1250          CMP.B       #one, D2
00001C5A  6700 0028               1251          BEQ         opLSLBR
00001C5E  6000 0F0E               1252          BRA         printInvalid 
00001C62                          1253          
00001C62  43F9 00002C33           1254  opLSRBR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001C68  103C 000E               1255          MOVE.B      #14, D0             ; command for trap call to display message
00001C6C  4E4F                    1256          TRAP        #15                 ; trap call
00001C6E                          1257  
00001C6E  43F9 00002C4B           1258          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001C74  103C 000E               1259          MOVE.B      #14, D0             ; command for trap call to display message
00001C78  4E4F                    1260          TRAP        #15                 ; trap call
00001C7A                          1261          
00001C7A  4EB9 000022DA           1262          JSR         PrntReg
00001C80                          1263          
00001C80  6000 F3BE               1264          BRA         LOOP
00001C84                          1265          
00001C84  43F9 00002C37           1266  opLSLBR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001C8A  103C 000E               1267          MOVE.B      #14, D0             ; command for trap call to display message
00001C8E  4E4F                    1268          TRAP        #15                 ; trap call
00001C90                          1269  
00001C90  43F9 00002C4B           1270          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001C96  103C 000E               1271          MOVE.B      #14, D0             ; command for trap call to display message
00001C9A  4E4F                    1272          TRAP        #15                 ; trap call
00001C9C                          1273          
00001C9C  4EB9 000022DA           1274          JSR         PrntReg
00001CA2                          1275          
00001CA2  6000 F39C               1276          BRA         LOOP
00001CA6                          1277  
00001CA6                          1278  
00001CA6                          1279  
00001CA6  4242                    1280  opROBI  CLR         D2
00001CA8  3401                    1281          MOVE.W      D1, D2
00001CAA  E042                    1282          ASR         #eight, D2
00001CAC  C47C 0001               1283          AND         #$01, D2
00001CB0                          1284      
00001CB0  B43C 0000               1285          CMP.B       #zero, D2
00001CB4  6700 000E               1286          BEQ         opRORBI
00001CB8  B43C 0001               1287          CMP.B       #one, D2
00001CBC  6700 0028               1288          BEQ         opROLBI
00001CC0  6000 0EAC               1289          BRA         printInvalid 
00001CC4                          1290          
00001CC4  43F9 00002C43           1291  opRORBI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001CCA  103C 000E               1292          MOVE.B      #14, D0             ; command for trap call to display message
00001CCE  4E4F                    1293          TRAP        #15                 ; trap call
00001CD0                          1294  
00001CD0  43F9 00002C4B           1295          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001CD6  103C 000E               1296          MOVE.B      #14, D0             ; command for trap call to display message
00001CDA  4E4F                    1297          TRAP        #15                 ; trap call
00001CDC                          1298          
00001CDC  4EB9 0000227E           1299          JSR         PrntImm
00001CE2                          1300          
00001CE2  6000 F35C               1301          BRA         LOOP
00001CE6                          1302  
00001CE6  43F9 00002C47           1303  opROLBI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001CEC  103C 000E               1304          MOVE.B      #14, D0             ; command for trap call to display message
00001CF0  4E4F                    1305          TRAP        #15                 ; trap call
00001CF2                          1306  
00001CF2  43F9 00002C4B           1307          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001CF8  103C 000E               1308          MOVE.B      #14, D0             ; command for trap call to display message
00001CFC  4E4F                    1309          TRAP        #15                 ; trap call
00001CFE                          1310          
00001CFE  4EB9 0000227E           1311          JSR         PrntImm
00001D04                          1312          
00001D04  6000 F33A               1313          BRA         LOOP
00001D08                          1314  
00001D08  4242                    1315  opROBR  CLR         D2
00001D0A  3401                    1316          MOVE.W      D1, D2
00001D0C  E042                    1317          ASR         #eight, D2
00001D0E  C47C 0001               1318          AND         #$01, D2
00001D12                          1319      
00001D12  B43C 0000               1320          CMP.B       #zero, D2
00001D16  6700 000E               1321          BEQ         opRORBR
00001D1A  B43C 0001               1322          CMP.B       #one, D2
00001D1E  6700 0028               1323          BEQ         opROLBR
00001D22  6000 0E4A               1324          BRA         printInvalid     
00001D26                          1325          
00001D26  43F9 00002C43           1326  opRORBR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001D2C  103C 000E               1327          MOVE.B      #14, D0             ; command for trap call to display message
00001D30  4E4F                    1328          TRAP        #15                 ; trap call
00001D32                          1329  
00001D32  43F9 00002C4B           1330          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001D38  103C 000E               1331          MOVE.B      #14, D0             ; command for trap call to display message
00001D3C  4E4F                    1332          TRAP        #15                 ; trap call
00001D3E                          1333          
00001D3E  4EB9 000022DA           1334          JSR         PrntReg
00001D44                          1335          
00001D44  6000 F2FA               1336          BRA         LOOP
00001D48                          1337  
00001D48  43F9 00002C47           1338  opROLBR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001D4E  103C 000E               1339          MOVE.B      #14, D0             ; command for trap call to display message
00001D52  4E4F                    1340          TRAP        #15                 ; trap call
00001D54                          1341  
00001D54  43F9 00002C4B           1342          LEA         dispByte, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001D5A  103C 000E               1343          MOVE.B      #14, D0             ; command for trap call to display message
00001D5E  4E4F                    1344          TRAP        #15                 ; trap call
00001D60                          1345          
00001D60  4EB9 000022DA           1346          JSR         PrntReg
00001D66                          1347          
00001D66  6000 F2D8               1348          BRA         LOOP       
00001D6A                          1349  
00001D6A  4242                    1350  memSW   CLR         D2
00001D6C  1401                    1351          MOVE.B      D1,D2
00001D6E  E642                    1352          ASR         #three, D2
00001D70                          1353          
00001D70  C47C 0007               1354          AND         #$07, D2
00001D74                          1355          
00001D74  B43C 0000               1356          CMP.B       #zero, D2
00001D78  6700 002E               1357          BEQ         opASWI
00001D7C  B43C 0004               1358          CMP.B       #four, D2
00001D80  6700 0088               1359          BEQ         opASWR
00001D84  B43C 0001               1360          CMP.B       #one, D2
00001D88  6700 00E2               1361          BEQ         opLSWI
00001D8C  B43C 0005               1362          CMP.B       #five, D2
00001D90  6700 013C               1363          BEQ         opLSWR
00001D94  B43C 0003               1364          CMP.B       #three, D2
00001D98  6700 0196               1365          BEQ         opROWI
00001D9C  B43C 0007               1366          CMP.B       #seven, D2
00001DA0  6700 01F0               1367          BEQ         opROWR
00001DA4  6000 0DC8               1368          BRA         printInvalid
00001DA8                          1369          
00001DA8  4242                    1370  opASWI  CLR         D2
00001DAA  3401                    1371          MOVE.W      D1, D2
00001DAC  E042                    1372          ASR         #eight, D2
00001DAE  C47C 0001               1373          AND         #$01, D2
00001DB2                          1374      
00001DB2  B43C 0000               1375          CMP.B       #zero, D2
00001DB6  6700 000E               1376          BEQ         opASRWI
00001DBA  B43C 0001               1377          CMP.B       #one, D2
00001DBE  6700 0028               1378          BEQ         opASLWI
00001DC2  6000 0DAA               1379          BRA         printInvalid
00001DC6                          1380          
00001DC6  43F9 00002C3B           1381  opASRWI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001DCC  103C 000E               1382          MOVE.B      #14, D0             ; command for trap call to display message
00001DD0  4E4F                    1383          TRAP        #15                 ; trap call
00001DD2                          1384  
00001DD2  43F9 00002C4E           1385          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001DD8  103C 000E               1386          MOVE.B      #14, D0             ; command for trap call to display message
00001DDC  4E4F                    1387          TRAP        #15                 ; trap call
00001DDE                          1388          
00001DDE  4EB9 0000227E           1389          JSR         PrntImm
00001DE4                          1390          
00001DE4  6000 F25A               1391          BRA         LOOP
00001DE8                          1392  
00001DE8  43F9 00002C3F           1393  opASLWI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001DEE  103C 000E               1394          MOVE.B      #14, D0             ; command for trap call to display message
00001DF2  4E4F                    1395          TRAP        #15                 ; trap call
00001DF4                          1396  
00001DF4  43F9 00002C4E           1397          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001DFA  103C 000E               1398          MOVE.B      #14, D0             ; command for trap call to display message
00001DFE  4E4F                    1399          TRAP        #15                 ; trap call
00001E00                          1400          
00001E00  4EB9 0000227E           1401          JSR         PrntImm
00001E06                          1402          
00001E06  6000 F238               1403          BRA         LOOP
00001E0A                          1404  
00001E0A  4242                    1405  opASWR  CLR         D2
00001E0C  3401                    1406          MOVE.W      D1, D2
00001E0E  E042                    1407          ASR         #eight, D2
00001E10  C47C 0001               1408          AND         #$01, D2
00001E14                          1409      
00001E14  B43C 0000               1410          CMP.B       #zero, D2
00001E18  6700 000E               1411          BEQ         opASRWR
00001E1C  B43C 0001               1412          CMP.B       #one, D2
00001E20  6700 0028               1413          BEQ         opASLWR
00001E24  6000 0D48               1414          BRA         printInvalid 
00001E28                          1415          
00001E28  43F9 00002C3B           1416  opASRWR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001E2E  103C 000E               1417          MOVE.B      #14, D0             ; command for trap call to display message
00001E32  4E4F                    1418          TRAP        #15                 ; trap call
00001E34                          1419  
00001E34  43F9 00002C4E           1420          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001E3A  103C 000E               1421          MOVE.B      #14, D0             ; command for trap call to display message
00001E3E  4E4F                    1422          TRAP        #15                 ; trap call
00001E40                          1423          
00001E40  4EB9 000022DA           1424          JSR         PrntReg
00001E46                          1425          
00001E46  6000 F1F8               1426          BRA         LOOP
00001E4A                          1427  
00001E4A  43F9 00002C3F           1428  opASLWR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001E50  103C 000E               1429          MOVE.B      #14, D0             ; command for trap call to display message
00001E54  4E4F                    1430          TRAP        #15                 ; trap call
00001E56                          1431  
00001E56  43F9 00002C4E           1432          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001E5C  103C 000E               1433          MOVE.B      #14, D0             ; command for trap call to display message
00001E60  4E4F                    1434          TRAP        #15                 ; trap call
00001E62                          1435          
00001E62  4EB9 000022DA           1436          JSR         PrntReg
00001E68                          1437          
00001E68  6000 F1D6               1438          BRA         LOOP
00001E6C                          1439  
00001E6C  4242                    1440  opLSWI  CLR         D2
00001E6E  3401                    1441          MOVE.W      D1, D2
00001E70  E042                    1442          ASR         #eight, D2
00001E72  C47C 0001               1443          AND         #$01, D2
00001E76                          1444      
00001E76  B43C 0000               1445          CMP.B       #zero, D2
00001E7A  6700 000E               1446          BEQ         opLSRWI
00001E7E  B43C 0001               1447          CMP.B       #one, D2
00001E82  6700 0028               1448          BEQ         opLSLWI
00001E86  6000 0CE6               1449          BRA         printInvalid 
00001E8A                          1450          
00001E8A  43F9 00002C33           1451  opLSRWI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001E90  103C 000E               1452          MOVE.B      #14, D0             ; command for trap call to display message
00001E94  4E4F                    1453          TRAP        #15                 ; trap call
00001E96                          1454  
00001E96  43F9 00002C4E           1455          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001E9C  103C 000E               1456          MOVE.B      #14, D0             ; command for trap call to display message
00001EA0  4E4F                    1457          TRAP        #15                 ; trap call
00001EA2                          1458          
00001EA2  4EB9 0000227E           1459          JSR         PrntImm
00001EA8                          1460          
00001EA8  6000 F196               1461          BRA         LOOP
00001EAC                          1462  
00001EAC                          1463  
00001EAC  43F9 00002C37           1464  opLSLWI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001EB2  103C 000E               1465          MOVE.B      #14, D0             ; command for trap call to display message
00001EB6  4E4F                    1466          TRAP        #15                 ; trap call
00001EB8                          1467  
00001EB8  43F9 00002C4E           1468          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001EBE  103C 000E               1469          MOVE.B      #14, D0             ; command for trap call to display message
00001EC2  4E4F                    1470          TRAP        #15                 ; trap call
00001EC4                          1471          
00001EC4  4EB9 0000227E           1472          JSR         PrntImm
00001ECA                          1473          
00001ECA  6000 F174               1474          BRA         LOOP
00001ECE                          1475  
00001ECE                          1476  
00001ECE  4242                    1477  opLSWR  CLR         D2
00001ED0  3401                    1478          MOVE.W      D1, D2
00001ED2  E042                    1479          ASR         #eight, D2
00001ED4  C47C 0001               1480          AND         #$01, D2
00001ED8                          1481      
00001ED8  B43C 0000               1482          CMP.B       #zero, D2
00001EDC  6700 000E               1483          BEQ         opLSRWR
00001EE0  B43C 0001               1484          CMP.B       #one, D2
00001EE4  6700 0028               1485          BEQ         opLSLWR
00001EE8  6000 0C84               1486          BRA         printInvalid 
00001EEC                          1487          
00001EEC  43F9 00002C33           1488  opLSRWR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001EF2  103C 000E               1489          MOVE.B      #14, D0             ; command for trap call to display message
00001EF6  4E4F                    1490          TRAP        #15                 ; trap call
00001EF8                          1491  
00001EF8  43F9 00002C4E           1492          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001EFE  103C 000E               1493          MOVE.B      #14, D0             ; command for trap call to display message
00001F02  4E4F                    1494          TRAP        #15                 ; trap call
00001F04                          1495          
00001F04  4EB9 000022DA           1496          JSR         PrntReg
00001F0A                          1497          
00001F0A  6000 F134               1498          BRA         LOOP
00001F0E                          1499          
00001F0E  43F9 00002C37           1500  opLSLWR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00001F14  103C 000E               1501          MOVE.B      #14, D0             ; command for trap call to display message
00001F18  4E4F                    1502          TRAP        #15                 ; trap call
00001F1A                          1503  
00001F1A  43F9 00002C4E           1504          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F20  103C 000E               1505          MOVE.B      #14, D0             ; command for trap call to display message
00001F24  4E4F                    1506          TRAP        #15                 ; trap call
00001F26                          1507          
00001F26  4EB9 000022DA           1508          JSR         PrntReg
00001F2C                          1509          
00001F2C  6000 F112               1510          BRA         LOOP
00001F30                          1511  
00001F30                          1512  
00001F30                          1513  
00001F30  4242                    1514  opROWI  CLR         D2
00001F32  3401                    1515          MOVE.W      D1, D2
00001F34  E042                    1516          ASR         #eight, D2
00001F36  C47C 0001               1517          AND         #$01, D2
00001F3A                          1518      
00001F3A  B43C 0000               1519          CMP.B       #zero, D2
00001F3E  6700 000E               1520          BEQ         opRORWI
00001F42  B43C 0001               1521          CMP.B       #one, D2
00001F46  6700 0028               1522          BEQ         opROLWI
00001F4A  6000 0C22               1523          BRA         printInvalid 
00001F4E                          1524          
00001F4E  43F9 00002C43           1525  opRORWI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F54  103C 000E               1526          MOVE.B      #14, D0             ; command for trap call to display message
00001F58  4E4F                    1527          TRAP        #15                 ; trap call
00001F5A                          1528  
00001F5A  43F9 00002C4E           1529          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F60  103C 000E               1530          MOVE.B      #14, D0             ; command for trap call to display message
00001F64  4E4F                    1531          TRAP        #15                 ; trap call
00001F66                          1532          
00001F66  4EB9 0000227E           1533          JSR         PrntImm
00001F6C                          1534          
00001F6C  6000 F0D2               1535          BRA         LOOP
00001F70                          1536  
00001F70  43F9 00002C47           1537  opROLWI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F76  103C 000E               1538          MOVE.B      #14, D0             ; command for trap call to display message
00001F7A  4E4F                    1539          TRAP        #15                 ; trap call
00001F7C                          1540  
00001F7C  43F9 00002C4E           1541          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001F82  103C 000E               1542          MOVE.B      #14, D0             ; command for trap call to display message
00001F86  4E4F                    1543          TRAP        #15                 ; trap call
00001F88                          1544          
00001F88  4EB9 0000227E           1545          JSR         PrntImm
00001F8E                          1546          
00001F8E  6000 F0B0               1547          BRA         LOOP
00001F92                          1548  
00001F92  4242                    1549  opROWR  CLR         D2
00001F94  3401                    1550          MOVE.W      D1, D2
00001F96  E042                    1551          ASR         #eight, D2
00001F98  C47C 0001               1552          AND         #$01, D2
00001F9C                          1553      
00001F9C  B43C 0000               1554          CMP.B       #zero, D2
00001FA0  6700 000E               1555          BEQ         opRORWR
00001FA4  B43C 0001               1556          CMP.B       #one, D2
00001FA8  6700 0028               1557          BEQ         opROLWR
00001FAC  6000 0BC0               1558          BRA         printInvalid     
00001FB0                          1559          
00001FB0  43F9 00002C43           1560  opRORWR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001FB6  103C 000E               1561          MOVE.B      #14, D0             ; command for trap call to display message
00001FBA  4E4F                    1562          TRAP        #15                 ; trap call
00001FBC                          1563  
00001FBC  43F9 00002C4E           1564          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001FC2  103C 000E               1565          MOVE.B      #14, D0             ; command for trap call to display message
00001FC6  4E4F                    1566          TRAP        #15                 ; trap call
00001FC8                          1567          
00001FC8  4EB9 000022DA           1568          JSR         PrntReg
00001FCE                          1569          
00001FCE  6000 F070               1570          BRA         LOOP
00001FD2                          1571  
00001FD2  43F9 00002C47           1572  opROLWR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001FD8  103C 000E               1573          MOVE.B      #14, D0             ; command for trap call to display message
00001FDC  4E4F                    1574          TRAP        #15                 ; trap call
00001FDE                          1575  
00001FDE  43F9 00002C4E           1576          LEA         dispWord, A1        ; we know that the opcode will be ASR, so load A1 to print message
00001FE4  103C 000E               1577          MOVE.B      #14, D0             ; command for trap call to display message
00001FE8  4E4F                    1578          TRAP        #15                 ; trap call
00001FEA                          1579          
00001FEA  4EB9 000022DA           1580          JSR         PrntReg
00001FF0                          1581          
00001FF0  6000 F04E               1582          BRA         LOOP
00001FF4                          1583  
00001FF4  4242                    1584  memSL   CLR         D2
00001FF6  1401                    1585          MOVE.B      D1,D2
00001FF8  E642                    1586          ASR         #three, D2
00001FFA                          1587          
00001FFA  C47C 0007               1588          AND         #$07, D2
00001FFE                          1589          
00001FFE  B43C 0000               1590          CMP.B       #zero, D2
00002002  6700 002E               1591          BEQ         opASLI
00002006  B43C 0004               1592          CMP.B       #four, D2
0000200A  6700 0088               1593          BEQ         opASLR
0000200E  B43C 0001               1594          CMP.B       #one, D2
00002012  6700 00E2               1595          BEQ         opLSLI
00002016  B43C 0005               1596          CMP.B       #five, D2
0000201A  6700 013C               1597          BEQ         opLSLR
0000201E  B43C 0003               1598          CMP.B       #three, D2
00002022  6700 0196               1599          BEQ         opROLI
00002026  B43C 0007               1600          CMP.B       #seven, D2
0000202A  6700 01F0               1601          BEQ         opROLR
0000202E  6000 0B3E               1602          BRA         printInvalid
00002032                          1603          
00002032  4242                    1604  opASLI  CLR         D2
00002034  3401                    1605          MOVE.W      D1, D2
00002036  E042                    1606          ASR         #eight, D2
00002038  C47C 0001               1607          AND         #$01, D2
0000203C                          1608      
0000203C  B43C 0000               1609          CMP.B       #zero, D2
00002040  6700 000E               1610          BEQ         opASRLI
00002044  B43C 0001               1611          CMP.B       #one, D2
00002048  6700 0028               1612          BEQ         opASLLI
0000204C  6000 0B20               1613          BRA         printInvalid
00002050                          1614          
00002050  43F9 00002C3B           1615  opASRLI LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002056  103C 000E               1616          MOVE.B      #14, D0             ; command for trap call to display message
0000205A  4E4F                    1617          TRAP        #15                 ; trap call
0000205C                          1618  
0000205C  43F9 00002C51           1619          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002062  103C 000E               1620          MOVE.B      #14, D0             ; command for trap call to display message
00002066  4E4F                    1621          TRAP        #15                 ; trap call
00002068                          1622          
00002068  4EB9 0000227E           1623          JSR         PrntImm
0000206E                          1624          
0000206E  6000 EFD0               1625          BRA         LOOP
00002072                          1626  
00002072  43F9 00002C3F           1627  opASLLI LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
00002078  103C 000E               1628          MOVE.B      #14, D0             ; command for trap call to display message
0000207C  4E4F                    1629          TRAP        #15                 ; trap call
0000207E                          1630  
0000207E  43F9 00002C51           1631          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002084  103C 000E               1632          MOVE.B      #14, D0             ; command for trap call to display message
00002088  4E4F                    1633          TRAP        #15                 ; trap call
0000208A                          1634          
0000208A  4EB9 0000227E           1635          JSR         PrntImm
00002090                          1636          
00002090  6000 EFAE               1637          BRA         LOOP
00002094                          1638  
00002094  4242                    1639  opASLR  CLR         D2
00002096  3401                    1640          MOVE.W      D1, D2
00002098  E042                    1641          ASR         #eight, D2
0000209A  C47C 0001               1642          AND         #$01, D2
0000209E                          1643      
0000209E  B43C 0000               1644          CMP.B       #zero, D2
000020A2  6700 000E               1645          BEQ         opASRLR
000020A6  B43C 0001               1646          CMP.B       #one, D2
000020AA  6700 0028               1647          BEQ         opASLLR
000020AE  6000 0ABE               1648          BRA         printInvalid 
000020B2                          1649          
000020B2  43F9 00002C3B           1650  opASRLR LEA         ASRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000020B8  103C 000E               1651          MOVE.B      #14, D0             ; command for trap call to display message
000020BC  4E4F                    1652          TRAP        #15                 ; trap call
000020BE                          1653  
000020BE  43F9 00002C51           1654          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
000020C4  103C 000E               1655          MOVE.B      #14, D0             ; command for trap call to display message
000020C8  4E4F                    1656          TRAP        #15                 ; trap call
000020CA                          1657          
000020CA  4EB9 000022DA           1658          JSR         PrntReg
000020D0                          1659          
000020D0  6000 EF6E               1660          BRA         LOOP
000020D4                          1661  
000020D4  43F9 00002C3F           1662  opASLLR LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000020DA  103C 000E               1663          MOVE.B      #14, D0             ; command for trap call to display message
000020DE  4E4F                    1664          TRAP        #15                 ; trap call
000020E0                          1665  
000020E0  43F9 00002C51           1666          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
000020E6  103C 000E               1667          MOVE.B      #14, D0             ; command for trap call to display message
000020EA  4E4F                    1668          TRAP        #15                 ; trap call
000020EC                          1669          
000020EC  4EB9 000022DA           1670          JSR         PrntReg
000020F2                          1671          
000020F2  6000 EF4C               1672          BRA         LOOP
000020F6                          1673  
000020F6  4242                    1674  opLSLI  CLR         D2
000020F8  3401                    1675          MOVE.W      D1, D2
000020FA  E042                    1676          ASR         #eight, D2
000020FC  C47C 0001               1677          AND         #$01, D2
00002100                          1678      
00002100  B43C 0000               1679          CMP.B       #zero, D2
00002104  6700 000E               1680          BEQ         opLSRLI
00002108  B43C 0001               1681          CMP.B       #one, D2
0000210C  6700 0028               1682          BEQ         opLSLLI
00002110  6000 0A5C               1683          BRA         printInvalid 
00002114                          1684          
00002114  43F9 00002C33           1685  opLSRLI LEA         LSRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000211A  103C 000E               1686          MOVE.B      #14, D0             ; command for trap call to display message
0000211E  4E4F                    1687          TRAP        #15                 ; trap call
00002120                          1688  
00002120  43F9 00002C51           1689          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002126  103C 000E               1690          MOVE.B      #14, D0             ; command for trap call to display message
0000212A  4E4F                    1691          TRAP        #15                 ; trap call
0000212C                          1692          
0000212C  4EB9 0000227E           1693          JSR         PrntImm
00002132                          1694          
00002132  6000 EF0C               1695          BRA         LOOP
00002136                          1696  
00002136                          1697  
00002136  43F9 00002C37           1698  opLSLLI LEA         LSLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000213C  103C 000E               1699          MOVE.B      #14, D0             ; command for trap call to display message
00002140  4E4F                    1700          TRAP        #15                 ; trap call
00002142                          1701  
00002142  43F9 00002C51           1702          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002148  103C 000E               1703          MOVE.B      #14, D0             ; command for trap call to display message
0000214C  4E4F                    1704          TRAP        #15                 ; trap call
0000214E                          1705          
0000214E  4EB9 0000227E           1706          JSR         PrntImm
00002154                          1707          
00002154  6000 EEEA               1708          BRA         LOOP
00002158                          1709  
00002158                          1710  
00002158  4242                    1711  opLSLR  CLR         D2
0000215A  3401                    1712          MOVE.W      D1, D2
0000215C  E042                    1713          ASR         #eight, D2
0000215E  C47C 0001               1714          AND         #$01, D2
00002162                          1715      
00002162  B43C 0000               1716          CMP.B       #zero, D2
00002166  6700 000E               1717          BEQ         opLSRLR
0000216A  B43C 0001               1718          CMP.B       #one, D2
0000216E  6700 0028               1719          BEQ         opLSLLR
00002172  6000 09FA               1720          BRA         printInvalid 
00002176                          1721          
00002176  43F9 00002C33           1722  opLSRLR LEA         LSRmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000217C  103C 000E               1723          MOVE.B      #14, D0             ; command for trap call to display message
00002180  4E4F                    1724          TRAP        #15                 ; trap call
00002182                          1725  
00002182  43F9 00002C51           1726          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002188  103C 000E               1727          MOVE.B      #14, D0             ; command for trap call to display message
0000218C  4E4F                    1728          TRAP        #15                 ; trap call
0000218E                          1729          
0000218E  4EB9 000022DA           1730          JSR         PrntReg
00002194                          1731          
00002194  6000 EEAA               1732          BRA         LOOP
00002198                          1733          
00002198  43F9 00002C37           1734  opLSLLR LEA         LSLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
0000219E  103C 000E               1735          MOVE.B      #14, D0             ; command for trap call to display message
000021A2  4E4F                    1736          TRAP        #15                 ; trap call
000021A4                          1737  
000021A4  43F9 00002C51           1738          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
000021AA  103C 000E               1739          MOVE.B      #14, D0             ; command for trap call to display message
000021AE  4E4F                    1740          TRAP        #15                 ; trap call
000021B0                          1741          
000021B0  4EB9 000022DA           1742          JSR         PrntReg
000021B6                          1743          
000021B6  6000 EE88               1744          BRA         LOOP
000021BA                          1745  
000021BA                          1746  
000021BA                          1747  
000021BA  4242                    1748  opROLI  CLR         D2
000021BC  3401                    1749          MOVE.W      D1, D2
000021BE  E042                    1750          ASR         #eight, D2
000021C0  C47C 0001               1751          AND         #$01, D2
000021C4                          1752      
000021C4  B43C 0000               1753          CMP.B       #zero, D2
000021C8  6700 000E               1754          BEQ         opRORLI
000021CC  B43C 0001               1755          CMP.B       #one, D2
000021D0  6700 0028               1756          BEQ         opROLLI
000021D4  6000 0998               1757          BRA         printInvalid 
000021D8                          1758          
000021D8  43F9 00002C43           1759  opRORLI LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000021DE  103C 000E               1760          MOVE.B      #14, D0             ; command for trap call to display message
000021E2  4E4F                    1761          TRAP        #15                 ; trap call
000021E4                          1762  
000021E4  43F9 00002C51           1763          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
000021EA  103C 000E               1764          MOVE.B      #14, D0             ; command for trap call to display message
000021EE  4E4F                    1765          TRAP        #15                 ; trap call
000021F0                          1766          
000021F0  4EB9 0000227E           1767          JSR         PrntImm
000021F6                          1768          
000021F6  6000 EE48               1769          BRA         LOOP
000021FA                          1770  
000021FA  43F9 00002C47           1771  opROLLI LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002200  103C 000E               1772          MOVE.B      #14, D0             ; command for trap call to display message
00002204  4E4F                    1773          TRAP        #15                 ; trap call
00002206                          1774  
00002206  43F9 00002C51           1775          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000220C  103C 000E               1776          MOVE.B      #14, D0             ; command for trap call to display message
00002210  4E4F                    1777          TRAP        #15                 ; trap call
00002212                          1778          
00002212  4EB9 0000227E           1779          JSR         PrntImm
00002218                          1780          
00002218  6000 EE26               1781          BRA         LOOP
0000221C                          1782  
0000221C  4242                    1783  opROLR  CLR         D2
0000221E  3401                    1784          MOVE.W      D1, D2
00002220  E042                    1785          ASR         #eight, D2
00002222  C47C 0001               1786          AND         #$01, D2
00002226                          1787      
00002226  B43C 0000               1788          CMP.B       #zero, D2
0000222A  6700 000E               1789          BEQ         opRORLR
0000222E  B43C 0001               1790          CMP.B       #one, D2
00002232  6700 0028               1791          BEQ         opROLLR
00002236  6000 0936               1792          BRA         printInvalid     
0000223A                          1793          
0000223A  43F9 00002C43           1794  opRORLR LEA         RORmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002240  103C 000E               1795          MOVE.B      #14, D0             ; command for trap call to display message
00002244  4E4F                    1796          TRAP        #15                 ; trap call
00002246                          1797  
00002246  43F9 00002C51           1798          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000224C  103C 000E               1799          MOVE.B      #14, D0             ; command for trap call to display message
00002250  4E4F                    1800          TRAP        #15                 ; trap call
00002252                          1801          
00002252  4EB9 000022DA           1802          JSR         PrntReg
00002258                          1803          
00002258  6000 EDE6               1804          BRA         LOOP
0000225C                          1805  
0000225C  43F9 00002C47           1806  opROLLR LEA         ROLmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002262  103C 000E               1807          MOVE.B      #14, D0             ; command for trap call to display message
00002266  4E4F                    1808          TRAP        #15                 ; trap call
00002268                          1809  
00002268  43F9 00002C51           1810          LEA         dispLong, A1        ; we know that the opcode will be ASR, so load A1 to print message
0000226E  103C 000E               1811          MOVE.B      #14, D0             ; command for trap call to display message
00002272  4E4F                    1812          TRAP        #15                 ; trap call
00002274                          1813          
00002274  4EB9 000022DA           1814          JSR         PrntReg
0000227A                          1815          
0000227A  6000 EDC4               1816          BRA         LOOP
0000227E                          1817  * The following subroutine displays the immediate number to shift and the data register that is being shifted. 
0000227E                          1818  * This subroutine calls two printing immediate subroutine first, the the ea print subroutine.        
0000227E  48E7 FF7E               1819  PrntImm MOVEM.L D0-D7/A1-A6, -(SP)
00002282                          1820          
00002282  43F9 00002BB8           1821          LEA         space, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002288  103C 000E               1822          MOVE.B      #14, D0             ; command for trap call to display message
0000228C  4E4F                    1823          TRAP        #15                 ; trap call
0000228E                          1824          
0000228E  43F9 00002BBB           1825          LEA         hashTag, A1        ; we know that the opcode will be ASR, so load A1 to print message
00002294  103C 000E               1826          MOVE.B      #14, D0             ; command for trap call to display message
00002298  4E4F                    1827          TRAP        #15                 ; trap call
0000229A                          1828          
0000229A  4242                    1829          CLR         D2
0000229C  3401                    1830          MOVE.W      D1, D2
0000229E  E042                    1831          ASR         #eight, D2
000022A0  E242                    1832          ASR         #one, D2
000022A2  C47C 0007               1833          AND         #$07, D2
000022A6                          1834          
000022A6  4EB9 0000232C           1835          JSR         MemShiftImm
000022AC                          1836          
000022AC  43F9 00002BBF           1837          LEA         comma, A1        ; we know that the opcode will be ASR, so load A1 to print message
000022B2  103C 000E               1838          MOVE.B      #14, D0             ; command for trap call to display message
000022B6  4E4F                    1839          TRAP        #15                 ; trap call
000022B8                          1840          
000022B8  4242                    1841          CLR         D2
000022BA  4243                    1842          CLR         D3
000022BC  1601                    1843          MOVE.B      D1,D3
000022BE  C67C 0007               1844          AND         #$07, D3
000022C2                          1845          
000022C2  4EB9 00002356           1846          JSR         printEA
000022C8                          1847          
000022C8  43F9 00002BB4           1848          LEA         newLine, A1        ; we know that the opcode will be ASR, so load A1 to print message
000022CE  103C 000E               1849          MOVE.B      #14, D0             ; command for trap call to display message
000022D2  4E4F                    1850          TRAP        #15                 ; trap call
000022D4                          1851          
000022D4  4CDF 7EFF               1852          MOVEM.L  (SP)+, D0-D7/A1-A6
000022D8  4E75                    1853          RTS
000022DA                          1854  * The following subroutine determines the correct data register to display, and sets the values of D2 and D3 accordingly to display the data register.
000022DA                          1855  * after setting the values, it calls another subroutine to actually display the data register.        
000022DA  48E7 FF7E               1856  PrntReg MOVEM.L D0-D7/A1-A6, -(SP)
000022DE                          1857          
000022DE  43F9 00002BB8           1858          LEA         space, A1           ; display space
000022E4  103C 000E               1859          MOVE.B      #14, D0             ; command for trap call to display message
000022E8  4E4F                    1860          TRAP        #15                 ; trap call
000022EA                          1861          
000022EA  4242                    1862          CLR         D2
000022EC  4243                    1863          CLR         D3
000022EE  3601                    1864          MOVE.W      D1, D3
000022F0  E043                    1865          ASR         #eight, D3
000022F2  E243                    1866          ASR         #one, D3
000022F4  C67C 0007               1867          AND         #$07, D3
000022F8                          1868          
000022F8  4EB9 00002356           1869          JSR         printEA
000022FE                          1870          
000022FE  43F9 00002BBF           1871          LEA         comma, A1           ; display comma
00002304  103C 000E               1872          MOVE.B      #14, D0             ; command for trap call to display message
00002308  4E4F                    1873          TRAP        #15                 ; trap call
0000230A                          1874          
0000230A  4242                    1875          CLR         D2
0000230C  4243                    1876          CLR         D3
0000230E  1601                    1877          MOVE.B      D1,D3
00002310  C67C 0007               1878          AND         #$07, D3
00002314                          1879          
00002314  4EB9 00002356           1880          JSR         printEA
0000231A                          1881          
0000231A  43F9 00002BB4           1882          LEA         newLine, A1         ; newline
00002320  103C 000E               1883          MOVE.B      #14, D0             ; command for trap call to display message
00002324  4E4F                    1884          TRAP        #15                 ; trap call
00002326                          1885          
00002326  4CDF 7EFF               1886          MOVEM.L  (SP)+, D0-D7/A1-A6
0000232A  4E75                    1887          RTS
0000232C                          1888  * The following subroutine is used to display the number between 1-8 for the bit vount for the shift/rotate opcode
0000232C                          1889  * It displays it by storing the appropriate number in D1 and running trap task 3.        
0000232C  48E7 FF7E               1890  MemShiftImm     MOVEM.L D0-D7/A1-A6, -(SP)      ;caller saved data
00002330  4241                    1891                  CLR     D1
00002332                          1892                  
00002332  1202                    1893                  MOVE.B  D2, D1
00002334  B23C 0000               1894                  CMP.B   #zero, D1
00002338  6700 000C               1895                  BEQ     displayEight
0000233C                          1896                  
0000233C  103C 0003               1897                  MOVE.B  #3, D0
00002340  4E4F                    1898                  TRAP    #15
00002342  6000 000C               1899                  BRA     endSubroutine
00002346                          1900                  
00002346  123C 0008               1901  displayEight    MOVE.B  #$08, D1
0000234A  103C 0003               1902                  MOVE.B  #3, D0
0000234E  4E4F                    1903                  TRAP    #15                
00002350                          1904  endSubroutine
00002350  4CDF 7EFF               1905                  MOVEM.L  (SP)+, D0-D7/A1-A6     ; recall data
00002354  4E75                    1906                  RTS                             ; Return to main routine
00002356                          1907          
00002356                          1908  
00002356                          1909  ***********************************************************************************************************
00002356                          1910  *
00002356                          1911  *                                           EA Print Check
00002356                          1912  *
00002356                          1913  ***********************************************************************************************************
00002356  48E7 FF7E               1914  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
0000235A                          1915  
0000235A  B43C 0000               1916              CMP.B       #zero, D2
0000235E  6700 002E               1917              BEQ         pDataReg
00002362  B43C 0001               1918              CMP.B       #one, D2
00002366  6700 00E6               1919              BEQ         pAddrReg
0000236A  B43C 0002               1920              CMP.B       #two, D2
0000236E  6700 019E               1921              BEQ         pAddrDir
00002372  B43C 0003               1922              CMP.B       #three, D2
00002376  6700 02C2               1923              BEQ         pAddrPost
0000237A  B43C 0004               1924              CMP.B       #four, D2
0000237E  6700 0446               1925              BEQ         pAddrDec
00002382  B43C 0007               1926              CMP.B       #seven, D2
00002386  6700 0576               1927              BEQ         pHex
0000238A  6000 0626               1928              BRA         invalid
0000238E                          1929  
0000238E                          1930  ***********************************************************************************************************
0000238E                          1931  * Data Register        
0000238E  B63C 0000               1932  pDataReg    CMP.B   #zero,D3
00002392  6700 003A               1933              BEQ     displayD0
00002396  B63C 0001               1934              CMP.B   #one,D3
0000239A  6700 0042               1935              BEQ     displayD1
0000239E  B63C 0002               1936              CMP.B   #two,D3
000023A2  6700 004A               1937              BEQ     displayD2
000023A6  B63C 0003               1938              CMP.B   #three,D3
000023AA  6700 0052               1939              BEQ     displayD3
000023AE  B63C 0004               1940              CMP.B   #four,D3
000023B2  6700 005A               1941              BEQ     displayD4
000023B6  B63C 0005               1942              CMP.B   #five,D3
000023BA  6700 0062               1943              BEQ     displayD5
000023BE  B63C 0006               1944              CMP.B   #six,D3
000023C2  6700 006A               1945              BEQ     displayD6
000023C6  B63C 0007               1946              CMP.B   #seven,D3
000023CA  6700 0072               1947              BEQ     displayD7
000023CE                          1948              
000023CE  43F9 00002C6E           1949  displayD0   LEA         dispD0, A1          ; Display space
000023D4  103C 000E               1950              MOVE.B      #14, D0             ; command for trap call to display message
000023D8  4E4F                    1951              TRAP        #15                 ; trap call
000023DA  6000 05D6               1952              BRA         endSUB              ; go to the end of the subroutine
000023DE                          1953              
000023DE  43F9 00002C71           1954  displayD1   LEA         dispD1, A1          ; Display space
000023E4  103C 000E               1955              MOVE.B      #14, D0             ; command for trap call to display message
000023E8  4E4F                    1956              TRAP        #15                 ; trap call
000023EA  6000 05C6               1957              BRA         endSUB              ; go to the end of the subroutine
000023EE                          1958  
000023EE  43F9 00002C74           1959  displayD2   LEA         dispD2, A1          ; Display space
000023F4  103C 000E               1960              MOVE.B      #14, D0             ; command for trap call to display message
000023F8  4E4F                    1961              TRAP        #15                 ; trap call
000023FA  6000 05B6               1962              BRA         endSUB              ; go to the end of the subroutine
000023FE                          1963  
000023FE  43F9 00002C77           1964  displayD3   LEA         dispD3, A1          ; Display space
00002404  103C 000E               1965              MOVE.B      #14, D0             ; command for trap call to display message
00002408  4E4F                    1966              TRAP        #15                 ; trap call
0000240A  6000 05A6               1967              BRA         endSUB              ; go to the end of the subroutine
0000240E                          1968  
0000240E  43F9 00002C7A           1969  displayD4   LEA         dispD4, A1          ; Display space
00002414  103C 000E               1970              MOVE.B      #14, D0             ; command for trap call to display message
00002418  4E4F                    1971              TRAP        #15                 ; trap call
0000241A  6000 0596               1972              BRA         endSUB              ; go to the end of the subroutine
0000241E                          1973  
0000241E  43F9 00002C7D           1974  displayD5   LEA         dispD5, A1          ; Display space
00002424  103C 000E               1975              MOVE.B      #14, D0             ; command for trap call to display message
00002428  4E4F                    1976              TRAP        #15                 ; trap call
0000242A  6000 0586               1977              BRA         endSUB              ; go to the end of the subroutine
0000242E                          1978  
0000242E  43F9 00002C80           1979  displayD6   LEA         dispD6, A1          ; Display space
00002434  103C 000E               1980              MOVE.B      #14, D0             ; command for trap call to display message
00002438  4E4F                    1981              TRAP        #15                 ; trap call
0000243A  6000 0576               1982              BRA         endSUB              ; go to the end of the subroutine
0000243E                          1983  
0000243E  43F9 00002C83           1984  displayD7   LEA         dispD7, A1          ; Display space
00002444  103C 000E               1985              MOVE.B      #14, D0             ; command for trap call to display message
00002448  4E4F                    1986              TRAP        #15                 ; trap call
0000244A  6000 0566               1987              BRA         endSUB              ; go to the end of the subroutine
0000244E                          1988  ***********************************************************************************************************
0000244E                          1989  * Address Register
0000244E  B63C 0000               1990  pAddrReg    CMP.B   #zero,D3
00002452  6700 003A               1991              BEQ     displayA0
00002456  B63C 0001               1992              CMP.B   #one,D3
0000245A  6700 0042               1993              BEQ     displayA1
0000245E  B63C 0002               1994              CMP.B   #two,D3
00002462  6700 004A               1995              BEQ     displayA2
00002466  B63C 0003               1996              CMP.B   #three,D3
0000246A  6700 0052               1997              BEQ     displayA3
0000246E  B63C 0004               1998              CMP.B   #four,D3
00002472  6700 005A               1999              BEQ     displayA4
00002476  B63C 0005               2000              CMP.B   #five,D3
0000247A  6700 0062               2001              BEQ     displayA5
0000247E  B63C 0006               2002              CMP.B   #six,D3
00002482  6700 006A               2003              BEQ     displayA6
00002486  B63C 0007               2004              CMP.B   #seven,D3
0000248A  6700 0072               2005              BEQ     displayA7
0000248E                          2006              
0000248E  43F9 00002C54           2007  displayA0   LEA         dispA0, A1          ; Display space
00002494  103C 000E               2008              MOVE.B      #14, D0             ; command for trap call to display message
00002498  4E4F                    2009              TRAP        #15                 ; trap call
0000249A  6000 0516               2010              BRA         endSUB              ; go to the end of the subroutine
0000249E                          2011              
0000249E  43F9 00002C57           2012  displayA1   LEA         dispA1, A1          ; Display space
000024A4  103C 000E               2013              MOVE.B      #14, D0             ; command for trap call to display message
000024A8  4E4F                    2014              TRAP        #15                 ; trap call
000024AA  6000 0506               2015              BRA         endSUB              ; go to the end of the subroutine
000024AE                          2016  
000024AE  43F9 00002C5A           2017  displayA2   LEA         dispA2, A1          ; Display space
000024B4  103C 000E               2018              MOVE.B      #14, D0             ; command for trap call to display message
000024B8  4E4F                    2019              TRAP        #15                 ; trap call
000024BA  6000 04F6               2020              BRA         endSUB              ; go to the end of the subroutine
000024BE                          2021  
000024BE  43F9 00002C5D           2022  displayA3   LEA         dispA3, A1          ; Display space
000024C4  103C 000E               2023              MOVE.B      #14, D0             ; command for trap call to display message
000024C8  4E4F                    2024              TRAP        #15                 ; trap call
000024CA  6000 04E6               2025              BRA         endSUB              ; go to the end of the subroutine
000024CE                          2026  
000024CE  43F9 00002C60           2027  displayA4   LEA         dispA4, A1          ; Display space
000024D4  103C 000E               2028              MOVE.B      #14, D0             ; command for trap call to display message
000024D8  4E4F                    2029              TRAP        #15                 ; trap call
000024DA  6000 04D6               2030              BRA         endSUB              ; go to the end of the subroutine
000024DE                          2031  
000024DE  43F9 00002C63           2032  displayA5   LEA         dispA5, A1          ; Display space
000024E4  103C 000E               2033              MOVE.B      #14, D0             ; command for trap call to display message
000024E8  4E4F                    2034              TRAP        #15                 ; trap call
000024EA  6000 04C6               2035              BRA         endSUB              ; go to the end of the subroutine
000024EE                          2036  
000024EE  43F9 00002C66           2037  displayA6   LEA         dispA6, A1          ; Display space
000024F4  103C 000E               2038              MOVE.B      #14, D0             ; command for trap call to display message
000024F8  4E4F                    2039              TRAP        #15                 ; trap call
000024FA  6000 04B6               2040              BRA         endSUB              ; go to the end of the subroutine
000024FE                          2041  
000024FE  43F9 00002C69           2042  displayA7   LEA         dispA7, A1          ; Display space
00002504  103C 000E               2043              MOVE.B      #14, D0             ; command for trap call to display message
00002508  4E4F                    2044              TRAP        #15                 ; trap call
0000250A  6000 04A6               2045              BRA         endSUB              ; go to the end of the subroutine
0000250E                          2046  
0000250E                          2047  ***********************************************************************************************************
0000250E                          2048  * Address Register Direct
0000250E                          2049  
0000250E  43F9 00002BC1           2050  pAddrDir    LEA         opPer, A1           ; Display space
00002514  103C 000E               2051              MOVE.B      #14, D0             ; command for trap call to display message
00002518  4E4F                    2052              TRAP        #15                 ; trap call
0000251A                          2053              
0000251A  B63C 0000               2054              CMP.B   #zero,D3
0000251E  6700 003A               2055              BEQ     displayA0A
00002522  B63C 0001               2056              CMP.B   #one,D3
00002526  6700 004E               2057              BEQ     displayA1A
0000252A  B63C 0002               2058              CMP.B   #two,D3
0000252E  6700 0062               2059              BEQ     displayA2A
00002532  B63C 0003               2060              CMP.B   #three,D3
00002536  6700 0076               2061              BEQ     displayA3A
0000253A  B63C 0004               2062              CMP.B   #four,D3
0000253E  6700 008A               2063              BEQ     displayA4A
00002542  B63C 0005               2064              CMP.B   #five,D3
00002546  6700 009E               2065              BEQ     displayA5A
0000254A  B63C 0006               2066              CMP.B   #six,D3
0000254E  6700 00B2               2067              BEQ     displayA6A
00002552  B63C 0007               2068              CMP.B   #seven,D3
00002556  6700 00C6               2069              BEQ     displayA7A
0000255A                          2070              
0000255A  43F9 00002C54           2071  displayA0A  LEA         dispA0, A1          ; Display space
00002560  103C 000E               2072              MOVE.B      #14, D0             ; command for trap call to display message
00002564  4E4F                    2073              TRAP        #15                 ; trap call
00002566  43F9 00002BC3           2074              LEA         clPer, A1           ; Display space
0000256C  103C 000E               2075              MOVE.B      #14, D0             ; command for trap call to display message
00002570  4E4F                    2076              TRAP        #15                 ; trap call
00002572  6000 043E               2077              BRA         endSUB              ; go to the end of the subroutine
00002576                          2078              
00002576  43F9 00002C57           2079  displayA1A  LEA         dispA1, A1          ; Display space
0000257C  103C 000E               2080              MOVE.B      #14, D0             ; command for trap call to display message
00002580  4E4F                    2081              TRAP        #15                 ; trap call
00002582  43F9 00002BC3           2082              LEA         clPer, A1           ; Display space
00002588  103C 000E               2083              MOVE.B      #14, D0             ; command for trap call to display message
0000258C  4E4F                    2084              TRAP        #15                 ; trap call
0000258E  6000 0422               2085              BRA         endSUB              ; go to the end of the subroutine
00002592                          2086  
00002592  43F9 00002C5A           2087  displayA2A  LEA         dispA2, A1          ; Display space
00002598  103C 000E               2088              MOVE.B      #14, D0             ; command for trap call to display message
0000259C  4E4F                    2089              TRAP        #15                 ; trap call
0000259E  43F9 00002BC3           2090              LEA         clPer, A1           ; Display space
000025A4  103C 000E               2091              MOVE.B      #14, D0             ; command for trap call to display message
000025A8  4E4F                    2092              TRAP        #15                 ; trap call
000025AA  6000 0406               2093              BRA         endSUB              ; go to the end of the subroutine
000025AE                          2094  
000025AE  43F9 00002C5D           2095  displayA3A  LEA         dispA3, A1          ; Display space
000025B4  103C 000E               2096              MOVE.B      #14, D0             ; command for trap call to display message
000025B8  4E4F                    2097              TRAP        #15                 ; trap call
000025BA  43F9 00002BC3           2098              LEA         clPer, A1           ; Display space
000025C0  103C 000E               2099              MOVE.B      #14, D0             ; command for trap call to display message
000025C4  4E4F                    2100              TRAP        #15                 ; trap call
000025C6  6000 03EA               2101              BRA         endSUB              ; go to the end of the subroutine
000025CA                          2102  
000025CA  43F9 00002C60           2103  displayA4A  LEA         dispA4, A1          ; Display space
000025D0  103C 000E               2104              MOVE.B      #14, D0             ; command for trap call to display message
000025D4  4E4F                    2105              TRAP        #15                 ; trap call
000025D6  43F9 00002BC3           2106              LEA         clPer, A1           ; Display space
000025DC  103C 000E               2107              MOVE.B      #14, D0             ; command for trap call to display message
000025E0  4E4F                    2108              TRAP        #15                 ; trap call
000025E2  6000 03CE               2109              BRA         endSUB              ; go to the end of the subroutine
000025E6                          2110  
000025E6  43F9 00002C63           2111  displayA5A  LEA         dispA5, A1          ; Display space
000025EC  103C 000E               2112              MOVE.B      #14, D0             ; command for trap call to display message
000025F0  4E4F                    2113              TRAP        #15                 ; trap call
000025F2  43F9 00002BC3           2114              LEA         clPer, A1           ; Display space
000025F8  103C 000E               2115              MOVE.B      #14, D0             ; command for trap call to display message
000025FC  4E4F                    2116              TRAP        #15                 ; trap call
000025FE  6000 03B2               2117              BRA         endSUB              ; go to the end of the subroutine
00002602                          2118  
00002602  43F9 00002C66           2119  displayA6A  LEA         dispA6, A1          ; Display space
00002608  103C 000E               2120              MOVE.B      #14, D0             ; command for trap call to display message
0000260C  4E4F                    2121              TRAP        #15                 ; trap call
0000260E  43F9 00002BC3           2122              LEA         clPer, A1           ; Display space
00002614  103C 000E               2123              MOVE.B      #14, D0             ; command for trap call to display message
00002618  4E4F                    2124              TRAP        #15                 ; trap call
0000261A  6000 0396               2125              BRA         endSUB              ; go to the end of the subroutine
0000261E                          2126  
0000261E  43F9 00002C69           2127  displayA7A  LEA         dispA7, A1          ; Display space
00002624  103C 000E               2128              MOVE.B      #14, D0             ; command for trap call to display message
00002628  4E4F                    2129              TRAP        #15                 ; trap call
0000262A  43F9 00002BC3           2130              LEA         clPer, A1           ; Display space
00002630  103C 000E               2131              MOVE.B      #14, D0             ; command for trap call to display message
00002634  4E4F                    2132              TRAP        #15                 ; trap call
00002636  6000 037A               2133              BRA         endSUB              ; go to the end of the subroutine
0000263A                          2134              
0000263A                          2135  ***********************************************************************************************************
0000263A                          2136  * Addr Postincrement
0000263A                          2137              
0000263A  43F9 00002BC1           2138  pAddrPost   LEA         opPer, A1           ; Display space
00002640  103C 000E               2139              MOVE.B      #14, D0             ; command for trap call to display message
00002644  4E4F                    2140              TRAP        #15                 ; trap call
00002646                          2141              
00002646  B63C 0000               2142              CMP.B   #zero,D3
0000264A  6700 003A               2143              BEQ     displayA0P
0000264E  B63C 0001               2144              CMP.B   #one,D3
00002652  6700 005A               2145              BEQ     displayA1P
00002656  B63C 0002               2146              CMP.B   #two,D3
0000265A  6700 007A               2147              BEQ     displayA2P
0000265E  B63C 0003               2148              CMP.B   #three,D3
00002662  6700 009A               2149              BEQ     displayA3P
00002666  B63C 0004               2150              CMP.B   #four,D3
0000266A  6700 00BA               2151              BEQ     displayA4P
0000266E  B63C 0005               2152              CMP.B   #five,D3
00002672  6700 00DA               2153              BEQ     displayA5P
00002676  B63C 0006               2154              CMP.B   #six,D3
0000267A  6700 00FA               2155              BEQ     displayA6P
0000267E  B63C 0007               2156              CMP.B   #seven,D3
00002682  6700 011A               2157              BEQ     displayA7P
00002686                          2158              
00002686  43F9 00002C54           2159  displayA0P  LEA         dispA0, A1          ; Display space
0000268C  103C 000E               2160              MOVE.B      #14, D0             ; command for trap call to display message
00002690  4E4F                    2161              TRAP        #15                 ; trap call
00002692  43F9 00002BC3           2162              LEA         clPer, A1           ; Display space
00002698  103C 000E               2163              MOVE.B      #14, D0             ; command for trap call to display message
0000269C  4E4F                    2164              TRAP        #15                 ; trap call
0000269E  43F9 00002BC7           2165              LEA         inc, A1             ; Display space
000026A4  103C 000E               2166              MOVE.B      #14, D0             ; command for trap call to display message
000026A8  4E4F                    2167              TRAP        #15                 ; trap call
000026AA  6000 0306               2168              BRA         endSUB              ; go to the end of the subroutine
000026AE                          2169              
000026AE  43F9 00002C57           2170  displayA1P  LEA         dispA1, A1          ; Display space
000026B4  103C 000E               2171              MOVE.B      #14, D0             ; command for trap call to display message
000026B8  4E4F                    2172              TRAP        #15                 ; trap call
000026BA  43F9 00002BC3           2173              LEA         clPer, A1           ; Display space
000026C0  103C 000E               2174              MOVE.B      #14, D0             ; command for trap call to display message
000026C4  4E4F                    2175              TRAP        #15                 ; trap call
000026C6  43F9 00002BC7           2176              LEA         inc, A1             ; Display space
000026CC  103C 000E               2177              MOVE.B      #14, D0             ; command for trap call to display message
000026D0  4E4F                    2178              TRAP        #15                 ; trap call
000026D2  6000 02DE               2179              BRA         endSUB              ; go to the end of the subroutine
000026D6                          2180  
000026D6  43F9 00002C5A           2181  displayA2P  LEA         dispA2, A1          ; Display space
000026DC  103C 000E               2182              MOVE.B      #14, D0             ; command for trap call to display message
000026E0  4E4F                    2183              TRAP        #15                 ; trap call
000026E2  43F9 00002BC3           2184              LEA         clPer, A1           ; Display space
000026E8  103C 000E               2185              MOVE.B      #14, D0             ; command for trap call to display message
000026EC  4E4F                    2186              TRAP        #15                 ; trap call
000026EE  43F9 00002BC7           2187              LEA         inc, A1             ; Display space
000026F4  103C 000E               2188              MOVE.B      #14, D0             ; command for trap call to display message
000026F8  4E4F                    2189              TRAP        #15                 ; trap call
000026FA  6000 02B6               2190              BRA         endSUB              ; go to the end of the subroutine
000026FE                          2191  
000026FE  43F9 00002C5D           2192  displayA3P  LEA         dispA3, A1          ; Display space
00002704  103C 000E               2193              MOVE.B      #14, D0             ; command for trap call to display message
00002708  4E4F                    2194              TRAP        #15                 ; trap call
0000270A  43F9 00002BC3           2195              LEA         clPer, A1           ; Display space
00002710  103C 000E               2196              MOVE.B      #14, D0             ; command for trap call to display message
00002714  4E4F                    2197              TRAP        #15                 ; trap call
00002716  43F9 00002BC7           2198              LEA         inc, A1             ; Display space
0000271C  103C 000E               2199              MOVE.B      #14, D0             ; command for trap call to display message
00002720  4E4F                    2200              TRAP        #15                 ; trap call
00002722  6000 028E               2201              BRA         endSUB              ; go to the end of the subroutine
00002726                          2202  
00002726  43F9 00002C60           2203  displayA4P  LEA         dispA4, A1          ; Display space
0000272C  103C 000E               2204              MOVE.B      #14, D0             ; command for trap call to display message
00002730  4E4F                    2205              TRAP        #15                 ; trap call
00002732  43F9 00002BC3           2206              LEA         clPer, A1           ; Display space
00002738  103C 000E               2207              MOVE.B      #14, D0             ; command for trap call to display message
0000273C  4E4F                    2208              TRAP        #15                 ; trap call
0000273E  43F9 00002BC7           2209              LEA         inc, A1             ; Display space
00002744  103C 000E               2210              MOVE.B      #14, D0             ; command for trap call to display message
00002748  4E4F                    2211              TRAP        #15                 ; trap call
0000274A  6000 0266               2212              BRA         endSUB              ; go to the end of the subroutine
0000274E                          2213  
0000274E  43F9 00002C63           2214  displayA5P  LEA         dispA5, A1          ; Display space
00002754  103C 000E               2215              MOVE.B      #14, D0             ; command for trap call to display message
00002758  4E4F                    2216              TRAP        #15                 ; trap call
0000275A  43F9 00002BC3           2217              LEA         clPer, A1           ; Display space
00002760  103C 000E               2218              MOVE.B      #14, D0             ; command for trap call to display message
00002764  4E4F                    2219              TRAP        #15                 ; trap call
00002766  43F9 00002BC7           2220              LEA         inc, A1             ; Display space
0000276C  103C 000E               2221              MOVE.B      #14, D0             ; command for trap call to display message
00002770  4E4F                    2222              TRAP        #15                 ; trap call
00002772  6000 023E               2223              BRA         endSUB              ; go to the end of the subroutine
00002776                          2224  
00002776  43F9 00002C66           2225  displayA6P  LEA         dispA6, A1          ; Display space
0000277C  103C 000E               2226              MOVE.B      #14, D0             ; command for trap call to display message
00002780  4E4F                    2227              TRAP        #15                 ; trap call
00002782  43F9 00002BC3           2228              LEA         clPer, A1           ; Display space
00002788  103C 000E               2229              MOVE.B      #14, D0             ; command for trap call to display message
0000278C  4E4F                    2230              TRAP        #15                 ; trap call
0000278E  43F9 00002BC7           2231              LEA         inc, A1             ; Display space
00002794  103C 000E               2232              MOVE.B      #14, D0             ; command for trap call to display message
00002798  4E4F                    2233              TRAP        #15                 ; trap call
0000279A  6000 0216               2234              BRA         endSUB              ; go to the end of the subroutine
0000279E                          2235  
0000279E  43F9 00002C69           2236  displayA7P  LEA         dispA7, A1          ; Display space
000027A4  103C 000E               2237              MOVE.B      #14, D0             ; command for trap call to display message
000027A8  4E4F                    2238              TRAP        #15                 ; trap call
000027AA  43F9 00002BC3           2239              LEA         clPer, A1           ; Display space
000027B0  103C 000E               2240              MOVE.B      #14, D0             ; command for trap call to display message
000027B4  4E4F                    2241              TRAP        #15                 ; trap call
000027B6  43F9 00002BC7           2242              LEA         inc, A1             ; Display space
000027BC  103C 000E               2243              MOVE.B      #14, D0             ; command for trap call to display message
000027C0  4E4F                    2244              TRAP        #15                 ; trap call
000027C2  6000 01EE               2245              BRA         endSUB              ; go to the end of the subroutine
000027C6                          2246  
000027C6                          2247  ***********************************************************************************************************
000027C6                          2248  * Addr Postdecrement
000027C6                          2249  
000027C6  43F9 00002BC5           2250  pAddrDec    LEA         dec, A1             ; Display space
000027CC  103C 000E               2251              MOVE.B      #14, D0             ; command for trap call to display message
000027D0  4E4F                    2252              TRAP        #15                 ; trap call
000027D2                          2253              
000027D2  43F9 00002BC1           2254              LEA         opPer, A1           ; Display space
000027D8  103C 000E               2255              MOVE.B      #14, D0             ; command for trap call to display message
000027DC  4E4F                    2256              TRAP        #15                 ; trap call
000027DE                          2257              
000027DE  B63C 0000               2258              CMP.B   #zero,D3
000027E2  6700 003A               2259              BEQ     displayA0D
000027E6  B63C 0001               2260              CMP.B   #one,D3
000027EA  6700 004E               2261              BEQ     displayA1D
000027EE  B63C 0002               2262              CMP.B   #two,D3
000027F2  6700 0062               2263              BEQ     displayA2D
000027F6  B63C 0003               2264              CMP.B   #three,D3
000027FA  6700 0076               2265              BEQ     displayA3D
000027FE  B63C 0004               2266              CMP.B   #four,D3
00002802  6700 008A               2267              BEQ     displayA4D
00002806  B63C 0005               2268              CMP.B   #five,D3
0000280A  6700 009E               2269              BEQ     displayA5D
0000280E  B63C 0006               2270              CMP.B   #six,D3
00002812  6700 00B2               2271              BEQ     displayA6D
00002816  B63C 0007               2272              CMP.B   #seven,D3
0000281A  6700 00C6               2273              BEQ     displayA7D
0000281E                          2274              
0000281E  43F9 00002C54           2275  displayA0D  LEA         dispA0, A1          ; Display space
00002824  103C 000E               2276              MOVE.B      #14, D0             ; command for trap call to display message
00002828  4E4F                    2277              TRAP        #15                 ; trap call
0000282A  43F9 00002BC3           2278              LEA         clPer, A1           ; Display space
00002830  103C 000E               2279              MOVE.B      #14, D0             ; command for trap call to display message
00002834  4E4F                    2280              TRAP        #15                 ; trap call
00002836  6000 017A               2281              BRA         endSUB              ; go to the end of the subroutine
0000283A                          2282              
0000283A  43F9 00002C57           2283  displayA1D  LEA         dispA1, A1          ; Display space
00002840  103C 000E               2284              MOVE.B      #14, D0             ; command for trap call to display message
00002844  4E4F                    2285              TRAP        #15                 ; trap call
00002846  43F9 00002BC3           2286              LEA         clPer, A1           ; Display space
0000284C  103C 000E               2287              MOVE.B      #14, D0             ; command for trap call to display message
00002850  4E4F                    2288              TRAP        #15                 ; trap call
00002852  6000 015E               2289              BRA         endSUB              ; go to the end of the subroutine
00002856                          2290  
00002856  43F9 00002C5A           2291  displayA2D  LEA         dispA2, A1          ; Display space
0000285C  103C 000E               2292              MOVE.B      #14, D0             ; command for trap call to display message
00002860  4E4F                    2293              TRAP        #15                 ; trap call
00002862  43F9 00002BC3           2294              LEA         clPer, A1           ; Display space
00002868  103C 000E               2295              MOVE.B      #14, D0             ; command for trap call to display message
0000286C  4E4F                    2296              TRAP        #15                 ; trap call
0000286E  6000 0142               2297              BRA         endSUB              ; go to the end of the subroutine
00002872                          2298  
00002872  43F9 00002C5D           2299  displayA3D  LEA         dispA3, A1          ; Display space
00002878  103C 000E               2300              MOVE.B      #14, D0             ; command for trap call to display message
0000287C  4E4F                    2301              TRAP        #15                 ; trap call
0000287E  43F9 00002BC3           2302              LEA         clPer, A1           ; Display space
00002884  103C 000E               2303              MOVE.B      #14, D0             ; command for trap call to display message
00002888  4E4F                    2304              TRAP        #15                 ; trap call
0000288A  6000 0126               2305              BRA         endSUB              ; go to the end of the subroutine
0000288E                          2306  
0000288E  43F9 00002C60           2307  displayA4D  LEA         dispA4, A1          ; Display space
00002894  103C 000E               2308              MOVE.B      #14, D0             ; command for trap call to display message
00002898  4E4F                    2309              TRAP        #15                 ; trap call
0000289A  43F9 00002BC3           2310              LEA         clPer, A1           ; Display space
000028A0  103C 000E               2311              MOVE.B      #14, D0             ; command for trap call to display message
000028A4  4E4F                    2312              TRAP        #15                 ; trap call
000028A6  6000 010A               2313              BRA         endSUB              ; go to the end of the subroutine
000028AA                          2314  
000028AA  43F9 00002C63           2315  displayA5D  LEA         dispA5, A1          ; Display space
000028B0  103C 000E               2316              MOVE.B      #14, D0             ; command for trap call to display message
000028B4  4E4F                    2317              TRAP        #15                 ; trap call
000028B6  43F9 00002BC3           2318              LEA         clPer, A1           ; Display space
000028BC  103C 000E               2319              MOVE.B      #14, D0             ; command for trap call to display message
000028C0  4E4F                    2320              TRAP        #15                 ; trap call
000028C2  6000 00EE               2321              BRA         endSUB              ; go to the end of the subroutine
000028C6                          2322  
000028C6  43F9 00002C66           2323  displayA6D  LEA         dispA6, A1          ; Display space
000028CC  103C 000E               2324              MOVE.B      #14, D0             ; command for trap call to display message
000028D0  4E4F                    2325              TRAP        #15                 ; trap call
000028D2  43F9 00002BC3           2326              LEA         clPer, A1           ; Display space
000028D8  103C 000E               2327              MOVE.B      #14, D0             ; command for trap call to display message
000028DC  4E4F                    2328              TRAP        #15                 ; trap call
000028DE  6000 00D2               2329              BRA         endSUB              ; go to the end of the subroutine
000028E2                          2330  
000028E2  43F9 00002C69           2331  displayA7D  LEA         dispA7, A1          ; Display space
000028E8  103C 000E               2332              MOVE.B      #14, D0             ; command for trap call to display message
000028EC  4E4F                    2333              TRAP        #15                 ; trap call
000028EE  43F9 00002BC3           2334              LEA         clPer, A1           ; Display space
000028F4  103C 000E               2335              MOVE.B      #14, D0             ; command for trap call to display message
000028F8  4E4F                    2336              TRAP        #15                 ; trap call
000028FA  6000 00B6               2337              BRA         endSUB              ; go to the end of the subroutine
000028FE                          2338  ***********************************************************************************************************
000028FE                          2339  * Display Hex
000028FE                          2340  
000028FE  B63C 0000               2341  pHex        CMP.B       #zero, D3
00002902  6700 0012               2342              BEQ         AbsShort
00002906  B63C 0001               2343              CMP.B       #one, D3
0000290A  6700 0042               2344              BEQ         AbsLong
0000290E  B63C 0004               2345              CMP.B       #four, D3
00002912  6700 0072               2346              BEQ         DispImm
00002916                          2347              
00002916  43F9 00002BC1           2348  AbsShort    LEA         opPer, A1           ; Display space
0000291C  103C 000E               2349              MOVE.B      #14, D0             ; command for trap call to display message
00002920  4E4F                    2350              TRAP        #15                 ; trap call
00002922                          2351              
00002922  43F9 00002BBD           2352              LEA         dispHex, A1         ; Display space
00002928  103C 000E               2353              MOVE.B      #14, D0             ; command for trap call to display message
0000292C  4E4F                    2354              TRAP        #15                 ; trap call
0000292E                          2355              
0000292E  4241                    2356              CLR         D1
00002930  3218                    2357              MOVE.W      (A0)+, D1
00002932  4240                    2358              CLR         D0
00002934  103C 0004               2359              MOVE.B      #4, D0
00002938                          2360              
00002938  4EB9 000029B8           2361              JSR         outHex
0000293E                          2362              
0000293E  43F9 00002BC3           2363              LEA         clPer, A1           ; Display space
00002944  103C 000E               2364              MOVE.B      #14, D0             ; command for trap call to display message
00002948  4E4F                    2365              TRAP        #15                 ; trap call
0000294A                          2366              
0000294A  6000 0066               2367              BRA         endSub
0000294E                          2368              
0000294E  43F9 00002BC1           2369  AbsLong     LEA         opPer, A1           ; Display space
00002954  103C 000E               2370              MOVE.B      #14, D0             ; command for trap call to display message
00002958  4E4F                    2371              TRAP        #15                 ; trap call
0000295A                          2372              
0000295A  43F9 00002BBD           2373              LEA         dispHex, A1         ; Display space
00002960  103C 000E               2374              MOVE.B      #14, D0             ; command for trap call to display message
00002964  4E4F                    2375              TRAP        #15                 ; trap call
00002966                          2376              
00002966  4241                    2377              CLR         D1
00002968  2218                    2378              MOVE.L      (A0)+, D1
0000296A  4240                    2379              CLR         D0
0000296C  103C 0008               2380              MOVE.B      #8, D0
00002970                          2381              
00002970  4EB9 000029B8           2382              JSR         outHex
00002976                          2383              
00002976  43F9 00002BC3           2384              LEA         clPer, A1           ; Display space
0000297C  103C 000E               2385              MOVE.B      #14, D0             ; command for trap call to display message
00002980  4E4F                    2386              TRAP        #15                 ; trap call
00002982                          2387              
00002982  6000 002E               2388              BRA         endSub
00002986                          2389  
00002986  43F9 00002BBB           2390  DispImm     LEA         hashTag, A1         ; Display space
0000298C  103C 000E               2391              MOVE.B      #14, D0             ; command for trap call to display message
00002990  4E4F                    2392              TRAP        #15                 ; trap call
00002992                          2393  
00002992  43F9 00002BBD           2394              LEA         dispHex, A1         ; Display space
00002998  103C 000E               2395              MOVE.B      #14, D0             ; command for trap call to display message
0000299C  4E4F                    2396              TRAP        #15                 ; trap call
0000299E                          2397              
0000299E  4241                    2398              CLR         D1
000029A0  3218                    2399              MOVE.W      (A0)+, D1
000029A2  4240                    2400              CLR         D0
000029A4  103C 0004               2401              MOVE.B      #4, D0
000029A8                          2402              
000029A8  4EB9 000029B8           2403              JSR         outHex
000029AE                          2404  
000029AE  6000 0002               2405              BRA         endSub
000029B2                          2406  invalid
000029B2                          2407  
000029B2                          2408  endSUB
000029B2                          2409          
000029B2  4CDF 7EFF               2410              MOVEM.L  (SP)+, D0-D7/A1-A6
000029B6  4E75                    2411              RTS
000029B8                          2412  
000029B8                          2413  ***********************************************************************************************************
000029B8                          2414  ***********************************************************************************************************
000029B8                          2415  ***********************************************************************************************************
000029B8                          2416  
000029B8                          2417  *this subroutine displays hex code stored in D1. It displays based on the number of 
000029B8                          2418  *It displays based on the number of hex to display which is stored in D0. If it is a
000029B8                          2419  *long or word to display, it will figure out the ascii character and add $37 if it
000029B8                          2420  *is a letter, and $30 if its a number. It will then load the character into D1 and 
000029B8                          2421  *display it via trap task 6 and loop however many times is needed, 4 or 8. If a word
000029B8                          2422  *needs to be displayed, it will roll the bits over so that, the hex are shifted by a word.
000029B8  48E7 FF7E               2423  outHex      MOVEM.L D0-D7/A1-A6, -(SP)
000029BC  4243                    2424              CLR     D3
000029BE  4244                    2425              CLR     D4
000029C0  1800                    2426              MOVE.B  D0, D4
000029C2  2601                    2427              MOVE.L  D1, D3
000029C4  B03C 0004               2428              CMP.B   #4, D0
000029C8  6700 0006               2429              BEQ     moveOver
000029CC  6000 0006               2430              BRA     dispLOOP
000029D0                          2431              
000029D0  E19B                    2432  moveOver    ROL.L   #8,D3
000029D2  E19B                    2433              ROL.L   #8,D3
000029D4                          2434              
000029D4  B83C 0000               2435  dispLOOP    CMP.B   #0, D4
000029D8  6700 0042               2436              BEQ     endDispSub
000029DC  E99B                    2437              ROL.L   #4, D3
000029DE  4245                    2438              CLR     D5
000029E0  1A03                    2439              MOVE.B  D3, D5 
000029E2  CABC 0000000F           2440              AND.L   #$0F, D5
000029E8  BA3C 000A               2441              CMP.B   #10, D5
000029EC  6D00 0006               2442              BLT     DLnine
000029F0  6000 0016               2443              BRA     DLetters
000029F4                          2444              
000029F4  0645 0030               2445  DLnine      ADD     #$30, D5
000029F8  4241                    2446              CLR     D1
000029FA  1205                    2447              MOVE.B  D5, D1
000029FC  4240                    2448              CLR     D0
000029FE  103C 0006               2449              MOVE.B  #6, D0
00002A02  4E4F                    2450              TRAP    #15
00002A04  5344                    2451              SUB     #1, D4
00002A06  60CC                    2452              BRA     dispLOOP  
00002A08                          2453   
00002A08  0645 0037               2454  DLetters    ADD     #$37, D5
00002A0C  4241                    2455              CLR     D1
00002A0E  1205                    2456              MOVE.B  D5, D1
00002A10  4240                    2457              CLR     D0
00002A12  103C 0006               2458              MOVE.B  #6, D0
00002A16  4E4F                    2459              TRAP    #15
00002A18  5344                    2460              SUB     #1, D4
00002A1A  60B8                    2461              BRA     dispLOOP        
00002A1C                          2462  
00002A1C  4CDF 7EFF               2463  endDispSub  MOVEM.L  (SP)+, D0-D7/A1-A6
00002A20  4E75                    2464              RTS
00002A22                          2465  
00002A22                          2466  *the following subroutine gets the string address from the user
00002A22                          2467  *and converts it to Hex for a starting/ending address. it is done 
00002A22                          2468  *by checking each byte at address A1, and converting it from ascii to 
00002A22                          2469  *hex number. If the user enters an invalid character string, the
00002A22                          2470  *program will have a simhalt.
00002A22  48E7 1F3E               2471  Address MOVEM.L D3-D7/A2-A6, -(SP)
00002A26  4242                    2472          CLR     D2
00002A28  4243                    2473          CLR     D3
00002A2A  B23C 0004               2474          CMP.B   #4, D1
00002A2E  6700 000E               2475          BEQ     subLOOP
00002A32  B23C 0008               2476          CMP.B   #8, D1
00002A36  6700 0006               2477          BEQ     subLOOP
00002A3A  6000 0126               2478          BRA     ADDinvalid        
00002A3E                          2479          
00002A3E  E85C                    2480  subLOOP ROR     #4, D4
00002A40  1404                    2481          MOVE.B  D4, D2
00002A42  4244                    2482          CLR     D4
00002A44  4245                    2483          CLR     D5
00002A46  B601                    2484          CMP.B   D1, D3
00002A48  6700 011E               2485          BEQ     endLOOP
00002A4C  5443                    2486          ADD.W   #2, D3
00002A4E  E19A                    2487          ROL.L   #8, D2
00002A50                          2488          
00002A50  E95C                    2489  bytLOOP ROL     #4, D4
00002A52                          2490          
00002A52  0C11 0030               2491          CMP.B   #$30, (A1)
00002A56  6700 007E               2492          BEQ     hZero 
00002A5A  0C11 0031               2493          CMP.B   #$31, (A1)
00002A5E  6700 007E               2494          BEQ     hOne
00002A62  0C11 0032               2495          CMP.B   #$32, (A1)
00002A66  6700 007E               2496          BEQ     hTwo
00002A6A  0C11 0033               2497          CMP.B   #$33, (A1)
00002A6E  6700 007E               2498          BEQ     hThree
00002A72  0C11 0034               2499          CMP.B   #$34, (A1)
00002A76  6700 007E               2500          BEQ     hFour
00002A7A  0C11 0035               2501          CMP.B   #$35, (A1)
00002A7E  6700 007E               2502          BEQ     hFive
00002A82  0C11 0036               2503          CMP.B   #$36, (A1)
00002A86  6700 007E               2504          BEQ     hSix
00002A8A  0C11 0037               2505          CMP.B   #$37, (A1)
00002A8E  6700 007E               2506          BEQ     hSeven
00002A92  0C11 0038               2507          CMP.B   #$38, (A1)
00002A96  6700 007E               2508          BEQ     hEight
00002A9A  0C11 0039               2509          CMP.B   #$39, (A1)
00002A9E  6700 007E               2510          BEQ     hNine
00002AA2  0C11 0041               2511          CMP.B   #$41, (A1)
00002AA6  6700 007E               2512          BEQ     hA
00002AAA  0C11 0042               2513          CMP.B   #$42, (A1)
00002AAE  6700 007E               2514          BEQ     hB
00002AB2  0C11 0043               2515          CMP.B   #$43, (A1)
00002AB6  6700 007E               2516          BEQ     hC
00002ABA  0C11 0044               2517          CMP.B   #$44, (A1)
00002ABE  6700 007E               2518          BEQ     hD
00002AC2  0C11 0045               2519          CMP.B   #$45, (A1)
00002AC6  6700 007E               2520          BEQ     hE
00002ACA  0C11 0046               2521          CMP.B   #$46, (A1)
00002ACE  6700 007E               2522          BEQ     hF 
00002AD2  6000 FEDE               2523          BRA     invalid      
00002AD6  183C 0000               2524  hZero   MOVE.B  #$00, D4
00002ADA  6000 0076               2525          BRA     nextH
00002ADE  183C 0010               2526  hOne    MOVE.B  #$10, D4
00002AE2  6000 006E               2527          BRA     nextH
00002AE6  183C 0020               2528  hTwo    MOVE.B  #$20, D4
00002AEA  6000 0066               2529          BRA     nextH
00002AEE  183C 0030               2530  hThree  MOVE.B  #$30, D4
00002AF2  6000 005E               2531          BRA     nextH
00002AF6  183C 0040               2532  hFour   MOVE.B  #$40, D4
00002AFA  6000 0056               2533          BRA     nextH
00002AFE  183C 0050               2534  hFive   MOVE.B  #$50, D4
00002B02  6000 004E               2535          BRA     nextH
00002B06  183C 0060               2536  hSix    MOVE.B  #$60, D4
00002B0A  6000 0046               2537          BRA     nextH
00002B0E  183C 0070               2538  hSeven  MOVE.B  #$70, D4
00002B12  6000 003E               2539          BRA     nextH
00002B16  183C 0080               2540  hEight  MOVE.B  #$80, D4
00002B1A  6000 0036               2541          BRA     nextH
00002B1E  183C 0090               2542  hNine   MOVE.B  #$90, D4
00002B22  6000 002E               2543          BRA     nextH
00002B26  183C 00A0               2544  hA      MOVE.B  #$A0, D4
00002B2A  6000 0026               2545          BRA     nextH
00002B2E  183C 00B0               2546  hB      MOVE.B  #$B0, D4
00002B32  6000 001E               2547          BRA     nextH
00002B36  183C 00C0               2548  hC      MOVE.B  #$C0, D4
00002B3A  6000 0016               2549          BRA     nextH
00002B3E  183C 00D0               2550  hD      MOVE.B  #$D0, D4
00002B42  6000 000E               2551          BRA     nextH
00002B46  183C 00E0               2552  hE      MOVE.B  #$E0, D4
00002B4A  6000 0006               2553          BRA     nextH
00002B4E  183C 00F0               2554  hF      MOVE.B  #$F0, D4
00002B52                          2555  
00002B52  1019                    2556  nextH   MOVE.B  (A1)+, D0
00002B54  5245                    2557          ADD     #1, D5
00002B56  BA3C 0002               2558          CMP.B   #2, D5
00002B5A  6700 FEE2               2559          BEQ     subLOOP
00002B5E  6000 FEF0               2560          BRA     bytLOOP
00002B62                          2561          
00002B62  103C 0009               2562  ADDinvalid  MOVE.B  #9,D0
00002B66  4E4F                    2563              TRAP    #15
00002B68                          2564     
00002B68  4CDF 7CF8               2565  endLOOP MOVEM.L  (SP)+, D3-D7/A2-A6
00002B6C  4E75                    2566          RTS
00002B6E                          2567  
00002B6E                          2568  printInvalid
00002B6E                          2569  endPROG    
00002B6E                          2570  
00002B6E  FFFF FFFF               2571      SIMHALT                             ; halt simulator
00002B72                          2572  
00002B72= 45 6E 74 65 72 20 ...   2573  startingMessage DC.B    'Enter Starting Address (in hex): ', 0
00002B94= 45 6E 74 65 72 20 ...   2574  endingMessage   DC.B    'Enter Ending Address (in hex): ', 0
00002BB4                          2575  
00002BB4= 20 0D 0A 00             2576  newLine     DC.B    ' ', CR, LF, 0
00002BB8= 20 20 00                2577  space       DC.B    '  ', 0
00002BBB                          2578  
00002BBB= 23 00                   2579  hashTag     DC.B    '#', 0
00002BBD= 24 00                   2580  dispHex     DC.B    '$', 0
00002BBF= 2C 00                   2581  comma       DC.B    ',', 0
00002BC1                          2582  
00002BC1= 28 00                   2583  opPer       DC.B    '(', 0
00002BC3= 29 00                   2584  clPer       DC.B    ')', 0
00002BC5= 2D 00                   2585  dec         DC.B    '-', 0
00002BC7= 2B 00                   2586  inc         DC.B    '+', 0
00002BC9                          2587  
00002BC9= 4F 52 49 00             2588  ORImatch    DC.B    'ORI', 0
00002BCD= 43 4D 50 49 00          2589  CMPImatch   DC.B    'CMPI', 0
00002BD2= 42 43 4C 52 00          2590  BCLRmatch   DC.B    'BCLR', 0
00002BD7= 4D 4F 56 45 00          2591  MOVEmatch   DC.B    'MOVE', 0
00002BDC= 4D 4F 56 45 41 00       2592  MOVEAmatch  DC.B    'MOVEA', 0
00002BE2= 4E 45 47 00             2593  NEGmatch    DC.B    'NEG', 0
00002BE6= 52 54 53 00             2594  RTSmatch    DC.B    'RTS', 0
00002BEA= 4A 53 52 00             2595  JSRmatch    DC.B    'JSR', 0
00002BEE= 4D 4F 56 45 4D 00       2596  MOVEMmatch  DC.B    'MOVEM', 0
00002BF4= 4C 45 41 00             2597  LEAmatch    DC.B    'LEA', 0
00002BF8= 53 55 42 51 00          2598  SUBQmatch   DC.B    'SUBQ', 0
00002BFD= 42 52 41 00             2599  BRAmatch    DC.B    'BRA', 0
00002C01= 42 43 53 00             2600  BCSmatch    DC.B    'BCS', 0
00002C05= 42 56 43 00             2601  BVCmatch    DC.B    'BVC', 0
00002C09= 42 47 45 00             2602  BGEmatch    DC.B    'BGE', 0
00002C0D= 42 4C 54 00             2603  BLTmatch    DC.B    'BLT', 0
00002C11= 44 49 56 53 00          2604  DIVSmatch   DC.B    'DIVS', 0
00002C16= 4F 52 00                2605  ORmatch     DC.B    'OR', 0
00002C19= 53 55 42 00             2606  SUBmatch    DC.B    'SUB', 0
00002C1D= 45 4F 52 00             2607  EORmatch    DC.B    'EOR', 0
00002C21= 43 4D 50 00             2608  CMPmatch    DC.B    'CMP', 0
00002C25= 4D 55 4C 53 00          2609  MULSmatch   DC.B    'MULS', 0
00002C2A= 41 44 44 00             2610  ADDmatch    DC.B    'ADD', 0
00002C2E= 41 44 44 41 00          2611  ADDAmatch   DC.B    'ADDA', 0
00002C33= 4C 53 52 00             2612  LSRmatch    DC.B    'LSR', 0
00002C37= 4C 53 4C 00             2613  LSLmatch    DC.B    'LSL', 0
00002C3B= 41 53 52 00             2614  ASRmatch    DC.B    'ASR', 0
00002C3F= 41 53 4C 00             2615  ASLmatch    DC.B    'ASL', 0
00002C43= 52 4F 52 00             2616  RORmatch    DC.B    'ROR', 0
00002C47= 52 4F 4C 00             2617  ROLmatch    DC.B    'ROL', 0
00002C4B                          2618   
00002C4B= 2E 42 00                2619  dispByte    DC.B    '.B', 0
00002C4E= 2E 57 00                2620  dispWord    DC.B    '.W', 0
00002C51= 2E 4C 00                2621  dispLong    DC.B    '.L', 0
00002C54                          2622  
00002C54= 41 30 00                2623  dispA0      DC.B    'A0', 0
00002C57= 41 31 00                2624  dispA1      DC.B    'A1', 0
00002C5A= 41 32 00                2625  dispA2      DC.B    'A2', 0
00002C5D= 41 33 00                2626  dispA3      DC.B    'A3', 0
00002C60= 41 34 00                2627  dispA4      DC.B    'A4', 0
00002C63= 41 35 00                2628  dispA5      DC.B    'A5', 0
00002C66= 41 36 00                2629  dispA6      DC.B    'A6', 0
00002C69= 41 37 00                2630  dispA7      DC.B    'A7', 0
00002C6C                          2631  
00002C6C= 44 00                   2632  dispD       DC.B    'D',0
00002C6E= 44 30 00                2633  dispD0      DC.B    'D0', 0
00002C71= 44 31 00                2634  dispD1      DC.B    'D1', 0
00002C74= 44 32 00                2635  dispD2      DC.B    'D2', 0
00002C77= 44 33 00                2636  dispD3      DC.B    'D3', 0
00002C7A= 44 34 00                2637  dispD4      DC.B    'D4', 0
00002C7D= 44 35 00                2638  dispD5      DC.B    'D5', 0
00002C80= 44 36 00                2639  dispD6      DC.B    'D6', 0
00002C83= 44 37 00                2640  dispD7      DC.B    'D7', 0 
00002C86                          2641   
00002C86                          2642             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             294E
ABSSHORT            2916
ADDAMATCH           2C2E
ADDINVALID          2B62
ADDMATCH            2C2A
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ADDRESS             2A22
ASLMATCH            2C3F
ASRMATCH            2C3B
BCLRMATCH           2BD2
BCSMATCH            2C01
BGEMATCH            2C09
BLTMATCH            2C0D
BRAEIGHT            113A
BRAELEVEN           113E
BRAFIVE             110A
BRAFOUR             10EE
BRAFOURTEEN         1194
BRAMATCH            2BFD
BRANINE             113A
BRAONE              10EA
BRASIX              110E
BRATHIRTEEN         1142
BRATHREE            10EE
BRATWELVE           113E
BRATWO              10EE
BRAZERO             10BA
BVCMATCH            2C05
BYTLOOP             2A50
CLPER               2BC3
CMPIMATCH           2BCD
CMPMATCH            2C21
COMMA               2BBF
CR                  D
DEC                 2BC5
DISPA0              2C54
DISPA1              2C57
DISPA2              2C5A
DISPA3              2C5D
DISPA4              2C60
DISPA5              2C63
DISPA6              2C66
DISPA7              2C69
DISPBYTE            2C4B
DISPD               2C6C
DISPD0              2C6E
DISPD1              2C71
DISPD2              2C74
DISPD3              2C77
DISPD4              2C7A
DISPD5              2C7D
DISPD6              2C80
DISPD7              2C83
DISPHEX             2BBD
DISPIMM             2986
DISPLAYA0           248E
DISPLAYA0A          255A
DISPLAYA0D          281E
DISPLAYA0P          2686
DISPLAYA1           249E
DISPLAYA1A          2576
DISPLAYA1D          283A
DISPLAYA1P          26AE
DISPLAYA2           24AE
DISPLAYA2A          2592
DISPLAYA2D          2856
DISPLAYA2P          26D6
DISPLAYA3           24BE
DISPLAYA3A          25AE
DISPLAYA3D          2872
DISPLAYA3P          26FE
DISPLAYA4           24CE
DISPLAYA4A          25CA
DISPLAYA4D          288E
DISPLAYA4P          2726
DISPLAYA5           24DE
DISPLAYA5A          25E6
DISPLAYA5D          28AA
DISPLAYA5P          274E
DISPLAYA6           24EE
DISPLAYA6A          2602
DISPLAYA6D          28C6
DISPLAYA6P          2776
DISPLAYA7           24FE
DISPLAYA7A          261E
DISPLAYA7D          28E2
DISPLAYA7P          279E
DISPLAYD0           23CE
DISPLAYD1           23DE
DISPLAYD2           23EE
DISPLAYD3           23FE
DISPLAYD4           240E
DISPLAYD5           241E
DISPLAYD6           242E
DISPLAYD7           243E
DISPLAYEIGHT        2346
DISPLONG            2C51
DISPLOOP            29D4
DISPWORD            2C4E
DIVSMATCH           2C11
DLETTERS            2A08
DLNINE              29F4
EIGHT               8
ELEVEN              B
ENDDISPSUB          2A1C
ENDINGMESSAGE       2B94
ENDLOOP             2B68
ENDPROG             2B6E
ENDSUB              29B2
ENDSUBROUTINE       2350
EORMATCH            2C1D
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HA                  2B26
HASHTAG             2BBB
HB                  2B2E
HC                  2B36
HD                  2B3E
HE                  2B46
HEIGHT              2B16
HF                  2B4E
HFIVE               2AFE
HFOUR               2AF6
HNINE               2B1E
HONE                2ADE
HSEVEN              2B0E
HSIX                2B06
HTHREE              2AEE
HTWO                2AE6
HZERO               2AD6
INC                 2BC7
INVALID             29B2
JSRMATCH            2BEA
LEAMATCH            2BF4
LF                  A
LOOP                1040
LSLMATCH            2C37
LSRMATCH            2C33
MEMSB               1AE0
MEMSHIFTIMM         232C
MEMSHIFTS           11AE
MEMSL               1FF4
MEMSW               1D6A
MOVEAMATCH          2BDC
MOVEMATCH           2BD7
MOVEMMATCH          2BEE
MOVEOVER            29D0
MULSMATCH           2C25
NEGMATCH            2BE2
NEWLINE             2BB4
NEXTH               2B52
NINE                9
ONE                 1
OPADDAL             18A8
OPADDAW             1838
OPADDB              16F4
OPADDL              17CC
OPADDW              1760
OPASBI              1B1E
OPASBR              1B80
OPASL               1918
OPASLBI             1B5E
OPASLBR             1BC0
OPASLI              2032
OPASLLI             2072
OPASLLR             20D4
OPASLR              2094
OPASLWI             1DE8
OPASLWR             1E4A
OPASR               1964
OPASRBI             1B3C
OPASRBR             1B9E
OPASRLI             2050
OPASRLR             20B2
OPASRWI             1DC6
OPASRWR             1E28
OPASWI              1DA8
OPASWR              1E0A
OPBCLR              14CE
OPBCS               1654
OPBGE               166C
OPBLT               1678
OPBRA               163C
OPBVC               1660
OPCMPI              135C
OPCMPIB             13A8
OPCMPIL             146C
OPCMPIW             140A
OPDYNBCLR           1532
OPLSBI              1BE2
OPLSBR              1C44
OPLSL               19B0
OPLSLBI             1C22
OPLSLBR             1C84
OPLSLI              20F6
OPLSLLI             2136
OPLSLLR             2198
OPLSLR              2158
OPLSLWI             1EAC
OPLSLWR             1F0E
OPLSR               19FC
OPLSRBI             1C00
OPLSRBR             1C62
OPLSRLI             2114
OPLSRLR             2176
OPLSRWI             1E8A
OPLSRWR             1EEC
OPLSWI              1E6C
OPLSWR              1ECE
OPMOVEB             15A0
OPMOVEMLEA          1630
OPMULS              1690
OPNEG               1624
OPORI               1208
OPORIB              1236
OPORIL              12FA
OPORIW              1298
OPPER               2BC1
OPROBI              1CA6
OPROBR              1D08
OPROL               1A48
OPROLBI             1CE6
OPROLBR             1D48
OPROLI              21BA
OPROLLI             21FA
OPROLLR             225C
OPROLR              221C
OPROLWI             1F70
OPROLWR             1FD2
OPROR               1A94
OPRORBI             1CC4
OPRORBR             1D26
OPRORLI             21D8
OPRORLR             223A
OPRORWI             1F4E
OPRORWR             1FB0
OPROWI              1F30
OPROWR              1F92
OPRTSJSR            1630
OPSUB               1684
OPSUBQ              1630
ORIMATCH            2BC9
ORMATCH             2C16
OUTHEX              29B8
PADDRDEC            27C6
PADDRDIR            250E
PADDRPOST           263A
PADDRREG            244E
PDATAREG            238E
PHEX                28FE
PRINTEA             2356
PRINTINVALID        2B6E
PRNTIMM             227E
PRNTREG             22DA
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
REGSHIFTS           11EC
ROLMATCH            2C47
RORMATCH            2C43
RTSMATCH            2BE6
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               2BB8
START               1000
STARTINGMESSAGE     2B72
SUBLOOP             2A3E
SUBMATCH            2C19
SUBQMATCH           2BF8
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
