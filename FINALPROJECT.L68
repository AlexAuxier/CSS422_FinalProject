00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 11/29/2014 8:58:23 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00002000                 10  test_start  EQU     $00002000   ; defined starting address
00000000  =00002009                 11  test_end    EQU     $00002009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00002000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00002009             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 0D02                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 0084                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 007C                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 0090                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 008C                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00B0                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00A8                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00A4                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 009C                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 0098                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 0090                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                102          AND.B       #secNib, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 00B2                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 01FE                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                108          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 0368                109          BEQ         opBCLR
000010A6  C47C 0001                110          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                111          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 03C0                112          BEQ         opDynBCLR
000010B2  6000 0C62                113          BRA         printInvalid
000010B6                           114          
000010B6                           115          
000010B6  6000 0426                116  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           117  
000010BA  6000 04A6                118  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BE                           119  
000010BE                           120  braThree ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BE                           121  
000010BE  4242                     122  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010C0  1401                     123          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010C2  C438 000F                124          AND.B       $0F, D2             ; set first nibble to 0
000010C6                           125   
000010C6  B43C 0004                126          CMP.B       #four, D2           ; compare second nibble to 4
000010CA  6700 057E                127          BEQ         opNEG               ; branch to NEG method
000010CE  B43C 000E                128          CMP.B       #fourteen, D2       ; compare second nibble to E
000010D2  6700 0582                129          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010D6  6000 057E                130          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010DA                           131  
000010DA  6000 057A                132  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010DE                           133  
000010DE  4242                     134  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010E0  1401                     135          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010E2  C438 000F                136          AND.B       $0F, D2             ; set first nibble to 0
000010E6                           137   
000010E6  B43C 0000                138          CMP.B       #zero, D2           ; compare second nibble to 0
000010EA  6700 0576                139          BEQ         opBRA               ; branch to BRA method
000010EE  B43C 0005                140          CMP.B       #five, D2           ; compare second nibble to 5
000010F2  6700 0586                141          BEQ         opBCS               ; branch to BCS method
000010F6  B43C 0008                142          CMP.B       #eight, D2          ; compare second nibble to 8
000010FA  6700 058A                143          BEQ         opBVC               ; branch to BCS method
000010FE  B43C 000C                144          CMP.B       #twelve, D2         ; compare second nibble to 12
00001102  6700 058E                145          BEQ         opBGE               ; branch to BGE method
00001106  6000 0596                146          BRA         opBLT               ; otherwise, branch to BLT method
0000110A                           147  
0000110A                           148  braEight    ; there are two opCodes available DIVS, or OR
0000110A                           149  
0000110A  6000 059E                150  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
0000110E                           151  
0000110E                           152  braEleven   ; there are two opCodes available EOR, or CMP
0000110E                           153  
0000110E  6000 05A6                154  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
00001112                           155    
00001112                           156  braThirteen ; there are two opCodes available ADD, or ADDA
00001112                           157  
00001112  4242                     158  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
00001114  1401                     159              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
00001116  C438 000F                160              AND.B       $0F, D2             ; set first nibble to 0
0000111A                           161   
0000111A  B43C 0000                162              CMP.B       #zero, D2           ; compare second nibble to 0
0000111E  6700 05AE                163              BEQ         opASR               ; branch to ASR method
00001122  B43C 0001                164              CMP.B       #one, D2            ; compare second nibble to 1
00001126  6700 059A                165              BEQ         opASL               ; branch to ASL method
0000112A  B43C 0002                166              CMP.B       #two, D2            ; compare second nibble to 2
0000112E  6700 05B6                167              BEQ         opLSR               ; branch to LSR method
00001132  B43C 0003                168              CMP.B       #three, D2          ; compare second nibble to 3
00001136  6700 05A2                169              BEQ         opLSL               ; branch to LSL method
0000113A  B43C 0006                170              CMP.B       #six, D2            ; compare second nibble to 6
0000113E  6700 05BE                171              BEQ         opROR               ; branch to ROR method
00001142  6000 05AE                172              BRA         opROL               ; otherwise, branch to ROL method
00001146                           173  
00001146  43F9 00001D2F            174  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
0000114C  103C 000E                175          MOVE.B      #14, D0             ; command for trap call to display message
00001150  4E4F                     176          TRAP        #15                 ; trap call
00001152                           177          
00001152  1218                     178          MOVE.B      (A0)+, D1
00001154  1401                     179          MOVE.B      D1,D2               ; copy data over
00001156  EC42                     180          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001158  B43C 0000                181          CMP.B       #zero,D2
0000115C  6700 0016                182          BEQ         opORIB
00001160  B43C 0001                183          CMP.B       #one,D2
00001164  6700 0070                184          BEQ         opORIW
00001168  B43C 0002                185          CMP.B       #two,D2
0000116C  6700 00CA                186          BEQ         opORIL
00001170                           187          
00001170  6000 0BA4                188          BRA         printInvalid
00001174                           189          
00001174  43F9 00001DB1            190  opORIB  LEA         dispByte, A1        ; Display byte
0000117A  103C 000E                191          MOVE.B      #14, D0             ; command for trap call to display message
0000117E  4E4F                     192          TRAP        #15                 ; trap call
00001180                           193          
00001180  43F9 00001D1E            194          LEA         space, A1           ; Display space
00001186  103C 000E                195          MOVE.B      #14, D0             ; command for trap call to display message
0000118A  4E4F                     196          TRAP        #15                 ; trap call
0000118C                           197          
0000118C  4242                     198          CLR         D2
0000118E  1401                     199          MOVE.B      D1,D2
00001190  E642                     200          ASR         #three,D2
00001192  C47C 0007                201          AND         #seven,D2
00001196  4243                     202          CLR         D3        
00001198  1601                     203          MOVE.B      D1,D3
0000119A  C67C 0007                204          AND         #seven,D3
0000119E                           205          
0000119E  4241                     206          CLR         D1
000011A0  3218                     207          MOVE.W      (A0)+, D1
000011A2                           208          
000011A2  43F9 00001D21            209          LEA         hashTag, A1           ; Display space
000011A8  103C 000E                210          MOVE.B      #14, D0             ; command for trap call to display message
000011AC  4E4F                     211          TRAP        #15                 ; trap call
000011AE                           212          
000011AE  103C 0003                213          MOVE.B      #3, D0
000011B2  4E4F                     214          TRAP        #15
000011B4                           215          
000011B4  43F9 00001D25            216          LEA         comma, A1           ; Display space
000011BA  103C 000E                217          MOVE.B      #14, D0             ; command for trap call to display message
000011BE  4E4F                     218          TRAP        #15                 ; trap call
000011C0                           219          
000011C0  4EB9 0000170A            220          JSR         printEA
000011C6                           221          
000011C6  43F9 00001D1A            222          LEA         newLine, A1           ; Display space
000011CC  103C 000E                223          MOVE.B      #14, D0             ; command for trap call to display message
000011D0  4E4F                     224          TRAP        #15                 ; trap call
000011D2                           225          
000011D2  6000 FE38                226          BRA         LOOP
000011D6                           227          
000011D6                           228          
000011D6  43F9 00001DB4            229  opORIW  LEA         dispWord, A1        ; Display byte
000011DC  103C 000E                230          MOVE.B      #14, D0             ; command for trap call to display message
000011E0  4E4F                     231          TRAP        #15                 ; trap call
000011E2                           232          
000011E2  43F9 00001D1E            233          LEA         space, A1           ; Display space
000011E8  103C 000E                234          MOVE.B      #14, D0             ; command for trap call to display message
000011EC  4E4F                     235          TRAP        #15                 ; trap call
000011EE                           236          
000011EE  4242                     237          CLR         D2
000011F0  1401                     238          MOVE.B      D1,D2
000011F2  E642                     239          ASR         #three,D2
000011F4  C47C 0007                240          AND         #seven,D2
000011F8  4243                     241          CLR         D3        
000011FA  1601                     242          MOVE.B      D1,D3
000011FC  C67C 0007                243          AND         #seven,D3
00001200                           244          
00001200  4241                     245          CLR         D1
00001202  3218                     246          MOVE.W      (A0)+, D1
00001204                           247          
00001204  43F9 00001D21            248          LEA         hashTag, A1           ; Display space
0000120A  103C 000E                249          MOVE.B      #14, D0             ; command for trap call to display message
0000120E  4E4F                     250          TRAP        #15                 ; trap call
00001210                           251          
00001210  103C 0003                252          MOVE.B      #3, D0
00001214  4E4F                     253          TRAP        #15
00001216                           254          
00001216  43F9 00001D25            255          LEA         comma, A1           ; Display space
0000121C  103C 000E                256          MOVE.B      #14, D0             ; command for trap call to display message
00001220  4E4F                     257          TRAP        #15                 ; trap call
00001222                           258          
00001222  4EB9 0000170A            259          JSR         printEA
00001228                           260          
00001228  43F9 00001D1A            261          LEA         newLine, A1           ; Display space
0000122E  103C 000E                262          MOVE.B      #14, D0             ; command for trap call to display message
00001232  4E4F                     263          TRAP        #15                 ; trap call
00001234                           264          
00001234  6000 FDD6                265          BRA         LOOP
00001238                           266       
00001238  43F9 00001DB7            267  opORIL  LEA         dispLong, A1        ; Display byte
0000123E  103C 000E                268          MOVE.B      #14, D0             ; command for trap call to display message
00001242  4E4F                     269          TRAP        #15                 ; trap call
00001244                           270          
00001244  43F9 00001D1E            271          LEA         space, A1           ; Display space
0000124A  103C 000E                272          MOVE.B      #14, D0             ; command for trap call to display message
0000124E  4E4F                     273          TRAP        #15                 ; trap call
00001250                           274          
00001250  4242                     275          CLR         D2
00001252  1401                     276          MOVE.B      D1,D2
00001254  E642                     277          ASR         #three,D2
00001256  C47C 0007                278          AND         #seven,D2
0000125A  4243                     279          CLR         D3        
0000125C  1601                     280          MOVE.B      D1,D3
0000125E  C67C 0007                281          AND         #seven,D3
00001262                           282          
00001262  4241                     283          CLR         D1
00001264  2218                     284          MOVE.L      (A0)+, D1
00001266                           285          
00001266  43F9 00001D21            286          LEA         hashTag, A1           ; Display space
0000126C  103C 000E                287          MOVE.B      #14, D0             ; command for trap call to display message
00001270  4E4F                     288          TRAP        #15                 ; trap call
00001272                           289          
00001272  103C 0003                290          MOVE.B      #3, D0
00001276  4E4F                     291          TRAP        #15
00001278                           292          
00001278  43F9 00001D25            293          LEA         comma, A1           ; Display space
0000127E  103C 000E                294          MOVE.B      #14, D0             ; command for trap call to display message
00001282  4E4F                     295          TRAP        #15                 ; trap call
00001284                           296          
00001284  4EB9 0000170A            297          JSR         printEA
0000128A                           298          
0000128A  43F9 00001D1A            299          LEA         newLine, A1           ; Display space
00001290  103C 000E                300          MOVE.B      #14, D0             ; command for trap call to display message
00001294  4E4F                     301          TRAP        #15                 ; trap call
00001296                           302          
00001296  6000 FD74                303          BRA         LOOP
0000129A                           304           
0000129A  43F9 00001D33            305  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000012A0  103C 000E                306          MOVE.B      #14, D0             ; command for trap call to display message
000012A4  4E4F                     307          TRAP        #15                 ; trap call
000012A6                           308                  
000012A6  1218                     309          MOVE.B      (A0)+, D1
000012A8  1401                     310          MOVE.B      D1,D2               ; copy data over
000012AA  EC42                     311          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000012AC  B43C 0000                312          CMP.B       #zero,D2
000012B0  6700 0034                313          BEQ         opCMPIB
000012B4  B43C 0001                314          CMP.B       #one,D2
000012B8  6700 008E                315          BEQ         opCMPIW
000012BC  B43C 0002                316          CMP.B       #two,D2
000012C0  6700 00E8                317          BEQ         opCMPIL
000012C4                           318          
000012C4  1401                     319          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000012C6  E542                     320          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
000012C8  1802                     321          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
000012CA  4242                     322          CLR         D2                  ; Clear out data register
000012CC  1404                     323          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
000012CE  EA42                     324          ASR         #five,D2            ; Shift the register out to get just the mode
000012D0  1802                     325          MOVE.B      D2,D4               ; Store mode into D4
000012D2  4242                     326          CLR         D2
000012D4                           327          
000012D4  1401                     328          MOVE.B      D1,D2               ; Getting the EA register
000012D6  EB42                     329          ASL         #five,D2
000012D8  1A02                     330          MOVE.B      D2,D5               ; Move just the register into D5
000012DA  4242                     331          CLR         D2                  ; Clearing D2 to put data back
000012DC  1405                     332          MOVE.B      D5,D2               ; Putting back the register
000012DE  EA42                     333          ASR         #five,D2            ; Shifting bits in order to read the register
000012E0  1A02                     334          MOVE.B      D2,D5               ; Store register into D5
000012E2                           335          
000012E2  6000 FD28                336          BRA         LOOP                ; go back to the loop
000012E6                           337  
000012E6  43F9 00001DB1            338  opCMPIB LEA         dispByte, A1        ; Display byte
000012EC  103C 000E                339          MOVE.B      #14, D0             ; command for trap call to display message
000012F0  4E4F                     340          TRAP        #15                 ; trap call
000012F2                           341          
000012F2  43F9 00001D1E            342          LEA         space, A1           ; Display space
000012F8  103C 000E                343          MOVE.B      #14, D0             ; command for trap call to display message
000012FC  4E4F                     344          TRAP        #15                 ; trap call
000012FE                           345          
000012FE  4242                     346          CLR         D2
00001300  1401                     347          MOVE.B      D1,D2
00001302  E642                     348          ASR         #three,D2
00001304  C47C 0007                349          AND         #seven,D2
00001308  4243                     350          CLR         D3        
0000130A  1601                     351          MOVE.B      D1,D3
0000130C  C67C 0007                352          AND         #seven,D3
00001310                           353          
00001310  4241                     354          CLR         D1
00001312  3218                     355          MOVE.W      (A0)+, D1
00001314                           356          
00001314  43F9 00001D21            357          LEA         hashTag, A1           ; Display space
0000131A  103C 000E                358          MOVE.B      #14, D0             ; command for trap call to display message
0000131E  4E4F                     359          TRAP        #15                 ; trap call
00001320                           360          
00001320  103C 0003                361          MOVE.B      #3, D0
00001324  4E4F                     362          TRAP        #15
00001326                           363          
00001326  43F9 00001D25            364          LEA         comma, A1           ; Display space
0000132C  103C 000E                365          MOVE.B      #14, D0             ; command for trap call to display message
00001330  4E4F                     366          TRAP        #15                 ; trap call
00001332                           367          
00001332  4EB9 0000170A            368          JSR         printEA
00001338                           369          
00001338  43F9 00001D1A            370          LEA         newLine, A1           ; Display space
0000133E  103C 000E                371          MOVE.B      #14, D0             ; command for trap call to display message
00001342  4E4F                     372          TRAP        #15                 ; trap call
00001344                           373  
00001344  6000 FCC6                374          BRA         LOOP
00001348                           375  
00001348  43F9 00001DB4            376  opCMPIW LEA         dispWord, A1        ; Display byte
0000134E  103C 000E                377          MOVE.B      #14, D0             ; command for trap call to display message
00001352  4E4F                     378          TRAP        #15                 ; trap call
00001354                           379          
00001354  43F9 00001D1E            380          LEA         space, A1           ; Display space
0000135A  103C 000E                381          MOVE.B      #14, D0             ; command for trap call to display message
0000135E  4E4F                     382          TRAP        #15                 ; trap call
00001360                           383          
00001360  4242                     384          CLR         D2
00001362  1401                     385          MOVE.B      D1,D2
00001364  E642                     386          ASR         #three,D2
00001366  C47C 0007                387          AND         #seven,D2
0000136A  4243                     388          CLR         D3        
0000136C  1601                     389          MOVE.B      D1,D3
0000136E  C67C 0007                390          AND         #seven,D3
00001372                           391          
00001372  4241                     392          CLR         D1
00001374  3218                     393          MOVE.W      (A0)+, D1
00001376                           394          
00001376  43F9 00001D21            395          LEA         hashTag, A1           ; Display space
0000137C  103C 000E                396          MOVE.B      #14, D0             ; command for trap call to display message
00001380  4E4F                     397          TRAP        #15                 ; trap call
00001382                           398          
00001382  103C 0003                399          MOVE.B      #3, D0
00001386  4E4F                     400          TRAP        #15
00001388                           401          
00001388  43F9 00001D25            402          LEA         comma, A1           ; Display space
0000138E  103C 000E                403          MOVE.B      #14, D0             ; command for trap call to display message
00001392  4E4F                     404          TRAP        #15                 ; trap call
00001394                           405          
00001394  4EB9 0000170A            406          JSR         printEA
0000139A                           407          
0000139A  43F9 00001D1A            408          LEA         newLine, A1           ; Display space
000013A0  103C 000E                409          MOVE.B      #14, D0             ; command for trap call to display message
000013A4  4E4F                     410          TRAP        #15                 ; trap call
000013A6  6000 FC64                411          BRA         LOOP
000013AA                           412  
000013AA  43F9 00001DB7            413  opCMPIL LEA         dispLong, A1        ; Display byte
000013B0  103C 000E                414          MOVE.B      #14, D0             ; command for trap call to display message
000013B4  4E4F                     415          TRAP        #15                 ; trap call
000013B6                           416          
000013B6  43F9 00001D1E            417          LEA         space, A1           ; Display space
000013BC  103C 000E                418          MOVE.B      #14, D0             ; command for trap call to display message
000013C0  4E4F                     419          TRAP        #15                 ; trap call
000013C2                           420          
000013C2  4242                     421          CLR         D2
000013C4  1401                     422          MOVE.B      D1,D2
000013C6  E642                     423          ASR         #three,D2
000013C8  C47C 0007                424          AND         #seven,D2
000013CC  4243                     425          CLR         D3        
000013CE  1601                     426          MOVE.B      D1,D3
000013D0  C67C 0007                427          AND         #seven,D3
000013D4                           428          
000013D4  4241                     429          CLR         D1
000013D6  3218                     430          MOVE.W      (A0)+, D1
000013D8                           431          
000013D8  43F9 00001D21            432          LEA         hashTag, A1           ; Display space
000013DE  103C 000E                433          MOVE.B      #14, D0             ; command for trap call to display message
000013E2  4E4F                     434          TRAP        #15                 ; trap call
000013E4                           435          
000013E4  103C 0003                436          MOVE.B      #3, D0
000013E8  4E4F                     437          TRAP        #15
000013EA                           438          
000013EA  43F9 00001D25            439          LEA         comma, A1           ; Display space
000013F0  103C 000E                440          MOVE.B      #14, D0             ; command for trap call to display message
000013F4  4E4F                     441          TRAP        #15                 ; trap call
000013F6                           442          
000013F6  4EB9 0000170A            443          JSR         printEA
000013FC                           444          
000013FC  43F9 00001D1A            445          LEA         newLine, A1           ; Display space
00001402  103C 000E                446          MOVE.B      #14, D0             ; command for trap call to display message
00001406  4E4F                     447          TRAP        #15                 ; trap call
00001408                           448          
00001408  6000 FC02                449          BRA         LOOP
0000140C                           450  
0000140C  43F9 00001D38            451  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
00001412  103C 000E                452                  MOVE.B      #14, D0             ; command for trap call to display message
00001416  4E4F                     453                  TRAP        #15                 ; trap call
00001418                           454  
00001418  43F9 00001D1E            455                  LEA         space, A1           ; Display space
0000141E  103C 000E                456                  MOVE.B      #14, D0             ; command for trap call to display message
00001422  4E4F                     457                  TRAP        #15                 ; trap call
00001424                           458                  
00001424  4242                     459                  CLR         D2
00001426  1218                     460                  MOVE.B      (A0)+, D1
00001428  1401                     461                  MOVE.B      D1,D2               ; copy data over
0000142A  E642                     462                  ASR         #three,D2           ; Shift to the right to remove register
0000142C  C47C 0007                463                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
00001430                           464                  
00001430  4243                     465                  CLR         D3                  ; Clear D3 so we can move D1 in
00001432  1601                     466                  MOVE.B      D1,D3               ; Move othr byte in
00001434  C67C 0007                467                  AND         #seven,D3           ; Set everything besides register to 0
00001438                           468                  
00001438  4241                     469                  CLR         D1
0000143A  3218                     470                  MOVE.W      (A0)+, D1
0000143C                           471                 
0000143C                           472                  
0000143C  43F9 00001D21            473                  LEA         hashTag, A1           ; Display space
00001442  103C 000E                474                  MOVE.B      #14, D0             ; command for trap call to display message
00001446  4E4F                     475                  TRAP        #15                 ; trap call
00001448                           476          
00001448  103C 0003                477                  MOVE.B      #3, D0
0000144C  4E4F                     478                  TRAP        #15
0000144E                           479          
0000144E  43F9 00001D25            480                  LEA         comma, A1           ; Display space
00001454  103C 000E                481                  MOVE.B      #14, D0             ; command for trap call to display message
00001458  4E4F                     482                  TRAP        #15                 ; trap call
0000145A                           483                  
0000145A  4EB9 0000170A            484                  JSR         printEA
00001460                           485          
00001460  43F9 00001D1A            486                  LEA         newLine, A1           ; Display space
00001466  103C 000E                487                  MOVE.B      #14, D0             ; command for trap call to display message
0000146A  4E4F                     488                  TRAP        #15                 ; trap call
0000146C                           489                  
0000146C                           490                  
0000146C  6000 FB9E                491                  BRA         LOOP                
00001470                           492          
00001470                           493  opDynBCLR       
00001470  4241                     494                  CLR         D1
00001472  1218                     495                  MOVE.B      (A0)+,D1            ; Copy second byte in
00001474  1601                     496                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
00001476  E243                     497                  ASR         #one,D3             ; Shift register over to the end
00001478  C67C 0007                498                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
0000147C                           499                  
0000147C  1401                     500                  MOVE.B      D1,D2
0000147E  EC42                     501                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
00001480  B47C 0002                502                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
00001484  6600 0890                503                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
00001488                           504  
00001488                           505                  
00001488  43F9 00001D38            506                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
0000148E  103C 000E                507                  MOVE.B      #14, D0             ; command for trap call to display message
00001492  4E4F                     508                  TRAP        #15                 ; trap call  
00001494                           509                  
00001494  43F9 00001D1E            510                  LEA         space, A1           ; Display space
0000149A  103C 000E                511                  MOVE.B      #14, D0             ; command for trap call to display message
0000149E  4E4F                     512                  TRAP        #15                 ; trap call
000014A0                           513                  
000014A0  143C 0000                514                  MOVE.B      #zero,D2                
000014A4  4EB9 0000170A            515                  JSR         printEA
000014AA                           516                  
000014AA  43F9 00001D25            517                  LEA         comma, A1           ; Display space
000014B0  103C 000E                518                  MOVE.B      #14, D0             ; command for trap call to display message
000014B4  4E4F                     519                  TRAP        #15                 ; trap call
000014B6                           520                  
000014B6  4242                     521                  CLR         D2
000014B8  1401                     522                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000014BA  E642                     523                  ASR         #three,D2           ; Remove/shift the register out
000014BC  C47C 0007                524                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000014C0                           525                  
000014C0  4243                     526                  CLR         D3                  ; Clearing D3 to avoid mashing data
000014C2  1601                     527                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000014C4  C67C 0007                528                  AND         #seven,D3           ; Change all bits except for register bits to 0
000014C8                           529                  
000014C8                           530  
000014C8  4EB9 0000170A            531                  JSR         printEA
000014CE                           532          
000014CE  43F9 00001D1A            533                  LEA         newLine, A1           ; Display space
000014D4  103C 000E                534                  MOVE.B      #14, D0             ; command for trap call to display message
000014D8  4E4F                     535                  TRAP        #15                 ; trap call            
000014DA                           536  
000014DA                           537  
000014DA  6000 FB30                538                  BRA         LOOP                ; go back to the loop
000014DE                           539   
000014DE  43F9 00001D3D            540  opMOVEB LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
000014E4  103C 000E                541          MOVE.B      #14, D0             ; command for trap call to display message
000014E8  4E4F                     542          TRAP        #15                 ; trap call
000014EA  43F9 00001DB1            543          LEA         dispByte, A1        ; display byte
000014F0  103C 000E                544          MOVE.B      #14, D0             ; command for trap call to display message
000014F4  4E4F                     545          TRAP        #15                 ; trap call
000014F6  43F9 00001D1E            546          LEA         space, A1           ; create spaces
000014FC  103C 000E                547          MOVE.B      #14, D0             ; command for trap call to display message
00001500  4E4F                     548          TRAP        #15                 ; trap call
00001502                           549          
00001502                           550          
00001502  4245                     551          CLR         D5                  ; Clear D5
00001504  1A01                     552          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001506  E245                     553          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001508  CA7C 0007                554          AND         #seven,D5
0000150C                           555          
0000150C  4244                     556          CLR         D4                  ; Clear out D4
0000150E  1801                     557          MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001510  C87C 0001                558          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001514                           559          
00001514  4241                     560          CLR          D1
00001516  4242                     561          CLR          D2
00001518  1218                     562          MOVE.B      (A0)+,D1            ; Copy byte into D1
0000151A  1401                     563          MOVE.B      D1,D2
0000151C  EC42                     564          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000151E  D842                     565          ADD         D2,D4               ; Adds the remaining bits to D4
00001520                           566          
00001520  4242                     567          CLR         D2
00001522  1401                     568          MOVE.B      D1,D2               ; Copy new byte over to D2
00001524  E642                     569          ASR         #three,D2           ; Shift source register out
00001526  C47C 0007                570          AND         #seven,D2           ; Set everything to 0 except for the mode
0000152A                           571          
0000152A  4243                     572          CLR         D3
0000152C  1601                     573          MOVE.B      D1,D3
0000152E  C67C 0007                574          AND         #seven,D3
00001532                           575          
00001532  4EB9 0000170A            576          JSR         printEA
00001538                           577          
00001538  43F9 00001D25            578          LEA         comma, A1           ; Display space
0000153E  103C 000E                579          MOVE.B      #14, D0             ; command for trap call to display message
00001542  4E4F                     580          TRAP        #15                 ; trap call
00001544                           581          
00001544  4242                     582          CLR         D2
00001546  4243                     583          CLR         D3
00001548  1404                     584          MOVE.B      D4,D2
0000154A  1605                     585          MOVE.B      D5,D3
0000154C                           586          
0000154C  4EB9 0000170A            587          JSR         printEA
00001552                           588          
00001552                           589          
00001552  43F9 00001D1A            590          LEA         newLine, A1           ; Display space
00001558  103C 000E                591          MOVE.B      #14, D0             ; command for trap call to display message
0000155C  4E4F                     592          TRAP        #15                 ; trap call            
0000155E                           593  
0000155E                           594  
0000155E  6000 FAAC                595          BRA         LOOP                ; go back to the loop
00001562                           596          
00001562                           597  opMOVEL     
00001562                           598          
00001562  4245                     599              CLR         D5                  ; Clear D5
00001564  1A01                     600              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001566  E245                     601              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001568  CA7C 0007                602              AND         #seven,D5
0000156C                           603          
0000156C  4244                     604              CLR         D4                  ; Clear out D4
0000156E  1801                     605              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001570  C87C 0001                606              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001574                           607          
00001574  4241                     608              CLR          D1
00001576  4242                     609              CLR          D2
00001578  1218                     610              MOVE.B      (A0)+,D1            ; Copy byte into D1
0000157A  1401                     611              MOVE.B      D1,D2
0000157C  EC42                     612              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
0000157E  D842                     613              ADD         D2,D4               ; Adds the remaining bits to D4
00001580                           614          
00001580  B87C 0001                615              CMP         #one,D4             ; Check if it is MOVEA
00001584  6700 0066                616              BEQ         opMOVEAL            ; If it is, branch off
00001588                           617              
00001588  43F9 00001D3D            618              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
0000158E  103C 000E                619              MOVE.B      #14, D0             ; command for trap call to display message
00001592  4E4F                     620              TRAP        #15                 ; trap call  
00001594                           621              
00001594  43F9 00001DB7            622              LEA         dispLong,A1
0000159A                           623              
0000159A  43F9 00001D1E            624              LEA         space, A1           ; create spaces
000015A0  103C 000E                625              MOVE.B      #14, D0             ; command for trap call to display message
000015A4  4E4F                     626              TRAP        #15                 ; trap call
000015A6                           627          
000015A6  4242                     628              CLR         D2
000015A8  1401                     629              MOVE.B      D1,D2               ; Copy new byte over to D2
000015AA  E642                     630              ASR         #three,D2           ; Shift source register out
000015AC  C47C 0007                631              AND         #seven,D2           ; Set everything to 0 except for the mode
000015B0                           632          
000015B0  4243                     633              CLR         D3
000015B2  1601                     634              MOVE.B      D1,D3
000015B4  C67C 0007                635              AND         #seven,D3
000015B8                           636              
000015B8  4241                     637              CLR         D1                  ; Clear D1
000015BA  2218                     638              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
000015BC                           639              
000015BC  4EB9 0000170A            640              JSR         printEA
000015C2                           641              
000015C2  43F9 00001D25            642              LEA         comma, A1           ; Display comma
000015C8  103C 000E                643              MOVE.B      #14, D0             ; command for trap call to display message
000015CC  4E4F                     644              TRAP        #15                 ; trap call
000015CE                           645          
000015CE  4242                     646              CLR         D2
000015D0  4243                     647              CLR         D3
000015D2  1404                     648              MOVE.B      D4,D2
000015D4  1605                     649              MOVE.B      D5,D3
000015D6                           650              
000015D6                           651  
000015D6                           652              
000015D6  4EB9 0000170A            653              JSR         printEA
000015DC                           654          
000015DC                           655          
000015DC  43F9 00001D1A            656              LEA         newLine, A1           ; Display space
000015E2  103C 000E                657              MOVE.B      #14, D0             ; command for trap call to display message
000015E6  4E4F                     658              TRAP        #15                 ; trap call            
000015E8                           659  
000015E8                           660  
000015E8  6000 FA22                661              BRA         LOOP                ; go back to the loop
000015EC                           662              
000015EC                           663  opMOVEAL
000015EC  43F9 00001D42            664              LEA         MOVEAmatch,A1
000015F2  103C 000E                665              MOVE.B      #14, D0             ; command for trap call to display message
000015F6  4E4F                     666              TRAP        #15                 ; trap call
000015F8                           667  
000015F8  43F9 00001D1E            668              LEA         space, A1           ; create spaces
000015FE  103C 000E                669              MOVE.B      #14, D0             ; command for trap call to display message
00001602  4E4F                     670              TRAP        #15                 ; trap call
00001604                           671              
00001604  4242                     672              CLR         D2
00001606  1401                     673              MOVE.B      D1,D2               ; Copy new byte over to D2
00001608  E642                     674              ASR         #three,D2           ; Shift source register out
0000160A  C47C 0007                675              AND         #seven,D2           ; Set everything to 0 except for the mode
0000160E                           676          
0000160E  4243                     677              CLR         D3
00001610  1601                     678              MOVE.B      D1,D3
00001612  C67C 0007                679              AND         #seven,D3
00001616                           680              
00001616  4241                     681              CLR         D1                  ; Clear D1
00001618  2218                     682              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
0000161A                           683              
0000161A                           684              
0000161A  4EB9 0000170A            685              JSR         printEA
00001620                           686              
00001620  43F9 00001D25            687              LEA         comma, A1           ; Display comma
00001626  103C 000E                688              MOVE.B      #14, D0             ; command for trap call to display message
0000162A  4E4F                     689              TRAP        #15                 ; trap call
0000162C                           690  
0000162C  4242                     691              CLR         D2
0000162E  4243                     692              CLR         D3
00001630  1404                     693              MOVE.B      D4,D2
00001632  1605                     694              MOVE.B      D5,D3
00001634                           695          
00001634  4EB9 0000170A            696              JSR         printEA
0000163A                           697          
0000163A                           698          
0000163A  43F9 00001D1A            699              LEA         newLine, A1           ; Display space
00001640  103C 000E                700              MOVE.B      #14, D0             ; command for trap call to display message
00001644  4E4F                     701              TRAP        #15                 ; trap call            
00001646                           702  
00001646                           703  
00001646  6000 F9C4                704              BRA         LOOP                ; go back to the loop  
0000164A                           705  
0000164A  43F9 00001D48            706  opNEG   LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001650  103C 000E                707          MOVE.B      #14, D0             ; command for trap call to display message
00001654  4E4F                     708          TRAP        #15                 ; trap call
00001656                           709  
00001656                           710  opRTSJSR
00001656                           711  
00001656                           712  opMOVEMLEA
00001656                           713  
00001656  43F9 00001D5E            714  opSUBQ      LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
0000165C  103C 000E                715              MOVE.B      #14, D0             ; command for trap call to display message
00001660  4E4F                     716              TRAP        #15                 ; trap call
00001662                           717  
00001662  43F9 00001D63            718  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001668  103C 000E                719          MOVE.B      #14, D0             ; command for trap call to display message
0000166C  4E4F                     720          TRAP        #15                 ; trap call
0000166E  43F9 00001D1E            721          LEA         space, A1           ; create spaces
00001674  103C 000E                722          MOVE.B      #14, D0             ; command for trap call to display message
00001678  4E4F                     723          TRAP        #15                 ; trap call
0000167A                           724  
0000167A  43F9 00001D67            725  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001680  103C 000E                726          MOVE.B      #14, D0             ; command for trap call to display message
00001684  4E4F                     727          TRAP        #15                 ; trap call
00001686                           728  
00001686  43F9 00001D6B            729  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
0000168C  103C 000E                730          MOVE.B      #14, D0             ; command for trap call to display message
00001690  4E4F                     731          TRAP        #15                 ; trap call
00001692                           732  
00001692  43F9 00001D6F            733  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001698  103C 000E                734          MOVE.B      #14, D0             ; command for trap call to display message
0000169C  4E4F                     735          TRAP        #15                 ; trap call
0000169E                           736  
0000169E  43F9 00001D73            737  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
000016A4  103C 000E                738          MOVE.B      #14, D0             ; command for trap call to display message
000016A8  4E4F                     739          TRAP        #15                 ; trap call
000016AA                           740  
000016AA  43F9 00001D7F            741  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
000016B0  103C 000E                742          MOVE.B      #14, D0             ; command for trap call to display message
000016B4  4E4F                     743          TRAP        #15                 ; trap call
000016B6                           744  
000016B6  43F9 00001D8B            745  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
000016BC  103C 000E                746          MOVE.B      #14, D0             ; command for trap call to display message
000016C0  4E4F                     747          TRAP        #15                 ; trap call
000016C2                           748  
000016C2  43F9 00001DA5            749  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000016C8  103C 000E                750          MOVE.B      #14, D0             ; command for trap call to display message
000016CC  4E4F                     751          TRAP        #15                 ; trap call
000016CE                           752  
000016CE  43F9 00001DA1            753  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000016D4  103C 000E                754          MOVE.B      #14, D0             ; command for trap call to display message
000016D8  4E4F                     755          TRAP        #15                 ; trap call
000016DA                           756  
000016DA  43F9 00001D9D            757  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
000016E0  103C 000E                758          MOVE.B      #14, D0             ; command for trap call to display message
000016E4  4E4F                     759          TRAP        #15                 ; trap call
000016E6                           760  
000016E6  43F9 00001D99            761  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
000016EC  103C 000E                762          MOVE.B      #14, D0             ; command for trap call to display message
000016F0  4E4F                     763          TRAP        #15                 ; trap call
000016F2                           764  
000016F2  43F9 00001DAD            765  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
000016F8  103C 000E                766          MOVE.B      #14, D0             ; command for trap call to display message
000016FC  4E4F                     767          TRAP        #15                 ; trap call
000016FE                           768  
000016FE  43F9 00001DA9            769  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001704  103C 000E                770          MOVE.B      #14, D0             ; command for trap call to display message
00001708  4E4F                     771          TRAP        #15                 ; trap call
0000170A                           772  
0000170A                           773  
0000170A                           774  ***********************************************************************************************************
0000170A                           775  *
0000170A                           776  *                                           EA Print Check
0000170A                           777  *
0000170A                           778  ***********************************************************************************************************
0000170A  48E7 FFFE                779  printEA     MOVEM.L  D0-D7/A0-A6, -(SP)
0000170E                           780  
0000170E  B43C 0000                781              CMP.B       #zero, D2
00001712  6700 002E                782              BEQ         pDataReg
00001716  B43C 0001                783              CMP.B       #one, D2
0000171A  6700 00E6                784              BEQ         pAddrReg
0000171E  B43C 0002                785              CMP.B       #two, D2
00001722  6700 019E                786              BEQ         pAddrDir
00001726  B43C 0003                787              CMP.B       #three, D2
0000172A  6700 02C2                788              BEQ         pAddrPost
0000172E  B43C 0004                789              CMP.B       #four, D2
00001732  6700 0446                790              BEQ         pAddrDec
00001736  B43C 0007                791              CMP.B       #seven,D2
0000173A  6700 0576                792              BEQ         absAddr
0000173E  6000 05D0                793              BRA         invalid
00001742                           794  
00001742                           795  ***********************************************************************************************************
00001742                           796  * Data Register        
00001742  B63C 0000                797  pDataReg    CMP.B   #zero,D3
00001746  6700 003A                798              BEQ     displayD0
0000174A  B63C 0001                799              CMP.B   #one,D3
0000174E  6700 0042                800              BEQ     displayD1
00001752  B63C 0002                801              CMP.B   #two,D3
00001756  6700 004A                802              BEQ     displayD2
0000175A  B63C 0003                803              CMP.B   #three,D3
0000175E  6700 0052                804              BEQ     displayD3
00001762  B63C 0004                805              CMP.B   #four,D3
00001766  6700 005A                806              BEQ     displayD4
0000176A  B63C 0005                807              CMP.B   #five,D3
0000176E  6700 0062                808              BEQ     displayD5
00001772  B63C 0006                809              CMP.B   #six,D3
00001776  6700 006A                810              BEQ     displayD6
0000177A  B63C 0007                811              CMP.B   #seven,D3
0000177E  6700 0072                812              BEQ     displayD7
00001782                           813              
00001782  43F9 00001DD4            814  displayD0   LEA         dispD0, A1          ; Display space
00001788  103C 000E                815              MOVE.B      #14, D0             ; command for trap call to display message
0000178C  4E4F                     816              TRAP        #15                 ; trap call
0000178E  6000 0580                817              BRA         endSUB              ; go to the end of the subroutine
00001792                           818              
00001792  43F9 00001DD7            819  displayD1   LEA         dispD1, A1          ; Display space
00001798  103C 000E                820              MOVE.B      #14, D0             ; command for trap call to display message
0000179C  4E4F                     821              TRAP        #15                 ; trap call
0000179E  6000 0570                822              BRA         endSUB              ; go to the end of the subroutine
000017A2                           823  
000017A2  43F9 00001DDA            824  displayD2   LEA         dispD2, A1          ; Display space
000017A8  103C 000E                825              MOVE.B      #14, D0             ; command for trap call to display message
000017AC  4E4F                     826              TRAP        #15                 ; trap call
000017AE  6000 0560                827              BRA         endSUB              ; go to the end of the subroutine
000017B2                           828  
000017B2  43F9 00001DDD            829  displayD3   LEA         dispD3, A1          ; Display space
000017B8  103C 000E                830              MOVE.B      #14, D0             ; command for trap call to display message
000017BC  4E4F                     831              TRAP        #15                 ; trap call
000017BE  6000 0550                832              BRA         endSUB              ; go to the end of the subroutine
000017C2                           833  
000017C2  43F9 00001DE0            834  displayD4   LEA         dispD4, A1          ; Display space
000017C8  103C 000E                835              MOVE.B      #14, D0             ; command for trap call to display message
000017CC  4E4F                     836              TRAP        #15                 ; trap call
000017CE  6000 0540                837              BRA         endSUB              ; go to the end of the subroutine
000017D2                           838  
000017D2  43F9 00001DE3            839  displayD5   LEA         dispD5, A1          ; Display space
000017D8  103C 000E                840              MOVE.B      #14, D0             ; command for trap call to display message
000017DC  4E4F                     841              TRAP        #15                 ; trap call
000017DE  6000 0530                842              BRA         endSUB              ; go to the end of the subroutine
000017E2                           843  
000017E2  43F9 00001DE6            844  displayD6   LEA         dispD6, A1          ; Display space
000017E8  103C 000E                845              MOVE.B      #14, D0             ; command for trap call to display message
000017EC  4E4F                     846              TRAP        #15                 ; trap call
000017EE  6000 0520                847              BRA         endSUB              ; go to the end of the subroutine
000017F2                           848  
000017F2  43F9 00001DE9            849  displayD7   LEA         dispD7, A1          ; Display space
000017F8  103C 000E                850              MOVE.B      #14, D0             ; command for trap call to display message
000017FC  4E4F                     851              TRAP        #15                 ; trap call
000017FE  6000 0510                852              BRA         endSUB              ; go to the end of the subroutine
00001802                           853  ***********************************************************************************************************
00001802                           854  * Address Register
00001802  B63C 0000                855  pAddrReg    CMP.B   #zero,D3
00001806  6700 003A                856              BEQ     displayA0
0000180A  B63C 0001                857              CMP.B   #one,D3
0000180E  6700 0042                858              BEQ     displayA1
00001812  B63C 0002                859              CMP.B   #two,D3
00001816  6700 004A                860              BEQ     displayA2
0000181A  B63C 0003                861              CMP.B   #three,D3
0000181E  6700 0052                862              BEQ     displayA3
00001822  B63C 0004                863              CMP.B   #four,D3
00001826  6700 005A                864              BEQ     displayA4
0000182A  B63C 0005                865              CMP.B   #five,D3
0000182E  6700 0062                866              BEQ     displayA5
00001832  B63C 0006                867              CMP.B   #six,D3
00001836  6700 006A                868              BEQ     displayA6
0000183A  B63C 0007                869              CMP.B   #seven,D3
0000183E  6700 0072                870              BEQ     displayA7
00001842                           871              
00001842  43F9 00001DBA            872  displayA0   LEA         dispA0, A1          ; Display space
00001848  103C 000E                873              MOVE.B      #14, D0             ; command for trap call to display message
0000184C  4E4F                     874              TRAP        #15                 ; trap call
0000184E  6000 04C0                875              BRA         endSUB              ; go to the end of the subroutine
00001852                           876              
00001852  43F9 00001DBD            877  displayA1   LEA         dispA1, A1          ; Display space
00001858  103C 000E                878              MOVE.B      #14, D0             ; command for trap call to display message
0000185C  4E4F                     879              TRAP        #15                 ; trap call
0000185E  6000 04B0                880              BRA         endSUB              ; go to the end of the subroutine
00001862                           881  
00001862  43F9 00001DC0            882  displayA2   LEA         dispA2, A1          ; Display space
00001868  103C 000E                883              MOVE.B      #14, D0             ; command for trap call to display message
0000186C  4E4F                     884              TRAP        #15                 ; trap call
0000186E  6000 04A0                885              BRA         endSUB              ; go to the end of the subroutine
00001872                           886  
00001872  43F9 00001DC3            887  displayA3   LEA         dispA3, A1          ; Display space
00001878  103C 000E                888              MOVE.B      #14, D0             ; command for trap call to display message
0000187C  4E4F                     889              TRAP        #15                 ; trap call
0000187E  6000 0490                890              BRA         endSUB              ; go to the end of the subroutine
00001882                           891  
00001882  43F9 00001DC6            892  displayA4   LEA         dispA4, A1          ; Display space
00001888  103C 000E                893              MOVE.B      #14, D0             ; command for trap call to display message
0000188C  4E4F                     894              TRAP        #15                 ; trap call
0000188E  6000 0480                895              BRA         endSUB              ; go to the end of the subroutine
00001892                           896  
00001892  43F9 00001DC9            897  displayA5   LEA         dispA5, A1          ; Display space
00001898  103C 000E                898              MOVE.B      #14, D0             ; command for trap call to display message
0000189C  4E4F                     899              TRAP        #15                 ; trap call
0000189E  6000 0470                900              BRA         endSUB              ; go to the end of the subroutine
000018A2                           901  
000018A2  43F9 00001DCC            902  displayA6   LEA         dispA6, A1          ; Display space
000018A8  103C 000E                903              MOVE.B      #14, D0             ; command for trap call to display message
000018AC  4E4F                     904              TRAP        #15                 ; trap call
000018AE  6000 0460                905              BRA         endSUB              ; go to the end of the subroutine
000018B2                           906  
000018B2  43F9 00001DCF            907  displayA7   LEA         dispA7, A1          ; Display space
000018B8  103C 000E                908              MOVE.B      #14, D0             ; command for trap call to display message
000018BC  4E4F                     909              TRAP        #15                 ; trap call
000018BE  6000 0450                910              BRA         endSUB              ; go to the end of the subroutine
000018C2                           911  
000018C2                           912  ***********************************************************************************************************
000018C2                           913  * Address Register Direct
000018C2                           914  
000018C2  43F9 00001D27            915  pAddrDir    LEA         opPer, A1           ; Display space
000018C8  103C 000E                916              MOVE.B      #14, D0             ; command for trap call to display message
000018CC  4E4F                     917              TRAP        #15                 ; trap call
000018CE                           918              
000018CE  B63C 0000                919              CMP.B   #zero,D3
000018D2  6700 003A                920              BEQ     displayA0A
000018D6  B63C 0001                921              CMP.B   #one,D3
000018DA  6700 004E                922              BEQ     displayA1A
000018DE  B63C 0002                923              CMP.B   #two,D3
000018E2  6700 0062                924              BEQ     displayA2A
000018E6  B63C 0003                925              CMP.B   #three,D3
000018EA  6700 0076                926              BEQ     displayA3A
000018EE  B63C 0004                927              CMP.B   #four,D3
000018F2  6700 008A                928              BEQ     displayA4A
000018F6  B63C 0005                929              CMP.B   #five,D3
000018FA  6700 009E                930              BEQ     displayA5A
000018FE  B63C 0006                931              CMP.B   #six,D3
00001902  6700 00B2                932              BEQ     displayA6A
00001906  B63C 0007                933              CMP.B   #seven,D3
0000190A  6700 00C6                934              BEQ     displayA7A
0000190E                           935              
0000190E  43F9 00001DBA            936  displayA0A  LEA         dispA0, A1          ; Display space
00001914  103C 000E                937              MOVE.B      #14, D0             ; command for trap call to display message
00001918  4E4F                     938              TRAP        #15                 ; trap call
0000191A  43F9 00001D29            939              LEA         clPer, A1           ; Display space
00001920  103C 000E                940              MOVE.B      #14, D0             ; command for trap call to display message
00001924  4E4F                     941              TRAP        #15                 ; trap call
00001926  6000 03E8                942              BRA         endSUB              ; go to the end of the subroutine
0000192A                           943              
0000192A  43F9 00001DBD            944  displayA1A  LEA         dispA1, A1          ; Display space
00001930  103C 000E                945              MOVE.B      #14, D0             ; command for trap call to display message
00001934  4E4F                     946              TRAP        #15                 ; trap call
00001936  43F9 00001D29            947              LEA         clPer, A1           ; Display space
0000193C  103C 000E                948              MOVE.B      #14, D0             ; command for trap call to display message
00001940  4E4F                     949              TRAP        #15                 ; trap call
00001942  6000 03CC                950              BRA         endSUB              ; go to the end of the subroutine
00001946                           951  
00001946  43F9 00001DC0            952  displayA2A  LEA         dispA2, A1          ; Display space
0000194C  103C 000E                953              MOVE.B      #14, D0             ; command for trap call to display message
00001950  4E4F                     954              TRAP        #15                 ; trap call
00001952  43F9 00001D29            955              LEA         clPer, A1           ; Display space
00001958  103C 000E                956              MOVE.B      #14, D0             ; command for trap call to display message
0000195C  4E4F                     957              TRAP        #15                 ; trap call
0000195E  6000 03B0                958              BRA         endSUB              ; go to the end of the subroutine
00001962                           959  
00001962  43F9 00001DC3            960  displayA3A  LEA         dispA3, A1          ; Display space
00001968  103C 000E                961              MOVE.B      #14, D0             ; command for trap call to display message
0000196C  4E4F                     962              TRAP        #15                 ; trap call
0000196E  43F9 00001D29            963              LEA         clPer, A1           ; Display space
00001974  103C 000E                964              MOVE.B      #14, D0             ; command for trap call to display message
00001978  4E4F                     965              TRAP        #15                 ; trap call
0000197A  6000 0394                966              BRA         endSUB              ; go to the end of the subroutine
0000197E                           967  
0000197E  43F9 00001DC6            968  displayA4A  LEA         dispA4, A1          ; Display space
00001984  103C 000E                969              MOVE.B      #14, D0             ; command for trap call to display message
00001988  4E4F                     970              TRAP        #15                 ; trap call
0000198A  43F9 00001D29            971              LEA         clPer, A1           ; Display space
00001990  103C 000E                972              MOVE.B      #14, D0             ; command for trap call to display message
00001994  4E4F                     973              TRAP        #15                 ; trap call
00001996  6000 0378                974              BRA         endSUB              ; go to the end of the subroutine
0000199A                           975  
0000199A  43F9 00001DC9            976  displayA5A  LEA         dispA5, A1          ; Display space
000019A0  103C 000E                977              MOVE.B      #14, D0             ; command for trap call to display message
000019A4  4E4F                     978              TRAP        #15                 ; trap call
000019A6  43F9 00001D29            979              LEA         clPer, A1           ; Display space
000019AC  103C 000E                980              MOVE.B      #14, D0             ; command for trap call to display message
000019B0  4E4F                     981              TRAP        #15                 ; trap call
000019B2  6000 035C                982              BRA         endSUB              ; go to the end of the subroutine
000019B6                           983  
000019B6  43F9 00001DCC            984  displayA6A  LEA         dispA6, A1          ; Display space
000019BC  103C 000E                985              MOVE.B      #14, D0             ; command for trap call to display message
000019C0  4E4F                     986              TRAP        #15                 ; trap call
000019C2  43F9 00001D29            987              LEA         clPer, A1           ; Display space
000019C8  103C 000E                988              MOVE.B      #14, D0             ; command for trap call to display message
000019CC  4E4F                     989              TRAP        #15                 ; trap call
000019CE  6000 0340                990              BRA         endSUB              ; go to the end of the subroutine
000019D2                           991  
000019D2  43F9 00001DCF            992  displayA7A  LEA         dispA7, A1          ; Display space
000019D8  103C 000E                993              MOVE.B      #14, D0             ; command for trap call to display message
000019DC  4E4F                     994              TRAP        #15                 ; trap call
000019DE  43F9 00001D29            995              LEA         clPer, A1           ; Display space
000019E4  103C 000E                996              MOVE.B      #14, D0             ; command for trap call to display message
000019E8  4E4F                     997              TRAP        #15                 ; trap call
000019EA  6000 0324                998              BRA         endSUB              ; go to the end of the subroutine
000019EE                           999              
000019EE                          1000  ***********************************************************************************************************
000019EE                          1001  * Addr Postincrement
000019EE                          1002              
000019EE  43F9 00001D27           1003  pAddrPost   LEA         opPer, A1           ; Display space
000019F4  103C 000E               1004              MOVE.B      #14, D0             ; command for trap call to display message
000019F8  4E4F                    1005              TRAP        #15                 ; trap call
000019FA                          1006              
000019FA  B63C 0000               1007              CMP.B   #zero,D3
000019FE  6700 003A               1008              BEQ     displayA0P
00001A02  B63C 0001               1009              CMP.B   #one,D3
00001A06  6700 005A               1010              BEQ     displayA1P
00001A0A  B63C 0002               1011              CMP.B   #two,D3
00001A0E  6700 007A               1012              BEQ     displayA2P
00001A12  B63C 0003               1013              CMP.B   #three,D3
00001A16  6700 009A               1014              BEQ     displayA3P
00001A1A  B63C 0004               1015              CMP.B   #four,D3
00001A1E  6700 00BA               1016              BEQ     displayA4P
00001A22  B63C 0005               1017              CMP.B   #five,D3
00001A26  6700 00DA               1018              BEQ     displayA5P
00001A2A  B63C 0006               1019              CMP.B   #six,D3
00001A2E  6700 00FA               1020              BEQ     displayA6P
00001A32  B63C 0007               1021              CMP.B   #seven,D3
00001A36  6700 011A               1022              BEQ     displayA7P
00001A3A                          1023              
00001A3A  43F9 00001DBA           1024  displayA0P  LEA         dispA0, A1          ; Display space
00001A40  103C 000E               1025              MOVE.B      #14, D0             ; command for trap call to display message
00001A44  4E4F                    1026              TRAP        #15                 ; trap call
00001A46  43F9 00001D29           1027              LEA         clPer, A1           ; Display space
00001A4C  103C 000E               1028              MOVE.B      #14, D0             ; command for trap call to display message
00001A50  4E4F                    1029              TRAP        #15                 ; trap call
00001A52  43F9 00001D2D           1030              LEA         inc, A1             ; Display space
00001A58  103C 000E               1031              MOVE.B      #14, D0             ; command for trap call to display message
00001A5C  4E4F                    1032              TRAP        #15                 ; trap call
00001A5E  6000 02B0               1033              BRA         endSUB              ; go to the end of the subroutine
00001A62                          1034              
00001A62  43F9 00001DBD           1035  displayA1P  LEA         dispA1, A1          ; Display space
00001A68  103C 000E               1036              MOVE.B      #14, D0             ; command for trap call to display message
00001A6C  4E4F                    1037              TRAP        #15                 ; trap call
00001A6E  43F9 00001D29           1038              LEA         clPer, A1           ; Display space
00001A74  103C 000E               1039              MOVE.B      #14, D0             ; command for trap call to display message
00001A78  4E4F                    1040              TRAP        #15                 ; trap call
00001A7A  43F9 00001D2D           1041              LEA         inc, A1             ; Display space
00001A80  103C 000E               1042              MOVE.B      #14, D0             ; command for trap call to display message
00001A84  4E4F                    1043              TRAP        #15                 ; trap call
00001A86  6000 0288               1044              BRA         endSUB              ; go to the end of the subroutine
00001A8A                          1045  
00001A8A  43F9 00001DC0           1046  displayA2P  LEA         dispA2, A1          ; Display space
00001A90  103C 000E               1047              MOVE.B      #14, D0             ; command for trap call to display message
00001A94  4E4F                    1048              TRAP        #15                 ; trap call
00001A96  43F9 00001D29           1049              LEA         clPer, A1           ; Display space
00001A9C  103C 000E               1050              MOVE.B      #14, D0             ; command for trap call to display message
00001AA0  4E4F                    1051              TRAP        #15                 ; trap call
00001AA2  43F9 00001D2D           1052              LEA         inc, A1             ; Display space
00001AA8  103C 000E               1053              MOVE.B      #14, D0             ; command for trap call to display message
00001AAC  4E4F                    1054              TRAP        #15                 ; trap call
00001AAE  6000 0260               1055              BRA         endSUB              ; go to the end of the subroutine
00001AB2                          1056  
00001AB2  43F9 00001DC3           1057  displayA3P  LEA         dispA3, A1          ; Display space
00001AB8  103C 000E               1058              MOVE.B      #14, D0             ; command for trap call to display message
00001ABC  4E4F                    1059              TRAP        #15                 ; trap call
00001ABE  43F9 00001D29           1060              LEA         clPer, A1           ; Display space
00001AC4  103C 000E               1061              MOVE.B      #14, D0             ; command for trap call to display message
00001AC8  4E4F                    1062              TRAP        #15                 ; trap call
00001ACA  43F9 00001D2D           1063              LEA         inc, A1             ; Display space
00001AD0  103C 000E               1064              MOVE.B      #14, D0             ; command for trap call to display message
00001AD4  4E4F                    1065              TRAP        #15                 ; trap call
00001AD6  6000 0238               1066              BRA         endSUB              ; go to the end of the subroutine
00001ADA                          1067  
00001ADA  43F9 00001DC6           1068  displayA4P  LEA         dispA4, A1          ; Display space
00001AE0  103C 000E               1069              MOVE.B      #14, D0             ; command for trap call to display message
00001AE4  4E4F                    1070              TRAP        #15                 ; trap call
00001AE6  43F9 00001D29           1071              LEA         clPer, A1           ; Display space
00001AEC  103C 000E               1072              MOVE.B      #14, D0             ; command for trap call to display message
00001AF0  4E4F                    1073              TRAP        #15                 ; trap call
00001AF2  43F9 00001D2D           1074              LEA         inc, A1             ; Display space
00001AF8  103C 000E               1075              MOVE.B      #14, D0             ; command for trap call to display message
00001AFC  4E4F                    1076              TRAP        #15                 ; trap call
00001AFE  6000 0210               1077              BRA         endSUB              ; go to the end of the subroutine
00001B02                          1078  
00001B02  43F9 00001DC9           1079  displayA5P  LEA         dispA5, A1          ; Display space
00001B08  103C 000E               1080              MOVE.B      #14, D0             ; command for trap call to display message
00001B0C  4E4F                    1081              TRAP        #15                 ; trap call
00001B0E  43F9 00001D29           1082              LEA         clPer, A1           ; Display space
00001B14  103C 000E               1083              MOVE.B      #14, D0             ; command for trap call to display message
00001B18  4E4F                    1084              TRAP        #15                 ; trap call
00001B1A  43F9 00001D2D           1085              LEA         inc, A1             ; Display space
00001B20  103C 000E               1086              MOVE.B      #14, D0             ; command for trap call to display message
00001B24  4E4F                    1087              TRAP        #15                 ; trap call
00001B26  6000 01E8               1088              BRA         endSUB              ; go to the end of the subroutine
00001B2A                          1089  
00001B2A  43F9 00001DCC           1090  displayA6P  LEA         dispA6, A1          ; Display space
00001B30  103C 000E               1091              MOVE.B      #14, D0             ; command for trap call to display message
00001B34  4E4F                    1092              TRAP        #15                 ; trap call
00001B36  43F9 00001D29           1093              LEA         clPer, A1           ; Display space
00001B3C  103C 000E               1094              MOVE.B      #14, D0             ; command for trap call to display message
00001B40  4E4F                    1095              TRAP        #15                 ; trap call
00001B42  43F9 00001D2D           1096              LEA         inc, A1             ; Display space
00001B48  103C 000E               1097              MOVE.B      #14, D0             ; command for trap call to display message
00001B4C  4E4F                    1098              TRAP        #15                 ; trap call
00001B4E  6000 01C0               1099              BRA         endSUB              ; go to the end of the subroutine
00001B52                          1100  
00001B52  43F9 00001DCF           1101  displayA7P  LEA         dispA7, A1          ; Display space
00001B58  103C 000E               1102              MOVE.B      #14, D0             ; command for trap call to display message
00001B5C  4E4F                    1103              TRAP        #15                 ; trap call
00001B5E  43F9 00001D29           1104              LEA         clPer, A1           ; Display space
00001B64  103C 000E               1105              MOVE.B      #14, D0             ; command for trap call to display message
00001B68  4E4F                    1106              TRAP        #15                 ; trap call
00001B6A  43F9 00001D2D           1107              LEA         inc, A1             ; Display space
00001B70  103C 000E               1108              MOVE.B      #14, D0             ; command for trap call to display message
00001B74  4E4F                    1109              TRAP        #15                 ; trap call
00001B76  6000 0198               1110              BRA         endSUB              ; go to the end of the subroutine
00001B7A                          1111  
00001B7A                          1112  ***********************************************************************************************************
00001B7A                          1113  * Addr Postdecrement
00001B7A                          1114  
00001B7A  43F9 00001D2B           1115  pAddrDec    LEA         dec, A1             ; Display space
00001B80  103C 000E               1116              MOVE.B      #14, D0             ; command for trap call to display message
00001B84  4E4F                    1117              TRAP        #15                 ; trap call
00001B86                          1118              
00001B86  43F9 00001D27           1119              LEA         opPer, A1           ; Display space
00001B8C  103C 000E               1120              MOVE.B      #14, D0             ; command for trap call to display message
00001B90  4E4F                    1121              TRAP        #15                 ; trap call
00001B92                          1122              
00001B92  B63C 0000               1123              CMP.B   #zero,D3
00001B96  6700 003A               1124              BEQ     displayA0D
00001B9A  B63C 0001               1125              CMP.B   #one,D3
00001B9E  6700 004E               1126              BEQ     displayA1D
00001BA2  B63C 0002               1127              CMP.B   #two,D3
00001BA6  6700 0062               1128              BEQ     displayA2D
00001BAA  B63C 0003               1129              CMP.B   #three,D3
00001BAE  6700 0076               1130              BEQ     displayA3D
00001BB2  B63C 0004               1131              CMP.B   #four,D3
00001BB6  6700 008A               1132              BEQ     displayA4D
00001BBA  B63C 0005               1133              CMP.B   #five,D3
00001BBE  6700 009E               1134              BEQ     displayA5D
00001BC2  B63C 0006               1135              CMP.B   #six,D3
00001BC6  6700 00B2               1136              BEQ     displayA6D
00001BCA  B63C 0007               1137              CMP.B   #seven,D3
00001BCE  6700 00C6               1138              BEQ     displayA7D
00001BD2                          1139              
00001BD2  43F9 00001DBA           1140  displayA0D  LEA         dispA0, A1          ; Display space
00001BD8  103C 000E               1141              MOVE.B      #14, D0             ; command for trap call to display message
00001BDC  4E4F                    1142              TRAP        #15                 ; trap call
00001BDE  43F9 00001D29           1143              LEA         clPer, A1           ; Display space
00001BE4  103C 000E               1144              MOVE.B      #14, D0             ; command for trap call to display message
00001BE8  4E4F                    1145              TRAP        #15                 ; trap call
00001BEA  6000 0124               1146              BRA         endSUB              ; go to the end of the subroutine
00001BEE                          1147              
00001BEE  43F9 00001DBD           1148  displayA1D  LEA         dispA1, A1          ; Display space
00001BF4  103C 000E               1149              MOVE.B      #14, D0             ; command for trap call to display message
00001BF8  4E4F                    1150              TRAP        #15                 ; trap call
00001BFA  43F9 00001D29           1151              LEA         clPer, A1           ; Display space
00001C00  103C 000E               1152              MOVE.B      #14, D0             ; command for trap call to display message
00001C04  4E4F                    1153              TRAP        #15                 ; trap call
00001C06  6000 0108               1154              BRA         endSUB              ; go to the end of the subroutine
00001C0A                          1155  
00001C0A  43F9 00001DC0           1156  displayA2D  LEA         dispA2, A1          ; Display space
00001C10  103C 000E               1157              MOVE.B      #14, D0             ; command for trap call to display message
00001C14  4E4F                    1158              TRAP        #15                 ; trap call
00001C16  43F9 00001D29           1159              LEA         clPer, A1           ; Display space
00001C1C  103C 000E               1160              MOVE.B      #14, D0             ; command for trap call to display message
00001C20  4E4F                    1161              TRAP        #15                 ; trap call
00001C22  6000 00EC               1162              BRA         endSUB              ; go to the end of the subroutine
00001C26                          1163  
00001C26  43F9 00001DC3           1164  displayA3D  LEA         dispA3, A1          ; Display space
00001C2C  103C 000E               1165              MOVE.B      #14, D0             ; command for trap call to display message
00001C30  4E4F                    1166              TRAP        #15                 ; trap call
00001C32  43F9 00001D29           1167              LEA         clPer, A1           ; Display space
00001C38  103C 000E               1168              MOVE.B      #14, D0             ; command for trap call to display message
00001C3C  4E4F                    1169              TRAP        #15                 ; trap call
00001C3E  6000 00D0               1170              BRA         endSUB              ; go to the end of the subroutine
00001C42                          1171  
00001C42  43F9 00001DC6           1172  displayA4D  LEA         dispA4, A1          ; Display space
00001C48  103C 000E               1173              MOVE.B      #14, D0             ; command for trap call to display message
00001C4C  4E4F                    1174              TRAP        #15                 ; trap call
00001C4E  43F9 00001D29           1175              LEA         clPer, A1           ; Display space
00001C54  103C 000E               1176              MOVE.B      #14, D0             ; command for trap call to display message
00001C58  4E4F                    1177              TRAP        #15                 ; trap call
00001C5A  6000 00B4               1178              BRA         endSUB              ; go to the end of the subroutine
00001C5E                          1179  
00001C5E  43F9 00001DC9           1180  displayA5D  LEA         dispA5, A1          ; Display space
00001C64  103C 000E               1181              MOVE.B      #14, D0             ; command for trap call to display message
00001C68  4E4F                    1182              TRAP        #15                 ; trap call
00001C6A  43F9 00001D29           1183              LEA         clPer, A1           ; Display space
00001C70  103C 000E               1184              MOVE.B      #14, D0             ; command for trap call to display message
00001C74  4E4F                    1185              TRAP        #15                 ; trap call
00001C76  6000 0098               1186              BRA         endSUB              ; go to the end of the subroutine
00001C7A                          1187  
00001C7A  43F9 00001DCC           1188  displayA6D  LEA         dispA6, A1          ; Display space
00001C80  103C 000E               1189              MOVE.B      #14, D0             ; command for trap call to display message
00001C84  4E4F                    1190              TRAP        #15                 ; trap call
00001C86  43F9 00001D29           1191              LEA         clPer, A1           ; Display space
00001C8C  103C 000E               1192              MOVE.B      #14, D0             ; command for trap call to display message
00001C90  4E4F                    1193              TRAP        #15                 ; trap call
00001C92  6000 007C               1194              BRA         endSUB              ; go to the end of the subroutine
00001C96                          1195  
00001C96  43F9 00001DCF           1196  displayA7D  LEA         dispA7, A1          ; Display space
00001C9C  103C 000E               1197              MOVE.B      #14, D0             ; command for trap call to display message
00001CA0  4E4F                    1198              TRAP        #15                 ; trap call
00001CA2  43F9 00001D29           1199              LEA         clPer, A1           ; Display space
00001CA8  103C 000E               1200              MOVE.B      #14, D0             ; command for trap call to display message
00001CAC  4E4F                    1201              TRAP        #15                 ; trap call
00001CAE  6000 0060               1202              BRA         endSUB              ; go to the end of the subroutine
00001CB2                          1203  
00001CB2                          1204  
00001CB2                          1205  ***********************************************************************************************************
00001CB2                          1206  * Absolute Address
00001CB2                          1207  absAddr
00001CB2  B67C 0000               1208              CMP         #zero,D3            ; This is (xxx).W
00001CB6  6700 0016               1209              BEQ         absAddrW
00001CBA  B67C 0001               1210              CMP         #one,D3             ; This is (xxx).L
00001CBE  6700 0024               1211              BEQ         absAddrL
00001CC2  B67C 0004               1212              CMP         #four,D3
00001CC6  6700 0032               1213              BEQ         immData
00001CCA  6000 0044               1214              BRA         invalid             ; Invalid, not equal to any of the opCodes handled
00001CCE                          1215              
00001CCE                          1216  absAddrW                                    ; Does not work at the moment
00001CCE                          1217  
00001CCE  43F9 00001D21           1218              LEA         hashTag, A1           ; Display space
00001CD4  103C 000E               1219              MOVE.B      #14, D0             ; command for trap call to display message
00001CD8  4E4F                    1220              TRAP        #15                 ; trap call
00001CDA                          1221              
00001CDA  103C 0002               1222              MOVE.B      #2, D0              ; Load #2 into D0
00001CDE  4E4F                    1223              TRAP        #15                 ; Display word in D1
00001CE0                          1224          
00001CE0                          1225  
00001CE0  6000 002E               1226              BRA         endSUB              ; End subroutine
00001CE4                          1227  absAddrL                                    ; Does not work at the moment
00001CE4                          1228  
00001CE4  43F9 00001D21           1229              LEA         hashTag, A1           ; Display space
00001CEA  103C 000E               1230              MOVE.B      #14, D0             ; command for trap call to display message
00001CEE  4E4F                    1231              TRAP        #15                 ; trap call
00001CF0                          1232              
00001CF0  103C 0003               1233              MOVE.B      #3, D0              
00001CF4  4E4F                    1234              TRAP        #15
00001CF6                          1235          
00001CF6                          1236  
00001CF6  6000 0018               1237              BRA         endSUB              ; End subroutine
00001CFA                          1238              
00001CFA                          1239  immData     
00001CFA                          1240  
00001CFA                          1241          
00001CFA  43F9 00001D21           1242              LEA         hashTag, A1           ; Display space
00001D00  103C 000E               1243              MOVE.B      #14, D0             ; command for trap call to display message
00001D04  4E4F                    1244              TRAP        #15                 ; trap call
00001D06                          1245              
00001D06  103C 0003               1246              MOVE.B      #3, D0              
00001D0A  4E4F                    1247              TRAP        #15
00001D0C                          1248          
00001D0C                          1249  
00001D0C  6000 0002               1250              BRA         endSUB              ; End subroutine
00001D10                          1251  
00001D10                          1252  invalid
00001D10                          1253  
00001D10                          1254  endSUB
00001D10                          1255          
00001D10  4CDF 7FFF               1256          MOVEM.L  (SP)+, D0-D7/A0-A6
00001D14  4E75                    1257          RTS
00001D16                          1258  
00001D16                          1259  ***********************************************************************************************************
00001D16                          1260  ***********************************************************************************************************
00001D16                          1261  ***********************************************************************************************************
00001D16                          1262  
00001D16                          1263  printInvalid
00001D16                          1264  endPROG    
00001D16                          1265  
00001D16  FFFF FFFF               1266      SIMHALT                             ; halt simulator
00001D1A                          1267  
00001D1A= 20 0D 0A 00             1268  newLine     DC.B    ' ', CR, LF, 0
00001D1E= 20 20 00                1269  space       DC.B    '  ', 0
00001D21                          1270  
00001D21= 23 00                   1271  hashTag     DC.B    '#', 0
00001D23= 24 00                   1272  dispHex     DC.B    '$', 0
00001D25= 2C 00                   1273  comma       DC.B    ',', 0
00001D27                          1274  
00001D27= 28 00                   1275  opPer       DC.B    '(', 0
00001D29= 29 00                   1276  clPer       DC.B    ')', 0
00001D2B= 2D 00                   1277  dec         DC.B    '-', 0
00001D2D= 2B 00                   1278  inc         DC.B    '+', 0
00001D2F                          1279  
00001D2F= 4F 52 49 00             1280  ORImatch    DC.B    'ORI', 0
00001D33= 43 4D 50 49 00          1281  CMPImatch   DC.B    'CMPI', 0
00001D38= 42 43 4C 52 00          1282  BCLRmatch   DC.B    'BCLR', 0
00001D3D= 4D 4F 56 45 00          1283  MOVEmatch   DC.B    'MOVE', 0
00001D42= 4D 4F 56 45 41 00       1284  MOVEAmatch  DC.B    'MOVEA', 0
00001D48= 4E 45 47 00             1285  NEGmatch    DC.B    'NEG', 0
00001D4C= 52 54 53 00             1286  RTSmatch    DC.B    'RTS', 0
00001D50= 4A 53 52 00             1287  JSRmatch    DC.B    'JSR', 0
00001D54= 4D 4F 56 45 4D 00       1288  MOVEMmatch  DC.B    'MOVEM', 0
00001D5A= 4C 45 41 00             1289  LEAmatch    DC.B    'LEA', 0
00001D5E= 53 55 42 51 00          1290  SUBQmatch   DC.B    'SUBQ', 0
00001D63= 42 52 41 00             1291  BRAmatch    DC.B    'BRA', 0
00001D67= 42 43 53 00             1292  BCSmatch    DC.B    'BCS', 0
00001D6B= 42 56 43 00             1293  BVCmatch    DC.B    'BVC', 0
00001D6F= 42 47 45 00             1294  BGEmatch    DC.B    'BGE', 0
00001D73= 42 4C 54 00             1295  BLTmatch    DC.B    'BLT', 0
00001D77= 44 49 56 53 00          1296  DIVSmatch   DC.B    'DIVS', 0
00001D7C= 4F 52 00                1297  ORmatch     DC.B    'OR', 0
00001D7F= 53 55 42 00             1298  SUBmatch    DC.B    'SUB', 0
00001D83= 45 4F 52 00             1299  EORmatch    DC.B    'EOR', 0
00001D87= 43 4D 50 00             1300  CMPmatch    DC.B    'CMP', 0
00001D8B= 4D 55 4C 53 00          1301  MULSmatch   DC.B    'MULS', 0
00001D90= 41 44 44 00             1302  ADDmatch    DC.B    'ADD', 0
00001D94= 41 44 44 41 00          1303  ADDAmatch   DC.B    'ADDA', 0
00001D99= 4C 53 52 00             1304  LSRmatch    DC.B    'LSR', 0
00001D9D= 4C 53 4C 00             1305  LSLmatch    DC.B    'LSL', 0
00001DA1= 41 53 52 00             1306  ASRmatch    DC.B    'ASR', 0
00001DA5= 41 53 4C 00             1307  ASLmatch    DC.B    'ASL', 0
00001DA9= 52 4F 52 00             1308  RORmatch    DC.B    'ROR', 0
00001DAD= 52 4F 4C 00             1309  ROLmatch    DC.B    'ROL', 0
00001DB1                          1310   
00001DB1= 2E 42 00                1311  dispByte    DC.B    '.B', 0
00001DB4= 2E 57 00                1312  dispWord    DC.B    '.W', 0
00001DB7= 2E 4C 00                1313  dispLong    DC.B    '.L', 0
00001DBA                          1314  
00001DBA= 41 30 00                1315  dispA0      DC.B    'A0', 0
00001DBD= 41 31 00                1316  dispA1      DC.B    'A1', 0
00001DC0= 41 32 00                1317  dispA2      DC.B    'A2', 0
00001DC3= 41 33 00                1318  dispA3      DC.B    'A3', 0
00001DC6= 41 34 00                1319  dispA4      DC.B    'A4', 0
00001DC9= 41 35 00                1320  dispA5      DC.B    'A5', 0
00001DCC= 41 36 00                1321  dispA6      DC.B    'A6', 0
00001DCF= 41 37 00                1322  dispA7      DC.B    'A7', 0
00001DD2                          1323  
00001DD2= 44 00                   1324  dispD       DC.B    'D',0
00001DD4= 44 30 00                1325  dispD0      DC.B    'D0', 0
00001DD7= 44 31 00                1326  dispD1      DC.B    'D1', 0
00001DDA= 44 32 00                1327  dispD2      DC.B    'D2', 0
00001DDD= 44 33 00                1328  dispD3      DC.B    'D3', 0
00001DE0= 44 34 00                1329  dispD4      DC.B    'D4', 0
00001DE3= 44 35 00                1330  dispD5      DC.B    'D5', 0
00001DE6= 44 36 00                1331  dispD6      DC.B    'D6', 0
00001DE9= 44 37 00                1332  dispD7      DC.B    'D7', 0  
00001DEC                          1333             END    START                ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSADDR             1CB2
ABSADDRL            1CE4
ABSADDRW            1CCE
ADDAMATCH           1D94
ADDMATCH            1D90
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            1DA5
ASRMATCH            1DA1
BCLRMATCH           1D38
BCSMATCH            1D67
BGEMATCH            1D6F
BLTMATCH            1D73
BRAEIGHT            110A
BRAELEVEN           110E
BRAFIVE             10DA
BRAFOUR             10BE
BRAFOURTEEN         1112
BRAMATCH            1D63
BRANINE             110A
BRAONE              10B6
BRASIX              10DE
BRATHIRTEEN         1112
BRATHREE            10BE
BRATWELVE           110E
BRATWO              10BA
BRAZERO             1086
BVCMATCH            1D6B
CLPER               1D29
CMPIMATCH           1D33
CMPMATCH            1D87
COMMA               1D25
CR                  D
DEC                 1D2B
DISPA0              1DBA
DISPA1              1DBD
DISPA2              1DC0
DISPA3              1DC3
DISPA4              1DC6
DISPA5              1DC9
DISPA6              1DCC
DISPA7              1DCF
DISPBYTE            1DB1
DISPD               1DD2
DISPD0              1DD4
DISPD1              1DD7
DISPD2              1DDA
DISPD3              1DDD
DISPD4              1DE0
DISPD5              1DE3
DISPD6              1DE6
DISPD7              1DE9
DISPHEX             1D23
DISPLAYA0           1842
DISPLAYA0A          190E
DISPLAYA0D          1BD2
DISPLAYA0P          1A3A
DISPLAYA1           1852
DISPLAYA1A          192A
DISPLAYA1D          1BEE
DISPLAYA1P          1A62
DISPLAYA2           1862
DISPLAYA2A          1946
DISPLAYA2D          1C0A
DISPLAYA2P          1A8A
DISPLAYA3           1872
DISPLAYA3A          1962
DISPLAYA3D          1C26
DISPLAYA3P          1AB2
DISPLAYA4           1882
DISPLAYA4A          197E
DISPLAYA4D          1C42
DISPLAYA4P          1ADA
DISPLAYA5           1892
DISPLAYA5A          199A
DISPLAYA5D          1C5E
DISPLAYA5P          1B02
DISPLAYA6           18A2
DISPLAYA6A          19B6
DISPLAYA6D          1C7A
DISPLAYA6P          1B2A
DISPLAYA7           18B2
DISPLAYA7A          19D2
DISPLAYA7D          1C96
DISPLAYA7P          1B52
DISPLAYD0           1782
DISPLAYD1           1792
DISPLAYD2           17A2
DISPLAYD3           17B2
DISPLAYD4           17C2
DISPLAYD5           17D2
DISPLAYD6           17E2
DISPLAYD7           17F2
DISPLONG            1DB7
DISPWORD            1DB4
DIVSMATCH           1D77
EIGHT               8
ELEVEN              B
ENDPROG             1D16
ENDSUB              1D10
EORMATCH            1D83
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             1D21
IMMDATA             1CFA
INC                 1D2D
INVALID             1D10
JSRMATCH            1D50
LEAMATCH            1D5A
LF                  A
LOOP                100C
LSLMATCH            1D9D
LSRMATCH            1D99
MOVEAMATCH          1D42
MOVEMATCH           1D3D
MOVEMMATCH          1D54
MULSMATCH           1D8B
NEGMATCH            1D48
NEWLINE             1D1A
NINE                9
ONE                 1
OPASL               16C2
OPASR               16CE
OPBCLR              140C
OPBCS               167A
OPBGE               1692
OPBLT               169E
OPBRA               1662
OPBVC               1686
OPCMPI              129A
OPCMPIB             12E6
OPCMPIL             13AA
OPCMPIW             1348
OPDYNBCLR           1470
OPLSL               16DA
OPLSR               16E6
OPMOVEAL            15EC
OPMOVEB             14DE
OPMOVEL             1562
OPMOVEMLEA          1656
OPMULS              16B6
OPNEG               164A
OPORI               1146
OPORIB              1174
OPORIL              1238
OPORIW              11D6
OPPER               1D27
OPROL               16F2
OPROR               16FE
OPRTSJSR            1656
OPSUB               16AA
OPSUBQ              1656
ORIMATCH            1D2F
ORMATCH             1D7C
PADDRDEC            1B7A
PADDRDIR            18C2
PADDRPOST           19EE
PADDRREG            1802
PDATAREG            1742
PRINTEA             170A
PRINTINVALID        1D16
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
ROLMATCH            1DAD
RORMATCH            1DA9
RTSMATCH            1D4C
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               1D1E
START               1000
SUBMATCH            1D7F
SUBQMATCH           1D5E
TEST_END            2009
TEST_START          2000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
