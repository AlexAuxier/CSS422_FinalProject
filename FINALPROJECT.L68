00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 2014-12-06 09:26:26

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Motorola 68k Disassembler
00000000                             3  * Written by :  Abdul Hakim, David Trinh, Alexander Auxier
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR          EQU     $0D     
00000000  =0000000A                  8  LF          EQU     $0A
00000000                             9    
00000000  =00003000                 10  test_start  EQU     $00003000   ; defined starting address
00000000  =00003009                 11  test_end    EQU     $00003009   ; defined ending address
00000000                            12       
00000000  =00000000                 13  zero        EQU     $00         ; defined hex value 0
00000000  =00000001                 14  one         EQU     $01         ; defined hex value 1 
00000000  =00000002                 15  two         EQU     $02         ; defined hex value 2
00000000  =00000003                 16  three       EQU     $03         ; defined hex value 3
00000000  =00000004                 17  four        EQU     $04         ; defined hex value 4
00000000  =00000005                 18  five        EQU     $05         ; defined hex value 5
00000000  =00000006                 19  six         EQU     $06         ; defined hex value 6
00000000  =00000007                 20  seven       EQU     $07
00000000  =00000008                 21  eight       EQU     $08         ; defined hex value 8
00000000  =00000009                 22  nine        EQU     $09         ; defined hex value 9
00000000  =0000000B                 23  eleven      EQU     $0B         ; defined hex value 11
00000000  =0000000C                 24  twelve      EQU     $0C         ; defined hex value 12
00000000  =0000000D                 25  thirteen    EQU     $0D         ; defined hex value 13
00000000  =0000000E                 26  fourteen    EQU     $0E         ; defined hex value 14
00000000                            27  
00000000  =00000000                 28  s1B         EQU     %0000       ; byte size 1 
00000000  =00000001                 29  s1W         EQU     %0001       ; word size 1
00000000  =00000002                 30  s1L         EQU     %0010       ; long size 1
00000000                            31  
00000000  =00000000                 32  s2W         EQU     %0000       ; word size 2
00000000  =00000001                 33  s2L         EQU     %0001       ; long size 2
00000000                            34  
00000000  =00000001                 35  s3B         EQU     %0001       ; byte size 3
00000000  =00000003                 36  s3W         EQU     %0011       ; word size 3
00000000  =00000002                 37  s3L         EQU     %0010       ; long size 3
00000000                            38  
00000000  =00000000                 39  addMatchDn  EQU     %0000       ; Address Mode Data Register
00000000  =00000001                 40  addMatchAn  EQU     %0001       ; Address Mode Address Register
00000000  =00000002                 41  addMatchAd  EQU     %0010       ; Address Mode Address
00000000  =00000003                 42  addMatchPi  EQU     %0011       ; Address Mode with PostIncrement
00000000  =00000004                 43  addMatchPd  EQU     %0100       ; Address Mode with PreDecrement
00000000  =00000007                 44  addMatchDi  EQU     %0111       ; Address Mode for Word, Long, or Immediate 
00000000                            45  
00000000  =00000000                 46  reg0        EQU     %0000       ; register 0
00000000  =00000001                 47  reg1        EQU     %0001       ; register 1
00000000  =00000002                 48  reg2        EQU     %0010       ; register 2
00000000  =00000003                 49  reg3        EQU     %0011       ; register 3
00000000  =00000004                 50  reg4        EQU     %0100       ; register 4
00000000  =00000005                 51  reg5        EQU     %0101       ; register 5
00000000  =00000006                 52  reg6        EQU     %0110       ; register 6
00000000  =00000007                 53  reg7        EQU     %0111       ; register 7
00000000                            54  
00000000  =000000F0                 55  firstNib    EQU     $F0
00000000  =0000000F                 56  secNib      EQU     $0F
00000000                            57               
00001000                            58              ORG    $1000
00001000                            59  START:                                  ; first instruction of program
00001000                            60        
00001000  207C 00003000             61          MOVEA.L     #test_start, A0     ; load starting address
00001006  247C 00003009             62          MOVEA.L     #test_end, A2       ; load ending address
0000100C                            63            
0000100C  4241                      64  LOOP    CLR         D1                  ; clear out D1
0000100E  4242                      65          CLR         D2                  ; clear out D2
00001010  B1CA                      66          CMPA.L      A2, A0              ; compare starting and ending addresses
00001012  6E00 104E                 67          BGT         endProg             ; if A0 > A1, we've finished, end program
00001016  1218                      68          MOVE.B      (A0)+, D1           ; load byte to D1 and increment A0 to next byte
00001018  1401                      69          MOVE.B      D1, D2              ; copy byte to D2 for manipulation
0000101A  E882                      70          ASR.L       #four, D2           ; get first nibble in D2
0000101C                            71          
0000101C  B43C 0000                 72          CMP.B       #zero, D2           ; compare with 0
00001020  6700 0064                 73          BEQ         braZero             ; branch out to zero method
00001024  B43C 0001                 74          CMP.B       #one, D2            ; compare with 1
00001028  6700 008C                 75          BEQ         braOne              ; branch out to one method
0000102C  B43C 0002                 76          CMP.B       #two, D2            ; compare with 2    
00001030  6700 0088                 77          BEQ         braTwo              ; branch out to two method
00001034  B43C 0003                 78          CMP.B       #three, D2          ; compare with 3
00001038  6700 0084                 79          BEQ         braThree            ; branch out to three method
0000103C  B43C 0004                 80          CMP.B       #four, D2           ; compare with 4
00001040  6700 0080                 81          BEQ         braFour             ; branch out to four method
00001044  B43C 0005                 82          CMP.B       #five, D2           ; compare with 5
00001048  6700 0094                 83          BEQ         braFive             ; branch out to five method
0000104C  B43C 0006                 84          CMP.B       #six, D2            ; compare with 6
00001050  6700 0090                 85          BEQ         braSix              ; branch out to six method
00001054  B43C 0008                 86          CMP.B       #eight, D2          ; compare with 8
00001058  6700 00B4                 87          BEQ         braEight            ; branch out to eight method
0000105C  B43C 0009                 88          CMP.B       #nine, D2           ; compare with 9
00001060  6700 00AC                 89          BEQ         braNine             ; branch out to nine method
00001064  B43C 000B                 90          CMP.B       #eleven, D2         ; compare with 11
00001068  6700 00A8                 91          BEQ         braEleven           ; branch out to eleven method
0000106C  B43C 000C                 92          CMP.B       #twelve, D2         ; compare with 12
00001070  6700 00A0                 93          BEQ         braTwelve           ; branch out to twelve method
00001074  B43C 000D                 94          CMP.B       #thirteen, D2       ; compare with 13
00001078  6700 009C                 95          BEQ         braThirteen         ; branch out to thirteen method
0000107C  B43C 000E                 96          CMP.B       #fourteen, D2       ; compare with 14
00001080  6700 0094                 97          BEQ         braFourteen         ; branch out to fourteen method
00001084  6086                      98          BRA         loop
00001086                            99  
00001086  4242                     100  braZero CLR         D2                  ; first nibble is 0, 3 opcodes are possible 
00001088  1401                     101          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000108A  C43C 000F                102          AND.B       #secNib, D2             ; set first nibble to 0
0000108E                           103   
0000108E  B43C 0000                104          CMP.B       #zero, D2           ; compare second nibble to 0
00001092  6700 00DA                105          BEQ         opORI               ; branch to ORI method
00001096  B43C 000C                106          CMP.B       #twelve, D2         ; compare second nibble to 12
0000109A  6700 0226                107          BEQ         opCMPI              ; branch to CMPI method
0000109E  B43C 0008                108          CMP.B       #eight,D2           ; Test for static BCLR
000010A2  6700 0390                109          BEQ         opBCLR
000010A6  C47C 0001                110          AND         #one,D2            ; Sets all bits to 0 except for first bit if it is 1
000010AA  B43C 0001                111          CMP.B       #one,D2          ; if it is one then there is a chance it is dynamic BCLR
000010AE  6700 03E8                112          BEQ         opDynBCLR
000010B2  6000 0FAE                113          BRA         printInvalid
000010B6                           114          
000010B6                           115          
000010B6  6000 044E                116  braOne  BRA         opMOVEB             ; we know that there is only one opcode that is MOVE.B
000010BA                           117  
000010BA  6000 04CE                118  braTwo  BRA         opMOVEL             ; there are two opCodes available, MOVE.L, or MOVEA.L
000010BE                           119  
000010BE                           120  braThree                                ; there are two opCodes available, MOVE.W, or MOVEA.W
000010BE                           121  
000010BE  6000 05C4                122          BRA         opMOVEW
000010C2                           123  
000010C2  4242                     124  braFour CLR         D2                  ; first nibble is 4, 5 opcodes are possible 
000010C4  1401                     125          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010C6  C43C 000F                126          AND.B       #secNib, D2             ; set first nibble to 0
000010CA                           127   
000010CA  B43C 0004                128          CMP.B       #four, D2           ; compare second nibble to 4
000010CE  6700 06AE                129          BEQ         opNEG               ; branch to NEG method
000010D2  B43C 000E                130          CMP.B       #fourteen, D2       ; compare second nibble to E
000010D6  6700 0794                131          BEQ         opRTSJSR            ; branch to JSR or RTS method
000010DA  6000 0806                132          BRA         opMOVEMLEA          ; otherwise, branch to MOVEM or LEA method
000010DE                           133  
000010DE  6000 0836                134  braFive BRA         opSUBQ              ; we know that there is only one opcode that is SUBQ
000010E2                           135  
000010E2  4242                     136  braSix  CLR         D2                  ; first nibble is 6, 5 opcodes are possible 
000010E4  1401                     137          MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
000010E6  C43C 000F                138          AND.B       #$0F, D2             ; set first nibble to 0
000010EA                           139   
000010EA  B43C 0000                140          CMP.B       #zero, D2           ; compare second nibble to 0
000010EE  6700 0832                141          BEQ         opBRA               ; branch to BRA method
000010F2  B43C 0005                142          CMP.B       #five, D2           ; compare second nibble to 5
000010F6  6700 0862                143          BEQ         opBCS               ; branch to BCS method
000010FA  B43C 0008                144          CMP.B       #eight, D2          ; compare second nibble to 8
000010FE  6700 0866                145          BEQ         opBVC               ; branch to BCS method
00001102  B43C 000C                146          CMP.B       #twelve, D2         ; compare second nibble to 12
00001106  6700 086A                147          BEQ         opBGE               ; branch to BGE method
0000110A  6000 0872                148          BRA         opBLT               ; otherwise, branch to BLT method
0000110E                           149  
0000110E                           150  braEight                ; there are two opCodes available DIVS, or OR
0000110E                           151  
0000110E                           152              
0000110E                           153  
0000110E  6000 087A                154  braNine BRA         opSUB               ; we know that there is only one opcode that is SUB
00001112                           155  
00001112                           156  braEleven   ; there are two opCodes available EOR, or CMP
00001112                           157  
00001112  6000 08AA                158  braTwelve   BRA     opMULS              ; we know that there is only one opcode that is MULS    
00001116                           159    
00001116                           160  braThirteen ; there are two opCodes available ADD, or ADDA
00001116                           161  
00001116  4242                     162  braFourteen CLR         D2                  ; first nibble is E, 5 opcodes are possible 
00001118  1401                     163              MOVE.B      D1, D2              ; clear out D2 and copy D1 back in
0000111A  C438 000F                164              AND.B       $0F, D2             ; set first nibble to 0
0000111E                           165   
0000111E  B43C 0000                166              CMP.B       #zero, D2           ; compare second nibble to 0
00001122  6700 08B2                167              BEQ         opASR               ; branch to ASR method
00001126  B43C 0001                168              CMP.B       #one, D2            ; compare second nibble to 1
0000112A  6700 089E                169              BEQ         opASL               ; branch to ASL method
0000112E  B43C 0002                170              CMP.B       #two, D2            ; compare second nibble to 2
00001132  6700 08BA                171              BEQ         opLSR               ; branch to LSR method
00001136  B43C 0003                172              CMP.B       #three, D2          ; compare second nibble to 3
0000113A  6700 08A6                173              BEQ         opLSL               ; branch to LSL method
0000113E  B43C 0006                174              CMP.B       #six, D2            ; compare second nibble to 6
00001142  6700 08C2                175              BEQ         opROR               ; branch to ROR method
00001146  6000 08B2                176              BRA         opROL               ; otherwise, branch to ROL method
0000114A                           177              
0000114A                           178  
0000114A                           179  
0000114A                           180  ***********************************************************************************************************
0000114A                           181  *
0000114A                           182  *               BCC OPCODE
0000114A                           183  *
0000114A                           184  ***********************************************************************************************************
0000114A                           185          
0000114A  4242                     186  opBCC       CLR     D2
0000114C                           187              ; Determine Condition (4 bits)
0000114C                           188              ; Determine Displacement AFTER condition (8 bits)
0000114C  6000 FEBE                189              BRA     LOOP
00001150                           190              
00001150                           191              
00001150                           192  ***********************************************************************************************************
00001150                           193  *
00001150                           194  *               OR OPCODE
00001150                           195  *
00001150                           196  ***********************************************************************************************************
00001150                           197  
00001150  43F9 000020C8            198  opOR        LEA     ORmatch,A1
00001156  103C 000E                199              MOVE.B  #14,D0
0000115A  4E4F                     200              TRAP    #15
0000115C                           201  
0000115C                           202  ***********************************************************************************************************
0000115C                           203  *
0000115C                           204  *               DIVS OPCODE
0000115C                           205  *
0000115C                           206  ***********************************************************************************************************
0000115C                           207  
0000115C  43F9 000020C3            208  opDIVS      LEA     DIVSmatch,A1
00001162  103C 000E                209              MOVE.B  #14,D0
00001166  4E4F                     210              TRAP    #15
00001168                           211      
00001168                           212      
00001168                           213  **********************************************************************************************************
00001168                           214  *
00001168                           215  *               EOR OPCODE
00001168                           216  *
00001168                           217  ***********************************************************************************************************
00001168                           218  
Line 219 ERROR: Comma expected
00001168                           219  opEOR       LEA     EORmatch
00001168  103C 000E                220              MOVE.B  #14,D0
0000116C  4E4F                     221              TRAP    #15
0000116E                           222  
0000116E                           223  ***********************************************************************************************************
0000116E                           224  *
0000116E                           225  *               CMP OPCODE
0000116E                           226  *
0000116E                           227  ***********************************************************************************************************
0000116E                           228  
0000116E                           229  
0000116E                           230  
0000116E                           231  
0000116E                           232  
0000116E                           233  
0000116E                           234  
0000116E                           235  ***********************************************************************************************************
0000116E                           236  *
0000116E                           237  *               ORI OPCODE
0000116E                           238  *
0000116E                           239  ***********************************************************************************************************
0000116E                           240  
0000116E  43F9 0000207B            241  opORI   LEA         ORImatch, A1        ; we know that the opcode will be ORI, so load A1 to print message
00001174  103C 000E                242          MOVE.B      #14, D0             ; command for trap call to display message
00001178  4E4F                     243          TRAP        #15                 ; trap call
0000117A                           244          
0000117A  1218                     245          MOVE.B      (A0)+, D1
0000117C  1401                     246          MOVE.B      D1,D2               ; copy data over
0000117E  EC42                     247          ASR         #6,D2               ; shifts 6 bits over to read just the size        
00001180  B43C 0000                248          CMP.B       #zero,D2
00001184  6700 0016                249          BEQ         opORIB
00001188  B43C 0001                250          CMP.B       #one,D2
0000118C  6700 0070                251          BEQ         opORIW
00001190  B43C 0002                252          CMP.B       #two,D2
00001194  6700 00CA                253          BEQ         opORIL
00001198                           254          
00001198  6000 0EC8                255          BRA         printInvalid
0000119C                           256          
0000119C  43F9 000020FD            257  opORIB  LEA         dispByte, A1        ; Display byte
000011A2  103C 000E                258          MOVE.B      #14, D0             ; command for trap call to display message
000011A6  4E4F                     259          TRAP        #15                 ; trap call
000011A8                           260          
000011A8  43F9 0000206A            261          LEA         space, A1           ; Display space
000011AE  103C 000E                262          MOVE.B      #14, D0             ; command for trap call to display message
000011B2  4E4F                     263          TRAP        #15                 ; trap call
000011B4                           264          
000011B4  4242                     265          CLR         D2
000011B6  1401                     266          MOVE.B      D1,D2
000011B8  E642                     267          ASR         #three,D2
000011BA  C47C 0007                268          AND         #seven,D2
000011BE  4243                     269          CLR         D3        
000011C0  1601                     270          MOVE.B      D1,D3
000011C2  C67C 0007                271          AND         #seven,D3
000011C6                           272          
000011C6  4241                     273          CLR         D1
000011C8  3218                     274          MOVE.W      (A0)+, D1
000011CA                           275          
000011CA  43F9 0000206D            276          LEA         hashTag, A1           ; Display space
000011D0  103C 000E                277          MOVE.B      #14, D0             ; command for trap call to display message
000011D4  4E4F                     278          TRAP        #15                 ; trap call
000011D6                           279          
000011D6  103C 0003                280          MOVE.B      #3, D0
000011DA  4E4F                     281          TRAP        #15
000011DC                           282          
000011DC  43F9 00002071            283          LEA         comma, A1           ; Display space
000011E2  103C 000E                284          MOVE.B      #14, D0             ; command for trap call to display message
000011E6  4E4F                     285          TRAP        #15                 ; trap call
000011E8                           286          
000011E8  4EB9 00001A12            287          JSR         printEA
000011EE                           288          
000011EE  43F9 00002066            289          LEA         newLine, A1           ; Display space
000011F4  103C 000E                290          MOVE.B      #14, D0             ; command for trap call to display message
000011F8  4E4F                     291          TRAP        #15                 ; trap call
000011FA                           292          
000011FA  6000 FE10                293          BRA         LOOP
000011FE                           294          
000011FE                           295          
000011FE  43F9 00002100            296  opORIW  LEA         dispWord, A1        ; Display byte
00001204  103C 000E                297          MOVE.B      #14, D0             ; command for trap call to display message
00001208  4E4F                     298          TRAP        #15                 ; trap call
0000120A                           299          
0000120A  43F9 0000206A            300          LEA         space, A1           ; Display space
00001210  103C 000E                301          MOVE.B      #14, D0             ; command for trap call to display message
00001214  4E4F                     302          TRAP        #15                 ; trap call
00001216                           303          
00001216  4242                     304          CLR         D2
00001218  1401                     305          MOVE.B      D1,D2
0000121A  E642                     306          ASR         #three,D2
0000121C  C47C 0007                307          AND         #seven,D2
00001220  4243                     308          CLR         D3        
00001222  1601                     309          MOVE.B      D1,D3
00001224  C67C 0007                310          AND         #seven,D3
00001228                           311          
00001228  4241                     312          CLR         D1
0000122A  3218                     313          MOVE.W      (A0)+, D1
0000122C                           314          
0000122C  43F9 0000206D            315          LEA         hashTag, A1           ; Display space
00001232  103C 000E                316          MOVE.B      #14, D0             ; command for trap call to display message
00001236  4E4F                     317          TRAP        #15                 ; trap call
00001238                           318          
00001238  103C 0003                319          MOVE.B      #3, D0
0000123C  4E4F                     320          TRAP        #15
0000123E                           321          
0000123E  43F9 00002071            322          LEA         comma, A1           ; Display space
00001244  103C 000E                323          MOVE.B      #14, D0             ; command for trap call to display message
00001248  4E4F                     324          TRAP        #15                 ; trap call
0000124A                           325          
0000124A  4EB9 00001A12            326          JSR         printEA
00001250                           327          
00001250  43F9 00002066            328          LEA         newLine, A1           ; Display space
00001256  103C 000E                329          MOVE.B      #14, D0             ; command for trap call to display message
0000125A  4E4F                     330          TRAP        #15                 ; trap call
0000125C                           331          
0000125C  6000 FDAE                332          BRA         LOOP
00001260                           333       
00001260  43F9 00002103            334  opORIL  LEA         dispLong, A1        ; Display byte
00001266  103C 000E                335          MOVE.B      #14, D0             ; command for trap call to display message
0000126A  4E4F                     336          TRAP        #15                 ; trap call
0000126C                           337          
0000126C  43F9 0000206A            338          LEA         space, A1           ; Display space
00001272  103C 000E                339          MOVE.B      #14, D0             ; command for trap call to display message
00001276  4E4F                     340          TRAP        #15                 ; trap call
00001278                           341          
00001278  4242                     342          CLR         D2
0000127A  1401                     343          MOVE.B      D1,D2
0000127C  E642                     344          ASR         #three,D2
0000127E  C47C 0007                345          AND         #seven,D2
00001282  4243                     346          CLR         D3        
00001284  1601                     347          MOVE.B      D1,D3
00001286  C67C 0007                348          AND         #seven,D3
0000128A                           349          
0000128A  4241                     350          CLR         D1
0000128C  2218                     351          MOVE.L      (A0)+, D1
0000128E                           352          
0000128E  43F9 0000206D            353          LEA         hashTag, A1           ; Display space
00001294  103C 000E                354          MOVE.B      #14, D0             ; command for trap call to display message
00001298  4E4F                     355          TRAP        #15                 ; trap call
0000129A                           356          
0000129A  103C 0003                357          MOVE.B      #3, D0
0000129E  4E4F                     358          TRAP        #15
000012A0                           359          
000012A0  43F9 00002071            360          LEA         comma, A1           ; Display space
000012A6  103C 000E                361          MOVE.B      #14, D0             ; command for trap call to display message
000012AA  4E4F                     362          TRAP        #15                 ; trap call
000012AC                           363          
000012AC  4EB9 00001A12            364          JSR         printEA
000012B2                           365          
000012B2  43F9 00002066            366          LEA         newLine, A1           ; Display space
000012B8  103C 000E                367          MOVE.B      #14, D0             ; command for trap call to display message
000012BC  4E4F                     368          TRAP        #15                 ; trap call
000012BE                           369          
000012BE  6000 FD4C                370          BRA         LOOP
000012C2                           371           
000012C2  43F9 0000207F            372  opCMPI  LEA         CMPImatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
000012C8  103C 000E                373          MOVE.B      #14, D0             ; command for trap call to display message
000012CC  4E4F                     374          TRAP        #15                 ; trap call
000012CE                           375                  
000012CE  1218                     376          MOVE.B      (A0)+, D1
000012D0  1401                     377          MOVE.B      D1,D2               ; copy data over
000012D2  EC42                     378          ASR         #6,D2               ; shifts 6 bits over to read just the size        
000012D4  B43C 0000                379          CMP.B       #zero,D2
000012D8  6700 0034                380          BEQ         opCMPIB
000012DC  B43C 0001                381          CMP.B       #one,D2
000012E0  6700 008E                382          BEQ         opCMPIW
000012E4  B43C 0002                383          CMP.B       #two,D2
000012E8  6700 00E8                384          BEQ         opCMPIL
000012EC                           385          
000012EC  1401                     386          MOVE.B      D1,D2               ; Reload D2 with the same byte to get mode
000012EE  E542                     387          ASL         #two,D2             ; Moving two bits over to isolate and remove the size
000012F0  1802                     388          MOVE.B      D2,D4               ; Move the mode and register to D4 and leave the size
000012F2  4242                     389          CLR         D2                  ; Clear out data register
000012F4  1404                     390          MOVE.B      D4,D2               ; Put data back into D2 with just the mode and register
000012F6  EA42                     391          ASR         #five,D2            ; Shift the register out to get just the mode
000012F8  1802                     392          MOVE.B      D2,D4               ; Store mode into D4
000012FA  4242                     393          CLR         D2
000012FC                           394          
000012FC  1401                     395          MOVE.B      D1,D2               ; Getting the EA register
000012FE  EB42                     396          ASL         #five,D2
00001300  1A02                     397          MOVE.B      D2,D5               ; Move just the register into D5
00001302  4242                     398          CLR         D2                  ; Clearing D2 to put data back
00001304  1405                     399          MOVE.B      D5,D2               ; Putting back the register
00001306  EA42                     400          ASR         #five,D2            ; Shifting bits in order to read the register
00001308  1A02                     401          MOVE.B      D2,D5               ; Store register into D5
0000130A                           402          
0000130A  6000 FD00                403          BRA         LOOP                ; go back to the loop
0000130E                           404  
0000130E  43F9 000020FD            405  opCMPIB LEA         dispByte, A1        ; Display byte
00001314  103C 000E                406          MOVE.B      #14, D0             ; command for trap call to display message
00001318  4E4F                     407          TRAP        #15                 ; trap call
0000131A                           408          
0000131A  43F9 0000206A            409          LEA         space, A1           ; Display space
00001320  103C 000E                410          MOVE.B      #14, D0             ; command for trap call to display message
00001324  4E4F                     411          TRAP        #15                 ; trap call
00001326                           412          
00001326  4242                     413          CLR         D2
00001328  1401                     414          MOVE.B      D1,D2
0000132A  E642                     415          ASR         #three,D2
0000132C  C47C 0007                416          AND         #seven,D2
00001330  4243                     417          CLR         D3        
00001332  1601                     418          MOVE.B      D1,D3
00001334  C67C 0007                419          AND         #seven,D3
00001338                           420          
00001338  4241                     421          CLR         D1
0000133A  3218                     422          MOVE.W      (A0)+, D1
0000133C                           423          
0000133C  43F9 0000206D            424          LEA         hashTag, A1           ; Display space
00001342  103C 000E                425          MOVE.B      #14, D0             ; command for trap call to display message
00001346  4E4F                     426          TRAP        #15                 ; trap call
00001348                           427          
00001348  103C 0003                428          MOVE.B      #3, D0
0000134C  4E4F                     429          TRAP        #15
0000134E                           430          
0000134E  43F9 00002071            431          LEA         comma, A1           ; Display space
00001354  103C 000E                432          MOVE.B      #14, D0             ; command for trap call to display message
00001358  4E4F                     433          TRAP        #15                 ; trap call
0000135A                           434          
0000135A  4EB9 00001A12            435          JSR         printEA
00001360                           436          
00001360  43F9 00002066            437          LEA         newLine, A1           ; Display space
00001366  103C 000E                438          MOVE.B      #14, D0             ; command for trap call to display message
0000136A  4E4F                     439          TRAP        #15                 ; trap call
0000136C                           440  
0000136C  6000 FC9E                441          BRA         LOOP
00001370                           442  
00001370  43F9 00002100            443  opCMPIW LEA         dispWord, A1        ; Display byte
00001376  103C 000E                444          MOVE.B      #14, D0             ; command for trap call to display message
0000137A  4E4F                     445          TRAP        #15                 ; trap call
0000137C                           446          
0000137C  43F9 0000206A            447          LEA         space, A1           ; Display space
00001382  103C 000E                448          MOVE.B      #14, D0             ; command for trap call to display message
00001386  4E4F                     449          TRAP        #15                 ; trap call
00001388                           450          
00001388  4242                     451          CLR         D2
0000138A  1401                     452          MOVE.B      D1,D2
0000138C  E642                     453          ASR         #three,D2
0000138E  C47C 0007                454          AND         #seven,D2
00001392  4243                     455          CLR         D3        
00001394  1601                     456          MOVE.B      D1,D3
00001396  C67C 0007                457          AND         #seven,D3
0000139A                           458          
0000139A  4241                     459          CLR         D1
0000139C  3218                     460          MOVE.W      (A0)+, D1
0000139E                           461          
0000139E  43F9 0000206D            462          LEA         hashTag, A1           ; Display space
000013A4  103C 000E                463          MOVE.B      #14, D0             ; command for trap call to display message
000013A8  4E4F                     464          TRAP        #15                 ; trap call
000013AA                           465          
000013AA  103C 0003                466          MOVE.B      #3, D0
000013AE  4E4F                     467          TRAP        #15
000013B0                           468          
000013B0  43F9 00002071            469          LEA         comma, A1           ; Display space
000013B6  103C 000E                470          MOVE.B      #14, D0             ; command for trap call to display message
000013BA  4E4F                     471          TRAP        #15                 ; trap call
000013BC                           472          
000013BC  4EB9 00001A12            473          JSR         printEA
000013C2                           474          
000013C2  43F9 00002066            475          LEA         newLine, A1           ; Display space
000013C8  103C 000E                476          MOVE.B      #14, D0             ; command for trap call to display message
000013CC  4E4F                     477          TRAP        #15                 ; trap call
000013CE  6000 FC3C                478          BRA         LOOP
000013D2                           479  
000013D2  43F9 00002103            480  opCMPIL LEA         dispLong, A1        ; Display byte
000013D8  103C 000E                481          MOVE.B      #14, D0             ; command for trap call to display message
000013DC  4E4F                     482          TRAP        #15                 ; trap call
000013DE                           483          
000013DE  43F9 0000206A            484          LEA         space, A1           ; Display space
000013E4  103C 000E                485          MOVE.B      #14, D0             ; command for trap call to display message
000013E8  4E4F                     486          TRAP        #15                 ; trap call
000013EA                           487          
000013EA  4242                     488          CLR         D2
000013EC  1401                     489          MOVE.B      D1,D2
000013EE  E642                     490          ASR         #three,D2
000013F0  C47C 0007                491          AND         #seven,D2
000013F4  4243                     492          CLR         D3        
000013F6  1601                     493          MOVE.B      D1,D3
000013F8  C67C 0007                494          AND         #seven,D3
000013FC                           495          
000013FC  4241                     496          CLR         D1
000013FE  3218                     497          MOVE.W      (A0)+, D1
00001400                           498          
00001400  43F9 0000206D            499          LEA         hashTag, A1           ; Display space
00001406  103C 000E                500          MOVE.B      #14, D0             ; command for trap call to display message
0000140A  4E4F                     501          TRAP        #15                 ; trap call
0000140C                           502          
0000140C  103C 0003                503          MOVE.B      #3, D0
00001410  4E4F                     504          TRAP        #15
00001412                           505          
00001412  43F9 00002071            506          LEA         comma, A1           ; Display space
00001418  103C 000E                507          MOVE.B      #14, D0             ; command for trap call to display message
0000141C  4E4F                     508          TRAP        #15                 ; trap call
0000141E                           509          
0000141E  4EB9 00001A12            510          JSR         printEA
00001424                           511          
00001424  43F9 00002066            512          LEA         newLine, A1           ; Display space
0000142A  103C 000E                513          MOVE.B      #14, D0             ; command for trap call to display message
0000142E  4E4F                     514          TRAP        #15                 ; trap call
00001430                           515          
00001430  6000 FBDA                516          BRA         LOOP
00001434                           517  
00001434  43F9 00002084            518  opBCLR          LEA         BCLRmatch, A1       ; we know that the opcode will be CMPI, so load A1 to print message
0000143A  103C 000E                519                  MOVE.B      #14, D0             ; command for trap call to display message
0000143E  4E4F                     520                  TRAP        #15                 ; trap call
00001440                           521  
00001440  43F9 0000206A            522                  LEA         space, A1           ; Display space
00001446  103C 000E                523                  MOVE.B      #14, D0             ; command for trap call to display message
0000144A  4E4F                     524                  TRAP        #15                 ; trap call
0000144C                           525                  
0000144C  4242                     526                  CLR         D2
0000144E  1218                     527                  MOVE.B      (A0)+, D1
00001450  1401                     528                  MOVE.B      D1,D2               ; copy data over
00001452  E642                     529                  ASR         #three,D2           ; Shift to the right to remove register
00001454  C47C 0007                530                  AND         #seven,D2           ; Sets other bits to 0 and leave Mode the same
00001458                           531                  
00001458  4243                     532                  CLR         D3                  ; Clear D3 so we can move D1 in
0000145A  1601                     533                  MOVE.B      D1,D3               ; Move othr byte in
0000145C  C67C 0007                534                  AND         #seven,D3           ; Set everything besides register to 0
00001460                           535                  
00001460  4241                     536                  CLR         D1
00001462  3218                     537                  MOVE.W      (A0)+, D1
00001464                           538                 
00001464                           539                  
00001464  43F9 0000206D            540                  LEA         hashTag, A1           ; Display space
0000146A  103C 000E                541                  MOVE.B      #14, D0             ; command for trap call to display message
0000146E  4E4F                     542                  TRAP        #15                 ; trap call
00001470                           543          
00001470  103C 0003                544                  MOVE.B      #3, D0
00001474  4E4F                     545                  TRAP        #15
00001476                           546          
00001476  43F9 00002071            547                  LEA         comma, A1           ; Display space
0000147C  103C 000E                548                  MOVE.B      #14, D0             ; command for trap call to display message
00001480  4E4F                     549                  TRAP        #15                 ; trap call
00001482                           550                  
00001482  4EB9 00001A12            551                  JSR         printEA
00001488                           552          
00001488  43F9 00002066            553                  LEA         newLine, A1           ; Display space
0000148E  103C 000E                554                  MOVE.B      #14, D0             ; command for trap call to display message
00001492  4E4F                     555                  TRAP        #15                 ; trap call
00001494                           556                  
00001494                           557                  
00001494  6000 FB76                558                  BRA         LOOP                
00001498                           559          
00001498                           560  opDynBCLR       
00001498  4241                     561                  CLR         D1
0000149A  1218                     562                  MOVE.B      (A0)+,D1            ; Copy second byte in
0000149C  1601                     563                  MOVE.B      D1,D3               ; Will use D4 to store in the source register
0000149E  E243                     564                  ASR         #one,D3             ; Shift register over to the end
000014A0  C67C 0007                565                  AND         #seven,D3           ; Change all bits except for the register to 0. Source Register is now in D4
000014A4                           566                  
000014A4  1401                     567                  MOVE.B      D1,D2
000014A6  EC42                     568                  ASR         #six,D2             ; Removing mode and register to check BCLR bits
000014A8  B47C 0002                569                  CMP         #two,D2             ; Checking the static bits to make sure it is BCLR
000014AC  6600 0BB4                570                  BNE         printInvalid        ; If not equal, than this is not BCLR or any other mode we're dealing with
000014B0                           571  
000014B0                           572                  
000014B0  43F9 00002084            573                  LEA         BCLRmatch, A1       ; we now know that the opcode will be BCLR, so load A1 to print message
000014B6  103C 000E                574                  MOVE.B      #14, D0             ; command for trap call to display message
000014BA  4E4F                     575                  TRAP        #15                 ; trap call  
000014BC                           576                  
000014BC  43F9 0000206A            577                  LEA         space, A1           ; Display space
000014C2  103C 000E                578                  MOVE.B      #14, D0             ; command for trap call to display message
000014C6  4E4F                     579                  TRAP        #15                 ; trap call
000014C8                           580                  
000014C8  143C 0000                581                  MOVE.B      #zero,D2                
000014CC  4EB9 00001A12            582                  JSR         printEA
000014D2                           583                  
000014D2  43F9 00002071            584                  LEA         comma, A1           ; Display space
000014D8  103C 000E                585                  MOVE.B      #14, D0             ; command for trap call to display message
000014DC  4E4F                     586                  TRAP        #15                 ; trap call
000014DE                           587                  
000014DE  4242                     588                  CLR         D2
000014E0  1401                     589                  MOVE.B      D1,D2               ; Using D2 to store EA mode
000014E2  E642                     590                  ASR         #three,D2           ; Remove/shift the register out
000014E4  C47C 0007                591                  AND         #seven,D2           ; Change all bits except for the mode bits to 0
000014E8                           592                  
000014E8  4243                     593                  CLR         D3                  ; Clearing D3 to avoid mashing data
000014EA  1601                     594                  MOVE.B      D1,D3               ; Moving byte into D3. Using D3 to store EA register
000014EC  C67C 0007                595                  AND         #seven,D3           ; Change all bits except for register bits to 0
000014F0                           596                  
000014F0                           597  
000014F0  4EB9 00001A12            598                  JSR         printEA
000014F6                           599          
000014F6  43F9 00002066            600                  LEA         newLine, A1           ; Display space
000014FC  103C 000E                601                  MOVE.B      #14, D0             ; command for trap call to display message
00001500  4E4F                     602                  TRAP        #15                 ; trap call            
00001502                           603  
00001502                           604  
00001502  6000 FB08                605                  BRA         LOOP                ; go back to the loop
00001506                           606   
00001506                           607  opMOVEB 
00001506  43F9 00002089            608          LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.B, so load A1 to print message
0000150C  103C 000E                609          MOVE.B      #14, D0             ; command for trap call to display message
00001510  4E4F                     610          TRAP        #15                 ; trap call
00001512  43F9 000020FD            611          LEA         dispByte, A1        ; display byte
00001518  103C 000E                612          MOVE.B      #14, D0             ; command for trap call to display message
0000151C  4E4F                     613          TRAP        #15                 ; trap call
0000151E  43F9 0000206A            614          LEA         space, A1           ; create spaces
00001524  103C 000E                615          MOVE.B      #14, D0             ; command for trap call to display message
00001528  4E4F                     616          TRAP        #15                 ; trap call
0000152A                           617          
0000152A                           618          
0000152A  4245                     619          CLR         D5                  ; Clear D5
0000152C  1A01                     620          MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000152E  E245                     621          ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001530  CA7C 0007                622          AND         #seven,D5
00001534                           623          
00001534  4244                     624          CLR         D4                  ; Clear out D4
00001536  1801                     625          MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001538  C87C 0001                626          AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000153C                           627          
0000153C  4241                     628          CLR          D1
0000153E  4242                     629          CLR          D2
00001540  1218                     630          MOVE.B      (A0)+,D1            ; Copy byte into D1
00001542  1401                     631          MOVE.B      D1,D2
00001544  EC42                     632          ASR         #6,D2               ; Shifts source mode and register out to get destination mode
00001546  D842                     633          ADD         D2,D4               ; Adds the remaining bits to D4
00001548                           634          
00001548  4242                     635          CLR         D2
0000154A  1401                     636          MOVE.B      D1,D2               ; Copy new byte over to D2
0000154C  E642                     637          ASR         #three,D2           ; Shift source register out
0000154E  C47C 0007                638          AND         #seven,D2           ; Set everything to 0 except for the mode
00001552                           639          
00001552  4243                     640          CLR         D3
00001554  1601                     641          MOVE.B      D1,D3
00001556  C67C 0007                642          AND         #seven,D3
0000155A                           643          
0000155A  4EB9 00001A12            644          JSR         printEA
00001560                           645          
00001560  43F9 00002071            646          LEA         comma, A1           ; Display space
00001566  103C 000E                647          MOVE.B      #14, D0             ; command for trap call to display message
0000156A  4E4F                     648          TRAP        #15                 ; trap call
0000156C                           649          
0000156C  4242                     650          CLR         D2
0000156E  4243                     651          CLR         D3
00001570  1404                     652          MOVE.B      D4,D2
00001572  1605                     653          MOVE.B      D5,D3
00001574                           654          
00001574  4EB9 00001A12            655          JSR         printEA
0000157A                           656          
0000157A                           657          
0000157A  43F9 00002066            658          LEA         newLine, A1           ; Display space
00001580  103C 000E                659          MOVE.B      #14, D0             ; command for trap call to display message
00001584  4E4F                     660          TRAP        #15                 ; trap call            
00001586                           661  
00001586                           662  
00001586  6000 FA84                663          BRA         LOOP                ; go back to the loop
0000158A                           664          
0000158A                           665  opMOVEL     
0000158A                           666          
0000158A  4245                     667              CLR         D5                  ; Clear D5
0000158C  1A01                     668              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
0000158E  E245                     669              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
00001590  CA7C 0007                670              AND         #seven,D5
00001594                           671          
00001594  4244                     672              CLR         D4                  ; Clear out D4
00001596  1801                     673              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001598  C87C 0001                674              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
0000159C                           675          
0000159C  4241                     676              CLR          D1
0000159E  4242                     677              CLR          D2
000015A0  1218                     678              MOVE.B      (A0)+,D1            ; Copy byte into D1
000015A2  1401                     679              MOVE.B      D1,D2
000015A4  EC42                     680              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000015A6  D842                     681              ADD         D2,D4               ; Adds the remaining bits to D4
000015A8                           682          
000015A8  B87C 0001                683              CMP         #one,D4             ; Check if it is MOVEA
000015AC  6700 006C                684              BEQ         opMOVEAL            ; If it is, branch off
000015B0                           685              
000015B0  43F9 00002089            686              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000015B6  103C 000E                687              MOVE.B      #14, D0             ; command for trap call to display message
000015BA  4E4F                     688              TRAP        #15                 ; trap call  
000015BC                           689              
000015BC                           690              
000015BC  43F9 00002103            691              LEA         dispLong,A1
000015C2  103C 000E                692              MOVE.B      #14, D0             ; command for trap call to display message
000015C6  4E4F                     693              TRAP        #15                 ; trap call
000015C8                           694              
000015C8  43F9 0000206A            695              LEA         space, A1           ; create spaces
000015CE  103C 000E                696              MOVE.B      #14, D0             ; command for trap call to display message
000015D2  4E4F                     697              TRAP        #15                 ; trap call
000015D4                           698          
000015D4  4242                     699              CLR         D2
000015D6  1401                     700              MOVE.B      D1,D2               ; Copy new byte over to D2
000015D8  E642                     701              ASR         #three,D2           ; Shift source register out
000015DA  C47C 0007                702              AND         #seven,D2           ; Set everything to 0 except for the mode
000015DE                           703          
000015DE  4243                     704              CLR         D3
000015E0  1601                     705              MOVE.B      D1,D3
000015E2  C67C 0007                706              AND         #seven,D3
000015E6                           707              
000015E6  4241                     708              CLR         D1                  ; Clear D1
000015E8  2218                     709              MOVE.L      (A0)+, D1           ; Read in next word to find the immediate data
000015EA                           710              
000015EA  4EB9 00001A12            711              JSR         printEA
000015F0                           712              
000015F0  43F9 00002071            713              LEA         comma, A1           ; Display comma
000015F6  103C 000E                714              MOVE.B      #14, D0             ; command for trap call to display message
000015FA  4E4F                     715              TRAP        #15                 ; trap call
000015FC                           716          
000015FC  4242                     717              CLR         D2
000015FE  4243                     718              CLR         D3
00001600  1404                     719              MOVE.B      D4,D2
00001602  1605                     720              MOVE.B      D5,D3
00001604                           721              
00001604                           722  
00001604                           723              
00001604  4EB9 00001A12            724              JSR         printEA
0000160A                           725          
0000160A                           726          
0000160A  43F9 00002066            727              LEA         newLine, A1           ; Display space
00001610  103C 000E                728              MOVE.B      #14, D0             ; command for trap call to display message
00001614  4E4F                     729              TRAP        #15                 ; trap call            
00001616                           730  
00001616                           731  
00001616  6000 F9F4                732              BRA         LOOP                ; go back to the loop
0000161A                           733              
0000161A                           734  opMOVEAL
0000161A                           735  
0000161A  43F9 0000208E            736              LEA         MOVEAmatch,A1
00001620  103C 000E                737              MOVE.B      #14, D0             ; command for trap call to display message
00001624  4E4F                     738              TRAP        #15                 ; trap call
00001626                           739              
00001626  43F9 00002103            740              LEA         dispLong,A1
0000162C  103C 000E                741              MOVE.B      #14, D0             ; command for trap call to display message
00001630  4E4F                     742              TRAP        #15                 ; trap call
00001632                           743              
00001632                           744  
00001632  43F9 0000206A            745              LEA         space, A1           ; create spaces
00001638  103C 000E                746              MOVE.B      #14, D0             ; command for trap call to display message
0000163C  4E4F                     747              TRAP        #15                 ; trap call
0000163E                           748              
0000163E  4242                     749              CLR         D2
00001640  1401                     750              MOVE.B      D1,D2               ; Copy new byte over to D2
00001642  E642                     751              ASR         #three,D2           ; Shift source register out
00001644  C47C 0007                752              AND         #seven,D2           ; Set everything to 0 except for the mode
00001648                           753          
00001648  4243                     754              CLR         D3
0000164A  1601                     755              MOVE.B      D1,D3
0000164C  C67C 0007                756              AND         #seven,D3
00001650                           757              
00001650  4241                     758              CLR         D1                  ; Clear D1
00001652  3218                     759              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
00001654                           760              
00001654                           761              
00001654  4EB9 00001A12            762              JSR         printEA
0000165A                           763              
0000165A  43F9 00002071            764              LEA         comma, A1           ; Display comma
00001660  103C 000E                765              MOVE.B      #14, D0             ; command for trap call to display message
00001664  4E4F                     766              TRAP        #15                 ; trap call
00001666                           767  
00001666  4242                     768              CLR         D2
00001668  4243                     769              CLR         D3
0000166A  1404                     770              MOVE.B      D4,D2
0000166C  1605                     771              MOVE.B      D5,D3
0000166E                           772          
0000166E  4EB9 00001A12            773              JSR         printEA
00001674                           774          
00001674                           775          
00001674  43F9 00002066            776              LEA         newLine, A1           ; Display space
0000167A  103C 000E                777              MOVE.B      #14, D0             ; command for trap call to display message
0000167E  4E4F                     778              TRAP        #15                 ; trap call            
00001680                           779  
00001680                           780  
00001680  6000 F98A                781              BRA         LOOP                ; go back to the loop
00001684                           782  
00001684                           783  opMOVEW
00001684                           784          
00001684  4245                     785              CLR         D5                  ; Clear D5
00001686  1A01                     786              MOVE.B      D1,D5               ; Copying byte over to D5. Will use D5 to store destination Register
00001688  E245                     787              ASR         #one,D5             ; shifted mode out. Register is now stored into D5
0000168A  CA7C 0007                788              AND         #seven,D5
0000168E                           789          
0000168E  4244                     790              CLR         D4                  ; Clear out D4
00001690  1801                     791              MOVE.B      D1,D4               ; Copy byte over to store destination mode
00001692  C87C 0001                792              AND         #one,D4             ; Set all the other bits to 0, leave the bit for the destination mode alone.
00001696                           793          
00001696  4241                     794              CLR          D1
00001698  4242                     795              CLR          D2
0000169A  1218                     796              MOVE.B      (A0)+,D1            ; Copy byte into D1
0000169C  1401                     797              MOVE.B      D1,D2
0000169E  EC42                     798              ASR         #6,D2               ; Shifts source mode and register out to get destination mode
000016A0  D842                     799              ADD         D2,D4               ; Adds the remaining bits to D4
000016A2                           800          
000016A2  B87C 0001                801              CMP         #one,D4             ; Check if it is MOVEA
000016A6  6700 006C                802              BEQ         opMOVEAW            ; If it is, branch off
000016AA                           803              
000016AA  43F9 00002089            804              LEA         MOVEmatch, A1       ; we know that the opcode will be MOVE.L OR MOVEA.L, so load A1 to print message
000016B0  103C 000E                805              MOVE.B      #14, D0             ; command for trap call to display message
000016B4  4E4F                     806              TRAP        #15                 ; trap call  
000016B6                           807              
000016B6  43F9 00002100            808              LEA         dispWord,A1
000016BC  103C 000E                809              MOVE.B      #14, D0             ; command for trap call to display message
000016C0  4E4F                     810              TRAP        #15                 ; trap call
000016C2                           811              
000016C2  43F9 0000206A            812              LEA         space, A1           ; create spaces
000016C8  103C 000E                813              MOVE.B      #14, D0             ; command for trap call to display message
000016CC  4E4F                     814              TRAP        #15                 ; trap call
000016CE                           815          
000016CE  4242                     816              CLR         D2
000016D0  1401                     817              MOVE.B      D1,D2               ; Copy new byte over to D2
000016D2  E642                     818              ASR         #three,D2           ; Shift source register out
000016D4  C47C 0007                819              AND         #seven,D2           ; Set everything to 0 except for the mode
000016D8                           820          
000016D8  4243                     821              CLR         D3
000016DA  1601                     822              MOVE.B      D1,D3
000016DC  C67C 0007                823              AND         #seven,D3
000016E0                           824              
000016E0  4241                     825              CLR         D1                  ; Clear D1
000016E2  3218                     826              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
000016E4                           827              
000016E4  4EB9 00001A12            828              JSR         printEA
000016EA                           829              
000016EA  43F9 00002071            830              LEA         comma, A1           ; Display comma
000016F0  103C 000E                831              MOVE.B      #14, D0             ; command for trap call to display message
000016F4  4E4F                     832              TRAP        #15                 ; trap call
000016F6                           833          
000016F6  4242                     834              CLR         D2
000016F8  4243                     835              CLR         D3
000016FA  1404                     836              MOVE.B      D4,D2
000016FC  1605                     837              MOVE.B      D5,D3
000016FE                           838              
000016FE                           839  
000016FE                           840              
000016FE  4EB9 00001A12            841              JSR         printEA
00001704                           842          
00001704                           843          
00001704  43F9 00002066            844              LEA         newLine, A1           ; Display space
0000170A  103C 000E                845              MOVE.B      #14, D0             ; command for trap call to display message
0000170E  4E4F                     846              TRAP        #15                 ; trap call            
00001710                           847  
00001710                           848  
00001710  6000 F8FA                849              BRA         LOOP                ; go back to the loop
00001714                           850  opMOVEAW  
00001714  43F9 0000208E            851              LEA         MOVEAmatch,A1
0000171A  103C 000E                852              MOVE.B      #14, D0             ; command for trap call to display message
0000171E  4E4F                     853              TRAP        #15                 ; trap call
00001720                           854              
00001720  43F9 00002100            855              LEA         dispWord,A1
00001726  103C 000E                856              MOVE.B      #14, D0             ; command for trap call to display message
0000172A  4E4F                     857              TRAP        #15                 ; trap call
0000172C                           858              
0000172C                           859  
0000172C  43F9 0000206A            860              LEA         space, A1           ; create spaces
00001732  103C 000E                861              MOVE.B      #14, D0             ; command for trap call to display message
00001736  4E4F                     862              TRAP        #15                 ; trap call
00001738                           863              
00001738  4242                     864              CLR         D2
0000173A  1401                     865              MOVE.B      D1,D2               ; Copy new byte over to D2
0000173C  E642                     866              ASR         #three,D2           ; Shift source register out
0000173E  C47C 0007                867              AND         #seven,D2           ; Set everything to 0 except for the mode
00001742                           868          
00001742  4243                     869              CLR         D3
00001744  1601                     870              MOVE.B      D1,D3
00001746  C67C 0007                871              AND         #seven,D3
0000174A                           872              
0000174A  4241                     873              CLR         D1                  ; Clear D1
0000174C  3218                     874              MOVE.W      (A0)+, D1           ; Read in next word to find the immediate data
0000174E                           875              
0000174E                           876              
0000174E  4EB9 00001A12            877              JSR         printEA
00001754                           878              
00001754  43F9 00002071            879              LEA         comma, A1           ; Display comma
0000175A  103C 000E                880              MOVE.B      #14, D0             ; command for trap call to display message
0000175E  4E4F                     881              TRAP        #15                 ; trap call
00001760                           882  
00001760  4242                     883              CLR         D2
00001762  4243                     884              CLR         D3
00001764  1404                     885              MOVE.B      D4,D2
00001766  1605                     886              MOVE.B      D5,D3
00001768                           887          
00001768  4EB9 00001A12            888              JSR         printEA
0000176E                           889          
0000176E                           890          
0000176E  43F9 00002066            891              LEA         newLine, A1           ; Display space
00001774  103C 000E                892              MOVE.B      #14, D0             ; command for trap call to display message
00001778  4E4F                     893              TRAP        #15                 ; trap call            
0000177A                           894  
0000177A                           895  
0000177A  6000 F890                896              BRA         LOOP                ; go back to the loop
0000177E                           897  
0000177E                           898  opNEG   
0000177E  43F9 00002094            899              LEA         NEGmatch, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001784  103C 000E                900              MOVE.B      #14, D0             ; command for trap call to display message
00001788  4E4F                     901              TRAP        #15                 ; trap call
0000178A                           902          
0000178A                           903          
0000178A  1218                     904              MOVE.B      (A0)+, D1
0000178C  1401                     905              MOVE.B      D1,D2               ; copy data over
0000178E  EC42                     906              ASR         #six,D2
00001790                           907              
00001790  B47C 0000                908              CMP         #zero,D2
00001794  6700 0016                909              BEQ         opNEGB
00001798  B47C 0001                910              CMP         #one,D2
0000179C  6700 004E                911              BEQ         opNEGL
000017A0  B47C 0002                912              CMP         #two,D2
000017A4  6700 0086                913              BEQ         opNEGW
000017A8  6000 08B2                914              BRA         INVALID
000017AC                           915  opNEGB
000017AC                           916  
000017AC  43F9 000020FD            917              LEA         dispByte, A1        ; we know that the opcode will be NEG, so load A1 to print message
000017B2  103C 000E                918              MOVE.B      #14, D0             ; command for trap call to display message
000017B6  4E4F                     919              TRAP        #15                 ; trap call
000017B8                           920          
000017B8  43F9 0000206A            921              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000017BE  103C 000E                922              MOVE.B      #14, D0             ; command for trap call to display message
000017C2  4E4F                     923              TRAP        #15                 ; trap call
000017C4                           924          
000017C4  4242                     925              CLR         D2                  ; Clear Data register 2
000017C6  3401                     926              MOVE        D1,D2               ; Move byte into D2
000017C8  E642                     927              ASR         #three,D2           ; Shift mode into place and moves mode into place
000017CA  C47C 0007                928              AND         #seven,D2           ; Stores mode
000017CE                           929              
000017CE  4243                     930              CLR         D3
000017D0  3601                     931              MOVE        D1,D3
000017D2  C67C 0007                932              AND         #seven,D3
000017D6                           933          
000017D6  4EB9 00001A12            934              JSR         printEA
000017DC                           935                  
000017DC  43F9 00002066            936              LEA         newLine, A1           ; Display space
000017E2  103C 000E                937              MOVE.B      #14, D0             ; command for trap call to display message
000017E6  4E4F                     938              TRAP        #15                 ; trap call  
000017E8                           939          
000017E8  6000 F822                940              BRA         LOOP
000017EC                           941                  
000017EC                           942  
000017EC                           943  opNEGL
000017EC                           944  
000017EC  43F9 00002103            945              LEA         dispLong, A1        ; we know that the opcode will be NEG, so load A1 to print message
000017F2  103C 000E                946              MOVE.B      #14, D0             ; command for trap call to display message
000017F6  4E4F                     947              TRAP        #15                 ; trap call
000017F8                           948  
000017F8  43F9 0000206A            949              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
000017FE  103C 000E                950              MOVE.B      #14, D0             ; command for trap call to display message
00001802  4E4F                     951              TRAP        #15                 ; trap call
00001804                           952                  
00001804  4242                     953              CLR         D2                  ; Clear Data register 2
00001806  3401                     954              MOVE        D1,D2               ; Move byte into D2
00001808  E642                     955              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000180A  C47C 0007                956              AND         #seven,D2           ; Stores mode
0000180E                           957          
0000180E  4243                     958              CLR         D3
00001810  3601                     959              MOVE        D1,D3
00001812  C67C 0007                960              AND         #seven,D3
00001816                           961          
00001816  4EB9 00001A12            962              JSR         printEA
0000181C                           963                      
0000181C  43F9 00002066            964              LEA         newLine, A1         ; Display space
00001822  103C 000E                965              MOVE.B      #14, D0             ; command for trap call to display message
00001826  4E4F                     966              TRAP        #15                 ; trap call  
00001828                           967          
00001828  6000 F7E2                968              BRA         LOOP
0000182C                           969          
0000182C                           970  
0000182C                           971  opNEGW
0000182C                           972  
0000182C  43F9 00002100            973              LEA         dispWord, A1        ; we know that the opcode will be NEG, so load A1 to print message
00001832  103C 000E                974              MOVE.B      #14, D0             ; command for trap call to display message
00001836  4E4F                     975              TRAP        #15                 ; trap call
00001838                           976          
00001838  43F9 0000206A            977              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
0000183E  103C 000E                978              MOVE.B      #14, D0             ; command for trap call to display message
00001842  4E4F                     979              TRAP        #15                 ; trap call        
00001844                           980                  
00001844  4242                     981              CLR         D2                  ; Clear Data register 2
00001846  3401                     982              MOVE        D1,D2               ; Move byte into D2
00001848  E642                     983              ASR         #three,D2           ; Shift mode into place and moves mode into place
0000184A  C47C 0007                984              AND         #seven,D2           ; Stores mode
0000184E                           985          
0000184E  4243                     986              CLR         D3
00001850  3601                     987              MOVE        D1,D3
00001852  C67C 0007                988              AND         #seven,D3
00001856                           989          
00001856  4EB9 00001A12            990              JSR         printEA
0000185C                           991              
0000185C  43F9 00002066            992              LEA         newLine, A1           ; Display space
00001862  103C 000E                993              MOVE.B      #14, D0             ; command for trap call to display message
00001866  4E4F                     994              TRAP        #15                 ; trap call  
00001868                           995          
00001868  6000 F7A2                996              BRA         LOOP
0000186C                           997  
0000186C                           998  opRTSJSR
0000186C                           999          
0000186C  1218                    1000              MOVE.B      (A0)+, D1
0000186E                          1001              
0000186E  1401                    1002              MOVE.B      D1,D2               ; copy data over
00001870  B47C 0075               1003              CMP         #117,D2
00001874  6700 0050               1004              BEQ         opRTS
00001878                          1005              
00001878  EC42                    1006              ASR         #six,D2             ; Moving bits over to check if it matches the two static bits in JSR
0000187A  B47C 0002               1007              CMP         #two,D2             ; Checking if it is JSR
0000187E  6700 0006               1008              BEQ         opJSR               ; It is equal, so branch off to opJSR
00001882                          1009  
00001882  6000 07D8               1010              BRA         invalid
00001886                          1011  
00001886                          1012  opJSR
00001886                          1013                        
00001886  43F9 0000209C           1014              LEA         JSRMatch, A1       ; we know that the opcode will be JSR, so load A1 to print message
0000188C  103C 000E               1015              MOVE.B      #14, D0             ; command for trap call to display message
00001890  4E4F                    1016              TRAP        #15                 ; trap call
00001892                          1017              
00001892  43F9 0000206A           1018              LEA         space, A1           ; we know that the opcode will be NEG, so load A1 to print message
00001898  103C 000E               1019              MOVE.B      #14, D0             ; command for trap call to display message
0000189C  4E4F                    1020              TRAP        #15                 ; trap call
0000189E                          1021              
0000189E  4242                    1022              CLR         D2
000018A0  4243                    1023              CLR         D3
000018A2                          1024              
000018A2  1401                    1025              MOVE.B      D1,D2
000018A4  E642                    1026              ASR         #three,D2
000018A6  C47C 0007               1027              AND         #seven,D2
000018AA                          1028              
000018AA  1601                    1029              MOVE.B      D1,D3
000018AC  C67C 0007               1030              AND         #seven,D3
000018B0                          1031              
000018B0  4EB9 00001A12           1032              JSR         printEA
000018B6                          1033              
000018B6  43F9 00002066           1034              LEA         newLine, A1           ; Display space
000018BC  103C 000E               1035              MOVE.B      #14, D0             ; command for trap call to display message
000018C0  4E4F                    1036              TRAP        #15                 ; trap call  
000018C2                          1037              
000018C2  6000 F748               1038              BRA         loop            
000018C6                          1039  opRTS
000018C6                          1040  
000018C6  43F9 00002098           1041              LEA         RTSMatch, A1       ; we know that the opcode will be RTS, so load A1 to print message
000018CC  103C 000E               1042              MOVE.B      #14, D0             ; command for trap call to display message
000018D0  4E4F                    1043              TRAP        #15                 ; trap call
000018D2                          1044              
000018D2  43F9 00002066           1045              LEA         newLine, A1           ; Display space
000018D8  103C 000E               1046              MOVE.B      #14, D0             ; command for trap call to display message
000018DC  4E4F                    1047              TRAP        #15                 ; trap call 
000018DE                          1048              
000018DE  6000 F72C               1049              BRA         loop
000018E2                          1050  
000018E2                          1051  opMOVEMLEA
000018E2  4242                    1052              CLR         D2                  ; Clear D2
000018E4  1401                    1053              MOVE.B      D1,D2               ; Copy byte over
000018E6  C47C 000F               1054              AND         #secNib,D2          ; Check only the second nibble
000018EA  B47C 000C               1055              CMP         #twelve,D2          ; Compare the second nibble to twelve
000018EE  6700 000E               1056              BEQ         opMOVEM             ; If it is twelve, then it is MOVEM
000018F2  B47C 0008               1057              CMP         #eight,D2           ; Compare the second nibble to eight
000018F6  6700 0006               1058              BEQ         opMOVEM             ; If it is eight, then it is also MOVEM
000018FA  6000 001A               1059              BRA         opLEA               ; Otherwise branch to OPLEA and check for invalid in there
000018FE                          1060              
000018FE                          1061  opMOVEM
000018FE                          1062  
000018FE  43F9 00002098           1063              LEA         RTSMatch, A1       ; we know that the opcode will be MOVEM, so load A1 to print message
00001904  103C 000E               1064              MOVE.B      #14, D0             ; command for trap call to display message
00001908  4E4F                    1065              TRAP        #15                 ; trap call
0000190A                          1066              
0000190A  4244                    1067              CLR         D4                  ; Clearing D4 to store dr field
0000190C  1801                    1068              MOVE.B      D1,D4               ; Moving byte to find dr field
0000190E  E444                    1069              ASR         #two,D4             ; Moving dr field to readable spot
00001910  C87C 0001               1070              AND         #one,D4             ; seting everything except dr to 0
00001914                          1071              
00001914  1218                    1072              MOVE.B      (A0)+, D1
00001916                          1073              
00001916                          1074  
00001916                          1075  opLEA
00001916                          1076  
00001916                          1077  ***********************************************************************************************************
00001916                          1078  *
00001916                          1079  *               SUBQ OPCODE
00001916                          1080  *
00001916                          1081  ***********************************************************************************************************
00001916                          1082  
00001916                          1083  opSUBQ      
00001916  43F9 000020AA           1084              LEA         SUBQmatch, A1       ; we know that the opcode will be SUBQ, so load A1 to print message
0000191C  103C 000E               1085              MOVE.B      #14, D0             ; command for trap call to display message
00001920  4E4F                    1086              TRAP        #15                 ; trap call
00001922                          1087  
00001922                          1088  ***********************************************************************************************************
00001922                          1089  *
00001922                          1090  *               BRA OPCODE
00001922                          1091  *
00001922                          1092  ***********************************************************************************************************
00001922                          1093              
00001922  43F9 000020AF           1094  opBRA   LEA         BRAmatch, A1        ; we know that the opcode will be BRA, so load A1 to print message
00001928  103C 000E               1095          MOVE.B      #14, D0             ; command for trap call to display message
0000192C  4E4F                    1096          TRAP        #15                 ; trap call
0000192E                          1097          
0000192E  4242                    1098          CLR         D2
00001930  4243                    1099          CLR         D3      
00001932                          1100  
00001932  43F9 0000206A           1101          LEA         space,A1
00001938  103C 000E               1102          MOVE.B      #14,D0
0000193C  4E4F                    1103          TRAP        #15
0000193E                          1104          
0000193E  143C 0007               1105          MOVE.B      #seven,D2
00001942  1218                    1106          MOVE.B      (A0)+,D1
00001944  4EB9 00001A12           1107          JSR         printEA
0000194A                          1108          
0000194A  43F9 00002066           1109          LEA         newLine, A1           ; create new line
00001950  103C 000E               1110          MOVE.B      #14, D0             ; command for trap call to display message
00001954  4E4F                    1111          TRAP        #15                 ; trap call
00001956                          1112  
00001956  6000 F6B4               1113          BRA         LOOP
0000195A                          1114          
0000195A                          1115          
0000195A  43F9 000020B3           1116  opBCS   LEA         BCSmatch, A1        ; we know that the opcode will be BCS, so load A1 to print message
00001960  103C 000E               1117          MOVE.B      #14, D0             ; command for trap call to display message
00001964  4E4F                    1118          TRAP        #15                 ; trap call
00001966                          1119  
00001966  43F9 000020B7           1120  opBVC   LEA         BVCmatch, A1        ; we know that the opcode will be BVC, so load A1 to print message
0000196C  103C 000E               1121          MOVE.B      #14, D0             ; command for trap call to display message
00001970  4E4F                    1122          TRAP        #15                 ; trap call
00001972                          1123  
00001972  43F9 000020BB           1124  opBGE   LEA         BGEmatch, A1        ; we know that the opcode will be BGE, so load A1 to print message
00001978  103C 000E               1125          MOVE.B      #14, D0             ; command for trap call to display message
0000197C  4E4F                    1126          TRAP        #15                 ; trap call
0000197E                          1127  
0000197E  43F9 000020BF           1128  opBLT   LEA         BLTmatch, A1        ; we know that the opcode will be BLT, so load A1 to print message
00001984  103C 000E               1129          MOVE.B      #14, D0             ; command for trap call to display message
00001988  4E4F                    1130          TRAP        #15                 ; trap call
0000198A                          1131  
0000198A                          1132  ***********************************************************************************************************
0000198A                          1133  *
0000198A                          1134  *               SUB OPCODE
0000198A                          1135  *
0000198A                          1136  ***********************************************************************************************************
0000198A                          1137  
0000198A  43F9 000020CB           1138  opSUB   LEA         SUBmatch, A1        ; we know that the opcode will be SUB, so load A1 to print message
00001990  103C 000E               1139          MOVE.B      #14, D0             ; command for trap call to display message
00001994  4E4F                    1140          TRAP        #15                 ; trap call
00001996                          1141          
00001996                          1142          
00001996                          1143          
00001996  43F9 0000206A           1144          LEA         space,A1
0000199C  103C 000E               1145          MOVE.B      #14,D0
000019A0  4E4F                    1146          TRAP        #15
000019A2                          1147          
000019A2  1218                    1148          MOVE.B      (A0)+,D1
000019A4  1401                    1149          MOVE.B      D1,D2
000019A6  E842                    1150          ASR         #4,D2
000019A8                          1151          
000019A8  4EB9 00001A12           1152          JSR         printEA
000019AE                          1153          
000019AE  43F9 00002066           1154          LEA         newLine,A1
000019B4  103C 000E               1155          MOVE.B      #14,D0
000019B8  4E4F                    1156          TRAP        #15
000019BA                          1157          
000019BA  6000 F650               1158          BRA         LOOP
000019BE                          1159          
000019BE                          1160          
000019BE                          1161          
000019BE  43F9 000020D7           1162  opMULS  LEA         MULSmatch, A1       ; we know that the opcode will be MULS, so load A1 to print message
000019C4  103C 000E               1163          MOVE.B      #14, D0             ; command for trap call to display message
000019C8  4E4F                    1164          TRAP        #15                 ; trap call
000019CA                          1165  
000019CA  43F9 000020F1           1166  opASL   LEA         ASLmatch, A1        ; we know that the opcode will be ASL, so load A1 to print message
000019D0  103C 000E               1167          MOVE.B      #14, D0             ; command for trap call to display message
000019D4  4E4F                    1168          TRAP        #15                 ; trap call
000019D6                          1169  
000019D6  43F9 000020ED           1170  opASR   LEA         ASRmatch, A1        ; we know that the opcode will be ASR, so load A1 to print message
000019DC  103C 000E               1171          MOVE.B      #14, D0             ; command for trap call to display message
000019E0  4E4F                    1172          TRAP        #15                 ; trap call
000019E2                          1173  
000019E2  43F9 000020E9           1174  opLSL   LEA         LSLmatch, A1        ; we know that the opcode will be LSL, so load A1 to print message
000019E8  103C 000E               1175          MOVE.B      #14, D0             ; command for trap call to display message
000019EC  4E4F                    1176          TRAP        #15                 ; trap call
000019EE                          1177  
000019EE  43F9 000020E5           1178  opLSR   LEA         LSRmatch, A1        ; we know that the opcode will be LSR, so load A1 to print message
000019F4  103C 000E               1179          MOVE.B      #14, D0             ; command for trap call to display message
000019F8  4E4F                    1180          TRAP        #15                 ; trap call
000019FA                          1181  
000019FA  43F9 000020F9           1182  opROL   LEA         ROLmatch, A1        ; we know that the opcode will be ROL, so load A1 to print message
00001A00  103C 000E               1183          MOVE.B      #14, D0             ; command for trap call to display message
00001A04  4E4F                    1184          TRAP        #15                 ; trap call
00001A06                          1185  
00001A06  43F9 000020F5           1186  opROR   LEA         RORmatch, A1        ; we know that the opcode will be ROR, so load A1 to print message
00001A0C  103C 000E               1187          MOVE.B      #14, D0             ; command for trap call to display message
00001A10  4E4F                    1188          TRAP        #15                 ; trap call
00001A12                          1189  
00001A12                          1190  
00001A12                          1191  ***********************************************************************************************************
00001A12                          1192  *
00001A12                          1193  *                                           EA Print Check
00001A12                          1194  *
00001A12                          1195  ***********************************************************************************************************
00001A12  48E7 FF7E               1196  printEA     MOVEM.L  D0-D7/A1-A6, -(SP)
00001A16                          1197  
00001A16  B43C 0000               1198              CMP.B       #zero, D2
00001A1A  6700 002E               1199              BEQ         pDataReg
00001A1E  B43C 0001               1200              CMP.B       #one, D2
00001A22  6700 00E6               1201              BEQ         pAddrReg
00001A26  B43C 0002               1202              CMP.B       #two, D2
00001A2A  6700 019E               1203              BEQ         pAddrDir
00001A2E  B43C 0003               1204              CMP.B       #three, D2
00001A32  6700 02C2               1205              BEQ         pAddrPost
00001A36  B43C 0004               1206              CMP.B       #four, D2
00001A3A  6700 0446               1207              BEQ         pAddrDec
00001A3E  B43C 0007               1208              CMP.B       #seven, D2
00001A42  6700 0576               1209              BEQ         pHex
00001A46  6000 0614               1210              BRA         invalid
00001A4A                          1211  
00001A4A                          1212  ***********************************************************************************************************
00001A4A                          1213  * Data Register        
00001A4A  B63C 0000               1214  pDataReg    CMP.B   #zero,D3
00001A4E  6700 003A               1215              BEQ     displayD0
00001A52  B63C 0001               1216              CMP.B   #one,D3
00001A56  6700 0042               1217              BEQ     displayD1
00001A5A  B63C 0002               1218              CMP.B   #two,D3
00001A5E  6700 004A               1219              BEQ     displayD2
00001A62  B63C 0003               1220              CMP.B   #three,D3
00001A66  6700 0052               1221              BEQ     displayD3
00001A6A  B63C 0004               1222              CMP.B   #four,D3
00001A6E  6700 005A               1223              BEQ     displayD4
00001A72  B63C 0005               1224              CMP.B   #five,D3
00001A76  6700 0062               1225              BEQ     displayD5
00001A7A  B63C 0006               1226              CMP.B   #six,D3
00001A7E  6700 006A               1227              BEQ     displayD6
00001A82  B63C 0007               1228              CMP.B   #seven,D3
00001A86  6700 0072               1229              BEQ     displayD7
00001A8A                          1230              
00001A8A  43F9 00002120           1231  displayD0   LEA         dispD0, A1          ; Display space
00001A90  103C 000E               1232              MOVE.B      #14, D0             ; command for trap call to display message
00001A94  4E4F                    1233              TRAP        #15                 ; trap call
00001A96  6000 05C4               1234              BRA         endSUB              ; go to the end of the subroutine
00001A9A                          1235              
00001A9A  43F9 00002123           1236  displayD1   LEA         dispD1, A1          ; Display space
00001AA0  103C 000E               1237              MOVE.B      #14, D0             ; command for trap call to display message
00001AA4  4E4F                    1238              TRAP        #15                 ; trap call
00001AA6  6000 05B4               1239              BRA         endSUB              ; go to the end of the subroutine
00001AAA                          1240  
00001AAA  43F9 00002126           1241  displayD2   LEA         dispD2, A1          ; Display space
00001AB0  103C 000E               1242              MOVE.B      #14, D0             ; command for trap call to display message
00001AB4  4E4F                    1243              TRAP        #15                 ; trap call
00001AB6  6000 05A4               1244              BRA         endSUB              ; go to the end of the subroutine
00001ABA                          1245  
00001ABA  43F9 00002129           1246  displayD3   LEA         dispD3, A1          ; Display space
00001AC0  103C 000E               1247              MOVE.B      #14, D0             ; command for trap call to display message
00001AC4  4E4F                    1248              TRAP        #15                 ; trap call
00001AC6  6000 0594               1249              BRA         endSUB              ; go to the end of the subroutine
00001ACA                          1250  
00001ACA  43F9 0000212C           1251  displayD4   LEA         dispD4, A1          ; Display space
00001AD0  103C 000E               1252              MOVE.B      #14, D0             ; command for trap call to display message
00001AD4  4E4F                    1253              TRAP        #15                 ; trap call
00001AD6  6000 0584               1254              BRA         endSUB              ; go to the end of the subroutine
00001ADA                          1255  
00001ADA  43F9 0000212F           1256  displayD5   LEA         dispD5, A1          ; Display space
00001AE0  103C 000E               1257              MOVE.B      #14, D0             ; command for trap call to display message
00001AE4  4E4F                    1258              TRAP        #15                 ; trap call
00001AE6  6000 0574               1259              BRA         endSUB              ; go to the end of the subroutine
00001AEA                          1260  
00001AEA  43F9 00002132           1261  displayD6   LEA         dispD6, A1          ; Display space
00001AF0  103C 000E               1262              MOVE.B      #14, D0             ; command for trap call to display message
00001AF4  4E4F                    1263              TRAP        #15                 ; trap call
00001AF6  6000 0564               1264              BRA         endSUB              ; go to the end of the subroutine
00001AFA                          1265  
00001AFA  43F9 00002135           1266  displayD7   LEA         dispD7, A1          ; Display space
00001B00  103C 000E               1267              MOVE.B      #14, D0             ; command for trap call to display message
00001B04  4E4F                    1268              TRAP        #15                 ; trap call
00001B06  6000 0554               1269              BRA         endSUB              ; go to the end of the subroutine
00001B0A                          1270  ***********************************************************************************************************
00001B0A                          1271  * Address Register
00001B0A  B63C 0000               1272  pAddrReg    CMP.B   #zero,D3
00001B0E  6700 003A               1273              BEQ     displayA0
00001B12  B63C 0001               1274              CMP.B   #one,D3
00001B16  6700 0042               1275              BEQ     displayA1
00001B1A  B63C 0002               1276              CMP.B   #two,D3
00001B1E  6700 004A               1277              BEQ     displayA2
00001B22  B63C 0003               1278              CMP.B   #three,D3
00001B26  6700 0052               1279              BEQ     displayA3
00001B2A  B63C 0004               1280              CMP.B   #four,D3
00001B2E  6700 005A               1281              BEQ     displayA4
00001B32  B63C 0005               1282              CMP.B   #five,D3
00001B36  6700 0062               1283              BEQ     displayA5
00001B3A  B63C 0006               1284              CMP.B   #six,D3
00001B3E  6700 006A               1285              BEQ     displayA6
00001B42  B63C 0007               1286              CMP.B   #seven,D3
00001B46  6700 0072               1287              BEQ     displayA7
00001B4A                          1288              
00001B4A  43F9 00002106           1289  displayA0   LEA         dispA0, A1          ; Display space
00001B50  103C 000E               1290              MOVE.B      #14, D0             ; command for trap call to display message
00001B54  4E4F                    1291              TRAP        #15                 ; trap call
00001B56  6000 0504               1292              BRA         endSUB              ; go to the end of the subroutine
00001B5A                          1293              
00001B5A  43F9 00002109           1294  displayA1   LEA         dispA1, A1          ; Display space
00001B60  103C 000E               1295              MOVE.B      #14, D0             ; command for trap call to display message
00001B64  4E4F                    1296              TRAP        #15                 ; trap call
00001B66  6000 04F4               1297              BRA         endSUB              ; go to the end of the subroutine
00001B6A                          1298  
00001B6A  43F9 0000210C           1299  displayA2   LEA         dispA2, A1          ; Display space
00001B70  103C 000E               1300              MOVE.B      #14, D0             ; command for trap call to display message
00001B74  4E4F                    1301              TRAP        #15                 ; trap call
00001B76  6000 04E4               1302              BRA         endSUB              ; go to the end of the subroutine
00001B7A                          1303  
00001B7A  43F9 0000210F           1304  displayA3   LEA         dispA3, A1          ; Display space
00001B80  103C 000E               1305              MOVE.B      #14, D0             ; command for trap call to display message
00001B84  4E4F                    1306              TRAP        #15                 ; trap call
00001B86  6000 04D4               1307              BRA         endSUB              ; go to the end of the subroutine
00001B8A                          1308  
00001B8A  43F9 00002112           1309  displayA4   LEA         dispA4, A1          ; Display space
00001B90  103C 000E               1310              MOVE.B      #14, D0             ; command for trap call to display message
00001B94  4E4F                    1311              TRAP        #15                 ; trap call
00001B96  6000 04C4               1312              BRA         endSUB              ; go to the end of the subroutine
00001B9A                          1313  
00001B9A  43F9 00002115           1314  displayA5   LEA         dispA5, A1          ; Display space
00001BA0  103C 000E               1315              MOVE.B      #14, D0             ; command for trap call to display message
00001BA4  4E4F                    1316              TRAP        #15                 ; trap call
00001BA6  6000 04B4               1317              BRA         endSUB              ; go to the end of the subroutine
00001BAA                          1318  
00001BAA  43F9 00002118           1319  displayA6   LEA         dispA6, A1          ; Display space
00001BB0  103C 000E               1320              MOVE.B      #14, D0             ; command for trap call to display message
00001BB4  4E4F                    1321              TRAP        #15                 ; trap call
00001BB6  6000 04A4               1322              BRA         endSUB              ; go to the end of the subroutine
00001BBA                          1323  
00001BBA  43F9 0000211B           1324  displayA7   LEA         dispA7, A1          ; Display space
00001BC0  103C 000E               1325              MOVE.B      #14, D0             ; command for trap call to display message
00001BC4  4E4F                    1326              TRAP        #15                 ; trap call
00001BC6  6000 0494               1327              BRA         endSUB              ; go to the end of the subroutine
00001BCA                          1328  
00001BCA                          1329  ***********************************************************************************************************
00001BCA                          1330  * Address Register Direct
00001BCA                          1331  
00001BCA  43F9 00002073           1332  pAddrDir    LEA         opPer, A1           ; Display space
00001BD0  103C 000E               1333              MOVE.B      #14, D0             ; command for trap call to display message
00001BD4  4E4F                    1334              TRAP        #15                 ; trap call
00001BD6                          1335              
00001BD6  B63C 0000               1336              CMP.B   #zero,D3
00001BDA  6700 003A               1337              BEQ     displayA0A
00001BDE  B63C 0001               1338              CMP.B   #one,D3
00001BE2  6700 004E               1339              BEQ     displayA1A
00001BE6  B63C 0002               1340              CMP.B   #two,D3
00001BEA  6700 0062               1341              BEQ     displayA2A
00001BEE  B63C 0003               1342              CMP.B   #three,D3
00001BF2  6700 0076               1343              BEQ     displayA3A
00001BF6  B63C 0004               1344              CMP.B   #four,D3
00001BFA  6700 008A               1345              BEQ     displayA4A
00001BFE  B63C 0005               1346              CMP.B   #five,D3
00001C02  6700 009E               1347              BEQ     displayA5A
00001C06  B63C 0006               1348              CMP.B   #six,D3
00001C0A  6700 00B2               1349              BEQ     displayA6A
00001C0E  B63C 0007               1350              CMP.B   #seven,D3
00001C12  6700 00C6               1351              BEQ     displayA7A
00001C16                          1352              
00001C16  43F9 00002106           1353  displayA0A  LEA         dispA0, A1          ; Display space
00001C1C  103C 000E               1354              MOVE.B      #14, D0             ; command for trap call to display message
00001C20  4E4F                    1355              TRAP        #15                 ; trap call
00001C22  43F9 00002075           1356              LEA         clPer, A1           ; Display space
00001C28  103C 000E               1357              MOVE.B      #14, D0             ; command for trap call to display message
00001C2C  4E4F                    1358              TRAP        #15                 ; trap call
00001C2E  6000 042C               1359              BRA         endSUB              ; go to the end of the subroutine
00001C32                          1360              
00001C32  43F9 00002109           1361  displayA1A  LEA         dispA1, A1          ; Display space
00001C38  103C 000E               1362              MOVE.B      #14, D0             ; command for trap call to display message
00001C3C  4E4F                    1363              TRAP        #15                 ; trap call
00001C3E  43F9 00002075           1364              LEA         clPer, A1           ; Display space
00001C44  103C 000E               1365              MOVE.B      #14, D0             ; command for trap call to display message
00001C48  4E4F                    1366              TRAP        #15                 ; trap call
00001C4A  6000 0410               1367              BRA         endSUB              ; go to the end of the subroutine
00001C4E                          1368  
00001C4E  43F9 0000210C           1369  displayA2A  LEA         dispA2, A1          ; Display space
00001C54  103C 000E               1370              MOVE.B      #14, D0             ; command for trap call to display message
00001C58  4E4F                    1371              TRAP        #15                 ; trap call
00001C5A  43F9 00002075           1372              LEA         clPer, A1           ; Display space
00001C60  103C 000E               1373              MOVE.B      #14, D0             ; command for trap call to display message
00001C64  4E4F                    1374              TRAP        #15                 ; trap call
00001C66  6000 03F4               1375              BRA         endSUB              ; go to the end of the subroutine
00001C6A                          1376  
00001C6A  43F9 0000210F           1377  displayA3A  LEA         dispA3, A1          ; Display space
00001C70  103C 000E               1378              MOVE.B      #14, D0             ; command for trap call to display message
00001C74  4E4F                    1379              TRAP        #15                 ; trap call
00001C76  43F9 00002075           1380              LEA         clPer, A1           ; Display space
00001C7C  103C 000E               1381              MOVE.B      #14, D0             ; command for trap call to display message
00001C80  4E4F                    1382              TRAP        #15                 ; trap call
00001C82  6000 03D8               1383              BRA         endSUB              ; go to the end of the subroutine
00001C86                          1384  
00001C86  43F9 00002112           1385  displayA4A  LEA         dispA4, A1          ; Display space
00001C8C  103C 000E               1386              MOVE.B      #14, D0             ; command for trap call to display message
00001C90  4E4F                    1387              TRAP        #15                 ; trap call
00001C92  43F9 00002075           1388              LEA         clPer, A1           ; Display space
00001C98  103C 000E               1389              MOVE.B      #14, D0             ; command for trap call to display message
00001C9C  4E4F                    1390              TRAP        #15                 ; trap call
00001C9E  6000 03BC               1391              BRA         endSUB              ; go to the end of the subroutine
00001CA2                          1392  
00001CA2  43F9 00002115           1393  displayA5A  LEA         dispA5, A1          ; Display space
00001CA8  103C 000E               1394              MOVE.B      #14, D0             ; command for trap call to display message
00001CAC  4E4F                    1395              TRAP        #15                 ; trap call
00001CAE  43F9 00002075           1396              LEA         clPer, A1           ; Display space
00001CB4  103C 000E               1397              MOVE.B      #14, D0             ; command for trap call to display message
00001CB8  4E4F                    1398              TRAP        #15                 ; trap call
00001CBA  6000 03A0               1399              BRA         endSUB              ; go to the end of the subroutine
00001CBE                          1400  
00001CBE  43F9 00002118           1401  displayA6A  LEA         dispA6, A1          ; Display space
00001CC4  103C 000E               1402              MOVE.B      #14, D0             ; command for trap call to display message
00001CC8  4E4F                    1403              TRAP        #15                 ; trap call
00001CCA  43F9 00002075           1404              LEA         clPer, A1           ; Display space
00001CD0  103C 000E               1405              MOVE.B      #14, D0             ; command for trap call to display message
00001CD4  4E4F                    1406              TRAP        #15                 ; trap call
00001CD6  6000 0384               1407              BRA         endSUB              ; go to the end of the subroutine
00001CDA                          1408  
00001CDA  43F9 0000211B           1409  displayA7A  LEA         dispA7, A1          ; Display space
00001CE0  103C 000E               1410              MOVE.B      #14, D0             ; command for trap call to display message
00001CE4  4E4F                    1411              TRAP        #15                 ; trap call
00001CE6  43F9 00002075           1412              LEA         clPer, A1           ; Display space
00001CEC  103C 000E               1413              MOVE.B      #14, D0             ; command for trap call to display message
00001CF0  4E4F                    1414              TRAP        #15                 ; trap call
00001CF2  6000 0368               1415              BRA         endSUB              ; go to the end of the subroutine
00001CF6                          1416              
00001CF6                          1417  ***********************************************************************************************************
00001CF6                          1418  * Addr Postincrement
00001CF6                          1419              
00001CF6  43F9 00002073           1420  pAddrPost   LEA         opPer, A1           ; Display space
00001CFC  103C 000E               1421              MOVE.B      #14, D0             ; command for trap call to display message
00001D00  4E4F                    1422              TRAP        #15                 ; trap call
00001D02                          1423              
00001D02  B63C 0000               1424              CMP.B   #zero,D3
00001D06  6700 003A               1425              BEQ     displayA0P
00001D0A  B63C 0001               1426              CMP.B   #one,D3
00001D0E  6700 005A               1427              BEQ     displayA1P
00001D12  B63C 0002               1428              CMP.B   #two,D3
00001D16  6700 007A               1429              BEQ     displayA2P
00001D1A  B63C 0003               1430              CMP.B   #three,D3
00001D1E  6700 009A               1431              BEQ     displayA3P
00001D22  B63C 0004               1432              CMP.B   #four,D3
00001D26  6700 00BA               1433              BEQ     displayA4P
00001D2A  B63C 0005               1434              CMP.B   #five,D3
00001D2E  6700 00DA               1435              BEQ     displayA5P
00001D32  B63C 0006               1436              CMP.B   #six,D3
00001D36  6700 00FA               1437              BEQ     displayA6P
00001D3A  B63C 0007               1438              CMP.B   #seven,D3
00001D3E  6700 011A               1439              BEQ     displayA7P
00001D42                          1440              
00001D42  43F9 00002106           1441  displayA0P  LEA         dispA0, A1          ; Display space
00001D48  103C 000E               1442              MOVE.B      #14, D0             ; command for trap call to display message
00001D4C  4E4F                    1443              TRAP        #15                 ; trap call
00001D4E  43F9 00002075           1444              LEA         clPer, A1           ; Display space
00001D54  103C 000E               1445              MOVE.B      #14, D0             ; command for trap call to display message
00001D58  4E4F                    1446              TRAP        #15                 ; trap call
00001D5A  43F9 00002079           1447              LEA         inc, A1             ; Display space
00001D60  103C 000E               1448              MOVE.B      #14, D0             ; command for trap call to display message
00001D64  4E4F                    1449              TRAP        #15                 ; trap call
00001D66  6000 02F4               1450              BRA         endSUB              ; go to the end of the subroutine
00001D6A                          1451              
00001D6A  43F9 00002109           1452  displayA1P  LEA         dispA1, A1          ; Display space
00001D70  103C 000E               1453              MOVE.B      #14, D0             ; command for trap call to display message
00001D74  4E4F                    1454              TRAP        #15                 ; trap call
00001D76  43F9 00002075           1455              LEA         clPer, A1           ; Display space
00001D7C  103C 000E               1456              MOVE.B      #14, D0             ; command for trap call to display message
00001D80  4E4F                    1457              TRAP        #15                 ; trap call
00001D82  43F9 00002079           1458              LEA         inc, A1             ; Display space
00001D88  103C 000E               1459              MOVE.B      #14, D0             ; command for trap call to display message
00001D8C  4E4F                    1460              TRAP        #15                 ; trap call
00001D8E  6000 02CC               1461              BRA         endSUB              ; go to the end of the subroutine
00001D92                          1462  
00001D92  43F9 0000210C           1463  displayA2P  LEA         dispA2, A1          ; Display space
00001D98  103C 000E               1464              MOVE.B      #14, D0             ; command for trap call to display message
00001D9C  4E4F                    1465              TRAP        #15                 ; trap call
00001D9E  43F9 00002075           1466              LEA         clPer, A1           ; Display space
00001DA4  103C 000E               1467              MOVE.B      #14, D0             ; command for trap call to display message
00001DA8  4E4F                    1468              TRAP        #15                 ; trap call
00001DAA  43F9 00002079           1469              LEA         inc, A1             ; Display space
00001DB0  103C 000E               1470              MOVE.B      #14, D0             ; command for trap call to display message
00001DB4  4E4F                    1471              TRAP        #15                 ; trap call
00001DB6  6000 02A4               1472              BRA         endSUB              ; go to the end of the subroutine
00001DBA                          1473  
00001DBA  43F9 0000210F           1474  displayA3P  LEA         dispA3, A1          ; Display space
00001DC0  103C 000E               1475              MOVE.B      #14, D0             ; command for trap call to display message
00001DC4  4E4F                    1476              TRAP        #15                 ; trap call
00001DC6  43F9 00002075           1477              LEA         clPer, A1           ; Display space
00001DCC  103C 000E               1478              MOVE.B      #14, D0             ; command for trap call to display message
00001DD0  4E4F                    1479              TRAP        #15                 ; trap call
00001DD2  43F9 00002079           1480              LEA         inc, A1             ; Display space
00001DD8  103C 000E               1481              MOVE.B      #14, D0             ; command for trap call to display message
00001DDC  4E4F                    1482              TRAP        #15                 ; trap call
00001DDE  6000 027C               1483              BRA         endSUB              ; go to the end of the subroutine
00001DE2                          1484  
00001DE2  43F9 00002112           1485  displayA4P  LEA         dispA4, A1          ; Display space
00001DE8  103C 000E               1486              MOVE.B      #14, D0             ; command for trap call to display message
00001DEC  4E4F                    1487              TRAP        #15                 ; trap call
00001DEE  43F9 00002075           1488              LEA         clPer, A1           ; Display space
00001DF4  103C 000E               1489              MOVE.B      #14, D0             ; command for trap call to display message
00001DF8  4E4F                    1490              TRAP        #15                 ; trap call
00001DFA  43F9 00002079           1491              LEA         inc, A1             ; Display space
00001E00  103C 000E               1492              MOVE.B      #14, D0             ; command for trap call to display message
00001E04  4E4F                    1493              TRAP        #15                 ; trap call
00001E06  6000 0254               1494              BRA         endSUB              ; go to the end of the subroutine
00001E0A                          1495  
00001E0A  43F9 00002115           1496  displayA5P  LEA         dispA5, A1          ; Display space
00001E10  103C 000E               1497              MOVE.B      #14, D0             ; command for trap call to display message
00001E14  4E4F                    1498              TRAP        #15                 ; trap call
00001E16  43F9 00002075           1499              LEA         clPer, A1           ; Display space
00001E1C  103C 000E               1500              MOVE.B      #14, D0             ; command for trap call to display message
00001E20  4E4F                    1501              TRAP        #15                 ; trap call
00001E22  43F9 00002079           1502              LEA         inc, A1             ; Display space
00001E28  103C 000E               1503              MOVE.B      #14, D0             ; command for trap call to display message
00001E2C  4E4F                    1504              TRAP        #15                 ; trap call
00001E2E  6000 022C               1505              BRA         endSUB              ; go to the end of the subroutine
00001E32                          1506  
00001E32  43F9 00002118           1507  displayA6P  LEA         dispA6, A1          ; Display space
00001E38  103C 000E               1508              MOVE.B      #14, D0             ; command for trap call to display message
00001E3C  4E4F                    1509              TRAP        #15                 ; trap call
00001E3E  43F9 00002075           1510              LEA         clPer, A1           ; Display space
00001E44  103C 000E               1511              MOVE.B      #14, D0             ; command for trap call to display message
00001E48  4E4F                    1512              TRAP        #15                 ; trap call
00001E4A  43F9 00002079           1513              LEA         inc, A1             ; Display space
00001E50  103C 000E               1514              MOVE.B      #14, D0             ; command for trap call to display message
00001E54  4E4F                    1515              TRAP        #15                 ; trap call
00001E56  6000 0204               1516              BRA         endSUB              ; go to the end of the subroutine
00001E5A                          1517  
00001E5A  43F9 0000211B           1518  displayA7P  LEA         dispA7, A1          ; Display space
00001E60  103C 000E               1519              MOVE.B      #14, D0             ; command for trap call to display message
00001E64  4E4F                    1520              TRAP        #15                 ; trap call
00001E66  43F9 00002075           1521              LEA         clPer, A1           ; Display space
00001E6C  103C 000E               1522              MOVE.B      #14, D0             ; command for trap call to display message
00001E70  4E4F                    1523              TRAP        #15                 ; trap call
00001E72  43F9 00002079           1524              LEA         inc, A1             ; Display space
00001E78  103C 000E               1525              MOVE.B      #14, D0             ; command for trap call to display message
00001E7C  4E4F                    1526              TRAP        #15                 ; trap call
00001E7E  6000 01DC               1527              BRA         endSUB              ; go to the end of the subroutine
00001E82                          1528  
00001E82                          1529  ***********************************************************************************************************
00001E82                          1530  * Addr Postdecrement
00001E82                          1531  
00001E82  43F9 00002077           1532  pAddrDec    LEA         dec, A1             ; Display space
00001E88  103C 000E               1533              MOVE.B      #14, D0             ; command for trap call to display message
00001E8C  4E4F                    1534              TRAP        #15                 ; trap call
00001E8E                          1535              
00001E8E  43F9 00002073           1536              LEA         opPer, A1           ; Display space
00001E94  103C 000E               1537              MOVE.B      #14, D0             ; command for trap call to display message
00001E98  4E4F                    1538              TRAP        #15                 ; trap call
00001E9A                          1539              
00001E9A  B63C 0000               1540              CMP.B   #zero,D3
00001E9E  6700 003A               1541              BEQ     displayA0D
00001EA2  B63C 0001               1542              CMP.B   #one,D3
00001EA6  6700 004E               1543              BEQ     displayA1D
00001EAA  B63C 0002               1544              CMP.B   #two,D3
00001EAE  6700 0062               1545              BEQ     displayA2D
00001EB2  B63C 0003               1546              CMP.B   #three,D3
00001EB6  6700 0076               1547              BEQ     displayA3D
00001EBA  B63C 0004               1548              CMP.B   #four,D3
00001EBE  6700 008A               1549              BEQ     displayA4D
00001EC2  B63C 0005               1550              CMP.B   #five,D3
00001EC6  6700 009E               1551              BEQ     displayA5D
00001ECA  B63C 0006               1552              CMP.B   #six,D3
00001ECE  6700 00B2               1553              BEQ     displayA6D
00001ED2  B63C 0007               1554              CMP.B   #seven,D3
00001ED6  6700 00C6               1555              BEQ     displayA7D
00001EDA                          1556              
00001EDA  43F9 00002106           1557  displayA0D  LEA         dispA0, A1          ; Display space
00001EE0  103C 000E               1558              MOVE.B      #14, D0             ; command for trap call to display message
00001EE4  4E4F                    1559              TRAP        #15                 ; trap call
00001EE6  43F9 00002075           1560              LEA         clPer, A1           ; Display space
00001EEC  103C 000E               1561              MOVE.B      #14, D0             ; command for trap call to display message
00001EF0  4E4F                    1562              TRAP        #15                 ; trap call
00001EF2  6000 0168               1563              BRA         endSUB              ; go to the end of the subroutine
00001EF6                          1564              
00001EF6  43F9 00002109           1565  displayA1D  LEA         dispA1, A1          ; Display space
00001EFC  103C 000E               1566              MOVE.B      #14, D0             ; command for trap call to display message
00001F00  4E4F                    1567              TRAP        #15                 ; trap call
00001F02  43F9 00002075           1568              LEA         clPer, A1           ; Display space
00001F08  103C 000E               1569              MOVE.B      #14, D0             ; command for trap call to display message
00001F0C  4E4F                    1570              TRAP        #15                 ; trap call
00001F0E  6000 014C               1571              BRA         endSUB              ; go to the end of the subroutine
00001F12                          1572  
00001F12  43F9 0000210C           1573  displayA2D  LEA         dispA2, A1          ; Display space
00001F18  103C 000E               1574              MOVE.B      #14, D0             ; command for trap call to display message
00001F1C  4E4F                    1575              TRAP        #15                 ; trap call
00001F1E  43F9 00002075           1576              LEA         clPer, A1           ; Display space
00001F24  103C 000E               1577              MOVE.B      #14, D0             ; command for trap call to display message
00001F28  4E4F                    1578              TRAP        #15                 ; trap call
00001F2A  6000 0130               1579              BRA         endSUB              ; go to the end of the subroutine
00001F2E                          1580  
00001F2E  43F9 0000210F           1581  displayA3D  LEA         dispA3, A1          ; Display space
00001F34  103C 000E               1582              MOVE.B      #14, D0             ; command for trap call to display message
00001F38  4E4F                    1583              TRAP        #15                 ; trap call
00001F3A  43F9 00002075           1584              LEA         clPer, A1           ; Display space
00001F40  103C 000E               1585              MOVE.B      #14, D0             ; command for trap call to display message
00001F44  4E4F                    1586              TRAP        #15                 ; trap call
00001F46  6000 0114               1587              BRA         endSUB              ; go to the end of the subroutine
00001F4A                          1588  
00001F4A  43F9 00002112           1589  displayA4D  LEA         dispA4, A1          ; Display space
00001F50  103C 000E               1590              MOVE.B      #14, D0             ; command for trap call to display message
00001F54  4E4F                    1591              TRAP        #15                 ; trap call
00001F56  43F9 00002075           1592              LEA         clPer, A1           ; Display space
00001F5C  103C 000E               1593              MOVE.B      #14, D0             ; command for trap call to display message
00001F60  4E4F                    1594              TRAP        #15                 ; trap call
00001F62  6000 00F8               1595              BRA         endSUB              ; go to the end of the subroutine
00001F66                          1596  
00001F66  43F9 00002115           1597  displayA5D  LEA         dispA5, A1          ; Display space
00001F6C  103C 000E               1598              MOVE.B      #14, D0             ; command for trap call to display message
00001F70  4E4F                    1599              TRAP        #15                 ; trap call
00001F72  43F9 00002075           1600              LEA         clPer, A1           ; Display space
00001F78  103C 000E               1601              MOVE.B      #14, D0             ; command for trap call to display message
00001F7C  4E4F                    1602              TRAP        #15                 ; trap call
00001F7E  6000 00DC               1603              BRA         endSUB              ; go to the end of the subroutine
00001F82                          1604  
00001F82  43F9 00002118           1605  displayA6D  LEA         dispA6, A1          ; Display space
00001F88  103C 000E               1606              MOVE.B      #14, D0             ; command for trap call to display message
00001F8C  4E4F                    1607              TRAP        #15                 ; trap call
00001F8E  43F9 00002075           1608              LEA         clPer, A1           ; Display space
00001F94  103C 000E               1609              MOVE.B      #14, D0             ; command for trap call to display message
00001F98  4E4F                    1610              TRAP        #15                 ; trap call
00001F9A  6000 00C0               1611              BRA         endSUB              ; go to the end of the subroutine
00001F9E                          1612  
00001F9E  43F9 0000211B           1613  displayA7D  LEA         dispA7, A1          ; Display space
00001FA4  103C 000E               1614              MOVE.B      #14, D0             ; command for trap call to display message
00001FA8  4E4F                    1615              TRAP        #15                 ; trap call
00001FAA  43F9 00002075           1616              LEA         clPer, A1           ; Display space
00001FB0  103C 000E               1617              MOVE.B      #14, D0             ; command for trap call to display message
00001FB4  4E4F                    1618              TRAP        #15                 ; trap call
00001FB6  6000 00A4               1619              BRA         endSUB              ; go to the end of the subroutine
00001FBA                          1620  
00001FBA                          1621  
00001FBA                          1622  ***********************************************************************************************************
00001FBA                          1623  * Absolute Address
00001FBA  B63C 0000               1624  pHex        CMP.B       #zero, D3
00001FBE  6700 0012               1625              BEQ         AbsShort
00001FC2  B63C 0001               1626              CMP.B       #one, D3
00001FC6  6700 003C               1627              BEQ         AbsLong
00001FCA  B63C 0004               1628              CMP.B       #four, D3
00001FCE  6700 0066               1629              BEQ         DispImm
00001FD2                          1630              
00001FD2  43F9 00002073           1631  AbsShort    LEA         opPer, A1           ; Display space
00001FD8  103C 000E               1632              MOVE.B      #14, D0             ; command for trap call to display message
00001FDC  4E4F                    1633              TRAP        #15                 ; trap call
00001FDE                          1634              
00001FDE  43F9 0000206F           1635              LEA         dispHex, A1         ; Display space
00001FE4  103C 000E               1636              MOVE.B      #14, D0             ; command for trap call to display message
00001FE8  4E4F                    1637              TRAP        #15                 ; trap call
00001FEA                          1638              
00001FEA  4241                    1639              CLR         D1
00001FEC  3218                    1640              MOVE.W      (A0)+, D1
00001FEE                          1641              
00001FEE  103C 0003               1642              MOVE.B      #3, D0
00001FF2  4E4F                    1643              TRAP        #15
00001FF4                          1644              
00001FF4  43F9 00002075           1645              LEA         clPer, A1           ; Display space
00001FFA  103C 000E               1646              MOVE.B      #14, D0             ; command for trap call to display message
00001FFE  4E4F                    1647              TRAP        #15                 ; trap call
00002000                          1648              
00002000  6000 005A               1649              BRA         endSub
00002004                          1650              
00002004  43F9 00002073           1651  AbsLong     LEA         opPer, A1           ; Display space
0000200A  103C 000E               1652              MOVE.B      #14, D0             ; command for trap call to display message
0000200E  4E4F                    1653              TRAP        #15                 ; trap call
00002010                          1654              
00002010  43F9 0000206F           1655              LEA         dispHex, A1         ; Display space
00002016  103C 000E               1656              MOVE.B      #14, D0             ; command for trap call to display message
0000201A  4E4F                    1657              TRAP        #15                 ; trap call
0000201C                          1658              
0000201C  4241                    1659              CLR         D1
0000201E  2218                    1660              MOVE.L      (A0)+, D1
00002020                          1661              
00002020  103C 0003               1662              MOVE.B      #3, D0
00002024  4E4F                    1663              TRAP        #15
00002026                          1664              
00002026  43F9 00002075           1665              LEA         clPer, A1           ; Display space
0000202C  103C 000E               1666              MOVE.B      #14, D0             ; command for trap call to display message
00002030  4E4F                    1667              TRAP        #15                 ; trap call
00002032                          1668              
00002032  6000 0028               1669              BRA         endSub
00002036                          1670  
00002036  43F9 0000206D           1671  DispImm     LEA         hashTag, A1         ; Display space
0000203C  103C 000E               1672              MOVE.B      #14, D0             ; command for trap call to display message
00002040  4E4F                    1673              TRAP        #15                 ; trap call
00002042                          1674              
00002042  4241                    1675              CLR         D1
00002044  3218                    1676              MOVE.W      (A0)+, D1
00002046                          1677  
00002046  43F9 0000206F           1678              LEA         dispHex, A1         ; Display space
0000204C  103C 000E               1679              MOVE.B      #14, D0             ; command for trap call to display message
00002050  4E4F                    1680              TRAP        #15                 ; trap call
00002052                          1681              
00002052  103C 0003               1682              MOVE.B      #3, D0
00002056  4E4F                    1683              TRAP        #15
00002058                          1684  
00002058  6000 0002               1685              BRA         endSub
0000205C                          1686  
0000205C                          1687  invalid
0000205C                          1688  
0000205C                          1689  endSUB
0000205C                          1690          
0000205C  4CDF 7EFF               1691          MOVEM.L  (SP)+, D0-D7/A1-A6
00002060  4E75                    1692          RTS
00002062                          1693  
00002062                          1694  ***********************************************************************************************************
00002062                          1695  ***********************************************************************************************************
00002062                          1696  ***********************************************************************************************************
00002062                          1697  
00002062                          1698  printInvalid
00002062                          1699  endPROG    
00002062                          1700  
00002062  FFFF FFFF               1701      SIMHALT                             ; halt simulator
00002066                          1702  
00002066= 20 0D 0A 00             1703  newLine     DC.B    ' ', CR, LF, 0
0000206A= 20 20 00                1704  space       DC.B    '  ', 0
0000206D                          1705  
0000206D= 23 00                   1706  hashTag     DC.B    '#', 0
0000206F= 24 00                   1707  dispHex     DC.B    '$', 0
00002071= 2C 00                   1708  comma       DC.B    ',', 0
00002073                          1709  
00002073= 28 00                   1710  opPer       DC.B    '(', 0
00002075= 29 00                   1711  clPer       DC.B    ')', 0
00002077= 2D 00                   1712  dec         DC.B    '-', 0
00002079= 2B 00                   1713  inc         DC.B    '+', 0
0000207B                          1714  
0000207B= 4F 52 49 00             1715  ORImatch    DC.B    'ORI', 0
0000207F= 43 4D 50 49 00          1716  CMPImatch   DC.B    'CMPI', 0
00002084= 42 43 4C 52 00          1717  BCLRmatch   DC.B    'BCLR', 0
00002089= 4D 4F 56 45 00          1718  MOVEmatch   DC.B    'MOVE', 0
0000208E= 4D 4F 56 45 41 00       1719  MOVEAmatch  DC.B    'MOVEA', 0
00002094= 4E 45 47 00             1720  NEGmatch    DC.B    'NEG', 0
00002098= 52 54 53 00             1721  RTSmatch    DC.B    'RTS', 0
0000209C= 4A 53 52 00             1722  JSRmatch    DC.B    'JSR', 0
000020A0= 4D 4F 56 45 4D 00       1723  MOVEMmatch  DC.B    'MOVEM', 0
000020A6= 4C 45 41 00             1724  LEAmatch    DC.B    'LEA', 0
000020AA= 53 55 42 51 00          1725  SUBQmatch   DC.B    'SUBQ', 0
000020AF= 42 52 41 00             1726  BRAmatch    DC.B    'BRA', 0
000020B3= 42 43 53 00             1727  BCSmatch    DC.B    'BCS', 0
000020B7= 42 56 43 00             1728  BVCmatch    DC.B    'BVC', 0
000020BB= 42 47 45 00             1729  BGEmatch    DC.B    'BGE', 0
000020BF= 42 4C 54 00             1730  BLTmatch    DC.B    'BLT', 0
000020C3= 44 49 56 53 00          1731  DIVSmatch   DC.B    'DIVS', 0
000020C8= 4F 52 00                1732  ORmatch     DC.B    'OR', 0
000020CB= 53 55 42 00             1733  SUBmatch    DC.B    'SUB', 0
000020CF= 45 4F 52 00             1734  EORmatch    DC.B    'EOR', 0
000020D3= 43 4D 50 00             1735  CMPmatch    DC.B    'CMP', 0
000020D7= 4D 55 4C 53 00          1736  MULSmatch   DC.B    'MULS', 0
000020DC= 41 44 44 00             1737  ADDmatch    DC.B    'ADD', 0
000020E0= 41 44 44 41 00          1738  ADDAmatch   DC.B    'ADDA', 0
000020E5= 4C 53 52 00             1739  LSRmatch    DC.B    'LSR', 0
000020E9= 4C 53 4C 00             1740  LSLmatch    DC.B    'LSL', 0
000020ED= 41 53 52 00             1741  ASRmatch    DC.B    'ASR', 0
000020F1= 41 53 4C 00             1742  ASLmatch    DC.B    'ASL', 0
000020F5= 52 4F 52 00             1743  RORmatch    DC.B    'ROR', 0
000020F9= 52 4F 4C 00             1744  ROLmatch    DC.B    'ROL', 0
000020FD                          1745   
000020FD= 2E 42 00                1746  dispByte    DC.B    '.B', 0
00002100= 2E 57 00                1747  dispWord    DC.B    '.W', 0
00002103= 2E 4C 00                1748  dispLong    DC.B    '.L', 0
00002106                          1749  
00002106= 41 30 00                1750  dispA0      DC.B    'A0', 0
00002109= 41 31 00                1751  dispA1      DC.B    'A1', 0
0000210C= 41 32 00                1752  dispA2      DC.B    'A2', 0
0000210F= 41 33 00                1753  dispA3      DC.B    'A3', 0
00002112= 41 34 00                1754  dispA4      DC.B    'A4', 0
00002115= 41 35 00                1755  dispA5      DC.B    'A5', 0
00002118= 41 36 00                1756  dispA6      DC.B    'A6', 0
0000211B= 41 37 00                1757  dispA7      DC.B    'A7', 0
0000211E                          1758  
0000211E= 44 00                   1759  dispD       DC.B    'D',0
00002120= 44 30 00                1760  dispD0      DC.B    'D0', 0
00002123= 44 31 00                1761  dispD1      DC.B    'D1', 0
00002126= 44 32 00                1762  dispD2      DC.B    'D2', 0
00002129= 44 33 00                1763  dispD3      DC.B    'D3', 0
0000212C= 44 34 00                1764  dispD4      DC.B    'D4', 0
0000212F= 44 35 00                1765  dispD5      DC.B    'D5', 0
00002132= 44 36 00                1766  dispD6      DC.B    'D6', 0
00002135= 44 37 00                1767  dispD7      DC.B    'D7', 0  
00002138                          1768             END    START                ; last line of source

1 error detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLONG             2004
ABSSHORT            1FD2
ADDAMATCH           20E0
ADDMATCH            20DC
ADDMATCHAD          2
ADDMATCHAN          1
ADDMATCHDI          7
ADDMATCHDN          0
ADDMATCHPD          4
ADDMATCHPI          3
ASLMATCH            20F1
ASRMATCH            20ED
BCLRMATCH           2084
BCSMATCH            20B3
BGEMATCH            20BB
BLTMATCH            20BF
BRAEIGHT            110E
BRAELEVEN           1112
BRAFIVE             10DE
BRAFOUR             10C2
BRAFOURTEEN         1116
BRAMATCH            20AF
BRANINE             110E
BRAONE              10B6
BRASIX              10E2
BRATHIRTEEN         1116
BRATHREE            10BE
BRATWELVE           1112
BRATWO              10BA
BRAZERO             1086
BVCMATCH            20B7
CLPER               2075
CMPIMATCH           207F
CMPMATCH            20D3
COMMA               2071
CR                  D
DEC                 2077
DISPA0              2106
DISPA1              2109
DISPA2              210C
DISPA3              210F
DISPA4              2112
DISPA5              2115
DISPA6              2118
DISPA7              211B
DISPBYTE            20FD
DISPD               211E
DISPD0              2120
DISPD1              2123
DISPD2              2126
DISPD3              2129
DISPD4              212C
DISPD5              212F
DISPD6              2132
DISPD7              2135
DISPHEX             206F
DISPIMM             2036
DISPLAYA0           1B4A
DISPLAYA0A          1C16
DISPLAYA0D          1EDA
DISPLAYA0P          1D42
DISPLAYA1           1B5A
DISPLAYA1A          1C32
DISPLAYA1D          1EF6
DISPLAYA1P          1D6A
DISPLAYA2           1B6A
DISPLAYA2A          1C4E
DISPLAYA2D          1F12
DISPLAYA2P          1D92
DISPLAYA3           1B7A
DISPLAYA3A          1C6A
DISPLAYA3D          1F2E
DISPLAYA3P          1DBA
DISPLAYA4           1B8A
DISPLAYA4A          1C86
DISPLAYA4D          1F4A
DISPLAYA4P          1DE2
DISPLAYA5           1B9A
DISPLAYA5A          1CA2
DISPLAYA5D          1F66
DISPLAYA5P          1E0A
DISPLAYA6           1BAA
DISPLAYA6A          1CBE
DISPLAYA6D          1F82
DISPLAYA6P          1E32
DISPLAYA7           1BBA
DISPLAYA7A          1CDA
DISPLAYA7D          1F9E
DISPLAYA7P          1E5A
DISPLAYD0           1A8A
DISPLAYD1           1A9A
DISPLAYD2           1AAA
DISPLAYD3           1ABA
DISPLAYD4           1ACA
DISPLAYD5           1ADA
DISPLAYD6           1AEA
DISPLAYD7           1AFA
DISPLONG            2103
DISPWORD            2100
DIVSMATCH           20C3
EIGHT               8
ELEVEN              B
ENDPROG             2062
ENDSUB              205C
EORMATCH            20CF
FIRSTNIB            F0
FIVE                5
FOUR                4
FOURTEEN            E
HASHTAG             206D
INC                 2079
INVALID             205C
JSRMATCH            209C
LEAMATCH            20A6
LF                  A
LOOP                100C
LSLMATCH            20E9
LSRMATCH            20E5
MOVEAMATCH          208E
MOVEMATCH           2089
MOVEMMATCH          20A0
MULSMATCH           20D7
NEGMATCH            2094
NEWLINE             2066
NINE                9
ONE                 1
OPASL               19CA
OPASR               19D6
OPBCC               114A
OPBCLR              1434
OPBCS               195A
OPBGE               1972
OPBLT               197E
OPBRA               1922
OPBVC               1966
OPCMPI              12C2
OPCMPIB             130E
OPCMPIL             13D2
OPCMPIW             1370
OPDIVS              115C
OPDYNBCLR           1498
OPEOR               1168
OPJSR               1886
OPLEA               1916
OPLSL               19E2
OPLSR               19EE
OPMOVEAL            161A
OPMOVEAW            1714
OPMOVEB             1506
OPMOVEL             158A
OPMOVEM             18FE
OPMOVEMLEA          18E2
OPMOVEW             1684
OPMULS              19BE
OPNEG               177E
OPNEGB              17AC
OPNEGL              17EC
OPNEGW              182C
OPOR                1150
OPORI               116E
OPORIB              119C
OPORIL              1260
OPORIW              11FE
OPPER               2073
OPROL               19FA
OPROR               1A06
OPRTS               18C6
OPRTSJSR            186C
OPSUB               198A
OPSUBQ              1916
ORIMATCH            207B
ORMATCH             20C8
PADDRDEC            1E82
PADDRDIR            1BCA
PADDRPOST           1CF6
PADDRREG            1B0A
PDATAREG            1A4A
PHEX                1FBA
PRINTEA             1A12
PRINTINVALID        2062
REG0                0
REG1                1
REG2                2
REG3                3
REG4                4
REG5                5
REG6                6
REG7                7
ROLMATCH            20F9
RORMATCH            20F5
RTSMATCH            2098
S1B                 0
S1L                 2
S1W                 1
S2L                 1
S2W                 0
S3B                 1
S3L                 2
S3W                 3
SECNIB              F
SEVEN               7
SIX                 6
SPACE               206A
START               1000
SUBMATCH            20CB
SUBQMATCH           20AA
TEST_END            3009
TEST_START          3000
THIRTEEN            D
THREE               3
TWELVE              C
TWO                 2
ZERO                0
